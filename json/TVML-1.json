[
  {
    "title": "decorationLabel",
    "url": "https://developer.apple.com/documentation/tvml/decorationlabel",
    "html": "Overview\n\nThis element is commonly used to provide additional information for a media item or group of media items; for example, the running time for a movie. Here’s an example where the decoration label displays the number of items contained in a listItemLockup element.\n\n<listItemLockup>\n    <title>Comedies</title>\n    <decorationLabel>4</decorationLabel>\n    <relatedContent>\n        <grid>\n            <section>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"250\" height=\"376\" />\n                    <title>Movie 2</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"250\" height=\"376\" />\n                    <title>Movie 1</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375.png\" width=\"250\" height=\"376\" />\n                    <title>Movie 4</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"250\" height=\"376\" />\n                    <title>Movie 3</title>\n                </lockup>\n            </section>\n        </grid>\n    </relatedContent>\n</listItemLockup>\n\nContained In\n\nlistItemLockup\n\nTopics\nValid TVML Styles\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\ntext-align\nAligns text horizontally in an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-text-style\nSets a predefined size and style for text.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\nheight\nSpecifies the maximum height for an image.\nopaque\nIndicates whether an image has a transparent background.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nwidth\nSpecifies the maximum width for an image element.\nSee Also\nText Elements\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "ordinal",
    "url": "https://developer.apple.com/documentation/tvml/ordinal",
    "html": "Overview\n\nThe ordinal element displays a number on the screen and provides proper spacing between the text and the number. Use the ordinal element to create an ordered list. Here’s an example that reserves the spacing for two digits.\n\n<listItemLockup>\n    <ordinal minLength=\"2\">1</ordinal>\n    <title>Opening sequence</title>\n    <decorationLabel>11:14</decorationLabel>\n</listItemLockup>\n\nContained In\n\nlistItemLockup\n\norganizer\n\nTopics\nValid TVML Styles\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-text-style\nSets a predefined size and style for text.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nminLength\nReserves space for an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "max-width",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping-max-width",
    "html": "See Also\nElement Sizing\nheight\nSpecifies the height of an element.\nmax-height\nSpecifies the maximum height for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\nwidth\nSpecifies how wide an element is."
  },
  {
    "title": "format",
    "url": "https://developer.apple.com/documentation/TVML/format",
    "html": "Overview\n\nHere’s an example that sets the date to January 19, 2031.\n\n<date format=\"MMMM dd, yyyy\">2031-01-19</date>\n\nValues for format\nString\n\nThe format for the date string.\n\nElements that Use format\n\ndate\n\nSee Also\nDate Settings\nlocale\nSets the locale for the date element."
  },
  {
    "title": "tv-text-style",
    "url": "https://developer.apple.com/documentation/tvml/tv-text-style",
    "html": "See Also\nText Sizing\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element."
  },
  {
    "title": "type",
    "url": "https://developer.apple.com/documentation/tvml/type",
    "html": "Overview\n\nUse the type attribute to specify whether a badge is filled or an outline.\n\nValues for type\nfill\n\nCompletely fills the badge icon.\n\nstroke\n\nDraws the badge icon as an outline. This is the default value.\n\nElements that Use type\n\ntextBadge\n\nSee Also\nImage Display\naspectFill\nStretches an image to fill the containing bounding box.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nopaque\nIndicates whether an image has a transparent background.\nmode\nSpecifies how an image is displayed.\nvalue\nSpecifies the value used for a fillable element."
  },
  {
    "title": "tv-focus-margin",
    "url": "https://developer.apple.com/documentation/tvml/tv-focus-margin",
    "html": "Overview\n\nImportant\n\ntv-focus-margin can only be used with custom cell elements created in your binary.\n\nValues for tv-focus-margin\nInteger\n\nThe amount of space, in points, around each side of the cell indicating the room needed for a focusable, custom cell element.\n\nInteger, Integer\n\nThe amount of space, in points, around each side of the cell indicating the room needed for a focusable, custom cell element. The first value controls the top and bottom. The second value controls the left and right sides.\n\nInteger, Integer, Integer\n\nThe amount of space, in points, around each side of the cell indicating the room needed for a focusable, custom cell element. The first value controls the top. The second value controls the left and right sides. The third value controls the bottom.\n\nInteger, Integer, Integer, Integer\n\nThe amount of space, in points, around each side of the cell indicating the room needed for a focusable, custom cell element. The first value controls the top. The second value controls the right side. The third value controls the bottom. The fourth value controls the left side.\n\nNote\n\nYou must explicitly set this style for custom cell elements provided by your app binary.\n\nSee Also\nElement Spacing\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\ntv-line-spacing\nSpecifies the amount of space between lines of text."
  },
  {
    "title": "tv-highlight-color",
    "url": "https://developer.apple.com/documentation/tvml/tv-highlight-color",
    "html": "Overview\n\nHere’s an example of how to change a button’s text color when the button comes into focus.\n\n<button>\n   <text style=\"tv-highlight-color:rgb(0,0,255,0.3)\">Push me</text>\n</button>\n\nValues for tv-highlight-color\nrgb(r,g,b)\n\nThe background color of an element, where r,g,b are the red, green, and blue color components, and have a value range from 0-255.\n\nrgba(r,g,b,a)\n\nThe background color of an element, where r,g,b are the red, green, and blue color components, and have a value range from 0-255, and a is the alpha applied to the color, ranging from 0.0-1.0.\n\ntransparent\n\nThe background color of the element, which is transparent.\n\nElements that Use tv-highlight-color\n\nbadge\n\ndecorationLabel\n\ndescription\n\nlistItemLockup\n\nmenuItem\n\nordinal\n\nratingCard\n\nreviewCard\n\nsegmentBar\n\nsubtitle\n\ntext\n\ntitle\n\nSee Also\nColor Styles\nbackground-color\nChanges the background color of an element.\ncolor\nChanges the color of an element.\ntv-tint-color\nSets the tint color for an element."
  },
  {
    "title": "centered",
    "url": "https://developer.apple.com/documentation/tvml/centered",
    "html": "Overview\n\nUse the centered attribute to center items horizontally in a shelf element when there are fewer elements than the shelf length.\n\nValues for centered\nBoolean\n\nThe shelf horizontally centers the elements inside of it when this attribute is set to true.\n\nElements that Use centered\n\nshelf\n\nSee Also\nElement Alignment\nminLength\nReserves space for an element.\nrowCount\nSpecifies the number of rows in a shelf."
  },
  {
    "title": "tv-text-max-lines",
    "url": "https://developer.apple.com/documentation/tvml/tv-text-max-lines",
    "html": "Overview\n\nHere’s an example that shows a text element with a maximum of three lines of text.\n\n<text style=\"tv-text-max-lines:3\">Maximum of 3 lines</text>\n\nValues for tv-text-max-lines\nInteger\n\nThe maximum number of lines to be displayed in an element.\n\nElements that Use tv-text-max-lines\n\ndescription\n\nsubtitle\n\ntext\n\ntitle\n\nSee Also\nText Sizing\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-style\nSets a predefined size and style for text."
  },
  {
    "title": "tv-minimum-scale-factor",
    "url": "https://developer.apple.com/documentation/tvml/tv-minimum-scale-factor",
    "html": "Overview\n\nUse the tv-minimum-scale-factor style for text that does not fit in the available space.\n\nValues for tv-minimum-scale-factor\nFloat\n\nThe maximum amount, as a percentage, that a font can be minimized in order to fit in the available space. Valid values are from 0.0 to 1.0.\n\nElements that Use tv-minimum-scale-factor\n\ndescription\n\nsubtitle\n\ntext\n\ntitle\n\nSee Also\nText Sizing\ntv-text-style\nSets a predefined size and style for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element."
  },
  {
    "title": "date",
    "url": "https://developer.apple.com/documentation/tvml/date",
    "html": "Overview\n\nThe date element contains text used to display the associated date. The date string must be in one of the following formats:\n\nyyyy-MM-dd\n\nISO date format\n\nRFC 1123 date format\n\nHere’s an example that sets the date to January 19, 2031.\n\n<date format=\"MMMM dd, yyyy\">2031-01-19</date>\n\nContained In\n\nbutton\n\nmonogram\n\norganizer\n\nrow\n\nshelf\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nformat\nSpecifies how a date is displayed.\nlocale\nSets the locale for the date element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "strike",
    "url": "https://developer.apple.com/documentation/tvml/strike",
    "html": "Overview\n\nThe strike element creates a single, unbroken line that is displayed through the middle of the text contained in the strike element. It is commonly used to show that a piece of text has been redacted. Here’s an example that draws a line through the “strike through” part of the text.\n\n<text>Example of <strike>strike through</strike> text</text>\n\nContained In\n\ndescription\n\ntext\n\ntitle\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "tv-content-align",
    "url": "https://developer.apple.com/documentation/tvml/tv-content-align",
    "html": "Overview\n\nUse the tv-content-align style to specify how an element should be vertically aligned in its parent element.\n\nHere’s an example that aligns an image to the top of its parent banner:\n\n<banner>\n  <img style=\"tv-content-align:top\" src=\"\" />\n</banner>\n\nValues\ntop\n\nThe element aligns along the top edge of the parent element.\n\ncenter\n\nThe element aligns with the center of the parent element.\n\nbottom\n\nThe element aligns along the bottom edge of the parent element.\n\nElements that Use text-align\n\nshelf\n\ngrid\n\nrow\n\nSee Also\nElement Alignment\ntext-align\nAligns text horizontally in an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-position\nSets the position of an element inside of its parent element."
  },
  {
    "title": "src",
    "url": "https://developer.apple.com/documentation/tvml/src",
    "html": "Overview\n\nThe URL can point to an image on a server or to the resource scheme in your app. For a list of resource images provide by Apple, see the Resource Icons section of TVML. Here’s an example that displays the United States general admission movie rating icon.\n\n<img src=\"resource://mpaa-g\" />\n\n\nNote\n\nWhen this attribute loads an image using an HTTP URL, you must add height and width attributes to the element.\n\nValues for src\nString\n\nThe URL pointing to the location of the image file.\n\nElements that Use src\n\nbadge\n\ndecorationImage\n\nfullscreenImg\n\nheroImg\n\nimg\n\nSee Also\nImage Retrieval\nsrcset\nSpecifies multiple URLs for an image."
  },
  {
    "title": "font-weight",
    "url": "https://developer.apple.com/documentation/tvml/font-weight",
    "html": "Overview\n\nUse the font-weight style to specify how thick or thin a font looks.\n\nValues for font-weight\nblack\n\nA font weight that is thicker than heavy.\n\nbold\n\nA font weight that is thicker than the default.\n\nheavy\n\nA font weight that is thicker than bold.\n\nlight\n\nA font weight that is slightly thinner than the default.\n\nmedium\n\nA font weight that is slightly thicker than default.\n\nregular\n\nThe default font weight.\n\nsemibold\n\nA font weight that is slightly thicker than medium.\n\nthin\n\nA font weight that is thinner than the default.\n\nultralight\n\nA font weight that is thinner and lighter in color than the default.\n\nNote\n\nThe font-weight values from thinnest to thickest are ultralight, thin, light, regular, medium, semibold, bold, heavy, and black.\n\nElements that Use font-weight\n\ndecorationLabel\n\ndescription\n\nmonogram\n\nordinal\n\nsubtitle\n\ntext\n\ntextBadge\n\ntitle\n\nSee Also\nFont Styles\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element."
  },
  {
    "title": "font-family",
    "url": "https://developer.apple.com/documentation/tvml/font-family",
    "html": "See Also\nFont Styles\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element."
  },
  {
    "title": "font-size",
    "url": "https://developer.apple.com/documentation/tvml/font-size",
    "html": "See Also\nFont Styles\nfont-family\nSpecifies the font used for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element."
  },
  {
    "title": "monogram",
    "url": "https://developer.apple.com/documentation/tvml/monogram",
    "html": "Overview\n\nHere’s an example that sets the name Anne Johnson as part of a monogramLockup element.\n\n<monogramLockup>\n   <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n   <title>Anne Johnson</title>\n   <subtitle>Actor</subtitle>\n</monogramLockup>\n\nContained In\n\nmonogramLockup\n\nTopics\nValid TVML Styles\nborder-radius\nChanges the shape of an element’s corner.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nheight\nSpecifies the height of an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-placeholder\nSets a default image for an img or monogram element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nfirstName\nAdds a person’s first name to an element.\nlastName\nAdds a person’s last name to an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "card",
    "url": "https://developer.apple.com/documentation/tvml/card",
    "html": "Overview\n\nThe card element provides the ability to manually arrange its containing elements. It creates a view where the elements it contains are arranged using the tv-align and tv-position styles. Containing elements are centered by default.\n\nElements contained in the same position are arranged from the top of the cell to the bottom, in the same order in which they are specified in the card element. You can specify a <background><img /></background> that displays a background image inside of the card. The background image is top-aligned and is fitted to the size of the card while keeping the image’s original aspect ratio. Text wrapping inside of the card only occurs in the header, center, and footer positions.\n\nSubelements of card\n\nbackground\n\nbadge\n\nbutton\n\nbuttonLockup\n\nimg\n\nordinal\n\nplaceholder\n\nratingBadge\n\nrow\n\nseasonBadge\n\ntext\n\ntextBadge\n\nElements that Use card\n\ngrid\n\nshelf\n\nTopics\nValid TVML Styles\nborder-radius\nChanges the shape of an element’s corner.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nCard Elements\nreviewCard\nDisplays abbreviated review information for a media item.\nratingCard\nContains rating information about a product."
  },
  {
    "title": "height",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping-height",
    "html": "Overview\n\nHere’s an example that shows how to set the height of an image to 376 points.\n\n<img src=\"path to image\" width=\"250\" height=\"376\" />\n\nValues for height\nInteger\n\nThe height of the element, in points. For example, height=\"200\" sets the height of the element to 200 points.\n\nNote\n\nYou must explicitly set this style for custom cell elements provided by your app binary.\n\nElements that Use height\n\nbanner\n\nbutton\n\nheroImg\n\nimg\n\ninfoList\n\nlistItemLockup\n\nmonogram\n\nratingCard\n\nrelatedContent\n\nreviewCard\n\nseparator\n\nstack\n\nSee Also\nElement Sizing\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\nwidth\nSpecifies how wide an element is."
  },
  {
    "title": "max-height",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping-max-height",
    "html": "See Also\nElement Sizing\nheight\nSpecifies the height of an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\nwidth\nSpecifies how wide an element is."
  },
  {
    "title": "min-height",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping-min-height",
    "html": "See Also\nElement Sizing\nheight\nSpecifies the height of an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-width\nSpecifies the minimum width for an element.\nwidth\nSpecifies how wide an element is."
  },
  {
    "title": "color",
    "url": "https://developer.apple.com/documentation/tvml/color",
    "html": "Overview\n\nUse the color style to change the color an an element. Here’s an example of how to change the text color inside of a description element.\n\n<description style=\"color:rgb(0,0,255,0.3)\">Light purple</description>\n\nValues for color\nrgb(r,g,b)\n\nThe background color of an element, where r,g,b are the red, green, and blue color components, and have a value range from 0-255.\n\nrgba(r,g,b,a)\n\nThe background color of an element, where r,g,b are the red, green, and blue color components, and have a value range from 0-255, and a is the alpha applied to the color, ranging from 0.0-1.0.\n\ntransparent\n\nThe background color of the element is transparent.\n\nElements that Use color\n\ndecorationLabel\n\ndescription\n\nordinal\n\nsegmentBar\n\nsubtitle\n\ntext\n\ntextBadge\n\ntitle\n\nSee Also\nColor Styles\nbackground-color\nChanges the background color of an element.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-tint-color\nSets the tint color for an element."
  },
  {
    "title": "monogramLockup",
    "url": "https://developer.apple.com/documentation/tvml/monogramlockup",
    "html": "Overview\n\nThe monogramLockup element creates a white circle that contains the image or initials of the person identified in the title. Use the src element to place an image inside of the circle. If no image is added, initials are centered in the circle, based on the firstName and lastName attributes in the monogram element. Here’s an example of a monogramLockup displaying an actor’s infomation.\n\n<monogramLockup>\n    <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n    <title>Anne Johnson</title>\n    <subtitle>Actor</subtitle>\n</monogramLockup>\n\nSubelements of monogramLockup\n\nmonogram\n\nsubtitle\n\ntitle\n\nElements that Use monogramLockup\n\nsection\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nLockup Elements\nbutton\nDisplays a button icon the user can click to initiate an action.\nbuttonLockup\nCreates a button that can also have a badge associated with it.\nlistItemLockup\nContains a new list item.\nlockup\nContains several elements that are treated as a single element.\noverlay\nDisplays elements on top of other elements."
  },
  {
    "title": "width",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping-width",
    "html": "Overview\n\nUse the width style to change the width of an element. Here’s an example that sets the width of an img element to 250 points.\n\n<img src=\"path to image\" width=\"250\" height=\"376\" />\n\nValues for width\nInteger\n\nThe width of the element, in points. For example, width=\"200\" sets the width of the element to 200 points.\n\nNote\n\nYou must explicitly set this style for custom cell elements provided by your app binary.\n\nElements that Use width\n\nactivityIndicator\n\nbuttonLockup\n\ndescription\n\nheader\n\nheroImg\n\nimg\n\ninfoTable\n\nitemBanner\n\nlist\n\nlockup\n\nmonogram\n\nreviewCard\n\nstack\n\nSee Also\nElement Sizing\nheight\nSpecifies the height of an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element."
  },
  {
    "title": "min-width",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping-min-width",
    "html": "See Also\nElement Sizing\nheight\nSpecifies the height of an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nwidth\nSpecifies how wide an element is."
  },
  {
    "title": "background-color",
    "url": "https://developer.apple.com/documentation/tvml/background-color",
    "html": "Overview\n\nHere’s an example of how to change the background color of a description element.\n\n<description style=\"background-color:rgba(0,0,255,0.3)\">Light purple background</description>\n\nValues for background-color\nrgb(r,g,b)\n\nThe background color of an element, where r,g,b are the red, green, and blue color components, and have a value range from 0-255.\n\nrgba(r,g,b,a)\n\nThe background color of an element, where r,g,b are the red, green, and blue color components, and have a value range from 0-255, and a is the alpha applied to the color, ranging from 0.0-1.0.\n\ntransparent\n\nThe background color of the element, which is transparent.\n\nElements that Use background-color\n\ndescription\n\nratingCard\n\nreviewCard\n\ntextBadge\n\nSee Also\nColor Styles\ncolor\nChanges the color of an element.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-tint-color\nSets the tint color for an element."
  },
  {
    "title": "border-radius",
    "url": "https://developer.apple.com/documentation/tvml/border-radius",
    "html": "Overview\n\nUse the border-radius style to apply rounded corners to elements. Here’s an example that changes the border radius of an img element.\n\n<lockup>\n   <img style=\"border-radius:12\" src=\"path to image\" width=\"250\" height=\"376\" />\n   <title>Movie 1</title>\n</lockup>\n\nValues for border-radius\n4-tuple\n\nAn image whose corners are cropped to the specified radius.\n\ncircle\n\nAn image that is cropped to fit inside of a circle.\n\nlarge\n\nAn image whose corners are cropped to create rounded corners with a large radius.\n\nmedium\n\nAn images whose corners are cropped to create rounded corners with a medium radius.\n\nsmall\n\nAn images whose corners are cropped to create rounded corners with a small radius.\n\nThere are four ways to designate the border-radius style as a 4-tuple:\n\nborder-radius: X1 X2 X3 X4—Where X1 is applied to the top-left corner, X2 is applied to the top-right corner, X3 is applied to the bottom-right corner, and X4 is applied to the bottom-left corner.\n\nborder-radius: X1 X2 X3—Where X1 is applied to the top-left corner, X2 is applied to the top-right and bottom-left corners, and X3 is applied to the bottom-right corner.\n\nborder-radius: X1 X2—Where X1 is applied to the top-left and bottom-right corners, and X2 is applied to the top-right and bottom-left corners.\n\nborder-radius: X1—Where X1 is applied to each corner.\n\nElements that Use border-radius\n\ncard\n\nheroImg\n\nimg\n\nmonogram\n\nratingCard\n\nreviewCard\n\ntextBadge"
  },
  {
    "title": "decorationImage",
    "url": "https://developer.apple.com/documentation/tvml/decorationimage",
    "html": "Overview\n\nThe decorationImage element contains a link to an image that is displayed. Here’s an example that displays a chevron image.\n\n<decorationImage src=\"resource://list-chevron\" />\n\nContained In\n\nlistItemLockup\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nValid TVML Attributes\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nsrc\nSpecifies the URL for an image.\nsrcset\nSpecifies multiple URLs for an image.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nImage Elements\nfullscreenImg\nDisplays an image over an entire element.\nheroImg\nDisplays an image that is usually large and detailed.\nimg\nDisplays an image."
  },
  {
    "title": "playbackMode",
    "url": "https://developer.apple.com/documentation/tvml/playbackmode",
    "html": "See Also\nInline Playback\naudioMode\nSpecifies how audio is played during inline playback."
  },
  {
    "title": "audioMode",
    "url": "https://developer.apple.com/documentation/tvml/audiomode",
    "html": "See Also\nInline Playback\nplaybackMode\nSpecifies when inline playback of a media item starts."
  },
  {
    "title": "overlay",
    "url": "https://developer.apple.com/documentation/tvml/overlay",
    "html": "Overview\n\nThe overlay element provides the ability to place elements on top of images contained within a lockup element. The overlay element superimposes the elements it contains over an image. The overlay element creates a view where the elements it contains are arranged using the tv-align and tv-position styles. Containing elements are centered by default.\n\nElements contained in the same position are arranged from the top of the cell to the bottom, in the same order in which they are specified in the overlay element. You can specify a <background><img /></background> that displays a background image inside of the overlay. The background image is top-aligned and is fitted to the size of the overlay while keeping the image’s original aspect ratio. Text wrapping inside of the overlay only occurs in the header, center, and footer positions.\n\nSubelements of overlay\n\nbadge\n\ndescription\n\nprogressBar\n\nsubtitle\n\ntitle\n\nElements that Use overlay\n\nlockup\n\nTopics\nValid TVML Styles\npadding\nSpecifies the padding between the border and contents of an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-position\nSets the position of an element inside of its parent element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nLockup Elements\nbutton\nDisplays a button icon the user can click to initiate an action.\nbuttonLockup\nCreates a button that can also have a badge associated with it.\nlistItemLockup\nContains a new list item.\nlockup\nContains several elements that are treated as a single element.\nmonogramLockup\nCreates a monogram using a person’s image or initials."
  },
  {
    "title": "asset",
    "url": "https://developer.apple.com/documentation/tvml/asset",
    "html": "Overview\n\nThe asset element is commonly used to play audio in the background of a TVML page.\n\nContained In\n\naudio\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\nsrc\nSpecifies the URL for an image.\ntheme\nSets the color scheme for an element.\nSee Also\nMultimedia Elements\nrelatedContentURL\nContains the URL for the displayed content.\nsearchField\nDisplays an interactive text field used to search for content.\ntextField\nDisplays a text field the user can interact with.\nmediaContent\nContains information used to play inline audio or video."
  },
  {
    "title": "mediaContent",
    "url": "https://developer.apple.com/documentation/tvml/mediacontent",
    "html": "Overview\n\nAccess the embedded player using mediaContent.getFeature('Player'); in your TVMLKit JS file. Create the required media items and push them onto the playlist. Assign the new playlist to your inline player to begin playback.\n\nSubelements of mediaContent\n\nimg\n\nElements that Use mediaContent\n\ndivTemplate\n\nlockup\n\nbackground\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\naudioMode\nSpecifies how audio is played during inline playback.\nplaybackMode\nSpecifies when inline playback of a media item starts.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nMultimedia Elements\nasset\nContains information about where a media item is stored.\nrelatedContentURL\nContains the URL for the displayed content.\nsearchField\nDisplays an interactive text field used to search for content.\ntextField\nDisplays a text field the user can interact with."
  },
  {
    "title": "relatedContentURL",
    "url": "https://developer.apple.com/documentation/tvml/relatedcontenturl",
    "html": "Topics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nMultimedia Elements\nasset\nContains information about where a media item is stored.\nsearchField\nDisplays an interactive text field used to search for content.\ntextField\nDisplays a text field the user can interact with.\nmediaContent\nContains information used to play inline audio or video."
  },
  {
    "title": "specialize",
    "url": "https://developer.apple.com/documentation/tvml/specialize",
    "html": "Overview\n\nThe specialize element is used to modify an existing element based on a data query. Combine the query with parameters contained in your JSON data to determine how to modify an existing element. Here’s an example that changes the text for a button if the user has started watching a media item, but hasn’t finished it.\n\n<specialize state=\"({progress}-greater-than:0) and ({progress}-less-than:1)\">\n    <button tag=\"button\">\n        <text>Resume</text>\n    </button>\n</specialize>\n\nSubelements of specialize\n\nThe specialize element can contain any element.\n\nElements that Use specialize\n\nrules\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBinding Elements\nprototypes\nDefines a group of elements that can be reused through binding.\nrules\nContains the elements used in data binding and media queries."
  },
  {
    "title": "tv-line-spacing",
    "url": "https://developer.apple.com/documentation/tvml/tv-line-spacing",
    "html": "Overview\n\nUse the tv-line-spacing style to set the amount of space between lines of text. Here’s an example that sets the amount of space between lines of text in a infoTable element.\n\n<infoTable style=\"tv-line-spacing:10;\">\n    <header>\n        <title>Accessibility</title>\n    </header>\n    <info>\n        <header>\n            <textBadge>SDH</textBadge>\n        </header>\n        <text>Subtitles for the deaf and Hard of Hearing (SDH) refer to subtitles in the original lanuage with the addition of relevant non-dialog information.</text>\n    </info>\n</infoTable>\n\nValues for tv-line-spacing\nFloat\n\nThe amount of space, in points, between lines of text.\n\nElements that Use tv-line-spacing\n\ngrid\n\ninfo\n\ninfoTable\n\nSee Also\nElement Spacing\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-focus-margin\nSpecifies the amount of space required for a custom cell element in focus.\ntv-interitem-spacing\nSpecifies the spacing between child elements."
  },
  {
    "title": "tv-interitem-spacing",
    "url": "https://developer.apple.com/documentation/tvml/tv-interitem-spacing",
    "html": "See Also\nElement Spacing\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-focus-margin\nSpecifies the amount of space required for a custom cell element in focus.\ntv-line-spacing\nSpecifies the amount of space between lines of text."
  },
  {
    "title": "padding",
    "url": "https://developer.apple.com/documentation/tvml/padding",
    "html": "See Also\nElement Spacing\nmargin\nSpecifies the spacing around an element.\ntv-focus-margin\nSpecifies the amount of space required for a custom cell element in focus.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\ntv-line-spacing\nSpecifies the amount of space between lines of text."
  },
  {
    "title": "rowCount",
    "url": "https://developer.apple.com/documentation/tvml/rowcount",
    "html": "Overview\n\nItems inside of the shelf fill up a column before moving to the next column.\n\nValues for rowCount\nInteger\n\nThe number of rows contained inside of a shelf.\n\nValues that Use rowCount\n\nshelf\n\nSee Also\nElement Alignment\ncentered\nCenters media items in a shelf.\nminLength\nReserves space for an element."
  },
  {
    "title": "{property-path}",
    "url": "https://developer.apple.com/documentation/tvml/property-path",
    "html": "Overview\n\nThe {property-path} query is used with data binding to determine whether one value is equal to another. Bind a value from your JSON file to a variable associated with the query. If the property-path is equal to the designated value, the element is processed.\n\nFor example, you want to change the title of a movie if the user has never watched it. Add a specialize element that contains a {property-path} query. If the timesPlayed variable is equal to 0, color the title white.\n\n<specialize state=\"({timesPlayed}:0)\">\n    <title tag=\"title\" style=\"color:white\"/>\n</specialize>\n"
  },
  {
    "title": "showsScrollIndicator",
    "url": "https://developer.apple.com/documentation/tvml/showsscrollindicator",
    "html": "Overview\n\nFor left-to-right languages, the scroll indicator is on the right side of the element. For right-to-left languages, the scroll indicator is on the left side of the element.\n\nValues for showsScrollIndicator\nBoolean\n\nWhen set to true, displays the scroll indicator.\n\nElements that Use showsScrollIndicator\n\ndescription element inside of a descriptiveAlertTemplate element.\n\nSee Also\nScrolling\nindexTitles\nSpecifies index bar titles for a section element."
  },
  {
    "title": "stack",
    "url": "https://developer.apple.com/documentation/tvml/stack",
    "html": "Overview\n\nThe stack element groups elements together and lays them out vertically, starting from the top of the containing element. Each element is placed directly underneath the preceding element.\n\n<stack>\n    <title>WWDC Road Trip</title>\n    <row>\n        <text><badge src=\"resource://tomato-fresh\"/> 99%</text>\n        <text>1hr 54min</text>\n        <text>Comedy</text>\n        <text>2015</text>\n        <badge src=\"resource://mpaa-pg\" class=\"badge\" />\n        <badge src=\"resource://cc\" class=\"badge\" />\n    </row>\n    <description handlesOverflow=\"true\">An aspiring developer gets a ticket to WWDC, but can't afford to fly there. Now they need to get across country in time for the keynote, and the only person who can help is their quirky roommate.</description>\n    <text>Language information can go here</text>\n    <row>\n        <buttonLockup>\n            <badge src=\"resource://button-preview\" />\n            <title>Preview</title>\n        </buttonLockup>\n        <buttonLockup type=\"buy\">\n            <text>$9.99</text>\n            <title>Buy</title>\n        </buttonLockup>\n    </row>\n</stack>\n\nSubelements of stack\n\ndescription\n\nratingCard\n\nreviewCard\n\nrow\n\nsubtitle\n\ntext\n\ntitle\n\nElements that Use stack\n\nbanner\n\nshelf\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "accessibilityText",
    "url": "https://developer.apple.com/documentation/tvml/accessibilitytext",
    "html": "Overview\n\nText that you add using the accessibilityText attribute is produced as audio when the element comes into focus. This attribute is only available when VoiceOver is enabled on Apple TV.\n\nValues for accessibilityText\nString\n\nThe text to be spoken when the element comes into focus.\n\nElements that Use accessibilityText\n\ndecorationLabel\n\ndescription\n\nfullscreenImg\n\nheroImg\n\nimg\n\nsubtitle\n\ntext\n\ntitle\n\nSee Also\nText Attributes\nfirstName\nAdds a person’s first name to an element.\nlastName\nAdds a person’s last name to an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nsecure\nHides typed text.\nshowSpinner\nDisplays a rotating spinner icon inside of a search field."
  },
  {
    "title": "indexTitles",
    "url": "https://developer.apple.com/documentation/tvml/indextitles",
    "html": "Overview\n\nIndex titles only appear when the user activates fast scrolling.\n\nValues for indexTitles\nString\n\nThe indices displayed on the index bar. Each index pair is a space-separated value. For example, indexTitles=”0 A 109 D 198 G” creates an index bar with three entries, A, D, and G, which fast scrolls the focuses to indexes 0, 109, and 198, respectively.\n\nElements that Use indextitles\n\nsection\n\nSee Also\nScrolling\nshowsScrollIndicator\nShows a scroll indicator along the side of an element appropriate for the user’s specified language."
  },
  {
    "title": "text-align",
    "url": "https://developer.apple.com/documentation/tvml/text-align",
    "html": "Overview\n\nUse the text-align style to specify how the text should be horizontally aligned in an element.\n\nHere’s an example that horizontally centers the text in a title element:\n\n<title style=\"text-align:center\">This text is horizontally centered.</title>\n\nValues\nleft\n\nThe text aligns along the left edge of the containing element.\n\nright\n\nThe text aligns along the right edge of the containing element.\n\ncenter\n\nThe text aligns with the center of the containing element.\n\njustified\n\nThe text is justified in the containing element.\n\nnatural\n\nThe text aligns based on the default alignment associated with the current localization of the app. The default for left-to-right scripts is left-alignment along the left edge of the containing element. The default alignment for right-to-left scripts is right-alignment along the right edge of the containing element.\n\nElements that Use text-align\n\ntext\n\ntitle\n\nsubtitle\n\ndecorationLabel\n\ndescription\n\nSee Also\nElement Alignment\ntv-align\nAligns an element horizontally inside its parent.\ntv-content-align\nAligns an element vertically inside its parent element.\ntv-position\nSets the position of an element inside of its parent element."
  },
  {
    "title": "firstName",
    "url": "https://developer.apple.com/documentation/tvml/firstname",
    "html": "Overview\n\nHere’s an example that sets the first name for a monogram.\n\n<monogramLockup>\n    <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n    <title>Anne Johnson</title>\n    <subtitle>Actor</subtitle>\n</monogramLockup>\n\nValues for firstName\nString\n\nThe first name of a person.\n\nElements that Use firstName\n\nmonogram\n\nSee Also\nText Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nlastName\nAdds a person’s last name to an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nsecure\nHides typed text.\nshowSpinner\nDisplays a rotating spinner icon inside of a search field."
  },
  {
    "title": "audio",
    "url": "https://developer.apple.com/documentation/tvml/audio",
    "html": "Overview\n\nEach document page that plays audio in the background must have its own audio element. If the same URL is used between pages, audio will continue to play when the new page is displayed. The audio element only supports unencrypted audio.\n\n<audio>\n    <asset />\n</audio>\n\nSubelements of audio\n\nasset\n\nElements that Use audio\n\nbackground\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBackground Elements\nbackground\nDisplays an image or plays audio in the background of a channel app page."
  },
  {
    "title": "prototypes",
    "url": "https://developer.apple.com/documentation/tvml/prototypes",
    "html": "Overview\n\nThe prototypes element is used to bind data item types, simplifying the template layout. A single binding definition provides the ability to display any number of data items. For more information on data binding, see TVML Programming Guide. Here’s an example that uses the prototypes element to display an undefined number of lockup elements.\n\n<prototypes>\n    <lockup prototype=\"artwork\">\n        <img binding=\"@src:{url};\" width=\"200\" height=\"300\"/>\n        <title binding=\"textContent:{title};\" />\n    </lockup>\n</prototypes>\n<section binding=\"items:{images};\" />\n\nSubelements of prototypes\n\nprototypes can contain any element that can be contained by a section element. The child elements must implement the prototype attribute to bind the correct data items.\n\nElements that Use prototypes\n\nThe prototypes element can be a used by any element.\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBinding Elements\nrules\nContains the elements used in data binding and media queries.\nspecialize\nImplements queries used for data binding."
  },
  {
    "title": "menuItem",
    "url": "https://developer.apple.com/documentation/tvml/menuitem",
    "html": "Overview\n\nOne or more menuItem elements are used inside of a menuBar element to indicate the available elements. Here’s an example with two items inside of a menu bar.\n\n<menuBar>\n   <menuItem id=\"navigation_top_movies\" data-identifier=\"list\">\n      <title>Top Movies</title>\n   </menuItem>\n   <menuItem id=\"navigation_genres\" data-identifier=\"index\">\n      <title>Genres</title>\n   </menuItem>\n</menuBar>\n\nSubelements of menuItem\n\ntitle\n\nElements that Use menuItem\n\nmenuBar\n\nsection\n\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "section",
    "url": "https://developer.apple.com/documentation/tvml/section",
    "html": "Overview\n\nThe section element groups elements together so they can be treated as a single element for layout purposes. Here’s an example that uses a section to hold two movie lockup elements and places them in a shelf element.\n\n<shelf>\n    <header>\n        <title>Viewers Also Watched</title>\n    </header>\n    <section>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"150\" height=\"226\" />\n            <title>Turn</title>\n        </lockup>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"150\" height=\"226\" />\n            <title>Road</title>\n        </lockup>\n    </section>\n</shelf>\n\nSubelements of section\n\nheader\n\nlistItemLockup\n\nlockup\n\nmenuItem\n\nElements that Use section\n\ncarousel\n\ngrid\n\nlist\n\nmenuBar\n\noneupTemplate\n\nshelf\n\nTopics\nValid TVML Styles\ntv-interitem-spacing\nSpecifies the spacing between child elements.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nindexTitles\nSpecifies index bar titles for a section element.\nitemID\nMark elements for reuse during DOM updates.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "relatedContent",
    "url": "https://developer.apple.com/documentation/tvml/relatedcontent",
    "html": "Overview\n\nThis element is often used to display the related content when another element is brought into focus. Here’s an example that contains a lockup inside of a relatedContent element.\n\n<relatedContent>\n    <lockup>\n        <img src=\"path to image goes here\" />\n        <title>Title 1</title>\n    </lockup>\n</relatedContent\n\nSubelements of relatedContent\n\nactivityIndicator\n\ngrid\n\nheroImg\n\nitemBanner\n\nlockup\n\nElements that Use relatedContent\n\nlist\n\nlistItemLockup\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nRelated Information Elements\nplaceholder\nContains elements that are not directly evaluated by the template."
  },
  {
    "title": "aspectFill",
    "url": "https://developer.apple.com/documentation/tvml/aspectfill",
    "html": "Overview\n\nUse the aspectFill attribute to display an image that fills the bounding box while keeping the aspect of image intact.\n\nValues for aspectFill\nboolean\n\nThe image fills the entire screen when set to true.\n\nElements that use aspectFill\n\nimg inside of a oneupTemplate element only\n\nSee Also\nImage Display\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nopaque\nIndicates whether an image has a transparent background.\nmode\nSpecifies how an image is displayed.\ntype\nSpecifies how a badge is drawn.\nvalue\nSpecifies the value used for a fillable element."
  },
  {
    "title": "width",
    "url": "https://developer.apple.com/documentation/tvml/image-attributes-width",
    "html": "Overview\n\nThe image is shrunk to fit the bounding box if the image is bigger than the size specified for the width attribute. You must declare either a width style or attribute for an image. Declaring a style overwrites an attribute declaration. Here’s an example that sets the width for an image to 200 points.\n\n<img src=\"resource://mpaa-g\" width=\"200\">\n\nValues for width\nInteger\n\nThe width of the element, in points.\n\nElements that Use width\n\ndecorationLabel\n\nfullscreenImg\n\nheroImg\n\nimg\n\nNote\n\nWhen an image is a child of a lockup element, the longest dimension of the image must be 70 points longer than the corresponding bounding box dimension.\n\nSee Also\nImage Size\nheight\nSpecifies the maximum height for an image.\naspectRatio\nSpecifies the aspect ratio of an image."
  },
  {
    "title": "format",
    "url": "https://developer.apple.com/documentation/tvml/format",
    "html": "Overview\n\nHere’s an example that sets the date to January 19, 2031.\n\n<date format=\"MMMM dd, yyyy\">2031-01-19</date>\n\nValues for format\nString\n\nThe format for the date string.\n\nElements that Use format\n\ndate\n\nSee Also\nDate Settings\nlocale\nSets the locale for the date element."
  },
  {
    "title": "contentsMode",
    "url": "https://developer.apple.com/documentation/tvml/contentsmode",
    "html": "Overview\n\nUse the contentsMode attribute to specify how the image is scaled within its bounding box. Here’s an example that demonstrates the contentsMode attribute in a stackTemplate:\n\n<document>\n    <stackTemplate>\n        <banner>\n            <title>contentsMode</title>\n        </banner>\n        <collectionList>\n            <shelf>\n                <section>\n                    <lockup>\n                        <img contentsMode=\"aspectFit\" width=\"600\" height=\"300\" aspectRatio=\"1:1\" src=\"path to images on your server/Car_Movie_200x200.png\"/>\n                        <title>aspectFit</title>\n                    </lockup>\n                    <lockup>\n                        <img contentsMode=\"aspectFitBB\" width=\"600\" height=\"300\" src=\"path to images on your server/Car_Movie_200x200.png\"/>\n                        <title>aspectFitBB</title>\n                    </lockup>\n                    <lockup>\n                        <img contentsMode=\"aspectFill\" width=\"600\" height=\"300\" src=\"path to images on your server/Car_Movie_200x200.png\" contentsMode=\"aspectFill\"/>\n                        <title>aspectFill</title>\n                    </lockup>\n                </section>\n            </shelf>\n        </collectionList>\n    </stackTemplate>\n</document>\n\n\nImportant\n\nWhen using the aspectFit value, you must also include the aspectRatio attribute for the content to scale appropriately.\n\nValues\naspectFit\n\nThe image scales to fit in the bounding box using fixed aspect ratio. The output bounding box has the same size as the scaled image, leaving no remaining area. The output bounding box may be smaller than its specified size.\n\naspectFitBB\n\nThe image scales to fit in the bounding box using fixed aspect ratio. The output bounding box keeps its specified size. Any unfilled area of the bounding box is white.\n\naspectFill\n\nThe image scales to fill in the bounding box using fixed aspect ratio. Portions of the image may be clipped.\n\nElements That Use contentsMode\n\nimg\n\nSee Also\nImage Display\naspectFill\nStretches an image to fill the containing bounding box.\nopaque\nIndicates whether an image has a transparent background.\nmode\nSpecifies how an image is displayed.\ntype\nSpecifies how a badge is drawn.\nvalue\nSpecifies the value used for a fillable element."
  },
  {
    "title": "height",
    "url": "https://developer.apple.com/documentation/tvml/image-attributes-height",
    "html": "Overview\n\nThe image is shrunk to fit the bounding box if the image is bigger than the size specified for the height attribute. You must declare either a height style or attribute for an image. Declaring a style overwrites an attribute declaration. Here’s an example that sets the height of the image to 200 points.\n\n<img src=\"resource://mpaa-g\" height=\"200\">\n\nValues for height\nInteger\n\nThe height of the element, in points.\n\nElements that Use height\n\ndecorationLabel\n\nfullscreenImg\n\nheroImg\n\nimg\n\nSee Also\nImage Size\nwidth\nSpecifies the maximum width for an image element.\naspectRatio\nSpecifies the aspect ratio of an image."
  },
  {
    "title": "locale",
    "url": "https://developer.apple.com/documentation/tvml/locale",
    "html": "Overview\n\nHere’s an example that sets the locale to Thai, which uses the Buddhist calendar. The date displayed is January 19, 2031 based on the format attribute.\n\n<date format=\"MMMM dd, yyyy\" locale=\"th_TH\">2574-01-19</date>\n\nValues for locale\n<language>_<country>\n\nThe locale format the date is in.\n\nElements that Use locale\n\ndate\n\nSee Also\nDate Settings\nformat\nSpecifies how a date is displayed."
  },
  {
    "title": "srcset",
    "url": "https://developer.apple.com/documentation/tvml/srcset",
    "html": "Overview\n\nUse the srcset attribute to specify different URLs for an image depending on the situation. The URL can point to an image on a server or to the resource scheme in your app. For a list of resource images provide by Apple, see the Resource Icons section of TVML. Here’s an example that displays a different chevron image depending whether the current language is a left-to-right or right-to-left language.\n\n<img srcset=\"resource://chevron-right.png (layout-direction: ltr), resource://chevron-left.png (layout-direction: rtl)\" />\n\n\nsrcset is also used to specify images for 4K devices. Non-4K images are indicated with a 1x, while 4K images are indicated with a 2x. Here’s an example showing how to specify different images for 4K and non-4K devies.\n\n<img srcset=\"imageURL1 1x, imageURL2 2x\" />\n\n\nNote\n\nWhen this attribute loads an image using an HTTP URL, you must add height and width attributes to the element.\n\nValues for srcset\nString\n\nThe URL pointing to the location of the image file.\n\nElements that Use srcset\n\nbadge\n\ndecorationImage\n\nfullscreenImg\n\nheroImg\n\nimg\n\nSee Also\nImage Retrieval\nsrc\nSpecifies the URL for an image."
  },
  {
    "title": "opaque",
    "url": "https://developer.apple.com/documentation/tvml/opaque",
    "html": "See Also\nImage Display\naspectFill\nStretches an image to fill the containing bounding box.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nmode\nSpecifies how an image is displayed.\ntype\nSpecifies how a badge is drawn.\nvalue\nSpecifies the value used for a fillable element."
  },
  {
    "title": "aspectRatio",
    "url": "https://developer.apple.com/documentation/tvml/aspectratio",
    "html": "Overview\n\nUse the aspectRatio attribute when setting the image’s contentsMode to provide TVMLKit with the context needed to determine how to fit the source image in the view port.\n\nThe attribute’s value should correlate with the aspect ratio of the source image. The value is a double derived by dividing the width of the aspect ratio by the height. Here’s an example that demonstrates the aspectRatio attribute used to specify a source image with a 3 to 2 width to height ratio.\n\n<img contentsMode=\"aspectFit\" width=\"300\" height=\"200\" aspectRatio=\"1.5\" src=\"path to images on your server/Car_Movie_300x200.png\"/>\n\nElements that Use aspectRatio\n\ncontentsMode\n\nSee Also\nImage Size\nheight\nSpecifies the maximum height for an image.\nwidth\nSpecifies the maximum width for an image element."
  },
  {
    "title": "disabled",
    "url": "https://developer.apple.com/documentation/tvml/disabled",
    "html": "Overview\n\nChild elements inherit this attribute from their parent element.\n\nValues for disabled\nBoolean\n\nCannot come into focus when set to true.\n\nElements that Use disabled\n\nAll full-page templates\n\nAny focusable element\n\nSee Also\nFocus Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nhandlesOverflow\nAdds the “MORE” label to a description."
  },
  {
    "title": "handlesOverflow",
    "url": "https://developer.apple.com/documentation/tvml/handlesoverflow",
    "html": "Overview\n\nUse the handlesOverflow attribute to enable a description element to become focusable and display the “MORE” label when the inner text does not fit in the displayable area.\n\nValues for handlesOverflow\nfalse\n\nBoolean value that indicates that the description element is not focusable.\n\ntrue\n\nBoolean value that indicates that the element is focusable and displays the “MORE” tag when needed.\n\nElements that Use handlesOverflow\n\ndescription\n\nSee Also\nFocus Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\ndisabled\nSets an element as unfocusable."
  },
  {
    "title": "tv-scrollable-bounds-inset-top",
    "url": "https://developer.apple.com/documentation/tvml/tv-scrollable-bounds-inset-top",
    "html": "Overview\n\nThe tv-scrollable-bounds-inset-top style creates an unscrollable region of a specified number of points down from the top of the stackTemplate.\n\nUse the tv-scrollable-bounds-inset-top style to create an inset only at the top, without creating an inset at the bottom.\n\nHere’s an example that sets the inset at the top to 100 points.\n\n<stackTemplate style=\"tv-scrollable-bounds-inset-top: 100.0\">\n    <banner>\n        …\n    </banner>\n    <collectionList>\n        <shelf>\n            <section>\n                <lockup>…</lockup>\n            </section>\n        </shelf>\n    </collectionList>\n</stackTemplate>\n\nElements That Use tv-scrollable-bounds-inset-top\n\nstackTemplate\n\nSee Also\nSpecifying Inset Location\ntv-scrollable-bounds-inset-bottom\nSpecifies the size of an unscrollable region only at the bottom of the stack template."
  },
  {
    "title": "badge",
    "url": "https://developer.apple.com/documentation/tvml/badge",
    "html": "Overview\n\nThe badge element contains a link to a small image that is displayed, often with another image. This element is commonly used to display images that provide additional information about the element in which they are contained. The following listing shows an example of a badge element.\n\n<badge src=\"Path to image\" alt=\"additional identifier\" accessibility=\"\" />\n\nContained In\n\nbuttonLockup\n\nheader\n\nlockup\n\norganizer\n\noverlay\n\nrow\n\ntext\n\ntitle\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-tint-color\nSets the tint color for an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\nsrc\nSpecifies the URL for an image.\nsrcset\nSpecifies multiple URLs for an image.\ntheme\nSets the color scheme for an element.\nSee Also\nBadge Elements\nratingBadge\nDisplays an image used to rate a product.\nseasonBadge\nDisplays an image that indicates the season for an associated media item.\ntextBadge\nDisplays text associated with an image."
  },
  {
    "title": "fullscreenImg",
    "url": "https://developer.apple.com/documentation/tvml/fullscreenimg",
    "html": "Overview\n\nThe fullscreenImg element contains a link to an image that is to be displayed over an entire element. Typically this is used to display an image that fills the entire screen. Here’s an example that shows how to place a full screen image.\n\n<fullscreenImg src=\"path to server/image\" />\n\nContained In\n\nlockup\n\nTopics\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nheight\nSpecifies the maximum height for an image.\nopaque\nIndicates whether an image has a transparent background.\nprototype\nAssociates a data item type with an element.\nsrc\nSpecifies the URL for an image.\nsrcset\nSpecifies multiple URLs for an image.\nwidth\nSpecifies the maximum width for an image element.\ntheme\nSets the color scheme for an element.\nSee Also\nImage Elements\ndecorationImage\nDisplays images inside of other elements.\nheroImg\nDisplays an image that is usually large and detailed.\nimg\nDisplays an image."
  },
  {
    "title": "tv-scrollable-bounds-inset-bottom",
    "url": "https://developer.apple.com/documentation/tvml/tv-scrollable-bounds-inset-bottom",
    "html": "Overview\n\nThe tv-scrollable-bounds-inset-bottom style creates an unscrollable region of a specified number of points up from the bottom of the stackTemplate.\n\nUse the tv-scrollable-bounds-inset-bottom style to create an inset only at the bottom, without creating an inset at the top.\n\nHere’s an example that sets the inset at the bottom to 100 points.\n\n<stackTemplate style=\"tv-scrollable-bounds-inset-bottom: 100.0\">\n    <banner>\n        …\n    </banner>\n    <collectionList>\n        <shelf>\n            <section>\n                <lockup>…</lockup>\n            </section>\n        </shelf>\n    </collectionList>\n</stackTemplate>\n\nElements That Use tv-scrollable-bounds-inset-bottom\n\nstackTemplate\n\nSee Also\nSpecifying Inset Location\ntv-scrollable-bounds-inset-top\nSpecifies the size of an unscrollable region only at the top of the stack template."
  },
  {
    "title": "ratingBadge",
    "url": "https://developer.apple.com/documentation/tvml/ratingbadge",
    "html": "Overview\n\nThe ratingBadge element contains a link to an image that is to be displayed. This element is commonly used to display a small image inside of a reviewCard element. Here’s an example of a review with a fresh rating from Rotten Tomatoes.\n\n<reviewCard>\n    <breviewBadge src=\"resource://tomato-fresh-m\" />\n    <title>WWDC Review</title>\n    <description>Brief review here</description>\n    <text>Ravi Patel June, 8 2015</text>\n</reviewCard>\n\nContained In\n\norganizer\n\nratingCard\n\nreviewCard\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-tint-color\nSets the tint color for an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nvalue\nSpecifies the value used for a fillable element.\nSee Also\nBadge Elements\nbadge\nA small image displayed alongside or on top of another image.\nseasonBadge\nDisplays an image that indicates the season for an associated media item.\ntextBadge\nDisplays text associated with an image."
  },
  {
    "title": "margin",
    "url": "https://developer.apple.com/documentation/tvml/margin",
    "html": "See Also\nElement Spacing\npadding\nSpecifies the padding between the border and contents of an element.\ntv-focus-margin\nSpecifies the amount of space required for a custom cell element in focus.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\ntv-line-spacing\nSpecifies the amount of space between lines of text."
  },
  {
    "title": "tv-tint-color",
    "url": "https://developer.apple.com/documentation/tvml/tv-tint-color",
    "html": "See Also\nColor Styles\nbackground-color\nChanges the background color of an element.\ncolor\nChanges the color of an element.\ntv-highlight-color\nChanges an element’s color when it comes into focus."
  },
  {
    "title": "seasonBadge",
    "url": "https://developer.apple.com/documentation/tvml/seasonbadge",
    "html": "Overview\n\nThe seasonBadge element contains a link to an image that is to be displayed. This element is commonly used to display an image or number that indicates the season for a television show.\n\nContained In\n\norganizer\n\nreviewCard\n\nTopics\nValid TVML Styles\ntv-tint-color\nSets the tint color for an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBadge Elements\nbadge\nA small image displayed alongside or on top of another image.\nratingBadge\nDisplays an image used to rate a product.\ntextBadge\nDisplays text associated with an image."
  },
  {
    "title": "Text Elements",
    "url": "https://developer.apple.com/documentation/tvml/text-elements",
    "html": "Topics\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text.\nSee Also\nSimple Elements\nDisplay Elements\nDisplay a visual element, such as an image, badge, or progress overlay.\nMultimedia Elements\nProvide the user the ability to stream audio and search for information stored on a server."
  },
  {
    "title": "value",
    "url": "https://developer.apple.com/documentation/tvml/value",
    "html": "Overview\n\nUse the value attribute to set the amount of area that is filled in, as a percentage.\n\nValues for value\nFloat\n\nThe amount of area that is filled in, as a percentage. This can be a value between 0.0 and 1.0, with 1.0 being equal to 100%.\n\nElements that Use value\n\nprogressBar\n\nratingBadge\n\nSee Also\nImage Display\naspectFill\nStretches an image to fill the containing bounding box.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nopaque\nIndicates whether an image has a transparent background.\nmode\nSpecifies how an image is displayed.\ntype\nSpecifies how a badge is drawn."
  },
  {
    "title": "Element Alignment and Spacing",
    "url": "https://developer.apple.com/documentation/tvml/element-alignment-and-spacing",
    "html": "Topics\nElement Alignment\ntext-align\nAligns text horizontally in an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-content-align\nAligns an element vertically inside its parent element.\ntv-position\nSets the position of an element inside of its parent element.\nElement Spacing\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-focus-margin\nSpecifies the amount of space required for a custom cell element in focus.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\ntv-line-spacing\nSpecifies the amount of space between lines of text.\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "infoTable",
    "url": "https://developer.apple.com/documentation/tvml/infotable",
    "html": "Overview\n\nHere’s an example that displays information vertically inside of a ratingCard element.\n\n<ratingCard>\n    <title><badge src=\"resource://tomato-fresh\" /> 99%</title>\n    <text>Tomatometer</text>\n    <infoTable>\n        <info>\n            <header>\n                <title>175</title>\n            </header>\n            <text>Reviews</text>\n        </info>\n        <info>\n            <header>\n                <title>173</title>\n            </header>\n            <text>Fresh</text>\n        </info>\n        <info>\n            <header>\n                <title>2</title>\n            </header>\n            <text>Rotten</text>\n        </info>\n    </infoTable>\n</ratingCard>\n\nSubelements of infoTable\n\nfooter\n\nheader\n\ninfo\n\nElements that Use infoTable\n\ndescriptiveAlertTemplate\n\nproductInfo\n\nratingCard\n\nrelatedContent\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\ntv-line-spacing\nSpecifies the amount of space between lines of text.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "organizer",
    "url": "https://developer.apple.com/documentation/tvml/organizer",
    "html": "Overview\n\nThe organizer element provides the ability to manually arrange its containing elements. The organizer element creates a view where the elements it contains are arranged using the tv-align and tv-position styles. Containing elements are centered by default.\n\nElements contained in the same position are arranged from the top of the cell to the bottom, in the same order in which they are specified in the organizer element. You can specify a <background><img /></background> that displays a background image inside of the organizer. The background image is top-aligned and is fitted to the size of the organizer while keeping the image’s original aspect ratio. Text wrapping inside of the organizer only occurs in the header, center, and footer positions.\n\nSubelements of organizer\n\nbackground\n\nbadge\n\nbutton\n\nbuttonLockup\n\nimg\n\nordinal\n\nplaceholder\n\nratingBadge\n\nrow\n\nseasonBadge\n\ntext\n\ntextBadge\n\nElements that Use organizer\n\nbanner\n\nlockup\n\nlistItemLockup\n\nratingCard\n\nreviewCard\n\nrow\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "segmentBarItem",
    "url": "https://developer.apple.com/documentation/tvml/segmentbaritem",
    "html": "Overview\n\nThe segmentBarItem element is used to create groups inside of a segmentBarHeader. Users can move between segmentBarItem elements to display related information. Here’s an example that has a title and subtitle above a segment bar that contains one item.\n\n<segmentBarHeader>\n   <title>Title</title>\n   <subtitle>Subtitle</subtitle>\n   <segmentBar>\n      <segmentBarItem>\n         <title>Title</title>\n      </segmentBarItem>\n   </segmentBar>\n</segmentBarHeader>\n\nSubelements of segmentBarItem\n\ntitle\n\nElements that Use segmentBarItem\n\nsegmentBarHeader\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "segmentBarHeader",
    "url": "https://developer.apple.com/documentation/tvml/segmentbarheader",
    "html": "Overview\n\nThe segmentBarHeader element displays information that is used to describe the contents of a segmentBar element. Here’s an example that has a title and subtitle above a segment bar that contains one item.\n\n<segmentBarHeader>\n   <title>Title</title>\n   <subtitle>Subtitle</subtitle>\n   <segmentBar>\n      <segmentBarItem>\n         <title>Title</title>\n      </segmentBarItem>\n   </segmentBar>\n</segmentBarHeader>\n\nSubelements of segmentBarHeader\n\nsegmentBar\n\nsubtitle\n\ntitle\n\nElements that Use segmentBarHeader\n\nlist\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "segmentBar",
    "url": "https://developer.apple.com/documentation/tvml/segmentbar",
    "html": "Overview\n\nThe segmentBar element contains a list of segmentBarItem elements that are displayed horizontally. Use the remote to move the cursor between the contained segmentBarItem elements. Here’s an example that has a title and subtitle above a segment bar that contains one item.\n\n<segmentBarHeader>\n   <title>Title</title>\n   <subtitle>Subtitle</subtitle>\n   <segmentBar>\n      <segmentBarItem>\n         <title>Title</title>\n      </segmentBarItem>\n   </segmentBar>\n</segmentBarHeader>\n\nSubelements of segmentBar\n\nsegmentBarItem\n\nElements that Use segmentBar\n\nsegmentBarHeader\n\nTopics\nValid TVML Styles\ncolor\nChanges the color of an element.\nmargin\nSpecifies the spacing around an element.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "nowPlayingMenuItem",
    "url": "https://developer.apple.com/documentation/tvml/nowplayingmenuitem",
    "html": "Overview\n\nThe nowPlayingMenuItem element is used to display information about audio playing in a menuBarTemplate. The nowPlayingMenuItem element automatically appears and disappears from the menu bar as the audio session starts and stops. Here’s an example of a menu bar with the now playing information and two menu items.\n\n<menuBar>\n   <nowPlayingMenuItem>\n      <title>Now Playing Info</title>\n   </nowPlayingMenuItem>\n   <menuItem>\n      <title>Item 1</title>\n   <menuItem>\n   <menuItem>\n      <title>Item 2</title>\n   <menuItem>\n</menuBar>\n\nSubelement of nowPlayingMenuItem\n\ntitle\n\nElements that Use nowPlayingMenuItem\n\nmenuBar\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "placeholder",
    "url": "https://developer.apple.com/documentation/tvml/placeholder",
    "html": "Overview\n\nThe placeholder element and all of the elements that it contains are ignored. The placeholder element is commonly used with data binding and is replaced by a valid element during run time.\n\nSubelements of placeholder\n\nrelatedContentURL\n\nrules\n\nElements that Use placeholder\n\nlistItemLockup\n\norganizer\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nRelated Information Elements\nrelatedContent\nContains elements that are related to another element."
  },
  {
    "title": "tumblerBar",
    "url": "https://developer.apple.com/documentation/tvml/tumblerbar",
    "html": "Overview\n\nThe tumblerBar element contains a list of tumblerItem elements that are displayed horizontally. Use the remote to move between the contained tumblerItem elements. Here’s an example of a tumbler bar containing two tumbler items.\n\n<tumblerBar>\n    <tumblerItem>\n        <title>Title 1</title>\n        <subtitle>5 Items</subtitle>\n    </tumblerItem>\n    <tumblerItem>\n        <title>Title 2</title>\n        <subtitle>12 Items</subtitle>\n    </tumblerItem>\n</tumblerBar>\n\nSubelements of tumblerBar\n\ntumblerItem\n\nElements that Use tumblerBar\n\nlist\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "tumblerItem",
    "url": "https://developer.apple.com/documentation/tvml/tumbleritem",
    "html": "Overview\n\nThe user swipes left and right on the remote to display the previous and next tumblerItem elements inside of the tumbler header. Here’s an example of a tumbler bar containing two tumbler items.\n\n<tumblerBar>\n    <tumblerItem>\n        <title>Title 1</title>\n        <subtitle>5 Items</subtitle>\n    </tumblerItem>\n    <tumblerItem>\n        <title>Title 2</title>\n        <subtitle>12 Items</subtitle>\n    </tumblerItem>\n</tumblerBar>\n\nSubelements of tumblerItem\n\nsubtitle\n\ntitle\n\nElements that Use tumberBarItem\n\ntumblerBar\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements."
  },
  {
    "title": "info",
    "url": "https://developer.apple.com/documentation/tvml/info",
    "html": "Overview\n\nThe info element displays displays grouped sets of data in either table or list form, depending on its parent element. For example, in an infoList element, the info element is often used to display a list of directors and actors for a product. Here’s an example that shows the director and main actors for a movie.\n\n<infoList>\n   <info>\n      <header>\n         <title>Director</title>\n      </header>\n      <text>John Appleseed</text>\n   </info>\n   <info>\n      <header>\n         <title>Actors</title>\n      </header>\n      <text>Anne Johnson</text>\n      <text>Tom Clark</text>\n      <text>Maria Ruiz</text>\n   </info>\n</infoList>\n\nSubelements of info\n\nbutton\n\ndescription\n\nheader\n\nrow\n\ntext\n\nElements that Use info\n\ninfoList\n\ninfoTable\n\nTopics\nValid TVML Styles\ntv-line-spacing\nSpecifies the amount of space between lines of text.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nGeneral Information Elements\nproductInfo\nContains general information about a product."
  },
  {
    "title": "Text Styles",
    "url": "https://developer.apple.com/documentation/tvml/text-styles",
    "html": "Topics\nFont Styles\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nText Sizing\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-style\nSets a predefined size and style for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element.\nText Shadows\ntext-shadow\nAdds a shadow effect to displayed text.\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "rules",
    "url": "https://developer.apple.com/documentation/tvml/rules",
    "html": "Overview\n\nThe rules element contains a set of specialize elements that are used to modify existing elements. The specialize elements use data queries to determine how the existing element is modified. Here’s an example that sets the rules for a button element.\n\n<rules>\n    <specialize state=\"({progress}-greater-than:0) and ({progress}-less-than:1)\">\n        <button tag=\"button\">\n            <text>Resume</text>\n        </button>\n    </specialize>\n    <specialize state=\"({progress}:0), ({progress}:1)\">\n        <button tag=\"button\">\n            <text>Play</text>\n        </button>\n    </specialize>\n</rules>\n\nSubelements of rules\n\nspecialize\n\nElements that Use rules\n\nThe rules element can used by any other element.\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBinding Elements\nprototypes\nDefines a group of elements that can be reused through binding.\nspecialize\nImplements queries used for data binding."
  },
  {
    "title": "ratingCard",
    "url": "https://developer.apple.com/documentation/tvml/ratingcard",
    "html": "Overview\n\nThis element can contain information about a movie’s viewing rating or information from a rating service, such as Rotten Tomatoes. Here’s an example that shows a movie has been rated for general audiences.\n\n<ratingCard>\n    <title><ratingBadge src=\"resource://mpaa-g\" />General Admission</title>\n    <text>Text</text>\n    <description>Description</description>\n</ratingCard>\n\nSubelements of ratingCard\n\ndescription\n\ninfoTable\n\norganizer\n\nratingBadge\n\nsection\n\ntext\n\ntitle\n\nElements that Use ratingCard\n\nsection\n\nTopics\nValid TVML Styles\nbackground-color\nChanges the background color of an element.\nborder-radius\nChanges the shape of an element’s corner.\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-position\nSets the position of an element inside of its parent element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nCard Elements\ncard\nCreates a generic element with its contained elements arranged through TVML styles.\nreviewCard\nDisplays abbreviated review information for a media item."
  },
  {
    "title": "reviewCard",
    "url": "https://developer.apple.com/documentation/tvml/reviewcard",
    "html": "Overview\n\nHere’s a general example for a movie review.\n\n<reviewCard>\n    <badge src=\"resource://tomato-fresh-m\" />\n    <title>WWDC Review</title>\n    <description>Brief review here</description>\n    <text>Ravi Patel June, 8 2015</text>\n</reviewCard>\n\nSubelements of reviewCard\n\nbadge\n\ndescription\n\nimg\n\norganizer\n\nratingBadge\n\ntext\n\ntitle\n\nElements that Use reviewCard\n\nsection\n\nTopics\nValid TVML Styles\nbackground-color\nChanges the background color of an element.\nborder-radius\nChanges the shape of an element’s corner.\nheight\nSpecifies the height of an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-position\nSets the position of an element inside of its parent element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nCard Elements\ncard\nCreates a generic element with its contained elements arranged through TVML styles.\nratingCard\nContains rating information about a product."
  },
  {
    "title": "searchField",
    "url": "https://developer.apple.com/documentation/tvml/searchfield",
    "html": "Overview\n\nThe searchField element creates a text field for user input. Different keyboards can be used to provide the best input experience for the user. Here’s an example that presents a search field along with three movies.\n\n<searchTemplate>\n    <searchField/>\n    <shelf>\n        <header>\n            <title>Popular</title>\n        </header>\n        <section>\n            <lockup>\n                <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"182\" height=\"274\" />\n                <title>Movie 1</title>\n            </lockup>\n            <lockup>\n                <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"182\" height=\"274\" />\n                <title>Movie 2</title>\n            </lockup>\n            <lockup>\n                <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"182\" height=\"274\" />\n                <title>Movie 3</title>\n            </lockup>\n        </section>\n    </shelf>\n</searchTemplate>\n\nContained In\n\nsearchTemplate\n\nstackTemplate\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nkeyboardType\nSpecifies the keyboard to display.\nprototype\nAssociates a data item type with an element.\nshowSpinner\nDisplays a rotating spinner icon inside of a search field.\ntheme\nSets the color scheme for an element.\nSee Also\nMultimedia Elements\nasset\nContains information about where a media item is stored.\nrelatedContentURL\nContains the URL for the displayed content.\ntextField\nDisplays a text field the user can interact with.\nmediaContent\nContains information used to play inline audio or video."
  },
  {
    "title": "lockup",
    "url": "https://developer.apple.com/documentation/tvml/lockup",
    "html": "Overview\n\nHere’s an example of a section that contains two lockup elements that represent movie posters.\n\n<section>\n    <lockup>\n        <img src=\"path to images on your server/Car_Movie_453x255_C.png\" width=\"453\" height=\"255\" />\n        <title>Scene 1</title>\n    </lockup>\n    <lockup>\n        <img src=\"path to images on your server/Car_Movie_500x600.png\" width=\"500\" height=\"600\" />\n        <title>Scene 2</title>\n    </lockup>\n</section>\n\nSubelements of lockup\n\nbadge\n\ndescription\n\nimg\n\norganizer\n\noverlay\n\ntitle\n\nElements that Use lockup\n\nrelatedContent\n\nsection\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\ntv-align\nAligns an element horizontally inside its parent.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nLockup Elements\nbutton\nDisplays a button icon the user can click to initiate an action.\nbuttonLockup\nCreates a button that can also have a badge associated with it.\nlistItemLockup\nContains a new list item.\nmonogramLockup\nCreates a monogram using a person’s image or initials.\noverlay\nDisplays elements on top of other elements."
  },
  {
    "title": "text",
    "url": "https://developer.apple.com/documentation/tvml/text",
    "html": "Overview\n\nThis element displays a small amount of text. Here’s an example that labels a button:\n\n<button>\n    <text>Button</text>\n</button>\n\nContained In\n\nbutton\n\nmonogram\n\norganizer\n\nrow\n\nshelf\n\nTopics\nValid TVML Styles\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\ntext-align\nAligns text horizontally in an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element.\ntv-text-style\nSets a predefined size and style for text.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "needsMoreThreshold",
    "url": "https://developer.apple.com/documentation/tvml/needsmorethreshold",
    "html": "Overview\n\nUse the needsMoreThreshold attribute to specify when the needs more event is dispatched. When the designated threshold is met, the needs more event requests more data. Here’s an example that dispatches the needs more event when there are fewer than two screen lengths of information in the shelf to display.\n\n<shelf needsMoreThreshold=\"2\">\n\nValues for needsMoreThreshold\nFloat\n\nThe number of screen lengths of information left before the needs more event is dispatched.\n\nElements that Use needsMoreThreshold\n\ngrid\n\nshelf\n\nstackTemplate\n\nSee Also\nBinding and DOM Manipulation\nbinding\nAssociates information in a data item with an element.\nitemID\nMark elements for reuse during DOM updates.\nprototype\nAssociates a data item type with an element."
  },
  {
    "title": "identityBanner",
    "url": "https://developer.apple.com/documentation/tvml/identitybanner",
    "html": "Overview\n\nThe identityBanner element displays information directly above the collectionList element and is used to briefly describe its contents. Here’s an example that displays available action movies that emphasize cars.\n\n<stackTemplate>\n    <identityBanner>\n        <title>Available Action Movies</title>\n        <subtitle>Cars</subtitle>\n    </identityBanner>\n    <collectionList>\n        <shelf>\n            <section>\n                <lockup>\n                    <img src=\"http://localhost:9001/images/Car_Movie_250x375_A.png\" width=\"182\" height=\"274\" />\n                    <title>Movie 1</title>\n                </lockup>\n                <lockup>\n                    <img src=\"http://localhost:9001/images/Car_Movie_250x375_B.png\" width=\"182\" height=\"274\" />\n                    <title>Movie 2</title>\n                </lockup>\n            </section>\n        </shelf>\n    </collectionList>\n</stackTemplate>\n\nSubelements of identifyBanner\n\nrow\n\nsubtitle\n\ntitle\n\nElements that Use identityBanner\n\nstackTemplate\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBanner Elements\nbanner\nDisplays information along the top of a TVML page.\nitemBanner\nDisplays information associated with an element."
  },
  {
    "title": "minLength",
    "url": "https://developer.apple.com/documentation/tvml/minlength",
    "html": "Overview\n\nThe amount of space reserved is equal to the amount of space taken up by an indicated number of ‘0’ characters. Here’s an example that reserves a space equal to ‘000’ in length.\n\n<ordinal minLength=\"3\" >\n\nValues for minLength\nInteger\n\nThe amount of space reserved.\n\nValues that Use minLength\n\nordinal\n\nSee Also\nElement Alignment\ncentered\nCenters media items in a shelf.\nrowCount\nSpecifies the number of rows in a shelf."
  },
  {
    "title": "layout-direction",
    "url": "https://developer.apple.com/documentation/tvml/layout-direction",
    "html": "Overview\n\nAll base style sheets now use text-align:natural. You must use the layout-direction query to change the language layout. Here’s an example for specifying styles for right-to-left languages.\n\n<style>\n    .socialBadgeInLockup {\n        tv-position: bottom-trailing;\n        tv-align: trailing;\n        margin: 0 8 -8 0;\n    }\n    .socialBadgeInMonogramLockup {\n        tv-position: bottom-trailing;\n        tv-align: trailing;\n        margin: 0 18 10 0;\n    }\n\n\n    @media (layout-direction: rtl) {\n        .socialBadgeInLockup {\n            margin: 0 0 -8 8;\n        }\n        .socialBadgeInMonogramLockup {\n            margin: 0 0 10 18;\n        }\n    }\n</style>\n\nValues for layout-direction\nltr\n\nTest for left-to-right language layout.\n\nrtl\n\nTest for right-to-left language layout.\n\nSee Also\nMedia Queries\ntv-theme\nSets an element’s appearance according to the specified theme."
  },
  {
    "title": "tv-theme",
    "url": "https://developer.apple.com/documentation/tvml/tv-theme",
    "html": "Overview\n\nUse the tv-theme query to change the appearance of a template based on the theme specified in UIUserInterfaceStyle in the info.plist or by a theme set by the theme attribute. Here’s an example that sets styles for light and dark themes.\n\n<style>\n   @media tv-template and (tv-theme:light) {\n      .foo { color:rgb(0, 0, 0); }\n   }\n   @media tv-template and (tv-theme:dark) {\n      .foo { color:rgb(255, 255, 255); }\n   }\n</style>\n\nValues for tv-theme\ndark\n\nThe theme being tested for is dark.\n\nlight\n\nThe theme being tested for is light.\n\nSee Also\nMedia Queries\nlayout-direction\nSets the text direction based on the user’s language preference."
  },
  {
    "title": "carousel",
    "url": "https://developer.apple.com/documentation/tvml/carousel",
    "html": "Overview\n\nThe carousel element displays images in a row that the user can navigate by swiping left and right on the remote. Here’s an example that creates a carousel containing three movie scenes that the user can navigate between.\n\n<carousel>\n    <section>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_453x255_C.png\" width=\"453\" height=\"255\" />\n            <title>Scene 1</title>\n        </lockup>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_500x600.png\" width=\"500\" height=\"600\" />\n            <title>Scene 2</title>\n        </lockup>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_308x308_B.png\" width=\"308\" height=\"308\" />\n            <title>Scene 3</title>\n        </lockup>\n    </section>\n</carousel>\n\nSubelements of carousel\n\nsection\n\nElements that Use carousel\n\ncollectionList\n\nshowcaseTemplate\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "subtitle",
    "url": "https://developer.apple.com/documentation/tvml/subtitle",
    "html": "Overview\n\nThe subtitle element contains text used to describe a displayed element. It is commonly used to provide a small amount of information about a product. Here’s an example that shows the subtitle for a mongoram.\n\n<monogramLockup>\n    <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n    <title>Anne Johnson</title>\n    <subtitle>Actor</subtitle>\n</monogramLockup>\n\nContained In\n\nlistItemLockup\n\ntitle\n\noverlay\n\nrow\n\ntumblerItem\n\nTopics\nValid TVML Styles\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\ntext-align\nAligns text horizontally in an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element.\ntv-text-style\nSets a predefined size and style for text.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "infoList",
    "url": "https://developer.apple.com/documentation/tvml/infolist",
    "html": "Overview\n\nHere’s an example that shows the director and main actors for a movie.\n\n<infoList>\n   <info>\n      <header>\n         <title>Director</title>\n      </header>\n      <text>John Appleseed</text>\n   </info>\n   <info>\n      <header>\n         <title>Actors</title>\n      </header>\n      <text>Anne Johnson</text>\n      <text>Tom Clark</text>\n      <text>Maria Ruiz</text>\n   </info>\n</infoList>\n\nSubelements of infoList\n\ninfo\n\nElements that Use infoList\n\nbanner\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nList Elements\ncollectionList\nContains other layout elements.\nlist\nCreates a generic container."
  },
  {
    "title": "productInfo",
    "url": "https://developer.apple.com/documentation/tvml/productinfo",
    "html": "Overview\n\nThe productInfo element contains all of the elements required to describe a product. It commonly contains such information as a product’s title, type, format, running time, and so on. Here’s an example that describes a video, including its run time and languages.\n\n<productInfo>\n    <infoTable>\n        <header>\n            <title>Information</title>\n        </header>\n        <info>\n            <header>\n                <title>Studio</title>\n            </header>\n            <text>Apple</text>\n        </info>\n        <info>\n            <header>\n                <title>Runtime</title>\n            </header>\n            <text>1:54</text>\n        </info>\n        <info>\n            <header>\n                <title>Format</title>\n            </header>\n            <text>Widescreen</text>\n        </info>\n    </infoTable>\n    <infoTable>\n        <header>\n            <title>Languages</title>\n        </header>\n        <info>\n            <header>\n                <title>Primary</title>\n            </header>\n            <text>English (Dolby 5.1), Subtitles, CC</text>\n        </info>\n        <info>\n            <header>\n                <title>Additional</title>\n            </header>\n            <text>Cantonese (Subtitles)</text>\n        </info>\n    </infoTable>\n    <infoTable style=\"tv-line-spacing:10;\">\n        <header>\n            <title>Accessibility</title>\n        </header>\n        <info>\n            <header>\n                <textBadge>SDH</textBadge>\n            </header>\n            <text>Subtitles for the deaf and Hard of Hearing (SDH) refer to subtitles in the original lanuage with the addition of relevant non-dialog information.</text>\n        </info>\n    </infoTable>\n</productInfo>\n\nSubelements of productInfo\n\nheader\n\ninfoTable\n\nrow\n\ntext\n\nElements that Use productInfo\n\nproductBundleTemplate\n\nproductTemplate\n\nTopics\nValid TVML Styles\npadding\nSpecifies the padding between the border and contents of an element.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nGeneral Information Elements\ninfo\nDisplays grouped sets of information."
  },
  {
    "title": "heroImg",
    "url": "https://developer.apple.com/documentation/tvml/heroimg",
    "html": "Overview\n\nThe heroImg element contains a link to an image that is to be displayed. This element is commonly used to display a picture of a product inside of a banner. Here’s an example of a heroImg element used to promote a movie.\n\n<heroImg src=\"path to images on your server/Car_Movie_720x1080.png\" />\n\nContained In\n\nbackground\n\nbanner\n\nitemBanner\n\nplaceholder\n\nTopics\nValid TVML Styles\nborder-radius\nChanges the shape of an element’s corner.\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nheight\nSpecifies the maximum height for an image.\nopaque\nIndicates whether an image has a transparent background.\nprototype\nAssociates a data item type with an element.\nsrc\nSpecifies the URL for an image.\nsrcset\nSpecifies multiple URLs for an image.\nwidth\nSpecifies the maximum width for an image element.\ntheme\nSets the color scheme for an element.\nSee Also\nImage Elements\ndecorationImage\nDisplays images inside of other elements.\nfullscreenImg\nDisplays an image over an entire element.\nimg\nDisplays an image."
  },
  {
    "title": "buttonLockup",
    "url": "https://developer.apple.com/documentation/tvml/buttonlockup",
    "html": "Overview\n\nImages on buttons are often used to indicate the function of the button. Use the buttonLockup element to add a badge to the the button. Here’s an example that shows a button with the preview icon and a title.\n\n<buttonLockup>\n    <badge src=\"resource://button-preview\" />\n    <title>Preview</title>\n</buttonLockup>\n\nSubelements of buttonLockup\n\nbadge\n\ntitle\n\nElements that Use buttonLockup\n\norganizer\n\nrow\n\nTopics\nValid TVML Styles\npadding\nSpecifies the padding between the border and contents of an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nLockup Elements\nbutton\nDisplays a button icon the user can click to initiate an action.\nlistItemLockup\nContains a new list item.\nlockup\nContains several elements that are treated as a single element.\nmonogramLockup\nCreates a monogram using a person’s image or initials.\noverlay\nDisplays elements on top of other elements."
  },
  {
    "title": "oneupTemplate",
    "url": "https://developer.apple.com/documentation/tvml/oneuptemplate",
    "html": "Overview\n\nUse the oneupTemplate element to display a single, full-screen image. Users can navigate left or right on the remote to select another image. Activating an up action on the remote will shrink the image and allow a description to be displayed. The following figure shows the basic layout for a oneupTemplate page. The default theme for a oneup template is dark.\n\nMain Elements\n\nThe following listing shows the main elements of the oneupTemplate element in TVML format.\n\n<oneupTemplate>\n    <section>\n        <lockup>\n            <img />\n            <title>…</title>\n            <row>\n                …\n            </row>\n        </lockup>\n        <lockup>\n            …\n        </lockup>\n    </section>\n</oneupTemplate>\n\nElement Descriptions\nimg\n\nThe image to be displayed on screen.\n\nlockup\n\nA single image and related text.\n\nrow\n\nSubtitle information relating to the selected image.\n\nsection\n\nMultiple lockup elements, each of which contains an item to be displayed.\n\ntitle\n\nThe title to be displayed when a user selects an image.\n\nExample\n\nThe following listing shows the TVML for a oneupTemplate example. The example shows a full screen image, with information about the image displayed along the bottom of the screen when the user zooms into the image.\n\n<document>\n    <oneupTemplate mode=\"oneup caption\" handlesOverflow=\"true\">\n        <section>\n            <lockup>\n                <img src=\"path to images on your server/Car_Movie_1920x1080.png\" />\n                <title>WWDC Roadtrip</title>\n                <row>\n                    <subtitle>San Francisco</subtitle>\n                    <subtitle>June 8, 2015</subtitle>\n                </row>\n            </lockup>\n            <lockup>\n                <img src=\"path to images on your server/Beach_Movie_1920x1080.png\" />\n                <title>Beach time</title>\n                <row>\n                    <subtitle>Santa Cruz</subtitle>\n                    <subtitle>May 1, 2015</subtitle>\n                </row>\n            </lockup>\n            <lockup>\n                <img src=\"path to images on your server/Space_Movie_1920x1080.png\" />\n                <title>Spaced out</title>\n                <row>\n                    <subtitle>Space station</subtitle>\n                    <subtitle>July 15, 2015</subtitle>\n                </row>\n            </lockup>\n        </section>\n    </oneupTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Styles\ntv-transition\nSpecifies how an element transitions on and off the screen.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nmode\nSpecifies how an image is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "itemID",
    "url": "https://developer.apple.com/documentation/tvml/itemid",
    "html": "Overview\n\nUse the itemID attribute to identify which elements are considered the same so they can be reused during DOM updates. When recreating the DOM, TVMLKit makes any necessary changes at the view level while retaining existing cells that have not been modified.\n\nValues for itemID\nString\n\nThe identifier for the item. The identifier must be unique inside its parent DOM element. The identifier does not have to be unique inside of the document.\n\nElements that Use itemID\n\nproductBundleTemplate\n\nproductTemplate\n\nsearchTemplate\n\nstackTemplate\n\nitemID can only be used with the following elements inside of the above templates:\n\ngrid\n\nsection in the grid or shelf element\n\nshelf\n\nAny element that can appear in a shelf/section or grid/section combination\n\nSee Also\nBinding and DOM Manipulation\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\nneedsMoreThreshold\nSets the amount of remaining screen lengths before firing the needs more event."
  },
  {
    "title": "textField",
    "url": "https://developer.apple.com/documentation/tvml/textfield",
    "html": "Overview\n\nThe textField element provides a field for users to enter text. This element is commonly used inside of other elements. Here’s an example of a text field prepopulated with an email as a guide to the user.\n\n<textField>tclark@example.com</textField>\n\nContained In\n\nformTemplate\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nkeyboardType\nSpecifies the keyboard to display.\nprototype\nAssociates a data item type with an element.\nsecure\nHides typed text.\ntheme\nSets the color scheme for an element.\nSee Also\nMultimedia Elements\nasset\nContains information about where a media item is stored.\nrelatedContentURL\nContains the URL for the displayed content.\nsearchField\nDisplays an interactive text field used to search for content.\nmediaContent\nContains information used to play inline audio or video."
  },
  {
    "title": "img",
    "url": "https://developer.apple.com/documentation/tvml/img",
    "html": "Overview\n\nThe img element contains a link to an image that is to be displayed. This element is commonly used to display a preview image for a product. Here’s an example of an img element as part of a lockup element.\n\n<lockup>\n    <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"150\" height=\"226\" />\n    <title>Road</title>\n</lockup>\n\nContained In\n\nbackground\n\nlockup\n\norganizer\n\nTopics\nValid TVML Styles\nborder-radius\nChanges the shape of an element’s corner.\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\ntv-placeholder\nSets a default image for an img or monogram element.\nwidth\nSpecifies the maximum width for an image element.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\naspectFill\nStretches an image to fill the containing bounding box.\nbinding\nAssociates information in a data item with an element.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nheight\nSpecifies the maximum height for an image.\nopaque\nIndicates whether an image has a transparent background.\nprototype\nAssociates a data item type with an element.\nsrc\nSpecifies the URL for an image.\nsrcset\nSpecifies multiple URLs for an image.\nwidth\nSpecifies the maximum width for an image element.\ntheme\nSets the color scheme for an element.\nSee Also\nImage Elements\ndecorationImage\nDisplays images inside of other elements.\nfullscreenImg\nDisplays an image over an entire element.\nheroImg\nDisplays an image that is usually large and detailed."
  },
  {
    "title": "title",
    "url": "https://developer.apple.com/documentation/tvml/title",
    "html": "Overview\n\nThis element is commonly used to display the title for another element and is often only a couple of words long. Here’s an example that shows the title for a monogram.\n\n<monogramLockup>\n    <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n    <title>Anne Johnson</title>\n    <subtitle>Actor</subtitle>\n</monogramLockup>\n\nContained In\n\nalertTemplate\n\nbuttonLockup\n\nheader\n\nlistItemLockup\n\nlockup\n\noverlay\n\ntext\n\ntumblerItem\n\nTopics\nValid TVML Styles\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\ntext-align\nAligns text horizontally in an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element.\ntv-text-style\nSets a predefined size and style for text.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndescription\nDisplays multiple lines of text.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen."
  },
  {
    "title": "description",
    "url": "https://developer.apple.com/documentation/tvml/description",
    "html": "Overview\n\nThe description element contains text used to describe a displayed element. This element is often used to provide descriptions that are significantly longer than those contained in the text element. Here’s an example that uses the descriptiveAlertTemplate to list an app’s Terms of Service.\n\n<descriptiveAlertTemplate>\n   <title>Terms of Service</title>\n   <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</description>\n   <row>\n      ...\n   </row>\n</descriptiveAlertTemplate>\n\nContained In\n\nalertTemplate\n\nbanner\n\ndescriptiveAlertTemplate\n\nheader\n\nlockup\n\noverlay\n\nrelatedContent\n\nreviewCard\n\nsection\n\nstackTemplate\n\nTopics\nValid TVML Styles\nbackground-color\nChanges the background color of an element.\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntext-align\nAligns text horizontally in an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-minimum-scale-factor\nSets the minimum size for text.\ntv-text-max-lines\nSpecifies the maximum number of lines of text in an element.\ntv-text-style\nSets a predefined size and style for text.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nbinding\nAssociates information in a data item with an element.\nhandlesOverflow\nAdds the “MORE” label to a description.\nprototype\nAssociates a data item type with an element.\nshowsScrollIndicator\nShows a scroll indicator along the side of an element appropriate for the user’s specified language.\ntheme\nSets the color scheme for an element.\nSee Also\nText Elements\ndecorationLabel\nDisplays text that describes a displayed element.\ndate\nDisplays a date.\nmonogram\nDisplays information below a monogramLockup element.\nordinal\nDisplays a number.\nstrike\nDraws a line through the designated text.\nsubtitle\nDisplays text below the subtitle’s containing element.\ntext\nDisplays text on the screen.\ntitle\nDisplays a short amount of text."
  },
  {
    "title": "footer",
    "url": "https://developer.apple.com/documentation/tvml/footer",
    "html": "Overview\n\nThe footer element displays additional information that describes its containing element. Here’s an example that displays a button at the bottom of a formTemplate element.\n\n<formTemplate>\n   <footer>\n      <button>\n         <text>Submit</text>\n      </button>\n   </footer>\n</formTemplate>\n\nSubelements of footer\n\nbutton\n\ntext\n\nElements that Use footer\n\nformTemplate\n\ninfoTable\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nHeader and Footer Elements\nheader\nContains information displayed at the bottom of an element."
  },
  {
    "title": "row",
    "url": "https://developer.apple.com/documentation/tvml/row",
    "html": "Overview\n\nThe row element provides the ability to place elements next to other elements horizontally. Elements are displayed left to right in the order they are listed inside of the row element. Here’s an example that places two buttons inside of a row element.\n\n<row>\n    <buttonLockup>\n        <badge src=\"resource://button-preview\" />\n        <title>Preview</title>\n    </buttonLockup>\n    <buttonLockup type=\"buy\">\n        <text>$9.99</text>\n        <title>Buy</title>\n    </buttonLockup>\n</row>\n\nSubelements of row\n\nbadge\n\nbutton\n\nbuttonLockup\n\norganizer\n\nsubtitle\n\ntext\n\nElements that Use row\n\nbanner\n\ndescriptiveAlertTemplate\n\ninfo\n\nitemBanner\n\nstack\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-content-align\nAligns an element vertically inside its parent element.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "button",
    "url": "https://developer.apple.com/documentation/tvml/button",
    "html": "Overview\n\nClicking a button or lockup is one of the most common ways for a user activate a selection. Here’s an example of a button with the text inside of it.\n\n<button>\n    <text>Button</text>\n</button\n\nSubelements of button\n\ntext\n\nElements that Use button\n\nalertTemplate\n\nbanner\n\ndescriptiveAlertTemplate\n\nfooter\n\nrow\n\nseparator\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\npadding\nSpecifies the padding between the border and contents of an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nLockup Elements\nbuttonLockup\nCreates a button that can also have a badge associated with it.\nlistItemLockup\nContains a new list item.\nlockup\nContains several elements that are treated as a single element.\nmonogramLockup\nCreates a monogram using a person’s image or initials.\noverlay\nDisplays elements on top of other elements."
  },
  {
    "title": "background",
    "url": "https://developer.apple.com/documentation/tvml/background",
    "html": "Overview\n\nHere’s an example that shows adding an image and audio to a background element.\n\n<background>\n   <img src=\"\" />\n   <audio>\n      <asset id=\"\" src=\"\" keyDelivery=\"\" />\n   </audio>\n</background>\n\n\nNote\n\nAudio does not work in the background when the background element is contained in a banner element.\n\nSubelements of background\n\naudio\n\nmediaContent\n\nElements that Use background\n\nalertTemplate\n\nbanner\n\ncompilationTemplate\n\ndescriptiveAlertTemplate\n\nlistTemplate\n\nmainTemplate\n\norganizer\n\nproductBundleTemplate\n\nproductTemplate\n\nshowcaseTemplate\n\nTopics\nValid TVML Styles\nbackground-color\nChanges the background color of an element.\ncolor\nChanges the color of an element.\nValid TVML Attributes\naspectFill\nStretches an image to fill the containing bounding box.\nSee Also\nBackground Elements\naudio\nPlays background audio for a full-page template when the template is the top-most document in the navigation stack."
  },
  {
    "title": "itemBanner",
    "url": "https://developer.apple.com/documentation/tvml/itembanner",
    "html": "Overview\n\nUse itemBanner element to display information inside of a relatedContent element. Here’s an example that displays an image and three buttons related to a media item.\n\n<itemBanner>\n   <heroImg src=\"path to images on your server/Car_Movie_720x1080\" />\n   <row>\n      <buttonLockup>\n         <badge src=\"resource://button-add\"/>\n         <title>Add</title>\n      </buttonLockup>\n      <buttonLockup>\n         <badge src=\"resource://button-rate\"/>\n         <title>Rate</title>\n       </buttonLockup>\n      <buttonLockup>\n         <badge src=\"resource://button-shuffle\"/>\n         <title>Shuffle</title>\n      </buttonLockup>\n   </row>\n</itemBanner>\n\nSubelements of itemBanner\n\nheroImg\n\nimg\n\nrow\n\nElements that Use itemBanner\n\nrelatedContent\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBanner Elements\nbanner\nDisplays information along the top of a TVML page.\nidentityBanner\nDisplays information about an artist or performer."
  },
  {
    "title": "tv-position",
    "url": "https://developer.apple.com/documentation/tvml/tv-position",
    "html": "Overview\n\nUse the tv-position style to specify where an element is positioned inside of its parent element.\n\nValues for tv-position\nbottom\n\nThe element is positioned at the bottom of the containing element.\n\nbottom-leading\n\nThe element is positioned in the bottom corner and leading edge of the containing element.\n\nbottom-left\n\nThe element is positioned in the bottom-left corner of the containing element.\n\nbottom-right\n\nThe element is positioned in the bottom-right corner of the containing element.\n\nbottom-trailing\n\nThe element is positioned in the bottom corner and trailing edge of the containing element.\n\ncenter\n\nThe element is centered horizontally and vertically in the containing element.\n\nfooter\n\nThe element is positioned in the footer section of the containing element.\n\nheader\n\nThe element is positioned in the header section of the containing element.\n\nleading\n\nThe element is positioned along the leading edge of the containing element.\n\nleft\n\nThe element is positioned to the left of the containing element.\n\nright\n\nThe element is positioned to the right of the containing element.\n\ntop\n\nThe element is positioned at the top of the containing element.\n\ntop-leading\n\nThe element is positioned in the top corner and leading edge of the containing element.\n\ntop-left\n\nThe element is positioned in the top-left corner of the containing element.\n\ntop-right\n\nThe element is positioned in the top-right corner of the containing element.\n\ntop-trailing\n\nThe element is positioned in the top corner and trailing edge of the containing element.\n\ntrailing\n\nThe element is positioned along the trailing edge of the containing element.\n\nElements that Use tv-position\n\nbanner\n\ndivTemplate\n\nlistItemLockup\n\noverlay\n\nratingCard\n\nreviewCard\n\ntumblerItem\n\nSee Also\nValid TVML Styles\ntv-align\nAligns an element horizontally inside its parent."
  },
  {
    "title": "tv-align",
    "url": "https://developer.apple.com/documentation/tvml/tv-align",
    "html": "Overview\n\nHere’s an example that centers an image inside of its containing element.\n\n<img style=\"tv-align:center\" src=\"\" width=\"182\" height=\"274\" />\n\nValues for tv-align\ncenter\n\nThe element is aligned with the center of the parent element.\n\nleading\n\nThe element is aligned along the leading edge of its parent element.\n\nleft\n\nThe element is aligned along the left edge of its parent element.\n\nright\n\nThe element is aligned along the right edge of its parent element.\n\ntrailing\n\nThe element is aligned along the trailing edge of its parent element.\n\nElements that Use tv-align\n\nbanner\n\ndivTemplate\n\nlockup\n\nlistItemLockup\n\noverlay\n\nratingCard\n\nreviewCard\n\nrow\n\nSee Also\nValid TVML Styles\ntv-position\nSets the position of an element inside of its parent element."
  },
  {
    "title": "list",
    "url": "https://developer.apple.com/documentation/tvml/list",
    "html": "Overview\n\nThe list element is a generic element that contains nearly all other elements in the templates that use it. Here’s an example of a list inside of a paradeTemplate. The list element contains the information for the page.\n\n<paradeTemplate>\n    <list>\n        <header>\n            <title>Movie Genres</title>\n        </header>\n        <section>\n            <listItemLockup>\n                <title>Action</title>\n            </listItemLockup>\n            <listItemLockup>\n                <title>Comedy</title>\n            </listItemLockup>\n        </section>\n        <relatedContent>\n            <imgDeck>\n                <img src=\"path to images on your server/Car_Movie_250x375.png \"/>\n                <img src=\"path to images on your server/Car_Movie_250x375_A.png \"/>\n                <img src=\"path to images on your server/Car_Movie_250x375_B.png \"/>\n                <img src=\"path to images on your server/Car_Movie_250x375_C.png \"/>\n            </imgDeck>\n        </relatedContent>\n    </list>\n</paradeTemplate>\n\nSubelements for list\n\nheader\n\nrelatedContent\n\nsection\n\ntumblerBar\n\nElements that Use list\n\ncatalogTemplate\n\ncompilationTemplate\n\nlistTemplate\n\nparadeTemplate\n\nsearchTemplate\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nList Elements\ncollectionList\nContains other layout elements.\ninfoList\nDisplays info element information in a vertical format."
  },
  {
    "title": "listItemLockup",
    "url": "https://developer.apple.com/documentation/tvml/listitemlockup",
    "html": "Overview\n\nThe listItemLockup subelements are arranged using the tv-align and tv-position styles. Containing elements are centered by default.\n\nElements contained in the same position are arranged from the top of the cell to the bottom, in the same order in which they are specified in the listItemLockup element. You can specify a <background><img /></background> that displays a background image inside of the listItemLockup. The background image is top-aligned and is fitted to the size of the listItemLockup while keeping the image’s original aspect ratio. Text wrapping inside of the listItemLockup only occurs in the header, center, and footer positions. Here is an example of a two listItemLockup elements inside a section element.\n\n<section>\n    <listItemLockup>\n        <ordinal minLength=\"2\">1</ordinal>\n        <title>Opening sequence</title>\n        <decorationLabel>11:14</decorationLabel>\n    </listItemLockup>\n    <listItemLockup>\n        <ordinal minLength=\"2\">2</ordinal>\n        <title>Fight song</title>\n        <decorationLabel>3:47</decorationLabel>\n    </listItemLockup>\n</section>\n\nSubelements of listItemLockup\n\ndecorationImage\n\ndecorationLabel\n\nimg\n\nordinal\n\norganizer\n\nplaceholder\n\nrelatedContent\n\nrow\n\nsubtitle\n\ntitle\n\nElements that Use listItemLockup\n\nsection\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-position\nSets the position of an element inside of its parent element.\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nLockup Elements\nbutton\nDisplays a button icon the user can click to initiate an action.\nbuttonLockup\nCreates a button that can also have a badge associated with it.\nlockup\nContains several elements that are treated as a single element.\nmonogramLockup\nCreates a monogram using a person’s image or initials.\noverlay\nDisplays elements on top of other elements."
  },
  {
    "title": "showSpinner",
    "url": "https://developer.apple.com/documentation/tvml/showspinner",
    "html": "See Also\nText Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nfirstName\nAdds a person’s first name to an element.\nlastName\nAdds a person’s last name to an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nsecure\nHides typed text."
  },
  {
    "title": "lastName",
    "url": "https://developer.apple.com/documentation/tvml/lastname",
    "html": "Overview\n\nHere’s an example that sets the last name for a monogram.\n\n<monogramLockup>\n    <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n    <title>Anne Johnson</title>\n    <subtitle>Actor</subtitle>\n</monogramLockup>\n\nValues for lastName\nString\n\nThe last name of a person.\n\nElements that Use lastName\n\nmonogram\n\nSee Also\nText Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nfirstName\nAdds a person’s first name to an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nsecure\nHides typed text.\nshowSpinner\nDisplays a rotating spinner icon inside of a search field."
  },
  {
    "title": "secure",
    "url": "https://developer.apple.com/documentation/tvml/secure",
    "html": "See Also\nText Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nfirstName\nAdds a person’s first name to an element.\nlastName\nAdds a person’s last name to an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nshowSpinner\nDisplays a rotating spinner icon inside of a search field."
  },
  {
    "title": "header",
    "url": "https://developer.apple.com/documentation/tvml/header",
    "html": "Overview\n\nThe header element displays additional information that describes its containing element. Here’s an example that displays a title and a short description.\n\n<header>\n   <title>Hello World</title>\n   <description>Everyone writes it!</description>\n</header>\n\nSubelements of header\n\nbadge\n\ndescription\n\ntext\n\ntitle\n\nElements that Use header\n\ngrid\n\ninfo\n\nlist\n\nsection\n\nshelf\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nHeader and Footer Elements\nfooter\nContains information displayed at the bottom of an element."
  },
  {
    "title": "banner",
    "url": "https://developer.apple.com/documentation/tvml/banner",
    "html": "Overview\n\nThe type of information displayed depends on the type of template used. Here’s an example that places a banner with an image and some text inside of a formTemplate element.\n\n<formTemplate>\n   <banner>\n      <img src=\"path to images on your server/Car_Movie_800X400.png\" width=\"800\" height=\"400\"/>\n      <description>Enter email for access</description>\n   </banner>\n   ...\n</formTemplate>\n\nSubelements of banner\n\nbackground\n\nbutton\n\ndescription\n\nheroImg\n\nimg\n\ninfoList\n\nrow\n\nstack\n\ntitle\n\nElements that Use banner\n\ncatalogTemplate\n\ncompilationTemplate\n\nformTemplate\n\nlistTemplate\n\nproductBundleTemplate\n\nproductTemplate\n\nshowcaseTemplate\n\nstackTemplate\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-align\nAligns an element horizontally inside its parent.\ntv-position\nSets the position of an element inside of its parent element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBanner Elements\nidentityBanner\nDisplays information about an artist or performer.\nitemBanner\nDisplays information associated with an element."
  },
  {
    "title": "theme",
    "url": "https://developer.apple.com/documentation/tvml/theme",
    "html": "Overview\n\nSetting the theme attribute changes the font color for text. Badge colors are also affected if the color is changed using CSS. The background image is not affected by the theme attribute. Templates default to light unless otherwise specified. theme can be used with all templates. The following templates default to dark:\n\nproductTemplate\n\nproductBundleTemplate\n\nValues for theme\ndark\n\nThe theme is set to dark.\n\nlight\n\nThe theme is set to light.\n\nElements that Use theme\n\nThe theme attribute can be used with any element.\n\nSee Also\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element."
  },
  {
    "title": "autoHighlight",
    "url": "https://developer.apple.com/documentation/tvml/autohighlight",
    "html": "Overview\n\nUse the autoHighlight attribute to denote the element that is initially in focus. Both the containing element and one child element must be set to true. Remove the autoHighlight attribute from your element to disable initial focus.\n\nValues for autoHighlight\nBoolean\n\nThe initial focusable state for an element. Set to true to have the element initially be in focus.\n\nElements that Use autoHighlight\n\nalertTemplate that contains button elements\n\ncatalogTemplate that contains listItemLockup elements\n\ncompilationTemplate that contains listItemLockup elements\n\ndescriptiveAlertTemplate that contains button elements\n\ngrid that contains lockup elements\n\nlistTemplate that contains listItemLockup elements\n\nparadeTemplate that contains listItemLockup elements\n\nrow that contains any focusable element\n\nsegmentBar that contains segmentBarItem elements.\n\nshelf that contains lockup elements\n\nshowcaseTemplate that contains lockup elements\n\nNote\n\nThe shelf and grid elements can only use the autoHighlight attribute when contained within a productBundleTemplate, productTemplate, or stackTemplate.\n\nSee Also\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element."
  },
  {
    "title": "prototype",
    "url": "https://developer.apple.com/documentation/tvml/prototype",
    "html": "Overview\n\nUse the prototype attribute to associate the data item’s type with a particular element.\n\nValue for prototype\nString\n\nThe string value associated with the type property in the associated data item.\n\nElements that Use prototype\n\nAny element contained in a section.\n\nSee Also\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\ntheme\nSets the color scheme for an element."
  },
  {
    "title": "layoutDirection",
    "url": "https://developer.apple.com/documentation/tvml/layoutdirection",
    "html": "Overview\n\nUse the layoutDirection attribute to set the language layout direction for a template.\n\nValues for layoutDirection\nltr\n\nThe text is displayed from left to right.\n\nrtl\n\nThe text is displayed from right to left.\n\nElements that Use layoutDirection\n\nlayoutDirection can be used with any full-page template.\n\nSee Also\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element."
  },
  {
    "title": "binding",
    "url": "https://developer.apple.com/documentation/tvml/binding",
    "html": "Overview\n\nUse the binding attribute to associate the property path in a data item with an element.\n\nNote\n\nFor more information on binding, see Manipulating the Document Object Model (DOM) in the TVML Programming Guide.\n\nValues for binding\n@<attribute>:{value}\n\nThe attribute tag and value. For example, <img binding=”@src:{url};”/> adds the src attribute with the URL found in the associated data item.\n\nitems:{property path}\n\nThe item associated with the specified property path.\n\ntextContent:{property path}\n\nThe text associated with the specified property path.\n\nElements that Use binding\n\nThe binding attribute can be used with any element.\n\nSee Also\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element."
  },
  {
    "title": "textBadge",
    "url": "https://developer.apple.com/documentation/tvml/textbadge",
    "html": "Overview\n\nThe textBadge element contains a link to an image that is to be displayed. Here’s an example that displays the Subtitles for the deaf and hard of hearing (SDH) badge.\n\n<textBadge>SDH</textBadge>\n\nContained In\n\nheader\n\norganizer\n\nTopics\nValid TVML Styles\nbackground-color\nChanges the background color of an element.\nborder-radius\nChanges the shape of an element’s corner.\ncolor\nChanges the color of an element.\nfont-family\nSpecifies the font used for the text in an element.\nfont-size\nSpecifies the font size for the text in an element.\nfont-weight\nSpecifies the font weight for the text in an element.\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntext-shadow\nAdds a shadow effect to displayed text.\ntv-tint-color\nSets the tint color for an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\ntype\nSpecifies how a badge is drawn.\nSee Also\nBadge Elements\nbadge\nA small image displayed alongside or on top of another image.\nratingBadge\nDisplays an image used to rate a product.\nseasonBadge\nDisplays an image that indicates the season for an associated media item."
  },
  {
    "title": "progressBar",
    "url": "https://developer.apple.com/documentation/tvml/progressbar",
    "html": "Overview\n\nThe progressBar element creates an empty bar that is overlaid along the bottom of an image. A percentage of the bar is then filled based on the value assigned. This element is commonly used to denote how much of a media item has already been viewed.\n\nContained In\n\noverlay\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nvalue\nSpecifies the value used for a fillable element.\nSee Also\nOverlay Elements\nactivityIndicator\nDisplays a spinning indicator and a title.\nseparator\nDisplays a horizontal line."
  },
  {
    "title": "activityIndicator",
    "url": "https://developer.apple.com/documentation/tvml/activityindicator",
    "html": "Overview\n\nUse the activityIndicator to show your users that some sort of activity is taking place. The activity indicator is mostly used to show users that content is currently loading. Here’s an example that displays an activity indicator inside of a loading page.\n\n<loadingTemplate>\n   <activityIndicator>\n      <title>Loading requested page</title>\n   </activityIndicator>\n</loadingTemplate>\n\nSubelements of activityIndicator\n\ntitle\n\nElements that Use activityIndicator\n\nloadingTemplate\n\nrelatedContent\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nwidth\nSpecifies how wide an element is.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nOverlay Elements\nprogressBar\nPlaces a progress bar on top of another element.\nseparator\nDisplays a horizontal line."
  },
  {
    "title": "tv-placeholder",
    "url": "https://developer.apple.com/documentation/tvml/tv-placeholder",
    "html": "Overview\n\nHere’s an example that displays the default movie image.\n\n<lockup>\n   <img style=\"tv-placeholder:movie\" width=\"250\" height=\"376\" />\n   <title>Movie 1</title>\n</lockup>\n\nValues for tv-placeholder\nmonogram\n\nThe placeholder image appropriate for a monogram. The light themed placeholder image is:\n\nmovie\n\nThe placeholder image appropriate for a movie. The light themed placeholder image is:\n\nmusic\n\nThe placeholder image appropriate for music. The light themed placeholder image is:\n\npodcast\n\nThe placeholder image appropriate for a podcast. The light themed placeholder image is:\n\ntv\n\nThe placeholder image appropriate for TV. The light themed placeholder image is:\n\nElements that Use tv-placeholder\n\nimg\n\nmonogram\n\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "separator",
    "url": "https://developer.apple.com/documentation/tvml/separator",
    "html": "Overview\n\nThe separator element creates a visible, horizontal line to separate areas on a page.\n\nSubelements of separator\n\nbutton\n\nshelf\n\nElements that Use separator\n\ncollectionList\n\nproductTemplate\n\nTopics\nValid TVML Styles\nheight\nSpecifies the height of an element.\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-tint-color\nSets the tint color for an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nOverlay Elements\nactivityIndicator\nDisplays a spinning indicator and a title.\nprogressBar\nPlaces a progress bar on top of another element."
  },
  {
    "title": "Element Shaping",
    "url": "https://developer.apple.com/documentation/tvml/element-shaping",
    "html": "Topics\nElement Sizing\nheight\nSpecifies the height of an element.\nmax-height\nSpecifies the maximum height for an element.\nmax-width\nSpecifies the maximum width for an element.\nmin-height\nSpecifies the minimum height for an element.\nmin-width\nSpecifies the minimum width for an element.\nwidth\nSpecifies how wide an element is.\nElement Corners\nborder-radius\nChanges the shape of an element’s corner.\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "mode",
    "url": "https://developer.apple.com/documentation/tvml/mode",
    "html": "Overview\n\nUse the mode attribute to define how an image is displayed in the oneupTemplate and showcaseTemplate elements. The showcaseTemplate element can only use the showcase oneup attribute value. The oneupTemplate can only use the oneup caption attribute value. Clicking an image alternates between the selected modes. Here’s an example that displays images in showcaseTemplate in showcase mode:\n\n<document>\n    <showcaseTemplate mode=\"showcase\">\n        <background>\n            <img src=\"path to images on your server/Car_Movie_1920x1080.png\" />\n        </background>\n        <banner>\n            <title>Scenes</title>\n            <row>\n                <button>\n                    <text>Slideshow</text>\n                </button>\n                <button>\n                    <text>Screensaver</text>\n                </button>\n            </row>\n        </banner>\n        <carousel>\n            <section>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_453x255_C.png\" width=\"453\" height=\"255\" />\n                    <title>Scene 1</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_500x600.png\" width=\"500\" height=\"600\" />\n                    <title>Scene 2</title>\n                </lockup>\n            </section>\n        </carousel>\n    </showcaseTemplate>\n</document>\n\nValues for mode\nshowcase oneup\n\nImage alternates between the actual image size and a fullscreen image.\n\noneup caption\n\nImage alternates between a fullscreen image with or without a caption below the image.\n\nElements that Use mode\n\noneupTemplate\n\nshowcaseTemplate\n\nSee Also\nImage Display\naspectFill\nStretches an image to fill the containing bounding box.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nopaque\nIndicates whether an image has a transparent background.\ntype\nSpecifies how a badge is drawn.\nvalue\nSpecifies the value used for a fillable element."
  },
  {
    "title": "Inline Playback",
    "url": "https://developer.apple.com/documentation/tvml/inline-playback",
    "html": "Topics\nInline Playback\naudioMode\nSpecifies how audio is played during inline playback.\nplaybackMode\nSpecifies when inline playback of a media item starts.\nSee Also\nAttributes\nImage Attributes\nRetrieve images from a server and specify how they fit into an element.\nText Attributes\nModify how text is displayed, entered, and laid out.\nFocus Attributes\nDefine how an element acts when it comes into focus.\nBinding and DOM Manipulation\nImplement binding and impove DOM manipulation options.\nAlignment, Scrolling, and Coloring\nAlign elements within a shelf, set how your app reacts to scrolling, and set the overall color scheme for your app."
  },
  {
    "title": "Color Styles",
    "url": "https://developer.apple.com/documentation/tvml/color-styles",
    "html": "Topics\nColor Styles\nbackground-color\nChanges the background color of an element.\ncolor\nChanges the color of an element.\ntv-highlight-color\nChanges an element’s color when it comes into focus.\ntv-tint-color\nSets the tint color for an element.\nSee Also\nStyles\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "Display Elements",
    "url": "https://developer.apple.com/documentation/tvml/display-elements",
    "html": "Topics\nImage Elements\ndecorationImage\nDisplays images inside of other elements.\nfullscreenImg\nDisplays an image over an entire element.\nheroImg\nDisplays an image that is usually large and detailed.\nimg\nDisplays an image.\nBadge Elements\nbadge\nA small image displayed alongside or on top of another image.\nratingBadge\nDisplays an image used to rate a product.\nseasonBadge\nDisplays an image that indicates the season for an associated media item.\ntextBadge\nDisplays text associated with an image.\nOverlay Elements\nactivityIndicator\nDisplays a spinning indicator and a title.\nprogressBar\nPlaces a progress bar on top of another element.\nseparator\nDisplays a horizontal line.\nSee Also\nSimple Elements\nMultimedia Elements\nProvide the user the ability to stream audio and search for information stored on a server.\nText Elements\nDisplay text onscreen."
  },
  {
    "title": "Lockup Elements",
    "url": "https://developer.apple.com/documentation/tvml/lockup-elements",
    "html": "Overview\n\nLockup elements are often contained inside of other compound elements, especially shelves. By combining several elements together and treating them as a single element, lockup elements can be arranged and displayed in a consistent fashion by other elements.\n\nTopics\nLockup Elements\nbutton\nDisplays a button icon the user can click to initiate an action.\nbuttonLockup\nCreates a button that can also have a badge associated with it.\nlistItemLockup\nContains a new list item.\nlockup\nContains several elements that are treated as a single element.\nmonogramLockup\nCreates a monogram using a person’s image or initials.\noverlay\nDisplays elements on top of other elements.\nSee Also\nCompound Elements\nBackground Elements\nControl background images and media items that play in the background.\nBanner and Header Elements\nProvide initial descriptive information for other elements.\nInformation Elements\nGroup and display content in the form best suited for the information.\nLayout Elements\nOrganize and display multiple elements in a structured layout."
  },
  {
    "title": "Multimedia Elements",
    "url": "https://developer.apple.com/documentation/tvml/multimedia-elements",
    "html": "Topics\nMultimedia Elements\nasset\nContains information about where a media item is stored.\nrelatedContentURL\nContains the URL for the displayed content.\nsearchField\nDisplays an interactive text field used to search for content.\ntextField\nDisplays a text field the user can interact with.\nmediaContent\nContains information used to play inline audio or video.\nSee Also\nSimple Elements\nDisplay Elements\nDisplay a visual element, such as an image, badge, or progress overlay.\nText Elements\nDisplay text onscreen."
  },
  {
    "title": "Displaying a Product or Bundle in a Full-Page Template",
    "url": "https://developer.apple.com/documentation/tvml/displaying_a_product_or_bundle_in_a_full-page_template",
    "html": "Overview\n\nNote\n\nThis sample code project is associated with WWDC 2019 session 211: Mastering the Living Room with tvOS.\n\nConfigure the Sample Code Project\n\nBefore you run the sample code project in Xcode:\n\nTo start a local server run the following command in a terminal within the “Server” folder to create a simple webserver.\n\nruby -run -ehttpd . -p9001\n\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products."
  },
  {
    "title": "Background Elements",
    "url": "https://developer.apple.com/documentation/tvml/background-elements",
    "html": "Overview\n\nCompound background elements are used to display images behind the rest of the template elements and to play audio in the background of a client-server app page.\n\nTopics\nBackground Elements\naudio\nPlays background audio for a full-page template when the template is the top-most document in the navigation stack.\nbackground\nDisplays an image or plays audio in the background of a channel app page.\nSee Also\nCompound Elements\nBanner and Header Elements\nProvide initial descriptive information for other elements.\nInformation Elements\nGroup and display content in the form best suited for the information.\nLayout Elements\nOrganize and display multiple elements in a structured layout.\nLockup Elements\nCombine several elements so that they can be treated as a single element."
  },
  {
    "title": "collectionList",
    "url": "https://developer.apple.com/documentation/tvml/collectionlist",
    "html": "Overview\n\nHere’s an example of a collectionList element that contains a shelf and two lockup elements.\n\n<collectionList>\n    <shelf>\n        <section>\n            <lockup>\n                <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"182\" height=\"274\" />\n                <title>Movie 1</title>\n            </lockup>\n            <lockup>\n                <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"182\" height=\"274\" />\n                <title>Movie 2</title>\n            </lockup>\n        </section>\n    </shelf>\n</collectionList>\n\nSubelements of collectionList\n\ncarousel\n\ngrid\n\nshelf\n\nElements that use collectionList\n\nsearchTemplate\n\nstackTemplate\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\nValid TVML Attributes\npadding\nSpecifies the padding between the border and contents of an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nList Elements\ninfoList\nDisplays info element information in a vertical format.\nlist\nCreates a generic container."
  },
  {
    "title": "showcaseTemplate",
    "url": "https://developer.apple.com/documentation/tvml/showcasetemplate",
    "html": "Overview\n\nUse the showcaseTemplate element to display a row of images with descriptions associated with each image; for example, displaying a set of screenshots to promote a movie. Users can scroll between images. When an image comes into focus, the size of the image is increased to be slightly larger than the other images. The following figure shows the basic layout for a showcaseTemplate page. The default theme for a showcase template is dark.\n\nMain Elements\n\nThe following listing shows the main elements of the showcaseTemplate element in TVML format.\n\n<showcaseTemplate>\n    <background>…</background>\n    <banner>\n        <title>…</title>\n        <row>\n            <button>…</button>\n        </row>\n    </banner>\n    <carousel>\n        <section>\n            <lockup>…</lockup>\n        </section>\n    </carousel>\n</showcaseTemplate>\n\nElement Descriptions\nbackground\n\nBackground visual and audio.\n\nbanner\n\nElements that describe what the page shows and provides buttons for user options.\n\nbutton\n\nA button providing user options.\n\ncarousel\n\nElement containing images and text displayed in a row that the user navigates by swiping left or right on the remote.\n\nlockup\n\nAn element containing several elements, such as an image and a title, so that it can be treated as a single element.\n\nrow\n\nA group of elements displayed in a horizontal row.\n\nsection\n\nA group of lockup elements.\n\ntitle\n\nText that describes its containing element.\n\nExample\n\nThe following listing shows the TVML for a showcaseTemplate example.\n\n<document>\n    <showcaseTemplate mode=\"showcase\">\n        <background>\n            <img src=\"path to images on your server/Car_Movie_1920x1080.png\" />\n        </background>\n        <banner>\n            <title>Scenes</title>\n            <row>\n                <button>\n                    <text>Slideshow</text>\n                </button>\n                <button>\n                    <text>Screensaver</text>\n                </button>\n            </row>\n        </banner>\n        <carousel>\n            <section>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_453x255_C.png\" width=\"453\" height=\"255\" />\n                    <title>Scene 1</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_500x600.png\" width=\"500\" height=\"600\" />\n                    <title>Scene 2</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_308x308_B.png\" width=\"308\" height=\"308\" />\n                    <title>Scene 3</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_800x600.png\" width=\"800\" height=\"600\" />\n                    <title>Scene 4</title>\n                </lockup>\n            </section>\n        </carousel>\n    </showcaseTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nmode\nSpecifies how an image is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "grid",
    "url": "https://developer.apple.com/documentation/tvml/grid",
    "html": "Overview\n\nItems inside of the grid are displayed in a row that is bound by the size of the screen. Items are automatically moved to another row after a row is filled. Here’s an example of three lockup elements inside of a grid element.\n\n<grid>\n    <section>\n        <lockup>\n            <img src=\"http://localhost:9001/images/Car_Movie_250x375_A.png\" width=\"182\" height=\"274\" />\n            <title>Movie 1</title>\n        </lockup>\n        <lockup>\n            <img src=\"http://localhost:9001/images/Car_Movie_250x375_B.png\" width=\"182\" height=\"274\" />\n            <title>Movie 2</title>\n        </lockup>\n        <lockup>\n            <img src=\"http://localhost:9001/images/Car_Movie_250x375_C.png\" width=\"182\" height=\"274\" />\n            <title>Movie 3</title>\n        </lockup>\n    </section>\n</grid>\n\nSubelements of grid\n\nheader\n\nsection\n\nElements that Use grid\n\ncollectionList\n\nrelatedContent\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\ntv-line-spacing\nSpecifies the amount of space between lines of text.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nautoHighlight\nSpecifies that the element should initially be in focus.\nitemID\nMark elements for reuse during DOM updates.\nneedsMoreThreshold\nSets the amount of remaining screen lengths before firing the needs more event.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "productBundleTemplate",
    "url": "https://developer.apple.com/documentation/tvml/productbundletemplate",
    "html": "Overview\n\nUse the productBundleTemplate element to display detailed information about a product bundle, such as a page that describes a television series, including information about the actors, ratings, and series episodes. The top two-thirds of the screen displays general information about the product. The shelf at the bottom provides a row of related items, such as episodes of the show. A user can scroll down and access detailed information about the product, such as critical reviews, actor biographies, and information about any included extras.\n\nThe default theme for a product bundle template is dark when you specify a background image; otherwise, the product bundle template defaults to the system preference. You can also change the look of a productBundleTemplate page by removing heroImage from the stack element and replacing it with an img element that covers the entire screen.\n\nThe following figure shows the basic layout for a productBundleTemplate page.\n\nMain Elements\n\nThe following listing shows the main elements of the productBundleTemplate element in TVML format.\n\n<document>\n    <productBundleTemplate>\n        <background>\n        </background>\n        <banner>\n            <stack>\n                <title>…</title>\n                <row>\n                </row>\n                <text>…</text>\n                <description>…</description>\n                <row>\n                    <buttonLockup>\n                    </buttonLockup>\n                </row>\n            </stack>\n            <heroImg src=\"…\" />\n        </banner>\n        <shelf>\n        </shelf>\n        !— Everything following is under the fold —>\n        <shelf>\n        </shelf>\n        <productInfo>\n            …\n        </productInfo>\n    </productBundleTemplate>\n</document>\n\nElement Descriptions\nbackground\n\nImages or audio to be presented in the background.\n\nbanner\n\nElement containing various elements that provide primary information about the product, such as a TV show title and episode title, description, and buttons for purchasing or previewing.\n\nbuttonLockup\n\nA type of button that can contain an image (the badge element) as well as text.\n\ndescription\n\nThe text that describes the show.\n\nheroImg\n\nAn image of the show.\n\nproductInfo\n\nTechnical information about the product bundle, such as a show’s runtime, language availability, and accessibility information.\n\nrow\n\nA group of information elements.\n\nshelf\n\nAn element containing row elements. Several shelves are used to display information like shows other users have watched and extra features provided by this product.\n\nstack\n\nBasic information about the product, including the title, rating, and a description.\n\nsubtitle\n\nText that provides additional information about its containing element.\n\ntext\n\nThe text used to describe the surrounding elements.\n\ntitle\n\nThe title describing its containing element.\n\nExample\n\nThe following listing shows the TVML for a productBundleTemplate example.\n\n<document>\n    <productBundleTemplate>\n        <background>\n        </background>\n        <banner>\n            <stack>\n                <title>WWDC Road Trip</title>\n                <row>\n                    <text><badge src=\"resource://tomato-fresh\"/> 99%</text>\n                    <text>1hr 54min</text>\n                    <text>Comedy</text>\n                    <text>2015</text>\n                    <badge src=\"resource://mpaa-pg\" class=\"badge\" />\n                    <badge src=\"resource://cc\" class=\"badge\" />\n                </row>\n                <text>Follow the adventures of a determined developer</text>\n                <description handlesOverflow =\"true\">The story of a development team that loves to cook and makes an app for ordering soup. Follow their journey across the country to WWDC, and the meals they make along the way.</description>\n                <row>\n                    <buttonLockup>\n                        <badge src=\"resource://button-preview\" />\n                        <title>Preview</title>\n                    </buttonLockup>\n                    <buttonLockup type=\"buy\">\n                        <text>$9.99</text>\n                        <title>Buy</title>\n                    </buttonLockup>\n                </row>\n            </stack>\n            <heroImg src=\"path to images on your server/Cooking_Show_720x1080.png\" />\n        </banner>\n        <shelf>\n            <header>\n                <title>3 Episodes</title>\n            </header>\n            <section>\n                <lockup>\n                    <img src=\"path to images on your server/Cooking_Show_250x375_A.png\" width=\"150\" height=\"226\" />\n                    <title>Turn</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Cooking_Show_250x375_B.png\" width=\"150\" height=\"226\" />\n                    <title>Road</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Cooking_Show_250x375_C.png\" width=\"150\" height=\"226\" />\n                    <title>Helicopter</title>\n                </lockup>\n            </section>\n        </shelf>\n        <shelf>\n            <header>\n                <title>Reviews and Ratings</title>\n            </header>\n            <section>\n                <ratingCard>\n                    <title>4.1 / 5</title>\n                    <ratingBadge value=\"0.7\"></ratingBadge>\n                    <description>Average of 2,241 iTunes user ratings and reviews.</description>\n                </ratingCard>\n                <ratingCard>\n                    <title><badge src=\"resource://tomato-fresh\" /> 99%</title>\n                    <text>Tomatometer</text>\n                    <infoTable>\n                        <info>\n                            <header>\n                                <title>175</title>\n                            </header>\n                            <text>Reviews</text>\n                        </info>\n                        <info>\n                            <header>\n                                <title>173</title>\n                            </header>\n                            <text>Fresh</text>\n                        </info>\n                        <info>\n                            <header>\n                                <title>2</title>\n                            </header>\n                            <text>Rotten</text>\n                        </info>\n                    </infoTable>\n                </ratingCard>\n                <reviewCard>\n                    <badge src=\"resource://tomato-fresh-m\" />\n                    <title>WWDC Review</title>\n                    <description>Brief review here</description>\n                    <text>Ravi Patel June, 8 2015</text>\n                </reviewCard>\n            </section>\n        </shelf>\n        <shelf>\n            <header>\n                <title>Cast and Crew</title>\n            </header>\n            <section>\n                <monogramLockup>\n                    <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n                    <title>Anne Johnson</title>\n                    <subtitle>Actor</subtitle>\n                </monogramLockup>\n                <monogramLockup>\n                    <monogram firstName=\"Tom\" lastName=\"Clark\"/>\n                    <title>Tom Clark</title>\n                    <subtitle>Actor</subtitle>\n                </monogramLockup>\n                <monogramLockup>\n                    <monogram firstName=\"Maria\" lastName=\"Ruiz\"/>\n                    <title>Maria Ruiz</title>\n                    <subtitle>Actor</subtitle>\n                </monogramLockup>\n            </section>\n        </shelf>\n        <productInfo>\n            <infoTable>\n                <header>\n                    <title>Information</title>\n                </header>\n                <info>\n                    <header>\n                        <title>Studio</title>\n                    </header>\n                    <text>Apple</text>\n                </info>\n                <info>\n                    <header>\n                        <title>Runtime</title>\n                    </header>\n                    <text>1:54</text>\n                </info>\n                <info>\n                    <header>\n                        <title>Format</title>\n                    </header>\n                    <text>Widescreen</text>\n                </info>\n            </infoTable>\n            <infoTable>\n                <header>\n                    <title>Languages</title>\n                </header>\n                <info>\n                    <header>\n                        <title>Primary</title>\n                    </header>\n                    <text>English (Dolby 5.1), Subtitles, CC</text>\n                </info>\n                <info>\n                    <header>\n                        <title>Additional</title>\n                    </header>\n                    <text>Cantonese (Subtitles)</text>\n                </info>\n            </infoTable>\n            <infoTable style=\"tv-line-spacing:10;\">\n                <header>\n                    <title>Accessibility</title>\n                </header>\n                <info>\n                    <header>\n                        <textBadge>SDH</textBadge>\n                    </header>\n                    <text>Subtitles for the deaf and Hard of Hearing (SDH) refer to subtitles in the original language with the addition of relevant non-dialog information.</text>\n                </info>\n            </infoTable>\n        </productInfo>\n    </productBundleTemplate>\n</document>\n\n\nThe following figures show the two pages created using the above example. The first figure shows what appears immediately onscreen, while the second figure shows what the user sees after navigating down the screen.\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nitemID\nMark elements for reuse during DOM updates.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "ratingTemplate",
    "url": "https://developer.apple.com/documentation/tvml/ratingtemplate",
    "html": "Overview\n\nUse the ratingTemplate element to display a rating for an item. The following figure shows the basic layout for a ratingTemplate page. The theme for the rating template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the ratingTemplate element in TVML format.\n\n<document>\n    <ratingTemplate>\n        <title>…</title>\n        <ratingBadge></ratingBadge>\n    </ratingTemplate>\n</document>\n\nElement Descriptions\nratingBadge\n\nThe rating for the item.\n\ntitle\n\nThe title for the rated item.\n\nExample\n\nThe following listing shows the TVML for a ratingTemplate example. The example displays a title and a set of rating badge images, such as stars. The filled rating badge images indicate the current rating for that title. The value attribute indicates that the example title has an 80 percent favorable rating, or 4 of 5 stars.\n\n<document>\n    <ratingTemplate>\n        <title>WWDC Roadtrip</title>\n        <ratingBadge value=\"0.8\"></ratingBadge>\n    </ratingTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "shelf",
    "url": "https://developer.apple.com/documentation/tvml/shelf",
    "html": "Overview\n\nThe shelf element is a horizontal row consisting of one or more elements. The user navigates along the items on a shelf by clicking left or right on the remote, and chooses an element by clicking the Select button on the remote. The generic shelf element structure is displayed first, followed by several standard shelf configurations. Here’s an example showing the basic layout of a shelf element.\n\n<shelf>\n    <header>\n        <title>Viewers Also Watched</title>\n    </header>\n    <section>\n        <lockup onselect=\"…\"> //add link to other prodcut on your server here\n            <imageStack>\n                <img src=\"…\" /> //add link to preview image for other product\n            </imageStack>\n            <title>Also Watched One</title>\n        </lockup>\n    </section>\n</shelf>\n\n\nThere are several standard shelf configurations that are used to display related content.\n\nAlso-Watched Shelf\n\nThe shelf element can display information about other products that have been watched by people who have also watched the selected product. The shelf displays the image you associate with the also-watched product, and the title is only displayed when the also-watched product is in focus. Here’s an example of a shelf element that contains three other products.\n\n<shelf>\n    <header>\n        <title>Viewers Also Watched</title>\n    </header>\n    <section>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"150\" height=\"226\" />\n            <title>Turn</title>\n        </lockup>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"150\" height=\"226\" />\n            <title>Road</title>\n        </lockup>\n        <lockup>\n            <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"150\" height=\"226\" />\n            <title>Helicopter</title>\n        </lockup>\n    </section>\n</shelf>\n\nCast-and-Crew Shelf\n\nThe shelf element can display information about the cast and crew associated with the product. Each person is represented by a large circle that contains the individual’s initials. Below the circle is the individual’s name and the name of the character they play. Here’s an example of a shelf element that contains three cast members.\n\n<shelf>\n    <header>\n        <title>Cast and Crew</title>\n    </header>\n    <section>\n        <monogramLockup>\n            <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n            <title>Anne Johnson</title>\n            <subtitle>Actor</subtitle>\n        </monogramLockup>\n        <monogramLockup>\n            <monogram firstName=\"Tom\" lastName=\"Clark\"/>\n            <title>Tom Clark</title>\n            <subtitle>Actor</subtitle>\n        </monogramLockup>\n        <monogramLockup>\n            <monogram firstName=\"Maria\" lastName=\"Ruiz\"/>\n            <title>Maria Ruiz</title>\n            <subtitle>Actor</subtitle>\n        </monogramLockup>\n    </section>\n</shelf>\n\nExtras Shelf\n\nThe shelf element can display information about additional items included with the product. Common additional items include deleted scenes, extended scenes, and trailers. The listing below shows an example of a shelf element that contains a link to the online extras, a brief description of the extras, and a product trailer.\n\nThe extras shelf typically contains two sections. The first section contains an image of the additional items and a description of the items. Users can click the image to access the additional items. The second section contains a preview image of a trailer for the original product that users can click to view the trailer. Additional trailers require additional sections.\n\n<shelf>\n    <section>\n        <header>\n            <title>Product Extras</title>\n        </header>\n        <descriptionLockup>\n            <img src=\"…\"/> //add link to preview image for extras\n            <text>Extras</text>\n            <description>Enter text describing the item here</description>\n            <text>Add text that talks about anything special included with this item or special requirements needed</text>\n        </descriptionLockup\n    </section>\n    <section>\n        <header>\n            <title>Trailers</title>\n        </header>\n        <lockup onselect=\"…\"> //add link to trailer on your server here\n            <imageStack>\n                <img src=\"…\" /> //add link to preview image for trailer\n            </imageStack>\n            <title>Theatrical Trailer 2m</title>\n        </lockup>\n    </section>\n</shelf>\n\nReview-and-Ratings Shelf\n\nThe shelf element can display a list of ratings and reviews of the item it is associated with. Typically, a lockup element is displayed, followed by one or more buttonLockup elements. Common rating lockups contain information from iTunes or Rotten Tomatoes.\n\n<shelf>\n   <header>\n      <title>Reviews and Ratings</title>\n   </header>\n   <section>\n      <ratingCard>\n         <title>4.1 / 5</title>\n         <ratingBadge value=\"0.7\"></ratingBadge>\n         <description>Average of 2,241 iTunes user ratings and reviews.</description>\n      </ratingCard>\n      <ratingCard>\n         <title><badge src=\"resource://tomato-fresh\" /> 99%</title>\n         <text>Tomatometer</text>\n         <infoTable>\n            <info>\n               <header>\n                  <title>175</title>\n               </header>\n               <text>Reviews</text>\n            </info>\n            <info>\n               <header>\n                  <title>173</title>\n               </header>\n               <text>Fresh</text>\n            </info>\n            <info>\n               <header>\n                  <title>2</title>\n               </header>\n               <text>Rotten</text>\n            </info>\n         </infoTable>\n      </ratingCard>\n      <reviewCard>\n         <badge src=\"resource://tomato-fresh-m\" />\n         <title>WWDC Review</title>\n         <description>Brief review here</description>\n         <text>Ravi Patel June, 8 2015</text>\n      </reviewCard>\n   </section>\n</shelf>\n\nSubelements of shelf\n\nheader\n\nsection\n\ntext\n\nElements that Use shelf\n\nalertTemplate\n\ndescriptiveAlertTemplate\n\nfooter\n\nproductBundleTemplate\n\nproductTemplate\n\nseparator\n\nTopics\nValid TVML Styles\nmargin\nSpecifies the spacing around an element.\npadding\nSpecifies the padding between the border and contents of an element.\ntv-interitem-spacing\nSpecifies the spacing between child elements.\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\ncentered\nCenters media items in a shelf.\nitemID\nMark elements for reuse during DOM updates.\nneedsMoreThreshold\nSets the amount of remaining screen lengths before firing the needs more event.\nprototype\nAssociates a data item type with an element.\nrowCount\nSpecifies the number of rows in a shelf.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically."
  },
  {
    "title": "menuBar",
    "url": "https://developer.apple.com/documentation/tvml/menubar",
    "html": "Overview\n\nUsers can navigate left and right to move between menuBar elements. Here’s an example of a menu bar with two items inside of a menuBarTemplate element.\n\n<menuBarTemplate>\n    <menuBar>\n        <menuItem id=\"navigation_top_movies\" data-identifier=\"list\">\n            <title>Top Movies</title>\n        </menuItem>\n        <menuItem id=\"navigation_genres\" data-identifier=\"index\">\n            <title>Genres</title>\n        </menuItem>\n    </menuBar>\n</menuBarTemplate>\n\n\nYou can also add view elements to the left and right sides of the menu bar. The left leadingAccessoryView and right trailingAccessoryView can be any simple element, including Display Elements, Multimedia Elements, and Text Elements. Accessory views can also be row elements.\n\nTo add the equivalent of a leadingAccessoryView, add any supported element before the menuBar opening tag, as shown here:\n\n<menuBarTemplate>\n    <img src=\"path to images on your server/leading_icon.png\"/>\n    <menuBar>\n        <menuItem id=\"navigation_top_movies\" data-identifier=\"list\">\n            <title>Top Movies</title>\n        </menuItem>\n    </menuBar>\n</menuBarTemplate>\n\n\nTo add the equivalent of a trailingAccessoryView, add any supported element after the menuBar closing tag, as shown here:\n\n<menuBarTemplate>\n    <menuBar>\n        <menuItem id=\"navigation_top_movies\" data-identifier=\"list\">\n            <title>Top Movies</title>\n        </menuItem>\n    </menuBar>\n    <img src=\"path to images on your server/trailing_icon.png\"/>\n</menuBarTemplate>\n\nSubelements of menuBar\n\nmenuItem\n\nsection\n\nElements that Use menuBar\n\nmainTemplate\n\nmenuBarTemplate\n\nTopics\nValid TVML Style\ntv-tint-color\nSets the tint color for an element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nBar Elements\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header."
  },
  {
    "title": "alertTemplate",
    "url": "https://developer.apple.com/documentation/tvml/alerttemplate",
    "html": "Overview\n\nUse the alertTemplate element to display important information, such as a message telling the user to perform an action before continuing. At a minimum, provide a description of the alert and a button so the user can take any required actions. The following figure shows the basic layout for an alertTemplate page. The theme for the alert template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the alertTemplate element in TVML format:\n\n<alertTemplate>\n   <background>\n      …\n   </background>\n   <title>…</title>\n   <description>…</description>\n   <button>\n      <text>…</text>\n   </button>\n   <text>…</text>\n</alertTemplate>\n\nElement Descriptions\nbackground\n\nBackground elements, such as audio.\n\nbutton\n\nA button that typically allows the user to dismiss the alert or to bring up a new template page. The button element contains a text element that shows the name of the button.\n\ndescription\n\nThe main text for the alert.\n\ntext\n\nA brief description of what the button does.\n\ntitle\n\nThe title of the alert, which should briefly communicate its purpose.\n\nExample\n\nThe following listing shows the TVML for an alertTemplate example:\n\n<document>\n   <alertTemplate>\n      <title>Update Available</title>\n      <description>Get the latest tvOS version</description>\n      <button>\n         <text>Update Now</text>\n      </button>\n      <button>\n         <text>Cancel</text>\n      </button>\n   </alertTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "imgDeck",
    "url": "https://developer.apple.com/documentation/tvml/imgdeck",
    "html": "Overview\n\nThe imgDeck contains a set of img elements—images that are part of the related content for another element. When another element, such as listItemLockup, is in focus, the information in the relatedContent element is also displayed.\n\n<relatedContent>\n    <imgDeck>\n        <img src=\"path to images on your server/Car_Movie_250x375.png \"/>\n        <img src=\"path to images on your server/Car_Movie_250x375_A.png \"/>\n        <img src=\"path to images on your server/Car_Movie_250x375_B.png \"/>\n        <img src=\"path to images on your server/Car_Movie_250x375_C.png \"/>\n    </imgDeck>\n</relatedContent>\n\nSubelements of imgDeck\n\nimg\n\nElements that Use imgDeck\n\nrelatedContent\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements."
  },
  {
    "title": "loadingTemplate",
    "url": "https://developer.apple.com/documentation/tvml/loadingtemplate",
    "html": "Overview\n\nUse the loadingTemplate element to display a spinner and description of why the spinner is being displayed; for example, an interim page showing that the requested page is being loaded. A spinner is automatically presented when the page is displayed, and you can add text to tell your users what is happening. The following figure shows the basic layout for a layoutTemplate page. The theme for the loading template defaults to the system preference.\n\nNote\n\nWhen a user performs an action to bring up a new page and the new page is not immediately ready, a loadingTemplate page should be presented. After the new page is ready, replace the loadingTemplate with the new page onto the navigation stack.\n\nMain Elements\n\nThe following listing shows main elements of the loadingTemplate in TVML format.\n\n<document>\n   <loadingTemplate>\n      <activityIndicator>\n         <title>Title</title>\n      </activityIndicator>\n   </loadingTemplate>\n</document>\n\nElement Descriptions\nactivityIndicator\n\nImage of a spinning wheel icon.\n\ntitle\n\nThe text telling the user why there is a delay.\n\nExample\n\nThe following listing shows the TVML for a loadingTemplate example.\n\n<document>\n   <loadingTemplate>\n      <activityIndicator>\n         <title>Loading requested page</title>\n      </activityIndicator>\n   </loadingTemplate>\n</document>\n\n\nThe following figure shows the output of the above example:\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "Rotten Tomatoes Rating Icons",
    "url": "https://developer.apple.com/documentation/tvml/rotten-tomatoes-rating-icons",
    "html": "Overview\n\nRotten Tomatoes ratings are based on reviews by television and movie critics.\n\nFresh\n\nThe fresh rating icon comes in two sizes, which have the resource names tomato-fresh and tomato-fresh-m. Rotten Tomatoes assigns a fresh rating to media items that have at least 60% positive reviews. Place a fresh rating icon using <img src=\"resource://tomato-fresh\" />.\n\nSplat\n\nThe splat rating icon comes in two sizes, which have the resource names tomato-splat and tomato-splat-m. Rotten Tomatoes assigns a splat rating to media items that have less than 60% positive reviews. Place a splat rating icon is <img src=\"resource://tomato-splat\" />.\n\nCertified Fresh\n\nThe certified fresh rating icon comes in two sizes, which have the resource names tomato-certified and tomato-certified-m. Rotten Tomatoes assigns a certified fresh rating to media items that meet the following criteria:\n\nA steady rating score of 75% or higher\n\nAt least five reviews from Top Critics\n\nAt least 80 reviews for films in wide release\n\nAt least 40 reviews for films in limited release\n\nAt least 20 reviews for an individual season of a television show. Only individual seasons are eligible for the rating.\n\nPlace a certified fresh rating icon using <img src=\"resource://tomato-certified\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Miscellaneous Icons",
    "url": "https://developer.apple.com/documentation/tvml/miscellaneous-icons",
    "html": "Overview\nClosed Captioning\n\nThe resource name for the closed captioning icon is cc. Place a closed captioning icon to indicate that the media item is able to display text on the screen. Place a closed captioning icon using <img src=\"resource://cc\" />.\n\nHigh Definition\n\nThe resource name for the high definition icon is hd. Place a high definition icon next to media items that provide high definition video streams. Place a high definition icon using <img src=\"resource://hd />.\n\nList Chevron\n\nThe resource name for a list chevron icon is list-chevron. Place a list chevron icon to indicate that the item next to the chevron is playing or selectable. Place a list chevron icon using <img src=\"resource://list-chevron\" />.\n\nOverlay Checkmark\n\nThe resource name for the overlay checkmark icon is overlay-checkmark. Place an overlay checkmark on top of other images to indicate that the user has selected the item. Place an overlay checkmark icon using <img src=\"resource://overlay-checkmark\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system."
  },
  {
    "title": "Adding Resource Icons",
    "url": "https://developer.apple.com/documentation/tvml/adding-resource-icons",
    "html": "Overview\n\nApple TV contains several icons that are available when you set the src attribute on a badge element to resource://<resourcename>. Here’s an example that sets the preview icon on a button:\n\n<buttonLockup>\n    <badge src=\"resource://button-preview\" />\n    <title>Preview</title>\n</buttonLockup>\n\n\nResource icons do not have different variants for dark and light themes. Use the tv-tint-color style to change the color of black and white resource icons. Select the appropriate tint for dark and light themes by wrapping the tv-tint-color style inside of a media query.\n\nSee Also\nResource Icons\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Rating Icons (United Kingdom)",
    "url": "https://developer.apple.com/documentation/tvml/rating-icons-united-kingdom",
    "html": "Overview\n\nUnited Kingdom movie rating icons indicate who is allowed to watch a movie in the United Kingdom. Ratings are assigned by the British Board of Film Classification.\n\nGeneral Admission\n\nThe resource name for the general admission icon for the United Kingdom is bbfc-u. Place a general admission rating icon next to content to indicate that the content is suitable to be watched by people of any age. Place a general admissions rating icon using <img src=\"resource://bbfc-u\" />.\n\nParental Guidance\n\nThe resource name for the parental guidance icon for the United Kingdom is bbfc-pg. Place a parental guidance rating icon next to content to indicate that the content can be watched by people of any age, but parental guidance is recommended. Place a parental guidance rating icon using <img src=\"resource://bbfc-pg\" />.\n\nSuitable 12/12a\n\nThe resource name for the suitable 12 icon for the United Kingdom is bbfc-12. Place a suitable 12 rating icon next to content to indicate that no one younger than 12 can rent or buy the content. Place a suitable 12 rating icon using <img src=\"resource://bbfc-12\" />.\n\nThe resource name for the suitable 12a icon for the United Kingdom is bbfc-12a. Place a suitable 12a rating icon next to content to indicate that no one younger than 12 can watch the media unless accompanied by an adult. Place a suitable 12a rating icon using <img src=\"resource://bbfc-12a\" />.\n\nSuitable 15\n\nThe resource name for the suitable 15 icon for the United Kingdom is bbfc-15. Place a suitable 15 rating icon next to content to indicate that no one younger than 15 can see the film in a theater nor can they rent or buy the content. Place a suitable 15 rating icon using <img src=\"resource://bbfc-15\" />.\n\nSuitable 18\n\nThe resource name for the suitable 18 icon for the United Kingdom is bbfc-18. Place a suitable 18 rating icon next to content to indicate that no one younger than 18 can see the film in a theater nor can they rent or buy the content. Place a suitable 18 rating icon using <img src=\"resource://bbfc-18\" />.\n\nRestricted 18\n\nThe resource name for the restricted 18 icon for the United Kingdom is bbfc-r18. Place a restricted 18 rating icon next to content to indicate that it can only be shown to adults 18 and over in specially licensed cinemas or sold from specially licensed stores. Place a restricted 18 rating icon using <img src=\"resource://bbfc-r18\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Rating Icons (Brazil)",
    "url": "https://developer.apple.com/documentation/tvml/rating-icons-brazil",
    "html": "Overview\n\nBrazil movie rating icons indicate who is allowed to watch a movie in Brazil. Ratings are assigned by an advisory board run by the Brazilian Ministry of Justice.\n\nGeneral Audiences\n\nThe resource name for the general audiences icon for Brazil is bars-l. Place a general audiences rating icon next to content to indicate that the content is suitable to be watched by people of any age. Place a general audiences rating icon using <img src=\"resource://bars-l\" />.\n\nRestricted 10\n\nThe resource name for the restricted 10 icon for Brazil is bars-10. Place a restricted 10 rating icon next to content to indicate that children 9 and younger must be accompanied by a parent or guardian.Place a restricted 10 rating icon using <img src=\"resource://bars-10\" />.\n\nRestricted 12\n\nThe resource name for the restricted 12 icon for Brazil is bars-12. Place a restricted 12 rating icon next to content to indicate that children 11 and younger must be accompanied by a parent or guardian. Place a restricted 12 rating icon using <img src=\"resource://bars-12\" />.\n\nRestricted 14\n\nThe resource name for the restricted 14 icon for Brazil is bars-14. Place a restricted 14 rating icon next to content to indicate that children 13 and younger must be accompanied by a parent or guardian. Place a restricted 14 rating icon using <img src=\"resource://bars-14\" />.\n\nRestricted 16\n\nThe resource name for the restricted 16 icon for Brazil is bars-16. Place a restricted 16 rating icon next to content to indicate that children 15 and younger must be accompanied by a parent or guardian. Place a restricted 16 rating icon using <img src=\"resource://bars-16\" />.\n\nRestricted 18\n\nThe resource name for the restricted 10 icon for Brazil is bars-18. Place a restricted 18 rating icon next to content to indicate that only persons 18 and older may view the content. Place a restricted 18 rating icon using <img src=\"resource://bars-18\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Rating Icons (New Zealand)",
    "url": "https://developer.apple.com/documentation/tvml/rating-icons-new-zealand",
    "html": "Overview\n\nNew Zealand movie rating icons indicate who is allowed to watch a movie in New Zealand. Ratings are assigned by the Office of Film & Literature Classification. Ratings fall into three color categories:\n\nGreen. Anyone can view the movie.\n\nYellow. Anyone can view the movie, but parental guidance is suggested.\n\nRed. The film is restricted. It is illegal to show the movie to anyone under the age stated on the label.\n\nGeneral Admission\n\nThe resource name for the general admission icon for New Zealand is NZ-g. Place a general admission rating icon next to content to indicate that the content is suitable to be watched by people of any age. Place a general admissions rating icon using <img src=\"resource://NZ-g\" />.\n\nParental Guidance\n\nThe resource name for the parental guidance icon for New Zealand is NZ-pg. Place a parental guidance rating icon next to content to indicate that the content can be watched by people of any age, but parental guidance is recommended. Place a parental guidance rating icon using <img src=\"resource://NZ-pg\" />.\n\nMature Audiences\n\nThe resource name for the mature audiences icon for New Zealand is NZ-m. Place a mature audiences rating icon next to content to indicate that the content can be watched by people of any age, but is aimed at a mature audience. Place a mature audiences rating icon using <img src=\"resource://NZ-m\" />.\n\nRestricted 13\n\nThe resource name for the restricted icon for New Zealand is NZ-r13. Place a restricted 13 rating icon next to content to indicate that the content can only be watched by people 13 and older. Place a restricted 13 rating icon using <img src=\"resource://NZ-r13\" />.\n\nRestricted 15\n\nThe resource name for the restricted icon for New Zealand is NZ-r15. Place a restricted 15 rating icon next to content to indicate that the content can only be watched by people 15 and older. Place a restricted 15 rating icon using <img src=\"resource://NZ-r15\" />.\n\nRestricted 16\n\nThe resource name for the restricted icon for New Zealand is NZ-r16. Place a restricted 16 rating icon next to content to indicate that the content can only be watched by people 16 and older. Place a restricted 16 rating icon using <img src=\"resource://NZ-r16\" />.\n\nRestricted 18\n\nThe resource name for the restricted icon for New Zealand is NZ-r18. Place a restricted 18 rating icon next to content to indicate that the content can only be watched by people 18 and older. Place a restricted 18 rating icon using <img src=\"resource://NZ-r18\" />.\n\nParental Restriction 13\n\nThe resource name for the parental restriction 13 icon for New Zealand is NZ-rp13. Place a parental restriction 13 rating icon next to content to indicate that children under the age of 13 must be supervised by a parent or guardian. Place a parental restriction 13 rating icon using <img src=\"resource://NZ-rp13\" />.\n\nParental Restriction 16\n\nThe resource name for the parental restriction 16 icon for New Zealand is NZ-rp16. Place a parental restriction 16 rating icon next to content to indicate that children under the age of 16 must be supervised by a parent or guardian. Place a parental restriction 16 rating icon using <img src=\"resource://NZ-rp16\" />.\n\nRestricted\n\nThe resource name for the restricted icon for New Zealand is NZ-r. Place a restricted rating icon next to content to indicate that there is a special restriction on the movie. See the associated label for the full conditions. Place a restricted rating icon using <img src=\"resource://NZ-r\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Television Rating Icons (United States)",
    "url": "https://developer.apple.com/documentation/tvml/television-rating-icons-united-states",
    "html": "Overview\n\nUnited States television rating icons indicate who a program is designed for. Ratings are assigned by the individual broadcast and cable networks. While there is no legal requirement to rate a television program, almost all programs are rated, with the exception of sports and news programs.\n\nFor Children\n\nThe resource name for the for children icon for the United States is tv-y. Place a for children rating icon next to content to indicate that the content is suitable to be watched by people of any age, but targeted for children 2-6. Place a for children rating icon using <img src=\"resource://tv-y\" />.\n\nAges 7 and Older\n\nThe resource name for the ages 7 and older icon for the United States is tv-y7. Place an ages 7 and older rating icon next to content to indicate that the content is suitable to be watched by children who are 7 and older. Place an ages 7 and older rating icon using <img src=\"resource://tv-y7\" />.\n\nAdding the “FV” descriptor indicates that the television program contains fantasy violence. The resource name for this icon is tv-y7fv. Place this icon using <img src=\"resource://tv-y7fv\" />.\n\nAll Ages\n\nThe resource name for the all ages icon for the United States is tv-g. Place an all ages rating icon next to content to indicate that the content is suitable to be watched by audiences of any age. Pplace an all ages rating icon using <img src=\"resource://tv-g\" />.\n\nParental Guidance\n\nThe resource name for the parental guidance icon for the United States is tv-pg. Place a parental guidance rating icon next to content to indicate that parents should review the content before letting young children watch. Place a parental guidance rating icon using <img src=\"resource://tv-pg\" />.\n\nParents Strongly Cautioned\n\nThe resource name for the parents strongly cautioned icon for the United States is tv-14. Place a parents strongly cautioned rating icon next to content to indicate that parents should review the content before allowing children under the age of 14 to watch. Place a parents strongly cautioned rating icon using <img src=\"resource://tv-14\" />.\n\nMature Audiences\n\nThe resource name for the mature audiences icon for the United States is tv-ma. Place a mature audiences rating icon next to content to indicate that the content is suitable to be watched by adults and may be unsuitable for children under 17. Place a mature audiences rating icon using <img src=\"resource://tv-ma\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Button Icons",
    "url": "https://developer.apple.com/documentation/tvml/button-icons",
    "html": "Overview\n\nButton icons are badges that are added to a button element as a visual clue to what the button is used for.\n\nbutton-add\n\nThe resource name for the add button icon is button-add. Place an add button icon next to content to indicate that the user can add the item. Place the add icon using <badge src=\"resource://button-add\" />.\n\nbutton-checkmark\n\nThe resource name for the checkmark button icon is button-checkmark. Place a checkmark button icon next to content to indicate that an item has been selected. Place the checkmark icon using <badge src=\"resource://button-checkmark\" />.\n\nbutton-dropdown\n\nThe resource name for the dropdown button icon is button-dropdown. Place a dropdown button icon to indicate that there are more options for the user underneath the button. Place the dropdown icon using <badge src=\"resource://button-dropdown\" />.\n\nbutton-more\n\nThe resource name for the more button icon is button-more. Place a more button icon to indicate that there is more text that is not currently displayed. Place the more icon using <badge src=\"resource://button-more\" />.\n\nbutton-play\n\nThe resource name for the play button icon is button-play. Place a play button icon to indicate that the user can play the associated media item. Place the play icon using <badge src=\"resource://button-play\" />.\n\nbutton-preview\n\nThe resource name for the preview button icon is button-preview. Place a preview that button icon to indicate that the user can play a short preview of the associated media item. Place the preview icon using <badge src=\"resource://button-preview\" />.\n\nbutton-rate\n\nThe resource name for the rate button icon is button-rate. Place a rate button icon to indicate that the user can rate the associated media item. Place the rate icon using <badge src=\"resource://button-rate\" />.\n\nbutton-rated\n\nThe resource name for the rated button icon is button-rated. Place a rated button icon to indicate that the user has rated the associated media item. Place the rated icon using <badge src=\"resource://button-rated\" />.\n\nbutton-remove\n\nThe resource name for the remove button icon is button-remove. Place a remove button icon to indicate that the user can remove the media item. Place the remove icon using <badge src=\"resource://button-remove\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Movie Rating Icons (United States)",
    "url": "https://developer.apple.com/documentation/tvml/movie-rating-icons-united-states",
    "html": "Overview\n\nUnited States movie rating icons indicate who is allowed to watch a movie in the United States. Ratings are assigned by the Motion Picture Association of America (MPAA). While there is no legal requirement to rate a movie, almost all movie theaters follow the standards set forth by the MPAA.\n\nGeneral Admission\n\nThe resource name for the general admission icon for the United States is mpaa-g. Place a general admission rating icon next to content to indicate that the content is suitable to be watched by people of any age. Place the general admissions rating icon using <img src=\"resource://mpaa-g\" />.\n\nParental Guidance\n\nThe resource name for the parental guidance icon for the United States is mpaa-pg. Place a parental guidance rating icon next to content to indicate that parents should review the content before allowing their children to see it. Place a parental guidance rating icon using <img src=\"resource://mpaa-pg\" />.\n\nParents Strongly Cautioned\n\nThe resource name for the parents strongly cautioned icon for the United States is mpaa-pg13. Place a parents strongly cautioned rating icon next to content to indicate that parents should review the content before allowing children under the age of 13 to see it. Place a parents strongly cautioned rating icon using <img src=\"resource://mpaa-pg13\" />.\n\nRestricted\n\nThe resource name for the restricted icon for the United States is mpaa-r. Place a restricted rating icon next to content to indicate that the content is suitable to be watched by adults. Children under the age of 17 must be accompanied by an adult. Place a restricted rating icon using <img src=\"resource://mpaa-r\" />.\n\nNote\n\nIn Tennessee, children under the age of 18 must be accompanied by an adult to watch a restricted movie.\n\nAdults Only\n\nThe resource name for the adults only icon for the United States is mpaa-nc17. Place an adults only rating icon next to content to indicate that the content can only be watched by someone who is 18 or older. Place an adults only rating icon using <img src=“resource://mpaa-pg13” /> <img src=\"resource://mpaa-nc17\" />.\n\nUnrated\n\nThe resource name for the unrated icon for the United States is unrated. Place an unrated rating icon next to content to indicate that the content has not been rated by the MPAA. This icon is often used with an extended or director’s cut version of a movie. Place an unrated rating icon using <img src=“resource://mpaa-pg13” /> <img src=\"resource://unrated\" />.\n\nNot Rated\n\nThe resource name for the not rated icon for the United States is nr. Place a not rated rating icon next to content to indicate that the content has not been rated by the MPAA. This icon is often used to indicate that the movie was never submitted to the MPAA. Place a not rated rating icon using <img src=“resource://mpaa-pg13” /> <img src=\"resource://nr\" />.\n\nSee Also\nResource Icons\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  },
  {
    "title": "Data Binding Queries",
    "url": "https://developer.apple.com/documentation/tvml/data-binding-queries",
    "html": "Overview\n\nUsing these queries with JSON information and the specialize element provides developers with the ability to modify existing elements. These queries are used to compare one value with another, and the contained action is carried out when the comparison evaluates to true.\n\nTopics\nData Binding Queries\n{property-path}\nCompares a value from a JSON file to a specified value to find out if they are equal.\nSee Also\nQueries\nMedia Queries\nChange the look and layout of a page based on the user’s preferences."
  },
  {
    "title": "tv-text-highlight-style",
    "url": "https://developer.apple.com/documentation/tvml/tv-text-highlight-style",
    "html": "Overview\n\nUse the tv-text-highlight-style style to specify how a label reacts when it comes into focus.\n\nValues for tv-text-highlight-style\nmarquee-and-show-on-highlight\n\nThe text element associated with the lockup element is only shown when the item is in focus. The text will scroll across the screen if the text is longer than the available space.\n\nmarquee-on-highlight\n\nThe text element associated with the lockup element only shows the text that fits within the width of the element. Text longer than the available space is truncated. When the element is in focus, text longer than the available space is shown through scrolling.\n\nshow-on-highlight\n\nThe text element associated with the lockup element is only shown when the item is in focus. Text longer than the available space is truncated.\n\nElements that Use tv-text-highlight-style\n\nsubtitle\n\ntext\n\ntitle\n\nNote\n\ntv-text-highlight-style is only applied to the above elements when they are contained in a listItemLockup or lockup element. Elements contained in a listItemLockup can only use the marquee-on-highlight.\n\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "Media Queries",
    "url": "https://developer.apple.com/documentation/tvml/media-queries",
    "html": "Topics\nMedia Queries\nlayout-direction\nSets the text direction based on the user’s language preference.\ntv-theme\nSets an element’s appearance according to the specified theme.\nSee Also\nQueries\nData Binding Queries\nCompare a value from a JSON file to another value."
  },
  {
    "title": "Alignment, Scrolling, and Coloring",
    "url": "https://developer.apple.com/documentation/tvml/alignment-scrolling-and-coloring",
    "html": "Topics\nElement Alignment\ncentered\nCenters media items in a shelf.\nminLength\nReserves space for an element.\nrowCount\nSpecifies the number of rows in a shelf.\nScrolling\nindexTitles\nSpecifies index bar titles for a section element.\nshowsScrollIndicator\nShows a scroll indicator along the side of an element appropriate for the user’s specified language.\nTheme Settings\ntheme\nSets the color scheme for an element.\nSee Also\nAttributes\nImage Attributes\nRetrieve images from a server and specify how they fit into an element.\nText Attributes\nModify how text is displayed, entered, and laid out.\nFocus Attributes\nDefine how an element acts when it comes into focus.\nBinding and DOM Manipulation\nImplement binding and impove DOM manipulation options.\nInline Playback\nSet when and how inline playback is initiated."
  },
  {
    "title": "Binding and DOM Manipulation",
    "url": "https://developer.apple.com/documentation/tvml/binding-and-dom-manipulation",
    "html": "Topics\nBinding and DOM Manipulation\nbinding\nAssociates information in a data item with an element.\nitemID\nMark elements for reuse during DOM updates.\nprototype\nAssociates a data item type with an element.\nneedsMoreThreshold\nSets the amount of remaining screen lengths before firing the needs more event.\nSee Also\nAttributes\nImage Attributes\nRetrieve images from a server and specify how they fit into an element.\nText Attributes\nModify how text is displayed, entered, and laid out.\nFocus Attributes\nDefine how an element acts when it comes into focus.\nInline Playback\nSet when and how inline playback is initiated.\nAlignment, Scrolling, and Coloring\nAlign elements within a shelf, set how your app reacts to scrolling, and set the overall color scheme for your app."
  },
  {
    "title": "Text Attributes",
    "url": "https://developer.apple.com/documentation/tvml/text-attributes",
    "html": "Topics\nText Attributes\naccessibilityText\nAdds hidden text to an element that is used when VoiceOver is enabled.\nfirstName\nAdds a person’s first name to an element.\nlastName\nAdds a person’s last name to an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nsecure\nHides typed text.\nshowSpinner\nDisplays a rotating spinner icon inside of a search field.\nDate Settings\nformat\nSpecifies how a date is displayed.\nlocale\nSets the locale for the date element.\nKeyboard Types\nkeyboardType\nSpecifies the keyboard to display.\nSee Also\nAttributes\nImage Attributes\nRetrieve images from a server and specify how they fit into an element.\nFocus Attributes\nDefine how an element acts when it comes into focus.\nBinding and DOM Manipulation\nImplement binding and impove DOM manipulation options.\nInline Playback\nSet when and how inline playback is initiated.\nAlignment, Scrolling, and Coloring\nAlign elements within a shelf, set how your app reacts to scrolling, and set the overall color scheme for your app."
  },
  {
    "title": "Image Attributes",
    "url": "https://developer.apple.com/documentation/tvml/image-attributes",
    "html": "Topics\nImage Size\nheight\nSpecifies the maximum height for an image.\nwidth\nSpecifies the maximum width for an image element.\naspectRatio\nSpecifies the aspect ratio of an image.\nImage Display\naspectFill\nStretches an image to fill the containing bounding box.\ncontentsMode\nSpecifies how an image is expanded to fill its containing element.\nopaque\nIndicates whether an image has a transparent background.\nmode\nSpecifies how an image is displayed.\ntype\nSpecifies how a badge is drawn.\nvalue\nSpecifies the value used for a fillable element.\nImage Retrieval\nsrc\nSpecifies the URL for an image.\nsrcset\nSpecifies multiple URLs for an image.\nSee Also\nAttributes\nText Attributes\nModify how text is displayed, entered, and laid out.\nFocus Attributes\nDefine how an element acts when it comes into focus.\nBinding and DOM Manipulation\nImplement binding and impove DOM manipulation options.\nInline Playback\nSet when and how inline playback is initiated.\nAlignment, Scrolling, and Coloring\nAlign elements within a shelf, set how your app reacts to scrolling, and set the overall color scheme for your app."
  },
  {
    "title": "Focus Attributes",
    "url": "https://developer.apple.com/documentation/tvml/focus-attributes",
    "html": "Topics\nFocus Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\ndisabled\nSets an element as unfocusable.\nhandlesOverflow\nAdds the “MORE” label to a description.\nSee Also\nAttributes\nImage Attributes\nRetrieve images from a server and specify how they fit into an element.\nText Attributes\nModify how text is displayed, entered, and laid out.\nBinding and DOM Manipulation\nImplement binding and impove DOM manipulation options.\nInline Playback\nSet when and how inline playback is initiated.\nAlignment, Scrolling, and Coloring\nAlign elements within a shelf, set how your app reacts to scrolling, and set the overall color scheme for your app."
  },
  {
    "title": "tv-scrollable-bounds-inset",
    "url": "https://developer.apple.com/documentation/tvml/tv-scrollable-bounds-inset",
    "html": "Overview\n\nUse the tv-scrollable-bounds-inset style to create an unscrollable region of specified size from the top and bottom of the stackTemplate. When you use unscrollable regions, the content offset is no longer automatically adjusted to allow “peeking” — the partial view of elements directly above and below the focused element.\n\nOnce focus is shifted from an unscrollable region to a scrollable region, the content offset of the template is adjusted to the specified tv-scrollable-bounds-inset value, so that the unscrollable region doesn’t appear on screen.\n\nNote\n\nBy default, the entire template is scrollable if you don’t define the tv-scrollable-bounds-inset style.\n\nHere’s an example that sets the inset (unscrollable space) at the top, right, bottom, and left all to 100 points.\n\n<stackTemplate style=\"tv-scrollable-bounds-inset: 100.0;\">\n    <banner>\n        …\n    </banner>\n    <collectionList>\n        <shelf>\n            <section>\n                <lockup>…</lockup>\n            </section>\n        </shelf>\n    </collectionList>\n</stackTemplate>\n\n\nHere’s an example that sets the inset (unscrollable space) at the top to 50 points, and the inset at the bottom to 75 points.\n\n<stackTemplate style=\"tv-scrollable-bounds-inset: 50.0 0.0 75.0 0.0;\">\n    <banner>\n        …\n    </banner>\n    <collectionList>\n        <shelf>\n            <section>\n                <lockup>…</lockup>\n            </section>\n        </shelf>\n    </collectionList>\n</stackTemplate>\n\nValues for tv-scrollable-bounds-inset\nFloat\n\nThe amount of unscrollable space, in points, set at the top, right, bottom, and left of the stackTemplate.\n\nFloat Float\n\nThe first value determines the amount of unscrollable space in points at both the top and the bottom of the stackTemplate. The second value determines the amount of unscrollable space at both the right and left.\n\nFloat Float Float\n\nThe first value determines the amount of unscrollable space in points at the top of the stackTemplate. The second value determines the amount of unscrollable space at both the right and the left. The third value determines the amount of space at the bottom.\n\nFloat Float Float Float\n\nThe first value determines the amount of unscrollable space in points at the top of the stackTemplate. The second value determines the amount of unscrollable space at the right. The third value determines the amount of space at the bottom. The fourth value determines the amount of space at the left.\n\nImportant\n\nCurrently, creating unscrollable regions at the left and right of the stackTemplate is not supported and will not have any effect.\n\nElements That Use tv-scrollable-bounds-inset\n\nstackTemplate\n\nTopics\nSpecifying Inset Location\ntv-scrollable-bounds-inset-top\nSpecifies the size of an unscrollable region only at the top of the stack template.\ntv-scrollable-bounds-inset-bottom\nSpecifies the size of an unscrollable region only at the bottom of the stack template.\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus."
  },
  {
    "title": "tv-rating-style",
    "url": "https://developer.apple.com/documentation/tvml/tv-rating-style",
    "html": "See Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "tv-transition",
    "url": "https://developer.apple.com/documentation/tvml/tv-transition",
    "html": "Overview\n\nUse the tv-transition style to apply a transition effect to an element.\n\nValues for tv-transition\ndissolve\n\nThe element stays in place and uses a dissolve effect.\n\nmagicMove\n\nThe element uses the magic move transition. When the user swipes to the left, the current image shrinks slightly, and a new image is brought on top of it from the right. When the user swipes to the right, the image slides off screen to the right. This action reveals the next image, which then grows to fill the screen.\n\nnone\n\nNo transition effect is applied to the element.\n\npush\n\nThe element is pushed onto the screen.\n\nwipe\n\nThe element is wiped from the screen.\n\nElements that Use tv-transition\n\noneupTemplate\n\nSee Also\nStyles\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template."
  },
  {
    "title": "Layout Elements",
    "url": "https://developer.apple.com/documentation/tvml/layout-elements",
    "html": "Overview\n\nEach compound element organizes its contained elements differently. For example, a shelf element displays its information horizontally, while a grid element can display information horizontally and vertically.\n\nTopics\nContainer Elements\ncarousel\nArranges images in a row.\ngrid\nArranges elements in a grid pattern.\nimgDeck\nContains several images to be displayed at a later time.\ninfoTable\nDisplays contained element information in a vertical format, with each successive element directly below the previous element.\norganizer\nCreates a generic element with its contained elements arranged through TVML styles.\nrow\nDisplays elements horizontally.\nsection\nCombines elements and acts as a single element.\nstack\nGroups and lays out elements vertically.\nshelf\nDisplays elements horizontally and adds the ability to scroll to offscreen elements.\nBar Elements\nmenuBar\nDisplays menu items along the top of the screen.\nmenuItem\nDisplays a label for an item.\nnowPlayingMenuItem\nDisplays information about currently playing audio.\nsegmentBar\nDisplays a list of segment bar items.\nsegmentBarHeader\nDisplays information above a segment bar.\nsegmentBarItem\nProvides titles inside of a segment bar.\ntumblerBar\nDisplays a list of tumblerItem elements.\ntumblerItem\nContains title information for a tumbler header.\nList Elements\ncollectionList\nContains other layout elements.\ninfoList\nDisplays info element information in a vertical format.\nlist\nCreates a generic container.\nSee Also\nCompound Elements\nBackground Elements\nControl background images and media items that play in the background.\nBanner and Header Elements\nProvide initial descriptive information for other elements.\nInformation Elements\nGroup and display content in the form best suited for the information.\nLockup Elements\nCombine several elements so that they can be treated as a single element."
  },
  {
    "title": "Information Elements",
    "url": "https://developer.apple.com/documentation/tvml/information-elements",
    "html": "Topics\nGeneral Information Elements\ninfo\nDisplays grouped sets of information.\nproductInfo\nContains general information about a product.\nBinding Elements\nprototypes\nDefines a group of elements that can be reused through binding.\nrules\nContains the elements used in data binding and media queries.\nspecialize\nImplements queries used for data binding.\nCard Elements\ncard\nCreates a generic element with its contained elements arranged through TVML styles.\nreviewCard\nDisplays abbreviated review information for a media item.\nratingCard\nContains rating information about a product.\nRelated Information Elements\nplaceholder\nContains elements that are not directly evaluated by the template.\nrelatedContent\nContains elements that are related to another element.\nSee Also\nCompound Elements\nBackground Elements\nControl background images and media items that play in the background.\nBanner and Header Elements\nProvide initial descriptive information for other elements.\nLayout Elements\nOrganize and display multiple elements in a structured layout.\nLockup Elements\nCombine several elements so that they can be treated as a single element."
  },
  {
    "title": "Banner and Header Elements",
    "url": "https://developer.apple.com/documentation/tvml/banner-and-header-elements",
    "html": "Topics\nBanner Elements\nbanner\nDisplays information along the top of a TVML page.\nidentityBanner\nDisplays information about an artist or performer.\nitemBanner\nDisplays information associated with an element.\nHeader and Footer Elements\nfooter\nContains information displayed at the bottom of an element.\nheader\nContains information displayed at the bottom of an element.\nSee Also\nCompound Elements\nBackground Elements\nControl background images and media items that play in the background.\nInformation Elements\nGroup and display content in the form best suited for the information.\nLayout Elements\nOrganize and display multiple elements in a structured layout.\nLockup Elements\nCombine several elements so that they can be treated as a single element."
  },
  {
    "title": "searchTemplate",
    "url": "https://developer.apple.com/documentation/tvml/searchtemplate",
    "html": "Overview\n\nUse the searchTemplate element to display a text field that takes user input in order to search for a specific item; for example, looking for a specific movie to download. Developers can also display preselected results in a shelf, list, or collectionList element under the search field. The following figure shows the basic layout for a searchTemplate page. The theme for the search template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the searchTemplate element in TVML format.\n\n<searchTemplate>\n    <searchField />\n    <shelf>\n        <header>\n            …\n        </header>\n        <section>\n            <lockup>\n                <img />\n                <title>…</title>\n            </lockup>\n        </section>\n    </shelf>\n</searchTemplate>\n\n\nNote\n\nThe shelf element can be replaced with a collectionList or list element to change the look of the search results.\n\nElement Descriptions\ncollectionList\n\nElement containing a group of options (such as most popular movies) or search results.\n\nimg\n\nA figure representing a search result.\n\nlist\n\nElement containing a list of options (such as most popular movies) or search results.\n\nlockup\n\nA group of elements describing a search result or prepopulated results.\n\nsearchField\n\nA text field where the user is able to enter search terms. JavaScript is used to read the information entered.\n\nsection\n\nElements that are grouped together so that they can be treated as one element for layout purposes.\n\nshelf\n\nElement containing a row of options (such as most popular movies) or search results.\n\ntitle\n\nThe title for a search result.\n\nExample\n\nThe following listing shows the TVML for a searchTemplate example. The example displays a search field and keyboard along the top of the screen. A shelf is prepopulated with popular movies. Modify your main JavaScript file to accept the user input from the search field. For more information on available JavaScript functions, see TVMLKit JS.\n\n<document>\n    <searchTemplate>\n        <searchField/>\n        <shelf>\n            <header>\n                <title>Popular</title>\n            </header>\n            <section>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"182\" height=\"274\" />\n                    <title>Movie 1</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"182\" height=\"274\" />\n                    <title>Movie 2</title>\n                </lockup>\n                <lockup>\n                    <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"182\" height=\"274\" />\n                    <title>Movie 3</title>\n                </lockup>\n            </section>\n        </shelf>\n    </searchTemplate>\n</document>\n\n\nThe following listing shows the output for the above example:\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nitemID\nMark elements for reuse during DOM updates.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "stackTemplate",
    "url": "https://developer.apple.com/documentation/tvml/stacktemplate",
    "html": "Overview\n\nUse the stackTemplate element to display, for example, displaying different genres of movies. Each group of products is displayed directly underneath the previous group. Products can be displayed in different ways using carousel, grid, and shelf elements. The following figure shows the basic layout for a stackTemplate page. The theme for the stack template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the stackTemplate element in TVML format.\n\n<stackTemplate>\n    <banner>\n        …\n    </banner>\n    <collectionList>\n        <shelf>\n            <section>\n                <lockup>…</lockup>\n            </section>\n        </shelf>\n    </collectionList>\n</stackTemplate>\n\n\nNote\n\nThe shelf element can be replaced with a grid or carousel element to change the way products are displayed.\n\nElement Descriptions\nbanner\n\nA page description along the top of the screen.\n\ncarousel\n\nElement that contains all elements used to display groups of products, such as dramas and comedies, in a horizontal format.\n\ncollectionList\n\nElement that contains all elements used to display groups of products, such as dramas and comedies, in a horizontal format.\n\ngrid\n\nElement that contains all elements used to display groups of products, such as dramas and comedies, in a grid format.\n\nlockup\n\nElement containing img and title elements used to describe a product.\n\nsection\n\nElement containing a group of lockup elements.\n\nshelf\n\nElement containing a group of section elements.\n\nExample\n\nThe following listing shows the TVML for a stackTemplate example:\n\n<document>\n    <stackTemplate>\n        <banner>\n            <title>Available Action Movies</title>\n        </banner>\n        <collectionList>\n            <shelf>\n                <section>\n                    <lockup>\n                        <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"182\" height=\"274\" />\n                        <title>Movie 1</title>\n                    </lockup>\n                    <lockup>\n                        <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"182\" height=\"274\" />\n                        <title>Movie 2</title>\n                    </lockup>\n                    <lockup>\n                        <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"182\" height=\"274\" />\n                        <title>Movie 3</title>\n                    </lockup>\n                </section>\n            </shelf>\n            <shelf>\n                <section>\n                    <lockup>\n                        <img src=\"path to images on your servers/Space_Movie/Space_Movie_250x375_B.png\" width=\"182\" height=\"274\"></img>\n                        <title>Movie 4</title>\n                    </lockup>\n                    <lockup>\n                        <img src=\"path to images on your server/Space_Movie/Space_Movie_250x375_A.png\" width=\"182\" height=\"274\"></img>\n                        <title>Movie 5</title>\n                    </lockup>\n                    <lockup>\n                        <img src=\"path to images on your server/Space_Movie/Space_Movie_250x375_C.png\" width=\"182\" height=\"274\"></img>\n                        <title>Movie 6</title>\n                    </lockup>\n                </section>\n            </shelf>\n        </collectionList>\n    </stackTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nYou can also customize the stack template’s background content. To do so, embed a mediaContent element in a background element, as shown in this example:\n\n<background>\n    <mediaContent playbackMode=\"always\">\n        <img src=\"path to images on your server/Car_Movie.png\"/>\n    </mediaContent>\n</background>\n\n\nWhen you add a video in the background, playback starts 5 seconds after the page is loaded. The video does not repeat.\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nitemID\nMark elements for reuse during DOM updates.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nneedsMoreThreshold\nSets the amount of remaining screen lengths before firing the needs more event.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "productTemplate",
    "url": "https://developer.apple.com/documentation/tvml/producttemplate",
    "html": "Overview\n\nUse the productTemplate element to display, for example, a page that describes a movie, including information about the actors, ratings, and like movies. The page displays general information about the product in the top two-thirds of the screen with a row of related products directly below. A user can scroll down and access detailed information about the product, including critical reviews, actor biographies, and information about any included extras.\n\nThe following figure shows the basic layout for a productTemplate page. The default theme for a product template is dark when a background image is specified; otherwise, the product template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the productTemplate element in TVML format.\n\n<productTemplate>\n    <banner>\n        <infoList>\n        </infoList>\n        <stack>\n            <title>…</title>\n            <subtitle>…</subtitle>\n            <row>\n            </row>\n            <description>…</description>\n            <buttonLockup>\n            </buttonLockup>\n        </stack>\n        <heroImage src=\"…\" />\n    </banner>\n    <shelf>\n    </shelf>\n    <!—- Everything following is under the fold —->\n        <shelf>\n        </shelf>\n        <productInfo>\n        </productInfo>\n    </productTemplate>\n\n\nNote\n\nYou can change the look of a productTemplate page by removing heroImage from the stack element and replacing it with an img element that covers the entire screen.\n\nElement Descriptions\nbanner\n\nElement containing subelements that provide primary information about a product, such as a movie title, description, credits, and purchase information.\n\nbuttonLockup\n\nA type of button that can contain an image (the badge element) as well as text.\n\ndescription\n\nText that describes the product in detail; for example, a movie synopsis.\n\nheroImg\n\nAn image of the product.\n\ninfoList\n\nProduct information such as actors, directors, and producers.\n\nproductInfo\n\nTechnical information about the product such as runtime, language availability, and accessibility information.\n\nrow\n\nA group of information elements.\n\nshelf\n\nAn element containing row elements. Several shelves are used to display information like shows other users have watched and extra features provided by this product.\n\nstack\n\nBasic information about the product, including the title, rating, and a description.\n\nsubtitle\n\nText that provides additional information about its containing element.\n\ntitle\n\nThe title describing its containing element.\n\nExample\n\nThe following listing shows the TVML for a productTemplate example:\n\n<document>\n   <productTemplate>\n      <background>\n      </background>\n      <banner>\n         <infoList>\n            <info>\n               <header>\n                  <title>Director</title>\n               </header>\n               <text>John Appleseed</text>\n            </info>\n            <info>\n               <header>\n                  <title>Actors</title>\n               </header>\n               <text>Anne Johnson</text>\n               <text>Tom Clark</text>\n               <text>Maria Ruiz</text>\n            </info>\n         </infoList>\n         <stack>\n            <title>WWDC Road Trip</title>\n            <row>\n               <text><badge src=\"resource://tomato-fresh\"/> 99%</text>\n               <text>1hr 54min</text>\n               <text>Comedy</text>\n               <text>2015</text>\n               <badge src=\"resource://mpaa-pg\" class=\"badge\" />\n               <badge src=\"resource://cc\" class=\"badge\" />\n            </row>\n            <description handlesOverflow =\"true\">An aspiring developer gets a ticket to WWDC at the last minute. Now they need to get across country in time for the keynote, and the only person who can help is their quirky roommate.</description>\n            <text>Language information can go here</text>\n            <row>\n               <buttonLockup>\n                  <badge src=\"resource://button-preview\" />\n                  <title>Preview</title>\n               </buttonLockup>\n               <buttonLockup type=\"buy\">\n                  <text>$9.99</text>\n                  <title>Buy</title>\n               </buttonLockup>\n            </row>\n         </stack>\n         <heroImg src=\"path to images on your server/Car_Movie_720x1080.png\" />\n      </banner>\n      <shelf>\n         <header>\n            <title>Viewers Also Watched</title>\n         </header>\n         <section>\n            <lockup>\n               <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"150\" height=\"226\" />\n               <title>Turn</title>\n            </lockup>\n            <lockup>\n               <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"150\" height=\"226\" />\n               <title>Road</title>\n            </lockup>\n            <lockup>\n               <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"150\" height=\"226\" />\n               <title>Helicopter</title>\n            </lockup>\n         </section>\n      </shelf>\n<!—- Everything past this is below the fold —->\n      <shelf>\n         <header>\n            <title>Reviews and Ratings</title>\n         </header>\n         <section>\n            <ratingCard>\n               <title>4.1 / 5</title>\n               <ratingBadge value=\"0.7\"></ratingBadge>\n               <description>Average of 2,241 iTunes user ratings and reviews.</description>\n            </ratingCard>\n            <ratingCard>\n               <title><badge src=\"resource://tomato-fresh\" /> 99%</title>\n               <text>Tomatometer</text>\n               <infoTable>\n                  <info>\n                     <header>\n                        <title>175</title>\n                     </header>\n                     <text>Reviews</text>\n                  </info>\n                  <info>\n                     <header>\n                        <title>173</title>\n                     </header>\n                     <text>Fresh</text>\n                  </info>\n                  <info>\n                     <header>\n                        <title>2</title>\n                     </header>\n                     <text>Rotten</text>\n                  </info>\n               </infoTable>\n            </ratingCard>\n            <reviewCard>\n               <badge src=\"resource://tomato-fresh-m\" />\n               <title>WWDC Review</title>\n               <description>Brief review here</description>\n               <text>Ravi Patel June, 8 2015</text>\n            </reviewCard>\n         </section>\n      </shelf>\n      <shelf>\n         <header>\n            <title>Cast and Crew</title>\n         </header>\n         <section>\n            <monogramLockup>\n               <monogram firstName=\"Anne\" lastName=\"Johnson\"/>\n               <title>Anne Johnson</title>\n               <subtitle>Actor</subtitle>\n            </monogramLockup>\n            <monogramLockup>\n               <monogram firstName=\"Tom\" lastName=\"Clark\"/>\n               <title>Tom Clark</title>\n               <subtitle>Actor</subtitle>\n            </monogramLockup>\n            <monogramLockup>\n               <monogram firstName=\"Maria\" lastName=\"Ruiz\"/>\n               <title>Maria Ruiz</title>\n               <subtitle>Actor</subtitle>\n            </monogramLockup>\n         </section>\n      </shelf>\n      <productInfo>\n         <infoTable>\n            <header>\n               <title>Information</title>\n            </header>\n            <info>\n               <header>\n                  <title>Studio</title>\n               </header>\n               <text>Apple</text>\n            </info>\n            <info>\n               <header>\n                  <title>Runtime</title>\n               </header>\n               <text>1:54</text>\n            </info>\n            <info>\n               <header>\n                  <title>Format</title>\n               </header>\n               <text>Widescreen</text>\n            </info>\n         </infoTable>\n         <infoTable>\n            <header>\n               <title>Languages</title>\n            </header>\n            <info>\n               <header>\n                  <title>Primary</title>\n               </header>\n               <text>English (Dolby 5.1), Subtitles, CC</text>\n            </info>\n            <info>\n               <header>\n                  <title>Additional</title>\n               </header>\n               <text>Cantonese (Subtitles)</text>\n            </info>\n         </infoTable>\n         <infoTable style=\"tv-line-spacing:10;\">\n            <header>\n               <title>Accessibility</title>\n            </header>\n            <info>\n               <header>\n                  <textBadge>SDH</textBadge>\n               </header>\n               <text>Subtitles for the deaf and Hard of Hearing (SDH) refer to subtitles in the original lanuage with the addition of relevant non-dialog information.</text>\n            </info>\n         </infoTable>\n      </productInfo>\n   </productTemplate>\n</document>\n\n\nThe following figures show the ouput for the above example. The first figure shows the output for the example when it first appears on screen. The second figure shows the output below the fold as the user scrolls down the screen.\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nitemID\nMark elements for reuse during DOM updates.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "paradeTemplate",
    "url": "https://developer.apple.com/documentation/tvml/paradetemplate",
    "html": "Overview\n\nUse the paradeTemplate element to display a list of automatically scrolling, static images on the left that are associated with a selected image category on the right. For example, a user selects Action movies, and the associated images automatically start scrolling. The following figure shows the basic layout for a paradeTemplate page. The theme for the parade template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows main elements of the paradeTemplate in TVML format.\n\n<paradeTemplate>\n   <list>\n      <header>\n         <title>Title</title>\n      </header>\n      <section>\n         <listItemLockup>\n            <title>Title 1</title>\n         </listItemLockup>\n         <listItemLockup>\n            <title>Title 2</title>\n         </listItemLockup>\n      </section>\n      <relatedContent>\n         <imgDeck>\n            <img src=\"\" />\n            <img src=\"\" />\n         </imgDeck>\n      </relatedContent\n   </list>\n</paradeTemplate>\n\nElement Descriptions\nheader\n\nTitle information for the list of image categories on the right side of the screen.\n\nimg\n\nA single image that scrolls across the left side of the screen.\n\nimgDeck\n\nA group of images on the left side of the screen that scroll right-to-left.\n\nlist\n\nElement containing all the elements that are displayed.\n\nlistItemLockup\n\nInformation about an individual item in the list of image categories.\n\nrelatedContent\n\nElement containing the image deck that is associated with a particular item in the list.\n\ntitle\n\nThe text used to provide a description for its containing element.\n\nExample\n\nThe following listing shows the TVML for a paradeTemplate example.\n\n<document>\n    <paradeTemplate>\n        <list>\n            <header>\n                <title>Movie Genres</title>\n            </header>\n            <section>\n                <listItemLockup>\n                    <title>Action</title>\n                </listItemLockup>\n                <listItemLockup>\n                    <title>Comedy</title>\n                </listItemLockup>\n                <listItemLockup>\n                    <title>Horror</title>\n                </listItemLockup>\n                <listItemLockup>\n                    <title>Kids</title>\n                </listItemLockup>\n                <listItemLockup>\n                    <title>Drama</title>\n                </listItemLockup>\n            </section>\n            <relatedContent>\n                <imgDeck>\n                    <img src=\"path to images on your server/Car_Movie_250x375.png \"/>\n                    <img src=\"path to images on your server/Car_Movie_250x375_A.png \"/>\n                    <img src=\"path to images on your server/Car_Movie_250x375_B.png \"/>\n                    <img src=\"path to images on your server/Car_Movie_250x375_C.png \"/>\n                </imgDeck>\n            </relatedContent>\n        </list>\n    </paradeTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "menuBarTemplate",
    "url": "https://developer.apple.com/documentation/tvml/menubartemplate",
    "html": "Overview\n\nUse the menuBarTemplate to display a list of selectable items across the top of the screen. Users can move between menu bar items to change the information displayed below the menu bar. The following figure shows the basic layout for a menuBarTemplate page. The theme for the menu bar template defaults to the system preference.\n\nNote\n\nYou can display up to seven items in the menu bar.\n\nMain Elements\n\nThe following listing shows the main elements of the menuBarTemplate element in TVML format.\n\n<document>\n    <menuBarTemplate>\n        <menuBar>\n            <menuItem>\n                <title>…</title>\n            </menuItem>\n        </menuBar>\n    </menuBarTemplate>\n</document>\n\nElement Descriptions\nmenuBar\n\nMenu items associated with the menu bar.\n\nmenuItem\n\nInformation about a single menu item.\n\ntitle\n\nThe text that describes the menu item.\n\nExample\n\nThe following listing shows the TVML for a menuBarTemplate example. The example shows the menu bar along the top of the screen. Expand the controlling JavaScript file in order to show content for each item in the menu bar. For more information, see TVMLKit JS.\n\n<document>\n    <menuBarTemplate>\n        <menuBar>\n            <menuItem id=\"navigation_top_movies\" data-identifier=\"list\">\n                <title>Top Movies</title>\n            </menuItem>\n            <menuItem id=\"navigation_genres\" data-identifier=\"index\">\n                <title>Genres</title>\n            </menuItem>\n            <menuItem id=\"navigation_search\" data-identifier=\"search\">\n                <title>Search</title>\n            </menuItem>\n            <menuItem id=\"navigation_edit\" data-identifier=\"edit\">\n                <title>Edit</title>\n            </menuItem>\n            <menuItem id=\"navigation_settings_add\" data-identifier=\"add_settings\">\n                <title>Add Settings</title>\n            </menuItem>\n        </menuBar>\n    </menuBarTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "mainTemplate",
    "url": "https://developer.apple.com/documentation/tvml/maintemplate",
    "html": "Overview\n\nUse the mainTemplate element to display options to the user; for example, the main page for a movie with options to play the movie, see extra content, and jump to specific scenes. The background area contains an image relating to the product, and the options are contained in a menu bar along the bottom of the screen. The following figure shows the basic layout for a mainTemplate page. The default theme for a main template is dark.\n\nMain Elements\n\nThe following listing shows the elements of the mainTemplate element in TVML format.\n\n<mainTemplate>\n    <background>…</background>\n    <menuBar>\n        <section>\n            <menuItem>…</menuItem>\n            <menuItem>…</menuItem>\n        </section>\n    </menuBar>\n</mainTemplate>\n\nElement Descriptions\nbackground\n\nThe background elements used on the page, such as audio.\n\nmenuBar\n\nA list of displayed menu items.\n\nmenuItem\n\nInformation for an individual menu item.\n\nsection\n\nAn area containing a group of menu items.\n\nExample\n\nThe following listing shows the TVML for a mainTemplate example. The example displays a full-screen image as the background. A menu bar contains three navigable options.\n\n<document>\n    <mainTemplate>\n        <background>\n            <img src=\"path to images on your server/Car_Movie_1920x1080\" />\n        </background>\n        <menuBar>\n            <section>\n                <menuItem>\n                    <title>PLAY</title>\n                </menuItem>\n                <menuItem>\n                    <title>SCENES</title>\n                </menuItem>\n                <menuItem>\n                    <title>EXTRAS</title>\n                </menuItem>\n            </section>\n        </menuBar>\n    </mainTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "listTemplate",
    "url": "https://developer.apple.com/documentation/tvml/listtemplate",
    "html": "Overview\n\nUse the listTemplate element to display a list of items; for example, a list of the user’s favorite movies. Whereas you use the catalog template to display categories of a product (action movies, comedies, favorite movies), you use the list template to display actual contents of one category, such as a list of the user’s favorite movies. The items are listed on the right side of the screen with like items grouped together in a section. A title providing a brief description of the items is contained in a header area directly above the listed items. When an item is selected, information about the item is displayed on the left side of the screen. The following figure shows the basic layout for a listTemplate page. The theme for the list template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the listTemplate in TVML format.\n\n<listTemplate>\n   <banner>\n      …\n   </banner>\n   <list>\n      <header>\n         …\n      </header>\n      <section>\n         <listItemLockup>\n            <title>…</title>\n            <relatedContent>\n               …\n            </relatedContent>\n         </listItemLockup\n      </section>\n   </list>\n</listTemplate>\n\nElement Descriptions\nbanner\n\nElement containing background information and the page title.\n\nheader\n\nInformation describing what a section contains.\n\nlist\n\nElement containing all content for the listTemplate page.\n\nlistItemLockup\n\nElement containing all information that pertains to one list item, such as an item title and image, as well as related content.\n\nrelatedContent\n\nInformation that is displayed on the left side of the screen when an item in the list is highlighted.\n\nsection\n\nAn area of the page that groups related elements together as one element, for layout purposes. In this case, the section contains list items.\n\nExample\n\nThe following listing shows the TVML for a listTemplate example. An image and a description that relate to the highlighted item are displayed on the left side of the screen.\n\n<document>\n   <listTemplate>\n      <banner>\n         <title>Johnny Appleseed's Movie Collection</title>\n      </banner>\n      <list>\n         <header>\n            <title>Favorite Movies</title>\n         </header>\n         <section>\n            <listItemLockup>\n               <title>Movie 1</title>\n               <relatedContent>\n                  <lockup>\n                     <img src=\"path to images on your server/Car_Movie_1920x1080.png\" width=\"857\" height=\"482\" />\n                     <title>Movie 1</title>\n                     <description>A brief description for the first movie should go here.</description>\n                  </lockup>\n               </relatedContent>\n            </listItemLockup>\n            <listItemLockup>\n               <title>Movie 2</title>\n               <relatedContent>\n                  <lockup>\n                     <img src=\"path to images on your server/Car_Movie_800x600.png\" width=\"857\" height=\"482\" />\n                     <title>Movie 2</title>\n                     <description>A brief description for the second movie should go here.</description>\n                  </lockup>\n               </relatedContent>\n            </listItemLockup>\n            <listItemLockup>\n               <title>Movie 3</title>\n               <relatedContent>\n                  <lockup>\n                     <img src=\"path to images on your server/Car_Movie_720x720.png\" width=\"857\" height=\"482\" />\n                     <title>Movie 3</title>\n                     <description>A brief description for the third movie should go here.</description>\n                  </lockup>\n               </relatedContent>\n            </listItemLockup>\n         </section>\n      </list>\n   </listTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "formTemplate",
    "url": "https://developer.apple.com/documentation/tvml/formtemplate",
    "html": "Overview\n\nUse the formTemplate element to gather information from the user; for example, requiring a password to access your app. The banner area can contain an image and a description of your product. The user enters text in the text field directly below the banner using the automatically generated keyboard. Use the footer area to contain any user interaction buttons. The following figure shows the basic layout for a formTemplate page. The theme for the form template defaults to the system preference.\n\nForm Template\n\nThe following listing shows the main elements of the formTemplate element in TVML format.\n\n<formTemplate>\n    <background>\n        …\n    </background>\n    <banner>\n        <img />\n        <description>…</description>\n    </banner>\n    <textField>…</textField>\n    <footer>…</footer>\n</formTemplate>\n\nElement Descriptions\nbackground\n\nOnly accepts img and heroImg elements in the background.\n\nbanner\n\nInformation displayed along the top of the screen that is typically used to provide instructions to the user.\n\ndescription\n\nThe text used to describe what the user needs to enter.\n\nfooter\n\nInformation displayed along the bottom of the screen, such as a Submit button for the user to commit the information entered in textField.\n\nimg\n\nAn image of the product.\n\ntextField\n\nUser input field.\n\nExample\n\nThe following listing shows the TVML for a formTemplate example. The interactive keyboard is automatically created. The footer area contains a button that can submit the user input. Modify your main JavaScript file to accept the user input from the button. For more information on available JavaScript functions, see TVMLKit JS.\n\n<document>\n    <formTemplate>\n        <banner>\n            <img src=\"path to images on your server/Car_Movie_800X400.png\" width=\"800\" height=\"400\"/>\n            <description>Enter email for access</description>\n        </banner>\n        <textField>tclark@example.com</textField>\n        <footer>\n            <button>\n                <text>Submit</text>\n            </button>\n        </footer>\n    </formTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "descriptiveAlertTemplate",
    "url": "https://developer.apple.com/documentation/tvml/descriptivealerttemplate",
    "html": "Overview\n\nUse the descriptiveAlertTemplate element to display a significant amount of important information, such as a Terms of Service page. A title is displayed at the top of the screen with a large text area directly below it. An area containing buttons is located along the bottom of the screen. The following figure shows the basic layout for a descriptiveAlertTemplate page. The theme for the descriptive alert template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the descriptiveAlertTemplate in TVML format.\n\n<descriptiveAlertTemplate>\n   <background>\n      …\n   </background>\n   <title>Title</title>\n   <img />\n   <description>Description</description>\n   <row>\n      <button>\n         …\n      </button>\n   </row>\n</descriptiveAlertTemplate>\n\nElement Descriptions\nbackground\n\nBackground elements, such as audio.\n\nbutton\n\nA button for the alert. A button typically lets the user dismiss the alert or bring up a new template page.\n\ndescription\n\nThe main text for the alert.\n\nimg\n\nAn image associated with the alert box.\n\nrow\n\nA row of buttons.\n\ntitle\n\nThe title for the descriptive alert page.\n\nExample\n\nThe following listing shows the TVML for a descriptiveAlertTemplate example.\n\n<document>\n   <descriptiveAlertTemplate>\n      <title>Terms of Service</title>\n      <description>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum</description>\n      <row>\n         <button>\n            <text>Accept</text>\n         </button>\n         <button>\n            <text>Decline</text>\n         </button>\n      </row>\n   </descriptiveAlertTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "divTemplate",
    "url": "https://developer.apple.com/documentation/tvml/divtemplate",
    "html": "Overview\n\nThere is no built-in layout for contained elements. The divTemplate element creates a view where the elements it contains are arranged using the tv-align and tv-position styles. Containing elements are centered by default. The following figure shows the positions inside of the divTemplate element. The divTemplate element should only be used when you can’t use another template to achieve the look you want. The theme for the div template defaults to the system preference.\n\nElements contained in the same position are arranged from the top of the cell to the bottom, in the same order in which they are specified in the divTemplate element. You can specify a <background><img /></background> that displays a background image inside of the divTemplate. The background image is top-aligned and is fitted to the size of the divTemplate while keeping the image’s original aspect ratio. Text wrapping inside of the divTemplate only occurs in the header, center, and footer positions.\n\nTopics\nValid TVML Styles\ntv-align\nAligns an element horizontally inside its parent.\ntv-position\nSets the position of an element inside of its parent element.\nValid TVML Attributes\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "compilationTemplate",
    "url": "https://developer.apple.com/documentation/tvml/compilationtemplate",
    "html": "Overview\n\nUse the compilationTemplate element to display information about one product that is made up of several distinct pieces; for example, an album and all of the songs that it contains. The header area on the left side of the screen contains general product information. Directly underneath the header area are several section areas that group like types of information; for example, one section can contain all of the songs on the album. The related content on the right side of the screen contains any images associated with the product and buttons that the user can use to interact with the product, such as Play and Buy buttons. The following figure shows the basic layout for a compilationTemplate page. The theme for the compilation template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the compilationTemplate element in TVML format:\n\n<compilationTemplate>\n    <background>\n        …\n    </background>\n    <list>\n        <relatedContent>\n            <itemBanner>\n                …\n            </itemBanner>\n        </relatedContent>\n        <header>\n            …\n        </header>\n        <section>\n            <header>\n                <title>Title</title>\n            </header>\n            <listItemLockup>\n                …\n            </listItemLockup>\n        </section>\n    </list>\n</compilationTemplate>\n\nElement Descriptions\nbackground\n\nBackground elements, such as audio.\n\nheader\n\nInformation describing what a section of the list contains.\n\nitemBanner\n\nProduct information and row elements, such as button information, that are displayed along the right side of the screen.\n\nlist\n\nElement containing all the content in the template (except background).\n\nlistItemLockup\n\nElements containing elements used to create one item in a list.\n\nrelatedContent\n\nElement containing all elements displayed along the right side of the screen.\n\nsection\n\nAn area of the page that groups related elements for layout purposes.\n\nExample\n\nThe following listing shows the TVML for a compilationTemplate example. The example displays a list on the left side that contains information about the album and a list of available songs. The right side of the display contains an image of the album and buttons prompting the user to buy, rate, or shuffle the music.\n\n<document>\n    <compilationTemplate theme=\"light\">\n        <list>\n            <relatedContent>\n                <itemBanner>\n                    <heroImg src=\"path to images on your server/Car_Movie_720x1080\" />\n                    <row>\n                        <buttonLockup>\n                            <badge src=\"resource://button-add\"/>\n                            <title>Add</title>\n                        </buttonLockup>\n                        <buttonLockup>\n                            <badge src=\"resource://button-rate\"/>\n                            <title>Rate</title>\n                        </buttonLockup>\n                        <buttonLockup>\n                            <badge src=\"resource://button-shuffle\"/>\n                            <title>Shuffle</title>\n                        </buttonLockup>\n                    </row>\n                </itemBanner>\n            </relatedContent>\n            <header>\n                <title>WWDC Roadtrip Soundtrack</title>\n                <subtitle>Various Artists</subtitle>\n                <row>\n                    <text>Instrumental</text>\n                    <text>5 Songs</text>\n                    <text>2015</text>\n                </row>\n            </header>\n            <section>\n                <description>Songs from your favorite movie</description>\n            </section>\n            <section>\n                <listItemLockup>\n                    <ordinal minLength=\"2\">1</ordinal>\n                    <title>Opening sequence</title>\n                    <decorationLabel>11:14</decorationLabel>\n                </listItemLockup>\n                <listItemLockup>\n                    <ordinal minLength=\"2\">2</ordinal>\n                    <title>Fight song</title>\n                    <decorationLabel>3:47</decorationLabel>\n                </listItemLockup>\n                <listItemLockup>\n                    <ordinal minLength=\"2\">3</ordinal>\n                    <title>Love theme</title>\n                    <decorationLabel>6:48</decorationLabel>\n                </listItemLockup>\n                <listItemLockup>\n                    <ordinal minLength=\"2\">4</ordinal>\n                    <title>Car chase</title>\n                    <decorationLabel>5:21</decorationLabel>\n                </listItemLockup>\n                <listItemLockup>\n                    <ordinal minLength=\"2\">5</ordinal>\n                    <title>End credit theme</title>\n                    <decorationLabel>8:03</decorationLabel>\n                </listItemLockup>\n            </section>\n        </list>\n    </compilationTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "catalogTemplate",
    "url": "https://developer.apple.com/documentation/tvml/catalogtemplate",
    "html": "Overview\n\nUse the catalogTemplate element to display information about groups of like products; for example, a movie catalog that provides categories for dramas, comedies, and all movies. Each group of products is contained in its own section and displayed along the left side of the screen. Images depicting the products contained within a selected group are displayed in the related content area on the right side of the screen. The following figure shows the basic layout for a catalogTemplate page. The theme for the catalog template defaults to the system preference.\n\nMain Elements\n\nThe following listing shows the main elements of the catalogTemplate element in TVML format.\n\n<catalogTemplate>\n   <banner>\n      <title>…</title>\n   </banner>\n   <list>\n      <section>\n         <listItemLockup>\n            …\n         </listItemLockup>\n      </section>\n      <section>\n         <header>\n            …\n         </header>\n         <listItemLockup>\n            …\n         </listItemLockup>\n      </section>\n   </list>\n</catalogTemplate>\n\nElement Descriptions\nbanner\n\nInformation describing what the catalog contains, such as movies.\n\nheader\n\nInformation describing what one section of the page contains.\n\nlist\n\nElement containing all content in the template page, except banner information.\n\nlistItemLockup\n\nElement containing all information that relates to one list item on the left side of the page, including the item title and label, as well as related content.\n\nsection\n\nAn area of the page containing related elements that are grouped together as one element for layout purposes.\n\nExample\n\nThe following listing shows the TVML for a catalogTemplate example. The example displays a title along the top of the screen. Two items representing movie categories, All Movies and Comedies, are listed along the left side of the screen. Movie posters are presented on the right in a grid format according to which movie category the user selects.\n\n<document>\n   <catalogTemplate>\n      <banner>\n         <title>Movies</title>\n      </banner>\n      <list>\n         <section>\n            <listItemLockup>\n               <title>All Movies</title>\n               <decorationLabel>6</decorationLabel>\n               <relatedContent>\n                  <grid>\n                     <section>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 1</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 2</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 3</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 4</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 5</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 6</title>\n                        </lockup>\n                     </section>\n                  </grid>\n               </relatedContent>\n            </listItemLockup>\n            <listItemLockup>\n               <title>Comedies</title>\n               <decorationLabel>4</decorationLabel>\n               <relatedContent>\n                  <grid>\n                     <section>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_B.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 2</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_A.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 1</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 4</title>\n                        </lockup>\n                        <lockup>\n                           <img src=\"path to images on your server/Car_Movie_250x375_C.png\" width=\"250\" height=\"376\" />\n                           <title>Movie 3</title>\n                        </lockup>\n                     </section>\n                  </grid>\n               </relatedContent>\n            </listItemLockup>\n         </section>\n      </list>\n   </catalogTemplate>\n</document>\n\n\nThe following figure shows the output for the above example:\n\nTopics\nValid TVML Attributes\nautoHighlight\nSpecifies that the element should initially be in focus.\nbinding\nAssociates information in a data item with an element.\nlayoutDirection\nSpecifies the direction in which text is displayed.\nprototype\nAssociates a data item type with an element.\ntheme\nSets the color scheme for an element.\nSee Also\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page."
  },
  {
    "title": "TVML",
    "url": "https://developer.apple.com/documentation/TVML",
    "html": "Overview\n\nEvery page in a client-server app is built on an Apple TV Markup Language (TVML) template. TVML templates define what elements can be used and in what order. Each template is designed to display information in a specific way. For example, loadingTemplate shows a spinner and a quick description of what is happening, while ratingTemplate shows the rating for a product. You create a new TVML file that contains a single template for each page in a client-server app. Each template page occupies the entire TV screen.\n\nEach template page uses compound and simple elements. Compound elements contain other elements, while simple elements are single lines of TVML. Elements contain the information and images that are displayed on the screen.\n\nEvery template has a default presentation theme associated with it. You can set a specific theme for your app setting UIUserInterfaceStyle in the info.plist file. Themes provide a consistent look inside of a template.\n\nYou control the flow of a client-server app through a JavaScript file that is called by your binary app. Your JavaScript file needs to be able to load TVML pages and respond to user input. For more information on available JavaScript APIs, see TVMLKit JS.\n\nTopics\nFull-Page Templates\nalertTemplate\nDisplays important information to the user.\ncatalogTemplate\nDisplays groups of items along one side of a page and images of a group’s contents on the other side.\ncompilationTemplate\nDisplays information about a single media item and its components.\ndescriptiveAlertTemplate\nDisplays large amounts of important information to the user.\ndivTemplate\nProvides the ability to create pages that don’t conform to a layout defined by another template.\nformTemplate\nProvides the ability to gather information from the user.\nlistTemplate\nDisplays a list of items along one side of a page and the corresponding image on the other side.\nloadingTemplate\nDisplays a spinner and description on the screen.\nmainTemplate\nDisplays user options for a media item.\nmenuBarTemplate\nCreates a page with items along the top and related information below.\noneupTemplate\nCreates a page that allows users to navigate between full-screen images.\nparadeTemplate\nDisplays a groups of items along one side of a page and scrolling images on the other side.\nproductBundleTemplate\nDisplays information for a group of related media items.\nproductTemplate\nDisplays detailed information about a single product.\nratingTemplate\nDisplays a rating for an item.\nsearchTemplate\nSearches for a media item based on user input.\nshowcaseTemplate\nDisplays images the user can navigate between.\nstackTemplate\nDisplays groups of products.\nDisplaying a Product or Bundle in a Full-Page Template\nSpecify scrollable and fixed regions in a product page.\nCompound Elements\nCompound elements are multiple-line TVML elements that encapsulate other compound or simple TVML elements.\nBackground Elements\nControl background images and media items that play in the background.\nBanner and Header Elements\nProvide initial descriptive information for other elements.\nInformation Elements\nGroup and display content in the form best suited for the information.\nLayout Elements\nOrganize and display multiple elements in a structured layout.\nLockup Elements\nCombine several elements so that they can be treated as a single element.\nSimple Elements\nSimple elements often don’t contain other elements and typically fit on one line.\nDisplay Elements\nDisplay a visual element, such as an image, badge, or progress overlay.\nMultimedia Elements\nProvide the user the ability to stream audio and search for information stored on a server.\nText Elements\nDisplay text onscreen.\nStyles\nCustomize TVML elements using the TVML styles provided by Apple. Usage of these styles is optional, and you can create great client-server apps without ever changing the default look of an element.\nColor Styles\nProvide the ability to customize an element’s color.\nText Styles\nChange the text characteristics for an element.\nElement Shaping\nModify the size and shape of an element.\nElement Alignment and Spacing\nModify the alignment and spacing between elements.\ntv-placeholder\nSets a default image for an img or monogram element.\ntv-rating-style\nSets the displayed image for rating a product.\ntv-transition\nSpecifies how an element transitions on and off the screen.\ntv-text-highlight-style\nSpecifies how an element looks when it comes into focus.\ntv-scrollable-bounds-inset\nCreates an unscrollable region of a specified size at the top and bottom of the stack template.\nAttributes\nCustomize how TVML elements look and respond to user inputs by using attributes. Except where noted, attributes override the styles set for an element.\nImage Attributes\nRetrieve images from a server and specify how they fit into an element.\nText Attributes\nModify how text is displayed, entered, and laid out.\nFocus Attributes\nDefine how an element acts when it comes into focus.\nBinding and DOM Manipulation\nImplement binding and impove DOM manipulation options.\nInline Playback\nSet when and how inline playback is initiated.\nAlignment, Scrolling, and Coloring\nAlign elements within a shelf, set how your app reacts to scrolling, and set the overall color scheme for your app.\nQueries\nUse queries inside of a style element to define different values for the same style in a single class.\nMedia Queries\nChange the look and layout of a page based on the user’s preferences.\nData Binding Queries\nCompare a value from a JSON file to another value.\nResource Icons\nAccess Apple-provided icons for buttons, media item ratings, and general usage.\nAdding Resource Icons\nAdd Apple-provided icons to buttons and as independent images.\nButton Icons\nIcons that indicate the function of a button.\nMovie Rating Icons (United States)\nIcons that pertain to United States movie ratings.\nTelevision Rating Icons (United States)\nIcons that pertain to United States television ratings.\nRating Icons (New Zealand)\nIcons that pertain to New Zealand movie ratings.\nRating Icons (United Kingdom)\nIcons that pertain to United Kingdom movie ratings.\nRating Icons (Brazil)\nIcons that pertain to Brazil movie ratings.\nRotten Tomatoes Rating Icons\nIcons pertaining to the Rotten Tomatoes rating system.\nMiscellaneous Icons\nMiscellaneous icons that don’t fall into a specific category."
  }
]
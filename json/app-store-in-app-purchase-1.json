[
  {
    "title": "In-App Purchase - Apple Developer",
    "url": "https://developer.apple.com/in-app-purchase/",
    "html": "Simple and safe In-App Purchases\n\nThe App Store provides a powerful commerce system that makes it simple to offer your content and services across Apple platforms to people around the world. Facilitating billions of transactions annually, it handles end-to-end payment processing — so you can focus on creating great apps and games that people will love. Learn how to leverage world-class App Store commerce and payment features to grow your business as you offer In-App Purchases (including subscriptions).\n\nCheckout and payment support\nSimple set-up\nMarketing and engagement features\nAnalytics and reporting\nTrust and safety\nCheckout and payment support\n\nDevelopers have earned more than $300 billion through the App Store commerce system since its launch in 2008. And the App Store receives more than half a billion visitors every week, making it a great place to promote your In-App Purchases.\n\nEffortless checkout\n\nThe App Store In-App Purchase system makes it simple for customers to purchase your digital goods and services on the App Store and in your apps. When creating an Apple ID, customers add a payment method that can be used to make purchases. And with secure authentication using Face ID, Optic ID, or Touch ID, customers can make purchases within your app in just a few taps — minimizing abandoned purchases.\n\nWhen a purchase is initiated, an App Store payment sheet displays relevant details that help customers easily understand the transaction (like the type of good or service, price, and subscription duration) before confirming their purchase.\n\nGlobal payment reach\n\nApple handles worldwide end-to-end payment processing — from decrypting payments, to validating tokens, to receiving payments — so you don’t have to coordinate with multiple payment providers. Customers can pay with their preferred regional method with support for more than 200 payment methods, including credit and debit cards, carrier billing, digital wallets, and more.\n\nTo help you reach as many customers as possible in 175 regions, we continuously add support for new payment methods.\n\nCustomer\n\nTransacts in the App Store or in you app using secure biometric authentication.\n\n \nApp Store\n\nUsing payment methods already collected from customers, aggregates purchases securely.\n\n \nPayment Service Provider\n\nAuthenticates transactions and when relevant routes transactions over various card networks.\n\n \nBank Issuer\n\nReceives payment request and will approve or decline based on customers balance or credit line.\n\nPowerful pricing tools\n\nApp Store tools make it convenient to manage In-App Purchase pricing across international markets, so you can easily offer content and expand your business worldwide.\n\nRegional availability options. Choose the storefronts where you want to make your In-App Purchases (including subscriptions) available, so you can deliver content and services customized for each market.\n\nFlexible pricing. Choose from 900 price points, ranging from United States $0.29 to $10,000, with similar prices in each currency. Options follow the most common pricing conventions in each country or region to make sure your pricing is relevant to customers. You can also offer a custom price point option in each storefront for an In-App Purchase, and set up custom prices for a limited time period or indefinitely.\n\nUnited States Dollar (USD)\nChina (CNY)\nJapan (JPY)\nKorea (KRW)\nPrice steps\tLowest\nsupported price\tHighest\nsupported price\n$0.10\t$0.29\t$9.99\n$0.50\t$0.49\t$49.99\n$1.00\t$0.99\t$199.99\n$5.00\t$4.99\t$499.99\n$0.10\t$0.29\t$9.99\n$10.00\t$9.99\t$9,999.99\nSupported Conventions\t\nX.99\t$0.99\t$9,999.99\nX.00\t$1.00\t$10,000\nX.90\t$0.90\t$99.90\nX.95\t$0.95\t$49.95\n\nEasy-to-set-pricing worldwide. Specify a country or region you’re familiar with as the basis for automatically generated prices across the other 174 regions in 43 currencies. Automatically generated prices are globally equalized, accounting for taxes and foreign currency rates. Prices of apps and In‑App Purchases (excluding auto-renewable subscriptions) are automatically updated as taxes or foreign currency change. Prices in your base region and any region with a custom price will never be adjusted by Apple.\n\nTaxes handled for you\n\nApple provides an automated system that handles the calculation, collection, and remittance of transactional taxes (such as value added tax) and compliance requirements in more than 80 regions, including most major markets, for your app and In-App Purchases on the App Store. This makes it easy to sell your digital goods and services globally. The system applies the correct tax rates and regulations for each region based on the tax category assigned to your apps, such as videos, books, or news publications. We seamlessly adapt tax changes into our commerce system.\n\nPayment collection\n\nCustomers are encouraged to provide multiple payment methods and if a billing issue occurs with a given payment method, Apple attempts to collect using the other methods. Further, Apple automatically updates payment instruments whenever possible and when not possible, uses messaging and follow-ups to encourage customers to resolve.\n\n \n \n \n\nIf there’s a billing issue with an auto-renewable subscription, the App Store will recover the vast majority of the subscription for you. In addition, StoreKit displays a Billing Problem message sheet (either when your app launches or when you’ve configured your app to display it) that lets subscribers fix their billing issue without leaving your app. Apple also notifies them of the issue via push notifications and in-app messaging.\n\nWhen you enable Billing Grace Period in App Store Connect, subscribers can continue to access your app’s paid content for a period of time, all while Apple attempts to resolve the billing issue. And if Apple recovers the subscription within the grace period, there’s no lost revenue and no interruption to the subscriber's days of paid service. Learn more about offering subscriptions.\n\nSimple set-up\n\nYou can offer one or more types of In-App Purchases: consumable, non-consumable, auto-renewable subscription, and non-renewing subscription. Set up your In-App Purchases using App Store Connect, the StoreKit framework, and In-App Purchase APIs to retrieve product information, process payments, and deliver the product.\n\nQuick paywall creation\n\nIt’s easy to build intuitive payment experiences for In-App Purchases and subscriptions using StoreKit views. With as little as one line of code, StoreKit views clearly present the description, price, and duration for each level of service. And with built-in localization support, In-App Purchase details are displayed in the relevant language and currency, without any extra development work. You can also customize StoreKit views to match the look and feel of your app.\n\nConfigure In-App Purchases\nStoreKit essentials\nStoreKit documentation\nStoreKit views documentation\nHuman Interface Guidelines: In-App Purchase\nApp Review Guidelines: In-App Purchase\nUp-to-date transaction statuses\n\nNear-real time status updates for refunds, subscription state, Family Sharing access, and more, are available through App Store Server Notifications. Use this information to update your transaction records and create customized user experiences. For example, if someone has turned off auto-renew, you might display a promotional offer to encourage them to resubscribe. To enable App Store Server Notifications, configure your server’s HTTPS URL in App Store Connect.\n\nAnd you can get the latest product entitlements and transaction updates using the App Store Server API. Find out the latest status and history for In-App Purchase transactions, including status changes that take place outside your app.\n\nApp Store Server Notifications documentation\nApp Store Server API documentation\nTools to help you test\n\nTake advantage of testing tools throughout the development process so your app and server can properly handle common purchase scenarios, like subscription offers, interrupted purchases, and refunds. During early development, you can simulate and test in‑app purchases using Xcode. After you configure your in‑app purchases in App Store Connect, use the sandbox environment or StoreKit Testing in Xcode to test using real product information.\n\nWhen you’re ready for more people to help you test, TestFlight lets you gain valuable feedback from internal and external testers. Invite up to 10,000 external testers using just their email addresses or by sharing a public link. In‑app purchases in TestFlight use the sandbox environment, so they’re free to testers and don’t carry over into production once your app is released on the App Store.\n\nOnce you’re done testing, submit your In-App Purchases for review.\n\nTesting at all stages of development\nMarketing and engagement features\n\nOnce your In-App Purchases are published, you can promote them and encourage engagement in different ways. Learn more about promoting your apps.\n\nPromotion on the App Store\n\nIn iOS and iPadOS, people can browse In-App Purchases directly on the App Store and start a purchase even before downloading your app. Promoted In-App Purchases appear on your product page, can display in search results, and may be featured on the Today, Games, and Apps tabs, helping you showcase your content to a wide audience.\n\nLearn more\n\nSubscription offers\n\nAttract subscribers and keep them engaged with a discounted price or free access for a specific duration of an auto-renewable subscription. Transactions on the App Store are authenticated, so fraud opportunities — like multiple free trials from a single account — are minimized.\n\nLearn more\n\nIn-App Events on the App Store\n\nPeople can discover your events on the App Store in iOS and iPadOS, giving you another way to expand their reach. If your event requires an In-App Purchase or subscription to participate, it’s noted on the event details page.\n\nLearn more\n\nPromo codes\n\nGive press and influencers early access to your app or In-App Purchases with promo codes. You can give away up to 100 promo codes for each version of your app per platform and up to 100 promo codes per In-App Purchase.\n\nLearn more\n\nApp bundles\n\nYou can create app bundles for paid apps or free apps that offer auto-renewable subscriptions. If an app offers a subscription, users can access it across all apps included in the bundle.\n\nLearn more\n\nFamily Sharing\n\nApps that offer auto-renewable subscriptions or non-consumable In-App Purchases can offer Family Sharing to let people share access with up to five family members. Streamlined and convenient, Family Sharing can help you attract subscribers, encourage paid subscriptions, increase engagement, and improve retention.\n\nLearn more\n\nAnalytics and reporting\n\nGet a wide range of helpful metrics related to each of your In-App Purchases, including sales, number of paying users, average proceeds per paying user, and more. View your final proceeds for each month, earnings by location and currency, rates used to convert your earnings from local currencies (when available), as well as any applied taxes and adjustments. You can also download detailed reports of all transactions for each month, including the number of units sold per app or In-App Purchase.\n\nAnalytics and reporting overview\nView payments and proceeds in Payments and Financial Reports\nDownload financial reports\nData insights only available from Apple\n\nMeasure your app’s performance and grow your business on the App Store with unique data insights that only Apple provides. Each month, Apple collects billions of data points to give you valuable information, including:\n\nUnified sales data across iOS, iPadOS, macOS, tvOS, visionOS, and watchOS.\nIn-App Purchase proceeds by source, including App Store browse, App Store search, app referrers, and web referrers.\nProceeds related to App Store features you use, including in-app events, custom product pages, pre-orders, and more.\nPeer group benchmark data to help you identify how successful your monetization efforts are compared to a relevant peer group.\nSubscription data, including the subscription state (trial, paid, and churned), subscription offer performance metrics, and subscription retention data.\nSubscriber churn data, such as cancellation events and renewals resulting from billing retry.\n\nLearn about viewing analytics\n\nLearn about measuring app performance\n\nBenchmark your performance\n\nWith peer group benchmarks in App Analytics, you can view how your app ranks across key metrics compared to similar apps on the App Store. One of these metrics is average proceeds per paying user, which can help you understand how well your In-App Purchases are performing. Differential privacy techniques are applied to peer groups to preserve privacy, so no sensitive developer information is revealed and your data remains yours.\n\nLearn about peer group benchmarks in App Analytics\n\nLearn about taking action on peer group benchmarks\n\nPayments and financial reports\n\nView your final proceeds for each month, with earnings broken out by territory and currency. View the rates used to convert your earnings from local currencies (when available) and any taxes and adjustments applied.\n\nTrust and safety\nSecure transactions and fraud detection\n\nThe App Store is a safe and trusted place for users and developers, and we work to keep it that way. In 2022 alone, we prevented more than $2 billion in fraudulent transactions and we continually invest significant resources in building more secure payment technologies, like Apple Pay and StoreKit. For example, with Apple Pay, credit card numbers are never shared with merchants — eliminating a risk factor in the payment transaction process. And purchases are verified through password and biometric security in order to prevent unauthorized use.\n\nThese protections are an essential part of keeping customers safe. But customers may not realize that when their credit card information is breached or stolen from another source, fraudsters may turn to online marketplaces like the App Store to attempt to purchase digital goods and services that can be laundered or used for illicit purposes. Apple focuses relentlessly on this kind of fraud as well, with a fusion of sophisticated technology and human review to prevent stolen cards from being used to make fraudulent purchases.\n\nAnd Apple also takes action against fraudulent customer accounts, disabling those associated with abusive activity and blocking fraudulent new accounts before they can even be created.\n\nCustomer support features\n\nThoughtful support helps you build trust with your users and can lead to higher retention, improved engagement, and better ratings and reviews. StoreKit and the App Store Server API help you provide more seamless support options and resolve in‑app purchase issues quickly and efficiently.\n\nRefund requests\n\nLet people request refunds directly within your app by using the beginRefundRequest API and providing a dedicated place in your app for these requests. You can also provide other options — such as technical support or in-app credits — before the option to request a refund.\n\nIf youʼve enabled App Store Server Notifications, youʼll receive a notification when someone receives a refund. You can use this information to take action — for example, updating the account balance based on the refund or restricting access to content unlocked by the In‑App Purchase. If you choose to take action, inform the user of any changes and let them know if there’s anything they need to do. You can also identify if someone previously received refunds for any In‑App Purchases made in your app using the Get Refund History endpoint.\n\nApple uses a variety of factors to determine whether a refund request is approved or denied. To help inform and improve the refund process, you can send information about a user’s consumable In‑App Purchase (including auto-renewable subscriptions) to Apple via the Consumption API when they request a refund (for example, if they used the In-App Purchase or you were unable to deliver the purchase). Data is incorporated into our refund logic, to help ensure flexible, accurate, and informed decision making.\n\nRefund request UI best practices\nEnabling App Store Server Notifications\nHandling refund notifications\nProviding subscriber support\nPurchase management\n\nIf someone redownloads your app or switches to a new device, be sure to immediately provide access to the content or functionality from their past In‑App Purchases. Use the currentEntitlements property in StoreKit to understand a user’s entitlements and provide access accordingly. Your app must also include a restore mechanism for any restorable In‑App Purchases, per App Review Guideline 3.1.1.\n\nIf someone requests support for an In‑App Purchase, you can use the Look Up Order ID endpoint to make sure you’re taking action on the right purchase. Simply ask the user for the Order ID included on their email receipt from Apple, then use the endpoint to confirm the invoice and any associated information — for example, whether the user has already received a refund for their purchase — or to match the date and time of the purchase with your records.\n\nTools for families\n\nApple provides tools to help developers and parents deliver safe experiences for children. With Ask to Buy, kids can send a request to the family organizer when they want to buy or download a new app or In-App Purchase. And parents can use Screen Time to prevent unintentional or unauthorized purchases from the App Store, including In-App Purchases across all apps.\n\nHelp from Apple\n\nApple provides world-class customer support to help efficiently resolve billing issues. Customers can use Report a Problem at any time to get support for In-App Purchases made within your app or on the App Store. And because our support team is located worldwide, we can respond quickly. Customers receive email receipts from Apple for any purchases they’ve made, and they can view their purchase history in their Apple ID account.\n\nYou can contact us at any time with questions about your Apple Developer Program membership, App Store Connect, implementing technologies and features, and more.\n\nLearn about distributing on the App Store"
  }
]
[
  {
    "title": "HMCameraAudioStreamSetting.muted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiostreamsetting/muted",
    "html": "See Also\nConfiguring the Audio Stream\ncase incomingAudioAllowed\nThe setting that permits incoming audio.\ncase bidirectionalAudioAllowed\nThe setting that permits both incoming and outgoing audio."
  },
  {
    "title": "HMCameraAudioStreamSetting.bidirectionalAudioAllowed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiostreamsetting/bidirectionalaudioallowed",
    "html": "See Also\nConfiguring the Audio Stream\ncase muted\nThe setting that mutes both incoming and outgoing audio.\ncase incomingAudioAllowed\nThe setting that permits incoming audio."
  },
  {
    "title": "HMCameraAudioStreamSetting.incomingAudioAllowed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiostreamsetting/incomingaudioallowed",
    "html": "See Also\nConfiguring the Audio Stream\ncase muted\nThe setting that mutes both incoming and outgoing audio.\ncase bidirectionalAudioAllowed\nThe setting that permits both incoming and outgoing audio."
  },
  {
    "title": "audioStreamSetting | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastream/1833317-audiostreamsetting",
    "html": "See Also\nConfiguring the audio stream\nfunc updateAudioStreamSetting(HMCameraAudioStreamSetting, completionHandler: (Error?) -> Void)\nUpdates an audio stream's settings.\nfunc setAudioStreamSetting(HMCameraAudioStreamSetting)\nDeprecated\nenum HMCameraAudioStreamSetting\nThe options associated with a camera's audio stream."
  },
  {
    "title": "HMCharacteristicValueHeatingCooling.cool | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueheatingcooling/cool",
    "html": "See Also\nAccesory State\ncase off\nUnit is set to off, neither heating nor cooling.\ncase heat\nUnit is set to heating.\ncase auto\nUnit is set to automatic."
  },
  {
    "title": "HMCharacteristicValueCarbonMonoxideDetectionStatus.notDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecarbonmonoxidedetectionstatus/notdetected",
    "html": "See Also\nCarbon Monoxide Levels\ncase detected\nAbnormally high levels of carbon monoxide are present."
  },
  {
    "title": "HMCharacteristicValueTargetSecuritySystemState.nightArm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetsecuritysystemstate/nightarm",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase disarm\nThe security system is disarmed."
  },
  {
    "title": "HMCharacteristicValueAirQuality.good | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality/good",
    "html": "See Also\nAir Quality\ncase unknown\nThe air quality is unknown.\ncase excellent\nThe air quality is excellent.\ncase fair\nThe air quality is fair.\ncase inferior\nThe air quality is inferior.\ncase poor\nThe air quality is poor."
  },
  {
    "title": "HMCharacteristicValueCurrentAirPurifierState.idle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentairpurifierstate/idle",
    "html": "See Also\nAir Purifier States\ncase inactive\nThe air purifier is inactive.\ncase active\nThe air purifier is active."
  },
  {
    "title": "updateAudioStreamSetting(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastream/2143154-updateaudiostreamsetting",
    "html": "Parameters\naudioStreamSetting\n\nThe new audio stream configuration.\n\ncompletion\n\nThe block executed after processing the request.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateAudioStreamSetting(_ audioStreamSetting: HMCameraAudioStreamSetting) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nConfiguring the audio stream\nvar audioStreamSetting: HMCameraAudioStreamSetting\nThe stream's current audio setting.\nfunc setAudioStreamSetting(HMCameraAudioStreamSetting)\nDeprecated\nenum HMCameraAudioStreamSetting\nThe options associated with a camera's audio stream."
  },
  {
    "title": "HMCharacteristicValueCurrentHeaterCoolerState.inactive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatercoolerstate/inactive",
    "html": "See Also\nCurrent State\ncase idle\nThe accessory is idle.\ncase heating\nThe accessory is actively heating.\ncase cooling\nThe accessory is actively cooling."
  },
  {
    "title": "HMCharacteristicValueCurrentHeaterCoolerState.idle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatercoolerstate/idle",
    "html": "See Also\nCurrent State\ncase inactive\nThe accessory is inactive.\ncase heating\nThe accessory is actively heating.\ncase cooling\nThe accessory is actively cooling."
  },
  {
    "title": "HMCameraAudioStreamSetting | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiostreamsetting",
    "html": "Topics\nConfiguring the Audio Stream\ncase muted\nThe setting that mutes both incoming and outgoing audio.\ncase incomingAudioAllowed\nThe setting that permits incoming audio.\ncase bidirectionalAudioAllowed\nThe setting that permits both incoming and outgoing audio.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the audio stream\nvar audioStreamSetting: HMCameraAudioStreamSetting\nThe stream's current audio setting.\nfunc updateAudioStreamSetting(HMCameraAudioStreamSetting, completionHandler: (Error?) -> Void)\nUpdates an audio stream's settings.\nfunc setAudioStreamSetting(HMCameraAudioStreamSetting)\nDeprecated"
  },
  {
    "title": "setAudioStreamSetting(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastream/2143155-setaudiostreamsetting",
    "html": "Deprecated\n\nUse updateAudioStreamSetting(_:completionHandler:) instead.\n\nParameters\naudioStreamSetting\n\nThe new audio stream configuration.\n\nSee Also\nConfiguring the audio stream\nvar audioStreamSetting: HMCameraAudioStreamSetting\nThe stream's current audio setting.\nfunc updateAudioStreamSetting(HMCameraAudioStreamSetting, completionHandler: (Error?) -> Void)\nUpdates an audio stream's settings.\nenum HMCameraAudioStreamSetting\nThe options associated with a camera's audio stream."
  },
  {
    "title": "HMCharacteristicValueCurrentHeaterCoolerState.heating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatercoolerstate/heating",
    "html": "See Also\nCurrent State\ncase inactive\nThe accessory is inactive.\ncase idle\nThe accessory is idle.\ncase cooling\nThe accessory is actively cooling."
  },
  {
    "title": "HMCharacteristicValueCurrentHeaterCoolerState.cooling | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatercoolerstate/cooling",
    "html": "See Also\nCurrent State\ncase inactive\nThe accessory is inactive.\ncase idle\nThe accessory is idle.\ncase heating\nThe accessory is actively heating."
  },
  {
    "title": "HMCharacteristicValueTargetSecuritySystemState.awayArm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetsecuritysystemstate/awayarm",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarm\nThe security system is disarmed."
  },
  {
    "title": "HMCharacteristicValueTargetSecuritySystemState.stayArm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetsecuritysystemstate/stayarm",
    "html": "See Also\nSecurity System States\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarm\nThe security system is disarmed."
  },
  {
    "title": "HMCharacteristicValueTargetSecuritySystemState.disarm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetsecuritysystemstate/disarm",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping."
  },
  {
    "title": "HMCharacteristicValueCarbonMonoxideDetectionStatus.detected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecarbonmonoxidedetectionstatus/detected",
    "html": "See Also\nCarbon Monoxide Levels\ncase notDetected\nCarbon monoxide levels are normal."
  },
  {
    "title": "HMCharacteristicValueContactState.detected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecontactstate/detected",
    "html": "See Also\nContact Sensor State\ncase none\nContact is not detected."
  },
  {
    "title": "HMCameraStreamState.starting | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamstate/starting",
    "html": "See Also\nObserving the streaming state\ncase notStreaming\nThe state when the camera stream is not active.\ncase stopping\nThe state when the camera stream is stopping.\ncase streaming\nThe state when the camera stream is currently in progress."
  },
  {
    "title": "HMCharacteristicValueContactState.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecontactstate/none",
    "html": "See Also\nContact Sensor State\ncase detected\nContact is detected."
  },
  {
    "title": "HMCharacteristicValueTamperedStatus.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetamperedstatus/none",
    "html": "See Also\nTampered Status\ncase tampered\nThe accessory has been tampered with."
  },
  {
    "title": "HMCharacteristicValueCurrentSlatState.stationary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentslatstate/stationary",
    "html": "See Also\nSlat States\ncase jammed\nThe slats are jammed.\ncase oscillating\nThe slats are oscillating."
  },
  {
    "title": "HMCharacteristicValueLockMechanismState.jammed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismstate/jammed",
    "html": "See Also\nLock Mechanism State\ncase unsecured\nThe lock mechanism is unlocked.\ncase secured\nThe lock mechanism is locked.\ncase unknown\nThe lock mechanism is in an unknown state."
  },
  {
    "title": "HMCharacteristicValueValveType.showerHead | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluevalvetype/showerhead",
    "html": "See Also\nValve Types\ncase genericValve\nA generic valve.\ncase irrigation\nAn irrigation valve.\ncase waterFaucet\nA water faucet."
  },
  {
    "title": "HMCharacteristicValuePositionState.stopped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluepositionstate/stopped",
    "html": "See Also\nPosition States\ncase closing\nThe position is moving towards minimum value.\ncase opening\nThe position is moving towards maximum value."
  },
  {
    "title": "HMCharacteristicValueSlatType.horizontal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueslattype/horizontal",
    "html": "See Also\nSlat Types\ncase vertical\nVertical slats."
  },
  {
    "title": "HMCharacteristicValueCurrentAirPurifierState.inactive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentairpurifierstate/inactive",
    "html": "See Also\nAir Purifier States\ncase idle\nThe air purifier is idle.\ncase active\nThe air purifier is active."
  },
  {
    "title": "HMCharacteristicValueSlatType.vertical | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueslattype/vertical",
    "html": "See Also\nSlat Types\ncase horizontal\nHorizontal slats."
  },
  {
    "title": "HMCharacteristicValueConfigurationState.notConfigured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueconfigurationstate/notconfigured",
    "html": "See Also\nConfiguration States\ncase configured\nThe accessory has been configured."
  },
  {
    "title": "HMCharacteristicValueCurrentAirPurifierState.active | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentairpurifierstate/active",
    "html": "See Also\nAir Purifier States\ncase inactive\nThe air purifier is inactive.\ncase idle\nThe air purifier is idle."
  },
  {
    "title": "HMCharacteristicValueSwingMode.disabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueswingmode/disabled",
    "html": "See Also\nMovement Mode\ncase enabled\nThe fan swings back and forth."
  },
  {
    "title": "HMCharacteristicValueConfigurationState.configured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueconfigurationstate/configured",
    "html": "See Also\nConfiguration States\ncase notConfigured\nThe accessory has not been configured."
  },
  {
    "title": "HMCharacteristicValueLeakStatus.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueleakstatus/none",
    "html": "See Also\nLeak Status\ncase detected\nLeak detected."
  },
  {
    "title": "HMCharacteristicValueTargetAirPurifierState.manual | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetairpurifierstate/manual",
    "html": "See Also\nAir Purifier States\ncase automatic\nThe air purifier should operate in an automatic mode."
  },
  {
    "title": "HMCharacteristicValueLeakStatus.detected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueleakstatus/detected",
    "html": "See Also\nLeak Status\ncase none\nNo leak detected."
  },
  {
    "title": "HMCharacteristicValueSwingMode.enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueswingmode/enabled",
    "html": "See Also\nMovement Mode\ncase disabled\nThe fan remains in a fixed position."
  },
  {
    "title": "HMCharacteristicValueTargetAirPurifierState.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetairpurifierstate/automatic",
    "html": "See Also\nAir Purifier States\ncase manual\nThe air purifier should operate in a manual mode."
  },
  {
    "title": "HMCharacteristicValueAirQuality.unknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality/unknown",
    "html": "See Also\nAir Quality\ncase excellent\nThe air quality is excellent.\ncase good\nThe air quality is good.\ncase fair\nThe air quality is fair.\ncase inferior\nThe air quality is inferior.\ncase poor\nThe air quality is poor."
  },
  {
    "title": "HMCharacteristicValueAirQuality.excellent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality/excellent",
    "html": "See Also\nAir Quality\ncase unknown\nThe air quality is unknown.\ncase good\nThe air quality is good.\ncase fair\nThe air quality is fair.\ncase inferior\nThe air quality is inferior.\ncase poor\nThe air quality is poor."
  },
  {
    "title": "HMCharacteristicValueLockPhysicalControlsState.notLocked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockphysicalcontrolsstate/notlocked",
    "html": "See Also\nLock Physical Control State\ncase locked\nThe physical control is locked."
  },
  {
    "title": "HMCharacteristicValueAirQuality.fair | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality/fair",
    "html": "See Also\nAir Quality\ncase unknown\nThe air quality is unknown.\ncase excellent\nThe air quality is excellent.\ncase good\nThe air quality is good.\ncase inferior\nThe air quality is inferior.\ncase poor\nThe air quality is poor."
  },
  {
    "title": "HMCharacteristicValueAirQuality.poor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality/poor",
    "html": "See Also\nAir Quality\ncase unknown\nThe air quality is unknown.\ncase excellent\nThe air quality is excellent.\ncase good\nThe air quality is good.\ncase fair\nThe air quality is fair.\ncase inferior\nThe air quality is inferior."
  },
  {
    "title": "HMCharacteristicValueLockPhysicalControlsState.locked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockphysicalcontrolsstate/locked",
    "html": "See Also\nLock Physical Control State\ncase notLocked\nThe physical control is unlocked."
  },
  {
    "title": "HMCharacteristicValueSmokeDetectionStatus.detected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluesmokedetectionstatus/detected",
    "html": "See Also\nSmoke Detection Status\ncase none\nNo smoke detected."
  },
  {
    "title": "HMCharacteristicValueChargingState.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluechargingstate/none",
    "html": "See Also\nCharging States\ncase inProgress\nThe battery is charging.\ncase notChargeable\nThe battery can’t be charged."
  },
  {
    "title": "HMCharacteristicValueChargingState.inProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluechargingstate/inprogress",
    "html": "See Also\nCharging States\ncase none\nThe battery isn’t charging.\ncase notChargeable\nThe battery can’t be charged."
  },
  {
    "title": "HMCharacteristicValueChargingState.notChargeable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluechargingstate/notchargeable",
    "html": "See Also\nCharging States\ncase none\nThe battery isn’t charging.\ncase inProgress\nThe battery is charging."
  },
  {
    "title": "HMCharacteristicValueSmokeDetectionStatus.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluesmokedetectionstatus/none",
    "html": "See Also\nSmoke Detection Status\ncase detected\nSmoke detected."
  },
  {
    "title": "HMCharacteristicValueStatusFault.noFault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluestatusfault/nofault",
    "html": "See Also\nFault Status\ncase generalFault\nThe accessory experienced a general fault."
  },
  {
    "title": "HMCharacteristicValueStatusFault.generalFault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluestatusfault/generalfault",
    "html": "See Also\nFault Status\ncase noFault\nThe accessory has not experienced a fault."
  },
  {
    "title": "HMCharacteristicValueCurrentSecuritySystemState.stayArm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentsecuritysystemstate/stayarm",
    "html": "See Also\nSecurity System States\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarmed\nThe security system is disarmed.\ncase triggered\nthe security system is triggered."
  },
  {
    "title": "HMCharacteristicValueFilterChange.notNeeded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluefilterchange/notneeded",
    "html": "See Also\nFilter Change Indicator\ncase needed\nThe filter needs to be changed."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.unsecuredWithKeypad | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/unsecuredwithkeypad",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door."
  },
  {
    "title": "HMCharacteristicValueFilterChange.needed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluefilterchange/needed",
    "html": "See Also\nFilter Change Indicator\ncase notNeeded\nThe filter doesn’t need to be changed."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.securedUsingPhysicalMovement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/securedusingphysicalmovement",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCameraStreamState.stopping | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamstate/stopping",
    "html": "See Also\nObserving the streaming state\ncase notStreaming\nThe state when the camera stream is not active.\ncase starting\nThe state when the camera stream start request is processing.\ncase streaming\nThe state when the camera stream is currently in progress."
  },
  {
    "title": "HMCharacteristicValueCarbonDioxideDetectionStatus.notDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecarbondioxidedetectionstatus/notdetected",
    "html": "See Also\nCarbon Dioxide Levels\ncase detected\nAbnormally high levels of carbon dioxide are present."
  },
  {
    "title": "cameraStreamControl(_:didStopStreamWithError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontroldelegate/1833309-camerastreamcontrol",
    "html": "Parameters\ncameraStreamControl\n\nThe stream control responsible for the camera stream.\n\nerror\n\nIf the stream stops because of an error, this is an error object with details; nil otherwise.\n\nSee Also\nObserving stream activity\nfunc cameraStreamControlDidStartStream(HMCameraStreamControl)\nTells the delegate that the camera stream has started."
  },
  {
    "title": "cameraSnapshotControl(_:didTake:error:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontroldelegate/1833265-camerasnapshotcontrol",
    "html": "Parameters\ncameraSnapshotControl\n\nThe camera snapshot control responsible for the new snapshot.\n\nsnapshot\n\nThe snapshot taken by the camera. nil if there was a problem.\n\nerror\n\nAn error that is populated if there was a problem taking the snapshot; nil otherwise.\n\nSee Also\nObserving snapshot activity\nfunc cameraSnapshotControlDidUpdateMostRecentSnapshot(HMCameraSnapshotControl)\nTells the delegate that the most recent snapshot has been updated."
  },
  {
    "title": "HMCameraStreamState.notStreaming | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamstate/notstreaming",
    "html": "See Also\nObserving the streaming state\ncase starting\nThe state when the camera stream start request is processing.\ncase stopping\nThe state when the camera stream is stopping.\ncase streaming\nThe state when the camera stream is currently in progress."
  },
  {
    "title": "HMCharacteristicValueCarbonDioxideDetectionStatus.detected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecarbondioxidedetectionstatus/detected",
    "html": "See Also\nCarbon Dioxide Levels\ncase notDetected\nCarbon dioxide levels are normal."
  },
  {
    "title": "cameraSnapshotControlDidUpdateMostRecentSnapshot(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontroldelegate/2545121-camerasnapshotcontroldidupdatemo",
    "html": "Parameters\ncameraSnapshotControl\n\nThe camera snapshot control responsible for the updated snapshot.\n\nSee Also\nObserving snapshot activity\nfunc cameraSnapshotControl(HMCameraSnapshotControl, didTake: HMCameraSnapshot?, error: Error?)\nTells the delegate that the camera has taken a new snapshot."
  },
  {
    "title": "cameraStreamControlDidStartStream(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontroldelegate/1833310-camerastreamcontroldidstartstrea",
    "html": "Parameters\ncameraStreamControl\n\nThe stream control responsible for the camera stream.\n\nSee Also\nObserving stream activity\nfunc cameraStreamControl(HMCameraStreamControl, didStopStreamWithError: Error?)\nTells the delegate that the camera stream has stopped."
  },
  {
    "title": "HMCameraStreamState.streaming | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamstate/streaming",
    "html": "See Also\nObserving the streaming state\ncase notStreaming\nThe state when the camera stream is not active.\ncase starting\nThe state when the camera stream start request is processing.\ncase stopping\nThe state when the camera stream is stopping."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.securedWithKeypad | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/securedwithkeypad",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.unsecuredUsingPhysicalMovementExterior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/unsecuredusingphysicalmovementexterior",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueCurrentSecuritySystemState.nightArm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentsecuritysystemstate/nightarm",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase disarmed\nThe security system is disarmed.\ncase triggered\nthe security system is triggered."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.unsecuredUsingPhysicalMovementInterior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/unsecuredusingphysicalmovementinterior",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueCurrentSecuritySystemState.triggered | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentsecuritysystemstate/triggered",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarmed\nThe security system is disarmed."
  },
  {
    "title": "HMCharacteristicValueTargetHumidifierDehumidifierState.humidify | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargethumidifierdehumidifierstate/humidify",
    "html": "See Also\nTarget States\ncase automatic\nThe accessory should decide whether to add or remove water to or from the air.\ncase dehumidify\nThe accessory should remove water from the air."
  },
  {
    "title": "HMCharacteristicValueCurrentSecuritySystemState.disarmed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentsecuritysystemstate/disarmed",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase triggered\nthe security system is triggered."
  },
  {
    "title": "HMCharacteristicValueCurrentSecuritySystemState.awayArm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentsecuritysystemstate/awayarm",
    "html": "See Also\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarmed\nThe security system is disarmed.\ncase triggered\nthe security system is triggered."
  },
  {
    "title": "HMCharacteristicValueHeatingCooling.heat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueheatingcooling/heat",
    "html": "See Also\nAccesory State\ncase off\nUnit is set to off, neither heating nor cooling.\ncase cool\nUnit is set to cooling.\ncase auto\nUnit is set to automatic."
  },
  {
    "title": "HMCharacteristicValueTargetHumidifierDehumidifierState.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargethumidifierdehumidifierstate/automatic",
    "html": "See Also\nTarget States\ncase humidify\nThe accessory should add water to the air.\ncase dehumidify\nThe accessory should remove water from the air."
  },
  {
    "title": "HMCharacteristicValueTargetHumidifierDehumidifierState.dehumidify | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargethumidifierdehumidifierstate/dehumidify",
    "html": "See Also\nTarget States\ncase automatic\nThe accessory should decide whether to add or remove water to or from the air.\ncase humidify\nThe accessory should add water to the air."
  },
  {
    "title": "HMCharacteristicValueHeatingCooling.off | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueheatingcooling/off",
    "html": "See Also\nAccesory State\ncase heat\nUnit is set to heating.\ncase cool\nUnit is set to cooling.\ncase auto\nUnit is set to automatic."
  },
  {
    "title": "HMCharacteristicValueJammedStatus.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluejammedstatus/none",
    "html": "See Also\nJammed Status\ncase jammed\nThe accessory is jammed and can’t move."
  },
  {
    "title": "HMCharacteristicValueHeatingCooling.auto | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueheatingcooling/auto",
    "html": "See Also\nAccesory State\ncase off\nUnit is set to off, neither heating nor cooling.\ncase heat\nUnit is set to heating.\ncase cool\nUnit is set to cooling."
  },
  {
    "title": "HMCharacteristicValueJammedStatus.jammed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluejammedstatus/jammed",
    "html": "See Also\nJammed Status\ncase none\nThe accessory isn’t jammed."
  },
  {
    "title": "HMCharacteristicValueTamperedStatus.tampered | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetamperedstatus/tampered",
    "html": "See Also\nTampered Status\ncase none\nThe accessory has not been tampered with."
  },
  {
    "title": "HMCharacteristicValueLockMechanismState.unknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismstate/unknown",
    "html": "See Also\nLock Mechanism State\ncase unsecured\nThe lock mechanism is unlocked.\ncase secured\nThe lock mechanism is locked.\ncase jammed\nThe lock mechanism is jammed."
  },
  {
    "title": "HMCharacteristicValueUsageState.notInUse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueusagestate/notinuse",
    "html": "See Also\nUsage States\ncase inUse\nThe accessory is currently in use."
  },
  {
    "title": "HMCharacteristicValueValveType.irrigation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluevalvetype/irrigation",
    "html": "See Also\nValve Types\ncase genericValve\nA generic valve.\ncase showerHead\nA shower head.\ncase waterFaucet\nA water faucet."
  },
  {
    "title": "HMCharacteristicValueValveType.waterFaucet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluevalvetype/waterfaucet",
    "html": "See Also\nValve Types\ncase genericValve\nA generic valve.\ncase irrigation\nAn irrigation valve.\ncase showerHead\nA shower head."
  },
  {
    "title": "HMCharacteristicValuePositionState.opening | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluepositionstate/opening",
    "html": "See Also\nPosition States\ncase closing\nThe position is moving towards minimum value.\ncase stopped\nThe accessory isn’t moving."
  },
  {
    "title": "HMCharacteristicValuePositionState.closing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluepositionstate/closing",
    "html": "See Also\nPosition States\ncase opening\nThe position is moving towards maximum value.\ncase stopped\nThe accessory isn’t moving."
  },
  {
    "title": "HMCharacteristicValueTargetFanState.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetfanstate/automatic",
    "html": "See Also\nFan State\ncase manual\nThe fan should be controlled manually."
  },
  {
    "title": "HMCharacteristicValueCurrentFanState.idle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentfanstate/idle",
    "html": "See Also\nFan State\ncase inactive\nThe fan is inactive.\ncase active\nThe fan is blowing air."
  },
  {
    "title": "HMCharacteristicValueTargetFanState.manual | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetfanstate/manual",
    "html": "See Also\nFan State\ncase automatic\nThe fan should be controlled automatically."
  },
  {
    "title": "HMCharacteristicValueAirParticulateSize.size10 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairparticulatesize/size10",
    "html": "See Also\nAir Particulate Sizes\ncase size2_5\nThe air particulate size of 2.5 micrometers."
  },
  {
    "title": "HMCharacteristicValueCurrentFanState.inactive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentfanstate/inactive",
    "html": "See Also\nFan State\ncase idle\nThe fan is idle.\ncase active\nThe fan is blowing air."
  },
  {
    "title": "HMCharacteristicValueCurrentFanState.active | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentfanstate/active",
    "html": "See Also\nFan State\ncase inactive\nThe fan is inactive.\ncase idle\nThe fan is idle."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.securedRemotely | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/securedremotely",
    "html": "See Also\nLock Mechanism Actions\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueAirParticulateSize.size2_5 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairparticulatesize/size2_5",
    "html": "See Also\nAir Particulate Sizes\ncase size10\nThe air particulate size of 10 micrometers."
  },
  {
    "title": "HMCharacteristicValueAirQuality.inferior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality/inferior",
    "html": "See Also\nAir Quality\ncase unknown\nThe air quality is unknown.\ncase excellent\nThe air quality is excellent.\ncase good\nThe air quality is good.\ncase fair\nThe air quality is fair.\ncase poor\nThe air quality is poor."
  },
  {
    "title": "HMCharacteristicValueSecuritySystemAlarmType.unknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluesecuritysystemalarmtype/unknown",
    "html": "See Also\nAlarm Types\ncase noAlarm\nThe alarm isn’t triggered."
  },
  {
    "title": "HMCharacteristicValueOccupancyStatus.notOccupied | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueoccupancystatus/notoccupied",
    "html": "See Also\nOccupancy Status\ncase occupied\nThe home is occupied."
  },
  {
    "title": "HMCharacteristicValueInputEvent.doublePress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueinputevent/doublepress",
    "html": "See Also\nInput Events\ncase singlePress\nThe programmable switch detected a single press event.\ncase longPress\nThe programmable switch detected a long press event."
  },
  {
    "title": "HMCharacteristicValueTargetHeaterCoolerState.cool | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetheatercoolerstate/cool",
    "html": "See Also\nTarget State\ncase automatic\nThe accessory should choose whether to heat or cool.\ncase heat\nThe accessory should operate as a heater."
  },
  {
    "title": "HMCharacteristicValueInputEvent.longPress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueinputevent/longpress",
    "html": "See Also\nInput Events\ncase singlePress\nThe programmable switch detected a single press event.\ncase doublePress\nThe programmable switch detected a double press event."
  },
  {
    "title": "HMCharacteristicValueTargetHeaterCoolerState.heat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetheatercoolerstate/heat",
    "html": "See Also\nTarget State\ncase automatic\nThe accessory should choose whether to heat or cool.\ncase cool\nThe accessory should operate as a cooler."
  },
  {
    "title": "HMCharacteristicValueTargetHeaterCoolerState.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetheatercoolerstate/automatic",
    "html": "See Also\nTarget State\ncase heat\nThe accessory should operate as a heater.\ncase cool\nThe accessory should operate as a cooler."
  },
  {
    "title": "HMCharacteristicValueSecuritySystemAlarmType.noAlarm | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluesecuritysystemalarmtype/noalarm",
    "html": "See Also\nAlarm Types\ncase unknown\nAn alarm has been triggered with an unknown cause."
  },
  {
    "title": "HMCharacteristicValueInputEvent.singlePress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueinputevent/singlepress",
    "html": "See Also\nInput Events\ncase doublePress\nThe programmable switch detected a double press event.\ncase longPress\nThe programmable switch detected a long press event."
  },
  {
    "title": "HMCharacteristicValueOccupancyStatus.occupied | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueoccupancystatus/occupied",
    "html": "See Also\nOccupancy Status\ncase notOccupied\nThe home is not occupied."
  },
  {
    "title": "HMCharacteristicValueRotationDirection.clockwise | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluerotationdirection/clockwise",
    "html": "See Also\nRotation\ncase counterClockwise\nCounter-clockwise rotation."
  },
  {
    "title": "HMCharacteristicValueRotationDirection.counterClockwise | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluerotationdirection/counterclockwise",
    "html": "See Also\nRotation\ncase clockwise\nClockwise rotation."
  },
  {
    "title": "mostRecentSnapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontrol/1833272-mostrecentsnapshot",
    "html": "See Also\nTaking snapshots\nfunc takeSnapshot()\nTakes an image snapshot.\nclass HMCameraSnapshot\nAn object that represents a snapshot taken from a camera."
  },
  {
    "title": "profileDidUpdateNetworkAccessMode(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnetworkconfigurationprofiledelegate/3333270-profiledidupdatenetworkaccessmod",
    "html": "Parameters\nprofile\n\nThe network configuration profile for which the network access changed."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.securedWithAutomaticSecureTimeout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/securedwithautomaticsecuretimeout",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "significantEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablesignificanttimeevent/2881084-significantevent",
    "html": "See Also\nConfiguring a significant time event\nvar offset: DateComponents\nThe offset from the significant event that this event fires at."
  },
  {
    "title": "HMCharacteristicValueProgramMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueprogrammode",
    "html": "Topics\nConstants\ncase notScheduled\nNo program is scheduled.\ncase scheduleOverriddenToManual\nThe user has manually overridden the scheduled program.\ncase scheduled\nA program is scheduled.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.unsecuredUsingPhysicalMovement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/unsecuredusingphysicalmovement",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.securedUsingPhysicalMovementExterior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/securedusingphysicalmovementexterior",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.securedUsingPhysicalMovementInterior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/securedusingphysicalmovementinterior",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction.unsecuredRemotely | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction/unsecuredremotely",
    "html": "See Also\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad."
  },
  {
    "title": "HMCharacteristicValueBatteryStatus.normal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluebatterystatus/normal",
    "html": "See Also\nBattery Status\ncase low\nThe battery level is low."
  },
  {
    "title": "HMCharacteristicValueCurrentHumidifierDehumidifierState.humidifying | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrenthumidifierdehumidifierstate/humidifying",
    "html": "See Also\nCurrent States\ncase inactive\nThe accesory is off.\ncase idle\nThe accessory is idle.\ncase dehumidifying\nThe accessory is removing water from the air."
  },
  {
    "title": "HMCharacteristicValueBatteryStatus.low | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluebatterystatus/low",
    "html": "See Also\nBattery Status\ncase normal\nThe battery level is normal."
  },
  {
    "title": "HMCharacteristicValueCurrentHumidifierDehumidifierState.idle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrenthumidifierdehumidifierstate/idle",
    "html": "See Also\nCurrent States\ncase inactive\nThe accesory is off.\ncase humidifying\nThe accessory is adding water to the air.\ncase dehumidifying\nThe accessory is removing water from the air."
  },
  {
    "title": "HMCharacteristicValueCurrentHumidifierDehumidifierState.inactive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrenthumidifierdehumidifierstate/inactive",
    "html": "See Also\nCurrent States\ncase idle\nThe accessory is idle.\ncase humidifying\nThe accessory is adding water to the air.\ncase dehumidifying\nThe accessory is removing water from the air."
  },
  {
    "title": "HMCharacteristicValueCurrentHumidifierDehumidifierState.dehumidifying | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrenthumidifierdehumidifierstate/dehumidifying",
    "html": "See Also\nCurrent States\ncase inactive\nThe accesory is off.\ncase idle\nThe accessory is idle.\ncase humidifying\nThe accessory is adding water to the air."
  },
  {
    "title": "init(data:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessoryownershiptoken/3327321-init",
    "html": "Parameters\ndata\n\nData to be sent to the accessory to prove ownership.\n\nDiscussion\n\nObtain token data by negotiating with an accessory outside of HomeKit. You typically obtain token data for an accessory that you manufacture.\n\nToken creation can fail if the data doesn’t represent a valid ownership token."
  },
  {
    "title": "currentHorizontalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1829447-currenthorizontaltilt",
    "html": "See Also\nControlling camera characteristics\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "targetHorizontalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1829450-targethorizontaltilt",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "currentVerticalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1829448-currentverticaltilt",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "targetVerticalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1829449-targetverticaltilt",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "opticalZoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1649946-opticalzoom",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "imageRotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1649955-imagerotation",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "startStream() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontrol/1833311-startstream",
    "html": "Discussion\n\nWhen streaming has successfully started, the cameraStream property is updated with the new stream.\n\nSee Also\nControlling the stream\nfunc stopStream()\nStops the camera stream.\nvar cameraStream: HMCameraStream?\nThe current camera stream.\nclass HMCameraStream\nAn object that represents a camera's audiovisual stream.\nvar streamState: HMCameraStreamState\nThe current state of the camera stream.\nenum HMCameraStreamState\nThe states associated with a camera stream."
  },
  {
    "title": "imageMirroring | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1649935-imagemirroring",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "nightVision | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1649936-nightvision",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting."
  },
  {
    "title": "HMCharacteristicValueDoorState.opening | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluedoorstate/opening",
    "html": "See Also\nDoor States\ncase open\nThe door is fully open.\ncase closed\nThe door is fully closed.\ncase closing\nThe door is actively closing.\ncase stopped\nThe door is not moving, and is neither fully open nor fully closed."
  },
  {
    "title": "HMCharacteristicValueCurrentSlatState.oscillating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentslatstate/oscillating",
    "html": "See Also\nSlat States\ncase stationary\nThe slats are stationary.\ncase jammed\nThe slats are jammed."
  },
  {
    "title": "HMCharacteristicValueDoorState.open | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluedoorstate/open",
    "html": "See Also\nDoor States\ncase closed\nThe door is fully closed.\ncase opening\nThe door is actively opening.\ncase closing\nThe door is actively closing.\ncase stopped\nThe door is not moving, and is neither fully open nor fully closed."
  },
  {
    "title": "HMCharacteristicValueDoorState.closing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluedoorstate/closing",
    "html": "See Also\nDoor States\ncase open\nThe door is fully open.\ncase closed\nThe door is fully closed.\ncase opening\nThe door is actively opening.\ncase stopped\nThe door is not moving, and is neither fully open nor fully closed."
  },
  {
    "title": "HMCameraStream | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastream",
    "html": "Topics\nConfiguring the audio stream\nvar audioStreamSetting: HMCameraAudioStreamSetting\nThe stream's current audio setting.\nfunc updateAudioStreamSetting(HMCameraAudioStreamSetting, completionHandler: (Error?) -> Void)\nUpdates an audio stream's settings.\nfunc setAudioStreamSetting(HMCameraAudioStreamSetting)\nDeprecated\nenum HMCameraAudioStreamSetting\nThe options associated with a camera's audio stream.\nRelationships\nInherits From\nHMCameraSource\nConforms To\nSendable\nSee Also\nControlling the stream\nfunc startStream()\nStarts the camera stream.\nfunc stopStream()\nStops the camera stream.\nvar cameraStream: HMCameraStream?\nThe current camera stream.\nvar streamState: HMCameraStreamState\nThe current state of the camera stream.\nenum HMCameraStreamState\nThe states associated with a camera stream."
  },
  {
    "title": "HMCharacteristicValueUsageState.inUse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueusagestate/inuse",
    "html": "See Also\nUsage States\ncase notInUse\nThe accessory is not in use."
  },
  {
    "title": "HMCharacteristicValueDoorState.stopped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluedoorstate/stopped",
    "html": "See Also\nDoor States\ncase open\nThe door is fully open.\ncase closed\nThe door is fully closed.\ncase opening\nThe door is actively opening.\ncase closing\nThe door is actively closing."
  },
  {
    "title": "HMCharacteristicValueActivationState.active | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueactivationstate/active",
    "html": "See Also\nActivation States\ncase inactive\nThe accessory is inactive."
  },
  {
    "title": "stopStream() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontrol/1833308-stopstream",
    "html": "See Also\nControlling the stream\nfunc startStream()\nStarts the camera stream.\nvar cameraStream: HMCameraStream?\nThe current camera stream.\nclass HMCameraStream\nAn object that represents a camera's audiovisual stream.\nvar streamState: HMCameraStreamState\nThe current state of the camera stream.\nenum HMCameraStreamState\nThe states associated with a camera stream."
  },
  {
    "title": "cameraStream | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontrol/1833307-camerastream",
    "html": "See Also\nControlling the stream\nfunc startStream()\nStarts the camera stream.\nfunc stopStream()\nStops the camera stream.\nclass HMCameraStream\nAn object that represents a camera's audiovisual stream.\nvar streamState: HMCameraStreamState\nThe current state of the camera stream.\nenum HMCameraStreamState\nThe states associated with a camera stream."
  },
  {
    "title": "HMCharacteristicValueDoorState.closed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluedoorstate/closed",
    "html": "See Also\nDoor States\ncase open\nThe door is fully open.\ncase opening\nThe door is actively opening.\ncase closing\nThe door is actively closing.\ncase stopped\nThe door is not moving, and is neither fully open nor fully closed."
  },
  {
    "title": "HMCharacteristicValueValveType.genericValve | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluevalvetype/genericvalve",
    "html": "See Also\nValve Types\ncase irrigation\nAn irrigation valve.\ncase showerHead\nA shower head.\ncase waterFaucet\nA water faucet."
  },
  {
    "title": "HMCharacteristicValueCurrentSlatState.jammed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentslatstate/jammed",
    "html": "See Also\nSlat States\ncase stationary\nThe slats are stationary.\ncase oscillating\nThe slats are oscillating."
  },
  {
    "title": "HMCharacteristicValueActivationState.inactive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueactivationstate/inactive",
    "html": "See Also\nActivation States\ncase active\nThe accessory is active."
  },
  {
    "title": "HMCharacteristicValueCurrentHeaterCoolerState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatercoolerstate",
    "html": "Topics\nCurrent State\ncase inactive\nThe accessory is inactive.\ncase idle\nThe accessory is idle.\ncase heating\nThe accessory is actively heating.\ncase cooling\nThe accessory is actively cooling.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "init(minValue:maxValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnumberrange/2881107-init",
    "html": "Parameters\nminValue\n\nThe minimum value of the range.\n\nmaxValue\n\nThe maximum value of the range.\n\nReturn Value\n\nAn initialized number range.\n\nSee Also\nCreating a number range\ninit(minValue: NSNumber)\nCreates an one-sided number range with a minimum value.\ninit(maxValue: NSNumber)\nCreates a one-sided number range with a maximum value."
  },
  {
    "title": "HMCharacteristicValueTargetSecuritySystemState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetsecuritysystemstate",
    "html": "Topics\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarm\nThe security system is disarmed.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueContactState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecontactstate",
    "html": "Topics\nContact Sensor State\ncase detected\nContact is detected.\ncase none\nContact is not detected.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueCarbonMonoxideDetectionStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecarbonmonoxidedetectionstatus",
    "html": "Topics\nCarbon Monoxide Levels\ncase notDetected\nCarbon monoxide levels are normal.\ncase detected\nAbnormally high levels of carbon monoxide are present.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMPresenceEventType.everyExit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype/everyexit",
    "html": "Discussion\n\nThis presence type cannot be used as a predicate.\n\nSee Also\nSpecifying presence type\ncase everyEntry\nTriggers the event every time a user enters the home.\ncase firstEntry\nTriggers an event for the first user entering the home.\ncase lastExit\nTriggers an event when the last user leaves the home."
  },
  {
    "title": "thresholdRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecharacteristicthresholdrangeevent/2881092-thresholdrange",
    "html": "Discussion\n\nUse this property to adjust the range of characteristic values that trigger the event.\n\nSee Also\nConfiguring a characteristic threshold event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event."
  },
  {
    "title": "HMCharacteristicValueLabelNamespace.numeral | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelabelnamespace/numeral",
    "html": "See Also\nNamespaces\ncase dot\nThe label index indicates the number of dots, like ., .., ..., and so on."
  },
  {
    "title": "atHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype/2923320-athome",
    "html": "Discussion\n\nA convenience value for use in predicates on HMEventTrigger. Represents the presence of at least one user in the home.\n\nSee Also\nUsing presence as a predicate\nstatic var notAtHome: HMPresenceEventType\nTriggers the event when there are no users in the home."
  },
  {
    "title": "characteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecharacteristicthresholdrangeevent/2881096-characteristic",
    "html": "Discussion\n\nUse this property to change the event's characteristic.\n\nThe characteristic must support notification.\n\nSee Also\nConfiguring a characteristic threshold event\nvar thresholdRange: HMNumberRange\nThe range of the characteristic value that triggers the event."
  },
  {
    "title": "notAtHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype/2923314-notathome",
    "html": "Discussion\n\nA convenience value for use in predicates on HMEventTrigger. Represents the presence of no users in the home.\n\nSee Also\nUsing presence as a predicate\nstatic var atHome: HMPresenceEventType\nTriggers the event when at least one user is in the home."
  },
  {
    "title": "streamState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontrol/1649686-streamstate",
    "html": "See Also\nControlling the stream\nfunc startStream()\nStarts the camera stream.\nfunc stopStream()\nStops the camera stream.\nvar cameraStream: HMCameraStream?\nThe current camera stream.\nclass HMCameraStream\nAn object that represents a camera's audiovisual stream.\nenum HMCameraStreamState\nThe states associated with a camera stream."
  },
  {
    "title": "HMCameraStreamState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamstate",
    "html": "Topics\nObserving the streaming state\ncase notStreaming\nThe state when the camera stream is not active.\ncase starting\nThe state when the camera stream start request is processing.\ncase stopping\nThe state when the camera stream is stopping.\ncase streaming\nThe state when the camera stream is currently in progress.\nRelationships\nConforms To\nSendable\nSee Also\nControlling the stream\nfunc startStream()\nStarts the camera stream.\nfunc stopStream()\nStops the camera stream.\nvar cameraStream: HMCameraStream?\nThe current camera stream.\nclass HMCameraStream\nAn object that represents a camera's audiovisual stream.\nvar streamState: HMCameraStreamState\nThe current state of the camera stream."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontrol/1649676-delegate",
    "html": "See Also\nObserving stream activity\nprotocol HMCameraStreamControlDelegate\nA protocol that gives the delegate updates on the camera stream."
  },
  {
    "title": "HMCameraStreamControlDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontroldelegate",
    "html": "Topics\nObserving stream activity\nfunc cameraStreamControlDidStartStream(HMCameraStreamControl)\nTells the delegate that the camera stream has started.\nfunc cameraStreamControl(HMCameraStreamControl, didStopStreamWithError: Error?)\nTells the delegate that the camera stream has stopped.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nObserving stream activity\nvar delegate: HMCameraStreamControlDelegate?\nDelegate that receives updates as the camera stream changes."
  },
  {
    "title": "takeSnapshot() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontrol/1833270-takesnapshot",
    "html": "See Also\nTaking snapshots\nvar mostRecentSnapshot: HMCameraSnapshot?\nThe camera's most recent snapshot.\nclass HMCameraSnapshot\nAn object that represents a snapshot taken from a camera."
  },
  {
    "title": "HMCameraSnapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshot",
    "html": "Topics\nAccessing snapshot properties\nvar captureDate: Date\nDate and time at which the snapshot was requested.\nRelationships\nInherits From\nHMCameraSource\nConforms To\nSendable\nSee Also\nTaking snapshots\nfunc takeSnapshot()\nTakes an image snapshot.\nvar mostRecentSnapshot: HMCameraSnapshot?\nThe camera's most recent snapshot."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontrol/1833267-delegate",
    "html": "See Also\nObserving snapshot activity\nprotocol HMCameraSnapshotControlDelegate\nA set of methods used to observe the camera's snapshot activity."
  },
  {
    "title": "HMCameraSnapshotControlDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontroldelegate",
    "html": "Topics\nObserving snapshot activity\nfunc cameraSnapshotControl(HMCameraSnapshotControl, didTake: HMCameraSnapshot?, error: Error?)\nTells the delegate that the camera has taken a new snapshot.\nfunc cameraSnapshotControlDidUpdateMostRecentSnapshot(HMCameraSnapshotControl)\nTells the delegate that the most recent snapshot has been updated.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nObserving snapshot activity\nvar delegate: HMCameraSnapshotControlDelegate?\nDelegate that receives updates as the camera takes snapshots."
  },
  {
    "title": "init(fire:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcalendarevent/2881072-init",
    "html": "Parameters\nfireDateComponents\n\nDate components that specify the time at which the event fires.\n\nReturn Value\n\nAn initialized calendar event."
  },
  {
    "title": "accessoryBrowser(_:didRemoveNewAccessory:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowserdelegate/1622407-accessorybrowser",
    "html": "Parameters\nbrowser\n\nThe browser.\n\naccessory\n\nThe accessory that is no longer available.\n\nDiscussion\n\nA common reason for an accessory to no longer be available is because it was added to a home, and is thus no longer a new accessory.\n\nSee Also\nTracking new accessories\nfunc accessoryBrowser(HMAccessoryBrowser, didFindNewAccessory: HMAccessory)\nTells the delegate that a new accessory has been discovered."
  },
  {
    "title": "HMCharacteristicValueCarbonDioxideDetectionStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecarbondioxidedetectionstatus",
    "html": "Topics\nCarbon Dioxide Levels\ncase notDetected\nCarbon dioxide levels are normal.\ncase detected\nAbnormally high levels of carbon dioxide are present.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "accessoryBrowser(_:didFindNewAccessory:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowserdelegate/1622402-accessorybrowser",
    "html": "Parameters\nbrowser\n\nThe browser that discovered the new accessory.\n\naccessory\n\nThe new accessory.\n\nSee Also\nTracking new accessories\nfunc accessoryBrowser(HMAccessoryBrowser, didRemoveNewAccessory: HMAccessory)\nTells the delegate that a new accessory is no longer available in the browser."
  },
  {
    "title": "HMCharacteristicValueTargetDoorState.closed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetdoorstate/closed",
    "html": "See Also\nDoor States\ncase open\nAn open door."
  },
  {
    "title": "HMCharacteristicValueTargetDoorState.open | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetdoorstate/open",
    "html": "See Also\nDoor States\ncase closed\nA closed door."
  },
  {
    "title": "sunrise | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificantevent/1624412-sunrise",
    "html": "See Also\nSignificant event properties\nstatic let sunset: HMSignificantEvent\nAn event that fires at sunset."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificantevent/2881123-init",
    "html": "See Also\nCreating a significant event\ninit(rawValue: String)"
  },
  {
    "title": "sunset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificantevent/1624417-sunset",
    "html": "See Also\nSignificant event properties\nstatic let sunrise: HMSignificantEvent\nAn event that fires at sunrise."
  },
  {
    "title": "init(duration:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmdurationevent/2881059-init",
    "html": "Parameters\nduration\n\nThe duration before the event ends, specified in seconds.\n\nReturn Value\n\nAn initialized duration event."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificantevent/2881125-init",
    "html": "See Also\nCreating a significant event\ninit(String)"
  },
  {
    "title": "offset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablesignificanttimeevent/2881090-offset",
    "html": "Discussion\n\nTo specify that this event should fire before the significant event, supply a date components object with negative values. For example, to specify 30 minutes before sunset, the minute property of the value of the offset property must be set to -30.\n\nSee Also\nConfiguring a significant time event\nvar significantEvent: HMSignificantEvent\nThe significant time-based event that is used to calculate when the event fires."
  },
  {
    "title": "HMCharacteristicValueSlatType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueslattype",
    "html": "Topics\nSlat Types\ncase horizontal\nHorizontal slats.\ncase vertical\nVertical slats.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLockMechanismState.secured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismstate/secured",
    "html": "See Also\nLock Mechanism State\ncase unsecured\nThe lock mechanism is unlocked.\ncase jammed\nThe lock mechanism is jammed.\ncase unknown\nThe lock mechanism is in an unknown state."
  },
  {
    "title": "HMCharacteristicValueLabelNamespace | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelabelnamespace",
    "html": "Topics\nNamespaces\ncase dot\nThe label index indicates the number of dots, like ., .., ..., and so on.\ncase numeral\nThe label index indicates the arabic numeral, like 1, 2, 3, and so on.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueCurrentAirPurifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentairpurifierstate",
    "html": "Topics\nAir Purifier States\ncase inactive\nThe air purifier is inactive.\ncase idle\nThe air purifier is idle.\ncase active\nThe air purifier is active.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueConfigurationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueconfigurationstate",
    "html": "Topics\nConfiguration States\ncase notConfigured\nThe accessory has not been configured.\ncase configured\nThe accessory has been configured.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "init(characteristic:thresholdRange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicthresholdrangeevent/2881094-init",
    "html": "Parameters\ncharacteristic\n\nThe characteristic that the event is observing.\n\nthresholdRange\n\nThe range for the characteristic value that triggers the event.\n\nReturn Value\n\nAn initialized characteristic threshold range event.\n\nDiscussion\n\nUse a characteristic that supports notification; otherwise this initializer throws an exception."
  },
  {
    "title": "HMCharacteristicValueSwingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueswingmode",
    "html": "Topics\nMovement Mode\ncase disabled\nThe fan remains in a fixed position.\ncase enabled\nThe fan swings back and forth.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueTargetAirPurifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetairpurifierstate",
    "html": "Topics\nAir Purifier States\ncase manual\nThe air purifier should operate in a manual mode.\ncase automatic\nThe air purifier should operate in an automatic mode.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLeakStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueleakstatus",
    "html": "Topics\nLeak Status\ncase none\nNo leak detected.\ncase detected\nLeak detected.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "characteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicthresholdrangeevent/2881095-characteristic",
    "html": "See Also\nInspecting a characteristic threshold event\nvar thresholdRange: HMNumberRange\nThe range of the characteristic value that triggers the event."
  },
  {
    "title": "digitalZoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol/1649954-digitalzoom",
    "html": "See Also\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting."
  },
  {
    "title": "HMCharacteristicValueAirQuality | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairquality",
    "html": "Topics\nAir Quality\ncase unknown\nThe air quality is unknown.\ncase excellent\nThe air quality is excellent.\ncase good\nThe air quality is good.\ncase fair\nThe air quality is fair.\ncase inferior\nThe air quality is inferior.\ncase poor\nThe air quality is poor.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicMetadataFormatArray | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatarray",
    "html": "See Also\nCollections\nlet HMCharacteristicMetadataFormatDictionary: String\nIndicates that the characteristic has dictionary values."
  },
  {
    "title": "HMCharacteristicValueSmokeDetectionStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluesmokedetectionstatus",
    "html": "Topics\nSmoke Detection Status\ncase none\nNo smoke detected.\ncase detected\nSmoke detected.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLockPhysicalControlsState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockphysicalcontrolsstate",
    "html": "Topics\nLock Physical Control State\ncase notLocked\nThe physical control is unlocked.\ncase locked\nThe physical control is locked.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueTargetLockMechanismState.unsecured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetlockmechanismstate/unsecured",
    "html": "See Also\nLock Mechanism States\ncase secured\nA secured lock mechanism."
  },
  {
    "title": "HMCharacteristicValueSecuritySystemAlarmType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluesecuritysystemalarmtype",
    "html": "Topics\nAlarm Types\ncase noAlarm\nThe alarm isn’t triggered.\ncase unknown\nAn alarm has been triggered with an unknown cause.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueTargetHeaterCoolerState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetheatercoolerstate",
    "html": "Topics\nTarget State\ncase automatic\nThe accessory should choose whether to heat or cool.\ncase heat\nThe accessory should operate as a heater.\ncase cool\nThe accessory should operate as a cooler.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueOccupancyStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueoccupancystatus",
    "html": "Topics\nOccupancy Status\ncase notOccupied\nThe home is not occupied.\ncase occupied\nThe home is occupied.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueInputEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueinputevent",
    "html": "Topics\nInput Events\ncase singlePress\nThe programmable switch detected a single press event.\ncase doublePress\nThe programmable switch detected a double press event.\ncase longPress\nThe programmable switch detected a long press event.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueRotationDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluerotationdirection",
    "html": "Topics\nRotation\ncase clockwise\nClockwise rotation.\ncase counterClockwise\nCounter-clockwise rotation.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueChargingState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluechargingstate",
    "html": "Topics\nCharging States\ncase none\nThe battery isn’t charging.\ncase inProgress\nThe battery is charging.\ncase notChargeable\nThe battery can’t be charged.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueStatusFault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluestatusfault",
    "html": "Topics\nFault Status\ncase noFault\nThe accessory has not experienced a fault.\ncase generalFault\nThe accessory experienced a general fault.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueFilterChange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluefilterchange",
    "html": "Topics\nFilter Change Indicator\ncase notNeeded\nThe filter doesn’t need to be changed.\ncase needed\nThe filter needs to be changed.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "makePayload(url:ownershipToken:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3327327-makepayload",
    "html": "Parameters\nsetupPayloadURL\n\nThe setup payload URL for the accessory. Provide this URL when HomeKit sends an add request to the app associated with your accessory. You determine the URL based on the category and name of your accessory, as given in the accessoryCategory and accessoryName properties of the associated HMAddAccessoryRequest instance.\n\nownershipToken\n\nA token proving ownership of the accessory. Your app negotiates the token with the accessory outside of HomeKit.\n\nReturn Value\n\nAn accessory setup payload that you use to add the accessory. The method fails and returns nil if the setup payload URL is invalid.\n\nSee Also\nCreating a Payload\nfunc makePayload(ownershipToken: HMAccessoryOwnershipToken) -> HMAccessorySetupPayload?\nBuilds an accessory setup payload with the given ownership token."
  },
  {
    "title": "requiresOwnershipToken | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3327328-requiresownershiptoken",
    "html": "Discussion\n\nIn practice, this value is always true.\n\nSee Also\nCharacterizing the Request\nvar home: HMHome\nThe home to which to add the accessory.\nvar accessoryCategory: HMAccessoryCategory\nThe category of the accessory to add.\nvar accessoryName: String\nThe name of the accessory to add.\nvar requiresSetupPayloadURL: Bool\nAn indication of whether the add operation requires a setup payload URL."
  },
  {
    "title": "HMCharacteristicValueCurrentSecuritySystemState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentsecuritysystemstate",
    "html": "Topics\nSecurity System States\ncase stayArm\nThe home is occupied and residents are active.\ncase awayArm\nThe home is unoccupied.\ncase nightArm\nThe home is occupied and residents are sleeping.\ncase disarmed\nThe security system is disarmed.\ncase triggered\nthe security system is triggered.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLockMechanismState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismstate",
    "html": "Topics\nLock Mechanism State\ncase unsecured\nThe lock mechanism is unlocked.\ncase secured\nThe lock mechanism is locked.\ncase jammed\nThe lock mechanism is jammed.\ncase unknown\nThe lock mechanism is in an unknown state.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueTargetLockMechanismState.secured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetlockmechanismstate/secured",
    "html": "See Also\nLock Mechanism States\ncase unsecured\nAn unsecured lock mechanism."
  },
  {
    "title": "HMCharacteristicValueTargetHumidifierDehumidifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargethumidifierdehumidifierstate",
    "html": "Topics\nTarget States\ncase automatic\nThe accessory should decide whether to add or remove water to or from the air.\ncase humidify\nThe accessory should add water to the air.\ncase dehumidify\nThe accessory should remove water from the air.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "minValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnumberrange/2881105-minvalue",
    "html": "See Also\nInspecting a number range\nvar maxValue: NSNumber?\nThe maximum value of the range."
  },
  {
    "title": "HMCharacteristicValueHeatingCooling | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueheatingcooling",
    "html": "Topics\nAccesory State\ncase off\nUnit is set to off, neither heating nor cooling.\ncase heat\nUnit is set to heating.\ncase cool\nUnit is set to cooling.\ncase auto\nUnit is set to automatic.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "init(minValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnumberrange/2881102-init",
    "html": "Parameters\nminValue\n\nThe minimum value of the range.\n\nReturn Value\n\nAn initialized number range, with the maximum value set to an arbitrarily large value.\n\nSee Also\nCreating a number range\ninit(minValue: NSNumber, maxValue: NSNumber)\nCreates a new number range.\ninit(maxValue: NSNumber)\nCreates a one-sided number range with a maximum value."
  },
  {
    "title": "maxValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnumberrange/2881106-maxvalue",
    "html": "See Also\nInspecting a number range\nvar minValue: NSNumber?\nThe minimum value of the range."
  },
  {
    "title": "HMPresenceEventType.firstEntry | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype/firstentry",
    "html": "See Also\nSpecifying presence type\ncase everyEntry\nTriggers the event every time a user enters the home.\ncase everyExit\nTriggers the event every time a user leaves the home.\ncase lastExit\nTriggers an event when the last user leaves the home."
  },
  {
    "title": "HMPresenceEventType.lastExit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype/lastexit",
    "html": "See Also\nSpecifying presence type\ncase everyEntry\nTriggers the event every time a user enters the home.\ncase everyExit\nTriggers the event every time a user leaves the home.\ncase firstEntry\nTriggers an event for the first user entering the home."
  },
  {
    "title": "HMPresenceEventType.everyEntry | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype/everyentry",
    "html": "Discussion\n\nThis presence type cannot be used as a predicate.\n\nSee Also\nSpecifying presence type\ncase everyExit\nTriggers the event every time a user leaves the home.\ncase firstEntry\nTriggers an event for the first user entering the home.\ncase lastExit\nTriggers an event when the last user leaves the home."
  },
  {
    "title": "presenceEventType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablepresenceevent/2923307-presenceeventtype",
    "html": "Discussion\n\nUse this property to change the presence type that triggers this event.\n\nSee Also\nConfiguring a presence event\nvar presenceUserType: HMPresenceEventUserType\nThe user type whose presence triggers the event."
  },
  {
    "title": "presenceUserType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablepresenceevent/2923305-presenceusertype",
    "html": "Discussion\n\nUse this property to change the user presence type that triggers this event.\n\nSee Also\nConfiguring a presence event\nvar presenceEventType: HMPresenceEventType\nThe event type that triggers the presence event."
  },
  {
    "title": "HMPresenceEventUserType.customUsers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventusertype/customusers",
    "html": "See Also\nSelecting users\ncase currentUser\nThe current user triggers the presence event.\ncase homeUsers\nAll users associated with a home trigger a presence event."
  },
  {
    "title": "HMCharacteristicValueJammedStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluejammedstatus",
    "html": "Topics\nJammed Status\ncase none\nThe accessory isn’t jammed.\ncase jammed\nThe accessory is jammed and can’t move.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "volume | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiocontrol/1649444-volume",
    "html": "See Also\nControlling audio characteristics\nvar mute: HMCharacteristic?"
  },
  {
    "title": "mute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiocontrol/1649451-mute",
    "html": "See Also\nControlling audio characteristics\nvar volume: HMCharacteristic?"
  },
  {
    "title": "HMCharacteristicValueTamperedStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetamperedstatus",
    "html": "Topics\nTampered Status\ncase none\nThe accessory has not been tampered with.\ncase tampered\nThe accessory has been tampered with.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueCurrentHeatingCooling.off | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatingcooling/off",
    "html": "See Also\nTemperature States\ncase cool\nThe accessory state indicates cooling.\ncase heat\nThe accessory state indicates heating."
  },
  {
    "title": "HMCharacteristicValueCurrentHeatingCooling.cool | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatingcooling/cool",
    "html": "See Also\nTemperature States\ncase heat\nThe accessory state indicates heating.\ncase off\nThe accessory indicates no heating or cooling."
  },
  {
    "title": "HMCharacteristicValueLockMechanismState.unsecured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismstate/unsecured",
    "html": "See Also\nLock Mechanism State\ncase secured\nThe lock mechanism is locked.\ncase jammed\nThe lock mechanism is jammed.\ncase unknown\nThe lock mechanism is in an unknown state."
  },
  {
    "title": "HMCharacteristicValueUsageState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueusagestate",
    "html": "Topics\nUsage States\ncase notInUse\nThe accessory is not in use.\ncase inUse\nThe accessory is currently in use.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueActivationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueactivationstate",
    "html": "Topics\nActivation States\ncase inactive\nThe accessory is inactive.\ncase active\nThe accessory is active.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueCurrentSlatState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentslatstate",
    "html": "Topics\nSlat States\ncase stationary\nThe slats are stationary.\ncase jammed\nThe slats are jammed.\ncase oscillating\nThe slats are oscillating.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueCurrentHeatingCooling.heat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatingcooling/heat",
    "html": "See Also\nTemperature States\ncase cool\nThe accessory state indicates cooling.\ncase off\nThe accessory indicates no heating or cooling."
  },
  {
    "title": "HMCharacteristicValueDoorState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluedoorstate",
    "html": "Topics\nDoor States\ncase open\nThe door is fully open.\ncase closed\nThe door is fully closed.\ncase opening\nThe door is actively opening.\ncase closing\nThe door is actively closing.\ncase stopped\nThe door is not moving, and is neither fully open nor fully closed.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueValveType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluevalvetype",
    "html": "Topics\nValve Types\ncase genericValve\nA generic valve.\ncase irrigation\nAn irrigation valve.\ncase showerHead\nA shower head.\ncase waterFaucet\nA water faucet.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValuePositionState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluepositionstate",
    "html": "Topics\nPosition States\ncase closing\nThe position is moving towards minimum value.\ncase opening\nThe position is moving towards maximum value.\ncase stopped\nThe accessory isn’t moving.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicMetadataFormatTLV8 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformattlv8",
    "html": "Discussion\n\nThe value is an NSData object containing a set of one or more TLV8's, which are packed type-length-value items with an 8-bit type, 8-bit length, and N-byte value.\n\nSee Also\nData\nlet HMCharacteristicMetadataFormatData: String\nIndicates that the characteristic has data blob values."
  },
  {
    "title": "HMCharacteristicMetadataFormatDictionary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatdictionary",
    "html": "See Also\nCollections\nlet HMCharacteristicMetadataFormatArray: String\nIndicates that the characteristic has array values."
  },
  {
    "title": "HMCharacteristicMetadataUnitsPercentage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataunitspercentage",
    "html": "See Also\nParts Per Total\nlet HMCharacteristicMetadataUnitsPartsPerMillion: String\nThe unit of the characters is parts per million."
  },
  {
    "title": "HMCharacteristicMetadataUnitsPartsPerMillion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataunitspartspermillion",
    "html": "See Also\nParts Per Total\nlet HMCharacteristicMetadataUnitsPercentage: String\nThe unit of the characteristic is a percentage."
  },
  {
    "title": "HMCharacteristicMetadataUnitsCelsius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataunitscelsius",
    "html": "See Also\nTemperature\nlet HMCharacteristicMetadataUnitsFahrenheit: String\nThe unit of the characteristic is fahrenheit."
  },
  {
    "title": "HMCharacteristicMetadataUnitsFahrenheit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataunitsfahrenheit",
    "html": "See Also\nTemperature\nlet HMCharacteristicMetadataUnitsCelsius: String\nThe unit of the characteristic is celsius."
  },
  {
    "title": "makePayload(ownershipToken:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3327326-makepayload",
    "html": "Parameters\nownershipToken\n\nA token proving ownership of the accessory.\n\nReturn Value\n\nAn accessory setup payload that you use to add the accessory. The method fails and returns nil if the request’s requiresSetupPayloadURL property is true. In that case, use makePayload(url:ownershipToken:) instead.\n\nSee Also\nCreating a Payload\nfunc makePayload(url: URL, ownershipToken: HMAccessoryOwnershipToken) -> HMAccessorySetupPayload?\nBuilds an accessory setup payload with the given setup payload URL and ownership token."
  },
  {
    "title": "init(maxValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnumberrange/2881104-init",
    "html": "Parameters\nmaxValue\n\nThe maximum value of the range.\n\nReturn Value\n\nAn initialized number range, with the minimum value set to an arbitrarily large negative value.\n\nSee Also\nCreating a number range\ninit(minValue: NSNumber, maxValue: NSNumber)\nCreates a new number range.\ninit(minValue: NSNumber)\nCreates an one-sided number range with a minimum value."
  },
  {
    "title": "triggerValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecharacteristicevent/2881099-triggervalue",
    "html": "Discussion\n\nUse this property to adjust the value that triggers the event.\n\nSet this property to nil to trigger the event whenever the value of the characteristic changes.\n\nSee Also\nConfiguring the event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event."
  },
  {
    "title": "HMCharacteristicValueTargetFanState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetfanstate",
    "html": "Topics\nFan State\ncase manual\nThe fan should be controlled manually.\ncase automatic\nThe fan should be controlled automatically.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLabelNamespace.dot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelabelnamespace/dot",
    "html": "See Also\nNamespaces\ncase numeral\nThe label index indicates the arabic numeral, like 1, 2, 3, and so on."
  },
  {
    "title": "HMCharacteristicValueCurrentFanState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentfanstate",
    "html": "Topics\nFan State\ncase inactive\nThe fan is inactive.\ncase idle\nThe fan is idle.\ncase active\nThe fan is blowing air.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "thresholdRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicthresholdrangeevent/2881098-thresholdrange",
    "html": "See Also\nInspecting a characteristic threshold event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event."
  },
  {
    "title": "HMCharacteristicValueAirParticulateSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvalueairparticulatesize",
    "html": "Topics\nAir Particulate Sizes\ncase size2_5\nThe air particulate size of 2.5 micrometers.\ncase size10\nThe air particulate size of 10 micrometers.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueLockMechanismLastKnownAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluelockmechanismlastknownaction",
    "html": "Topics\nLock Mechanism Actions\ncase securedRemotely\nThe last known action was for the lock to be secured remotely.\ncase securedUsingPhysicalMovement\nThe last known action was for the lock to be secured using physical movement.\ncase securedUsingPhysicalMovementExterior\nThe last known action was for the lock to be secured using physical movement on the exterior of the door.\ncase securedUsingPhysicalMovementInterior\nThe last known action was for the lock to be secured using physical movement on the interior of the door.\ncase securedWithAutomaticSecureTimeout\nThe last known action was for the lock to be secured automatically after a timeout period expired.\ncase securedWithKeypad\nThe last known action was for the lock to be secured using a keypad.\ncase unsecuredRemotely\nThe last known action was for the lock to be unsecured remotely.\ncase unsecuredUsingPhysicalMovement\nThe last known action was for the lock to be unsecured using physical movement.\ncase unsecuredUsingPhysicalMovementExterior\nThe last known action was for the lock to be unsecured using physical movement on the exterior of the door.\ncase unsecuredUsingPhysicalMovementInterior\nThe last known action was for the lock to be unsecured using physical movement on the interior of the door.\ncase unsecuredWithKeypad\nThe last known action was for the lock to be unsecured using a keypad.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "home | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3327325-home",
    "html": "Discussion\n\nCall this home’s addAndSetupAccessories(with:completionHandler:) method to fulfill the request after constructing the setup payload.\n\nSee Also\nCharacterizing the Request\nvar accessoryCategory: HMAccessoryCategory\nThe category of the accessory to add.\nvar accessoryName: String\nThe name of the accessory to add.\nvar requiresOwnershipToken: Bool\nAn indication of whether the add operation requires an ownership token.\nDeprecated\nvar requiresSetupPayloadURL: Bool\nAn indication of whether the add operation requires a setup payload URL."
  },
  {
    "title": "accessoryCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3340487-accessorycategory",
    "html": "See Also\nCharacterizing the Request\nvar home: HMHome\nThe home to which to add the accessory.\nvar accessoryName: String\nThe name of the accessory to add.\nvar requiresOwnershipToken: Bool\nAn indication of whether the add operation requires an ownership token.\nDeprecated\nvar requiresSetupPayloadURL: Bool\nAn indication of whether the add operation requires a setup payload URL."
  },
  {
    "title": "HMCharacteristicValueTemperatureUnit.celsius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetemperatureunit/celsius",
    "html": "See Also\nTemperature Units\ncase fahrenheit\nTemperature is reported in degrees Fahrenheit."
  },
  {
    "title": "HMCharacteristicValueBatteryStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluebatterystatus",
    "html": "Topics\nBattery Status\ncase normal\nThe battery level is normal.\ncase low\nThe battery level is low.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicValueTemperatureUnit.fahrenheit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetemperatureunit/fahrenheit",
    "html": "See Also\nTemperature Units\ncase celsius\nTemperature is reported in degrees Celsius."
  },
  {
    "title": "HMPresenceEventUserType.homeUsers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventusertype/homeusers",
    "html": "See Also\nSelecting users\ncase currentUser\nThe current user triggers the presence event.\ncase customUsers\nA custom set of users is used to trigger a presence event."
  },
  {
    "title": "HMPresenceEventUserType.currentUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventusertype/currentuser",
    "html": "See Also\nSelecting users\ncase homeUsers\nAll users associated with a home trigger a presence event.\ncase customUsers\nA custom set of users is used to trigger a presence event."
  },
  {
    "title": "init(significantEvent:offset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificanttimeevent/2881087-init",
    "html": "Parameters\nsignificantEvent\n\nThe significant event for this trigger, for example sunrise.\n\noffset\n\nA date components instance that represents the offset from the significant event that this event fires.\n\nReturn Value\n\nAn initialized significant time event which fires at the specified offset from the provided significant event.\n\nDiscussion\n\nTo specify that this event should fire before the significant event, supply a date components object with negative values. For example, to specify 30 minutes before sunset, the minute property of the offset argument must be set to -30."
  },
  {
    "title": "offset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificanttimeevent/2881089-offset",
    "html": "See Also\nInspecting a significant time event\nvar significantEvent: HMSignificantEvent\nThe significant time-based event that is used to calculate when the event fires."
  },
  {
    "title": "init(presenceEventType:presenceUserType:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceevent/2923306-init",
    "html": "Parameters\npresenceEventType\n\nThe event type that determines when the event fires.\n\npresenceUserType\n\nThe user type whose presence triggers the event.\n\nReturn Value\n\nAn initialized presence event."
  },
  {
    "title": "significantEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificanttimeevent/2881085-significantevent",
    "html": "See Also\nInspecting a significant time event\nvar offset: DateComponents?\nThe offset from the significant event that the event fires at."
  },
  {
    "title": "presenceEventType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceevent/2923308-presenceeventtype",
    "html": "See Also\nInspecting a presence event\nvar presenceUserType: HMPresenceEventUserType\nThe user type whose presence triggers the event."
  },
  {
    "title": "presenceUserType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceevent/2923304-presenceusertype",
    "html": "See Also\nInspecting a presence event\nvar presenceEventType: HMPresenceEventType\nThe event type that triggers the presence event."
  },
  {
    "title": "cameraSource | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraview/1829452-camerasource",
    "html": "See Also\nGetting the Camera Source\nclass HMCameraSource\nAn abstract class for a camera’s data source."
  },
  {
    "title": "requiresSetupPayloadURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3327329-requiressetuppayloadurl",
    "html": "Discussion\n\nIf this value is true, look up the URL for the given accessory based on its category and name, given by the request’s accessoryCategory and accessoryName parameters. Include the URL in the setup payload by calling the request’s makePayload(url:ownershipToken:) method.\n\nIf requiresSetupPayloadURL is false, you can still use the makePayload(url:ownershipToken:) method, if appropriate. Alternatively, you can construct the payload by calling the request’s makePayload(ownershipToken:) command instead.\n\nSee Also\nCharacterizing the Request\nvar home: HMHome\nThe home to which to add the accessory.\nvar accessoryCategory: HMAccessoryCategory\nThe category of the accessory to add.\nvar accessoryName: String\nThe name of the accessory to add.\nvar requiresOwnershipToken: Bool\nAn indication of whether the add operation requires an ownership token.\nDeprecated"
  },
  {
    "title": "init(url:ownershipToken:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuppayload/3327322-init",
    "html": "Parameters\nsetupPayloadURL\n\nThe payload used to securely authenticate the accessory. This is the same payload you would receive by scanning the accessory’s QR code.\n\nownershipToken\n\nA token that proves ownership of the accessory. You typically negotiate this token with the accessory outside of HomeKit.\n\nDiscussion\n\nFor details about the payload’s content, join the MFi Program.\n\nSee Also\nCreating a Payload\ninit?(url: URL?)\nCreates an accessory setup payload.\nclass HMAccessoryOwnershipToken\nAuthentication data that your app provides when adding an accessory to a home."
  },
  {
    "title": "init(url:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuppayload/2941034-init",
    "html": "Parameters\nsetupPayloadURL\n\nThe payload used to securely authenticate the accessory. This is the same payload you would receive by scanning the accessory’s QR code.\n\nDiscussion\n\nFor details about the payload’s content, please join the MFi Program.\n\nSee Also\nCreating a Payload\ninit?(url: URL, ownershipToken: HMAccessoryOwnershipToken?)\nCreates an accessory setup payload instance that includes an ownership token.\nclass HMAccessoryOwnershipToken\nAuthentication data that your app provides when adding an accessory to a home."
  },
  {
    "title": "HMCharacteristicMetadataFormatFloat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatfloat",
    "html": "See Also\nSigned Values\nlet HMCharacteristicMetadataFormatInt: String\nIndicates that the characteristic has int values."
  },
  {
    "title": "HMCharacteristicMetadataFormatUInt16 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatuint16",
    "html": "Discussion\n\nThe value is an NSNumber object containing an unsigned 16-bit integer with a range [0, 65535].\n\nSee Also\nUnsigned Integers\nlet HMCharacteristicMetadataFormatUInt8: String\nIndicates that the characteristic has unsigned 8-bit integer values.\nlet HMCharacteristicMetadataFormatUInt32: String\nIndicates that the characteristic has unsigned 32-bit integer values.\nlet HMCharacteristicMetadataFormatUInt64: String\nIndicates that the characteristic has unsigned 64-bit integer values."
  },
  {
    "title": "HMCharacteristicMetadataFormatUInt64 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatuint64",
    "html": "Discussion\n\nThe value is an NSNumber object containing an unsigned 64-bit integer with a range [0, 18446744073709551615].\n\nSee Also\nUnsigned Integers\nlet HMCharacteristicMetadataFormatUInt8: String\nIndicates that the characteristic has unsigned 8-bit integer values.\nlet HMCharacteristicMetadataFormatUInt16: String\nIndicates that the characteristic has unsigned 16-bit integer values.\nlet HMCharacteristicMetadataFormatUInt32: String\nIndicates that the characteristic has unsigned 32-bit integer values."
  },
  {
    "title": "HMCharacteristicMetadataFormatData | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatdata",
    "html": "Discussion\n\nThe value is an NSData object containing bytes of data.\n\nSee Also\nData\nlet HMCharacteristicMetadataFormatTLV8: String\nIndicates that the characteristic has TVL8 values."
  },
  {
    "title": "HMCharacteristicMetadataFormatUInt8 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatuint8",
    "html": "Discussion\n\nThe value is an NSNumber object containing an unsigned 16-bit integer with a range [0, 255].\n\nSee Also\nUnsigned Integers\nlet HMCharacteristicMetadataFormatUInt16: String\nIndicates that the characteristic has unsigned 16-bit integer values.\nlet HMCharacteristicMetadataFormatUInt32: String\nIndicates that the characteristic has unsigned 32-bit integer values.\nlet HMCharacteristicMetadataFormatUInt64: String\nIndicates that the characteristic has unsigned 64-bit integer values."
  },
  {
    "title": "HMCharacteristicMetadataFormatUInt32 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatuint32",
    "html": "Discussion\n\nThe value is an NSNumber object containing an unsigned 32-bit integer with a range [0, 4294967295].\n\nSee Also\nUnsigned Integers\nlet HMCharacteristicMetadataFormatUInt8: String\nIndicates that the characteristic has unsigned 8-bit integer values.\nlet HMCharacteristicMetadataFormatUInt16: String\nIndicates that the characteristic has unsigned 16-bit integer values.\nlet HMCharacteristicMetadataFormatUInt64: String\nIndicates that the characteristic has unsigned 64-bit integer values."
  },
  {
    "title": "HMCharacteristicMetadataFormatInt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadataformatint",
    "html": "See Also\nSigned Values\nlet HMCharacteristicMetadataFormatFloat: String\nIndicates that the characteristic has float values."
  },
  {
    "title": "accessoryName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest/3327324-accessoryname",
    "html": "See Also\nCharacterizing the Request\nvar home: HMHome\nThe home to which to add the accessory.\nvar accessoryCategory: HMAccessoryCategory\nThe category of the accessory to add.\nvar requiresOwnershipToken: Bool\nAn indication of whether the add operation requires an ownership token.\nDeprecated\nvar requiresSetupPayloadURL: Bool\nAn indication of whether the add operation requires a setup payload URL."
  },
  {
    "title": "characteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecharacteristicevent/2881100-characteristic",
    "html": "Discussion\n\nUse this property to change the event's characteristic.\n\nThe characteristic must support notification.\n\nSee Also\nConfiguring the event\nvar triggerValue: TriggerValueType?\nThe value of the characteristic that triggers the event."
  },
  {
    "title": "init(region:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmlocationevent/1624981-init",
    "html": "Parameters\nregion\n\nRegion on which the event is triggered. The region object must have at least one of notifyOnEntry or notifyOnExit set to true.\n\nReturn Value\n\nAn initialized instance representing the location event."
  },
  {
    "title": "HMAccessoryCategoryTypeOutlet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeoutlet",
    "html": "See Also\nPower and switches\nlet HMAccessoryCategoryTypeProgrammableSwitch: String\nA programmable switch accessory.\nlet HMAccessoryCategoryTypeSwitch: String\nA switch accessory."
  },
  {
    "title": "HMCharacteristicValueCurrentHumidifierDehumidifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrenthumidifierdehumidifierstate",
    "html": "Topics\nCurrent States\ncase inactive\nThe accesory is off.\ncase idle\nThe accessory is idle.\ncase humidifying\nThe accessory is adding water to the air.\ncase dehumidifying\nThe accessory is removing water from the air.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "updateRegion(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmlocationevent/1624982-updateregion",
    "html": "Deprecated\n\nUse the mutable region property on the HMMutableLocationEvent subclass of HMLocationEvent instead.\n\nParameters\nregion\n\nNew region on which the event is triggered. Must have at least one of notifyOnEntry or notifyOnExit set to true.\n\ncompletionHandler\n\nThe block executed when the region update request has been processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateRegion(_ region: CLRegion) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously."
  },
  {
    "title": "HMAccessoryCategoryTypeProgrammableSwitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeprogrammableswitch",
    "html": "See Also\nPower and switches\nlet HMAccessoryCategoryTypeOutlet: String\nAn outlet accessory.\nlet HMAccessoryCategoryTypeSwitch: String\nA switch accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeAirConditioner | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeairconditioner",
    "html": "See Also\nTemperature and humidity\nlet HMAccessoryCategoryTypeThermostat: String\nA thermostat accessory.\nlet HMAccessoryCategoryTypeAirDehumidifier: String\nA dehumidifier accessory.\nlet HMAccessoryCategoryTypeAirHeater: String\nAn air heater accessory.\nlet HMAccessoryCategoryTypeAirHumidifier: String\nA humidifier accessory."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmlocationevent/1624980-region",
    "html": "Discussion\n\nThe event is triggered based on the values of the notifyOnEntry and notifyOnExit properties.\n\nThis property is nil when an application is not authorized for location services."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablelocationevent/2881109-region",
    "html": "Discussion\n\nUse this property to set the region on which the location event is triggered. The region object must have at least one of notifyOnEntry or notifyOnExit set to true.\n\nThis property is nil when an application is not authorized for location services."
  },
  {
    "title": "HMAccessoryCategoryTypeThermostat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypethermostat",
    "html": "See Also\nTemperature and humidity\nlet HMAccessoryCategoryTypeAirConditioner: String\nAn air conditioner accessory.\nlet HMAccessoryCategoryTypeAirDehumidifier: String\nA dehumidifier accessory.\nlet HMAccessoryCategoryTypeAirHeater: String\nAn air heater accessory.\nlet HMAccessoryCategoryTypeAirHumidifier: String\nA humidifier accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeAirPurifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeairpurifier",
    "html": "See Also\nAir quality and smoke detection\nlet HMAccessoryCategoryTypeFan: String\nA fan accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeFan | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypefan",
    "html": "See Also\nAir quality and smoke detection\nlet HMAccessoryCategoryTypeAirPurifier: String\nAn air purifier accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeSwitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeswitch",
    "html": "See Also\nPower and switches\nlet HMAccessoryCategoryTypeOutlet: String\nAn outlet accessory.\nlet HMAccessoryCategoryTypeProgrammableSwitch: String\nA programmable switch accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeDoorLock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypedoorlock",
    "html": "See Also\nLocks and openers\nlet HMAccessoryCategoryTypeDoor: String\nA door accessory.\nlet HMAccessoryCategoryTypeGarageDoorOpener: String\nA garage door opener accessory.\nlet HMAccessoryCategoryTypeVideoDoorbell: String\nA video doorbell accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeSecuritySystem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypesecuritysystem",
    "html": "See Also\nSafety and security\nlet HMAccessoryCategoryTypeSensor: String\nA sensor accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeSprinkler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypesprinkler",
    "html": "See Also\nWater\nlet HMAccessoryCategoryTypeFaucet: String\nA faucet accessory.\nlet HMAccessoryCategoryTypeShowerHead: String\nA shower head accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeWindow | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypewindow",
    "html": "See Also\nWindows\nlet HMAccessoryCategoryTypeWindowCovering: String\nA window covering accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeWindowCovering | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypewindowcovering",
    "html": "See Also\nWindows\nlet HMAccessoryCategoryTypeWindow: String\nA window accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeAirDehumidifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeairdehumidifier",
    "html": "See Also\nTemperature and humidity\nlet HMAccessoryCategoryTypeThermostat: String\nA thermostat accessory.\nlet HMAccessoryCategoryTypeAirConditioner: String\nAn air conditioner accessory.\nlet HMAccessoryCategoryTypeAirHeater: String\nAn air heater accessory.\nlet HMAccessoryCategoryTypeAirHumidifier: String\nA humidifier accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeDoor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypedoor",
    "html": "See Also\nLocks and openers\nlet HMAccessoryCategoryTypeDoorLock: String\nA door lock accessory.\nlet HMAccessoryCategoryTypeGarageDoorOpener: String\nA garage door opener accessory.\nlet HMAccessoryCategoryTypeVideoDoorbell: String\nA video doorbell accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypesensor",
    "html": "See Also\nSafety and security\nlet HMAccessoryCategoryTypeSecuritySystem: String\nA security system accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeVideoDoorbell | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypevideodoorbell",
    "html": "See Also\nLocks and openers\nlet HMAccessoryCategoryTypeDoor: String\nA door accessory.\nlet HMAccessoryCategoryTypeDoorLock: String\nA door lock accessory.\nlet HMAccessoryCategoryTypeGarageDoorOpener: String\nA garage door opener accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeFaucet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypefaucet",
    "html": "See Also\nWater\nlet HMAccessoryCategoryTypeSprinkler: String\nA sprinkler system accessory.\nlet HMAccessoryCategoryTypeShowerHead: String\nA shower head accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeBridge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypebridge",
    "html": "See Also\nNetwork\nlet HMAccessoryCategoryTypeRangeExtender: String\nA range extender accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeShowerHead | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeshowerhead",
    "html": "See Also\nWater\nlet HMAccessoryCategoryTypeSprinkler: String\nA sprinkler system accessory.\nlet HMAccessoryCategoryTypeFaucet: String\nA faucet accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeRangeExtender | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytyperangeextender",
    "html": "See Also\nNetwork\nlet HMAccessoryCategoryTypeBridge: String\nA bridge accessory."
  },
  {
    "title": "HMAccessoryOwnershipToken | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessoryownershiptoken",
    "html": "Overview\n\nIf you manufacture an accessory that requires user authentication to add the accessory to a home, manage the authentication in your app and produce a token that represents the successful outcome of that process. Wrap the token data in an HMAccessoryOwnershipToken instance and call the init(url:ownershipToken:) method to create an authenticated HMAccessorySetupPayload instance. Then call the addAndSetupAccessories(with:completionHandler:) method with the payload.\n\nIf the user attempts from the Home app to add an accessory that requires a token, the Home app calls the associated app’s homeManager(_:didReceiveAddAccessoryRequest:) home manager delegate method to perform the negotiation and provide the token.\n\nTopics\nCreating a Token\ninit?(data: Data)\nCreates an ownership token from data.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nCreating a Payload\ninit?(url: URL?)\nCreates an accessory setup payload.\ninit?(url: URL, ownershipToken: HMAccessoryOwnershipToken?)\nCreates an accessory setup payload instance that includes an ownership token."
  },
  {
    "title": "HMAccessoryCategoryTypeAirHeater | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeairheater",
    "html": "See Also\nTemperature and humidity\nlet HMAccessoryCategoryTypeThermostat: String\nA thermostat accessory.\nlet HMAccessoryCategoryTypeAirConditioner: String\nAn air conditioner accessory.\nlet HMAccessoryCategoryTypeAirDehumidifier: String\nA dehumidifier accessory.\nlet HMAccessoryCategoryTypeAirHumidifier: String\nA humidifier accessory."
  },
  {
    "title": "HMAccessoryCategoryTypeAirHumidifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypeairhumidifier",
    "html": "See Also\nTemperature and humidity\nlet HMAccessoryCategoryTypeThermostat: String\nA thermostat accessory.\nlet HMAccessoryCategoryTypeAirConditioner: String\nAn air conditioner accessory.\nlet HMAccessoryCategoryTypeAirDehumidifier: String\nA dehumidifier accessory.\nlet HMAccessoryCategoryTypeAirHeater: String\nAn air heater accessory."
  },
  {
    "title": "HMError.Code.notAuthorizedForLocationServices | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/notauthorizedforlocationservices",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "HMError.Code.securityFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/securityfailure",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match."
  },
  {
    "title": "HMError.Code.valueLowerThanMinimum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/valuelowerthanminimum",
    "html": "See Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value."
  },
  {
    "title": "init(source:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/cameraview/3594013-init",
    "html": "Parameters\nsource\n\nThe source of a video stream or an image snapshot that a camera view renders.\n\nSee Also\nCreating a camera view\nclass HMCameraSource\nAn abstract class for a camera’s data source."
  },
  {
    "title": "HMError.Code.cloudDataSyncInProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/clouddatasyncinprogress",
    "html": "See Also\nSynchronization errors\ncase keychainSyncNotEnabled\nAn error indicating Keychain syncing is not enabled for the user."
  },
  {
    "title": "HMCameraSource | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasource",
    "html": "Topics\nGetting the properties\nvar aspectRatio: Double\nThe aspect ratio of the camera.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nGetting the Camera Source\nvar cameraSource: HMCameraSource?"
  },
  {
    "title": "HMCameraSettingsControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasettingscontrol",
    "html": "Topics\nControlling camera characteristics\nvar currentHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current horizontal tilt setting.\nvar targetHorizontalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's horizontal tilt setting.\nvar currentVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to the camera's current vertical tilt setting.\nvar targetVerticalTilt: HMCharacteristic?\nCharacteristic corresponding to adjusting the camera's vertical tilt setting.\nvar opticalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's optical zoom setting.\nvar digitalZoom: HMCharacteristic?\nCharacteristic corresponding to the camera's digital zoom setting.\nvar imageMirroring: HMCharacteristic?\nCharacteristic corresponding to the camera's image mirroring setting.\nvar imageRotation: HMCharacteristic?\nCharacteristic corresponding to the camera's image rotation setting.\nvar nightVision: HMCharacteristic?\nCharacteristic corresponding to the camera's night vision setting.\nRelationships\nInherits From\nHMCameraControl\nConforms To\nSendable\nSee Also\nControlling camera settings\nvar settingsControl: HMCameraSettingsControl?\nControls the settings on the camera.\nclass HMCameraControl\nAn abstract class that represents a camera control."
  },
  {
    "title": "settingsControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraprofile/1649313-settingscontrol",
    "html": "See Also\nControlling camera settings\nclass HMCameraSettingsControl\nAn object that represents the ability to control a camera's settings.\nclass HMCameraControl\nAn abstract class that represents a camera control."
  },
  {
    "title": "HMCameraStreamControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerastreamcontrol",
    "html": "Topics\nControlling the stream\nfunc startStream()\nStarts the camera stream.\nfunc stopStream()\nStops the camera stream.\nvar cameraStream: HMCameraStream?\nThe current camera stream.\nclass HMCameraStream\nAn object that represents a camera's audiovisual stream.\nvar streamState: HMCameraStreamState\nThe current state of the camera stream.\nenum HMCameraStreamState\nThe states associated with a camera stream.\nObserving stream activity\nvar delegate: HMCameraStreamControlDelegate?\nDelegate that receives updates as the camera stream changes.\nprotocol HMCameraStreamControlDelegate\nA protocol that gives the delegate updates on the camera stream.\nRelationships\nInherits From\nHMCameraControl\nConforms To\nSendable\nSee Also\nStreaming\nvar streamControl: HMCameraStreamControl?\nControls the camera stream."
  },
  {
    "title": "snapshotControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraprofile/1833282-snapshotcontrol",
    "html": "See Also\nCapturing snapshots\nclass HMCameraSnapshotControl\nAn object that can take an image snapshot from a camera."
  },
  {
    "title": "HMError.Code.noActionsInActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/noactionsinactionset",
    "html": "See Also\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMError.Code.objectAlreadyAssociatedToHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/objectalreadyassociatedtohome",
    "html": "See Also\nAssociation errors\ncase invalidAssociatedServiceType\nAn error indicating an invalid service type.\ncase objectAssociatedToAnotherHome\nAn attempt to associate an object with a home when it’s already associated with another home.\ncase objectNotAssociatedToAnyHome\nAn attempt to perform an operation on an object that is not associated to any home."
  },
  {
    "title": "HMError.Code.objectAssociatedToAnotherHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/objectassociatedtoanotherhome",
    "html": "See Also\nAssociation errors\ncase invalidAssociatedServiceType\nAn error indicating an invalid service type.\ncase objectAlreadyAssociatedToHome\nAn attempt to associate an object with a home when it’s already associated with that home.\ncase objectNotAssociatedToAnyHome\nAn attempt to perform an operation on an object that is not associated to any home."
  },
  {
    "title": "HMError.Code.invalidAssociatedServiceType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invalidassociatedservicetype",
    "html": "See Also\nAssociation errors\ncase objectAlreadyAssociatedToHome\nAn attempt to associate an object with a home when it’s already associated with that home.\ncase objectAssociatedToAnotherHome\nAn attempt to associate an object with a home when it’s already associated with another home.\ncase objectNotAssociatedToAnyHome\nAn attempt to perform an operation on an object that is not associated to any home."
  },
  {
    "title": "HMError.Code.accessoryIsBlocked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessoryisblocked",
    "html": "See Also\nAccessory errors\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.cannotRemoveBuiltinActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/cannotremovebuiltinactionset",
    "html": "See Also\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMError.Code.noRegisteredActionSets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/noregisteredactionsets",
    "html": "See Also\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions."
  },
  {
    "title": "HMCameraSnapshotControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcamerasnapshotcontrol",
    "html": "Topics\nTaking snapshots\nfunc takeSnapshot()\nTakes an image snapshot.\nvar mostRecentSnapshot: HMCameraSnapshot?\nThe camera's most recent snapshot.\nclass HMCameraSnapshot\nAn object that represents a snapshot taken from a camera.\nObserving snapshot activity\nvar delegate: HMCameraSnapshotControlDelegate?\nDelegate that receives updates as the camera takes snapshots.\nprotocol HMCameraSnapshotControlDelegate\nA set of methods used to observe the camera's snapshot activity.\nRelationships\nInherits From\nHMCameraControl\nConforms To\nSendable\nSee Also\nCapturing snapshots\nvar snapshotControl: HMCameraSnapshotControl?\nControls the camera's snapshot function."
  },
  {
    "title": "removeService(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup/1616994-removeservice",
    "html": "Parameters\nservice\n\nThe service to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeService(_ service: HMService) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging Service Groups\nvar name: String\nThe name of the service group.\nvar uniqueIdentifier: UUID\nThe unique identifier for the service group.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service group.\nvar services: [HMService]\nArray of the services in the service group.\nfunc addService(HMService, completionHandler: (Error?) -> Void)\nAdds a new service to the service group."
  },
  {
    "title": "services | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessoryprofile/1649075-services",
    "html": "See Also\nGetting information about a profile\nvar accessory: HMAccessory?\nThe accessory that implements this profile.\nvar uniqueIdentifier: UUID\nA unique identifier for the profile."
  },
  {
    "title": "HMError.Code.homeAccessNotAuthorized | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/homeaccessnotauthorized",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "HMError.Code.notSignedIntoiCloud | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/notsignedintoicloud",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "isNetworkAccessRestricted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnetworkconfigurationprofile/3333268-isnetworkaccessrestricted",
    "html": "Discussion\n\nWhen the value is true, the accessory experiences restricted network access. When the value is false, the accessory’s access to the network isn’t restricted."
  },
  {
    "title": "HMError.Code.stringShorterThanMinimum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/stringshorterthanminimum",
    "html": "See Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.invalidValueType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invalidvaluetype",
    "html": "See Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.stringLongerThanMaximum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/stringlongerthanmaximum",
    "html": "See Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.nameDoesNotStartWithValidCharacters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/namedoesnotstartwithvalidcharacters",
    "html": "Discussion\n\nNames must start with a letter, symbol, or number.\n\nSee Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.nameDoesNotEndWithValidCharacters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/namedoesnotendwithvalidcharacters",
    "html": "See Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.invalidDataFormatSpecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invaliddataformatspecified",
    "html": "See Also\nValue errors\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.userManagementFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/usermanagementfailed",
    "html": "See Also\nUser errors\ncase userDeclinedAddingUser\nAn error indicating the user canceled the add user operation.\ncase userDeclinedRemovingUser\nAn error indicating the user canceled the remove user operation.\ncase userDeclinedInvite\nAn error indicating the user declined the invitation.\ncase userIDNotEmailAddress\nAn error indicating the user’s ID is not a valid email address."
  },
  {
    "title": "HMError.Code.userDeclinedInvite | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/userdeclinedinvite",
    "html": "See Also\nUser errors\ncase userDeclinedAddingUser\nAn error indicating the user canceled the add user operation.\ncase userDeclinedRemovingUser\nAn error indicating the user canceled the remove user operation.\ncase userIDNotEmailAddress\nAn error indicating the user’s ID is not a valid email address.\ncase userManagementFailed\nA user management error not covered by the other errors."
  },
  {
    "title": "HMError.Code.userIDNotEmailAddress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/useridnotemailaddress",
    "html": "See Also\nUser errors\ncase userDeclinedAddingUser\nAn error indicating the user canceled the add user operation.\ncase userDeclinedRemovingUser\nAn error indicating the user canceled the remove user operation.\ncase userDeclinedInvite\nAn error indicating the user declined the invitation.\ncase userManagementFailed\nA user management error not covered by the other errors."
  },
  {
    "title": "HMError.Code.keychainSyncNotEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/keychainsyncnotenabled",
    "html": "See Also\nSynchronization errors\ncase cloudDataSyncInProgress\nAn error indicating a data synchronization operation is in progress."
  },
  {
    "title": "HMError.Code.readWritePartialSuccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/readwritepartialsuccess",
    "html": "See Also\nRead and write errors\ncase readWriteFailure\nAn error indicating a failed read/write operation."
  },
  {
    "title": "HMError.Code.readWriteFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/readwritefailure",
    "html": "See Also\nRead and write errors\ncase readWritePartialSuccess\nAn error indicating a partially successful read/write operation."
  },
  {
    "title": "HMError.Code.missingParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/missingparameter",
    "html": "See Also\nParameter errors\ncase invalidParameter\nAn error indicating the object is invalid for the given operation.\ncase nilParameter\nAn error indicating that nil was passed for an operation that does not accept nil.\ncase unconfiguredParameter\nAn error indicating an unconfigured parameter."
  },
  {
    "title": "HMError.Code.nilParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/nilparameter",
    "html": "See Also\nParameter errors\ncase invalidParameter\nAn error indicating the object is invalid for the given operation.\ncase missingParameter\nAn error indicating a missing parameter.\ncase unconfiguredParameter\nAn error indicating an unconfigured parameter."
  },
  {
    "title": "HMError.Code.communicationFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/communicationfailure",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.invalidParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invalidparameter",
    "html": "Discussion\n\nFor example, the home object issues an error when attempting to add a room that exists in another home.\n\nSee Also\nParameter errors\ncase missingParameter\nAn error indicating a missing parameter.\ncase nilParameter\nAn error indicating that nil was passed for an operation that does not accept nil.\ncase unconfiguredParameter\nAn error indicating an unconfigured parameter."
  },
  {
    "title": "HMError.Code.referToUserManual | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/refertousermanual",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available."
  },
  {
    "title": "HMCameraAudioControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraaudiocontrol",
    "html": "Topics\nControlling audio characteristics\nvar mute: HMCharacteristic?\nvar volume: HMCharacteristic?\nRelationships\nInherits From\nHMCameraControl\nConforms To\nSendable\nSee Also\nPlaying audio\nvar microphoneControl: HMCameraAudioControl?\nControls the microphone settings on the camera.\nvar speakerControl: HMCameraAudioControl?\nControls the speaker settings on the camera."
  },
  {
    "title": "streamControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraprofile/1649314-streamcontrol",
    "html": "See Also\nStreaming\nclass HMCameraStreamControl\nAn object that can start and stop the camera stream and contains the view into which the stream is rendered."
  },
  {
    "title": "HMCameraControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameracontrol",
    "html": "Relationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nControlling camera settings\nvar settingsControl: HMCameraSettingsControl?\nControls the settings on the camera.\nclass HMCameraSettingsControl\nAn object that represents the ability to control a camera's settings."
  },
  {
    "title": "speakerControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraprofile/1649318-speakercontrol",
    "html": "See Also\nPlaying audio\nvar microphoneControl: HMCameraAudioControl?\nControls the microphone settings on the camera.\nclass HMCameraAudioControl\nAn object that controls a camera's audio settings."
  },
  {
    "title": "microphoneControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraprofile/1649316-microphonecontrol",
    "html": "See Also\nPlaying audio\nvar speakerControl: HMCameraAudioControl?\nControls the speaker settings on the camera.\nclass HMCameraAudioControl\nAn object that controls a camera's audio settings."
  },
  {
    "title": "HMError.Code.accessoryOutOfResources | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessoryoutofresources",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMCharacteristicTypeStatusJammed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypestatusjammed",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueJammedStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueJammedStatus\nPossible values for the jammed status.\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMError.Code.accessoryIsSuspended | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessoryissuspended",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.accessoryNotReachable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessorynotreachable",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.accessoryIsBusy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessoryisbusy",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.homeWithSimilarNameExists | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/homewithsimilarnameexists",
    "html": "See Also\nCollision errors\ncase objectWithSimilarNameExists\nAn object with a similar name already exists.\ncase objectWithSimilarNameExistsInHome\nAn attempt to give the name of one object to another object in the home.\ncase renameWithSimilarName\nAn attempt to rename an object with its current name."
  },
  {
    "title": "HMError.Code.bridgedAccessoryNotReachable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/bridgedaccessorynotreachable",
    "html": "See Also\nBridge errors\ncase cannotRemoveNonBridgeAccessory\nAn attempt to remove a bridged accessory.\ncase cannotUnblockNonBridgeAccessory\nAn error indicating a non-bridge accessory cannot be unblocked."
  },
  {
    "title": "HMError.Code.notAuthorizedForMicrophoneAccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/notauthorizedformicrophoneaccess",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "HMError.Code.invalidOrMissingAuthorizationData | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invalidormissingauthorizationdata",
    "html": "See Also\nAuthorization errors\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "HMError.Code.locationForHomeDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/locationforhomedisabled",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "HMError.Code.messageAuthenticationFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/messageauthenticationfailed",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "HMError.Code.ownershipFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/ownershipfailure",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase securityFailure\nA security failure."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup/1616996-name",
    "html": "Discussion\n\nService group names must be unique within a home.\n\nSee Also\nManaging Service Groups\nvar uniqueIdentifier: UUID\nThe unique identifier for the service group.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service group.\nvar services: [HMService]\nArray of the services in the service group.\nfunc addService(HMService, completionHandler: (Error?) -> Void)\nAdds a new service to the service group.\nfunc removeService(HMService, completionHandler: (Error?) -> Void)\nRemoves a service from the service group.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup/1616991-uniqueidentifier",
    "html": "See Also\nManaging Service Groups\nvar name: String\nThe name of the service group.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service group.\nvar services: [HMService]\nArray of the services in the service group.\nfunc addService(HMService, completionHandler: (Error?) -> Void)\nAdds a new service to the service group.\nfunc removeService(HMService, completionHandler: (Error?) -> Void)\nRemoves a service from the service group."
  },
  {
    "title": "addService(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup/1616997-addservice",
    "html": "Parameters\nservice\n\nThe service to add.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addService(_ service: HMService) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nA service can be added to multiple service groups. For example, a light could be added to the “Desk Lamps” service group as well as the “Dimmable Lights” service group.\n\nSee Also\nManaging Service Groups\nvar name: String\nThe name of the service group.\nvar uniqueIdentifier: UUID\nThe unique identifier for the service group.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service group.\nvar services: [HMService]\nArray of the services in the service group.\nfunc removeService(HMService, completionHandler: (Error?) -> Void)\nRemoves a service from the service group."
  },
  {
    "title": "discoveredAccessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowser/1622406-discoveredaccessories",
    "html": "Discussion\n\nWhen you start a new search by calling the startSearchingForNewAccessories() method, HomeKit clears the discoveredAccessories array. It then modifies the array as it discovers new accessories until you end the search by calling the stopSearchingForNewAccessories() method.\n\nSee Also\nDiscovering accessories\nfunc startSearchingForNewAccessories()\nStarts searching for accessories not yet associated with a home.\nfunc stopSearchingForNewAccessories()\nStops searching for new accessories."
  },
  {
    "title": "HMMutableCalendarEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecalendarevent",
    "html": "Topics\nConfiguring the calendar event\nvar fireDateComponents: DateComponents\nThe date components that specify when the event is triggered.\nRelationships\nInherits From\nHMCalendarEvent\nConforms To\nSendable\nSee Also\nDates and times\nclass HMCalendarEvent\nAn event that fires at a specified time.\nclass HMTimeEvent\nAn abstract superclass for time-based events."
  },
  {
    "title": "HMCharacteristicTypeFilterLifeLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypefilterlifelevel",
    "html": "Discussion\n\nThe corresponding value is the percentage of remaining life.\n\nSee Also\nPurifiers and filters\nlet HMCharacteristicTypeCurrentAirPurifierState: String\nThe current air purifier state.\nlet HMCharacteristicTypeTargetAirPurifierState: String\nThe target air purifier state.\nlet HMCharacteristicTypeFilterChangeIndication: String\nA filter’s change indicator.\nlet HMCharacteristicTypeFilterResetChangeIndication: String\nA reset control for a filter change notification."
  },
  {
    "title": "HMError.Code.invalidClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invalidclass",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMError.Code.genericError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/genericerror",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMError.Code.notificationAlreadyEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/notificationalreadyenabled",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnetworkconfigurationprofile/3333267-delegate",
    "html": "See Also\nListening for access changes\nprotocol HMNetworkConfigurationProfileDelegate\nAn interface that your app adopts to receive notifications about changes in the state of network access."
  },
  {
    "title": "HMCalendarEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcalendarevent",
    "html": "Topics\nCreating a calendar event\ninit(fire: DateComponents)\nCreates a calendar event which fires based on the value of the supplied date components.\nInspecting the calendar event\nvar fireDateComponents: DateComponents\nThe date components that specify when the event is triggered.\nRelationships\nInherits From\nHMTimeEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nDates and times\nclass HMMutableCalendarEvent\nA mutable event that fires at a specified time.\nclass HMTimeEvent\nAn abstract superclass for time-based events."
  },
  {
    "title": "HMNetworkConfigurationProfileDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnetworkconfigurationprofiledelegate",
    "html": "Topics\nObserving network access changes\nfunc profileDidUpdateNetworkAccessMode(HMNetworkConfigurationProfile)\nTells the delegate that the network access mode has changed.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nListening for access changes\nvar delegate: HMNetworkConfigurationProfileDelegate?\nA delegate that HomeKit tells about changes in the state of network access."
  },
  {
    "title": "accessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessoryprofile/1649077-accessory",
    "html": "See Also\nGetting information about a profile\nvar services: [HMService]\nAn array of services that represents this profile.\nvar uniqueIdentifier: UUID\nA unique identifier for the profile."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessoryprofile/1649076-uniqueidentifier",
    "html": "See Also\nGetting information about a profile\nvar accessory: HMAccessory?\nThe accessory that implements this profile.\nvar services: [HMService]\nAn array of services that represents this profile."
  },
  {
    "title": "stopSearchingForNewAccessories() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowser/1622408-stopsearchingfornewaccessories",
    "html": "Discussion\n\nAfter you call this method, HomeKit stops sending updates to your browser delegate. Scanning may continue for system reasons or if other delegates are still active, but the discoveredAccessories array remains unchanged after you stop the search until your app calls the startSearchingForNewAccessories() method again.\n\nSee Also\nDiscovering accessories\nvar discoveredAccessories: [HMAccessory]\nAn array of accessories discovered during a search.\nfunc startSearchingForNewAccessories()\nStarts searching for accessories not yet associated with a home."
  },
  {
    "title": "HMAccessoryBrowserDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowserdelegate",
    "html": "Overview\n\nImportant\n\nTo enable a consistent user experience across HomeKit enabled apps, use either the addAndSetupAccessories(completionHandler:) or the addAndSetupAccessories(with:completionHandler:) method of the HMHome class instead of an accessory browser. These calls manage all the details of the accessory search process for you.\n\nTopics\nTracking new accessories\nfunc accessoryBrowser(HMAccessoryBrowser, didFindNewAccessory: HMAccessory)\nTells the delegate that a new accessory has been discovered.\nfunc accessoryBrowser(HMAccessoryBrowser, didRemoveNewAccessory: HMAccessory)\nTells the delegate that a new accessory is no longer available in the browser.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nTracking the addition or removal of accessories\nvar delegate: HMAccessoryBrowserDelegate?\nA delegate that receives updates on the discovered accessories."
  },
  {
    "title": "startSearchingForNewAccessories() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowser/1622405-startsearchingfornewaccessories",
    "html": "Discussion\n\nHomeKit notifies your accessory browser delegate by calling the accessoryBrowser(_:didFindNewAccessory:) and accessoryBrowser(_:didRemoveNewAccessory:) methods when it detects accessories being added or removed, respectively.\n\nWhen you start a search, HomeKit clears the discoveredAccessories array of content from the previous search.\n\nSee Also\nDiscovering accessories\nvar discoveredAccessories: [HMAccessory]\nAn array of accessories discovered during a search.\nfunc stopSearchingForNewAccessories()\nStops searching for new accessories."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowser/1622404-delegate",
    "html": "See Also\nTracking the addition or removal of accessories\nprotocol HMAccessoryBrowserDelegate\nAn interface used to notify an accessory browser delegate of new accessories."
  },
  {
    "title": "HMError.Code.dataResetFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/dataresetfailure",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.timedOutWaitingForAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/timedoutwaitingforaccessory",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed."
  },
  {
    "title": "HMError.Code.alreadyExists | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/alreadyexists",
    "html": "See Also\nGeneral errors\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "HMError.Code.deviceLocked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/devicelocked",
    "html": "See Also\nDevice and discovery errors\ncase accessoryDiscoveryFailed\nAn error indicating accessory discovery failed."
  },
  {
    "title": "HMError.Code.valueHigherThanMaximum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/valuehigherthanmaximum",
    "html": "See Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.userDeclinedAddingUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/userdeclinedaddinguser",
    "html": "See Also\nUser errors\ncase userDeclinedRemovingUser\nAn error indicating the user canceled the remove user operation.\ncase userDeclinedInvite\nAn error indicating the user declined the invitation.\ncase userIDNotEmailAddress\nAn error indicating the user’s ID is not a valid email address.\ncase userManagementFailed\nA user management error not covered by the other errors."
  },
  {
    "title": "HMError.Code.userDeclinedRemovingUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/userdeclinedremovinguser",
    "html": "See Also\nUser errors\ncase userDeclinedAddingUser\nAn error indicating the user canceled the add user operation.\ncase userDeclinedInvite\nAn error indicating the user declined the invitation.\ncase userIDNotEmailAddress\nAn error indicating the user’s ID is not a valid email address.\ncase userManagementFailed\nA user management error not covered by the other errors."
  },
  {
    "title": "HMError.Code.nameContainsProhibitedCharacters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/namecontainsprohibitedcharacters",
    "html": "Discussion\n\nOnly letters, symbols, numbers, spaces, and apostrophes are permitted in names.\n\nSee Also\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "HMError.Code.unconfiguredParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/unconfiguredparameter",
    "html": "See Also\nParameter errors\ncase invalidParameter\nAn error indicating the object is invalid for the given operation.\ncase missingParameter\nAn error indicating a missing parameter.\ncase nilParameter\nAn error indicating that nil was passed for an operation that does not accept nil."
  },
  {
    "title": "HMError.Code.operationTimedOut | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/operationtimedout",
    "html": "See Also\nOperation errors\ncase operationCancelled\nAn error indicating the user canceled the operation.\ncase operationInProgress\nAn error indicating the operation is already in progress."
  },
  {
    "title": "HMError.Code.clientRequestError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/clientrequesterror",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.accessDenied | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessdenied",
    "html": "See Also\nCommunication errors\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.accessoryPairingFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessorypairingfailed",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.accessorySentInvalidResponse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessorysentinvalidresponse",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.renameWithSimilarName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/renamewithsimilarname",
    "html": "See Also\nCollision errors\ncase homeWithSimilarNameExists\nAn attempt to assign a home the same name as an existing home.\ncase objectWithSimilarNameExists\nAn object with a similar name already exists.\ncase objectWithSimilarNameExistsInHome\nAn attempt to give the name of one object to another object in the home."
  },
  {
    "title": "HMError.Code.accessoryCommunicationFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessorycommunicationfailure",
    "html": "See Also\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code.objectWithSimilarNameExistsInHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/objectwithsimilarnameexistsinhome",
    "html": "See Also\nCollision errors\ncase homeWithSimilarNameExists\nAn attempt to assign a home the same name as an existing home.\ncase objectWithSimilarNameExists\nAn object with a similar name already exists.\ncase renameWithSimilarName\nAn attempt to rename an object with its current name."
  },
  {
    "title": "HMCharacteristicTypeVolume | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypevolume",
    "html": "Discussion\n\nThe corresponding value represents the percentage of the maximum volume supported by the service.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMError.Code.objectWithSimilarNameExists | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/objectwithsimilarnameexists",
    "html": "See Also\nCollision errors\ncase homeWithSimilarNameExists\nAn attempt to assign a home the same name as an existing home.\ncase objectWithSimilarNameExistsInHome\nAn attempt to give the name of one object to another object in the home.\ncase renameWithSimilarName\nAn attempt to rename an object with its current name."
  },
  {
    "title": "HMCharacteristicTypeStreamingStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypestreamingstatus",
    "html": "Discussion\n\nThe corresponding value is TLV8-encoded data.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeFirmwareVersion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypefirmwareversion",
    "html": "Deprecated\n\nUse the accessory’s firmwareVersion property instead.\n\nDiscussion\n\nThe corresponding value is a string.\n\nSee Also\nDeprecated characteristic types\nlet HMCharacteristicTypeManufacturer: String\nThe manufacturer of the accessory.\nDeprecated\nlet HMCharacteristicTypeModel: String\nThe model of the accessory.\nDeprecated\nlet HMCharacteristicTypeSerialNumber: String\nThe serial number of the accessory.\nDeprecated"
  },
  {
    "title": "HMCharacteristicTypeNightVision | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypenightvision",
    "html": "Discussion\n\nThe corresponding value is a Boolean. Set the value to true to enable night vision. Set it to false to disable night vision.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeHoldPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeholdposition",
    "html": "Discussion\n\nThe corresponding value is a write-only Boolean. Write a value of true to indicate that the current position should be maintained. The accessory ignores a written value of false. Write a value to the HMCharacteristicTypeTargetPosition characteristic to release the hold.\n\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicValueTargetDoorState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetdoorstate",
    "html": "Topics\nDoor States\ncase closed\nA closed door.\ncase open\nAn open door.\nRelationships\nConforms To\nSendable\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan."
  },
  {
    "title": "HMCharacteristicTypeTargetTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargettilt",
    "html": "Discussion\n\nThe corresponding value represents the angle in degrees, with a value between -90 and 90.\n\nFor horizontal slats, a value of -90 indicates the slats should be fully closed and rotated such that the user-facing edge is higher than the opposing edge. For vertical slats, this value indicates that the user-facing edge should be to the left of the opposing edge. In either case, a value of 0 indicates that the edges should be aligned, with the slats fully open.\n\nSee Also\nTilting mechanisms\nlet HMCharacteristicTypeCurrentHorizontalTilt: String\nThe current tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetHorizontalTilt: String\nThe target tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentVerticalTilt: String\nThe current tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetVerticalTilt: String\nThe target tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentTilt: String\nThe current tilt angle of a slat for an accessory like a window or a fan."
  },
  {
    "title": "HMError.Code.unexpectedError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/unexpectederror",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMError.Code.cannotActivateTriggerTooFarInFuture | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/cannotactivatetriggertoofarinfuture",
    "html": "See Also\nLimit errors\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "HMError.Code.missingEntitlement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/missingentitlement",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMError.Code.fireDateInPast | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/firedateinpast",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "HMError.Code.recurrenceTooSmall | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/recurrencetoosmall",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "HMError.Code.recurrenceTooLarge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/recurrencetoolarge",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "HMError.Code.enterpriseNetworkNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/enterprisenetworknotsupported",
    "html": "See Also\nNetwork errors\ncase failedToJoinNetwork\nThe accessory failed to join the network.\ncase incompatibleNetwork\nAn error indicating an incompatible network.\ncase networkUnavailable\nAn error indicating the network is unavailable.\ncase wiFiCredentialGenerationFailed\nWiFi credential generation failed."
  },
  {
    "title": "HMError.Code.recurrenceMustBeOnSpecifiedBoundaries | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/recurrencemustbeonspecifiedboundaries",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short."
  },
  {
    "title": "HMError.Code.networkUnavailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/networkunavailable",
    "html": "See Also\nNetwork errors\ncase enterpriseNetworkNotSupported\nAn enterprise network doesn’t support this accessory.\ncase failedToJoinNetwork\nThe accessory failed to join the network.\ncase incompatibleNetwork\nAn error indicating an incompatible network.\ncase wiFiCredentialGenerationFailed\nWiFi credential generation failed."
  },
  {
    "title": "HMError.Code.noCompatibleHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/nocompatiblehomehub",
    "html": "See Also\nHub errors\ncase noHomeHub\nAn error indicating no home hub found."
  },
  {
    "title": "HMError.Code.invalidMessageSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/invalidmessagesize",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "HMCharacteristicTypeTargetTemperature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargettemperature",
    "html": "Discussion\n\nThe corresponding value is a floating point number in degrees Celsius.\n\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeCarbonDioxideDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecarbondioxidedetected",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCarbonDioxideDetectionStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCarbonDioxideDetectionStatus\nPossible values for the state of carbon dioxide level detection.\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmevent/1619881-uniqueidentifier",
    "html": "See Also\nGetting information about the event\nclass func isSupported(for: HMHome) -> Bool\nA Boolean value indicating whether the event can be added to an event trigger on the specified home."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone/1624765-name",
    "html": "See Also\nIdentifying a Zone\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the zone.\nvar uniqueIdentifier: UUID\nThe unique identifier for a zone.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "HMError.Code.cannotUnblockNonBridgeAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/cannotunblocknonbridgeaccessory",
    "html": "See Also\nBridge errors\ncase bridgedAccessoryNotReachable\nAn error indicating the bridged accessory cannot be reached.\ncase cannotRemoveNonBridgeAccessory\nAn attempt to remove a bridged accessory."
  },
  {
    "title": "HMError.Code.readOnlyCharacteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/readonlycharacteristic",
    "html": "See Also\nCharacteristic errors\ncase writeOnlyCharacteristic\nAn attempt to read from a write-only characteristic."
  },
  {
    "title": "HMError.Code.writeOnlyCharacteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/writeonlycharacteristic",
    "html": "See Also\nCharacteristic errors\ncase readOnlyCharacteristic\nAn attempt to modify a read-only value."
  },
  {
    "title": "HMError.Code.cannotRemoveNonBridgeAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/cannotremovenonbridgeaccessory",
    "html": "Discussion\n\nYou can only remove standalone or bridge accessories.\n\nSee Also\nBridge errors\ncase bridgedAccessoryNotReachable\nAn error indicating the bridged accessory cannot be reached.\ncase cannotUnblockNonBridgeAccessory\nAn error indicating a non-bridge accessory cannot be unblocked."
  },
  {
    "title": "HMError.Code.addAccessoryFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/addaccessoryfailed",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.accessoryOutOfCompliance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessoryoutofcompliance",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.incompatibleAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/incompatibleaccessory",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory."
  },
  {
    "title": "HMError.Code.accessoryPoweredOff | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessorypoweredoff",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.accessoryResponseError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessoryresponseerror",
    "html": "See Also\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible."
  },
  {
    "title": "HMError.Code.actionSetExecutionFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/actionsetexecutionfailed",
    "html": "See Also\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMError.Code.actionSetExecutionInProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/actionsetexecutioninprogress",
    "html": "See Also\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMError.Code.actionSetExecutionPartialSuccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/actionsetexecutionpartialsuccess",
    "html": "See Also\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMError.Code.actionInAnotherActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/actioninanotheractionset",
    "html": "See Also\nAction set errors\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMError.Code.objectNotAssociatedToAnyHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/objectnotassociatedtoanyhome",
    "html": "See Also\nAssociation errors\ncase invalidAssociatedServiceType\nAn error indicating an invalid service type.\ncase objectAlreadyAssociatedToHome\nAn attempt to associate an object with a home when it’s already associated with that home.\ncase objectAssociatedToAnotherHome\nAn attempt to associate an object with a home when it’s already associated with another home."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup/1616992-updatename",
    "html": "Parameters\nname\n\nThe new name; must not be nil.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging Service Groups\nvar name: String\nThe name of the service group.\nvar uniqueIdentifier: UUID\nThe unique identifier for the service group.\nvar services: [HMService]\nArray of the services in the service group.\nfunc addService(HMService, completionHandler: (Error?) -> Void)\nAdds a new service to the service group.\nfunc removeService(HMService, completionHandler: (Error?) -> Void)\nRemoves a service from the service group."
  },
  {
    "title": "services | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup/1616993-services",
    "html": "See Also\nManaging Service Groups\nvar name: String\nThe name of the service group.\nvar uniqueIdentifier: UUID\nThe unique identifier for the service group.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service group.\nfunc addService(HMService, completionHandler: (Error?) -> Void)\nAdds a new service to the service group.\nfunc removeService(HMService, completionHandler: (Error?) -> Void)\nRemoves a service from the service group."
  },
  {
    "title": "HMError.Code.accessoryDiscoveryFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/accessorydiscoveryfailed",
    "html": "See Also\nDevice and discovery errors\ncase deviceLocked\nAn error indicating the device is locked."
  },
  {
    "title": "HMError.Code.notFound | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/notfound",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMCharacteristicTypeRotationSpeed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictyperotationspeed",
    "html": "Discussion\n\nThe corresponding value is a floating point number representing the percentage of the maximum speed.\n\nSee Also\nFans\nlet HMCharacteristicTypeCurrentFanState: String\nThe current state of a fan.\nlet HMCharacteristicTypeTargetFanState: String\nThe target state of a fan.\nlet HMCharacteristicTypeRotationDirection: String\nThe rotation direction of an accessory like a fan.\nlet HMCharacteristicTypeSwingMode: String\nAn indicator of whether a fan swings back and forth during operation."
  },
  {
    "title": "HMError.Code.notificationNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/notificationnotsupported",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMCharacteristicTypeFilterResetChangeIndication | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypefilterresetchangeindication",
    "html": "Discussion\n\nThe corresponding value is a write-only Boolean value that your app sets to true to reset the filter change indicator.\n\nSee Also\nPurifiers and filters\nlet HMCharacteristicTypeCurrentAirPurifierState: String\nThe current air purifier state.\nlet HMCharacteristicTypeTargetAirPurifierState: String\nThe target air purifier state.\nlet HMCharacteristicTypeFilterLifeLevel: String\nThe amount of useful life remaining in a filter.\nlet HMCharacteristicTypeFilterChangeIndication: String\nA filter’s change indicator."
  },
  {
    "title": "HMError.Code.operationNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/operationnotsupported",
    "html": "See Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "HMTimeEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimeevent",
    "html": "Relationships\nInherits From\nHMEvent\nConforms To\nSendable\nSee Also\nDates and times\nclass HMCalendarEvent\nAn event that fires at a specified time.\nclass HMMutableCalendarEvent\nA mutable event that fires at a specified time."
  },
  {
    "title": "HMSignificantEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificantevent",
    "html": "Topics\nSignificant event properties\nstatic let sunrise: HMSignificantEvent\nAn event that fires at sunrise.\nstatic let sunset: HMSignificantEvent\nAn event that fires at sunset.\nCreating a significant event\ninit(String)\ninit(rawValue: String)\nRelationships\nConforms To\nHashable\nRawRepresentable\nSendable\nSee Also\nSignificant events\nclass HMSignificantTimeEvent\nAn event that fires at a time offset from a significant time-based event.\nclass HMMutableSignificantTimeEvent\nA mutable event that fires at the specified temporal offset to a significant event."
  },
  {
    "title": "HMMutableDurationEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutabledurationevent",
    "html": "Topics\nConfiguring a duration event\nvar duration: TimeInterval\nThe event's duration, in seconds.\nRelationships\nInherits From\nHMDurationEvent\nConforms To\nSendable\nSee Also\nDurations\nclass HMDurationEvent\nAn event that ends after the specified time duration."
  },
  {
    "title": "rooms | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone/1624763-rooms",
    "html": "See Also\nAssigning Rooms to a Zone\nfunc addRoom(HMRoom, completionHandler: (Error?) -> Void)\nAdds a room to the zone.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the zone."
  },
  {
    "title": "removeRoom(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone/1624768-removeroom",
    "html": "Parameters\nroom\n\nThe room to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeRoom(_ room: HMRoom) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nAssigning Rooms to a Zone\nvar rooms: [HMRoom]\nArray of rooms in the zone.\nfunc addRoom(HMRoom, completionHandler: (Error?) -> Void)\nAdds a room to the zone."
  },
  {
    "title": "addRoom(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone/1624764-addroom",
    "html": "Parameters\nroom\n\nThe room to add; must be in the same home as the zone.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addRoom(_ room: HMRoom) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nAssigning Rooms to a Zone\nvar rooms: [HMRoom]\nArray of rooms in the zone.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the zone."
  },
  {
    "title": "HMCharacteristicTypeLogs | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelogs",
    "html": "Discussion\n\nThe corresponding value is TLV8-encoded data.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMMutableSignificantTimeEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablesignificanttimeevent",
    "html": "Topics\nConfiguring a significant time event\nvar significantEvent: HMSignificantEvent\nThe significant time-based event that is used to calculate when the event fires.\nvar offset: DateComponents\nThe offset from the significant event that this event fires at.\nRelationships\nInherits From\nHMSignificantTimeEvent\nConforms To\nSendable\nSee Also\nSignificant events\nstruct HMSignificantEvent\nAn event that represents significant time-based events, including sunrise and sunset.\nclass HMSignificantTimeEvent\nAn event that fires at a time offset from a significant time-based event."
  },
  {
    "title": "HMCharacteristicTypeSerialNumber | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeserialnumber",
    "html": "Discussion\n\nThe corresponding value is a string.\n\nSee Also\nDeprecated characteristic types\nlet HMCharacteristicTypeManufacturer: String\nThe manufacturer of the accessory.\nDeprecated\nlet HMCharacteristicTypeModel: String\nThe model of the accessory.\nDeprecated\nlet HMCharacteristicTypeFirmwareVersion: String\nThe firmware version of the accessory.\nDeprecated"
  },
  {
    "title": "HMCharacteristicTypeLabelNamespace | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelabelnamespace",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueLabelNamespace enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueLabelNamespace\nPossible values for the label namespace.\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service."
  },
  {
    "title": "HMCharacteristicTypeHardwareVersion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypehardwareversion",
    "html": "Discussion\n\nThe corresponding value is a string.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeAdminOnlyAccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeadminonlyaccess",
    "html": "Discussion\n\nThe corresponding value is a Boolean that’s true if the accessory accepts only administrator access.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeIdentify | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeidentify",
    "html": "Discussion\n\nUse the corresponding write-only Boolean value to ask the accessory to identify itself in the physical world. The identification mechanism, if supported, is specific to the accessory. For example, a light bulb might change state briefly, flashing on or off, to indicate that it has received this command.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeProgramMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeprogrammode",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueProgramMode enumeration.\n\nNote\n\nThis characteristic type doesn’t add, modify, or delete the schedule itself. The user must set or modify the schedule through the accessory’s user interface, or using an app designed to communicate directly with the accessory (for example, using an API provided by the accessory’s manufacturer).\n\nTopics\nValues\nenum HMCharacteristicValueProgramMode\nPossible values for scheduled programs.\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory."
  },
  {
    "title": "HMCharacteristicTypeSetDuration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesetduration",
    "html": "Discussion\n\nThe corresponding value is an integer in units of seconds.\n\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeRemainingDuration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictyperemainingduration",
    "html": "Discussion\n\nThe corresponding value is an integer in units of seconds.\n\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeSlatType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeslattype",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueSlatType enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueSlatType\nPossible values for the type of slat on an accessory like a window or a fan.\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicTypePM10Density | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypepm10density",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeIsConfigured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeisconfigured",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueConfigurationState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueConfigurationState\nPossible values for the configuration state of an accessory.\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeInUse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeinuse",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueUsageState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueUsageState\nPossible values for the usage state of an accessory.\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeStatusTampered | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypestatustampered",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueTamperedStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueTamperedStatus\nPossible values for the tampering status of an accessory.\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeStatusActive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypestatusactive",
    "html": "Discussion\n\nThe corresponding value is a Boolean. A value of true indicates the service is working.\n\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeMute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypemute",
    "html": "Discussion\n\nThe corresponding Boolean is true when the audio is muted.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device."
  },
  {
    "title": "HMCharacteristicTypeAudioFeedback | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeaudiofeedback",
    "html": "Discussion\n\nThe corresponding Boolean value indicates whether audio feedback is enabled.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeActive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeactive",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueActivationState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueActivationState\nPossible values for the current status of an accessory.\nSee Also\nGeneral state\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMError.Code.roomForHomeCannotBeInZone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/roomforhomecannotbeinzone",
    "html": "See Also\nHome and room errors\ncase maximumAccessoriesOfTypeInHome\nThe home already has the maximum number of accessories of the given type.\ncase roomForHomeCannotBeUpdated\nAn attempt to change the room that represents the entire home."
  },
  {
    "title": "HMCharacteristicTypeSetupStreamEndpoint | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesetupstreamendpoint",
    "html": "Discussion\n\nThe corresponding value is TLV8-encoded data.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeSupportedAudioStreamConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesupportedaudiostreamconfiguration",
    "html": "Discussion\n\nThe corresponding value is TLV8-encoded data.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeImageMirroring | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeimagemirroring",
    "html": "Discussion\n\nThe corresponding value is a Boolean. Set the value to false to disable mirroring. Set the value to true to enable mirroring.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeSupportedVideoStreamConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesupportedvideostreamconfiguration",
    "html": "Discussion\n\nThe corresponding value is TLV8-encoded data.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeOpticalZoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeopticalzoom",
    "html": "Discussion\n\nThe corresponding value is a floating point number representing the optical zoom setting of the camera.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeImageRotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeimagerotation",
    "html": "Discussion\n\nThe corresponding value is a floating point number representing an angle in degrees that the image should be rotated. The only valid values are 0, 90, 180, and 270.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeTargetLockMechanismState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetlockmechanismstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueLockMechanismState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueLockMechanismState\nPossible values for the state of a lock mechanism.\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeLockManagementAutoSecureTimeout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelockmanagementautosecuretimeout",
    "html": "Discussion\n\nThe corresponding value is the number of seconds the accessory waits after entering the HMCharacteristicValueLockMechanismState.unsecured state until it attempts to enter the HMCharacteristicValueLockMechanismState.secured state. Write a value of 0 to disable this feature.\n\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeLockManagementControlPoint | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelockmanagementcontrolpoint",
    "html": "Discussion\n\nThe corresponding write-only value takes data in a format specified by the accessory’s manufacturer.\n\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeCurrentTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrenttilt",
    "html": "Discussion\n\nThe corresponding value represents the angle in degrees, with a value between -90 and 90.\n\nFor horizontal slats, a value of -90 indicates the slats are fully closed and rotated such that the user-facing edge is higher than the opposing edge. For vertical slats, this value indicates that the user-facing edge is to the left of the opposing edge. In either case, a value of 0 indicates that the edges are aligned, with the slats fully open.\n\nSee Also\nTilting mechanisms\nlet HMCharacteristicTypeCurrentHorizontalTilt: String\nThe current tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetHorizontalTilt: String\nThe target tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentVerticalTilt: String\nThe current tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetVerticalTilt: String\nThe target tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetTilt: String\nThe target tilt angle of a slat for an accessory like a window or a fan."
  },
  {
    "title": "HMCharacteristicTypeCurrentHorizontalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrenthorizontaltilt",
    "html": "Discussion\n\nThe corresponding value represents the angle in degrees, with a value between -90 and 90.\n\nA value of -90 indicates the slats are fully closed and rotated such that the user-facing edge is higher than the opposing edge. A value of 0 indicates that the edges are at the same level, with the slats fully open.\n\nSee Also\nTilting mechanisms\nlet HMCharacteristicTypeTargetHorizontalTilt: String\nThe target tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentVerticalTilt: String\nThe current tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetVerticalTilt: String\nThe target tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentTilt: String\nThe current tilt angle of a slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetTilt: String\nThe target tilt angle of a slat for an accessory like a window or a fan."
  },
  {
    "title": "HMCharacteristicTypeCurrentSlatState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentslatstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCurrentSlatState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCurrentSlatState\nPossible values for the current state of slats on an accessory like a window or a fan.\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicTypeTargetVerticalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetverticaltilt",
    "html": "Discussion\n\nThe corresponding value represents the angle in degrees, with a value between -90 and 90.\n\nA value of -90 indicates the slats should be fully closed and rotated such that the user-facing edge is to the left of the opposing edge. A value of 0 indicates that the edges should be aligned, with the slats fully open.\n\nSee Also\nTilting mechanisms\nlet HMCharacteristicTypeCurrentHorizontalTilt: String\nThe current tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetHorizontalTilt: String\nThe target tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentVerticalTilt: String\nThe current tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentTilt: String\nThe current tilt angle of a slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetTilt: String\nThe target tilt angle of a slat for an accessory like a window or a fan."
  },
  {
    "title": "HMCharacteristicTypeCurrentVerticalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentverticaltilt",
    "html": "Discussion\n\nThe corresponding value represents the angle in degrees, with a value between -90 and 90.\n\nA value of -90 indicates the slats are fully closed and rotated such that the user-facing edge is to the left of the opposing edge. A value of 0 indicates that the edges are aligned, with the slats fully open.\n\nSee Also\nTilting mechanisms\nlet HMCharacteristicTypeCurrentHorizontalTilt: String\nThe current tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetHorizontalTilt: String\nThe target tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetVerticalTilt: String\nThe target tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentTilt: String\nThe current tilt angle of a slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetTilt: String\nThe target tilt angle of a slat for an accessory like a window or a fan."
  },
  {
    "title": "HMCharacteristicTypePM2_5Density | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypepm2_5density",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMError.Code.maximumAccessoriesOfTypeInHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/maximumaccessoriesoftypeinhome",
    "html": "See Also\nHome and room errors\ncase roomForHomeCannotBeInZone\nAn attempt to add the room that represents the entire home to a zone.\ncase roomForHomeCannotBeUpdated\nAn attempt to change the room that represents the entire home."
  },
  {
    "title": "HMError.Code.roomForHomeCannotBeUpdated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/roomforhomecannotbeupdated",
    "html": "See Also\nHome and room errors\ncase maximumAccessoriesOfTypeInHome\nThe home already has the maximum number of accessories of the given type.\ncase roomForHomeCannotBeInZone\nAn attempt to add the room that represents the entire home to a zone."
  },
  {
    "title": "HMError.Code.noHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/nohomehub",
    "html": "See Also\nHub errors\ncase noCompatibleHomeHub\nAn error indicating no compatible home hub found."
  },
  {
    "title": "HMError.Code.maximumObjectLimitReached | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/maximumobjectlimitreached",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "HMError.Code.dateMustBeOnSpecifiedBoundaries | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/datemustbeonspecifiedboundaries",
    "html": "See Also\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "homeManager(_:didUpdate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate/3333265-homemanager",
    "html": "Parameters\nmanager\n\nThe home manager for which the status changed.\n\nstatus\n\nThe new authorization status. You can also read this value at any time from the manager’s authorizationStatus property."
  },
  {
    "title": "HMError.Code.failedToJoinNetwork | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/failedtojoinnetwork",
    "html": "See Also\nNetwork errors\ncase enterpriseNetworkNotSupported\nAn enterprise network doesn’t support this accessory.\ncase incompatibleNetwork\nAn error indicating an incompatible network.\ncase networkUnavailable\nAn error indicating the network is unavailable.\ncase wiFiCredentialGenerationFailed\nWiFi credential generation failed."
  },
  {
    "title": "HMError.Code.incompatibleNetwork | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/incompatiblenetwork",
    "html": "See Also\nNetwork errors\ncase enterpriseNetworkNotSupported\nAn enterprise network doesn’t support this accessory.\ncase failedToJoinNetwork\nThe accessory failed to join the network.\ncase networkUnavailable\nAn error indicating the network is unavailable.\ncase wiFiCredentialGenerationFailed\nWiFi credential generation failed."
  },
  {
    "title": "HMError.Code.wiFiCredentialGenerationFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/wificredentialgenerationfailed",
    "html": "See Also\nNetwork errors\ncase enterpriseNetworkNotSupported\nAn enterprise network doesn’t support this accessory.\ncase failedToJoinNetwork\nThe accessory failed to join the network.\ncase incompatibleNetwork\nAn error indicating an incompatible network.\ncase networkUnavailable\nAn error indicating the network is unavailable."
  },
  {
    "title": "HMError.Code.operationCancelled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/operationcancelled",
    "html": "See Also\nOperation errors\ncase operationInProgress\nAn error indicating the operation is already in progress.\ncase operationTimedOut\nAn error indicating the operation timed out."
  },
  {
    "title": "HMError.Code.operationInProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/operationinprogress",
    "html": "See Also\nOperation errors\ncase operationCancelled\nAn error indicating the user canceled the operation.\ncase operationTimedOut\nAn error indicating the operation timed out."
  },
  {
    "title": "HMCharacteristicTypeCarbonDioxidePeakLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecarbondioxidepeaklevel",
    "html": "Discussion\n\nThe corresponding value is a floating point number in units of parts per million.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeBrightness | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypebrightness",
    "html": "Discussion\n\nThe corresponding value is an integer representing a percentage of the maximum brightness.\n\nSee Also\nLight\nlet HMCharacteristicTypeCurrentLightLevel: String\nThe current light level.\nlet HMCharacteristicTypeHue: String\nThe hue of the color used by a light.\nlet HMCharacteristicTypeSaturation: String\nThe saturation of the color used by a light.\nlet HMCharacteristicTypeColorTemperature: String\nThe color temperature of a light."
  },
  {
    "title": "HMCharacteristicTypeBatteryLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypebatterylevel",
    "html": "Discussion\n\nThe corresponding value is an integer that’s the percentage of total battery capacity remaining.\n\nSee Also\nPower and switches\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone/1624767-updatename",
    "html": "Parameters\nname\n\nThe new name. Must not be nil; must be unique within the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nIdentifying a Zone\nvar name: String\nThe name of the zone.\nvar uniqueIdentifier: UUID\nThe unique identifier for a zone."
  },
  {
    "title": "HMCharacteristicValueCurrentHeatingCooling | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluecurrentheatingcooling",
    "html": "Topics\nTemperature States\ncase cool\nThe accessory state indicates cooling.\ncase heat\nThe accessory state indicates heating.\ncase off\nThe accessory indicates no heating or cooling.\nRelationships\nConforms To\nSendable\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active."
  },
  {
    "title": "HMDurationEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmdurationevent",
    "html": "Overview\n\nUse a duration event to specify that a different event should end after a period of time.\n\nTopics\nCreating a duration event\ninit(duration: TimeInterval)\nCreates a duration event with the specified time duration.\nInspecting a duration event\nvar duration: TimeInterval\nThe event's duration, in seconds.\nRelationships\nInherits From\nHMTimeEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nDurations\nclass HMMutableDurationEvent\nA mutable event that fires after the specified time duration."
  },
  {
    "title": "HMCharacteristicThresholdRangeEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicthresholdrangeevent",
    "html": "Topics\nCreating a characteristic threshold range event\ninit(characteristic: HMCharacteristic, thresholdRange: HMNumberRange)\nCreates a characteristic threshold range event for the specified characteristic and number range.\nInspecting a characteristic threshold event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event.\nvar thresholdRange: HMNumberRange\nThe range of the characteristic value that triggers the event.\nRelationships\nInherits From\nHMEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nCharacteristic ranges\nclass HMNumberRange\nA set of numbers used to specify conditions for characteristic range threshold events.\nclass HMMutableCharacteristicThresholdRangeEvent\nA mutable event that triggers when the value of a characteristic is within a specified range."
  },
  {
    "title": "HMCharacteristicTypeVolatileOrganicCompoundDensity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypevolatileorganiccompounddensity",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide."
  },
  {
    "title": "HMCharacteristicTypeSulphurDioxideDensity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesulphurdioxidedensity",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeRotationDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictyperotationdirection",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueRotationDirection enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueRotationDirection\nPossible values for the direction of rotation.\nSee Also\nFans\nlet HMCharacteristicTypeCurrentFanState: String\nThe current state of a fan.\nlet HMCharacteristicTypeTargetFanState: String\nThe target state of a fan.\nlet HMCharacteristicTypeRotationSpeed: String\nThe rotation speed of an accessory like a fan.\nlet HMCharacteristicTypeSwingMode: String\nAn indicator of whether a fan swings back and forth during operation."
  },
  {
    "title": "HMCharacteristicTypeFilterChangeIndication | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypefilterchangeindication",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueFilterChange enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueFilterChange\nPossible values for the filter change indication.\nSee Also\nPurifiers and filters\nlet HMCharacteristicTypeCurrentAirPurifierState: String\nThe current air purifier state.\nlet HMCharacteristicTypeTargetAirPurifierState: String\nThe target air purifier state.\nlet HMCharacteristicTypeFilterLifeLevel: String\nThe amount of useful life remaining in a filter.\nlet HMCharacteristicTypeFilterResetChangeIndication: String\nA reset control for a filter change notification."
  },
  {
    "title": "HMCharacteristicTypeTargetFanState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetfanstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueTargetFanState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueTargetFanState\nPossible values for the target fan state.\nSee Also\nFans\nlet HMCharacteristicTypeCurrentFanState: String\nThe current state of a fan.\nlet HMCharacteristicTypeRotationDirection: String\nThe rotation direction of an accessory like a fan.\nlet HMCharacteristicTypeRotationSpeed: String\nThe rotation speed of an accessory like a fan.\nlet HMCharacteristicTypeSwingMode: String\nAn indicator of whether a fan swings back and forth during operation."
  },
  {
    "title": "HMCharacteristicTypeCurrentFanState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentfanstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCurrentFanState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCurrentFanState\nPossible values for the current fan state.\nSee Also\nFans\nlet HMCharacteristicTypeTargetFanState: String\nThe target state of a fan.\nlet HMCharacteristicTypeRotationDirection: String\nThe rotation direction of an accessory like a fan.\nlet HMCharacteristicTypeRotationSpeed: String\nThe rotation speed of an accessory like a fan.\nlet HMCharacteristicTypeSwingMode: String\nAn indicator of whether a fan swings back and forth during operation."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone/1624766-uniqueidentifier",
    "html": "See Also\nIdentifying a Zone\nvar name: String\nThe name of the zone.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the zone."
  },
  {
    "title": "HMCharacteristicTypeModel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypemodel",
    "html": "Deprecated\n\nUse the accessory’s model property instead.\n\nDiscussion\n\nThe corresponding value is a string.\n\nSee Also\nDeprecated characteristic types\nlet HMCharacteristicTypeManufacturer: String\nThe manufacturer of the accessory.\nDeprecated\nlet HMCharacteristicTypeFirmwareVersion: String\nThe firmware version of the accessory.\nDeprecated\nlet HMCharacteristicTypeSerialNumber: String\nThe serial number of the accessory.\nDeprecated"
  },
  {
    "title": "HMCharacteristicTypeSoftwareVersion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesoftwareversion",
    "html": "Discussion\n\nThe corresponding value is a string.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeManufacturer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypemanufacturer",
    "html": "Deprecated\n\nUse the accessory’s manufacturer property instead.\n\nDiscussion\n\nThe corresponding value is a string.\n\nSee Also\nDeprecated characteristic types\nlet HMCharacteristicTypeModel: String\nThe model of the accessory.\nDeprecated\nlet HMCharacteristicTypeFirmwareVersion: String\nThe firmware version of the accessory.\nDeprecated\nlet HMCharacteristicTypeSerialNumber: String\nThe serial number of the accessory.\nDeprecated"
  },
  {
    "title": "HMCharacteristicTypeLabelIndex | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelabelindex",
    "html": "Discussion\n\nThe corresponding value is an integer that’s greater than or equal to 1. When the value for the label namespace characteristic is HMCharacteristicValueLabelNamespace.dot, the label index indicates the number of dots, like ., .., ..., and so on. When the value for the label namespace characteristic is HMCharacteristicValueLabelNamespace.numeral, the label index indicates the arabic numeral, like 1, 2, 3, and so on.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeVersion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeversion",
    "html": "Discussion\n\nThe corresponding value is a string.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypename",
    "html": "Discussion\n\nThe corresponding value is a string.\n\nSee Also\nAccessory identification\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type."
  },
  {
    "title": "HMCharacteristicTypeStatusFault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypestatusfault",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueStatusFault enumeration. It indicates whether the accessory has experienced a fault that interferes with normal functioning, such as when a humidifier runs out of water.\n\nTopics\nValues\nenum HMCharacteristicValueStatusFault\nPossible values for the fault status of an accessory.\nSee Also\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs."
  },
  {
    "title": "HMCharacteristicTypeSelectedStreamConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeselectedstreamconfiguration",
    "html": "Discussion\n\nThe corresponding value is TLV8-encoded data.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeCurrentSecuritySystemState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentsecuritysystemstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCurrentSecuritySystemState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCurrentSecuritySystemState\nPossible values for the current security system state.\nSee Also\nSafety and security\nlet HMCharacteristicTypeTargetSecuritySystemState: String\nThe target security system state.\nlet HMCharacteristicTypeObstructionDetected: String\nAn indicator of whether an obstruction is detected, as when something prevents a garage door from closing.\nlet HMCharacteristicTypeOccupancyDetected: String\nAn indicator of whether the home is occupied.\nlet HMCharacteristicTypeSecuritySystemAlarmType: String\nThe alarm trigger state."
  },
  {
    "title": "HMCharacteristicTypeSupportedRTPConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesupportedrtpconfiguration",
    "html": "Discussion\n\nThe corresponding value is a TLV8-encoded list of supported RTP parameters and their values.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicTypeCurrentLockMechanismState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentlockmechanismstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueLockMechanismState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueLockMechanismState\nPossible values for the state of a lock mechanism.\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeDigitalZoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypedigitalzoom",
    "html": "Discussion\n\nThe corresponding value is a floating point number used as a multiplier on the image sourced by the video RTP service.\n\nSee Also\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio."
  },
  {
    "title": "HMCharacteristicValueTargetLockMechanismState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetargetlockmechanismstate",
    "html": "Topics\nLock Mechanism States\ncase secured\nA secured lock mechanism.\ncase unsecured\nAn unsecured lock mechanism.\nRelationships\nConforms To\nSendable\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism."
  },
  {
    "title": "HMCharacteristicTypeMotionDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypemotiondetected",
    "html": "Discussion\n\nThe corresponding value is a Boolean and is true when motion has been detected.\n\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeLockPhysicalControls | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelockphysicalcontrols",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueLockPhysicalControlsState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueLockPhysicalControlsState\nPossible values for the lock physical control state.\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeSecuritySystemAlarmType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesecuritysystemalarmtype",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueSecuritySystemAlarmType enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueSecuritySystemAlarmType\nPossible trigger states for an alarm.\nSee Also\nSafety and security\nlet HMCharacteristicTypeCurrentSecuritySystemState: String\nThe current security system state.\nlet HMCharacteristicTypeTargetSecuritySystemState: String\nThe target security system state.\nlet HMCharacteristicTypeObstructionDetected: String\nAn indicator of whether an obstruction is detected, as when something prevents a garage door from closing.\nlet HMCharacteristicTypeOccupancyDetected: String\nAn indicator of whether the home is occupied."
  },
  {
    "title": "HMCharacteristicTypeObstructionDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeobstructiondetected",
    "html": "Discussion\n\nThe corresponding Boolean value is true when the accessory detects an obstruction.\n\nSee Also\nSafety and security\nlet HMCharacteristicTypeCurrentSecuritySystemState: String\nThe current security system state.\nlet HMCharacteristicTypeTargetSecuritySystemState: String\nThe target security system state.\nlet HMCharacteristicTypeOccupancyDetected: String\nAn indicator of whether the home is occupied.\nlet HMCharacteristicTypeSecuritySystemAlarmType: String\nThe alarm trigger state."
  },
  {
    "title": "HMCharacteristicTypeOccupancyDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeoccupancydetected",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueOccupancyStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueOccupancyStatus\nPossible values for the occupancy status.\nSee Also\nSafety and security\nlet HMCharacteristicTypeCurrentSecuritySystemState: String\nThe current security system state.\nlet HMCharacteristicTypeTargetSecuritySystemState: String\nThe target security system state.\nlet HMCharacteristicTypeObstructionDetected: String\nAn indicator of whether an obstruction is detected, as when something prevents a garage door from closing.\nlet HMCharacteristicTypeSecuritySystemAlarmType: String\nThe alarm trigger state."
  },
  {
    "title": "HMCharacteristicTypeTargetSecuritySystemState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetsecuritysystemstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueTargetSecuritySystemState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueTargetSecuritySystemState\nPossible values for the target security system state.\nSee Also\nSafety and security\nlet HMCharacteristicTypeCurrentSecuritySystemState: String\nThe current security system state.\nlet HMCharacteristicTypeObstructionDetected: String\nAn indicator of whether an obstruction is detected, as when something prevents a garage door from closing.\nlet HMCharacteristicTypeOccupancyDetected: String\nAn indicator of whether the home is occupied.\nlet HMCharacteristicTypeSecuritySystemAlarmType: String\nThe alarm trigger state."
  },
  {
    "title": "HMCharacteristicTypeLockMechanismLastKnownAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypelockmechanismlastknownaction",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueLockMechanismLastKnownAction enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueLockMechanismLastKnownAction\nPossible values for the last known action of the locking mechanism.\nSee Also\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device."
  },
  {
    "title": "HMCharacteristicTypeAirParticulateSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeairparticulatesize",
    "html": "Discussion\n\nThe corresponding value is one of the constants enumerated in HMCharacteristicValueAirParticulateSize.\n\nTopics\nValues\nenum HMCharacteristicValueAirParticulateSize\nPossible values for the air particulate size.\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeTargetHorizontalTilt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargethorizontaltilt",
    "html": "Discussion\n\nThe corresponding value represents the angle in degrees, with a value between -90 and 90.\n\nA value of -90 indicates the slats should be fully closed and rotated such that the user-facing edge is higher than the opposing edge. A value of 0 indicates that the edges should be at the same level, with the slats fully open.\n\nSee Also\nTilting mechanisms\nlet HMCharacteristicTypeCurrentHorizontalTilt: String\nThe current tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentVerticalTilt: String\nThe current tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetVerticalTilt: String\nThe target tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentTilt: String\nThe current tilt angle of a slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetTilt: String\nThe target tilt angle of a slat for an accessory like a window or a fan."
  },
  {
    "title": "HMCharacteristicTypeNitrogenDioxideDensity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypenitrogendioxidedensity",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeOzoneDensity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeozonedensity",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeCarbonMonoxideLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecarbonmonoxidelevel",
    "html": "Discussion\n\nThe corresponding value is a floating point number in units of parts per million.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeCarbonMonoxidePeakLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecarbonmonoxidepeaklevel",
    "html": "Discussion\n\nThe corresponding value is a floating point number in units of parts per million.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeCarbonMonoxideDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecarbonmonoxidedetected",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCarbonMonoxideDetectionStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCarbonMonoxideDetectionStatus\nPossible values for the state of carbon monoxide level detection.\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeCarbonDioxideLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecarbondioxidelevel",
    "html": "Discussion\n\nThe corresponding value is a floating point number in units of parts per million.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeSmokeDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesmokedetected",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueSmokeDetectionStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueSmokeDetectionStatus\nPossible values for smoke detection status.\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMCharacteristicTypeDehumidifierThreshold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypedehumidifierthreshold",
    "html": "Discussion\n\nThe corresponding value is a floating point percentage representing the relative humidity threshold. Relative humidity is a measure of the amount of water in the air relative to the maximum it can hold at the current temperature.\n\nSee Also\nHumidity\nlet HMCharacteristicTypeCurrentRelativeHumidity: String\nThe current relative humidity measured by the accessory.\nlet HMCharacteristicTypeTargetRelativeHumidity: String\nThe target relative humidity for the accessory to achieve.\nlet HMCharacteristicTypeCurrentHumidifierDehumidifierState: String\nThe current state of a humidifier or dehumidifier accessory.\nlet HMCharacteristicTypeTargetHumidifierDehumidifierState: String\nThe state that a humidifier or dehumidifier accessory should try to achieve.\nlet HMCharacteristicTypeHumidifierThreshold: String\nThe humidity below which a humidifier should begin to work."
  },
  {
    "title": "HMCharacteristicValueTemperatureUnit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluetemperatureunit",
    "html": "Topics\nTemperature Units\ncase celsius\nTemperature is reported in degrees Celsius.\ncase fahrenheit\nTemperature is reported in degrees Fahrenheit.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "HMCharacteristicTypeSaturation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypesaturation",
    "html": "Discussion\n\nThe corresponding value is a floating point percentage of maximum saturation.\n\nSee Also\nLight\nlet HMCharacteristicTypeCurrentLightLevel: String\nThe current light level.\nlet HMCharacteristicTypeHue: String\nThe hue of the color used by a light.\nlet HMCharacteristicTypeBrightness: String\nThe brightness of a light.\nlet HMCharacteristicTypeColorTemperature: String\nThe color temperature of a light."
  },
  {
    "title": "HMCharacteristicTypeCurrentLightLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentlightlevel",
    "html": "Discussion\n\nThe corresponding value is a number in units of lux.\n\nSee Also\nLight\nlet HMCharacteristicTypeHue: String\nThe hue of the color used by a light.\nlet HMCharacteristicTypeBrightness: String\nThe brightness of a light.\nlet HMCharacteristicTypeSaturation: String\nThe saturation of the color used by a light.\nlet HMCharacteristicTypeColorTemperature: String\nThe color temperature of a light."
  },
  {
    "title": "HMCharacteristicTypeCurrentHeaterCoolerState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentheatercoolerstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCurrentHeaterCoolerState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCurrentHeaterCoolerState\nPossible values for the current state of a device that heats or cools.\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeHue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypehue",
    "html": "Discussion\n\nThe corresponding value is a floating point number in units of arc degrees. Values range from 0 to 360, representing the color spectrum starting from red, through yellow, green, cyan, blue, and finally magenta, before wrapping back to red.\n\nSee Also\nLight\nlet HMCharacteristicTypeCurrentLightLevel: String\nThe current light level.\nlet HMCharacteristicTypeBrightness: String\nThe brightness of a light.\nlet HMCharacteristicTypeSaturation: String\nThe saturation of the color used by a light.\nlet HMCharacteristicTypeColorTemperature: String\nThe color temperature of a light."
  },
  {
    "title": "HMCharacteristicTypeStatusLowBattery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypestatuslowbattery",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueBatteryStatus enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueBatteryStatus\nPossible values for battery status.\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "HMCharacteristicTypeColorTemperature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecolortemperature",
    "html": "Discussion\n\nThe corresponding value is an integer representing the color temperature in micro-reciprocal degrees (mired), which is 1,000,000 divided by the color temperature in kelvins. For example, to emulate a traditional tungsten light with a color temperature of 3200 K, use a mired value of about 312.\n\nSee Also\nLight\nlet HMCharacteristicTypeCurrentLightLevel: String\nThe current light level.\nlet HMCharacteristicTypeHue: String\nThe hue of the color used by a light.\nlet HMCharacteristicTypeBrightness: String\nThe brightness of a light.\nlet HMCharacteristicTypeSaturation: String\nThe saturation of the color used by a light."
  },
  {
    "title": "HMCharacteristicTypeInputEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeinputevent",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueInputEvent enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueInputEvent\nPossible values for the input event of a programmable switch.\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch."
  },
  {
    "title": "HMCharacteristicTypeContactState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecontactstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueContactState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueContactState\nPossible values for the contact sensor state.\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "HMCharacteristicTypeTemperatureUnits | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetemperatureunits",
    "html": "Discussion\n\nThe corresponding value is one of the constants from the HMCharacteristicValueTemperatureUnit enumeration.\n\nHomeKit always reports temperature values in degrees Celsius, but your app should display the temperature in units chosen by the user.\n\nTopics\nValues\nenum HMCharacteristicValueTemperatureUnit\nPossible values for the temperature units currently active on the accessory.\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeOutletInUse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeoutletinuse",
    "html": "Discussion\n\nThe corresponding value is a Boolean which is set to true when the outlet is in use, and false otherwise.\n\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "HMCharacteristicTypeChargingState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypechargingstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueChargingState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueChargingState\nPossible values for the charging state of a battery.\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "HMCharacteristicTypeTargetHeaterCoolerState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetheatercoolerstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueTargetHeaterCoolerState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueTargetHeaterCoolerState\nPossible values for the target state of a device that heats or cools.\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeOutputState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeoutputstate",
    "html": "Discussion\n\nThe value represents the state of a programmable switch. For a binary switch, a value of 1 indicates that the switch is in the ON position.\n\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "HMCharacteristicTypeTargetHeatingCooling | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetheatingcooling",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueHeatingCooling enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueHeatingCooling\nPossible values for the heating or cooling characteristic of a thermostat.\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeTargetHumidifierDehumidifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargethumidifierdehumidifierstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueTargetHumidifierDehumidifierState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueTargetHumidifierDehumidifierState\nPossible values for the target humidifier or dehumidifier state.\nSee Also\nHumidity\nlet HMCharacteristicTypeCurrentRelativeHumidity: String\nThe current relative humidity measured by the accessory.\nlet HMCharacteristicTypeTargetRelativeHumidity: String\nThe target relative humidity for the accessory to achieve.\nlet HMCharacteristicTypeCurrentHumidifierDehumidifierState: String\nThe current state of a humidifier or dehumidifier accessory.\nlet HMCharacteristicTypeHumidifierThreshold: String\nThe humidity below which a humidifier should begin to work.\nlet HMCharacteristicTypeDehumidifierThreshold: String\nThe humidity above which a dehumidifier should begin to work."
  },
  {
    "title": "HMCharacteristicTypeCoolingThreshold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecoolingthreshold",
    "html": "Discussion\n\nThe corresponding value is a floating point number in degrees Celsius.\n\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeCurrentHeatingCooling | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentheatingcooling",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueHeatingCooling enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueHeatingCooling\nPossible values for the heating or cooling characteristic of a thermostat.\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeHeatingThreshold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeheatingthreshold",
    "html": "Discussion\n\nThe corresponding value is a floating point number in degrees Celsius.\n\nSee Also\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeCurrentRelativeHumidity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentrelativehumidity",
    "html": "Discussion\n\nThe corresponding value is a floating point percentage representing the current relative humidity. This is a measure of the amount of water in the air relative to the maximum it can hold at the current temperature.\n\nSee Also\nHumidity\nlet HMCharacteristicTypeTargetRelativeHumidity: String\nThe target relative humidity for the accessory to achieve.\nlet HMCharacteristicTypeCurrentHumidifierDehumidifierState: String\nThe current state of a humidifier or dehumidifier accessory.\nlet HMCharacteristicTypeTargetHumidifierDehumidifierState: String\nThe state that a humidifier or dehumidifier accessory should try to achieve.\nlet HMCharacteristicTypeHumidifierThreshold: String\nThe humidity below which a humidifier should begin to work.\nlet HMCharacteristicTypeDehumidifierThreshold: String\nThe humidity above which a dehumidifier should begin to work."
  },
  {
    "title": "isSupported(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmevent/2892281-issupported",
    "html": "See Also\nGetting information about the event\nvar uniqueIdentifier: UUID\nA unique identifier for the event."
  },
  {
    "title": "HMCharacteristicTypeTargetRelativeHumidity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetrelativehumidity",
    "html": "Discussion\n\nThe corresponding value is a floating point percentage representing the desired relative humidity. This is a measure of the amount of water in the air relative to the maximum it can hold at the current temperature.\n\nSee Also\nHumidity\nlet HMCharacteristicTypeCurrentRelativeHumidity: String\nThe current relative humidity measured by the accessory.\nlet HMCharacteristicTypeCurrentHumidifierDehumidifierState: String\nThe current state of a humidifier or dehumidifier accessory.\nlet HMCharacteristicTypeTargetHumidifierDehumidifierState: String\nThe state that a humidifier or dehumidifier accessory should try to achieve.\nlet HMCharacteristicTypeHumidifierThreshold: String\nThe humidity below which a humidifier should begin to work.\nlet HMCharacteristicTypeDehumidifierThreshold: String\nThe humidity above which a dehumidifier should begin to work."
  },
  {
    "title": "HMNumberRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnumberrange",
    "html": "Topics\nCreating a number range\ninit(minValue: NSNumber, maxValue: NSNumber)\nCreates a new number range.\ninit(minValue: NSNumber)\nCreates an one-sided number range with a minimum value.\ninit(maxValue: NSNumber)\nCreates a one-sided number range with a maximum value.\nInspecting a number range\nvar minValue: NSNumber?\nThe minimum value of the range.\nvar maxValue: NSNumber?\nThe maximum value of the range.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nCharacteristic ranges\nclass HMCharacteristicThresholdRangeEvent\nAn event that triggers when the value of a characteristic is within a specified range.\nclass HMMutableCharacteristicThresholdRangeEvent\nA mutable event that triggers when the value of a characteristic is within a specified range."
  },
  {
    "title": "HMMutableCharacteristicThresholdRangeEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecharacteristicthresholdrangeevent",
    "html": "Topics\nConfiguring a characteristic threshold event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event.\nvar thresholdRange: HMNumberRange\nThe range of the characteristic value that triggers the event.\nRelationships\nInherits From\nHMCharacteristicThresholdRangeEvent\nConforms To\nSendable\nSee Also\nCharacteristic ranges\nclass HMNumberRange\nA set of numbers used to specify conditions for characteristic range threshold events.\nclass HMCharacteristicThresholdRangeEvent\nAn event that triggers when the value of a characteristic is within a specified range."
  },
  {
    "title": "HMPresenceEventType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventtype",
    "html": "Topics\nSpecifying presence type\ncase everyEntry\nTriggers the event every time a user enters the home.\ncase everyExit\nTriggers the event every time a user leaves the home.\ncase firstEntry\nTriggers an event for the first user entering the home.\ncase lastExit\nTriggers an event when the last user leaves the home.\nUsing presence as a predicate\nstatic var atHome: HMPresenceEventType\nTriggers the event when at least one user is in the home.\nstatic var notAtHome: HMPresenceEventType\nTriggers the event when there are no users in the home.\nRelationships\nConforms To\nSendable\nSee Also\nUser presence\nclass HMPresenceEvent\nAn event that triggers based on the presence of users in the home.\nclass HMMutablePresenceEvent\nA mutable event that triggers based on the presence of users in the home.\nenum HMPresenceEventUserType\nThe group of users that triggers a presence event."
  },
  {
    "title": "HMMutablePresenceEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablepresenceevent",
    "html": "Topics\nConfiguring a presence event\nvar presenceEventType: HMPresenceEventType\nThe event type that triggers the presence event.\nvar presenceUserType: HMPresenceEventUserType\nThe user type whose presence triggers the event.\nRelationships\nInherits From\nHMPresenceEvent\nConforms To\nSendable\nSee Also\nUser presence\nclass HMPresenceEvent\nAn event that triggers based on the presence of users in the home.\nenum HMPresenceEventType\nThe user presence type that triggers a presence event.\nenum HMPresenceEventUserType\nThe group of users that triggers a presence event."
  },
  {
    "title": "HMPresenceEventUserType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceeventusertype",
    "html": "Topics\nSelecting users\ncase currentUser\nThe current user triggers the presence event.\ncase homeUsers\nAll users associated with a home trigger a presence event.\ncase customUsers\nA custom set of users is used to trigger a presence event.\nRelationships\nConforms To\nSendable\nSee Also\nUser presence\nclass HMPresenceEvent\nAn event that triggers based on the presence of users in the home.\nclass HMMutablePresenceEvent\nA mutable event that triggers based on the presence of users in the home.\nenum HMPresenceEventType\nThe user presence type that triggers a presence event."
  },
  {
    "title": "categoryType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategory/1619926-categorytype",
    "html": "Discussion\n\nSee Accessory Category Types for possible values.\n\nSee Also\nReading the category type\nAccessory Category Types\nThe accessory category types supported by HomeKit."
  },
  {
    "title": "HMCharacteristicTypeCurrentDoorState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentdoorstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueDoorState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueDoorState\nPossible values for the state of a door.\nSee Also\nDoors and windows\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicTypePositionState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypepositionstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValuePositionState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValuePositionState\nPossible values for the position states of an accessory like a door, window, awning, or window covering.\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicTypeWaterLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypewaterlevel",
    "html": "Discussion\n\nThe corresponding value is a percentage of the maximum amount of water that the accessory, like a humidifier, can hold.\n\nSee Also\nWater\nlet HMCharacteristicTypeValveType: String\nThe type of automated valve that controls fluid flow.\nlet HMCharacteristicTypeLeakDetected: String\nA leak detection indicator."
  },
  {
    "title": "HMCharacteristicTypeCurrentTemperature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrenttemperature",
    "html": "Discussion\n\nThe corresponding value is a floating point number in degrees Celsius.\n\nSee Also\nTemperature\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature."
  },
  {
    "title": "HMCharacteristicTypeTargetDoorState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetdoorstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueDoorState enumeration.\n\nDoors take time to move between states, so the target door state may not match the current door state at a given moment in time.\n\nTopics\nValues\nenum HMCharacteristicValueDoorState\nPossible values for the state of a door.\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicTypeCurrentPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentposition",
    "html": "Discussion\n\nThe corresponding value is an integer percentage. A value of 0 indicates a door or window is fully closed, or that awnings or shades permit the least possible light. A value of 100 indicates the opposite.\n\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "HMCharacteristicTypeLeakDetected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeleakdetected",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueLeakStatus enumeration. This characteristic typically applies to water, but can also be used for other fluids, like natural gas.\n\nTopics\nValues\nenum HMCharacteristicValueLeakStatus\nPossible values for leak detection.\nSee Also\nWater\nlet HMCharacteristicTypeWaterLevel: String\nThe water level measured by an accessory.\nlet HMCharacteristicTypeValveType: String\nThe type of automated valve that controls fluid flow."
  },
  {
    "title": "HMCharacteristicTypeValveType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypevalvetype",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueValveType enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueValveType\nPossible values for a valve type.\nSee Also\nWater\nlet HMCharacteristicTypeWaterLevel: String\nThe water level measured by an accessory.\nlet HMCharacteristicTypeLeakDetected: String\nA leak detection indicator."
  },
  {
    "title": "HMCharacteristicTypeTargetPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetposition",
    "html": "Discussion\n\nThe corresponding value is an integer percentage. A value of 0 indicates a door or window should be fully closed, or that awnings or shades should permit the least possible light. A value of 100 indicates the opposite.\n\nSee Also\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door."
  },
  {
    "title": "home(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620270-home",
    "html": "Parameters\nhome\n\nThe home the room was removed from.\n\nroom\n\nThe room that was removed.\n\nDiscussion\n\nAccessories in a room that gets removed from a home are moved to roomForEntireHome().\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "validValues | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1649244-validvalues",
    "html": "See Also\nBounding the value\nvar minimumValue: NSNumber?\nThe minimum value for the characteristic.\nvar maximumValue: NSNumber?\nThe maximum value for the characteristic.\nvar stepValue: NSNumber?\nThe minimum interval between values for the characteristic.\nvar maxLength: NSNumber?\nThe maximum number of UTF-8 characters allowed in a characteristic that uses a string format."
  },
  {
    "title": "HMCharacteristicTypeTargetAirPurifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypetargetairpurifierstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueTargetAirPurifierState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueTargetAirPurifierState\nPossible values for the target air purifier state.\nSee Also\nPurifiers and filters\nlet HMCharacteristicTypeCurrentAirPurifierState: String\nThe current air purifier state.\nlet HMCharacteristicTypeFilterLifeLevel: String\nThe amount of useful life remaining in a filter.\nlet HMCharacteristicTypeFilterChangeIndication: String\nA filter’s change indicator.\nlet HMCharacteristicTypeFilterResetChangeIndication: String\nA reset control for a filter change notification."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620249-home",
    "html": "Parameters\nhome\n\nThe home.\n\nzone\n\nThe new zone.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "manufacturerDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621247-manufacturerdescription",
    "html": "Discussion\n\nYou can present this string to the user to help the user identify the purpose of the characteristic."
  },
  {
    "title": "HMCharacteristicTypeSwingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeswingmode",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueSwingMode enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueSwingMode\nPossible values for fan movement.\nSee Also\nFans\nlet HMCharacteristicTypeCurrentFanState: String\nThe current state of a fan.\nlet HMCharacteristicTypeTargetFanState: String\nThe target state of a fan.\nlet HMCharacteristicTypeRotationDirection: String\nThe rotation direction of an accessory like a fan.\nlet HMCharacteristicTypeRotationSpeed: String\nThe rotation speed of an accessory like a fan."
  },
  {
    "title": "HMCharacteristicTypeCurrentAirPurifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrentairpurifierstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCurrentAirPurifierState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCurrentAirPurifierState\nPossible values for the current air purifier state.\nSee Also\nPurifiers and filters\nlet HMCharacteristicTypeTargetAirPurifierState: String\nThe target air purifier state.\nlet HMCharacteristicTypeFilterLifeLevel: String\nThe amount of useful life remaining in a filter.\nlet HMCharacteristicTypeFilterChangeIndication: String\nA filter’s change indicator.\nlet HMCharacteristicTypeFilterResetChangeIndication: String\nA reset control for a filter change notification."
  },
  {
    "title": "HMServiceTypeSpeaker | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypespeaker",
    "html": "See Also\nVideo and Audio\nlet HMServiceTypeCameraControl: String\nA camera control service.\nlet HMServiceTypeCameraRTPStreamManagement: String\nA stream management service.\nlet HMServiceTypeMicrophone: String\nA microphone service."
  },
  {
    "title": "home(_:didUpdate:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620237-home",
    "html": "Parameters\nhome\n\nThe home.\n\nroom\n\nThe new room for the accessory.\n\naccessory\n\nThe accessory whose room assignment changed.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "HMServiceTypeCarbonMonoxideSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypecarbonmonoxidesensor",
    "html": "See Also\nAir Quality and Smoke Detection\nlet HMServiceTypeAirPurifier: String\nAn air purifier service.\nlet HMServiceTypeAirQualitySensor: String\nAn air quality sensor service.\nlet HMServiceTypeCarbonDioxideSensor: String\nA carbon dioxide sensor service.\nlet HMServiceTypeSmokeSensor: String\nA smoke sensor service."
  },
  {
    "title": "HMServiceTypeLightSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypelightsensor",
    "html": "See Also\nLight\nlet HMServiceTypeLightbulb: String\nA light bulb service."
  },
  {
    "title": "HMServiceTypeSwitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeswitch",
    "html": "See Also\nPower and Switches\nlet HMServiceTypeBattery: String\nA battery service.\nlet HMServiceTypeOutlet: String\nAn outlet service.\nlet HMServiceTypeStatefulProgrammableSwitch: String\nA stateful programmable switch service.\nlet HMServiceTypeStatelessProgrammableSwitch: String\nA stateless programmable switch service."
  },
  {
    "title": "HMServiceTypeBattery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypebattery",
    "html": "See Also\nPower and Switches\nlet HMServiceTypeSwitch: String\nA switch service.\nlet HMServiceTypeOutlet: String\nAn outlet service.\nlet HMServiceTypeStatefulProgrammableSwitch: String\nA stateful programmable switch service.\nlet HMServiceTypeStatelessProgrammableSwitch: String\nA stateless programmable switch service."
  },
  {
    "title": "home(_:didUpdateNameFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620253-home",
    "html": "Parameters\nhome\n\nThe home.\n\ngroup\n\nThe service group whose name changed.\n\nSee Also\nObserving Service Configuration\nfunc home(HMHome, didAdd: HMServiceGroup)\nTells the delegate that a home added a service group.\nfunc home(HMHome, didAdd: HMService, to: HMServiceGroup)\nTells the delegate that a home added a service to a service group.\nfunc home(HMHome, didRemove: HMService, from: HMServiceGroup)\nTells the delegate that a home removed a service from a service group.\nfunc home(HMHome, didRemove: HMServiceGroup)\nTells the delegate that a home removed a service group."
  },
  {
    "title": "HMServiceTypeLightbulb | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypelightbulb",
    "html": "See Also\nLight\nlet HMServiceTypeLightSensor: String\nA light sensor service."
  },
  {
    "title": "Characteristic Data Formats | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/characteristic_data_formats",
    "html": "Overview\n\nExpect to find one of these values in the format property of a characteristic’s metadata.\n\nTopics\nBooleans\nlet HMCharacteristicMetadataFormatBool: String\nIndicates that the characteristic has Boolean values.\nStrings\nlet HMCharacteristicMetadataFormatString: String\nIndicates that the characteristic has string values.\nSigned Values\nlet HMCharacteristicMetadataFormatInt: String\nIndicates that the characteristic has int values.\nlet HMCharacteristicMetadataFormatFloat: String\nIndicates that the characteristic has float values.\nUnsigned Integers\nlet HMCharacteristicMetadataFormatUInt8: String\nIndicates that the characteristic has unsigned 8-bit integer values.\nlet HMCharacteristicMetadataFormatUInt16: String\nIndicates that the characteristic has unsigned 16-bit integer values.\nlet HMCharacteristicMetadataFormatUInt32: String\nIndicates that the characteristic has unsigned 32-bit integer values.\nlet HMCharacteristicMetadataFormatUInt64: String\nIndicates that the characteristic has unsigned 64-bit integer values.\nData\nlet HMCharacteristicMetadataFormatData: String\nIndicates that the characteristic has data blob values.\nlet HMCharacteristicMetadataFormatTLV8: String\nIndicates that the characteristic has TVL8 values.\nCollections\nlet HMCharacteristicMetadataFormatArray: String\nIndicates that the characteristic has array values.\nlet HMCharacteristicMetadataFormatDictionary: String\nIndicates that the characteristic has dictionary values.\nSee Also\nFormatting the value\nvar format: String?\nThe format of the values for the characteristic."
  },
  {
    "title": "HMServiceTypeCarbonDioxideSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypecarbondioxidesensor",
    "html": "See Also\nAir Quality and Smoke Detection\nlet HMServiceTypeAirPurifier: String\nAn air purifier service.\nlet HMServiceTypeAirQualitySensor: String\nAn air quality sensor service.\nlet HMServiceTypeCarbonMonoxideSensor: String\nA carbon monoxide sensor service.\nlet HMServiceTypeSmokeSensor: String\nA smoke sensor service."
  },
  {
    "title": "HMServiceTypeStatelessProgrammableSwitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypestatelessprogrammableswitch",
    "html": "See Also\nPower and Switches\nlet HMServiceTypeSwitch: String\nA switch service.\nlet HMServiceTypeBattery: String\nA battery service.\nlet HMServiceTypeOutlet: String\nAn outlet service.\nlet HMServiceTypeStatefulProgrammableSwitch: String\nA stateful programmable switch service."
  },
  {
    "title": "Characteristic Units | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/characteristic_units",
    "html": "Overview\n\nExpect to find one of these values in the units property of a characteristic’s metadata.\n\nTopics\nParts Per Total\nlet HMCharacteristicMetadataUnitsPercentage: String\nThe unit of the characteristic is a percentage.\nlet HMCharacteristicMetadataUnitsPartsPerMillion: String\nThe unit of the characters is parts per million.\nTemperature\nlet HMCharacteristicMetadataUnitsCelsius: String\nThe unit of the characteristic is celsius.\nlet HMCharacteristicMetadataUnitsFahrenheit: String\nThe unit of the characteristic is fahrenheit.\nTime\nlet HMCharacteristicMetadataUnitsSeconds: String\nThe unit of the characteristic is seconds.\nLight\nlet HMCharacteristicMetadataUnitsLux: String\nThe unit of the characteristic is lux (that is, illuminance).\nMass\nlet HMCharacteristicMetadataUnitsMicrogramsPerCubicMeter: String\nThe unit of the characteristic is micrograms per cubic meter.\nRotation\nlet HMCharacteristicMetadataUnitsArcDegree: String\nThe unit of the characteristic is the degrees of an arc.\nSee Also\nSpecifying units\nvar units: String?\nThe units of the characteristic value."
  },
  {
    "title": "HMCharacteristicTypeAirQuality | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeairquality",
    "html": "Discussion\n\nThe corresponding value is one of the constants enumerated in HMCharacteristicValueAirQuality.\n\nTopics\nValues\nenum HMCharacteristicValueAirQuality\nPossible values for the air quality.\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMServiceTypeHumiditySensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypehumiditysensor",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "HMCharacteristicTypeAirParticulateDensity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypeairparticulatedensity",
    "html": "Discussion\n\nThe corresponding value is a number in units of micrograms per cubic meter.\n\nSee Also\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds."
  },
  {
    "title": "HMAddAccessoryRequest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaddaccessoryrequest",
    "html": "Overview\n\nAn HMAddAccessoryRequest instance describes an accessory that your app should add to a home. HomeKit calls your home manager delegate’s homeManager(_:didReceiveAddAccessoryRequest:) method with a request.\n\nUse the request’s accessoryName and accessoryCategory properties to obtain a token by negotiating with the accessory outside of HomeKit. If the requiresSetupPayloadURL property is true, also prepare a setup payload URL. Then create a setup payload with either the makePayload(url:ownershipToken:) or makePayload(ownershipToken:) method. Complete the request by calling the addAndSetupAccessories(with:completionHandler:) method on the request’s home property.\n\nTopics\nCharacterizing the Request\nvar home: HMHome\nThe home to which to add the accessory.\nvar accessoryCategory: HMAccessoryCategory\nThe category of the accessory to add.\nvar accessoryName: String\nThe name of the accessory to add.\nvar requiresOwnershipToken: Bool\nAn indication of whether the add operation requires an ownership token.\nDeprecated\nvar requiresSetupPayloadURL: Bool\nAn indication of whether the add operation requires a setup payload URL.\nCreating a Payload\nfunc makePayload(ownershipToken: HMAccessoryOwnershipToken) -> HMAccessorySetupPayload?\nBuilds an accessory setup payload with the given ownership token.\nfunc makePayload(url: URL, ownershipToken: HMAccessoryOwnershipToken) -> HMAccessorySetupPayload?\nBuilds an accessory setup payload with the given setup payload URL and ownership token.\nRelationships\nInherits From\nNSObject\nSee Also\nAdding accessories\nfunc homeManager(HMHomeManager, didReceiveAddAccessoryRequest: HMAddAccessoryRequest)\nTells the delegate to add an accessory to a home by using a setup payload."
  },
  {
    "title": "homeManagerDidUpdatePrimaryHome(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate/1616752-homemanagerdidupdateprimaryhome",
    "html": "Parameters\nmanager\n\nThe home manager with an updated primary home.\n\nSee Also\nAdding and removing homes\nfunc homeManagerDidUpdateHomes(HMHomeManager)\nTells the delegate that the home manager updated its collection of homes.\nfunc homeManager(HMHomeManager, didAdd: HMHome)\nTells the delegate that the home manager added a home.\nfunc homeManager(HMHomeManager, didRemove: HMHome)\nTells the delegate that the home manager removed a home."
  },
  {
    "title": "HMCharacteristicTypeCurrentHumidifierDehumidifierState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypecurrenthumidifierdehumidifierstate",
    "html": "Discussion\n\nThe corresponding value is one of the constants in the HMCharacteristicValueCurrentHumidifierDehumidifierState enumeration.\n\nTopics\nValues\nenum HMCharacteristicValueCurrentHumidifierDehumidifierState\nPossible values for the current humidifier or dehumidifier state.\nSee Also\nHumidity\nlet HMCharacteristicTypeCurrentRelativeHumidity: String\nThe current relative humidity measured by the accessory.\nlet HMCharacteristicTypeTargetRelativeHumidity: String\nThe target relative humidity for the accessory to achieve.\nlet HMCharacteristicTypeTargetHumidifierDehumidifierState: String\nThe state that a humidifier or dehumidifier accessory should try to achieve.\nlet HMCharacteristicTypeHumidifierThreshold: String\nThe humidity below which a humidifier should begin to work.\nlet HMCharacteristicTypeDehumidifierThreshold: String\nThe humidity above which a dehumidifier should begin to work."
  },
  {
    "title": "HMCharacteristicTypeHumidifierThreshold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypehumidifierthreshold",
    "html": "Discussion\n\nThe corresponding value is a floating point percentage representing the relative humidity threshold. Relative humidity is a measure of the amount of water in the air relative to the maximum it can hold at the current temperature.\n\nSee Also\nHumidity\nlet HMCharacteristicTypeCurrentRelativeHumidity: String\nThe current relative humidity measured by the accessory.\nlet HMCharacteristicTypeTargetRelativeHumidity: String\nThe target relative humidity for the accessory to achieve.\nlet HMCharacteristicTypeCurrentHumidifierDehumidifierState: String\nThe current state of a humidifier or dehumidifier accessory.\nlet HMCharacteristicTypeTargetHumidifierDehumidifierState: String\nThe state that a humidifier or dehumidifier accessory should try to achieve.\nlet HMCharacteristicTypeDehumidifierThreshold: String\nThe humidity above which a dehumidifier should begin to work."
  },
  {
    "title": "HMMutableCharacteristicEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablecharacteristicevent",
    "html": "Topics\nConfiguring the event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event.\nvar triggerValue: TriggerValueType?\nThe value of the characteristic that triggers the event.\nRelationships\nInherits From\nHMCharacteristicEvent\nConforms To\nSendable\nSee Also\nCharacteristics\nclass HMCharacteristicEvent\nAn event that is evaluated based on the value of a characteristic."
  },
  {
    "title": "updateTriggerValue(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicevent/1617202-updatetriggervalue",
    "html": "Deprecated\n\nUse the mutable region property on the HMMutableLocationEvent subclass of HMLocationEvent instead.\n\nParameters\ntriggerValue\n\nThe value of the characteristic that triggers the event.\n\ncompletionHandler\n\nThe block executed once the trigger value update request has been processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateTriggerValue(_ triggerValue: TriggerValueType?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSet the trigger value to nil to trigger the event whenever the value of the characteristic changes."
  },
  {
    "title": "HMCharacteristicTypePowerState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristictypepowerstate",
    "html": "Discussion\n\nThe corresponding value is a Boolean indicating the power state of an accessory. A value of true indicates that the accessory is powered on.\n\nSee Also\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch."
  },
  {
    "title": "triggerValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicevent/1617200-triggervalue",
    "html": "Discussion\n\nA value of nil corresponds to any change in the value of the characteristic.\n\nSee Also\nInspecting the event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event."
  },
  {
    "title": "HMEventTriggerActivationState.disabledNoHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtriggeractivationstate/disablednohomehub",
    "html": "See Also\nInspecting activation state\ncase disabled\nTrigger is not activated.\ncase disabledNoCompatibleHomeHub\nTrigger is not active because there is no compatible home hub.\ncase disabledNoLocationServicesAuthorization\nTrigger is not active because the user has not authorized use of location services.\ncase enabled\nThe trigger is currently active."
  },
  {
    "title": "HMEventTriggerActivationState.disabledNoCompatibleHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtriggeractivationstate/disablednocompatiblehomehub",
    "html": "See Also\nInspecting activation state\ncase disabled\nTrigger is not activated.\ncase disabledNoHomeHub\nTrigger is not active because there is no home hub.\ncase disabledNoLocationServicesAuthorization\nTrigger is not active because the user has not authorized use of location services.\ncase enabled\nThe trigger is currently active."
  },
  {
    "title": "HMMutableLocationEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmmutablelocationevent",
    "html": "Topics\nControlling the Region\nvar region: CLRegion?\nThe region on which events are triggered.\nRelationships\nInherits From\nHMLocationEvent\nConforms To\nSendable\nSee Also\nLocations\nclass HMLocationEvent\nAn event that is evaluated based on entry to or exit from a region."
  },
  {
    "title": "HMEventTriggerActivationState.enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtriggeractivationstate/enabled",
    "html": "See Also\nInspecting activation state\ncase disabled\nTrigger is not activated.\ncase disabledNoCompatibleHomeHub\nTrigger is not active because there is no compatible home hub.\ncase disabledNoHomeHub\nTrigger is not active because there is no home hub.\ncase disabledNoLocationServicesAuthorization\nTrigger is not active because the user has not authorized use of location services."
  },
  {
    "title": "characteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicevent/1617203-characteristic",
    "html": "See Also\nInspecting the event\nvar triggerValue: TriggerValueType?\nThe value of the characteristic that triggers the event."
  },
  {
    "title": "HMEventTriggerActivationState.disabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtriggeractivationstate/disabled",
    "html": "See Also\nInspecting activation state\ncase disabledNoCompatibleHomeHub\nTrigger is not active because there is no compatible home hub.\ncase disabledNoHomeHub\nTrigger is not active because there is no home hub.\ncase disabledNoLocationServicesAuthorization\nTrigger is not active because the user has not authorized use of location services.\ncase enabled\nThe trigger is currently active."
  },
  {
    "title": "init(characteristic:triggerValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicevent/1617201-init",
    "html": "Parameters\ncharacteristic\n\nThe characteristic that the event is observing.\n\ntriggerValue\n\nThe value of the characteristic that triggers the event. Specifying nil causes the event to fire every time the value of the characteristic changes.\n\nReturn Value\n\nAn initialized characteristic event for the specified characteristic and trigger value.\n\nDiscussion\n\nUse a characteristic that supports notification; otherwise this initializer throws an exception."
  },
  {
    "title": "HMLocationEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmlocationevent",
    "html": "Topics\nCreating a Location Event\ninit(region: CLRegion)\nCreates a new location event with the specified region.\nInspecting the Region\nvar region: CLRegion?\nThe region on which events are triggered.\nConfiguring the Region\nfunc updateRegion(CLRegion, completionHandler: (Error?) -> Void)\nChanges the region associated with this event.\nDeprecated\nRelationships\nInherits From\nHMEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nLocations\nclass HMMutableLocationEvent\nA mutable event that is evaluated based on entry to or exit from a region."
  },
  {
    "title": "HMEventTriggerActivationState.disabledNoLocationServicesAuthorization | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtriggeractivationstate/disablednolocationservicesauthorization",
    "html": "See Also\nInspecting activation state\ncase disabled\nTrigger is not activated.\ncase disabledNoCompatibleHomeHub\nTrigger is not active because there is no compatible home hub.\ncase disabledNoHomeHub\nTrigger is not active because there is no home hub.\ncase enabled\nThe trigger is currently active."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615253-name",
    "html": "Discussion\n\nUse the updateName(_:completionHandler:) method to change the name to a value chosen by the user.\n\nSee Also\nIdentifying an Accessory\nfunc updateName(String, completionHandler: (Error?) -> Void)\nChanges the name of the accessory.\nvar uniqueIdentifier: UUID\nA unique identifier for the accessory.\nvar identifier: UUID\nA unique identifier for the accessory.\nDeprecated"
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615261-uniqueidentifier",
    "html": "See Also\nIdentifying an Accessory\nvar name: String\nThe name of the accessory.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nChanges the name of the accessory.\nvar identifier: UUID\nA unique identifier for the accessory.\nDeprecated"
  },
  {
    "title": "HMServiceTypeCameraRTPStreamManagement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypecamerartpstreammanagement",
    "html": "See Also\nVideo and Audio\nlet HMServiceTypeCameraControl: String\nA camera control service.\nlet HMServiceTypeMicrophone: String\nA microphone service.\nlet HMServiceTypeSpeaker: String\nAn audio speaker service."
  },
  {
    "title": "cameraProfiles | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1650056-cameraprofiles",
    "html": "Discussion\n\nAn accessory can contain one or more cameras. Each camera is represented as a an HMCameraProfile instance. If the accessory doesn’t contain a camera, this property is nil.\n\nSee Also\nManaging camera profiles\nstruct CameraView\nA SwiftUI view into which a video stream or an image snapshot is rendered.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera.\nclass HMCameraView\nThe view into which a video stream or an image snapshot is rendered."
  },
  {
    "title": "HMServiceTypeCameraControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypecameracontrol",
    "html": "See Also\nVideo and Audio\nlet HMServiceTypeCameraRTPStreamManagement: String\nA stream management service.\nlet HMServiceTypeMicrophone: String\nA microphone service.\nlet HMServiceTypeSpeaker: String\nAn audio speaker service."
  },
  {
    "title": "HMServiceTypeMicrophone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypemicrophone",
    "html": "See Also\nVideo and Audio\nlet HMServiceTypeCameraControl: String\nA camera control service.\nlet HMServiceTypeCameraRTPStreamManagement: String\nA stream management service.\nlet HMServiceTypeSpeaker: String\nAn audio speaker service."
  },
  {
    "title": "HMServiceTypeGarageDoorOpener | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypegaragedooropener",
    "html": "See Also\nLocks and Openers\nlet HMServiceTypeDoor: String\nA door service.\nlet HMServiceTypeDoorbell: String\nA doorbell service.\nlet HMServiceTypeLockManagement: String\nA lock management service.\nlet HMServiceTypeLockMechanism: String\nA lock mechanism service."
  },
  {
    "title": "HMServiceTypeMotionSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypemotionsensor",
    "html": "See Also\nSafety and Security\nlet HMServiceTypeOccupancySensor: String\nAn occupancy sensor service.\nlet HMServiceTypeSecuritySystem: String\nA security system service.\nlet HMServiceTypeContactSensor: String\nA contact sensor service."
  },
  {
    "title": "targetValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicwriteaction/1621973-targetvalue",
    "html": "See Also\nNew Methods\ninit(characteristic: HMCharacteristic, targetValue: TargetValueType)\nInitialize a characteristic write action with a specified characteristic and target value.\nvar characteristic: HMCharacteristic\nThe characteristic whose value is to be written by the action.\nfunc updateTargetValue(TargetValueType, completionHandler: (Error?) -> Void)\nUpdates the target value."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620722-updatename",
    "html": "Parameters\nname\n\nThe new name. Must be unique within the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging Triggers\nvar name: String\nThe name of the trigger.\nvar isEnabled: Bool\nState of the trigger.\nfunc enable(Bool, completionHandler: (Error?) -> Void)\nChanges the enabled state of the trigger.\nvar lastFireDate: Date?\nThe last time this trigger fired.\nDeprecated\nvar uniqueIdentifier: UUID\nA unique identifier for this trigger."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmuser/1620011-name",
    "html": "Discussion\n\nUser names must be unique.\n\nSee Also\nGetting Information About the User\nvar uniqueIdentifier: UUID\nA unique identifier for the user.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "HMError.Code.insufficientPrivileges | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/insufficientprivileges",
    "html": "See Also\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure."
  },
  {
    "title": "accessoryDidUpdateName(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/1615255-accessorydidupdatename",
    "html": "Parameters\naccessory\n\nThe accessory whose name changed.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "home(_:didEncounterError:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620247-home",
    "html": "Parameters\nhome\n\nThe home.\n\nerror\n\nThe error encountered by the accessory.\n\naccessory\n\nThe accessory that encountered the error.\n\nDiscussion\n\nThe delegate should check whether the accessory is blocked.\n\nSee Also\nObserving Accessories\nfunc home(HMHome, didUnblockAccessory: HMAccessory)\nTells the delegate that an accessory has been unblocked."
  },
  {
    "title": "accessory(_:didUpdateNameFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/1615263-accessory",
    "html": "Parameters\naccessory\n\nThe accessory with an updated service name.\n\nservice\n\nThe service whose name changed.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "accessoryDidUpdateServices(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/1615269-accessorydidupdateservices",
    "html": "Parameters\naccessory\n\nThe accessory whose list of services has been updated.\n\nDiscussion\n\nAccessories provide their services via the services property.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "home(_:didUpdate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620219-home",
    "html": "Parameters\nhome\n\nThe home.\n\ntrigger\n\nThe trigger that was updated.\n\nDiscussion\n\nEnabling or disabling a trigger or modifying its action sets will cause this method to be called.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620258-home",
    "html": "Parameters\nhome\n\nThe home.\n\ntrigger\n\nThe new trigger.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "accessoryDidUpdateReachability(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/1615273-accessorydidupdatereachability",
    "html": "Parameters\naccessory\n\nThe accessory whose reachability has changed.\n\nDiscussion\n\nAccessories expose their reachability via the isReachable property.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "home(_:didUpdateActionsFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620259-home",
    "html": "Parameters\nhome\n\nThe home.\n\nactionSet\n\nThe updated action set.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "home(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620267-home",
    "html": "Parameters\nhome\n\nThe home.\n\nactionSet\n\nThe action set that was removed.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620277-home",
    "html": "Parameters\nhome\n\nThe home.\n\nactionSet\n\nThe new action set.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "homeDidUpdateAccessControl(forCurrentUser:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/2881839-homedidupdateaccesscontrol",
    "html": "Parameters\nhome\n\nThe home.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didAdd:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620274-home",
    "html": "Parameters\nhome\n\nThe home.\n\nservice\n\nThe service that was added.\n\ngroup\n\nThe group to which the service was added.\n\nSee Also\nObserving Service Configuration\nfunc home(HMHome, didAdd: HMServiceGroup)\nTells the delegate that a home added a service group.\nfunc home(HMHome, didUpdateNameFor: HMServiceGroup)\nTells the delegate that a home updated the name of a service group.\nfunc home(HMHome, didRemove: HMService, from: HMServiceGroup)\nTells the delegate that a home removed a service from a service group.\nfunc home(HMHome, didRemove: HMServiceGroup)\nTells the delegate that a home removed a service group."
  },
  {
    "title": "home(_:didUpdate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/2881835-home",
    "html": "Parameters\nhome\n\nThe home.\n\nhomeHubState\n\nThe new home hub state.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didRemove:from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620242-home",
    "html": "Parameters\nhome\n\nThe home.\n\nservice\n\nThe service that was removed.\n\ngroup\n\nThe group from which the service was removed.\n\nSee Also\nObserving Service Configuration\nfunc home(HMHome, didAdd: HMServiceGroup)\nTells the delegate that a home added a service group.\nfunc home(HMHome, didUpdateNameFor: HMServiceGroup)\nTells the delegate that a home updated the name of a service group.\nfunc home(HMHome, didAdd: HMService, to: HMServiceGroup)\nTells the delegate that a home added a service to a service group.\nfunc home(HMHome, didRemove: HMServiceGroup)\nTells the delegate that a home removed a service group."
  },
  {
    "title": "home(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620226-home",
    "html": "Parameters\nhome\n\nThe home.\n\ngroup\n\nThe service group that was removed.\n\nSee Also\nObserving Service Configuration\nfunc home(HMHome, didAdd: HMServiceGroup)\nTells the delegate that a home added a service group.\nfunc home(HMHome, didUpdateNameFor: HMServiceGroup)\nTells the delegate that a home updated the name of a service group.\nfunc home(HMHome, didAdd: HMService, to: HMServiceGroup)\nTells the delegate that a home added a service to a service group.\nfunc home(HMHome, didRemove: HMService, from: HMServiceGroup)\nTells the delegate that a home removed a service from a service group."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620211-home",
    "html": "Parameters\nhome\n\nThe home.\n\ngroup\n\nThe new service group.\n\nSee Also\nObserving Service Configuration\nfunc home(HMHome, didUpdateNameFor: HMServiceGroup)\nTells the delegate that a home updated the name of a service group.\nfunc home(HMHome, didAdd: HMService, to: HMServiceGroup)\nTells the delegate that a home added a service to a service group.\nfunc home(HMHome, didRemove: HMService, from: HMServiceGroup)\nTells the delegate that a home removed a service from a service group.\nfunc home(HMHome, didRemove: HMServiceGroup)\nTells the delegate that a home removed a service group."
  },
  {
    "title": "Accessory Category Types | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategory/accessory_category_types",
    "html": "Overview\n\nAn HMAccessoryCategory instance’s read-only categoryType property contains one of the values listed below to tell you what the associated accessory does.\n\nDon’t confuse these values with the service types found in Accessory Service Types. Despite the similarities, they describe different things. Accessories are the physical objects that the user installs in the home, like a garage door opener. Accessories belong to one of the categories listed here, like HMAccessoryCategoryTypeGarageDoorOpener.\n\nAccessories have one or more services that perform tasks. The garage door opener accessory has a garage door opener service with service type HMServiceTypeGarageDoorOpener. The same accessory might also have an attached light providing a light bulb service with service type HMServiceTypeLightbulb.\n\nTopics\nLight\nlet HMAccessoryCategoryTypeLightbulb: String\nA lightbulb accessory.\nPower and switches\nlet HMAccessoryCategoryTypeOutlet: String\nAn outlet accessory.\nlet HMAccessoryCategoryTypeProgrammableSwitch: String\nA programmable switch accessory.\nlet HMAccessoryCategoryTypeSwitch: String\nA switch accessory.\nAir quality and smoke detection\nlet HMAccessoryCategoryTypeFan: String\nA fan accessory.\nlet HMAccessoryCategoryTypeAirPurifier: String\nAn air purifier accessory.\nTemperature and humidity\nlet HMAccessoryCategoryTypeThermostat: String\nA thermostat accessory.\nlet HMAccessoryCategoryTypeAirConditioner: String\nAn air conditioner accessory.\nlet HMAccessoryCategoryTypeAirDehumidifier: String\nA dehumidifier accessory.\nlet HMAccessoryCategoryTypeAirHeater: String\nAn air heater accessory.\nlet HMAccessoryCategoryTypeAirHumidifier: String\nA humidifier accessory.\nWindows\nlet HMAccessoryCategoryTypeWindow: String\nA window accessory.\nlet HMAccessoryCategoryTypeWindowCovering: String\nA window covering accessory.\nLocks and openers\nlet HMAccessoryCategoryTypeDoor: String\nA door accessory.\nlet HMAccessoryCategoryTypeDoorLock: String\nA door lock accessory.\nlet HMAccessoryCategoryTypeGarageDoorOpener: String\nA garage door opener accessory.\nlet HMAccessoryCategoryTypeVideoDoorbell: String\nA video doorbell accessory.\nSafety and security\nlet HMAccessoryCategoryTypeSensor: String\nA sensor accessory.\nlet HMAccessoryCategoryTypeSecuritySystem: String\nA security system accessory.\nCameras\nlet HMAccessoryCategoryTypeIPCamera: String\nA networked camera accessory.\nWater\nlet HMAccessoryCategoryTypeSprinkler: String\nA sprinkler system accessory.\nlet HMAccessoryCategoryTypeFaucet: String\nA faucet accessory.\nlet HMAccessoryCategoryTypeShowerHead: String\nA shower head accessory.\nNetwork\nlet HMAccessoryCategoryTypeBridge: String\nA bridge accessory.\nlet HMAccessoryCategoryTypeRangeExtender: String\nA range extender accessory.\nUncategorized\nlet HMAccessoryCategoryTypeOther: String\nAn uncategorized accessory.\nSee Also\nReading the category type\nvar categoryType: String\nThe category to which this accessory belongs."
  },
  {
    "title": "homeDidUpdateSupportedFeatures(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/3392957-homedidupdatesupportedfeatures",
    "html": "Parameters\nhome\n\nThe home for which supported features changed.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620221-home",
    "html": "Parameters\nhome\n\nThe home.\n\nzone\n\nThe zone that was removed.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didUpdateNameFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620228-home",
    "html": "Parameters\nhome\n\nThe home.\n\nzone\n\nThe zone whose name was changed.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620217-home",
    "html": "Parameters\nhome\n\nThe home.\n\nuser\n\nThe user that was added.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "HMServiceTypeAirPurifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeairpurifier",
    "html": "See Also\nAir Quality and Smoke Detection\nlet HMServiceTypeAirQualitySensor: String\nAn air quality sensor service.\nlet HMServiceTypeCarbonDioxideSensor: String\nA carbon dioxide sensor service.\nlet HMServiceTypeCarbonMonoxideSensor: String\nA carbon monoxide sensor service.\nlet HMServiceTypeSmokeSensor: String\nA smoke sensor service."
  },
  {
    "title": "HMServiceTypeSmokeSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypesmokesensor",
    "html": "See Also\nAir Quality and Smoke Detection\nlet HMServiceTypeAirPurifier: String\nAn air purifier service.\nlet HMServiceTypeAirQualitySensor: String\nAn air quality sensor service.\nlet HMServiceTypeCarbonDioxideSensor: String\nA carbon dioxide sensor service.\nlet HMServiceTypeCarbonMonoxideSensor: String\nA carbon monoxide sensor service."
  },
  {
    "title": "HMServiceTypeAirQualitySensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeairqualitysensor",
    "html": "See Also\nAir Quality and Smoke Detection\nlet HMServiceTypeAirPurifier: String\nAn air purifier service.\nlet HMServiceTypeCarbonDioxideSensor: String\nA carbon dioxide sensor service.\nlet HMServiceTypeCarbonMonoxideSensor: String\nA carbon monoxide sensor service.\nlet HMServiceTypeSmokeSensor: String\nA smoke sensor service."
  },
  {
    "title": "maxLength | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621258-maxlength",
    "html": "Discussion\n\nThis value only applies to characteristics with a string type.\n\nSee Also\nBounding the value\nvar validValues: [NSNumber]?\nThe subset of valid values supported by the characteristic when the format is of type unsigned integer.\nvar minimumValue: NSNumber?\nThe minimum value for the characteristic.\nvar maximumValue: NSNumber?\nThe maximum value for the characteristic.\nvar stepValue: NSNumber?\nThe minimum interval between values for the characteristic."
  },
  {
    "title": "minimumValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621256-minimumvalue",
    "html": "Discussion\n\nThis value only applies to characteristics with a number type.\n\nSee Also\nBounding the value\nvar validValues: [NSNumber]?\nThe subset of valid values supported by the characteristic when the format is of type unsigned integer.\nvar maximumValue: NSNumber?\nThe maximum value for the characteristic.\nvar stepValue: NSNumber?\nThe minimum interval between values for the characteristic.\nvar maxLength: NSNumber?\nThe maximum number of UTF-8 characters allowed in a characteristic that uses a string format."
  },
  {
    "title": "stepValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621263-stepvalue",
    "html": "Discussion\n\nThis value only applies to characteristics with a number type.\n\nSee Also\nBounding the value\nvar validValues: [NSNumber]?\nThe subset of valid values supported by the characteristic when the format is of type unsigned integer.\nvar minimumValue: NSNumber?\nThe minimum value for the characteristic.\nvar maximumValue: NSNumber?\nThe maximum value for the characteristic.\nvar maxLength: NSNumber?\nThe maximum number of UTF-8 characters allowed in a characteristic that uses a string format."
  },
  {
    "title": "maximumValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621261-maximumvalue",
    "html": "Discussion\n\nThis value only applies to characteristics with a number type.\n\nSee Also\nBounding the value\nvar validValues: [NSNumber]?\nThe subset of valid values supported by the characteristic when the format is of type unsigned integer.\nvar minimumValue: NSNumber?\nThe minimum value for the characteristic.\nvar stepValue: NSNumber?\nThe minimum interval between values for the characteristic.\nvar maxLength: NSNumber?\nThe maximum number of UTF-8 characters allowed in a characteristic that uses a string format."
  },
  {
    "title": "format | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621266-format",
    "html": "Discussion\n\nThe format property tells you what kind of data the characteristic’s value contains. For example, you can extend the HMCharacteristic class with a computed property that reports whether a given characteristic is a floating point number:\n\nextension HMCharacteristic {\n    var isFloat: Bool {\n        return metadata?.format == HMCharacteristicMetadataFormatFloat\n    }\n}\n\n\nSee Characteristic Data Formats for the list of possible formats.\n\nSee Also\nFormatting the value\nCharacteristic Data Formats\nConstants for identifying the data format of characteristic values."
  },
  {
    "title": "HMSignificantTimeEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmsignificanttimeevent",
    "html": "Overview\n\nUse this class to represent an event that fires at a time relative to a significant event, for example \"30 minutes before sunset\".\n\nTopics\nCreating a significant time event\ninit(significantEvent: HMSignificantEvent, offset: DateComponents?)\nCreates a new significant time event with the specified significant event and offset.\nInspecting a significant time event\nvar significantEvent: HMSignificantEvent\nThe significant time-based event that is used to calculate when the event fires.\nvar offset: DateComponents?\nThe offset from the significant event that the event fires at.\nRelationships\nInherits From\nHMTimeEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nSignificant events\nstruct HMSignificantEvent\nAn event that represents significant time-based events, including sunrise and sunset.\nclass HMMutableSignificantTimeEvent\nA mutable event that fires at the specified temporal offset to a significant event."
  },
  {
    "title": "HMHomeHubState.notAvailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomehubstate/notavailable",
    "html": "See Also\nSpecifying the State\ncase connected\nThe home hub is connected.\ncase disconnected\nThe home hub is disconnected."
  },
  {
    "title": "units | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata/1621253-units",
    "html": "Discussion\n\nThe units property tells you how to use the corresponding characteristic’s value in calculations or how to format it for presentation. For example, you can extend the HMCharacteristic class with a computed property that returns the appropriate symbol to accompany the value in printed output:\n\nextension HMCharacteristic {\n    var symbol: String {\n        guard let units = metadata?.units else { return \"\" }\n\n\n        switch units {\n        case HMCharacteristicMetadataUnitsPercentage:              return \"%\"\n        case HMCharacteristicMetadataUnitsPartsPerMillion:         return \"ppm\"\n        case HMCharacteristicMetadataUnitsCelsius:                 return \"°C\"\n        case HMCharacteristicMetadataUnitsFahrenheit:              return \"°F\"\n        case HMCharacteristicMetadataUnitsSeconds:                 return \"s\"\n        case HMCharacteristicMetadataUnitsLux:                     return \"lx\"\n        case HMCharacteristicMetadataUnitsMicrogramsPerCubicMeter: return \"μg/m³\"\n        case HMCharacteristicMetadataUnitsArcDegree:               return \"°\"\n        default:                                                   return \"\"\n        }\n    }\n}\n\n\nSee Characteristic Units for the complete list of possible units.\n\nSee Also\nSpecifying units\nCharacteristic Units\nDescriptions of the units of a characteristic."
  },
  {
    "title": "HMHomeHubState.connected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomehubstate/connected",
    "html": "See Also\nSpecifying the State\ncase disconnected\nThe home hub is disconnected.\ncase notAvailable\nNo home hub is present."
  },
  {
    "title": "init(characteristic:targetValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicwriteaction/1621976-init",
    "html": "Parameters\ncharacteristic\n\nThe characteristic.\n\ntargetValue\n\nThe target value for the characteristic.\n\nReturn Value\n\nA newly initialized characteristic write action object with the specified characteristic and target value.\n\nSee Also\nNew Methods\nvar characteristic: HMCharacteristic\nThe characteristic whose value is to be written by the action.\nvar targetValue: TargetValueType\nThe value that will be written to the characteristic when the action is executed.\nfunc updateTargetValue(TargetValueType, completionHandler: (Error?) -> Void)\nUpdates the target value.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "HMHomeHubState.disconnected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomehubstate/disconnected",
    "html": "See Also\nSpecifying the State\ncase connected\nThe home hub is connected.\ncase notAvailable\nNo home hub is present."
  },
  {
    "title": "HMPresenceEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresenceevent",
    "html": "Topics\nCreating a presence event\ninit(presenceEventType: HMPresenceEventType, presenceUserType: HMPresenceEventUserType)\nCreates a new presence event with the specified event and user presence types.\nInspecting a presence event\nvar presenceEventType: HMPresenceEventType\nThe event type that triggers the presence event.\nvar presenceUserType: HMPresenceEventUserType\nThe user type whose presence triggers the event.\nRelationships\nInherits From\nHMEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nUser presence\nclass HMMutablePresenceEvent\nA mutable event that triggers based on the presence of users in the home.\nenum HMPresenceEventType\nThe user presence type that triggers a presence event.\nenum HMPresenceEventUserType\nThe group of users that triggers a presence event."
  },
  {
    "title": "characteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicwriteaction/1621974-characteristic",
    "html": "See Also\nNew Methods\ninit(characteristic: HMCharacteristic, targetValue: TargetValueType)\nInitialize a characteristic write action with a specified characteristic and target value.\nvar targetValue: TargetValueType\nThe value that will be written to the characteristic when the action is executed.\nfunc updateTargetValue(TargetValueType, completionHandler: (Error?) -> Void)\nUpdates the target value."
  },
  {
    "title": "HMServiceTypeTemperatureSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypetemperaturesensor",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "homeManager(_:didReceiveAddAccessoryRequest:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate/3327330-homemanager",
    "html": "Parameters\nmanager\n\nThe home manager making the request.\n\nrequest\n\nA description of the accessory to add.\n\nDiscussion\n\nHomeKit calls this method when it needs help adding an accessory to a home, which typically occurs when the accessory requires explicit user authentication that HomeKit can’t negotiate. HomeKit asks the accessory manufacturer’s app, which it locates using information provided by the accessory, to complete the authentication.\n\nIf you manufacture an accessory like this, handle the homeManager(_:didReceiveAddAccessoryRequest:) call in your app by creating an HMAccessoryOwnershipToken instance in a way that’s appropriate for your accessory, outside of HomeKit:\n\nlet data = negotiateTokenData(accessory: request.accessoryName)\nguard let token = HMAccessoryOwnershipToken(data: data) else { return }\n\n\nUse the resulting token to create an HMAccessorySetupPayload instance. If the request’s requiresSetupPayloadURL flag is true, get the payload URL corresponding to the named accessory, and include that in the setup payload as well:\n\nvar payload: HMAccessorySetupPayload?\nif request.requiresSetupPayloadURL {\n    let payloadURL = getPayloadURL(accessory: request.accessoryName)\n    payload = request.makePayload(url: payloadURL, ownershipToken: token)\n} else {\n    payload = request.makePayload(ownershipToken: token)\n}\n\n\nComplete the setup by calling the home’s addAndSetupAccessories(with:completionHandler:) method with the payload:\n\nif let payload = payload {\n    request.home.addAndSetupAccessories(with: payload) { accessories, error in\n        // Handle errors.\n    }\n}\n\nSee Also\nAdding accessories\nclass HMAddAccessoryRequest\nA request to add an accessory to a particular home."
  },
  {
    "title": "homeManager(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate/1616755-homemanager",
    "html": "Parameters\nmanager\n\nThe home manager that added the home.\n\nhome\n\nThe newly added home.\n\nSee Also\nAdding and removing homes\nfunc homeManagerDidUpdateHomes(HMHomeManager)\nTells the delegate that the home manager updated its collection of homes.\nfunc homeManager(HMHomeManager, didRemove: HMHome)\nTells the delegate that the home manager removed a home.\nfunc homeManagerDidUpdatePrimaryHome(HMHomeManager)\nTells the delegate that the home manager updated its primary home."
  },
  {
    "title": "homeManager(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate/1616753-homemanager",
    "html": "Parameters\nmanager\n\nThe home manager that removed the home.\n\nhome\n\nThe removed home.\n\nSee Also\nAdding and removing homes\nfunc homeManagerDidUpdateHomes(HMHomeManager)\nTells the delegate that the home manager updated its collection of homes.\nfunc homeManager(HMHomeManager, didAdd: HMHome)\nTells the delegate that the home manager added a home.\nfunc homeManagerDidUpdatePrimaryHome(HMHomeManager)\nTells the delegate that the home manager updated its primary home."
  },
  {
    "title": "HMServiceTypeLabel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypelabel",
    "html": "See Also\nInformation\nlet HMServiceTypeAccessoryInformation: String\nAn accessory information service."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615281-delegate",
    "html": "See Also\nTracking changes to an accessory\nprotocol HMAccessoryDelegate\nA set of methods that defines the communication method for state updates from accessories to their delegates."
  },
  {
    "title": "profiles | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/2919700-profiles",
    "html": "See Also\nManaging accessory profiles\nclass HMAccessoryProfile\nA profile that certain accessories implement.\nclass HMNetworkConfigurationProfile\nA profile that provides information about network protection for an accessory.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera."
  },
  {
    "title": "HMCameraView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraview",
    "html": "Topics\nGetting the Camera Source\nvar cameraSource: HMCameraSource?\nclass HMCameraSource\nAn abstract class for a camera’s data source.\nRelationships\nInherits From\nUIView\nSee Also\nManaging camera profiles\nstruct CameraView\nA SwiftUI view into which a video stream or an image snapshot is rendered.\nvar cameraProfiles: [HMCameraProfile]?\nAn array of camera profiles implemented by the accessory.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615284-identifier",
    "html": "Deprecated\n\nUse uniqueIdentifier instead.\n\nDiscussion\n\nAn identifier is stable for as long as an accessory is in a home. If an accessory is removed from a home, it will get a new identifier when it is next added to a home.\n\nSee Also\nIdentifying an Accessory\nvar name: String\nThe name of the accessory.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nChanges the name of the accessory.\nvar uniqueIdentifier: UUID\nA unique identifier for the accessory."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615277-updatename",
    "html": "Parameters\nname\n\nThe new name.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nIdentifying an Accessory\nvar name: String\nThe name of the accessory.\nvar uniqueIdentifier: UUID\nA unique identifier for the accessory.\nvar identifier: UUID\nA unique identifier for the accessory.\nDeprecated"
  },
  {
    "title": "HMServiceTypeAccessoryInformation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeaccessoryinformation",
    "html": "See Also\nInformation\nlet HMServiceTypeLabel: String\nA label namespace service used when an accessory supports multiple services of the same type."
  },
  {
    "title": "room | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615282-room",
    "html": "Discussion\n\nAssign accessories to new rooms using assignAccessory(_:to:completionHandler:).\n\nSee Also\nLocating an accessory\nclass HMRoom\nThe smallest subdivision of a home’s space."
  },
  {
    "title": "HMServiceTypeContactSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypecontactsensor",
    "html": "See Also\nSafety and Security\nlet HMServiceTypeMotionSensor: String\nA motion sensor service.\nlet HMServiceTypeOccupancySensor: String\nAn occupancy sensor service.\nlet HMServiceTypeSecuritySystem: String\nA security system service."
  },
  {
    "title": "HMServiceTypeOccupancySensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeoccupancysensor",
    "html": "See Also\nSafety and Security\nlet HMServiceTypeMotionSensor: String\nA motion sensor service.\nlet HMServiceTypeSecuritySystem: String\nA security system service.\nlet HMServiceTypeContactSensor: String\nA contact sensor service."
  },
  {
    "title": "HMServiceTypeSecuritySystem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypesecuritysystem",
    "html": "See Also\nSafety and Security\nlet HMServiceTypeMotionSensor: String\nA motion sensor service.\nlet HMServiceTypeOccupancySensor: String\nAn occupancy sensor service.\nlet HMServiceTypeContactSensor: String\nA contact sensor service."
  },
  {
    "title": "HMServiceTypeLockMechanism | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypelockmechanism",
    "html": "See Also\nLocks and Openers\nlet HMServiceTypeDoor: String\nA door service.\nlet HMServiceTypeDoorbell: String\nA doorbell service.\nlet HMServiceTypeGarageDoorOpener: String\nA garage door opener service.\nlet HMServiceTypeLockManagement: String\nA lock management service."
  },
  {
    "title": "HMAccessorySetupPayload | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuppayload",
    "html": "Overview\n\nThe setup payload provides a URL to authenticate an accessory. Typically, the URL comes from scanning a QR code on the accessory. Use a setup payload to authenticate devices that are already deployed, for which scanning a QR code would be difficult, or if you need to provide an optional ownership token that you negotiate with the accessory outside of HomeKit.\n\nFor details about the payload’s content, please join the MFi Program.\n\nTopics\nCreating a Payload\ninit?(url: URL?)\nCreates an accessory setup payload.\ninit?(url: URL, ownershipToken: HMAccessoryOwnershipToken?)\nCreates an accessory setup payload instance that includes an ownership token.\nclass HMAccessoryOwnershipToken\nAuthentication data that your app provides when adding an accessory to a home.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable"
  },
  {
    "title": "HMAccessoryCategoryTypeGarageDoorOpener | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategorytypegaragedooropener",
    "html": "See Also\nLocks and openers\nlet HMAccessoryCategoryTypeDoor: String\nA door accessory.\nlet HMAccessoryCategoryTypeDoorLock: String\nA door lock accessory.\nlet HMAccessoryCategoryTypeVideoDoorbell: String\nA video doorbell accessory."
  },
  {
    "title": "homeDidUpdateName(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620233-homedidupdatename",
    "html": "Parameters\nhome\n\nThe home whose name has changed.\n\nSee Also\nObserving Home Configuration\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "HMServiceTypeLockManagement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypelockmanagement",
    "html": "See Also\nLocks and Openers\nlet HMServiceTypeDoor: String\nA door service.\nlet HMServiceTypeDoorbell: String\nA doorbell service.\nlet HMServiceTypeGarageDoorOpener: String\nA garage door opener service.\nlet HMServiceTypeLockMechanism: String\nA lock mechanism service."
  },
  {
    "title": "HMServiceTypeDoor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypedoor",
    "html": "See Also\nLocks and Openers\nlet HMServiceTypeDoorbell: String\nA doorbell service.\nlet HMServiceTypeGarageDoorOpener: String\nA garage door opener service.\nlet HMServiceTypeLockManagement: String\nA lock management service.\nlet HMServiceTypeLockMechanism: String\nA lock mechanism service."
  },
  {
    "title": "HMServiceTypeDoorbell | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypedoorbell",
    "html": "See Also\nLocks and Openers\nlet HMServiceTypeDoor: String\nA door service.\nlet HMServiceTypeGarageDoorOpener: String\nA garage door opener service.\nlet HMServiceTypeLockManagement: String\nA lock management service.\nlet HMServiceTypeLockMechanism: String\nA lock mechanism service."
  },
  {
    "title": "HMServiceTypeLeakSensor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeleaksensor",
    "html": "See Also\nWater\nlet HMServiceTypeFaucet: String\nA faucet service.\nlet HMServiceTypeValve: String\nA valve service.\nlet HMServiceTypeIrrigationSystem: String\nAn irrigation system service."
  },
  {
    "title": "updateTargetValue(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicwriteaction/1621972-updatetargetvalue",
    "html": "Parameters\ntargetValue\n\nThe new target value.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateTargetValue(_ targetValue: TargetValueType) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nNew Methods\ninit(characteristic: HMCharacteristic, targetValue: TargetValueType)\nInitialize a characteristic write action with a specified characteristic and target value.\nvar characteristic: HMCharacteristic\nThe characteristic whose value is to be written by the action.\nvar targetValue: TargetValueType\nThe value that will be written to the characteristic when the action is executed."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620717-name",
    "html": "Discussion\n\nTrigger names should be set by the user.\n\nSee Also\nManaging Triggers\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the trigger.\nvar isEnabled: Bool\nState of the trigger.\nfunc enable(Bool, completionHandler: (Error?) -> Void)\nChanges the enabled state of the trigger.\nvar lastFireDate: Date?\nThe last time this trigger fired.\nDeprecated\nvar uniqueIdentifier: UUID\nA unique identifier for this trigger.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "lastFireDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620715-lastfiredate",
    "html": "Discussion\n\nnil if the trigger has never fired.\n\nSee Also\nManaging Triggers\nvar name: String\nThe name of the trigger.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the trigger.\nvar isEnabled: Bool\nState of the trigger.\nfunc enable(Bool, completionHandler: (Error?) -> Void)\nChanges the enabled state of the trigger.\nvar uniqueIdentifier: UUID\nA unique identifier for this trigger."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620720-uniqueidentifier",
    "html": "See Also\nManaging Triggers\nvar name: String\nThe name of the trigger.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the trigger.\nvar isEnabled: Bool\nState of the trigger.\nfunc enable(Bool, completionHandler: (Error?) -> Void)\nChanges the enabled state of the trigger.\nvar lastFireDate: Date?\nThe last time this trigger fired.\nDeprecated"
  },
  {
    "title": "isEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620713-isenabled",
    "html": "Discussion\n\nTriggers that are not enabled never fire.\n\nSee Also\nManaging Triggers\nvar name: String\nThe name of the trigger.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the trigger.\nfunc enable(Bool, completionHandler: (Error?) -> Void)\nChanges the enabled state of the trigger.\nvar lastFireDate: Date?\nThe last time this trigger fired.\nDeprecated\nvar uniqueIdentifier: UUID\nA unique identifier for this trigger."
  },
  {
    "title": "removeActionSet(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620718-removeactionset",
    "html": "Parameters\nactionSet\n\nThe action set to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeActionSet(_ actionSet: HMActionSet) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging Action Sets\nvar actionSets: [HMActionSet]\nArray of all action sets that will be executed by the trigger.\nfunc addActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nAdds an action set to the trigger."
  },
  {
    "title": "actionSets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620721-actionsets",
    "html": "Discussion\n\nAction sets are instances of HMActionSet.\n\nSee Also\nManaging Action Sets\nfunc addActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nAdds an action set to the trigger.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the trigger."
  },
  {
    "title": "addActionSet(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620716-addactionset",
    "html": "Parameters\nactionSet\n\nThe new action set.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addActionSet(_ actionSet: HMActionSet) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging Action Sets\nvar actionSets: [HMActionSet]\nArray of all action sets that will be executed by the trigger.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the trigger."
  },
  {
    "title": "accessory(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/2919699-accessory",
    "html": "Parameters\naccessory\n\nThe accessory that has received a new profile.\n\nprofile\n\nThe newly added profile.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "accessory(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/2919698-accessory",
    "html": "Parameters\naccessory\n\nThe accessory from which the profile is removed.\n\nprofile\n\nThe removed profile.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "accessory(_:didUpdateFirmwareVersion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/2888351-accessory",
    "html": "Parameters\naccessory\n\nThe accessory whose firmware version has changed.\n\nfirmwareVersion\n\nThe new firmware version for the accessory.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmroom/1618289-updatename",
    "html": "Parameters\nname\n\nThe new name which must not be nil.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nIdentifying a room\nvar name: String\nThe name of the room.\nvar uniqueIdentifier: UUID\nThe unique identifier for a room."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmuser/1620013-uniqueidentifier",
    "html": "See Also\nGetting Information About the User\nvar name: String\nThe name of the user."
  },
  {
    "title": "accessory(_:didUpdateAssociatedServiceTypeFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/1615267-accessory",
    "html": "Parameters\naccessory\n\nThe accessory.\n\nservice\n\nThe service with a changed service type.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "home(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620262-home",
    "html": "Parameters\nhome\n\nThe home.\n\ntrigger\n\nThe trigger that was removed.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger."
  },
  {
    "title": "home(_:didUnblockAccessory:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620252-home",
    "html": "Parameters\nhome\n\nThe home.\n\naccessory\n\nThe accessory that was unblocked.\n\nSee Also\nObserving Accessories\nfunc home(HMHome, didEncounterError: Error, for: HMAccessory)\nTells the delegate that a configured accessory encountered an error."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmroom/1618291-uniqueidentifier",
    "html": "See Also\nIdentifying a room\nvar name: String\nThe name of the room.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the room."
  },
  {
    "title": "accessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmroom/1618288-accessories",
    "html": "Discussion\n\nYou assign accessories to a room using the assignAccessory(_:to:completionHandler:) method of HMHome."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmroom/1618287-name",
    "html": "Discussion\n\nAllow the user to choose room names. Room names must be unique within a home.\n\nSee Also\nIdentifying a room\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the room.\nvar uniqueIdentifier: UUID\nThe unique identifier for a room."
  },
  {
    "title": "home(_:didUpdateNameFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620248-home",
    "html": "Parameters\nhome\n\nThe home.\n\nactionSet\n\nThe action set whose name changed.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "home(_:didUpdateNameFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620239-home",
    "html": "Parameters\nhome\n\nThe home.\n\ntrigger\n\nThe trigger whose name was changed.\n\nSee Also\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger."
  },
  {
    "title": "HMServiceTypeHeaterCooler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeheatercooler",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "HMServiceTypeHumidifierDehumidifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypehumidifierdehumidifier",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "HMServiceTypeFan | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypefan",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "HMServiceTypeVentilationFan | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeventilationfan",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service."
  },
  {
    "title": "HMServiceTypeThermostat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypethermostat",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "addAccessory(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620216-addaccessory",
    "html": "Parameters\naccessory\n\nThe accessory to add to the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addAccessory(_ accessory: HMAccessory) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nYou discover accessories to add to a home using the HMAccessoryBrowser class. Newly added accessories are automatically added to the room returned by roomForEntireHome().\n\nImportant\n\nTo provide a consistent user experience, use the addAndSetupAccessories(completionHandler:) method instead.\n\nSee Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "CameraView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/cameraview",
    "html": "Topics\nCreating a camera view\ninit(source: HMCameraSource)\nCreates a new camera view using the given source.\nclass HMCameraSource\nAn abstract class for a camera’s data source.\nInstance Methods\nfunc accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<CameraView, AccessibilityAttachmentModifier>\nfunc accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<CameraView, AccessibilityAttachmentModifier>\nfunc allowedDynamicRange(Image.DynamicRange?) -> View\nfunc animation<V>(Animation?, body: (PlaceholderContentView<CameraView>) -> V) -> View\nfunc badgeProminence(BadgeProminence) -> View\nfunc buttonRepeatBehavior(ButtonRepeatBehavior) -> View\nfunc colorEffect(Shader, isEnabled: Bool) -> View\nfunc containerBackground<S>(S, for: ContainerBackgroundPlacement) -> View\nfunc containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> View\nfunc containerRelativeFrame(Axis.Set, alignment: Alignment) -> View\nfunc containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> View\nfunc containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> View\nfunc contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> View\nfunc contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> View\nfunc contentMargins(CGFloat, for: ContentMarginPlacement) -> View\nfunc contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> View\nfunc coordinateSpace(NamedCoordinateSpace) -> View\nfunc defaultHoverEffect(HoverEffect?) -> View\nfunc defaultScrollAnchor(UnitPoint?) -> View\nfunc dialogIcon(Image?) -> View\nfunc dialogSeverity(DialogSeverity) -> View\nfunc dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> View\nfunc dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> View\nfunc dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> View\nfunc dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> View\nfunc distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> View\nfunc draggable<V, T>(() -> T, preview: () -> V) -> View\nfunc dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> View\nfunc environment<T>(T?) -> View\nfunc fileDialogBrowserOptions(FileDialogBrowserOptions) -> View\nfunc fileDialogConfirmationLabel(LocalizedStringKey) -> View\nfunc fileDialogConfirmationLabel(Text?) -> View\nfunc fileDialogConfirmationLabel<S>(S) -> View\nfunc fileDialogCustomizationID(String) -> View\nfunc fileDialogDefaultDirectory(URL?) -> View\nfunc fileDialogImportsUnresolvedAliases(Bool) -> View\nfunc fileDialogMessage(LocalizedStringKey) -> View\nfunc fileDialogMessage(Text?) -> View\nfunc fileDialogMessage<S>(S) -> View\nfunc fileDialogURLEnabled(Predicate<URL>) -> View\nfunc fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporterFilenameLabel(LocalizedStringKey) -> View\nfunc fileExporterFilenameLabel(Text?) -> View\nfunc fileExporterFilenameLabel<S>(S) -> View\nfunc fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc focusEffectDisabled(Bool) -> View\nfunc focusable(Bool, interactions: FocusInteractions) -> View\nfunc focusedObject<T>(T) -> View\nfunc focusedObject<T>(T?) -> View\nfunc focusedSceneObject<T>(T) -> View\nfunc focusedSceneObject<T>(T?) -> View\nfunc focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> View\nfunc focusedValue<T>(T?) -> View\nfunc focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> View\nfunc fontDesign(Font.Design?) -> View\nfunc fontWidth(Font.Width?) -> View\nfunc frame(depth: CGFloat?, alignment: DepthAlignment) -> View\nfunc frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> View\nfunc geometryGroup() -> View\nfunc glassBackgroundEffect(displayMode: GlassBackgroundDisplayMode) -> View\nfunc glassBackgroundEffect<S>(in: S, displayMode: GlassBackgroundDisplayMode) -> View\nfunc hoverEffect(HoverEffect, isEnabled: Bool) -> View\nfunc hoverEffectDisabled(Bool) -> View\nfunc inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> View\nfunc inspectorColumnWidth(CGFloat) -> View\nfunc inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> View\nfunc invalidatableContent(Bool) -> View\nfunc keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<CameraView>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> View\nfunc keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<CameraView>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> View\nfunc layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> View\nfunc layoutDirectionBehavior(LayoutDirectionBehavior) -> View\nfunc listRowHoverEffect(HoverEffect?) -> View\nfunc listRowHoverEffectDisabled(Bool) -> View\nfunc listRowSpacing(CGFloat?) -> View\nfunc listSectionSpacing(CGFloat) -> View\nfunc listSectionSpacing(ListSectionSpacing) -> View\nfunc menuActionDismissBehavior(MenuActionDismissBehavior) -> View\nfunc monospaced(Bool) -> View\nfunc navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> View\nfunc navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> View\nfunc navigationSubtitle(LocalizedStringKey) -> View\nfunc navigationSubtitle(Text) -> View\nfunc navigationSubtitle<S>(S) -> View\nfunc offset(z: CGFloat) -> View\nfunc onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> View\nfunc onChange<V>(of: V, initial: Bool, () -> Void) -> View\nfunc onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> View\nfunc onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc ornament<Content>(visibility: Visibility, attachmentAnchor: OrnamentAttachmentAnchor, contentAlignment: Alignment, ornament: () -> Content) -> View\nfunc padding3D(CGFloat) -> View\nfunc padding3D(EdgeInsets3D) -> View\nfunc padding3D(Edge3D.Set, CGFloat?) -> View\nfunc paletteSelectionEffect(PaletteSelectionEffect) -> View\nfunc perspectiveRotationEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> View\nfunc phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<CameraView>, Phase) -> some View, animation: (Phase) -> Animation?) -> View\nfunc phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<CameraView>, Phase) -> some View, animation: (Phase) -> Animation?) -> View\nfunc preferredSurroundingsEffect(SurroundingsEffect?) -> View\nfunc presentationBackground<S>(S) -> View\nfunc presentationBackground<V>(alignment: Alignment, content: () -> V) -> View\nfunc presentationBackgroundInteraction(PresentationBackgroundInteraction) -> View\nfunc presentationCompactAdaptation(PresentationAdaptation) -> View\nfunc presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> View\nfunc presentationContentInteraction(PresentationContentInteraction) -> View\nfunc presentationCornerRadius(CGFloat?) -> View\nfunc rotation3DEffect(Rotation3D, anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> View\nfunc safeAreaPadding(CGFloat) -> View\nfunc safeAreaPadding(EdgeInsets) -> View\nfunc safeAreaPadding(Edge.Set, CGFloat?) -> View\nfunc scaleEffect(CGFloat, anchor: UnitPoint) -> ModifiedContent<CameraView, _UniformScaleEffect>\nfunc scaleEffect(CGFloat, anchor: UnitPoint3D) -> View\nfunc scaleEffect(Size3D, anchor: UnitPoint3D) -> View\nfunc scaleEffect(x: CGFloat, y: CGFloat, z: CGFloat, anchor: UnitPoint3D) -> View\nfunc scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> View\nfunc scrollClipDisabled(Bool) -> View\nfunc scrollContentBackground(Visibility) -> View\nfunc scrollIndicatorsFlash(onAppear: Bool) -> View\nfunc scrollIndicatorsFlash(trigger: some Equatable) -> View\nfunc scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> View\nfunc scrollTargetBehavior(some ScrollTargetBehavior) -> View\nfunc scrollTargetLayout(isEnabled: Bool) -> View\nfunc scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> View\nfunc scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> View\nfunc searchDictationBehavior(TextInputDictationBehavior) -> View\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nfunc searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> View\nfunc searchScopes<V, S>(Binding<V>, scopes: () -> S) -> View\nfunc searchSuggestions<S>(() -> S) -> View\nfunc searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> View\nfunc searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> View\nfunc searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> View\nfunc searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> View\nfunc searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> View\nfunc selectionDisabled(Bool) -> View\nfunc sensoryFeedback<T>(SensoryFeedback, trigger: T) -> View\nfunc sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> View\nfunc sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> View\nfunc springLoadingBehavior(SpringLoadingBehavior) -> View\nfunc symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> View\nfunc symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> View\nfunc symbolEffectsRemoved(Bool) -> View\nfunc tableColumnHeaders(Visibility) -> View\nfunc textEditorStyle(some TextEditorStyle) -> View\nfunc textScale(Text.Scale, isEnabled: Bool) -> View\nfunc toolbar(Visibility, for: ToolbarPlacement...) -> View\nfunc toolbar(removing: ToolbarDefaultItemKind?) -> View\nfunc toolbarBackground(Visibility, for: ToolbarPlacement...) -> View\nfunc toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> View\nfunc toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> View\nfunc toolbarTitleMenu<C>(content: () -> C) -> View\nfunc transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<CameraView>) -> V) -> View\nfunc transaction(value: some Equatable, (inout Transaction) -> Void) -> View\nfunc transform3DEffect(AffineTransform3D) -> View\nfunc typeSelectEquivalent(LocalizedStringKey) -> View\nfunc typeSelectEquivalent(Text?) -> View\nfunc typeSelectEquivalent<S>(S) -> View\nfunc typesettingLanguage(Locale.Language, isEnabled: Bool) -> View\nfunc typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> View\nfunc upperLimbVisibility(Visibility) -> View\nfunc visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> View\nfunc visualEffect3D((EmptyVisualEffect, GeometryProxy3D) -> some VisualEffect) -> View\nRelationships\nConforms To\nView\nSee Also\nManaging camera profiles\nvar cameraProfiles: [HMCameraProfile]?\nAn array of camera profiles implemented by the accessory.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera.\nclass HMCameraView\nThe view into which a video stream or an image snapshot is rendered."
  },
  {
    "title": "HMActionSetTypeWakeUp | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionsettypewakeup",
    "html": "See Also\nBuilt-in Types\nlet HMActionSetTypeHomeArrival: String\nSpecifies the HomeArrival built-in action set.\nlet HMActionSetTypeHomeDeparture: String\nSpecifies the HomeDeparture built-in action set.\nlet HMActionSetTypeSleep: String\nSpecifies the Sleep built-in action set."
  },
  {
    "title": "HMActionSetTypeTriggerOwned | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionsettypetriggerowned",
    "html": "Discussion\n\nAn action set of this type is owned by a trigger and is not listed as part of the home. An action set of this type cannot be executed, renamed, or associated with a different trigger."
  },
  {
    "title": "incompatibleNetwork | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2721721-incompatiblenetwork",
    "html": "See Also\nDetecting network errors\nstatic var enterpriseNetworkNotSupported: HMError.Code\nAn enterprise network doesn’t support this accessory.\nstatic var failedToJoinNetwork: HMError.Code\nThe accessory failed to join the network.\nstatic var networkUnavailable: HMError.Code\nAn error indicating the network is unavailable.\nstatic var wiFiCredentialGenerationFailed: HMError.Code\nWiFi credential generation failed."
  },
  {
    "title": "removeAccessory(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620245-removeaccessory",
    "html": "Parameters\naccessory\n\nThe accessory to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeAccessory(_ accessory: HMAccessory) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "HMCameraProfile | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcameraprofile",
    "html": "Overview\n\nEach profile control is optional, because an individual camera vendor may not support all of the features defined by the HomeKit camera specifications.\n\nTopics\nControlling camera settings\nvar settingsControl: HMCameraSettingsControl?\nControls the settings on the camera.\nclass HMCameraSettingsControl\nAn object that represents the ability to control a camera's settings.\nclass HMCameraControl\nAn abstract class that represents a camera control.\nPlaying audio\nvar microphoneControl: HMCameraAudioControl?\nControls the microphone settings on the camera.\nvar speakerControl: HMCameraAudioControl?\nControls the speaker settings on the camera.\nclass HMCameraAudioControl\nAn object that controls a camera's audio settings.\nStreaming\nvar streamControl: HMCameraStreamControl?\nControls the camera stream.\nclass HMCameraStreamControl\nAn object that can start and stop the camera stream and contains the view into which the stream is rendered.\nCapturing snapshots\nvar snapshotControl: HMCameraSnapshotControl?\nControls the camera's snapshot function.\nclass HMCameraSnapshotControl\nAn object that can take an image snapshot from a camera.\nRelationships\nInherits From\nHMAccessoryProfile\nConforms To\nSendable\nSee Also\nManaging accessory profiles\nvar profiles: [HMAccessoryProfile]\nAn array of profiles implemented by the accessory.\nclass HMAccessoryProfile\nA profile that certain accessories implement.\nclass HMNetworkConfigurationProfile\nA profile that provides information about network protection for an accessory."
  },
  {
    "title": "HMAccessoryProfile | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessoryprofile",
    "html": "Overview\n\nThis is an abstract superclass for classes such as HMCameraProfile and HMNetworkConfigurationProfile. Each profile subclass controls specific features for a specific set of accessories.\n\nTopics\nGetting information about a profile\nvar accessory: HMAccessory?\nThe accessory that implements this profile.\nvar services: [HMService]\nAn array of services that represents this profile.\nvar uniqueIdentifier: UUID\nA unique identifier for the profile.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nManaging accessory profiles\nvar profiles: [HMAccessoryProfile]\nAn array of profiles implemented by the accessory.\nclass HMNetworkConfigurationProfile\nA profile that provides information about network protection for an accessory.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera."
  },
  {
    "title": "HMNetworkConfigurationProfile | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmnetworkconfigurationprofile",
    "html": "Overview\n\nTo increase security, HomeKit can restrict network access for specific accessories, including access to other accessories in the home, and to the internet. However, an accessory your app controls might need network access to carry out certain functions, like downloading new firmware.\n\nCheck the isNetworkAccessRestricted property of an accessory’s network configuration profile to find out if an accessory has restricted access. You can use this information to ask the user to relax network restrictions in the Home app.\n\nTopics\nRestricting network access\nvar isNetworkAccessRestricted: Bool\nAn indication of whether the accessory’s access to the network is restricted.\nListening for access changes\nvar delegate: HMNetworkConfigurationProfileDelegate?\nA delegate that HomeKit tells about changes in the state of network access.\nprotocol HMNetworkConfigurationProfileDelegate\nAn interface that your app adopts to receive notifications about changes in the state of network access.\nRelationships\nInherits From\nHMAccessoryProfile\nConforms To\nSendable\nSee Also\nManaging accessory profiles\nvar profiles: [HMAccessoryProfile]\nAn array of profiles implemented by the accessory.\nclass HMAccessoryProfile\nA profile that certain accessories implement.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera."
  },
  {
    "title": "home(_:didRemove:from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620222-home",
    "html": "Parameters\nhome\n\nThe home.\n\nroom\n\nThe room that was removed from the zone.\n\nzone\n\nThe zone the room was removed from.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didUpdateNameFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620272-home",
    "html": "Parameters\nhome\n\nThe home.\n\nroom\n\nThe room whose name was updated.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didAdd:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620241-home",
    "html": "Parameters\nhome\n\nThe home.\n\nroom\n\nThe room that was assigned to the zone.\n\nzone\n\nThe zone the room was assigned to.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "assignAccessory(_:to:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620265-assignaccessory",
    "html": "Parameters\naccessory\n\nThe accessory to assign; must already have been added to the home.\n\nroom\n\nThe room to which the accessory will be assigned; must already exist in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc assignAccessory(_ accessory: HMAccessory, to room: HMRoom) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "addAndSetupAccessories(with:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/2941039-addandsetupaccessories",
    "html": "Discussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addAndSetUpAccessories(payload: HMAccessorySetupPayload) async throws -> [HMAccessory]\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nUse this method to add accessories that have already been deployed (for example, accessories that have HomeKit support added as a firmware update), or accessories for which scanning a QR code would be difficult. Your app provides the accessory’s HomeKit code using a setup payload. For details on the payload’s content, please join the MFi Program.\n\nDuring this process, the user assigns the accessory to a room and configures its services.\n\nTopics\nDefining the Setup Payload\nclass HMAccessorySetupPayload\nA payload for authenticating a HomeKit accessory.\nSee Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "accessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620275-accessories",
    "html": "See Also\nManaging accessories\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620244-home",
    "html": "Parameters\nhome\n\nThe home that added the room.\n\nroom\n\nThe new room.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "home(_:didRemove:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620263-home",
    "html": "Parameters\nhome\n\nThe home that removed the accessory.\n\naccessory\n\nThe accessory that was removed.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "unexpectedError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2935542-unexpectederror",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "noCompatibleHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2895462-nocompatiblehomehub",
    "html": "See Also\nDetecting hub errors\nstatic var noHomeHub: HMError.Code\nAn error indicating no home hub found.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated"
  },
  {
    "title": "operationNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325635-operationnotsupported",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "roomForHomeCannotBeUpdated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325668-roomforhomecannotbeupdated",
    "html": "See Also\nDetecting home and room errors\nstatic var maximumAccessoriesOfTypeInHome: HMError.Code\nThe home already has the maximum number of accessories of the given type.\nstatic var roomForHomeCannotBeInZone: HMError.Code\nAn attempt to add the room that represents the entire home to a zone."
  },
  {
    "title": "accessorySentInvalidResponse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325601-accessorysentinvalidresponse",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "HMError.Code | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code",
    "html": "Topics\nAccessory errors\ncase accessoryIsBlocked\nAn error indicating a blocked accessory.\ncase accessoryIsBusy\nAn error indicating the accessory is busy.\ncase accessoryIsSuspended\nThe accessory is suspended.\ncase accessoryNotReachable\nAn error indicating the accessory is not reachable over the network.\ncase accessoryOutOfCompliance\nAn error indicating the accessory is out of compliance.\ncase accessoryOutOfResources\nAn error indicating the accessory is out of resources.\ncase accessoryPoweredOff\nAn error indicating the accessory is off.\ncase accessoryResponseError\nAn error with the accessory’s response.\ncase addAccessoryFailed\nA failed attempt to add an accessory.\ncase incompatibleAccessory\nThe accessory is incompatible.\nAction set errors\ncase actionInAnotherActionSet\nAn attempt to add an action that exists in one action set to another action set.\ncase actionSetExecutionFailed\nAn attempt to execute the action set failed.\ncase actionSetExecutionInProgress\nAn error indicating the execution of the action set is in progress.\ncase actionSetExecutionPartialSuccess\nAn attempt to execute the action set was only partially successful.\ncase cannotRemoveBuiltinActionSet\nAn error indicating the built-in action set cannot be removed.\ncase noActionsInActionSet\nAn attempt to execute an action set with no actions.\ncase noRegisteredActionSets\nAn attempt to activate a trigger with no action sets.\nAssociation errors\ncase invalidAssociatedServiceType\nAn error indicating an invalid service type.\ncase objectAlreadyAssociatedToHome\nAn attempt to associate an object with a home when it’s already associated with that home.\ncase objectAssociatedToAnotherHome\nAn attempt to associate an object with a home when it’s already associated with another home.\ncase objectNotAssociatedToAnyHome\nAn attempt to perform an operation on an object that is not associated to any home.\nAuthorization errors\ncase invalidOrMissingAuthorizationData\nAn error indicating the authorization data is invalid or missing.\ncase locationForHomeDisabled\nAn error indicating the home’s location is disabled.\ncase homeAccessNotAuthorized\nAn error indicating access to the home was not authorized.\ncase insufficientPrivileges\nAn error indicating insufficient privileges for the operation.\ncase messageAuthenticationFailed\nA message authentication failure.\ncase notAuthorizedForLocationServices\nAn error indicating location services are not authorized.\ncase notAuthorizedForMicrophoneAccess\nAn error indicating microphone access is not authorized.\ncase notSignedIntoiCloud\nAn error indicating the user is not signed into iCloud.\ncase ownershipFailure\nThe ownership code did not match.\ncase securityFailure\nA security failure.\nBridge errors\ncase bridgedAccessoryNotReachable\nAn error indicating the bridged accessory cannot be reached.\ncase cannotRemoveNonBridgeAccessory\nAn attempt to remove a bridged accessory.\ncase cannotUnblockNonBridgeAccessory\nAn error indicating a non-bridge accessory cannot be unblocked.\nCharacteristic errors\ncase readOnlyCharacteristic\nAn attempt to modify a read-only value.\ncase writeOnlyCharacteristic\nAn attempt to read from a write-only characteristic.\nCollision errors\ncase homeWithSimilarNameExists\nAn attempt to assign a home the same name as an existing home.\ncase objectWithSimilarNameExists\nAn object with a similar name already exists.\ncase objectWithSimilarNameExistsInHome\nAn attempt to give the name of one object to another object in the home.\ncase renameWithSimilarName\nAn attempt to rename an object with its current name.\nCommunication errors\ncase accessDenied\nAn error indicating the current user doesn’t have privileges to perform the operation.\ncase accessoryCommunicationFailure\nThe accessory failed to communicate.\ncase accessoryPairingFailed\nAn attempt to pair with the accessory has failed.\ncase accessorySentInvalidResponse\nAn error indicating the accessory sent an invalid response.\ncase clientRequestError\nAn error with the client request.\ncase communicationFailure\nA communication failure.\ncase dataResetFailure\nAn attempt to reset the data failed.\ncase timedOutWaitingForAccessory\nAn accessory did not respond timely.\nDevice and discovery errors\ncase deviceLocked\nAn error indicating the device is locked.\ncase accessoryDiscoveryFailed\nAn error indicating accessory discovery failed.\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual.\nHome and room errors\ncase maximumAccessoriesOfTypeInHome\nThe home already has the maximum number of accessories of the given type.\ncase roomForHomeCannotBeInZone\nAn attempt to add the room that represents the entire home to a zone.\ncase roomForHomeCannotBeUpdated\nAn attempt to change the room that represents the entire home.\nHub errors\ncase noHomeHub\nAn error indicating no home hub found.\ncase noCompatibleHomeHub\nAn error indicating no compatible home hub found.\nLimit errors\ncase cannotActivateTriggerTooFarInFuture\nAn error indicating the trigger cannot be activated because it is set too far in the future.\ncase dateMustBeOnSpecifiedBoundaries\nAn error indicating the date is not on the specified boundaries.\ncase fireDateInPast\nAn attempt to activate a timer trigger with a date in the past.\ncase invalidMessageSize\nAn error indicating an invalid message size.\ncase maximumObjectLimitReached\nAn error indicating the maximum object count has been reached.\ncase recurrenceTooLarge\nAn attempt to use a recurrence period that is too large.\ncase recurrenceTooSmall\nAn error indicating the recurrence interval is too short.\ncase recurrenceMustBeOnSpecifiedBoundaries\nAn error indicating the recurrence rule is not on the specified boundaries.\nNetwork errors\ncase enterpriseNetworkNotSupported\nAn enterprise network doesn’t support this accessory.\ncase failedToJoinNetwork\nThe accessory failed to join the network.\ncase incompatibleNetwork\nAn error indicating an incompatible network.\ncase networkUnavailable\nAn error indicating the network is unavailable.\ncase wiFiCredentialGenerationFailed\nWiFi credential generation failed.\nOperation errors\ncase operationCancelled\nAn error indicating the user canceled the operation.\ncase operationInProgress\nAn error indicating the operation is already in progress.\ncase operationTimedOut\nAn error indicating the operation timed out.\nParameter errors\ncase invalidParameter\nAn error indicating the object is invalid for the given operation.\ncase missingParameter\nAn error indicating a missing parameter.\ncase nilParameter\nAn error indicating that nil was passed for an operation that does not accept nil.\ncase unconfiguredParameter\nAn error indicating an unconfigured parameter.\nRead and write errors\ncase readWriteFailure\nAn error indicating a failed read/write operation.\ncase readWritePartialSuccess\nAn error indicating a partially successful read/write operation.\nSynchronization errors\ncase cloudDataSyncInProgress\nAn error indicating a data synchronization operation is in progress.\ncase keychainSyncNotEnabled\nAn error indicating Keychain syncing is not enabled for the user.\nUser errors\ncase userDeclinedAddingUser\nAn error indicating the user canceled the add user operation.\ncase userDeclinedRemovingUser\nAn error indicating the user canceled the remove user operation.\ncase userDeclinedInvite\nAn error indicating the user declined the invitation.\ncase userIDNotEmailAddress\nAn error indicating the user’s ID is not a valid email address.\ncase userManagementFailed\nA user management error not covered by the other errors.\nValue errors\ncase invalidDataFormatSpecified\nAn error indicating an invalid data format was specified.\ncase invalidValueType\nAn attempt to use an invalid value type.\ncase nameContainsProhibitedCharacters\nAn attempt to name an object with prohibited characters.\ncase nameDoesNotEndWithValidCharacters\nAn error indicating the provided name has invalid characters at the end.\ncase nameDoesNotStartWithValidCharacters\nAn attempt to start the name of an object with invalid characters.\ncase stringLongerThanMaximum\nAn attempt to use a string longer than the maximum allowed.\ncase stringShorterThanMinimum\nAn attempt to use a string shorter than the required minimum.\ncase valueHigherThanMaximum\nAn attempt to use a numeric value higher than the specified maximum value.\ncase valueLowerThanMinimum\nAn attempt to use a numeric value lower than the specified minimum value.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "readWritePartialSuccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325653-readwritepartialsuccess",
    "html": "See Also\nDetecting read and write errors\nstatic var readWriteFailure: HMError.Code\nAn error indicating a failed read/write operation."
  },
  {
    "title": "HMServiceTypeStatefulProgrammableSwitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypestatefulprogrammableswitch",
    "html": "See Also\nPower and Switches\nlet HMServiceTypeSwitch: String\nA switch service.\nlet HMServiceTypeBattery: String\nA battery service.\nlet HMServiceTypeOutlet: String\nAn outlet service.\nlet HMServiceTypeStatelessProgrammableSwitch: String\nA stateless programmable switch service."
  },
  {
    "title": "readOnlyCharacteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325667-readonlycharacteristic",
    "html": "See Also\nDetecting characteristic errors\nstatic var writeOnlyCharacteristic: HMError.Code\nAn attempt to read from a write-only characteristic."
  },
  {
    "title": "removeServiceGroup(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620230-removeservicegroup",
    "html": "Parameters\ngroup\n\nThe service group to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeServiceGroup(_ group: HMServiceGroup) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nGrouping services\nfunc servicesWithTypes([String]) -> [HMService]?\nReturns an array of all services provided by accessories in the home that match the specified types.\nvar serviceGroups: [HMServiceGroup]\nAn array of all service groups in the home.\nfunc addServiceGroup(withName: String, completionHandler: (HMServiceGroup?, Error?) -> Void)\nAdds a service group to the home.\nclass HMServiceGroup\nA collection of accessory services."
  },
  {
    "title": "addServiceGroup(withName:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620269-addservicegroup",
    "html": "Parameters\nserviceGroupName\n\nThe name of the new service group. Must not be nil, and must not be the name of a service group already in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\ngroup\n\nThe newly created service group.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addServiceGroup(named serviceGroupName: String) async throws -> HMServiceGroup\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nGrouping services\nfunc servicesWithTypes([String]) -> [HMService]?\nReturns an array of all services provided by accessories in the home that match the specified types.\nvar serviceGroups: [HMServiceGroup]\nAn array of all service groups in the home.\nfunc removeServiceGroup(HMServiceGroup, completionHandler: (Error?) -> Void)\nRemoves a service group from the home.\nclass HMServiceGroup\nA collection of accessory services."
  },
  {
    "title": "HMServiceGroup | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicegroup",
    "html": "Overview\n\nA service group makes it easier to address the services as a single entity. For example, a user might choose to group a set of lights together as “Desk Lamps,” and have another set of lights grouped as “Ceiling Lights”. You create service groups using the addServiceGroup(withName:completionHandler:) method of HMHome. Service groups are visible to Siri and allow users to control a group of services through Siri.\n\nTopics\nManaging Service Groups\nvar name: String\nThe name of the service group.\nvar uniqueIdentifier: UUID\nThe unique identifier for the service group.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service group.\nvar services: [HMService]\nArray of the services in the service group.\nfunc addService(HMService, completionHandler: (Error?) -> Void)\nAdds a new service to the service group.\nfunc removeService(HMService, completionHandler: (Error?) -> Void)\nRemoves a service from the service group.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nGrouping services\nfunc servicesWithTypes([String]) -> [HMService]?\nReturns an array of all services provided by accessories in the home that match the specified types.\nvar serviceGroups: [HMServiceGroup]\nAn array of all service groups in the home.\nfunc addServiceGroup(withName: String, completionHandler: (HMServiceGroup?, Error?) -> Void)\nAdds a service group to the home.\nfunc removeServiceGroup(HMServiceGroup, completionHandler: (Error?) -> Void)\nRemoves a service group from the home."
  },
  {
    "title": "serviceGroups | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620266-servicegroups",
    "html": "Discussion\n\nServices groups are instances of HMServiceGroup.\n\nSee Also\nGrouping services\nfunc servicesWithTypes([String]) -> [HMService]?\nReturns an array of all services provided by accessories in the home that match the specified types.\nfunc addServiceGroup(withName: String, completionHandler: (HMServiceGroup?, Error?) -> Void)\nAdds a service group to the home.\nfunc removeServiceGroup(HMServiceGroup, completionHandler: (Error?) -> Void)\nRemoves a service group from the home.\nclass HMServiceGroup\nA collection of accessory services."
  },
  {
    "title": "unblockAccessory(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620260-unblockaccessory",
    "html": "Parameters\naccessory\n\nThe accessory to unblock.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc unblockAccessory(_ accessory: HMAccessory) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nA misbehaving accessory automatically becomes blocked. After that, all requests to the accessory fail. Use this API to explicitly unblock the accessory.\n\nSee Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "HMServiceTypeOutlet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeoutlet",
    "html": "See Also\nPower and Switches\nlet HMServiceTypeSwitch: String\nA switch service.\nlet HMServiceTypeBattery: String\nA battery service.\nlet HMServiceTypeStatefulProgrammableSwitch: String\nA stateful programmable switch service.\nlet HMServiceTypeStatelessProgrammableSwitch: String\nA stateless programmable switch service."
  },
  {
    "title": "supportsAddingNetworkRouter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/3392956-supportsaddingnetworkrouter",
    "html": "See Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "servicesWithTypes(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620235-serviceswithtypes",
    "html": "Parameters\nserviceTypes\n\nAn array of strings that identify service types. See Accessory Service Types for a list of types.\n\nReturn Value\n\nAn array of found services. Returns nil if no matching services are found.\n\nSee Also\nGrouping services\nvar serviceGroups: [HMServiceGroup]\nAn array of all service groups in the home.\nfunc addServiceGroup(withName: String, completionHandler: (HMServiceGroup?, Error?) -> Void)\nAdds a service group to the home.\nfunc removeServiceGroup(HMServiceGroup, completionHandler: (Error?) -> Void)\nRemoves a service group from the home.\nclass HMServiceGroup\nA collection of accessory services."
  },
  {
    "title": "HMCharacteristicPropertyReadable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicpropertyreadable",
    "html": "See Also\nProperties of Characteristics\nlet HMCharacteristicPropertyWritable: String\nThe characteristic is writable.\nlet HMCharacteristicPropertySupportsEventNotification: String\nThe characteristic supports event notifications.\nlet HMCharacteristicPropertyHidden: String\nThe characteristic should be hidden from the user."
  },
  {
    "title": "HMCharacteristicPropertyWritable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicpropertywritable",
    "html": "See Also\nProperties of Characteristics\nlet HMCharacteristicPropertyReadable: String\nThe characteristic is readable.\nlet HMCharacteristicPropertySupportsEventNotification: String\nThe characteristic supports event notifications.\nlet HMCharacteristicPropertyHidden: String\nThe characteristic should be hidden from the user."
  },
  {
    "title": "userDeclinedRemovingUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325660-userdeclinedremovinguser",
    "html": "See Also\nDetecting user errors\nstatic var userDeclinedAddingUser: HMError.Code\nAn error indicating the user canceled the add user operation.\nstatic var userDeclinedInvite: HMError.Code\nAn error indicating the user declined the invitation.\nstatic var userIDNotEmailAddress: HMError.Code\nAn error indicating the user’s ID is not a valid email address.\nstatic var userManagementFailed: HMError.Code\nA user management error not covered by the other errors."
  },
  {
    "title": "removeZone(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620223-removezone",
    "html": "Parameters\nzone\n\nThe zone to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeZone(_ zone: HMZone) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nGrouping rooms into zones\nvar zones: [HMZone]\nAn array of all the zones in the home.\nfunc addZone(withName: String, completionHandler: (HMZone?, Error?) -> Void)\nAdds a new zone to the home.\nclass HMZone\nA collection of rooms that users think of as a single area, like upstairs or downstairs."
  },
  {
    "title": "invalidValueType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325595-invalidvaluetype",
    "html": "See Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "userManagementFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325607-usermanagementfailed",
    "html": "See Also\nDetecting user errors\nstatic var userDeclinedAddingUser: HMError.Code\nAn error indicating the user canceled the add user operation.\nstatic var userDeclinedRemovingUser: HMError.Code\nAn error indicating the user canceled the remove user operation.\nstatic var userDeclinedInvite: HMError.Code\nAn error indicating the user declined the invitation.\nstatic var userIDNotEmailAddress: HMError.Code\nAn error indicating the user’s ID is not a valid email address."
  },
  {
    "title": "userDeclinedInvite | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325596-userdeclinedinvite",
    "html": "See Also\nDetecting user errors\nstatic var userDeclinedAddingUser: HMError.Code\nAn error indicating the user canceled the add user operation.\nstatic var userDeclinedRemovingUser: HMError.Code\nAn error indicating the user canceled the remove user operation.\nstatic var userIDNotEmailAddress: HMError.Code\nAn error indicating the user’s ID is not a valid email address.\nstatic var userManagementFailed: HMError.Code\nA user management error not covered by the other errors."
  },
  {
    "title": "readWriteFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325636-readwritefailure",
    "html": "See Also\nDetecting read and write errors\nstatic var readWritePartialSuccess: HMError.Code\nAn error indicating a partially successful read/write operation."
  },
  {
    "title": "invalidDataFormatSpecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325594-invaliddataformatspecified",
    "html": "See Also\nDetecting value errors\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "userDeclinedAddingUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325612-userdeclinedaddinguser",
    "html": "See Also\nDetecting user errors\nstatic var userDeclinedRemovingUser: HMError.Code\nAn error indicating the user canceled the remove user operation.\nstatic var userDeclinedInvite: HMError.Code\nAn error indicating the user declined the invitation.\nstatic var userIDNotEmailAddress: HMError.Code\nAn error indicating the user’s ID is not a valid email address.\nstatic var userManagementFailed: HMError.Code\nA user management error not covered by the other errors."
  },
  {
    "title": "userIDNotEmailAddress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325628-useridnotemailaddress",
    "html": "See Also\nDetecting user errors\nstatic var userDeclinedAddingUser: HMError.Code\nAn error indicating the user canceled the add user operation.\nstatic var userDeclinedRemovingUser: HMError.Code\nAn error indicating the user canceled the remove user operation.\nstatic var userDeclinedInvite: HMError.Code\nAn error indicating the user declined the invitation.\nstatic var userManagementFailed: HMError.Code\nA user management error not covered by the other errors."
  },
  {
    "title": "keychainSyncNotEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325610-keychainsyncnotenabled",
    "html": "See Also\nDetecting synchronization errors\nstatic var cloudDataSyncInProgress: HMError.Code\nAn error indicating a data synchronization operation is in progress."
  },
  {
    "title": "homeUniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetupresult/3920441-homeuniqueidentifier",
    "html": "Discussion\n\nSee uniqueIdentifier for more information.\n\nSee Also\nGetting results\nvar accessoryUniqueIdentifiers: [UUID]\nThe values corresponding to accessories that are set up."
  },
  {
    "title": "accessoryUniqueIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetupresult/3920440-accessoryuniqueidentifiers",
    "html": "Discussion\n\nUsually only one accessory is set up at a time, but adding an accessory bridge can result in multiple accessories being set up at once. See uniqueIdentifier for more information.\n\nSee Also\nGetting results\nvar homeUniqueIdentifier: UUID\nThe home that accessories were added to."
  },
  {
    "title": "HMServiceTypeFilterMaintenance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypefiltermaintenance",
    "html": "See Also\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service."
  },
  {
    "title": "HMServiceTypeWindow | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypewindow",
    "html": "See Also\nWindows\nlet HMServiceTypeWindowCovering: String\nA window covering service.\nlet HMServiceTypeSlats: String\nA slats service."
  },
  {
    "title": "HMServiceTypeFaucet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypefaucet",
    "html": "See Also\nWater\nlet HMServiceTypeValve: String\nA valve service.\nlet HMServiceTypeIrrigationSystem: String\nAn irrigation system service.\nlet HMServiceTypeLeakSensor: String\nA leak sensor service."
  },
  {
    "title": "HMServiceTypeSlats | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeslats",
    "html": "See Also\nWindows\nlet HMServiceTypeWindow: String\nA window service.\nlet HMServiceTypeWindowCovering: String\nA window covering service."
  },
  {
    "title": "HMServiceTypeValve | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypevalve",
    "html": "See Also\nWater\nlet HMServiceTypeFaucet: String\nA faucet service.\nlet HMServiceTypeIrrigationSystem: String\nAn irrigation system service.\nlet HMServiceTypeLeakSensor: String\nA leak sensor service."
  },
  {
    "title": "HMServiceTypeWindowCovering | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypewindowcovering",
    "html": "See Also\nWindows\nlet HMServiceTypeWindow: String\nA window service.\nlet HMServiceTypeSlats: String\nA slats service."
  },
  {
    "title": "HMActionSetTypeHomeDeparture | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionsettypehomedeparture",
    "html": "See Also\nBuilt-in Types\nlet HMActionSetTypeHomeArrival: String\nSpecifies the HomeArrival built-in action set.\nlet HMActionSetTypeSleep: String\nSpecifies the Sleep built-in action set.\nlet HMActionSetTypeWakeUp: String\nSpecifies the WakeUp built-in action set."
  },
  {
    "title": "HMActionSetTypeHomeArrival | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionsettypehomearrival",
    "html": "See Also\nBuilt-in Types\nlet HMActionSetTypeHomeDeparture: String\nSpecifies the HomeDeparture built-in action set.\nlet HMActionSetTypeSleep: String\nSpecifies the Sleep built-in action set.\nlet HMActionSetTypeWakeUp: String\nSpecifies the WakeUp built-in action set."
  },
  {
    "title": "HMAccessoryBrowser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorybrowser",
    "html": "Overview\n\nDiscovering new network accessories is an expensive operation in terms of time and power. Only start searching for new accessories when the user explicitly asks to do so, and stop searching as soon as the user has chosen the new accessories to add to their home.\n\nImportant\n\nTo enable a consistent user experience across HomeKit enabled apps, use either the addAndSetupAccessories(completionHandler:) or the addAndSetupAccessories(with:completionHandler:) method of the HMHome class instead of an accessory browser. These calls manage all the details of the accessory search process for you.\n\nTopics\nDiscovering accessories\nvar discoveredAccessories: [HMAccessory]\nAn array of accessories discovered during a search.\nfunc startSearchingForNewAccessories()\nStarts searching for accessories not yet associated with a home.\nfunc stopSearchingForNewAccessories()\nStops searching for new accessories.\nTracking the addition or removal of accessories\nvar delegate: HMAccessoryBrowserDelegate?\nA delegate that receives updates on the discovered accessories.\nprotocol HMAccessoryBrowserDelegate\nAn interface used to notify an accessory browser delegate of new accessories.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable"
  },
  {
    "title": "HMServiceTypeIrrigationSystem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservicetypeirrigationsystem",
    "html": "See Also\nWater\nlet HMServiceTypeFaucet: String\nA faucet service.\nlet HMServiceTypeValve: String\nA valve service.\nlet HMServiceTypeLeakSensor: String\nA leak sensor service."
  },
  {
    "title": "restricted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerauthorizationstatus/3333264-restricted",
    "html": "See Also\nRecognizing Status Values\nstatic var determined: HMHomeManagerAuthorizationStatus\nThe user has set the app’s level of access to home data.\nstatic var authorized: HMHomeManagerAuthorizationStatus\nThe app has access to home data."
  },
  {
    "title": "authorized | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerauthorizationstatus/3333262-authorized",
    "html": "See Also\nRecognizing Status Values\nstatic var determined: HMHomeManagerAuthorizationStatus\nThe user has set the app’s level of access to home data.\nstatic var restricted: HMHomeManagerAuthorizationStatus\nThe app doesn’t have access to home data."
  },
  {
    "title": "determined | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerauthorizationstatus/3333263-determined",
    "html": "See Also\nRecognizing Status Values\nstatic var authorized: HMHomeManagerAuthorizationStatus\nThe app has access to home data.\nstatic var restricted: HMHomeManagerAuthorizationStatus\nThe app doesn’t have access to home data."
  },
  {
    "title": "homeManagerDidUpdateHomes(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate/1616756-homemanagerdidupdatehomes",
    "html": "Parameters\nmanager\n\nThe home manager with updated homes.\n\nDiscussion\n\nThe home manager calls this method to inform an application of significant changes to the home configuration, including when the manager finishes its first load of data from the HomeKit database on initialization. Use this method as a cue to invalidate any references to HomeKit objects and refresh your app’s views with the new list of homes.\n\nSee Also\nAdding and removing homes\nfunc homeManager(HMHomeManager, didAdd: HMHome)\nTells the delegate that the home manager added a home.\nfunc homeManager(HMHomeManager, didRemove: HMHome)\nTells the delegate that the home manager removed a home.\nfunc homeManagerDidUpdatePrimaryHome(HMHomeManager)\nTells the delegate that the home manager updated its primary home."
  },
  {
    "title": "removeEvent(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624403-removeevent",
    "html": "Deprecated\n\nUse updateEvents(_:completionHandler:) instead.\n\nParameters\nevent\n\nThe event to remove from the event trigger.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeEvent(_ event: HMEvent) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDeprecated symbols\nfunc addEvent(HMEvent, completionHandler: (Error?) -> Void)\nAdds a new event to the event trigger.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringBefore: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringAfter: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated"
  },
  {
    "title": "unconfiguredParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325619-unconfiguredparameter",
    "html": "See Also\nDetecting parameter errors\nstatic var invalidParameter: HMError.Code\nAn error indicating the object is invalid for the given operation.\nstatic var missingParameter: HMError.Code\nAn error indicating a missing parameter.\nstatic var nilParameter: HMError.Code\nAn error indicating that nil was passed for an operation that does not accept nil."
  },
  {
    "title": "enterpriseNetworkNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3548819-enterprisenetworknotsupported",
    "html": "See Also\nDetecting network errors\nstatic var failedToJoinNetwork: HMError.Code\nThe accessory failed to join the network.\nstatic var incompatibleNetwork: HMError.Code\nAn error indicating an incompatible network.\nstatic var networkUnavailable: HMError.Code\nAn error indicating the network is unavailable.\nstatic var wiFiCredentialGenerationFailed: HMError.Code\nWiFi credential generation failed."
  },
  {
    "title": "recurrenceTooSmall | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325616-recurrencetoosmall",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "networkUnavailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325622-networkunavailable",
    "html": "See Also\nDetecting network errors\nstatic var enterpriseNetworkNotSupported: HMError.Code\nAn enterprise network doesn’t support this accessory.\nstatic var failedToJoinNetwork: HMError.Code\nThe accessory failed to join the network.\nstatic var incompatibleNetwork: HMError.Code\nAn error indicating an incompatible network.\nstatic var wiFiCredentialGenerationFailed: HMError.Code\nWiFi credential generation failed."
  },
  {
    "title": "failedToJoinNetwork | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3565651-failedtojoinnetwork",
    "html": "See Also\nDetecting network errors\nstatic var enterpriseNetworkNotSupported: HMError.Code\nAn enterprise network doesn’t support this accessory.\nstatic var incompatibleNetwork: HMError.Code\nAn error indicating an incompatible network.\nstatic var networkUnavailable: HMError.Code\nAn error indicating the network is unavailable.\nstatic var wiFiCredentialGenerationFailed: HMError.Code\nWiFi credential generation failed."
  },
  {
    "title": "recurrenceTooLarge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325585-recurrencetoolarge",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "maximumObjectLimitReached | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325599-maximumobjectlimitreached",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "fireDateInPast | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325584-firedateinpast",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "recurrenceMustBeOnSpecifiedBoundaries | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325629-recurrencemustbeonspecifiedbound",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short."
  },
  {
    "title": "incompatibleHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/code/2895463-incompatiblehomehub",
    "html": "Deprecated\n\nUse noCompatibleHomeHub instead.\n\nSee Also\nGeneral errors\ncase alreadyExists\nAn error indicating the container already contains the object you are trying to add.\ncase genericError\nAn error that does not have a more specific error code.\ncase invalidClass\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\ncase notFound\nAn error indicating the object was not found in the container.\ncase notificationAlreadyEnabled\nAn error indicating the notification is already enabled.\ncase notificationNotSupported\nAn attempt to register for notifications from an accessory that does not support notifications.\ncase operationNotSupported\nAn attempt to use an unsupported operation.\ncase unexpectedError\nAn unexpected error.\ncase missingEntitlement\nAn error indicating a required entitlement is not available.\ncase referToUserManual\nAn error described in the device’s user manual."
  },
  {
    "title": "invalidMessageSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325663-invalidmessagesize",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "cannotActivateTriggerTooFarInFuture | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325621-cannotactivatetriggertoofarinfut",
    "html": "See Also\nDetecting limit errors\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "maximumAccessoriesOfTypeInHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3180339-maximumaccessoriesoftypeinhome",
    "html": "See Also\nDetecting home and room errors\nstatic var roomForHomeCannotBeInZone: HMError.Code\nAn attempt to add the room that represents the entire home to a zone.\nstatic var roomForHomeCannotBeUpdated: HMError.Code\nAn attempt to change the room that represents the entire home."
  },
  {
    "title": "dateMustBeOnSpecifiedBoundaries | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325620-datemustbeonspecifiedboundaries",
    "html": "See Also\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries."
  },
  {
    "title": "noHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2889847-nohomehub",
    "html": "See Also\nDetecting hub errors\nstatic var noCompatibleHomeHub: HMError.Code\nAn error indicating no compatible home hub found.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated"
  },
  {
    "title": "roomForHomeCannotBeInZone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325614-roomforhomecannotbeinzone",
    "html": "See Also\nDetecting home and room errors\nstatic var maximumAccessoriesOfTypeInHome: HMError.Code\nThe home already has the maximum number of accessories of the given type.\nstatic var roomForHomeCannotBeUpdated: HMError.Code\nAn attempt to change the room that represents the entire home."
  },
  {
    "title": "referToUserManual | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325600-refertousermanual",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available."
  },
  {
    "title": "missingEntitlement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325638-missingentitlement",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "clientRequestError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325640-clientrequesterror",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "communicationFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325605-communicationfailure",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "accessoryPairingFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325626-accessorypairingfailed",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "accessoryCommunicationFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3565650-accessorycommunicationfailure",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "objectWithSimilarNameExistsInHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325586-objectwithsimilarnameexistsinhom",
    "html": "See Also\nDetecting collision errors\nstatic var homeWithSimilarNameExists: HMError.Code\nAn attempt to assign a home the same name as an existing home.\nstatic var objectWithSimilarNameExists: HMError.Code\nAn object with a similar name already exists.\nstatic var renameWithSimilarName: HMError.Code\nAn attempt to rename an object with its current name."
  },
  {
    "title": "objectWithSimilarNameExists | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2994584-objectwithsimilarnameexists",
    "html": "See Also\nDetecting collision errors\nstatic var homeWithSimilarNameExists: HMError.Code\nAn attempt to assign a home the same name as an existing home.\nstatic var objectWithSimilarNameExistsInHome: HMError.Code\nAn attempt to give the name of one object to another object in the home.\nstatic var renameWithSimilarName: HMError.Code\nAn attempt to rename an object with its current name."
  },
  {
    "title": "accessDenied | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325613-accessdenied",
    "html": "See Also\nDetecting communication errors\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "writeOnlyCharacteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325581-writeonlycharacteristic",
    "html": "See Also\nDetecting characteristic errors\nstatic var readOnlyCharacteristic: HMError.Code\nAn attempt to modify a read-only value."
  },
  {
    "title": "renameWithSimilarName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325592-renamewithsimilarname",
    "html": "See Also\nDetecting collision errors\nstatic var homeWithSimilarNameExists: HMError.Code\nAn attempt to assign a home the same name as an existing home.\nstatic var objectWithSimilarNameExists: HMError.Code\nAn object with a similar name already exists.\nstatic var objectWithSimilarNameExistsInHome: HMError.Code\nAn attempt to give the name of one object to another object in the home."
  },
  {
    "title": "homeWithSimilarNameExists | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325641-homewithsimilarnameexists",
    "html": "See Also\nDetecting collision errors\nstatic var objectWithSimilarNameExists: HMError.Code\nAn object with a similar name already exists.\nstatic var objectWithSimilarNameExistsInHome: HMError.Code\nAn attempt to give the name of one object to another object in the home.\nstatic var renameWithSimilarName: HMError.Code\nAn attempt to rename an object with its current name."
  },
  {
    "title": "cannotUnblockNonBridgeAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325649-cannotunblocknonbridgeaccessory",
    "html": "See Also\nDetecting bridge errors\nstatic var bridgedAccessoryNotReachable: HMError.Code\nAn error indicating the bridged accessory cannot be reached.\nstatic var cannotRemoveNonBridgeAccessory: HMError.Code\nAn attempt to remove a bridged accessory."
  },
  {
    "title": "bridgedAccessoryNotReachable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325608-bridgedaccessorynotreachable",
    "html": "See Also\nDetecting bridge errors\nstatic var cannotRemoveNonBridgeAccessory: HMError.Code\nAn attempt to remove a bridged accessory.\nstatic var cannotUnblockNonBridgeAccessory: HMError.Code\nAn error indicating a non-bridge accessory cannot be unblocked."
  },
  {
    "title": "notSignedIntoiCloud | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325588-notsignedintoicloud",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "cannotRemoveNonBridgeAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325593-cannotremovenonbridgeaccessory",
    "html": "Discussion\n\nYou can only remove standalone or bridge accessories.\n\nSee Also\nDetecting bridge errors\nstatic var bridgedAccessoryNotReachable: HMError.Code\nAn error indicating the bridged accessory cannot be reached.\nstatic var cannotUnblockNonBridgeAccessory: HMError.Code\nAn error indicating a non-bridge accessory cannot be unblocked."
  },
  {
    "title": "securityFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325627-securityfailure",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match."
  },
  {
    "title": "ownershipFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3174899-ownershipfailure",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "notAuthorizedForMicrophoneAccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325624-notauthorizedformicrophoneaccess",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "messageAuthenticationFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325582-messageauthenticationfailed",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "notAuthorizedForLocationServices | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325590-notauthorizedforlocationservices",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "insufficientPrivileges | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325642-insufficientprivileges",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "HMCharacteristicPropertyHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicpropertyhidden",
    "html": "See Also\nProperties of Characteristics\nlet HMCharacteristicPropertyReadable: String\nThe characteristic is readable.\nlet HMCharacteristicPropertyWritable: String\nThe characteristic is writable.\nlet HMCharacteristicPropertySupportsEventNotification: String\nThe characteristic supports event notifications."
  },
  {
    "title": "HMZone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmzone",
    "html": "Overview\n\nAn HMZone instance is an optional grouping of rooms in a home, with names like “upstairs” and “downstairs”. Zones are optional—rooms don’t need to be in a zone. By adding rooms to a zone, the user can give commands to Siri like “Siri, turn on all of the lights downstairs.” A single room can be in multiple zones—for example, “kitchen” might be in both the “downstairs” and “entertainment area” zones.\n\nYou create new zones using the addZone(withName:completionHandler:) method of HMHome. A zone can’t span homes—that is, you can’t create a zone that includes rooms from more than one home.\n\nTopics\nIdentifying a Zone\nvar name: String\nThe name of the zone.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the zone.\nvar uniqueIdentifier: UUID\nThe unique identifier for a zone.\nAssigning Rooms to a Zone\nvar rooms: [HMRoom]\nArray of rooms in the zone.\nfunc addRoom(HMRoom, completionHandler: (Error?) -> Void)\nAdds a room to the zone.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the zone.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nGrouping rooms into zones\nvar zones: [HMZone]\nAn array of all the zones in the home.\nfunc addZone(withName: String, completionHandler: (HMZone?, Error?) -> Void)\nAdds a new zone to the home.\nfunc removeZone(HMZone, completionHandler: (Error?) -> Void)\nRemoves a zone from the home."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3726593",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nReturn Value\n\nA Boolean indicating equality.\n\nSee Also\nComparing errors\nstatic func != (HMError, HMError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nfunc hash(into: inout Hasher)"
  },
  {
    "title": "valueLowerThanMinimum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325647-valuelowerthanminimum",
    "html": "See Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3726595-hash",
    "html": "See Also\nComparing errors\nstatic func != (HMError, HMError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nstatic func == (HMError, HMError) -> Bool\nReturns a Boolean value indicating whether two values are equal."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2947098",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nDiscussion\n\nInequality is the inverse of equality. For any values a and b, a != b implies that a == b is false.\n\nThis is the default implementation of the not-equal-to operator (!=) for any type that conforms to Equatable.\n\nSee Also\nComparing errors\nstatic func == (HMError, HMError) -> Bool\nReturns a Boolean value indicating whether two values are equal.\nfunc hash(into: inout Hasher)"
  },
  {
    "title": "valueHigherThanMaximum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325644-valuehigherthanmaximum",
    "html": "See Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "stringShorterThanMinimum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325618-stringshorterthanminimum",
    "html": "See Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "nameDoesNotStartWithValidCharacters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325656-namedoesnotstartwithvalidcharact",
    "html": "Discussion\n\nNames must start with a letter, symbol, or number.\n\nSee Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "nameContainsProhibitedCharacters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325646-namecontainsprohibitedcharacters",
    "html": "Discussion\n\nOnly letters, symbols, numbers, spaces, and apostrophes are permitted in names.\n\nSee Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "nameDoesNotEndWithValidCharacters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325655-namedoesnotendwithvalidcharacter",
    "html": "See Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "stringLongerThanMaximum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325652-stringlongerthanmaximum",
    "html": "See Also\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value."
  },
  {
    "title": "predicateForEvaluatingTrigger(occurringBefore:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624408-predicateforevaluatingtrigger",
    "html": "Parameters\ndateComponents\n\nDate components that represent the time to compare with the time that the event occurred.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "Time events | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/time_events",
    "html": "Topics\nDates and times\nclass HMCalendarEvent\nAn event that fires at a specified time.\nclass HMMutableCalendarEvent\nA mutable event that fires at a specified time.\nclass HMTimeEvent\nAn abstract superclass for time-based events.\nSignificant events\nstruct HMSignificantEvent\nAn event that represents significant time-based events, including sunrise and sunset.\nclass HMSignificantTimeEvent\nAn event that fires at a time offset from a significant time-based event.\nclass HMMutableSignificantTimeEvent\nA mutable event that fires at the specified temporal offset to a significant event.\nDurations\nclass HMDurationEvent\nAn event that ends after the specified time duration.\nclass HMMutableDurationEvent\nA mutable event that fires after the specified time duration.\nSee Also\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nLocation events\nEvents that represent the user's movement among regions.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nPresence events\nEvents based on the user's presence in a home.\nclass HMEvent\nThe abstract base class for a HomeKit event."
  },
  {
    "title": "enable(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger/1620714-enable",
    "html": "Parameters\nenable\n\nTRUE to enable the trigger, false to disable it.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc enable(_ enable: Bool) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nTriggers can only be enabled when they are in a home. You add triggers to a home using the addTrigger(_:completionHandler:) method of HMHome.\n\nWhen a trigger is enabled its firing conditions are checked for validity and the system starts tracking the trigger and when it will next fire.\n\nIn addition to having valid firing conditions, to be successfully enabled a trigger must have at least one action set associated with it, and every action set associated with the trigger must have at least one action.\n\nSee Also\nManaging Triggers\nvar name: String\nThe name of the trigger.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the trigger.\nvar isEnabled: Bool\nState of the trigger.\nvar lastFireDate: Date?\nThe last time this trigger fired.\nDeprecated\nvar uniqueIdentifier: UUID\nA unique identifier for this trigger."
  },
  {
    "title": "updateFireDate(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616262-updatefiredate",
    "html": "Parameters\nfireDate\n\nThe new fire date.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateFireDate(_ fireDate: Date) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nChoosing the fire date\nvar fireDate: Date\nThe time at which the trigger will next fire."
  },
  {
    "title": "locationForHomeDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325643-locationforhomedisabled",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "updateRecurrence(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616267-updaterecurrence",
    "html": "Parameters\nrecurrence\n\nThe new recurrence interval.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateRecurrence(_ recurrence: DateComponents?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee recurrence for a discussion of how the recurrence value is used.\n\nSee Also\nUsing recurrence\nvar recurrence: DateComponents?\nThe interval on which to repeat firing the trigger.\nvar recurrenceCalendar: Calendar?\nThe calendar in which the recurrence value is evaluated.\nDeprecated"
  },
  {
    "title": "invalidOrMissingAuthorizationData | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325639-invalidormissingauthorizationdat",
    "html": "See Also\nDetecting authorization errors\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "recurrenceCalendar | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616264-recurrencecalendar",
    "html": "Discussion\n\nSee recurrence for a discussion of how the recurrence value and recurrence calendar are used.\n\nSee Also\nUsing recurrence\nvar recurrence: DateComponents?\nThe interval on which to repeat firing the trigger.\nfunc updateRecurrence(DateComponents?, completionHandler: (Error?) -> Void)\nUpdates the recurrence interval."
  },
  {
    "title": "HMAccessControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccesscontrol",
    "html": "Overview\n\nUse a concrete subclass, like HMHomeAccessControl, instead.\n\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nControlling user access\nfunc homeAccessControl(for: HMUser) -> HMHomeAccessControl\nRetrieves the access level of a user associated with the home.\nclass HMHomeAccessControl\nThe access privileges of a user associated with a home.\nlet HMUserFailedAccessoriesKey: String\nThe key for retrieving details of what accessories failed to add or remove a user."
  },
  {
    "title": "objectNotAssociatedToAnyHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325632-objectnotassociatedtoanyhome",
    "html": "See Also\nDetecting association errors\nstatic var invalidAssociatedServiceType: HMError.Code\nAn error indicating an invalid service type.\nstatic var objectAlreadyAssociatedToHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with that home.\nstatic var objectAssociatedToAnotherHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with another home."
  },
  {
    "title": "objectAssociatedToAnotherHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325589-objectassociatedtoanotherhome",
    "html": "See Also\nDetecting association errors\nstatic var invalidAssociatedServiceType: HMError.Code\nAn error indicating an invalid service type.\nstatic var objectAlreadyAssociatedToHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with that home.\nstatic var objectNotAssociatedToAnyHome: HMError.Code\nAn attempt to perform an operation on an object that is not associated to any home."
  },
  {
    "title": "noActionsInActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325606-noactionsinactionset",
    "html": "See Also\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "objectAlreadyAssociatedToHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325662-objectalreadyassociatedtohome",
    "html": "See Also\nDetecting association errors\nstatic var invalidAssociatedServiceType: HMError.Code\nAn error indicating an invalid service type.\nstatic var objectAssociatedToAnotherHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with another home.\nstatic var objectNotAssociatedToAnyHome: HMError.Code\nAn attempt to perform an operation on an object that is not associated to any home."
  },
  {
    "title": "cannotRemoveBuiltinActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325634-cannotremovebuiltinactionset",
    "html": "See Also\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "invalidAssociatedServiceType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325598-invalidassociatedservicetype",
    "html": "See Also\nDetecting association errors\nstatic var objectAlreadyAssociatedToHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with that home.\nstatic var objectAssociatedToAnotherHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with another home.\nstatic var objectNotAssociatedToAnyHome: HMError.Code\nAn attempt to perform an operation on an object that is not associated to any home."
  },
  {
    "title": "noRegisteredActionSets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325657-noregisteredactionsets",
    "html": "See Also\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions."
  },
  {
    "title": "actionSetExecutionPartialSuccess | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325623-actionsetexecutionpartialsuccess",
    "html": "See Also\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "actionInAnotherActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325611-actioninanotheractionset",
    "html": "See Also\nDetecting action set errors\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "actionSetExecutionInProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325666-actionsetexecutioninprogress",
    "html": "See Also\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "HMErrorDomain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerrordomain",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "userInfo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3726598-userinfo",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "code | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3726594-code",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "errorCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2883259-errorcode",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "Characteristic types | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/characteristic_types",
    "html": "Overview\n\nA characteristic’s characteristicType is a string constant—typically containing one of the values listed below—that tells you what the characteristic’s value represents and how to interpret it. Manufacturers can also create custom types, not listed here.\n\nFor some characteristic types, HomeKit defines an enumeration of possible values that the corresponding characteristic can take. For example, a characteristic with type HMCharacteristicTypeTemperatureUnits can only have values—corresponding to degrees Fahrenheit or degrees Celsius—from the HMCharacteristicValueTemperatureUnit enumeration.\n\nFor other characteristic types, the corresponding value might be a plain number, a string, or Boolean, or a blob of data with encoding specific to that type.\n\nTopics\nLight\nlet HMCharacteristicTypeCurrentLightLevel: String\nThe current light level.\nlet HMCharacteristicTypeHue: String\nThe hue of the color used by a light.\nlet HMCharacteristicTypeBrightness: String\nThe brightness of a light.\nlet HMCharacteristicTypeSaturation: String\nThe saturation of the color used by a light.\nlet HMCharacteristicTypeColorTemperature: String\nThe color temperature of a light.\nPower and switches\nlet HMCharacteristicTypeBatteryLevel: String\nThe battery level of the accessory.\nlet HMCharacteristicTypeChargingState: String\nThe charging state of a battery.\nlet HMCharacteristicTypeContactState: String\nThe state of a contact sensor.\nlet HMCharacteristicTypeOutletInUse: String\nThe state of an outlet.\nlet HMCharacteristicTypePowerState: String\nThe power state of the accessory.\nlet HMCharacteristicTypeStatusLowBattery: String\nA low battery indicator.\nlet HMCharacteristicTypeOutputState: String\nThe output state of a programmable switch.\nlet HMCharacteristicTypeInputEvent: String\nThe input event of a programmable switch.\nTemperature\nlet HMCharacteristicTypeCurrentTemperature: String\nThe current temperature measured by the accessory.\nlet HMCharacteristicTypeTargetTemperature: String\nThe target temperature for the accessory to achieve.\nlet HMCharacteristicTypeTemperatureUnits: String\nThe units of temperature currently active on the accessory.\nlet HMCharacteristicTypeTargetHeatingCooling: String\nThe target heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeCurrentHeatingCooling: String\nThe current heating or cooling mode for a thermostat.\nlet HMCharacteristicTypeTargetHeaterCoolerState: String\nThe target state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCurrentHeaterCoolerState: String\nThe current state for a device that heats or cools, like an oven or a refrigerator.\nlet HMCharacteristicTypeCoolingThreshold: String\nThe temperature above which cooling will be active.\nlet HMCharacteristicTypeHeatingThreshold: String\nThe temperature below which heating will be active.\nenum HMCharacteristicValueCurrentHeatingCooling\nStates that indicate an accessory’s process of increasing or decreasing temperature.\nHumidity\nlet HMCharacteristicTypeCurrentRelativeHumidity: String\nThe current relative humidity measured by the accessory.\nlet HMCharacteristicTypeTargetRelativeHumidity: String\nThe target relative humidity for the accessory to achieve.\nlet HMCharacteristicTypeCurrentHumidifierDehumidifierState: String\nThe current state of a humidifier or dehumidifier accessory.\nlet HMCharacteristicTypeTargetHumidifierDehumidifierState: String\nThe state that a humidifier or dehumidifier accessory should try to achieve.\nlet HMCharacteristicTypeHumidifierThreshold: String\nThe humidity below which a humidifier should begin to work.\nlet HMCharacteristicTypeDehumidifierThreshold: String\nThe humidity above which a dehumidifier should begin to work.\nAir quality and smoke detection\nlet HMCharacteristicTypeAirQuality: String\nThe air quality.\nlet HMCharacteristicTypeAirParticulateDensity: String\nThe density of air-particulate matter.\nlet HMCharacteristicTypeAirParticulateSize: String\nThe size of the air-particulate matter.\nlet HMCharacteristicTypeSmokeDetected: String\nA smoke detection indicator.\nlet HMCharacteristicTypeCarbonDioxideDetected: String\nAn indicator of abnormally high levels of carbon dioxide.\nlet HMCharacteristicTypeCarbonDioxideLevel: String\nThe measured carbon dioxide level.\nlet HMCharacteristicTypeCarbonDioxidePeakLevel: String\nThe highest recorded level of carbon dioxide.\nlet HMCharacteristicTypeCarbonMonoxideDetected: String\nAn indicator of abnormally high levels of carbon monoxide.\nlet HMCharacteristicTypeCarbonMonoxideLevel: String\nThe measured carbon monoxide level.\nlet HMCharacteristicTypeCarbonMonoxidePeakLevel: String\nThe highest recorded level of carbon monoxide.\nlet HMCharacteristicTypeNitrogenDioxideDensity: String\nThe measured density of nitrogen dioxide.\nlet HMCharacteristicTypeOzoneDensity: String\nThe measured density of ozone.\nlet HMCharacteristicTypePM10Density: String\nThe measured density of air-particulate matter of size 10 micrograms.\nlet HMCharacteristicTypePM2_5Density: String\nThe measured density of air-particulate matter of size 2.5 micrograms.\nlet HMCharacteristicTypeSulphurDioxideDensity: String\nThe measured density of sulphur dioxide.\nlet HMCharacteristicTypeVolatileOrganicCompoundDensity: String\nThe measured density of volatile organic compounds.\nFans\nlet HMCharacteristicTypeCurrentFanState: String\nThe current state of a fan.\nlet HMCharacteristicTypeTargetFanState: String\nThe target state of a fan.\nlet HMCharacteristicTypeRotationDirection: String\nThe rotation direction of an accessory like a fan.\nlet HMCharacteristicTypeRotationSpeed: String\nThe rotation speed of an accessory like a fan.\nlet HMCharacteristicTypeSwingMode: String\nAn indicator of whether a fan swings back and forth during operation.\nPurifiers and filters\nlet HMCharacteristicTypeCurrentAirPurifierState: String\nThe current air purifier state.\nlet HMCharacteristicTypeTargetAirPurifierState: String\nThe target air purifier state.\nlet HMCharacteristicTypeFilterLifeLevel: String\nThe amount of useful life remaining in a filter.\nlet HMCharacteristicTypeFilterChangeIndication: String\nA filter’s change indicator.\nlet HMCharacteristicTypeFilterResetChangeIndication: String\nA reset control for a filter change notification.\nWater\nlet HMCharacteristicTypeWaterLevel: String\nThe water level measured by an accessory.\nlet HMCharacteristicTypeValveType: String\nThe type of automated valve that controls fluid flow.\nlet HMCharacteristicTypeLeakDetected: String\nA leak detection indicator.\nDoors and windows\nlet HMCharacteristicTypeCurrentDoorState: String\nThe current door state.\nlet HMCharacteristicTypeTargetDoorState: String\nThe target door state.\nlet HMCharacteristicTypeCurrentPosition: String\nThe current position of a door, window, awning, or window covering.\nlet HMCharacteristicTypeTargetPosition: String\nThe target position of a door, window, awning, or window covering.\nlet HMCharacteristicTypePositionState: String\nThe position of an accessory like a door, window, awning, or window covering.\nlet HMCharacteristicTypeStatusJammed: String\nAn indicator of whether an accessory is jammed.\nlet HMCharacteristicTypeHoldPosition: String\nA control for holding the position of an accessory like a door or window.\nlet HMCharacteristicTypeSlatType: String\nThe type of slat on an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentSlatState: String\nThe current state of slats on an accessory like a window or a fan.\nenum HMCharacteristicValueTargetDoorState\nValues that indicate the state of a door.\nTilting mechanisms\nlet HMCharacteristicTypeCurrentHorizontalTilt: String\nThe current tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetHorizontalTilt: String\nThe target tilt angle of a horizontal slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentVerticalTilt: String\nThe current tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetVerticalTilt: String\nThe target tilt angle of a vertical slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeCurrentTilt: String\nThe current tilt angle of a slat for an accessory like a window or a fan.\nlet HMCharacteristicTypeTargetTilt: String\nThe target tilt angle of a slat for an accessory like a window or a fan.\nLocks and openers\nlet HMCharacteristicTypeLockManagementAutoSecureTimeout: String\nThe automatic timeout for a lockable accessory that supports automatic lockout.\nlet HMCharacteristicTypeLockManagementControlPoint: String\nA control that accepts vendor-specific actions for lock management.\nlet HMCharacteristicTypeLockMechanismLastKnownAction: String\nThe last known action of the locking mechanism.\nlet HMCharacteristicTypeLockPhysicalControls: String\nThe lock’s physical control state.\nlet HMCharacteristicTypeMotionDetected: String\nAn indicator of whether the accessory has detected motion.\nlet HMCharacteristicTypeCurrentLockMechanismState: String\nThe current state of the locking mechanism.\nlet HMCharacteristicTypeTargetLockMechanismState: String\nThe target state for the locking mechanism.\nenum HMCharacteristicValueTargetLockMechanismState\nValues that indicate the state of a locking device.\nSafety and security\nlet HMCharacteristicTypeCurrentSecuritySystemState: String\nThe current security system state.\nlet HMCharacteristicTypeTargetSecuritySystemState: String\nThe target security system state.\nlet HMCharacteristicTypeObstructionDetected: String\nAn indicator of whether an obstruction is detected, as when something prevents a garage door from closing.\nlet HMCharacteristicTypeOccupancyDetected: String\nAn indicator of whether the home is occupied.\nlet HMCharacteristicTypeSecuritySystemAlarmType: String\nThe alarm trigger state.\nAudio and video\nlet HMCharacteristicTypeSupportedRTPConfiguration: String\nThe supported Real-time Transport Protocol (RTP) configuration.\nlet HMCharacteristicTypeDigitalZoom: String\nThe digital zoom of a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeOpticalZoom: String\nThe optical zoom setting of the camera sourcing a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeImageMirroring: String\nAn indicator of whether the image should be flipped about the vertical axis.\nlet HMCharacteristicTypeImageRotation: String\nThe angle of rotation for an image.\nlet HMCharacteristicTypeNightVision: String\nAn indicator of whether night vision is enabled on a video Real-time Transport Protocol (RTP) service.\nlet HMCharacteristicTypeStreamingStatus: String\nA description of the status of the Real-time Transport Protocol (RTP) stream management service.\nlet HMCharacteristicTypeSupportedVideoStreamConfiguration: String\nThe video stream’s configuration.\nlet HMCharacteristicTypeSupportedAudioStreamConfiguration: String\nThe audio stream’s configuration.\nlet HMCharacteristicTypeSelectedStreamConfiguration: String\nThe selected stream’s configuration.\nlet HMCharacteristicTypeSetupStreamEndpoint: String\nThe stream's endpoint configuration.\nlet HMCharacteristicTypeAudioFeedback: String\nAn indicator of whether audio feedback, like a beep or other external sound mechanism, is enabled.\nlet HMCharacteristicTypeVolume: String\nThe input or output volume of an audio device.\nlet HMCharacteristicTypeMute: String\nA control for muting audio.\nGeneral state\nlet HMCharacteristicTypeActive: String\nThe current status of an accessory.\nlet HMCharacteristicTypeStatusTampered: String\nAn indicator of whether an accessory has been tampered with.\nlet HMCharacteristicTypeStatusFault: String\nAn indicator of whether the accessory has experienced a fault.\nlet HMCharacteristicTypeStatusActive: String\nAn indicator of whether the service is working.\nlet HMCharacteristicTypeInUse: String\nThe current usage state of an accessory.\nlet HMCharacteristicTypeIsConfigured: String\nThe configuration state of an accessory.\nlet HMCharacteristicTypeRemainingDuration: String\nThe number of seconds remaining for the activity being carried out by the accessory.\nlet HMCharacteristicTypeSetDuration: String\nThe duration of the activity being carried out by the accessory.\nlet HMCharacteristicTypeProgramMode: String\nThe current mode of the accessory’s scheduled programs.\nAccessory identification\nlet HMCharacteristicTypeName: String\nThe name of the accessory.\nlet HMCharacteristicTypeIdentify: String\nA control you can use to ask the accessory to identify itself.\nlet HMCharacteristicTypeVersion: String\nThe version of the accessory.\nlet HMCharacteristicTypeLogs: String\nLog data for the accessory.\nlet HMCharacteristicTypeAdminOnlyAccess: String\nAn indicator of whether the accessory accepts only administrator access.\nlet HMCharacteristicTypeHardwareVersion: String\nThe hardware version of the accessory.\nlet HMCharacteristicTypeSoftwareVersion: String\nThe software version of the accessory.\nlet HMCharacteristicTypeLabelIndex: String\nThe index of the label for the service on an accessory with multiple instances of the same service.\nlet HMCharacteristicTypeLabelNamespace: String\nThe naming schema used to label the services on an accessory with multiple services of the same type.\nDeprecated characteristic types\nlet HMCharacteristicTypeManufacturer: String\nThe manufacturer of the accessory.\nDeprecated\nlet HMCharacteristicTypeModel: String\nThe model of the accessory.\nDeprecated\nlet HMCharacteristicTypeFirmwareVersion: String\nThe firmware version of the accessory.\nDeprecated\nlet HMCharacteristicTypeSerialNumber: String\nThe serial number of the accessory.\nDeprecated\nSee Also\nDetermining what a characteristic controls\nvar characteristicType: String\nThe type of the characteristic."
  },
  {
    "title": "errorDomain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2883256-errordomain",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "predicateForEvaluatingTrigger(occurringBefore:applyingOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624401-predicateforevaluatingtrigger",
    "html": "Deprecated\n\nUse predicateForEvaluatingTriggerOccurring(beforeSignificantEvent:) instead.\n\nParameters\nsignificantEvent\n\nThe significant event to compare against. Valid values for this parameter are HMSignificantEventSunrise and HMSignificantEventSunset.\n\noffset\n\nAn offset from the time of the significant event. To specify an offset before a significant event, the properties of the NSDateComponents object must be negative values. For example, to specify 30 minutes before sunset, set the minute property to -30.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nDeprecated symbols\nfunc addEvent(HMEvent, completionHandler: (Error?) -> Void)\nAdds a new event to the event trigger.\nDeprecated\nfunc removeEvent(HMEvent, completionHandler: (Error?) -> Void)\nRemoves the specified event from the event trigger.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringAfter: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated"
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3726596-hashvalue",
    "html": "See Also\nObtaining error information\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "addEvent(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624416-addevent",
    "html": "Deprecated\n\nUse updateEvents(_:completionHandler:) instead.\n\nParameters\nevent\n\nAn event to add to the event trigger.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addEvent(_ event: HMEvent) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDeprecated symbols\nfunc removeEvent(HMEvent, completionHandler: (Error?) -> Void)\nRemoves the specified event from the event trigger.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringBefore: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringAfter: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated"
  },
  {
    "title": "predicateForEvaluatingTrigger(occurringAfter:applyingOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624406-predicateforevaluatingtrigger",
    "html": "Deprecated\n\nUse predicateForEvaluatingTriggerOccurring(afterSignificantEvent:) instead.\n\nParameters\nsignificantEvent\n\nThe significant event to compare against. Valid values for this parameter are HMSignificantEventSunrise and HMSignificantEventSunset.\n\noffset\n\nAn offset from the time of the significant event. To specify an offset after a significant event, the properties of the NSDateComponents object must be positive values. For example, to specify 30 minutes after sunset, set the minute property to 30.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nDeprecated symbols\nfunc addEvent(HMEvent, completionHandler: (Error?) -> Void)\nAdds a new event to the event trigger.\nDeprecated\nfunc removeEvent(HMEvent, completionHandler: (Error?) -> Void)\nRemoves the specified event from the event trigger.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringBefore: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated"
  },
  {
    "title": "HMPresenceKeyPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmpresencekeypath",
    "html": "See Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate."
  },
  {
    "title": "nilParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325625-nilparameter",
    "html": "See Also\nDetecting parameter errors\nstatic var invalidParameter: HMError.Code\nAn error indicating the object is invalid for the given operation.\nstatic var missingParameter: HMError.Code\nAn error indicating a missing parameter.\nstatic var unconfiguredParameter: HMError.Code\nAn error indicating an unconfigured parameter."
  },
  {
    "title": "invalidParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325602-invalidparameter",
    "html": "Discussion\n\nFor example, the home object issues an error when attempting to add a room that exists in another home.\n\nSee Also\nDetecting parameter errors\nstatic var missingParameter: HMError.Code\nAn error indicating a missing parameter.\nstatic var nilParameter: HMError.Code\nAn error indicating that nil was passed for an operation that does not accept nil.\nstatic var unconfiguredParameter: HMError.Code\nAn error indicating an unconfigured parameter."
  },
  {
    "title": "operationInProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325631-operationinprogress",
    "html": "See Also\nDetecting operation errors\nstatic var operationCancelled: HMError.Code\nAn error indicating the user canceled the operation.\nstatic var operationTimedOut: HMError.Code\nAn error indicating the operation timed out."
  },
  {
    "title": "init(_:userInfo:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3726597-init",
    "html": "Parameters\ncode\n\nThe error code.\n\nuserInfo\n\nUser-specific information."
  },
  {
    "title": "wiFiCredentialGenerationFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3334883-wificredentialgenerationfailed",
    "html": "See Also\nDetecting network errors\nstatic var enterpriseNetworkNotSupported: HMError.Code\nAn enterprise network doesn’t support this accessory.\nstatic var failedToJoinNetwork: HMError.Code\nThe accessory failed to join the network.\nstatic var incompatibleNetwork: HMError.Code\nAn error indicating an incompatible network.\nstatic var networkUnavailable: HMError.Code\nAn error indicating the network is unavailable."
  },
  {
    "title": "operationTimedOut | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325664-operationtimedout",
    "html": "See Also\nDetecting operation errors\nstatic var operationCancelled: HMError.Code\nAn error indicating the user canceled the operation.\nstatic var operationInProgress: HMError.Code\nAn error indicating the operation is already in progress."
  },
  {
    "title": "operationCancelled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325617-operationcancelled",
    "html": "See Also\nDetecting operation errors\nstatic var operationInProgress: HMError.Code\nAn error indicating the operation is already in progress.\nstatic var operationTimedOut: HMError.Code\nAn error indicating the operation timed out."
  },
  {
    "title": "missingParameter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325651-missingparameter",
    "html": "See Also\nDetecting parameter errors\nstatic var invalidParameter: HMError.Code\nAn error indicating the object is invalid for the given operation.\nstatic var nilParameter: HMError.Code\nAn error indicating that nil was passed for an operation that does not accept nil.\nstatic var unconfiguredParameter: HMError.Code\nAn error indicating an unconfigured parameter."
  },
  {
    "title": "notificationAlreadyEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325665-notificationalreadyenabled",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "notificationNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325648-notificationnotsupported",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "invalidClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325661-invalidclass",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "accessoryDiscoveryFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325654-accessorydiscoveryfailed",
    "html": "See Also\nDetecting device and discovery errors\nstatic var deviceLocked: HMError.Code\nAn error indicating the device is locked."
  },
  {
    "title": "incompatibleHomeHub | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2889848-incompatiblehomehub",
    "html": "Deprecated\n\nUse noCompatibleHomeHub instead.\n\nSee Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "genericError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325603-genericerror",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "notFound | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325645-notfound",
    "html": "See Also\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "timedOutWaitingForAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3565652-timedoutwaitingforaccessory",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed."
  },
  {
    "title": "alreadyExists | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325609-alreadyexists",
    "html": "See Also\nDetecting general errors\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual."
  },
  {
    "title": "deviceLocked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325604-devicelocked",
    "html": "See Also\nDetecting device and discovery errors\nstatic var accessoryDiscoveryFailed: HMError.Code\nAn error indicating that accessory discovery failed."
  },
  {
    "title": "dataResetFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325597-dataresetfailure",
    "html": "See Also\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely."
  },
  {
    "title": "identify(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615259-identify",
    "html": "Parameters\ncompletion\n\nBlock that is invoked once the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc identify() async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nAccessories typically identify themselves by briefly doing something the user can see or hear. The behavior is specific to the device. For example, a light bulb might identify itself by briefly turning on if it is currently off, or by briefly dimming if it is currently on. This can help a user pinpoint one device among several that are similar.\n\nSee Also\nAsking an accessory to identify itself\nvar supportsIdentify: Bool\nA Boolean value that indicates whether the accessory supports the identify action."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615888-name",
    "html": "Discussion\n\nRename services by calling the updateName(_:completionHandler:) method with a value given by the user.\n\nSee Also\nIdentifying the service\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service to the specified string.\nvar uniqueIdentifier: UUID\nA unique identifier for the service."
  },
  {
    "title": "supportsIdentify | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/2948909-supportsidentify",
    "html": "Discussion\n\nIf false, any calls to the identify(completionHandler:) method return an error. However, even if this property is true, calls to identify(completionHandler:) may not succeed.\n\nSee Also\nAsking an accessory to identify itself\nfunc identify(completionHandler: (Error?) -> Void)\nAsks an accessory to identify itself."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615883-uniqueidentifier",
    "html": "See Also\nIdentifying the service\nvar name: String\nThe user specified name of the service.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service to the specified string."
  },
  {
    "title": "localizedDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615890-localizeddescription",
    "html": "See Also\nGetting the service type\nvar serviceType: String\nThe type of the service.\nAccessory Service Types\nThe service types supported by HomeKit."
  },
  {
    "title": "characteristics | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615893-characteristics",
    "html": "See Also\nGetting service characteristics\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "isUserInteractive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615891-isuserinteractive",
    "html": "See Also\nReading service properties\nvar isPrimaryService: Bool\nA Boolean value that indicates whether this service is the primary service on the accessory."
  },
  {
    "title": "isPrimaryService | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1650059-isprimaryservice",
    "html": "See Also\nReading service properties\nvar isUserInteractive: Bool\nA Boolean value that indicates whether this service supports user interaction."
  },
  {
    "title": "HMCharacteristicKeyPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristickeypath",
    "html": "See Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "predicateForEvaluatingTrigger(occurringAfter:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624414-predicateforevaluatingtrigger",
    "html": "Parameters\ndateComponents\n\nDate components that represent the time to compare with the time that the event occurred.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "associatedServiceType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615889-associatedservicetype",
    "html": "Discussion\n\nBecause different things can be plugged into outlets or controlled by switches, there is a tight association between a switch or outlet service and another service that it controls—for example, a lamp plugged into an outlet associates a lightbulb service with the outlet, even if the lamp itself is not a supported HomeKit accessory.\n\nThe associated service can be any service defined by the HomeKit Accessory Profile that supports HMCharacteristicTypePowerState, other than HMServiceTypeOutlet or HMServiceTypeSwitch.\n\nSee Accessory Service Types for a list of service types.\n\nSee Also\nAssociating a secondary service\nfunc updateAssociatedServiceType(String?, completionHandler: (Error?) -> Void)\nAssociates the service type of the plugged-in device with a switch or an outlet service."
  },
  {
    "title": "init(name:events:predicate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624402-init",
    "html": "Parameters\nname\n\nThe name of the event trigger.\n\nevents\n\nAn array of events that can activate the evaluation of the event trigger. The trigger is evaluated if any one of the events is true.\n\npredicate\n\nThe predicate to test and activate after evaluating the event trigger. Once activated, the event's scenes execute. If a value isn't specified the event trigger executes the scene if any of the events activate.\n\nSee Also\nCreating an event trigger\ninit(name: String, events: [HMEvent], end: [HMEvent]?, recurrences: [DateComponents]?, predicate: NSPredicate?)\nCreates a new event trigger with the specified name, events, end events, recurrences, and predicate."
  },
  {
    "title": "predicateForEvaluatingTrigger(occurringOn:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624407-predicateforevaluatingtrigger",
    "html": "Parameters\ndateComponents\n\nDate components that represent the time to compare with the time that the event occurred.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "HMCharacteristicEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicevent",
    "html": "Topics\nCreating a characteristic event\ninit(characteristic: HMCharacteristic, triggerValue: TriggerValueType?)\nCreates a new characteristic event which triggers when the specified characteristic reaches the specified value.\nInspecting the event\nvar characteristic: HMCharacteristic\nThe characteristic associated with the event.\nvar triggerValue: TriggerValueType?\nThe value of the characteristic that triggers the event.\nConfiguring the event\nfunc updateTriggerValue(TriggerValueType?, completionHandler: (Error?) -> Void)\nChanges the trigger value associated with this event.\nDeprecated\nRelationships\nInherits From\nHMEvent\nConforms To\nNSCopying\nNSMutableCopying\nSendable\nSee Also\nCharacteristics\nclass HMMutableCharacteristicEvent\nA mutable event that is evaluated based on the value of a characteristic."
  },
  {
    "title": "triggerActivationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2888318-triggeractivationstate",
    "html": "Discussion\n\nSpecifies whether the trigger is currently active, or describes the problem.\n\nSee Also\nQuerying trigger activation state\nenum HMEventTriggerActivationState\nThe activation state of an event trigger."
  },
  {
    "title": "init(name:events:end:recurrences:predicate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881289-init",
    "html": "Parameters\nname\n\nThe name of the event trigger.\n\nevents\n\nAn array of events that can activate the evaluation of the event trigger. The trigger is evaluated if any one of the events is true.\n\nendEvents\n\nAn array of events that can trigger the end of the scene that this event trigger represents.\n\nrecurrences\n\nSpecifies the days of the week to evaluate the trigger. All properties other than weekday on DateComponents are ignored.\n\npredicate\n\nThe predicate to test and activate after evaluating the event trigger. Once activated, the event's scenes execute. If a value isn't specified the event trigger executes the scene if any of the events activate.\n\nReturn Value\n\nAn initialized event trigger.\n\nSee Also\nCreating an event trigger\ninit(name: String, events: [HMEvent], predicate: NSPredicate?)\nCreates a new event trigger with the specified name, events, and predicate."
  },
  {
    "title": "HMEventTriggerActivationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtriggeractivationstate",
    "html": "Topics\nInspecting activation state\ncase disabled\nTrigger is not activated.\ncase disabledNoCompatibleHomeHub\nTrigger is not active because there is no compatible home hub.\ncase disabledNoHomeHub\nTrigger is not active because there is no home hub.\ncase disabledNoLocationServicesAuthorization\nTrigger is not active because the user has not authorized use of location services.\ncase enabled\nThe trigger is currently active.\nRelationships\nConforms To\nSendable\nSee Also\nQuerying trigger activation state\nvar triggerActivationState: HMEventTriggerActivationState\nThe current activation state of the trigger."
  },
  {
    "title": "Location events | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/location_events",
    "html": "Topics\nLocations\nclass HMLocationEvent\nAn event that is evaluated based on entry to or exit from a region.\nclass HMMutableLocationEvent\nA mutable event that is evaluated based on entry to or exit from a region.\nSee Also\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nTime events\nEvents based on time, significant occurrences, and time durations.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nPresence events\nEvents based on the user's presence in a home.\nclass HMEvent\nThe abstract base class for a HomeKit event."
  },
  {
    "title": "authorizationStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/3333260-authorizationstatus",
    "html": "Discussion\n\nThe first time your app uses the HomeKit framework—typically, when you create a HMHomeManager instance—the system automatically prompts the user for permission to access home data. You don’t make an explicit request for access, but you can modify the behavior of your app based on the current authorization status. For example, if your app lacks access to home data, you might omit certain features from your UI.\n\nThe authorizationStatus property contains a bit field that indicates the current authorization status. Your app has home data authorization only when the authorized bit is present:\n\nif myHomeManager.authorizationStatus.contains(.authorized) {\n    // The app is authorized to access home data.\n}\n\n\nUsers can revoke permission at any time in the Settings app, so your app should always be prepared to handle errors caused by lack of access.\n\nFor more information about gaining authorization to access home data, see Enabling HomeKit in your app.\n\nSee Also\nInspecting authorization status\nstruct HMHomeManagerAuthorizationStatus\nThe possible home-access states."
  },
  {
    "title": "Characteristic events | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/characteristic_events",
    "html": "Topics\nCharacteristics\nclass HMCharacteristicEvent\nAn event that is evaluated based on the value of a characteristic.\nclass HMMutableCharacteristicEvent\nA mutable event that is evaluated based on the value of a characteristic.\nCharacteristic ranges\nclass HMNumberRange\nA set of numbers used to specify conditions for characteristic range threshold events.\nclass HMCharacteristicThresholdRangeEvent\nAn event that triggers when the value of a characteristic is within a specified range.\nclass HMMutableCharacteristicThresholdRangeEvent\nA mutable event that triggers when the value of a characteristic is within a specified range.\nSee Also\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nLocation events\nEvents that represent the user's movement among regions.\nTime events\nEvents based on time, significant occurrences, and time durations.\nPresence events\nEvents based on the user's presence in a home.\nclass HMEvent\nThe abstract base class for a HomeKit event."
  },
  {
    "title": "endEvents | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881078-endevents",
    "html": "Discussion\n\nHomeKit restores the previously active scene when the events in this array trigger. For example, you can use end events to execute a scene for 10 minutes by specifying an HMDurationEvent in the list of endEvents. This restores the previous scene when the duration event triggers.\n\nYou can also use HMCharacteristicEvent and HMCharacteristicThresholdRangeEvent objects as end events.\n\nSee Also\nRestoring the previous scene after an event\nfunc updateEndEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of end events associated with the event trigger."
  },
  {
    "title": "HMEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmevent",
    "html": "Topics\nGetting information about the event\nvar uniqueIdentifier: UUID\nA unique identifier for the event.\nclass func isSupported(for: HMHome) -> Bool\nA Boolean value indicating whether the event can be added to an event trigger on the specified home.\nInitializers\ninit()\nDeprecated\nType Methods\nclass func new() -> Self\nDeprecated\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nLocation events\nEvents that represent the user's movement among regions.\nTime events\nEvents based on time, significant occurrences, and time durations.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nPresence events\nEvents based on the user's presence in a home."
  },
  {
    "title": "Presence events | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/presence_events",
    "html": "Topics\nUser presence\nclass HMPresenceEvent\nAn event that triggers based on the presence of users in the home.\nclass HMMutablePresenceEvent\nA mutable event that triggers based on the presence of users in the home.\nenum HMPresenceEventType\nThe user presence type that triggers a presence event.\nenum HMPresenceEventUserType\nThe group of users that triggers a presence event.\nSee Also\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nLocation events\nEvents that represent the user's movement among regions.\nTime events\nEvents based on time, significant occurrences, and time durations.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nclass HMEvent\nThe abstract base class for a HomeKit event."
  },
  {
    "title": "recurrences | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1649271-recurrences",
    "html": "Discussion\n\nThis property represents the days of the week that the trigger recurs; the trigger ignores all properties other than weekday on the DateComponents object.\n\nSee Also\nControlling recurrence\nfunc updateRecurrences([DateComponents]?, completionHandler: (Error?) -> Void)\nUpdates the days of the week the trigger can repeat.\nvar executeOnce: Bool\nA Boolean that can execute the trigger many times.\nfunc updateExecuteOnce(Bool, completionHandler: (Error?) -> Void)\nUpdates the repetition status of the event trigger."
  },
  {
    "title": "updateEndEvents(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881287-updateendevents",
    "html": "Parameters\nendEvents\n\nAn array of events that replaces the end events on the trigger.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateEndEvents(_ endEvents: [HMEvent]) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nRestoring the previous scene after an event\nvar endEvents: [HMEvent]\nThe events associated with the end of scene represented by this trigger."
  },
  {
    "title": "updateExecuteOnce(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881288-updateexecuteonce",
    "html": "Parameters\nexecuteOnce\n\nA Boolean value that specifies whether to repeat the trigger.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateExecuteOnce(_ executeOnce: Bool) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nControlling recurrence\nvar recurrences: [DateComponents]?\nSpecifies the days on which the trigger can execute.\nfunc updateRecurrences([DateComponents]?, completionHandler: (Error?) -> Void)\nUpdates the days of the week the trigger can repeat.\nvar executeOnce: Bool\nA Boolean that can execute the trigger many times."
  },
  {
    "title": "updateRecurrences(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1649272-updaterecurrences",
    "html": "Parameters\nrecurrences\n\nAn array of DateComponents that represent the days of the week that the event trigger can repeat. Only respects the weekday property of DateComponents.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateRecurrences(_ recurrences: [DateComponents]?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nControlling recurrence\nvar recurrences: [DateComponents]?\nSpecifies the days on which the trigger can execute.\nvar executeOnce: Bool\nA Boolean that can execute the trigger many times.\nfunc updateExecuteOnce(Bool, completionHandler: (Error?) -> Void)\nUpdates the repetition status of the event trigger."
  },
  {
    "title": "fireDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616261-firedate",
    "html": "Discussion\n\nTimer triggers are only set at the beginning of a minute. Seconds are not used and an error will be returned if the fire date includes a seconds value other than 0. When the timer fires, it will typically fire within 1 minute of the scheduled fire date or calculated recurrence fire date, depending on system power and resource management.\n\nSee Also\nChoosing the fire date\nfunc updateFireDate(Date, completionHandler: (Error?) -> Void)\nUpdates the next fire date for the trigger."
  },
  {
    "title": "init(name:fireDate:timeZone:recurrence:recurrenceCalendar:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616266-init",
    "html": "Parameters\nname\n\nThe name of the timer trigger.\n\nfireDate\n\nThe first fire date.\n\ntimeZone\n\nThe time zone for the first fire date. Pass nil to use the default time zone. See timeZone for a description of how the time zone is interpreted.\n\nrecurrence\n\nThe recurrence interval on which to fire the trigger. nil indicates a one-time trigger.\n\nrecurrenceCalendar\n\nThe calendar in which to evaluate the recurrence interval of a timer trigger. May be nil, in which case the current calendar (current) is used.\n\nReturn Value\n\nA newly-initialized timer trigger with the specified values.\n\nDiscussion\n\nA new timer trigger starts out disabled, and must be enabled using enable(_:completionHandler:) before use."
  },
  {
    "title": "executeOnce | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881081-executeonce",
    "html": "Discussion\n\nDisables the trigger after its first execution if true.\n\nSee Also\nControlling recurrence\nvar recurrences: [DateComponents]?\nSpecifies the days on which the trigger can execute.\nfunc updateRecurrences([DateComponents]?, completionHandler: (Error?) -> Void)\nUpdates the days of the week the trigger can repeat.\nfunc updateExecuteOnce(Bool, completionHandler: (Error?) -> Void)\nUpdates the repetition status of the event trigger."
  },
  {
    "title": "recurrence | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616260-recurrence",
    "html": "Discussion\n\nThis value may be nil if the trigger should not repeat.\n\nThe next fire date is calculated by adding the date components to the last fire date, as evaluated in the context of the trigger’s recurrenceCalendar. Depending on the calendar, some date components may result in an undefined next fire date.\n\nThe minimum recurrence interval is five minutes, and the most precision possible are whole minute values—you may not specify seconds in a recurrence interval. The maximum recurrence interval is five weeks.\n\nSee Also\nUsing recurrence\nfunc updateRecurrence(DateComponents?, completionHandler: (Error?) -> Void)\nUpdates the recurrence interval.\nvar recurrenceCalendar: Calendar?\nThe calendar in which the recurrence value is evaluated.\nDeprecated"
  },
  {
    "title": "updateTimeZone(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616265-updatetimezone",
    "html": "Parameters\ntimeZone\n\nThe new time zone; may be nil.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateTimeZone(_ timeZone: TimeZone?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee timeZone for a description of how the time zone is interpreted.\n\nSee Also\nIndicating a time zone\nvar timeZone: TimeZone?\nThe timezone in which to evaluate the fire time.\nDeprecated"
  },
  {
    "title": "HMUserFailedAccessoriesKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmuserfailedaccessorieskey",
    "html": "Discussion\n\nThe value associated with this key is an NSArray of NSDictionary objects. Each dictionary contains the UUID of the accessory that failed to be added/removed and the value corresponding to the dictionary key is an NSError that provides more details on the underlying error for that accessory.\n\nSee Also\nControlling user access\nfunc homeAccessControl(for: HMUser) -> HMHomeAccessControl\nRetrieves the access level of a user associated with the home.\nclass HMHomeAccessControl\nThe access privileges of a user associated with a home.\nclass HMAccessControl\nAn abstract superclass for accessing user privileges."
  },
  {
    "title": "executeActionSet(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620256-executeactionset",
    "html": "Parameters\nactionSet\n\nThe action set to execute.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc executeActionSet(_ actionSet: HMActionSet) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nCreating action sets\nvar actionSets: [HMActionSet]\nAn array of the action sets in the home.\nfunc addActionSet(withName: String, completionHandler: (HMActionSet?, Error?) -> Void)\nAdds a new action set to the home.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the home.\nfunc builtinActionSet(ofType: String) -> HMActionSet?\nRetrieves the builtin action set for the specified type.\nclass HMActionSet\nA collection of actions that you trigger as a group."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616797-updatename",
    "html": "Parameters\nname\n\nThe new name; must not be nil.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nIdentifiying an action set\nvar uniqueIdentifier: UUID\nThe action set's unique identifier.\nvar name: String\nThe name of the action set."
  },
  {
    "title": "users | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620254-users",
    "html": "See Also\nDeprecated symbols\nfunc addUser(completionHandler: (HMUser?, Error?) -> Void)\nAdds a user to the home.\nDeprecated\nfunc removeUser(HMUser, completionHandler: (Error?) -> Void)\nRemoves a user from the home.\nDeprecated"
  },
  {
    "title": "addAccessoryFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325587-addaccessoryfailed",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "incompatibleAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2953982-incompatibleaccessory",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory."
  },
  {
    "title": "actionSetExecutionFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325637-actionsetexecutionfailed",
    "html": "See Also\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets."
  },
  {
    "title": "accessoryOutOfResources | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325583-accessoryoutofresources",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "accessoryResponseError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325659-accessoryresponseerror",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "accessoryNotReachable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325615-accessorynotreachable",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "accessoryPoweredOff | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325591-accessorypoweredoff",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "accessoryIsBusy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325633-accessoryisbusy",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "localizedDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2883258-localizeddescription",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error."
  },
  {
    "title": "accessoryOutOfCompliance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325658-accessoryoutofcompliance",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "accessoryIsBlocked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325580-accessoryisblocked",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "accessoryIsSuspended | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/3749163-accessoryissuspended",
    "html": "See Also\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible."
  },
  {
    "title": "errorUserInfo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2883257-erroruserinfo",
    "html": "See Also\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar localizedDescription: String\nA localized, human-readable explanation of the error."
  },
  {
    "title": "isExecuting | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616792-isexecuting",
    "html": "Discussion\n\ntrue while executing, otherwise false.\n\nSee Also\nKeeping track of execution\nvar lastExecutionDate: Date?\nThe last execution date of the action set."
  },
  {
    "title": "addTrigger(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620271-addtrigger",
    "html": "Parameters\ntrigger\n\nThe name of the new trigger. Must not be nil, and must not be the name of a trigger already in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\ntrigger\n\nThe newly created trigger.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addTrigger(_ trigger: HMTrigger) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nTriggering an action set\nvar triggers: [HMTrigger]\nAn array of triggers defined in the home.\nfunc removeTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nRemoves a trigger from the home.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions.\nclass HMTrigger\nAn abstract base class for triggering actions based on a set of conditions."
  },
  {
    "title": "HMAccessoryCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorycategory",
    "html": "Overview\n\nA category represents a class of devices, like light bulbs or outlets. You can use a category to help users identify the types of accessories they’re browsing. For example, when adding a lamp and a fan to a home, users might not be able to distinguish these accessories if you display only the manufacturer name and model number for each accessory. To improve the user experience, you can use the category information associated with each accessory to help the user understand which accessory is the lamp and which is the fan.\n\nTopics\nReading the category type\nvar categoryType: String\nThe category to which this accessory belongs.\nAccessory Category Types\nThe accessory category types supported by HomeKit.\nDescribing the category\nvar localizedDescription: String\nA localized description of the category.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nCategorizing an accessory\nvar category: HMAccessoryCategory\nThe category to which the accessory belongs."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620240-updatename",
    "html": "Parameters\nname\n\nThe new name. Must not already exist in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nIdentifying a home\nvar name: String\nThe name the user gives to the home.\nvar uniqueIdentifier: UUID\nA unique identifier for the home.\nvar isPrimary: Bool\nA Boolean value that indicates whether this is the primary home for its home manager."
  },
  {
    "title": "removeUser(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620251-removeuser",
    "html": "Deprecated\n\nUse manageUsers(completionHandler:) instead.\n\nParameters\nuser\n\nThe user to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure. error.userInfo[HMUserFailedAccessoriesKey] contains more information in case of failure. See HMUserFailedAccessoriesKey for more details.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeUser(_ user: HMUser) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDeprecated symbols\nvar users: [HMUser]\nAll users associated with the home.\nDeprecated\nfunc addUser(completionHandler: (HMUser?, Error?) -> Void)\nAdds a user to the home.\nDeprecated"
  },
  {
    "title": "isPrimary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620261-isprimary",
    "html": "See Also\nIdentifying a home\nvar name: String\nThe name the user gives to the home.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the home.\nvar uniqueIdentifier: UUID\nA unique identifier for the home."
  },
  {
    "title": "accessory(_:service:didUpdateValueFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate/1615286-accessory",
    "html": "Parameters\naccessory\n\nThe accessory.\n\nservice\n\nThe service with a changed characteristic value.\n\ncharacteristic\n\nThe characteristic whose value changed.\n\nDiscussion\n\nThis method is called as a result of a change in value initiated by the accessory. Programmatic changes initiated by the app do not result in this method being called.\n\nSee Also\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory."
  },
  {
    "title": "removeHome(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/1616754-removehome",
    "html": "Parameters\nhome\n\nThe home to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeHome(_ home: HMHome) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThis method returns an error if the specified home is not managed by the home manager.\n\nSee Also\nAdding and removing homes\nfunc addHome(withName: String, completionHandler: (HMHome?, Error?) -> Void)\nAdds a new home to this home manager."
  },
  {
    "title": "characteristicType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624197-characteristictype",
    "html": "Discussion\n\nA characteristic’s characteristicType is a string constant that tells you what the characteristic’s value represents. For example, if you detect a characteristic type of HMCharacteristicTypeCurrentTemperature, then you know that the corresponding value is a measure of the current temperature.\n\nif characteristic.characteristicType == HMCharacteristicTypeCurrentTemperature,\n    let temperatureValue = (characteristic.value as? NSNumber)?.floatValue {\n        \n    let temperature = String(format: \"%.1f\", temperatureValue)\n    print(\"The current temperature is \\(temperature) °C\")\n}\n\n\nFrom the type, you can typically infer the value’s format. The value for the current temperature is always a floating point number measured in degrees Celsius, as shown in the code snippet above. You can also use the characteristic’s metadata to get explicit and detailed guidance on how to format the value.\n\nSee Characteristic types for a list of standard types.\n\nSee Also\nDetermining what a characteristic controls\nCharacteristic types\nThe characteristic types supported by HomeKit-based accessories."
  },
  {
    "title": "addUser(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620213-adduser",
    "html": "Deprecated\n\nUse manageUsers(completionHandler:) instead.\n\nParameters\ncompletion\n\nThe block executed after the request is processed.\n\nuser\n\nThe user that was added to the home.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure. error.userInfo[HMUserFailedAccessoriesKey] contains more information in case of failure. See HMUserFailedAccessoriesKey for more details.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addUser() async throws -> HMUser\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDeprecated symbols\nvar users: [HMUser]\nAll users associated with the home.\nDeprecated\nfunc removeUser(HMUser, completionHandler: (Error?) -> Void)\nRemoves a user from the home.\nDeprecated"
  },
  {
    "title": "HMCharacteristicMetadata | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicmetadata",
    "html": "Overview\n\nQuerying a characteristic’s metadata enables you to build a user interface that reflects the underlying units, minima, and maxima, and other aspects of the characteristic value.\n\nTopics\nDescribing a characteristic\nvar manufacturerDescription: String?\nA description of the characteristic provided by the accessory manufacturer.\nBounding the value\nvar validValues: [NSNumber]?\nThe subset of valid values supported by the characteristic when the format is of type unsigned integer.\nvar minimumValue: NSNumber?\nThe minimum value for the characteristic.\nvar maximumValue: NSNumber?\nThe maximum value for the characteristic.\nvar stepValue: NSNumber?\nThe minimum interval between values for the characteristic.\nvar maxLength: NSNumber?\nThe maximum number of UTF-8 characters allowed in a characteristic that uses a string format.\nFormatting the value\nvar format: String?\nThe format of the values for the characteristic.\nCharacteristic Data Formats\nConstants for identifying the data format of characteristic values.\nSpecifying units\nvar units: String?\nThe units of the characteristic value.\nCharacteristic Units\nDescriptions of the units of a characteristic.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nManaging characteristic presentation\nvar metadata: HMCharacteristicMetadata?\nMetadata about the units and other properties of the characteristic."
  },
  {
    "title": "isReachable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615257-isreachable",
    "html": "See Also\nGetting accessory state\nvar isBlocked: Bool\nA Boolean value indicating whether the accessory is blocked."
  },
  {
    "title": "metadata | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624196-metadata",
    "html": "Discussion\n\nYou can typically infer a lot about a characteristic’s value from its characteristicType, like if the value is a string, a number, or in some other format; what the units are; and what range of values to expect. To obtain this information explicitly, inspect the characteristic’s metadata, represented by an instance of the HMCharacteristicMetadata class.\n\nSee Also\nManaging characteristic presentation\nclass HMCharacteristicMetadata\nMetadata that describes a characteristic’s value and that may be useful for presentation purposes."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624187-uniqueidentifier",
    "html": "See Also\nIdentifying a characteristic\nvar localizedDescription: String\nThe localized description of the characteristic."
  },
  {
    "title": "localizedDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624185-localizeddescription",
    "html": "See Also\nIdentifying a characteristic\nvar uniqueIdentifier: UUID\nA unique identifier for the characteristic."
  },
  {
    "title": "addAndSetupAccessories(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1771427-addandsetupaccessories",
    "html": "Parameters\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addAndSetUpAccessories() async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThis method launches an interactive process that first asks the user to provide a HomeKit code for the accessories—for example, by scanning an 8-digit code, by scanning the QR code, wirelessly by holding an iPhone next to the device, or by manually entering the HomeKit code. The process then asks the user to configure the accessory’s services, naming them and placing them in rooms.\n\nSee Also\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat."
  },
  {
    "title": "isNotificationEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624190-isnotificationenabled",
    "html": "Discussion\n\nHomeKit delivers notifications to the accessory delegate using the accessory(_:service:didUpdateValueFor:) method.\n\nSee Also\nReceiving change notifications\nfunc enableNotification(Bool, completionHandler: (Error?) -> Void)\nEnables or disables notifications for changes in the value of the characteristic."
  },
  {
    "title": "isBlocked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615288-isblocked",
    "html": "See Also\nGetting accessory state\nvar isReachable: Bool\nA Boolean value indicating whether the accessory can be communicated with in the current network environment."
  },
  {
    "title": "services | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615250-services",
    "html": "See Also\nControlling accessory features\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener."
  },
  {
    "title": "HMHomeManagerDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerdelegate",
    "html": "Overview\n\nAdopt this protocol to find out about changes made outside your app to the set of homes in the HomeKit database, like when homes are added or removed by another app. You also rely on this protocol when you first create an HMHomeManager instance. The home manager calls the homeManagerDidUpdateHomes(_:) method to indicate that it has finished its initial load of data from the HomeKit database.\n\nChanges that your app initiates—even those made asynchronously followed by a call to a completion handler—generate delegate callbacks in other apps, but not in your own. As a result, your app must update its internal data store or user interface from both the completion handler of an asynchronous call, and the delegate callback that corresponds to the same kind of change made by another app.\n\nTo be alerted about changes made within a particular home, adopt the HMHomeDelegate protocol. To find out about changes made to specific accessories, adopt the HMAccessoryDelegate protocol.\n\nTopics\nAdding and removing homes\nfunc homeManagerDidUpdateHomes(HMHomeManager)\nTells the delegate that the home manager updated its collection of homes.\nfunc homeManager(HMHomeManager, didAdd: HMHome)\nTells the delegate that the home manager added a home.\nfunc homeManager(HMHomeManager, didRemove: HMHome)\nTells the delegate that the home manager removed a home.\nfunc homeManagerDidUpdatePrimaryHome(HMHomeManager)\nTells the delegate that the home manager updated its primary home.\nAdding accessories\nfunc homeManager(HMHomeManager, didReceiveAddAccessoryRequest: HMAddAccessoryRequest)\nTells the delegate to add an accessory to a home by using a setup payload.\nclass HMAddAccessoryRequest\nA request to add an accessory to a particular home.\nMonitoring authorization status\nfunc homeManager(HMHomeManager, didUpdate: HMHomeManagerAuthorizationStatus)\nTells the delegate when the authorization status changes.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nKeeping track of connected homes\nvar delegate: HMHomeManagerDelegate?\nA delegate that receives updates on the collection of homes."
  },
  {
    "title": "updateAssociatedServiceType(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615886-updateassociatedservicetype",
    "html": "Parameters\nserviceType\n\nThe service type of the device that is hooked up to the switch or outlet.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateAssociatedServiceType(_ serviceType: String?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThis method is only valid for services of type HMServiceTypeOutlet or HMServiceTypeSwitch. See associatedServiceType for details of associated service types.\n\nSee Also\nAssociating a secondary service\nvar associatedServiceType: String?\nThe type of the service associated with an outlet or a switch."
  },
  {
    "title": "predicateForEvaluatingTrigger(withPresence:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881080-predicateforevaluatingtrigger",
    "html": "Parameters\npresenceEvent\n\nThe HMPresenceEvent to evaluate as part of the predicate.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "predicateForEvaluatingTrigger(_:relatedBy:toValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624409-predicateforevaluatingtrigger",
    "html": "Parameters\ncharacteristic\n\nThe characteristic that is part of the predicate.\n\noperatorType\n\nThe relationship between the characteristic and the target value. Valid values can be Less Than, Greater Than, Less Than or Equal, Greater Than or Equal, Equal, or Not Equal. All other values cause an exception to be thrown.\n\nvalue\n\nThe value of the characteristic to compare when evaluating the predicate.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "HMCharacteristicValueKeyPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicvaluekeypath",
    "html": "See Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "uniqueIdentifiersForBridgedAccessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615278-uniqueidentifiersforbridgedacces",
    "html": "Discussion\n\nThis value is nil for accessories that aren’t bridges. See the isBridged property for more information about working with bridges.\n\nSee Also\nManaging bridged accessories\nvar isBridged: Bool\nA Boolean that indicates whether the accessory is accessed through a bridge.\nvar identifiersForBridgedAccessories: [UUID]?\nAn array of identifiers for accessories available through a bridge.\nDeprecated"
  },
  {
    "title": "firmwareVersion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/2888352-firmwareversion",
    "html": "See Also\nGetting manufacturer information\nvar manufacturer: String?\nThe manufacturer of the accessory.\nvar model: String?\nThe model name of the accessory."
  },
  {
    "title": "identifiersForBridgedAccessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615265-identifiersforbridgedaccessories",
    "html": "Deprecated\n\nUse uniqueIdentifiersForBridgedAccessories instead.\n\nDiscussion\n\nThis value is nil for accessories that are not bridges.\n\nSee Also\nManaging bridged accessories\nvar isBridged: Bool\nA Boolean that indicates whether the accessory is accessed through a bridge.\nvar uniqueIdentifiersForBridgedAccessories: [UUID]?\nAn array of unique identifiers, each of which represents an accessory vended by the bridge."
  },
  {
    "title": "homeHubState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/2881837-homehubstate",
    "html": "See Also\nQuerying the state of a home hub\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "HMHomeHubState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomehubstate",
    "html": "Topics\nSpecifying the State\ncase connected\nThe home hub is connected.\ncase disconnected\nThe home hub is disconnected.\ncase notAvailable\nNo home hub is present.\nRelationships\nConforms To\nSendable\nSee Also\nQuerying the state of a home hub\nvar homeHubState: HMHomeHubState\nThe state of the home hub."
  },
  {
    "title": "predicateForEvaluatingTriggerOccurringBetweenDate(with:secondDateWith:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2919683-predicateforevaluatingtriggerocc",
    "html": "Parameters\nfirstDateComponents\n\nDate components that represent the first time boundary to compare to the execution time.\n\nsecondDateComponents\n\nDate components that represent the second time boundary to compare to the execution time.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "manufacturer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/2888349-manufacturer",
    "html": "See Also\nGetting manufacturer information\nvar firmwareVersion: String?\nThe firmware version of the accessory.\nvar model: String?\nThe model name of the accessory."
  },
  {
    "title": "model | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/2888350-model",
    "html": "See Also\nGetting manufacturer information\nvar firmwareVersion: String?\nThe firmware version of the accessory.\nvar manufacturer: String?\nThe manufacturer of the accessory."
  },
  {
    "title": "predicateForEvaluatingTriggerOccurring(beforeSignificantEvent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881079-predicateforevaluatingtriggerocc",
    "html": "Parameters\nsignificantEvent\n\nThe significant event to compare against.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "predicateForEvaluatingTriggerOccurring(afterSignificantEvent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881083-predicateforevaluatingtriggerocc",
    "html": "Parameters\nsignificantEvent\n\nThe significant event to compare against.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent:secondSignificantEvent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881077-predicate",
    "html": "Parameters\nfirstSignificantEvent\n\nThe first significant event.\n\nsecondSignificantEvent\n\nThe second significant event.\n\nReturn Value\n\nA predicate object that represents a condition to evaluate before executing the scene.\n\nSee Also\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate."
  },
  {
    "title": "updatePredicate(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624411-updatepredicate",
    "html": "Parameters\npredicate\n\nThe new predicate to use with the event trigger.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updatePredicate(_ predicate: NSPredicate?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nAdding a trigger condition\nvar predicate: NSPredicate?\nThe predicate to evaluate before executing the scene associated with the event trigger."
  },
  {
    "title": "predicate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624405-predicate",
    "html": "Discussion\n\nBy default, the value of this property is nil, which means that it evaluates as true.\n\nSee Also\nAdding a trigger condition\nfunc updatePredicate(NSPredicate?, completionHandler: (Error?) -> Void)\nReplaces the predicate used to evaluate execution of the scene associated with the event trigger."
  },
  {
    "title": "updateEvents(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/2881286-updateevents",
    "html": "Parameters\nevents\n\nAn array of events that replaces the events on the trigger.\n\ncompletion\n\nA block that executes after processing the request.\n\nThe block takes the following parameter:\n\nerror\n\nIf the request was successful, the value of error is nil; otherwise, the value provides more information about the request status.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nLocation events\nEvents that represent the user's movement among regions.\nTime events\nEvents based on time, significant occurrences, and time durations.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nPresence events\nEvents based on the user's presence in a home.\nclass HMEvent\nThe abstract base class for a HomeKit event."
  },
  {
    "title": "events | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger/1624413-events",
    "html": "See Also\nSetting trigger events\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nLocation events\nEvents that represent the user's movement among regions.\nTime events\nEvents based on time, significant occurrences, and time durations.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nPresence events\nEvents based on the user's presence in a home.\nclass HMEvent\nThe abstract base class for a HomeKit event."
  },
  {
    "title": "timeZone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger/1616268-timezone",
    "html": "Discussion\n\nIf this value is nil, the trigger’s fire time will stay at the same relative time if the user changes timezones. If this value is set to a specific value, the trigger’s fire time will always be the same absolute time as evaluated in that time zone. A common value to set this to is the time zone where the accessories are physically located. This will result in the trigger firing at a specific time of day in that location, regardless of where the iOS device is located.\n\nSee Also\nIndicating a time zone\nfunc updateTimeZone(TimeZone?, completionHandler: (Error?) -> Void)\nUpdates the trigger’s time zone.\nDeprecated"
  },
  {
    "title": "actionSets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620257-actionsets",
    "html": "Discussion\n\nAction sets are instances of HMActionSet.\n\nSee Also\nCreating action sets\nfunc addActionSet(withName: String, completionHandler: (HMActionSet?, Error?) -> Void)\nAdds a new action set to the home.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the home.\nfunc executeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nExecutes all the actions in a specified action set.\nfunc builtinActionSet(ofType: String) -> HMActionSet?\nRetrieves the builtin action set for the specified type.\nclass HMActionSet\nA collection of actions that you trigger as a group."
  },
  {
    "title": "addActionSet(withName:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620231-addactionset",
    "html": "Parameters\nactionSetName\n\nThe name of the new action set. Must not be nil, and must not be the name of an action set already in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nactionSet\n\nThe newly created action set.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addActionSet(named actionSetName: String) async throws -> HMActionSet\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nCreating action sets\nvar actionSets: [HMActionSet]\nAn array of the action sets in the home.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the home.\nfunc executeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nExecutes all the actions in a specified action set.\nfunc builtinActionSet(ofType: String) -> HMActionSet?\nRetrieves the builtin action set for the specified type.\nclass HMActionSet\nA collection of actions that you trigger as a group."
  },
  {
    "title": "removeActionSet(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620225-removeactionset",
    "html": "Parameters\nactionSet\n\nThe action set to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeActionSet(_ actionSet: HMActionSet) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nCreating action sets\nvar actionSets: [HMActionSet]\nAn array of the action sets in the home.\nfunc addActionSet(withName: String, completionHandler: (HMActionSet?, Error?) -> Void)\nAdds a new action set to the home.\nfunc executeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nExecutes all the actions in a specified action set.\nfunc builtinActionSet(ofType: String) -> HMActionSet?\nRetrieves the builtin action set for the specified type.\nclass HMActionSet\nA collection of actions that you trigger as a group."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616795-name",
    "html": "Discussion\n\nAction set names must be unique within a home.\n\nSee Also\nIdentifiying an action set\nvar uniqueIdentifier: UUID\nThe action set's unique identifier.\nfunc updateName(String, completionHandler: HMErrorBlock)\nUpdates the name of the action set.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "builtinActionSet(ofType:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620238-builtinactionset",
    "html": "Parameters\nactionSetType\n\nType of the builtin action set. Supported action set types are HMActionSetTypeWakeUp, HMActionSetTypeSleep, HMActionSetTypeHomeDeparture and HMActionSetTypeHomeArrival.\n\nReturn Value\n\nThe builtin action set corresponding to the type argument.\n\nDiscussion\n\nReturns nil if no action set is found.\n\nSee Also\nCreating action sets\nvar actionSets: [HMActionSet]\nAn array of the action sets in the home.\nfunc addActionSet(withName: String, completionHandler: (HMActionSet?, Error?) -> Void)\nAdds a new action set to the home.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the home.\nfunc executeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nExecutes all the actions in a specified action set.\nclass HMActionSet\nA collection of actions that you trigger as a group."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616789-uniqueidentifier",
    "html": "See Also\nIdentifiying an action set\nvar name: String\nThe name of the action set.\nfunc updateName(String, completionHandler: HMErrorBlock)\nUpdates the name of the action set."
  },
  {
    "title": "actions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616790-actions",
    "html": "See Also\nDefining the associated actions\nfunc addAction(HMAction, completionHandler: HMErrorBlock)\nAdds an action to the action set.\nfunc removeAction(HMAction, completionHandler: HMErrorBlock)\nRemoves an action from the action set.\nclass HMCharacteristicWriteAction\nAn action in an action set that writes a value to a characteristic.\nclass HMAction\nAn abstract base class for actions in HomeKit."
  },
  {
    "title": "HMAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaction",
    "html": "Overview\n\nActions can be added to HMActionSet objects. Action sets can then be set for automatic execution in response to specific conditions using HMTrigger objects, or manually triggered with executeActionSet(_:completionHandler:).\n\nTopics\nIdentifying an action\nvar uniqueIdentifier: UUID\nA unique identifier for the action.\nInitializers\ninit()\nDeprecated\nType Methods\nclass func new() -> Self\nDeprecated\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nDefining the associated actions\nvar actions: Set<HMAction>\nSet of actions in the action set.\nfunc addAction(HMAction, completionHandler: HMErrorBlock)\nAdds an action to the action set.\nfunc removeAction(HMAction, completionHandler: HMErrorBlock)\nRemoves an action from the action set.\nclass HMCharacteristicWriteAction\nAn action in an action set that writes a value to a characteristic.\nRelated Documentation\nHomeKit Developer Guide"
  },
  {
    "title": "addAction(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616798-addaction",
    "html": "Parameters\naction\n\nThe action to add. Actions may only be in one set—create separate HMAction objects for the same conceptual action if you want an action to be in more than one action set.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addAction(_ action: HMAction) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDefining the associated actions\nvar actions: Set<HMAction>\nSet of actions in the action set.\nfunc removeAction(HMAction, completionHandler: HMErrorBlock)\nRemoves an action from the action set.\nclass HMCharacteristicWriteAction\nAn action in an action set that writes a value to a characteristic.\nclass HMAction\nAn abstract base class for actions in HomeKit."
  },
  {
    "title": "removeAction(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616787-removeaction",
    "html": "Parameters\naction\n\nThe action to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeAction(_ action: HMAction) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDefining the associated actions\nvar actions: Set<HMAction>\nSet of actions in the action set.\nfunc addAction(HMAction, completionHandler: HMErrorBlock)\nAdds an action to the action set.\nclass HMCharacteristicWriteAction\nAn action in an action set that writes a value to a characteristic.\nclass HMAction\nAn abstract base class for actions in HomeKit."
  },
  {
    "title": "HMCharacteristicWriteAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicwriteaction",
    "html": "Overview\n\nAction sets are instances of HMActionSet.\n\nTopics\nNew Methods\ninit(characteristic: HMCharacteristic, targetValue: TargetValueType)\nInitialize a characteristic write action with a specified characteristic and target value.\nvar characteristic: HMCharacteristic\nThe characteristic whose value is to be written by the action.\nvar targetValue: TargetValueType\nThe value that will be written to the characteristic when the action is executed.\nfunc updateTargetValue(TargetValueType, completionHandler: (Error?) -> Void)\nUpdates the target value.\nRelationships\nInherits From\nHMAction\nConforms To\nSendable\nSee Also\nDefining the associated actions\nvar actions: Set<HMAction>\nSet of actions in the action set.\nfunc addAction(HMAction, completionHandler: HMErrorBlock)\nAdds an action to the action set.\nfunc removeAction(HMAction, completionHandler: HMErrorBlock)\nRemoves an action from the action set.\nclass HMAction\nAn abstract base class for actions in HomeKit."
  },
  {
    "title": "triggers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620218-triggers",
    "html": "See Also\nTriggering an action set\nfunc addTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nAdds a trigger to the home.\nfunc removeTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nRemoves a trigger from the home.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions.\nclass HMTrigger\nAn abstract base class for triggering actions based on a set of conditions."
  },
  {
    "title": "lastExecutionDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1649437-lastexecutiondate",
    "html": "See Also\nKeeping track of execution\nvar isExecuting: Bool\nThe execution status of the action set."
  },
  {
    "title": "currentUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620255-currentuser",
    "html": "See Also\nManaging users\nfunc manageUsers(completionHandler: (Error?) -> Void)\nPresents a view controller to manage users of the home.\nclass HMUser\nA person in the home who may have access to control accessories and services in the home."
  },
  {
    "title": "removeTrigger(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620220-removetrigger",
    "html": "Parameters\ntrigger\n\nThe trigger to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeTrigger(_ trigger: HMTrigger) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nIf trigger is enabled, removing it from the home disables it.\n\nSee Also\nTriggering an action set\nvar triggers: [HMTrigger]\nAn array of triggers defined in the home.\nfunc addTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nAdds a trigger to the home.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions.\nclass HMTrigger\nAn abstract base class for triggering actions based on a set of conditions."
  },
  {
    "title": "HMTrigger | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtrigger",
    "html": "Overview\n\nThis class defines the basic behavior of triggers, but does not itself specify any criteria for firing a trigger. Use instances of subclasses of HMTrigger to set up concrete triggers for actions.\n\nTopics\nManaging Triggers\nvar name: String\nThe name of the trigger.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the trigger.\nvar isEnabled: Bool\nState of the trigger.\nfunc enable(Bool, completionHandler: (Error?) -> Void)\nChanges the enabled state of the trigger.\nvar lastFireDate: Date?\nThe last time this trigger fired.\nDeprecated\nvar uniqueIdentifier: UUID\nA unique identifier for this trigger.\nManaging Action Sets\nvar actionSets: [HMActionSet]\nArray of all action sets that will be executed by the trigger.\nfunc addActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nAdds an action set to the trigger.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the trigger.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nTriggering an action set\nvar triggers: [HMTrigger]\nAn array of triggers defined in the home.\nfunc addTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nAdds a trigger to the home.\nfunc removeTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nRemoves a trigger from the home.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions."
  },
  {
    "title": "homeAccessControl(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620214-homeaccesscontrol",
    "html": "Parameters\nuser\n\nThe user whose access level you wish to retrieve.\n\nReturn Value\n\nThe access level associated with the user.\n\nSee Also\nControlling user access\nclass HMHomeAccessControl\nThe access privileges of a user associated with a home.\nclass HMAccessControl\nAn abstract superclass for accessing user privileges.\nlet HMUserFailedAccessoriesKey: String\nThe key for retrieving details of what accessories failed to add or remove a user."
  },
  {
    "title": "HMUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmuser",
    "html": "Topics\nGetting Information About the User\nvar name: String\nThe name of the user.\nvar uniqueIdentifier: UUID\nA unique identifier for the user.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nManaging users\nfunc manageUsers(completionHandler: (Error?) -> Void)\nPresents a view controller to manage users of the home.\nvar currentUser: HMUser\nThe current HomeKit user."
  },
  {
    "title": "manageUsers(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620268-manageusers",
    "html": "Parameters\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc manageUsers() async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nOnly users that have administrator access to the home can call this method. Otherwise, the completion handler returns the error HMError.Code.insufficientPrivileges.\n\nSee Also\nManaging users\nvar currentUser: HMUser\nThe current HomeKit user.\nclass HMUser\nA person in the home who may have access to control accessories and services in the home."
  },
  {
    "title": "addRoom(withName:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620236-addroom",
    "html": "Parameters\nroomName\n\nThe name of the new room. Must not be nil, and must not be the name of a room already in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nroom\n\nThe newly created room.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addRoom(named roomName: String) async throws -> HMRoom\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nDividing a house into rooms\nvar rooms: [HMRoom]\nAn array of the rooms created and managed by the user.\nfunc roomForEntireHome() -> HMRoom\nA room that represents all parts of the home that don’t have a more specific room to represent them.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the home.\nclass HMRoom\nThe smallest subdivision of a home’s space."
  },
  {
    "title": "removeRoom(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620246-removeroom",
    "html": "Parameters\nroom\n\nThe room to remove.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc removeRoom(_ room: HMRoom) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nIf the room is in a zone, this method also removes it from the zone. Any accessories in the removed room automatically move to roomForEntireHome().\n\nSee Also\nDividing a house into rooms\nvar rooms: [HMRoom]\nAn array of the rooms created and managed by the user.\nfunc roomForEntireHome() -> HMRoom\nA room that represents all parts of the home that don’t have a more specific room to represent them.\nfunc addRoom(withName: String, completionHandler: (HMRoom?, Error?) -> Void)\nCreates a new room with the specified name.\nclass HMRoom\nThe smallest subdivision of a home’s space."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620234-delegate",
    "html": "See Also\nKeeping track of home configuration changes\nprotocol HMHomeDelegate\nAn interface that communicates changes to a home’s configuration."
  },
  {
    "title": "uniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620243-uniqueidentifier",
    "html": "See Also\nIdentifying a home\nvar name: String\nThe name the user gives to the home.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the home.\nvar isPrimary: Bool\nA Boolean value that indicates whether this is the primary home for its home manager."
  },
  {
    "title": "HMAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory",
    "html": "Overview\n\nAn HMAccessory instance represents a physical device, like a garage door opener, installed in a home and assigned to a room.\n\nYou don’t create accessories directly. Instead you get them from the accessories array of an HMHome instance when you want all the accessories in a home, or the accessories array of an HMRoom instance when you want all the accessories in a particular room. Each physical accessory in the home is represented by exactly one accessory instance, so that one instance appears in both a home and a room collection. This is because it’s simultaneously part of the home and in one of the home’s rooms.\n\nWhen you want to add new accessories, you call the home’s addAndSetupAccessories(completionHandler:) method. In response, HomeKit presents the user with an interface that steps through the process of searching for new accessories in the physical environment, naming them, and assigning them to a room.\n\nAccessories provide one or more services, represented by instances of HMService, that are the features that the user can control, like the light attached to a garage door opener, or the door opener mechanism itself.\n\nTopics\nTracking changes to an accessory\nvar delegate: HMAccessoryDelegate?\nA delegate that receives updates on the state of the accessory.\nprotocol HMAccessoryDelegate\nA set of methods that defines the communication method for state updates from accessories to their delegates.\nIdentifying an Accessory\nvar name: String\nThe name of the accessory.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nChanges the name of the accessory.\nvar uniqueIdentifier: UUID\nA unique identifier for the accessory.\nvar identifier: UUID\nA unique identifier for the accessory.\nDeprecated\nCategorizing an accessory\nvar category: HMAccessoryCategory\nThe category to which the accessory belongs.\nclass HMAccessoryCategory\nA category for a HomeKit accessory.\nLocating an accessory\nvar room: HMRoom?\nThe room containing the accessory.\nclass HMRoom\nThe smallest subdivision of a home’s space.\nManaging accessory profiles\nvar profiles: [HMAccessoryProfile]\nAn array of profiles implemented by the accessory.\nclass HMAccessoryProfile\nA profile that certain accessories implement.\nclass HMNetworkConfigurationProfile\nA profile that provides information about network protection for an accessory.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera.\nManaging camera profiles\nstruct CameraView\nA SwiftUI view into which a video stream or an image snapshot is rendered.\nvar cameraProfiles: [HMCameraProfile]?\nAn array of camera profiles implemented by the accessory.\nclass HMCameraProfile\nA camera profile that interacts with an accessory's camera.\nclass HMCameraView\nThe view into which a video stream or an image snapshot is rendered.\nGetting accessory state\nvar isReachable: Bool\nA Boolean value indicating whether the accessory can be communicated with in the current network environment.\nvar isBlocked: Bool\nA Boolean value indicating whether the accessory is blocked.\nAsking an accessory to identify itself\nvar supportsIdentify: Bool\nA Boolean value that indicates whether the accessory supports the identify action.\nfunc identify(completionHandler: (Error?) -> Void)\nAsks an accessory to identify itself.\nControlling accessory features\nvar services: [HMService]\nAn array of services provided by the accessory.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nManaging bridged accessories\nvar isBridged: Bool\nA Boolean that indicates whether the accessory is accessed through a bridge.\nvar uniqueIdentifiersForBridgedAccessories: [UUID]?\nAn array of unique identifiers, each of which represents an accessory vended by the bridge.\nvar identifiersForBridgedAccessories: [UUID]?\nAn array of identifiers for accessories available through a bridge.\nDeprecated\nGetting manufacturer information\nvar firmwareVersion: String?\nThe firmware version of the accessory.\nvar manufacturer: String?\nThe manufacturer of the accessory.\nvar model: String?\nThe model name of the accessory.\nBrowsing for accessories\nclass HMAccessoryBrowser\nA network browser you can use to discover new accessories in a home.\nInstance Properties\nvar matterNodeID: UInt64?\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "enableNotification(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624189-enablenotification",
    "html": "Parameters\nenable\n\ntrue to enable notifications, false to disable notifications.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc enableNotification(_ enable: Bool) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nHomeKit delivers notifications to the accessory delegate using the accessory(_:service:didUpdateValueFor:) method.\n\nSee Also\nReceiving change notifications\nvar isNotificationEnabled: Bool\nA Boolean indicating whether the characteristic has been set to send notifications."
  },
  {
    "title": "HMAccessoryDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorydelegate",
    "html": "Overview\n\nAdopt this protocol to find out about changes made outside your app to a specific accessory, like when the accessory’s name changes, or when a characteristic value changes.\n\nNote\n\nTo receive accessory(_:service:didUpdateValueFor:) method calls for a particular characteristic, indicating when the characteristic value changes, you must first call the characteristic’s enableNotification(_:completionHandler:) method.\n\nChanges that your app initiates—even those made asynchronously followed by a call to a completion handler—generate delegate callbacks in other apps, but not in your own. As a result, your app must update its internal data store or user interface from both the completion handler of an asynchronous call, and the delegate callback that corresponds to the same kind of change made by another app.\n\nTo find out about changes made to the accessory’s home, adopt the HMHomeDelegate protocol. To be alerted about changes made to the overall list of homes, adopt the HMHomeManagerDelegate protocol.\n\nTopics\nObserving accessories\nfunc accessoryDidUpdateName(HMAccessory)\nInforms the delegate when the name of the accessory is updated.\nfunc accessoryDidUpdateReachability(HMAccessory)\nInforms the delegate when the reachability of the accessory changes.\nfunc accessoryDidUpdateServices(HMAccessory)\nInforms the delegate when the services on the accessory have been updated.\nfunc accessory(HMAccessory, didUpdateNameFor: HMService)\nInforms the delegate when the name of a service is updated.\nfunc accessory(HMAccessory, service: HMService, didUpdateValueFor: HMCharacteristic)\nInforms the delegate of a change in value of a characteristic.\nfunc accessory(HMAccessory, didUpdateAssociatedServiceTypeFor: HMService)\nInforms the delegate when the associated service type of a service is modified.\nfunc accessory(HMAccessory, didAdd: HMAccessoryProfile)\nInforms the delegate when a profile is added to an accessory.\nfunc accessory(HMAccessory, didRemove: HMAccessoryProfile)\nInforms the delegate when a profile is removed from an accessory.\nfunc accessory(HMAccessory, didUpdateFirmwareVersion: String)\nInforms the delegate when firmwareVersion has been changed for an accessory.\nRelationships\nInherits From\nNSObjectProtocol\nSendable\nSee Also\nTracking changes to an accessory\nvar delegate: HMAccessoryDelegate?\nA delegate that receives updates on the state of the accessory."
  },
  {
    "title": "readValue(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624188-readvalue",
    "html": "Parameters\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc readValue() async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThe value is available from the value property after completion of the request.\n\nSee Also\nControlling a characteristic\nvar value: Any?\nThe current value of the characteristic.\nfunc writeValue(Any?, completionHandler: (Error?) -> Void)\nModifies the value of the characteristic.\nfunc updateAuthorizationData(Data?, completionHandler: (Error?) -> Void)\nSets or clears authorization data used when writing to the characteristic."
  },
  {
    "title": "isBridged | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615251-isbridged",
    "html": "Discussion\n\nA bridge is a special type of accessory that allows you to communicate with accessories that can’t communicate directly with HomeKit. For example, a bridge might be a hub for multiple lights that use a communication protocol other than HomeKit Accessory Protocol.\n\nBridged accessories have the isBridged property set to true and depend on the bridge to communicate with HomeKit. All other accessories, including the bridge itself, have an isBridged property setting of false.\n\nTo add a bridge to a home, use the home’s addAndSetupAccessories(completionHandler:) method, as you would for any other accessory. The accessories behind the bridge are automatically added to the home as well. The home’s delegate doesn’t receive a home(_:didAdd:) delegate message for the bridge, but does receive one for each accessory behind the bridge.\n\nWhen you add a bridge to a room, the accessories behind the bridge are not automatically added to the room because the bridge and its accessories might be located in different rooms. Manage each accessory’s room independently.\n\nIf you remove a bridge from the home, all of its accessories are also removed. On the other hand, you can’t directly remove a bridged accessory from the home. You can only remove the bridge.\n\nIn all other respects, you treat the accessories behind a bridge in the same way as any other accessory in a home. They appear in the home’s accessories array like non-bridged accessories, and respond to all the same commands.\n\nSee Also\nManaging bridged accessories\nvar uniqueIdentifiersForBridgedAccessories: [UUID]?\nAn array of unique identifiers, each of which represents an accessory vended by the bridge.\nvar identifiersForBridgedAccessories: [UUID]?\nAn array of identifiers for accessories available through a bridge.\nDeprecated"
  },
  {
    "title": "value | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624195-value",
    "html": "Discussion\n\nThis is the last value that the system saw for the characteristic. Because multiple apps can access a given home, this value may change without your app changing it. To be sure you have the current value, call readValue(completionHandler:) and wait for the response before checking the value property.\n\nYou can also learn about external changes to the value when they happen by adopting the HMAccessoryDelegate protocol. Call the enableNotification(_:completionHandler:) method to enable updates for a particular characteristic. Then implement the accessory(_:service:didUpdateValueFor:) method to receive the updates. You only receive updates for changes made outside your app, for example by Apple’s Home app, or by the accessory itself.\n\nHow you interpret the value depends on the characteristicType. From this, you can tell what the value represents, and infer whether the value contain a string, integer, floating point number, or Boolean. The characteristic’s metadata gives you additional information about how to interpret and present the value.\n\nSee Also\nControlling a characteristic\nfunc readValue(completionHandler: (Error?) -> Void)\nReads the value for the characteristic.\nfunc writeValue(Any?, completionHandler: (Error?) -> Void)\nModifies the value of the characteristic.\nfunc updateAuthorizationData(Data?, completionHandler: (Error?) -> Void)\nSets or clears authorization data used when writing to the characteristic."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620250-name",
    "html": "Discussion\n\nThe name should be configured by the user when a new home is created.\n\nSee Also\nIdentifying a home\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the home.\nvar uniqueIdentifier: UUID\nA unique identifier for the home.\nvar isPrimary: Bool\nA Boolean value that indicates whether this is the primary home for its home manager."
  },
  {
    "title": "HMRoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmroom",
    "html": "Overview\n\nAn HMRoom instance is a part of a home representing an individual room in the home. Rooms don’t have any physical characteristics like size or location. Instead, they’re names that are meaningful to the user, like “living room” or “kitchen”. Meaningful room names enable voice commands like “Siri, turn on the kitchen lights.”\n\nYou create new rooms using the addRoom(withName:completionHandler:) method of HMHome. You can also group rooms into zones using instances of HMZone. You can assign accessories to rooms, indicating the presence of that accessory in that room.\n\nTopics\nIdentifying a room\nvar name: String\nThe name of the room.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the room.\nvar uniqueIdentifier: UUID\nThe unique identifier for a room.\nFinding accessories\nvar accessories: [HMAccessory]\nThe collection of accessories in the room.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nLocating an accessory\nvar room: HMRoom?\nThe room containing the accessory."
  },
  {
    "title": "HMHomeDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate",
    "html": "Overview\n\nAdopt this protocol to find out about changes made outside your app to a particular home, like when the home’s name changes, or when a room is added.\n\nChanges that your app initiates—even those made asynchronously followed by a call to a completion handler—generate delegate callbacks in other apps, but not in your own. As a result, your app must update its internal data store or user interface from both the completion handler of an asynchronous call, and the delegate callback that corresponds to the same kind of change made by another app.\n\nTo be alerted about changes made to the overall list of homes, adopt the HMHomeManagerDelegate protocol. To find out about changes made to specific accessories, adopt the HMAccessoryDelegate protocol.\n\nTopics\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didAdd: HMAccessory)\nTells the delegate that a home added a new accessory.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub.\nObserving Service Configuration\nfunc home(HMHome, didAdd: HMServiceGroup)\nTells the delegate that a home added a service group.\nfunc home(HMHome, didUpdateNameFor: HMServiceGroup)\nTells the delegate that a home updated the name of a service group.\nfunc home(HMHome, didAdd: HMService, to: HMServiceGroup)\nTells the delegate that a home added a service to a service group.\nfunc home(HMHome, didRemove: HMService, from: HMServiceGroup)\nTells the delegate that a home removed a service from a service group.\nfunc home(HMHome, didRemove: HMServiceGroup)\nTells the delegate that a home removed a service group.\nObserving Action and Trigger Configuration\nfunc home(HMHome, didAdd: HMActionSet)\nTells the delegate that a home added an action set.\nfunc home(HMHome, didUpdateNameFor: HMActionSet)\nTells the delegate that a home updated the name of an action set.\nfunc home(HMHome, didUpdateActionsFor: HMActionSet)\nTells the delegate that a home updated the actions for an action set.\nfunc home(HMHome, didRemove: HMActionSet)\nTells the delegate that a home removed an action set.\nfunc home(HMHome, didAdd: HMTrigger)\nTells the delegate that a home added a trigger.\nfunc home(HMHome, didUpdateNameFor: HMTrigger)\nTells the delegate that a home updated the name of a trigger.\nfunc home(HMHome, didUpdate: HMTrigger)\nTells the delegate that a home updated a trigger.\nfunc home(HMHome, didRemove: HMTrigger)\nTells the delegate that a home removed a trigger.\nObserving Accessories\nfunc home(HMHome, didEncounterError: Error, for: HMAccessory)\nTells the delegate that a configured accessory encountered an error.\nfunc home(HMHome, didUnblockAccessory: HMAccessory)\nTells the delegate that an accessory has been unblocked.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nKeeping track of home configuration changes\nvar delegate: HMHomeDelegate?\nA delegate that receives updates on the state of the home."
  },
  {
    "title": "home(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomedelegate/1620215-home",
    "html": "Parameters\nhome\n\nThe home that added the accessory.\n\naccessory\n\nThe newly added accessory.\n\nSee Also\nObserving Home Configuration\nfunc homeDidUpdateName(HMHome)\nTells the delegate that a home’s name changed.\nfunc home(HMHome, didUpdate: HMRoom, for: HMAccessory)\nTells the delegate that a home assigned an accessory to a different room.\nfunc home(HMHome, didRemove: HMAccessory)\nTells the delegate that a home removed an accessory.\nfunc home(HMHome, didAdd: HMRoom)\nTells the delegate that a home added a new room.\nfunc home(HMHome, didUpdateNameFor: HMRoom)\nTells the delegate that a home updated the name of one of its rooms.\nfunc home(HMHome, didAdd: HMRoom, to: HMZone)\nTells the delegate that a home added a room to a zone.\nfunc home(HMHome, didRemove: HMRoom, from: HMZone)\nTells the delegate that a home removed a room from a zone.\nfunc home(HMHome, didRemove: HMRoom)\nTells the delegate that a home removed a room.\nfunc home(HMHome, didAdd: HMZone)\nTells the delegate that a home added a new zone.\nfunc home(HMHome, didUpdateNameFor: HMZone)\nTells the delegate that a home changed the name of a zone.\nfunc home(HMHome, didRemove: HMZone)\nTells the delegate that a home removed a zone.\nfunc home(HMHome, didAdd: HMUser)\nTells the delegate that a home added a user.\nfunc home(HMHome, didRemove: HMUser)\nTells the delegate that a home removed a user.\nfunc homeDidUpdateAccessControl(forCurrentUser: HMHome)\nTells the delegate that the access control for the current user has changed.\nfunc home(HMHome, didUpdate: HMHomeHubState)\nTells the delegate that the state of the home hub has changed.\nfunc homeDidUpdateSupportedFeatures(HMHome)\nTells the delegate that the home’s supported features changed.\nenum HMHomeHubState\nThe possible states of the home hub."
  },
  {
    "title": "category | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessory/1615275-category",
    "html": "Discussion\n\nThe accessory’s category property contains an instance of the HMAccessoryCategory class that indicates the kind of accessory, like light bulb, garage door opener, or faucet. Use this information to help users distinguish among different accessories in their environment.\n\nSee Also\nCategorizing an accessory\nclass HMAccessoryCategory\nA category for a HomeKit accessory."
  },
  {
    "title": "roomForEntireHome() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620227-roomforentirehome",
    "html": "Return Value\n\nThe room that represents all parts of the home that don’t have a more specific room to represent them.\n\nDiscussion\n\nHomeKit assigns new accessories to this room until you assign them to a more specific room with assignAccessory(_:to:completionHandler:), or until the user assigns them to a room using the Home app.\n\nYou can’t rename this room, add it to a zone, or remove it from the home. It also doesn’t appear in the home’s rooms array.\n\nSee Also\nDividing a house into rooms\nvar rooms: [HMRoom]\nAn array of the rooms created and managed by the user.\nfunc addRoom(withName: String, completionHandler: (HMRoom?, Error?) -> Void)\nCreates a new room with the specified name.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the home.\nclass HMRoom\nThe smallest subdivision of a home’s space."
  },
  {
    "title": "rooms | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620276-rooms",
    "html": "Discussion\n\nEach HMHome instance has an immutable default room — returned by the roomForEntireHome() method — to hold accessories that the user hasn’t assigned to a specific room. Unlike user-managed rooms, the default room doesn’t appear in the rooms array.\n\nSee Also\nDividing a house into rooms\nfunc roomForEntireHome() -> HMRoom\nA room that represents all parts of the home that don’t have a more specific room to represent them.\nfunc addRoom(withName: String, completionHandler: (HMRoom?, Error?) -> Void)\nCreates a new room with the specified name.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the home.\nclass HMRoom\nThe smallest subdivision of a home’s space."
  },
  {
    "title": "suggestedRoomUniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuprequest/3920438-suggestedroomuniqueidentifier",
    "html": "Discussion\n\nIf nil, then any room may be suggested. See uniqueIdentifier for more information.\n\nSee Also\nSetting up accessorices\nvar homeUniqueIdentifier: UUID?\nThe identifier corresponding to the home that the accessory should be added to when being set up.\nvar payload: HMAccessorySetupPayload?\nThe payload to use for accessory setup.\nvar suggestedAccessoryName: String?\nThe name that the framework suggests when the user names the accessory being set up."
  },
  {
    "title": "suggestedAccessoryName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuprequest/3920437-suggestedaccessoryname",
    "html": "Discussion\n\nIf this value is nil, then the suggested name is taken from the accessory itself. If the user sets up an accessory bridge, then this value only applies to the accessory bridge and not any accessories behind the bridge.\n\nSee Also\nSetting up accessorices\nvar homeUniqueIdentifier: UUID?\nThe identifier corresponding to the home that the accessory should be added to when being set up.\nvar payload: HMAccessorySetupPayload?\nThe payload to use for accessory setup.\nvar suggestedRoomUniqueIdentifier: UUID?\nThe identifier corresponding to the room that the framework suggests."
  },
  {
    "title": "updatePrimaryHome(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/1616746-updateprimaryhome",
    "html": "Parameters\nhome\n\nThe new primary home. Must be a home managed by this home manager.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updatePrimaryHome(_ home: HMHome) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nManaging the primary home\nvar primaryHome: HMHome?\nThe primary home managed by this home manager.\nDeprecated"
  },
  {
    "title": "payload | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuprequest/3920436-payload",
    "html": "Discussion\n\nSee HMAccessorySetupPayload for more information.\n\nSee Also\nSetting up accessorices\nvar homeUniqueIdentifier: UUID?\nThe identifier corresponding to the home that the accessory should be added to when being set up.\nvar suggestedAccessoryName: String?\nThe name that the framework suggests when the user names the accessory being set up.\nvar suggestedRoomUniqueIdentifier: UUID?\nThe identifier corresponding to the room that the framework suggests."
  },
  {
    "title": "HMHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome",
    "html": "Overview\n\nAn HMHome instance is a top-level container in HomeKit representing a structure that a user considers as a single home. Users might have multiple homes that are far apart, like a primary home and a vacation home. Or they might have two homes that are close together, but that they consider as distinct units—for example, a main home and a guest cottage on the same property.\n\nAn HMHome instance:\n\nIs the main access point for communicating with and configuring accessories, like a garage door opener or a thermostat.\n\nOrganizes accessories into a number of rooms, which are themselves optionally grouped into zones, such as the upstairs.\n\nAllows the user to define sets of actions that can be performed with a single operation, and triggers that cause an action set to be performed at a specific time.\n\nYou create a new home only in response to a specific user request, but you don’t do it directly. When the user asks your app to create a new home—for example, by tapping an Add button in your interface—your app calls the home manager’s addHome(withName:completionHandler:) method with a name that the user supplies. To get a list of existing home instances, use the homes array of the home manager (an instance of HMHomeManager).\n\nBecause HomeKit gives your app access to a shared database of home automation information, other apps can change the home’s configuration. Adopt the HMHomeDelegate protocol in your app to stay informed of any such changes that happen outside your app.\n\nTopics\nKeeping track of home configuration changes\nvar delegate: HMHomeDelegate?\nA delegate that receives updates on the state of the home.\nprotocol HMHomeDelegate\nAn interface that communicates changes to a home’s configuration.\nIdentifying a home\nvar name: String\nThe name the user gives to the home.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the home.\nvar uniqueIdentifier: UUID\nA unique identifier for the home.\nvar isPrimary: Bool\nA Boolean value that indicates whether this is the primary home for its home manager.\nDividing a house into rooms\nvar rooms: [HMRoom]\nAn array of the rooms created and managed by the user.\nfunc roomForEntireHome() -> HMRoom\nA room that represents all parts of the home that don’t have a more specific room to represent them.\nfunc addRoom(withName: String, completionHandler: (HMRoom?, Error?) -> Void)\nCreates a new room with the specified name.\nfunc removeRoom(HMRoom, completionHandler: (Error?) -> Void)\nRemoves a room from the home.\nclass HMRoom\nThe smallest subdivision of a home’s space.\nGrouping rooms into zones\nvar zones: [HMZone]\nAn array of all the zones in the home.\nfunc addZone(withName: String, completionHandler: (HMZone?, Error?) -> Void)\nAdds a new zone to the home.\nfunc removeZone(HMZone, completionHandler: (Error?) -> Void)\nRemoves a zone from the home.\nclass HMZone\nA collection of rooms that users think of as a single area, like upstairs or downstairs.\nManaging accessories\nvar accessories: [HMAccessory]\nThe collection of accessories that are part of the home.\nfunc addAndSetupAccessories(completionHandler: (Error?) -> Void)\nFinds and adds nearby accessories to the home.\nDeprecated\nfunc addAndSetupAccessories(with: HMAccessorySetupPayload, completionHandler: ([HMAccessory]?, Error?) -> Void)\nFinds and adds nearby accessories to the home using a HomeKit code provided by your app.\nDeprecated\nfunc addAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nAdds a new accessory to the home.\nfunc assignAccessory(HMAccessory, to: HMRoom, completionHandler: (Error?) -> Void)\nAssigns an accessory to a different room.\nfunc removeAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nRemoves an accessory from the home.\nvar supportsAddingNetworkRouter: Bool\nA Boolean that indicates whether a home supports all of the requirements for adding a network router.\nfunc unblockAccessory(HMAccessory, completionHandler: (Error?) -> Void)\nUnblocks a blocked accessory.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nGrouping services\nfunc servicesWithTypes([String]) -> [HMService]?\nReturns an array of all services provided by accessories in the home that match the specified types.\nvar serviceGroups: [HMServiceGroup]\nAn array of all service groups in the home.\nfunc addServiceGroup(withName: String, completionHandler: (HMServiceGroup?, Error?) -> Void)\nAdds a service group to the home.\nfunc removeServiceGroup(HMServiceGroup, completionHandler: (Error?) -> Void)\nRemoves a service group from the home.\nclass HMServiceGroup\nA collection of accessory services.\nQuerying the state of a home hub\nvar homeHubState: HMHomeHubState\nThe state of the home hub.\nenum HMHomeHubState\nThe possible states of the home hub.\nCreating action sets\nvar actionSets: [HMActionSet]\nAn array of the action sets in the home.\nfunc addActionSet(withName: String, completionHandler: (HMActionSet?, Error?) -> Void)\nAdds a new action set to the home.\nfunc removeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nRemoves an action set from the home.\nfunc executeActionSet(HMActionSet, completionHandler: (Error?) -> Void)\nExecutes all the actions in a specified action set.\nfunc builtinActionSet(ofType: String) -> HMActionSet?\nRetrieves the builtin action set for the specified type.\nclass HMActionSet\nA collection of actions that you trigger as a group.\nTriggering an action set\nvar triggers: [HMTrigger]\nAn array of triggers defined in the home.\nfunc addTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nAdds a trigger to the home.\nfunc removeTrigger(HMTrigger, completionHandler: (Error?) -> Void)\nRemoves a trigger from the home.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions.\nclass HMTrigger\nAn abstract base class for triggering actions based on a set of conditions.\nManaging users\nfunc manageUsers(completionHandler: (Error?) -> Void)\nPresents a view controller to manage users of the home.\nvar currentUser: HMUser\nThe current HomeKit user.\nclass HMUser\nA person in the home who may have access to control accessories and services in the home.\nControlling user access\nfunc homeAccessControl(for: HMUser) -> HMHomeAccessControl\nRetrieves the access level of a user associated with the home.\nclass HMHomeAccessControl\nThe access privileges of a user associated with a home.\nclass HMAccessControl\nAn abstract superclass for accessing user privileges.\nlet HMUserFailedAccessoriesKey: String\nThe key for retrieving details of what accessories failed to add or remove a user.\nDeprecated symbols\nvar users: [HMUser]\nAll users associated with the home.\nDeprecated\nfunc addUser(completionHandler: (HMUser?, Error?) -> Void)\nAdds a user to the home.\nDeprecated\nfunc removeUser(HMUser, completionHandler: (Error?) -> Void)\nRemoves a user from the home.\nDeprecated\nInstance Properties\nvar matterControllerID: String\nvar matterControllerXPCConnectBlock: () -> NSXPCConnection\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nWorking with the home layout\nvar homes: [HMHome]\nAn array of all homes managed by this home manager."
  },
  {
    "title": "primaryHome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/1616745-primaryhome",
    "html": "See Also\nManaging the primary home\nfunc updatePrimaryHome(HMHome, completionHandler: (Error?) -> Void)\nUpdates the primary home of this home manager.\nDeprecated"
  },
  {
    "title": "homeUniqueIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuprequest/3920435-homeuniqueidentifier",
    "html": "Discussion\n\nIf nil, then the user chooses a home. See uniqueIdentifier for more information.\n\nSee Also\nSetting up accessorices\nvar payload: HMAccessorySetupPayload?\nThe payload to use for accessory setup.\nvar suggestedAccessoryName: String?\nThe name that the framework suggests when the user names the accessory being set up.\nvar suggestedRoomUniqueIdentifier: UUID?\nThe identifier corresponding to the room that the framework suggests."
  },
  {
    "title": "addHome(withName:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/1616747-addhome",
    "html": "Parameters\nhomeName\n\nThe name of the new home. Must not match the name of an existing home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nhome\n\nThe newly created home; may be nil if creation failed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addHome(named homeName: String) async throws -> HMHome\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nAdding and removing homes\nfunc removeHome(HMHome, completionHandler: (Error?) -> Void)\nRemoves a home from this home manager."
  },
  {
    "title": "Accessory Service Types | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/accessory_service_types",
    "html": "Overview\n\nAn HMService instance’s read-only serviceType property contains one of the values listed below to tell you what the service does.\n\nDon’t confuse these values with the accessory categories found in Accessory Category Types. Despite the similarities, they describe different things. Accessories are the physical objects that the user installs in the home, like a garage door opener. Accessories belong to a particular category, like HMAccessoryCategoryTypeGarageDoorOpener.\n\nAccessories have one or more services that perform tasks. The garage door opener accessory has a garage door opener service with service type HMServiceTypeGarageDoorOpener, given below. The same accessory might also have an attached light providing a light bulb service with service type HMServiceTypeLightbulb, also given below.\n\nTopics\nLight\nlet HMServiceTypeLightbulb: String\nA light bulb service.\nlet HMServiceTypeLightSensor: String\nA light sensor service.\nPower and Switches\nlet HMServiceTypeSwitch: String\nA switch service.\nlet HMServiceTypeBattery: String\nA battery service.\nlet HMServiceTypeOutlet: String\nAn outlet service.\nlet HMServiceTypeStatefulProgrammableSwitch: String\nA stateful programmable switch service.\nlet HMServiceTypeStatelessProgrammableSwitch: String\nA stateless programmable switch service.\nAir Quality and Smoke Detection\nlet HMServiceTypeAirPurifier: String\nAn air purifier service.\nlet HMServiceTypeAirQualitySensor: String\nAn air quality sensor service.\nlet HMServiceTypeCarbonDioxideSensor: String\nA carbon dioxide sensor service.\nlet HMServiceTypeCarbonMonoxideSensor: String\nA carbon monoxide sensor service.\nlet HMServiceTypeSmokeSensor: String\nA smoke sensor service.\nTemperature and Humidity\nlet HMServiceTypeHeaterCooler: String\nA heater or cooler service.\nlet HMServiceTypeTemperatureSensor: String\nA temperature sensor service.\nlet HMServiceTypeThermostat: String\nA thermostat service.\nlet HMServiceTypeFan: String\nA fan service.\nlet HMServiceTypeFilterMaintenance: String\nA filter maintenance service.\nlet HMServiceTypeHumidifierDehumidifier: String\nA humidifier or dehumidifier service.\nlet HMServiceTypeHumiditySensor: String\nA humidity sensor service.\nlet HMServiceTypeVentilationFan: String\nA ventilation fan service.\nWindows\nlet HMServiceTypeWindow: String\nA window service.\nlet HMServiceTypeWindowCovering: String\nA window covering service.\nlet HMServiceTypeSlats: String\nA slats service.\nWater\nlet HMServiceTypeFaucet: String\nA faucet service.\nlet HMServiceTypeValve: String\nA valve service.\nlet HMServiceTypeIrrigationSystem: String\nAn irrigation system service.\nlet HMServiceTypeLeakSensor: String\nA leak sensor service.\nLocks and Openers\nlet HMServiceTypeDoor: String\nA door service.\nlet HMServiceTypeDoorbell: String\nA doorbell service.\nlet HMServiceTypeGarageDoorOpener: String\nA garage door opener service.\nlet HMServiceTypeLockManagement: String\nA lock management service.\nlet HMServiceTypeLockMechanism: String\nA lock mechanism service.\nSafety and Security\nlet HMServiceTypeMotionSensor: String\nA motion sensor service.\nlet HMServiceTypeOccupancySensor: String\nAn occupancy sensor service.\nlet HMServiceTypeSecuritySystem: String\nA security system service.\nlet HMServiceTypeContactSensor: String\nA contact sensor service.\nVideo and Audio\nlet HMServiceTypeCameraControl: String\nA camera control service.\nlet HMServiceTypeCameraRTPStreamManagement: String\nA stream management service.\nlet HMServiceTypeMicrophone: String\nA microphone service.\nlet HMServiceTypeSpeaker: String\nAn audio speaker service.\nInformation\nlet HMServiceTypeLabel: String\nA label namespace service used when an accessory supports multiple services of the same type.\nlet HMServiceTypeAccessoryInformation: String\nAn accessory information service.\nSee Also\nGetting the service type\nvar serviceType: String\nThe type of the service.\nvar localizedDescription: String\nThe localized description of the service."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/1616750-delegate",
    "html": "See Also\nKeeping track of connected homes\nprotocol HMHomeManagerDelegate\nAn interface the home manager uses to communicate changes to the state of the home network."
  },
  {
    "title": "HMHomeManagerAuthorizationStatus | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanagerauthorizationstatus",
    "html": "Overview\n\nInspect the home manager’s authorizationStatus property for one or more of the bits defined by HMHomeManagerAuthorizationStatus.\n\nTopics\nRecognizing Status Values\nstatic var determined: HMHomeManagerAuthorizationStatus\nThe user has set the app’s level of access to home data.\nstatic var authorized: HMHomeManagerAuthorizationStatus\nThe app has access to home data.\nstatic var restricted: HMHomeManagerAuthorizationStatus\nThe app doesn’t have access to home data.\nCreating an Authorization Status\ninit(rawValue: UInt)\nCreates an access status from a raw value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nInspecting authorization status\nvar authorizationStatus: HMHomeManagerAuthorizationStatus\nThe current state of the app’s access to home data."
  },
  {
    "title": "homes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager/1616751-homes",
    "html": "Discussion\n\nWhen you create a new home manager, its homes array is empty by default. You can only be sure that this array is properly initialized with data from the shared HomeKit database after the manager calls its delegate’s homeManagerDidUpdateHomes(_:) method for the first time.\n\nSee Also\nWorking with the home layout\nclass HMHome\nThe primary unit of living space, typically composed of rooms organized into zones."
  },
  {
    "title": "Characteristic Properties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/characteristic_properties",
    "html": "Overview\n\nCheck to see if a characteristic’s properties array contains any of these constants to learn something about the corresponding characteristic (HMCharacteristic).\n\nTopics\nProperties of Characteristics\nlet HMCharacteristicPropertyReadable: String\nThe characteristic is readable.\nlet HMCharacteristicPropertyWritable: String\nThe characteristic is writable.\nlet HMCharacteristicPropertySupportsEventNotification: String\nThe characteristic supports event notifications.\nlet HMCharacteristicPropertyHidden: String\nThe characteristic should be hidden from the user.\nSee Also\nReading characteristic properties\nvar properties: [String]\nAn array of properties that describe the characteristic."
  },
  {
    "title": "writeValue(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624191-writevalue",
    "html": "Parameters\nvalue\n\nThe new value.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc writeValue(_ value: Any?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nControlling a characteristic\nvar value: Any?\nThe current value of the characteristic.\nfunc readValue(completionHandler: (Error?) -> Void)\nReads the value for the characteristic.\nfunc updateAuthorizationData(Data?, completionHandler: (Error?) -> Void)\nSets or clears authorization data used when writing to the characteristic."
  },
  {
    "title": "updateAuthorizationData(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624193-updateauthorizationdata",
    "html": "Parameters\ndata\n\nNew authorization data to use. Pass nil to remove authorization data.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateAuthorizationData(_ data: Data?) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nControlling a characteristic\nvar value: Any?\nThe current value of the characteristic.\nfunc readValue(completionHandler: (Error?) -> Void)\nReads the value for the characteristic.\nfunc writeValue(Any?, completionHandler: (Error?) -> Void)\nModifies the value of the characteristic."
  },
  {
    "title": "properties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic/1624186-properties",
    "html": "Discussion\n\nTest a characteristic’s properties array for any of the constants listed in Characteristic Properties to learn something about the corresponding characteristic. For example, you can create a readability Boolean in an extension to the HMCharacteristic class by testing for HMCharacteristicPropertyReadable:\n\nextension HMCharacteristic {\n    var isReadable: Bool {\n        return properties.contains(HMCharacteristicPropertyReadable)\n    }\n}\n\nSee Also\nReading characteristic properties\nCharacteristic Properties\nThe properties that characteristics can have."
  },
  {
    "title": "updateName(_:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615887-updatename",
    "html": "Parameters\nname\n\nThe new name. Must not match an existing name in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc updateName(_ name: String) async throws\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nIdentifying the service\nvar name: String\nThe user specified name of the service.\nvar uniqueIdentifier: UUID\nA unique identifier for the service."
  },
  {
    "title": "homeAccessNotAuthorized | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror/2325650-homeaccessnotauthorized",
    "html": "See Also\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure."
  },
  {
    "title": "serviceType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice/1615885-servicetype",
    "html": "Discussion\n\nThe serviceType property contains a string that indicates what the service does. See Accessory Service Types for a list of possible service types.\n\nSee Also\nGetting the service type\nAccessory Service Types\nThe service types supported by HomeKit.\nvar localizedDescription: String\nThe localized description of the service."
  },
  {
    "title": "Action Set Types | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/action_set_types",
    "html": "Topics\nBuilt-in Types\nlet HMActionSetTypeHomeArrival: String\nSpecifies the HomeArrival built-in action set.\nlet HMActionSetTypeHomeDeparture: String\nSpecifies the HomeDeparture built-in action set.\nlet HMActionSetTypeSleep: String\nSpecifies the Sleep built-in action set.\nlet HMActionSetTypeWakeUp: String\nSpecifies the WakeUp built-in action set.\nUser Defined Types\nlet HMActionSetTypeUserDefined: String\nSpecifies a user-defined action set.\nTrigger Owned Types\nlet HMActionSetTypeTriggerOwned: String\nSpecifies a trigger-owned action set.\nSee Also\nSpecifying a type\nvar actionSetType: String\nThe type of the action set, such as built-in or user-defined."
  },
  {
    "title": "actionSetType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset/1616794-actionsettype",
    "html": "Discussion\n\nAn action set type can be user-defined, trigger-owned, or one of the built-in types. Note that built-in action sets cannot be removed from the home, and trigger-owned action sets cannot be executed, renamed, or associated with another trigger.\n\nSee Also\nSpecifying a type\nAction Set Types\nThe types of action sets that you can define."
  },
  {
    "title": "HMHomeAccessControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomeaccesscontrol",
    "html": "Topics\nGetting the Privileges of a User\nvar isAdministrator: Bool\nSpecifies if the user has administrative privileges for the home.\nRelationships\nInherits From\nHMAccessControl\nConforms To\nSendable\nSee Also\nControlling user access\nfunc homeAccessControl(for: HMUser) -> HMHomeAccessControl\nRetrieves the access level of a user associated with the home.\nclass HMAccessControl\nAn abstract superclass for accessing user privileges.\nlet HMUserFailedAccessoriesKey: String\nThe key for retrieving details of what accessories failed to add or remove a user."
  },
  {
    "title": "addZone(withName:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620212-addzone",
    "html": "Parameters\nzoneName\n\nThe name of the new zone. Must not be nil, and must not be the name of a zone already in the home.\n\ncompletion\n\nThe block executed after the request is processed.\n\nzone\n\nThe newly created zone.\n\nerror\n\nnil on success; otherwise, error object indicating the reason for failure.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc addZone(named zoneName: String) async throws -> HMZone\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nGrouping rooms into zones\nvar zones: [HMZone]\nAn array of all the zones in the home.\nfunc removeZone(HMZone, completionHandler: (Error?) -> Void)\nRemoves a zone from the home.\nclass HMZone\nA collection of rooms that users think of as a single area, like upstairs or downstairs."
  },
  {
    "title": "zones | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhome/1620224-zones",
    "html": "See Also\nGrouping rooms into zones\nfunc addZone(withName: String, completionHandler: (HMZone?, Error?) -> Void)\nAdds a new zone to the home.\nfunc removeZone(HMZone, completionHandler: (Error?) -> Void)\nRemoves a zone from the home.\nclass HMZone\nA collection of rooms that users think of as a single area, like upstairs or downstairs."
  },
  {
    "title": "HMAccessorySetupResult | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetupresult",
    "html": "Topics\nGetting results\nvar accessoryUniqueIdentifiers: [UUID]\nThe values corresponding to accessories that are set up.\nvar homeUniqueIdentifier: UUID\nThe home that accessories were added to.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSendable\nSee Also\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "HMCharacteristicPropertySupportsEvent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristicpropertysupportsevent",
    "html": "See Also\nProperties of Characteristics\nlet HMCharacteristicPropertyReadable: String\nThe characteristic is readable.\nlet HMCharacteristicPropertyWritable: String\nThe characteristic is writable.\nlet HMCharacteristicPropertyHidden: String\nThe characteristic should be hidden from the user."
  },
  {
    "title": "performAccessorySetup(using:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetupmanager/3920432-performaccessorysetup",
    "html": "Parameters\nrequest\n\nThe accessory setup request.\n\ncompletion\n\nA block that the framework invokes once the setup process completes.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc performAccessorySetup(using request: HMAccessorySetupRequest) async throws -> HMAccessorySetupResult\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nDuring the setup process, the framework adds each accessory to a home, assigns it to a room, and provides further configuration based on its services."
  },
  {
    "title": "HMError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerror",
    "html": "Overview\n\nTopics\nInitializing the error object\ninit(Code, userInfo: [String : Any])\nInitialize the error object.\nObtaining error information\nvar hashValue: Int\nA hash value.\nstatic var errorDomain: String\nA string that identifies the HomeKit error domain.\nlet HMErrorDomain: String\nA string that identifies the HomeKit error domain.\nvar code: Code\nThe error code.\nvar errorCode: Int\nA code for the error.\nvar userInfo: [String : Any]\nUser-specific information.\nvar errorUserInfo: [String : Any]\nInformation about the error.\nvar localizedDescription: String\nA localized, human-readable explanation of the error.\nDetecting accessory errors\nstatic var accessoryIsBlocked: HMError.Code\nAn error indicating a blocked accessory.\nstatic var accessoryIsBusy: HMError.Code\nAn error indicating the accessory is busy.\nstatic var accessoryIsSuspended: HMError.Code\nThe accessory is suspended.\nstatic var accessoryNotReachable: HMError.Code\nAn error indicating the accessory is not reachable over the network.\nstatic var accessoryOutOfCompliance: HMError.Code\nAn error indicating the accessory is out of compliance.\nstatic var accessoryOutOfResources: HMError.Code\nAn error indicating the accessory is out of resources.\nstatic var accessoryPoweredOff: HMError.Code\nAn error indicating the accessory is off.\nstatic var accessoryResponseError: HMError.Code\nAn error with the accessory’s response.\nstatic var addAccessoryFailed: HMError.Code\nA failed attempt to add an accessory.\nstatic var incompatibleAccessory: HMError.Code\nThe accessory is incompatible.\nDetecting action set errors\nstatic var actionInAnotherActionSet: HMError.Code\nAn attempt to add an action that exists in one action set to another action set.\nstatic var actionSetExecutionFailed: HMError.Code\nAn attempt to execute the action set failed.\nstatic var actionSetExecutionInProgress: HMError.Code\nAn error indicating the execution of the action set is in progress.\nstatic var actionSetExecutionPartialSuccess: HMError.Code\nAn attempt to execute the action set was only partially successful.\nstatic var cannotRemoveBuiltinActionSet: HMError.Code\nAn error indicating the built-in action set cannot be removed.\nstatic var noActionsInActionSet: HMError.Code\nAn attempt to execute an action set with no actions.\nstatic var noRegisteredActionSets: HMError.Code\nAn attempt to activate a trigger with no action sets.\nDetecting association errors\nstatic var invalidAssociatedServiceType: HMError.Code\nAn error indicating an invalid service type.\nstatic var objectAlreadyAssociatedToHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with that home.\nstatic var objectAssociatedToAnotherHome: HMError.Code\nAn attempt to associate an object with a home when it’s already associated with another home.\nstatic var objectNotAssociatedToAnyHome: HMError.Code\nAn attempt to perform an operation on an object that is not associated to any home.\nDetecting authorization errors\nstatic var invalidOrMissingAuthorizationData: HMError.Code\nAn error indicating the authorization data is invalid or missing.\nstatic var locationForHomeDisabled: HMError.Code\nAn error indicating the home’s location is disabled.\nstatic var homeAccessNotAuthorized: HMError.Code\nAn error indicating access to the home is not authorized.\nstatic var insufficientPrivileges: HMError.Code\nAn error indicating insufficient privileges for the operation.\nstatic var messageAuthenticationFailed: HMError.Code\nA message authentication failure.\nstatic var notAuthorizedForLocationServices: HMError.Code\nAn error indicating location services are not authorized.\nstatic var notAuthorizedForMicrophoneAccess: HMError.Code\nAn error indicating microphone access is not authorized.\nstatic var notSignedIntoiCloud: HMError.Code\nAn error indicating the user is not signed into iCloud.\nstatic var ownershipFailure: HMError.Code\nThe ownership code did not match.\nstatic var securityFailure: HMError.Code\nA security failure.\nDetecting bridge errors\nstatic var bridgedAccessoryNotReachable: HMError.Code\nAn error indicating the bridged accessory cannot be reached.\nstatic var cannotRemoveNonBridgeAccessory: HMError.Code\nAn attempt to remove a bridged accessory.\nstatic var cannotUnblockNonBridgeAccessory: HMError.Code\nAn error indicating a non-bridge accessory cannot be unblocked.\nDetecting characteristic errors\nstatic var readOnlyCharacteristic: HMError.Code\nAn attempt to modify a read-only value.\nstatic var writeOnlyCharacteristic: HMError.Code\nAn attempt to read from a write-only characteristic.\nDetecting collision errors\nstatic var homeWithSimilarNameExists: HMError.Code\nAn attempt to assign a home the same name as an existing home.\nstatic var objectWithSimilarNameExists: HMError.Code\nAn object with a similar name already exists.\nstatic var objectWithSimilarNameExistsInHome: HMError.Code\nAn attempt to give the name of one object to another object in the home.\nstatic var renameWithSimilarName: HMError.Code\nAn attempt to rename an object with its current name.\nDetecting communication errors\nstatic var accessDenied: HMError.Code\nAn error indicating the current user doesn’t have privileges to perform the operation.\nstatic var accessoryCommunicationFailure: HMError.Code\nThe accessory failed to communicate.\nstatic var accessoryPairingFailed: HMError.Code\nAn attempt to pair with the accessory has failed.\nstatic var accessorySentInvalidResponse: HMError.Code\nAn error indicating the accessory sent an invalid response.\nstatic var clientRequestError: HMError.Code\nAn error with the client request.\nstatic var communicationFailure: HMError.Code\nA communication failure.\nstatic var dataResetFailure: HMError.Code\nAn attempt to reset the data failed.\nstatic var timedOutWaitingForAccessory: HMError.Code\nAn accessory did not respond timely.\nDetecting device and discovery errors\nstatic var deviceLocked: HMError.Code\nAn error indicating the device is locked.\nstatic var accessoryDiscoveryFailed: HMError.Code\nAn error indicating that accessory discovery failed.\nDetecting general errors\nstatic var alreadyExists: HMError.Code\nAn error indicating the container already contains the object you are trying to add.\nstatic var genericError: HMError.Code\nAn error that does not have a more specific error code.\nstatic var incompatibleHomeHub: HMError.Code\nNo compatible home hub found.\nDeprecated\nstatic var invalidClass: HMError.Code\nAn attempt to use an abstract base class in an operation instead of a concrete subclass.\nstatic var notFound: HMError.Code\nAn error indicating the object was not found in the container.\nstatic var notificationAlreadyEnabled: HMError.Code\nAn error indicating the notification is already enabled.\nstatic var notificationNotSupported: HMError.Code\nAn attempt to register for notifications from an accessory that does not support notifications.\nstatic var operationNotSupported: HMError.Code\nAn attempt to use an unsupported operation.\nstatic var unexpectedError: HMError.Code\nAn unexpected error.\nstatic var missingEntitlement: HMError.Code\nAn error indicating a required entitlement is not available.\nstatic var referToUserManual: HMError.Code\nAn error described in the device’s user manual.\nDetecting home and room errors\nstatic var maximumAccessoriesOfTypeInHome: HMError.Code\nThe home already has the maximum number of accessories of the given type.\nstatic var roomForHomeCannotBeInZone: HMError.Code\nAn attempt to add the room that represents the entire home to a zone.\nstatic var roomForHomeCannotBeUpdated: HMError.Code\nAn attempt to change the room that represents the entire home.\nDetecting hub errors\nstatic var noHomeHub: HMError.Code\nAn error indicating no home hub found.\nstatic var noCompatibleHomeHub: HMError.Code\nAn error indicating no compatible home hub found.\nstatic var incompatibleHomeHub: HMError.Code\nAn error indicating an incompatible home hub.\nDeprecated\nDetecting limit errors\nstatic var cannotActivateTriggerTooFarInFuture: HMError.Code\nAn error indicating the trigger cannot be activated because it is set too far in the future.\nstatic var dateMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the date is not on the specified boundaries.\nstatic var fireDateInPast: HMError.Code\nAn attempt to activate a timer trigger with a date in the past.\nstatic var invalidMessageSize: HMError.Code\nAn error indicating an invalid message size.\nstatic var maximumObjectLimitReached: HMError.Code\nAn error indicating the maximum object count has been reached.\nstatic var recurrenceTooLarge: HMError.Code\nAn attempt to use a recurrence period that is too large.\nstatic var recurrenceTooSmall: HMError.Code\nAn error indicating the recurrence interval is too short.\nstatic var recurrenceMustBeOnSpecifiedBoundaries: HMError.Code\nAn error indicating the recurrence rule is not on the specified boundaries.\nDetecting network errors\nstatic var enterpriseNetworkNotSupported: HMError.Code\nAn enterprise network doesn’t support this accessory.\nstatic var failedToJoinNetwork: HMError.Code\nThe accessory failed to join the network.\nstatic var incompatibleNetwork: HMError.Code\nAn error indicating an incompatible network.\nstatic var networkUnavailable: HMError.Code\nAn error indicating the network is unavailable.\nstatic var wiFiCredentialGenerationFailed: HMError.Code\nWiFi credential generation failed.\nDetecting operation errors\nstatic var operationCancelled: HMError.Code\nAn error indicating the user canceled the operation.\nstatic var operationInProgress: HMError.Code\nAn error indicating the operation is already in progress.\nstatic var operationTimedOut: HMError.Code\nAn error indicating the operation timed out.\nDetecting parameter errors\nstatic var invalidParameter: HMError.Code\nAn error indicating the object is invalid for the given operation.\nstatic var missingParameter: HMError.Code\nAn error indicating a missing parameter.\nstatic var nilParameter: HMError.Code\nAn error indicating that nil was passed for an operation that does not accept nil.\nstatic var unconfiguredParameter: HMError.Code\nAn error indicating an unconfigured parameter.\nDetecting read and write errors\nstatic var readWriteFailure: HMError.Code\nAn error indicating a failed read/write operation.\nstatic var readWritePartialSuccess: HMError.Code\nAn error indicating a partially successful read/write operation.\nDetecting synchronization errors\nstatic var cloudDataSyncInProgress: HMError.Code\nAn error indicating a data synchronization operation is in progress.\nstatic var keychainSyncNotEnabled: HMError.Code\nAn error indicating Keychain syncing is not enabled for the user.\nDetecting user errors\nstatic var userDeclinedAddingUser: HMError.Code\nAn error indicating the user canceled the add user operation.\nstatic var userDeclinedRemovingUser: HMError.Code\nAn error indicating the user canceled the remove user operation.\nstatic var userDeclinedInvite: HMError.Code\nAn error indicating the user declined the invitation.\nstatic var userIDNotEmailAddress: HMError.Code\nAn error indicating the user’s ID is not a valid email address.\nstatic var userManagementFailed: HMError.Code\nA user management error not covered by the other errors.\nDetecting value errors\nstatic var invalidDataFormatSpecified: HMError.Code\nAn error indicating an invalid data format was specified.\nstatic var invalidValueType: HMError.Code\nAn attempt to use an invalid value type.\nstatic var nameContainsProhibitedCharacters: HMError.Code\nAn attempt to name an object with prohibited characters.\nstatic var nameDoesNotEndWithValidCharacters: HMError.Code\nAn error indicating the provided name has invalid characters at the end.\nstatic var nameDoesNotStartWithValidCharacters: HMError.Code\nAn attempt to start the name of an object with invalid characters.\nstatic var stringLongerThanMaximum: HMError.Code\nAn attempt to use a string longer than the maximum allowed.\nstatic var stringShorterThanMinimum: HMError.Code\nAn attempt to use a string shorter than the required minimum.\nstatic var valueHigherThanMaximum: HMError.Code\nAn attempt to use a numeric value higher than the specified maximum value.\nstatic var valueLowerThanMinimum: HMError.Code\nAn attempt to use a numeric value lower than the specified minimum value.\nComparing errors\nstatic func != (HMError, HMError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nstatic func == (HMError, HMError) -> Bool\nReturns a Boolean value indicating whether two values are equal.\nfunc hash(into: inout Hasher)\nEnumerating errors\nenum HMError.Code\nPossible error values that can be returned from HomeKit APIs.\nSee Also\nErrors\ntypealias HMErrorBlock\nA completion block that provides an error."
  },
  {
    "title": "HMEventTrigger | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmeventtrigger",
    "html": "Overview\n\nUse an HMEventTrigger object to trigger the execution of a scene when a combination of characteristic or location events and conditions occur. To create an event trigger, first create one or more event objects that fire an event when the specified trigger values are met. For example, you might create an HMCharacteristicEvent that fires when the front door is open. Then, you can use HMEventTrigger convenience methods to create optional predicates that specify conditions that must be met before a scene is executed. For example, you might create a condition that ensures the scene is executed only after sunset.\n\nTopics\nCreating an event trigger\ninit(name: String, events: [HMEvent], predicate: NSPredicate?)\nCreates a new event trigger with the specified name, events, and predicate.\ninit(name: String, events: [HMEvent], end: [HMEvent]?, recurrences: [DateComponents]?, predicate: NSPredicate?)\nCreates a new event trigger with the specified name, events, end events, recurrences, and predicate.\nQuerying trigger activation state\nvar triggerActivationState: HMEventTriggerActivationState\nThe current activation state of the trigger.\nenum HMEventTriggerActivationState\nThe activation state of an event trigger.\nSetting trigger events\nvar events: [HMEvent]\nThe events that activate the trigger.\nfunc updateEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of trigger events.\nLocation events\nEvents that represent the user's movement among regions.\nTime events\nEvents based on time, significant occurrences, and time durations.\nCharacteristic events\nEvents based on the capabilities or characteristics of accessories.\nPresence events\nEvents based on the user's presence in a home.\nclass HMEvent\nThe abstract base class for a HomeKit event.\nRestoring the previous scene after an event\nvar endEvents: [HMEvent]\nThe events associated with the end of scene represented by this trigger.\nfunc updateEndEvents([HMEvent], completionHandler: (Error?) -> Void)\nUpdates the set of end events associated with the event trigger.\nControlling recurrence\nvar recurrences: [DateComponents]?\nSpecifies the days on which the trigger can execute.\nfunc updateRecurrences([DateComponents]?, completionHandler: (Error?) -> Void)\nUpdates the days of the week the trigger can repeat.\nvar executeOnce: Bool\nA Boolean that can execute the trigger many times.\nfunc updateExecuteOnce(Bool, completionHandler: (Error?) -> Void)\nUpdates the repetition status of the event trigger.\nAdding a trigger condition\nvar predicate: NSPredicate?\nThe predicate to evaluate before executing the scene associated with the event trigger.\nfunc updatePredicate(NSPredicate?, completionHandler: (Error?) -> Void)\nReplaces the predicate used to evaluate execution of the scene associated with the event trigger.\nCreating predicates\nclass func predicateForEvaluatingTriggerOccurring(beforeSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nclass func predicateForEvaluatingTriggerOccurring(afterSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred after a significant event.\nclass func predicate(forEvaluatingTriggerOccurringBetweenSignificantEvent: HMSignificantTimeEvent, secondSignificantEvent: HMSignificantTimeEvent) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between two significant events.\nclass func predicateForEvaluatingTrigger(occurringBefore: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before the specified time.\nclass func predicateForEvaluatingTrigger(occurringOn: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at the specified time.\nclass func predicateForEvaluatingTrigger(occurringAfter: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred at or after the specified time.\nclass func predicateForEvaluatingTriggerOccurringBetweenDate(with: DateComponents, secondDateWith: DateComponents) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred between the specified times.\nclass func predicateForEvaluatingTrigger(HMCharacteristic, relatedBy: NSComparisonPredicate.Operator, toValue: Any) -> NSPredicate\nCreates a predicate that evaluates whether a characteristic value relates to the specified value.\nclass func predicateForEvaluatingTrigger(withPresence: HMPresenceEvent) -> NSPredicate\nCreates a predicate that evaluates the current user presence against that specified in the presence event.\nlet HMCharacteristicKeyPath: String\nSpecifies the key path for a characteristic in an NSPredicate.\nlet HMCharacteristicValueKeyPath: String\nSpecifies the key path for a characteristic value in an NSPredicate.\nlet HMPresenceKeyPath: String\nSpecifies the key path for a presence event in an NSPredicate.\nDeprecated symbols\nfunc addEvent(HMEvent, completionHandler: (Error?) -> Void)\nAdds a new event to the event trigger.\nDeprecated\nfunc removeEvent(HMEvent, completionHandler: (Error?) -> Void)\nRemoves the specified event from the event trigger.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringBefore: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated\nclass func predicateForEvaluatingTrigger(occurringAfter: String, applyingOffset: DateComponents?) -> NSPredicate\nCreates a predicate that evaluates whether the event occurred before a significant event.\nDeprecated\nRelationships\nInherits From\nHMTrigger\nConforms To\nSendable\nSee Also\nAction Sets\nclass HMActionSet\nA collection of actions that you trigger as a group.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer."
  },
  {
    "title": "HMTimerTrigger | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmtimertrigger",
    "html": "Overview\n\nWhen a timer trigger is enabled using enable(_:completionHandler:), the system checks to verify that the timer trigger’s fire date, time zone, and recurrence rules yield a next fire date that is in the future.\n\nTopics\nCreating a timer trigger\ninit(name: String, fireDate: Date, timeZone: TimeZone?, recurrence: DateComponents?, recurrenceCalendar: Calendar?)\nInitializes a timer trigger with specified timing information.\nDeprecated\nChoosing the fire date\nvar fireDate: Date\nThe time at which the trigger will next fire.\nfunc updateFireDate(Date, completionHandler: (Error?) -> Void)\nUpdates the next fire date for the trigger.\nUsing recurrence\nvar recurrence: DateComponents?\nThe interval on which to repeat firing the trigger.\nfunc updateRecurrence(DateComponents?, completionHandler: (Error?) -> Void)\nUpdates the recurrence interval.\nvar recurrenceCalendar: Calendar?\nThe calendar in which the recurrence value is evaluated.\nDeprecated\nIndicating a time zone\nvar timeZone: TimeZone?\nThe timezone in which to evaluate the fire time.\nDeprecated\nfunc updateTimeZone(TimeZone?, completionHandler: (Error?) -> Void)\nUpdates the trigger’s time zone.\nDeprecated\nInitializers\ninit(name: String, fireDate: Date, recurrence: DateComponents?)\nRelationships\nInherits From\nHMTrigger\nConforms To\nSendable\nSee Also\nAction Sets\nclass HMActionSet\nA collection of actions that you trigger as a group.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions."
  },
  {
    "title": "HMErrorBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmerrorblock",
    "html": "Parameters\nerror\n\nThe error the block returns.\n\nSee Also\nErrors\nstruct HMError\nAn error HomeKit returns."
  },
  {
    "title": "HMCharacteristic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmcharacteristic",
    "html": "Overview\n\nAn HMCharacteristic instance represents an aspect of a service that provides data, or that your app can control.\n\nYou don’t create characteristic instances. Instead, an accessory manufacturer incorporates them into a device, which publishes them to you through the characteristics array of an HMService instance.\n\nCharacteristics have a properties array that indicates attributes like readability, writability, and user-visibility. They also have a characteristicType property that tells your app what the characteristic controls or describes. Device manufacturers can use one of the standard types, given in Characteristic types, or they can create custom types.\n\nEach characteristic has a value that you can read or write. Some characteristics use plain numbers, Booleans, or strings. Others have application specific meanings declared in enumerations associated with the given characteristic type. The characteristic’s metadata can help your app interpret the value.\n\nTopics\nIdentifying a characteristic\nvar uniqueIdentifier: UUID\nA unique identifier for the characteristic.\nvar localizedDescription: String\nThe localized description of the characteristic.\nReading characteristic properties\nvar properties: [String]\nAn array of properties that describe the characteristic.\nCharacteristic Properties\nThe properties that characteristics can have.\nDetermining what a characteristic controls\nvar characteristicType: String\nThe type of the characteristic.\nCharacteristic types\nThe characteristic types supported by HomeKit-based accessories.\nControlling a characteristic\nvar value: Any?\nThe current value of the characteristic.\nfunc readValue(completionHandler: (Error?) -> Void)\nReads the value for the characteristic.\nfunc writeValue(Any?, completionHandler: (Error?) -> Void)\nModifies the value of the characteristic.\nfunc updateAuthorizationData(Data?, completionHandler: (Error?) -> Void)\nSets or clears authorization data used when writing to the characteristic.\nManaging characteristic presentation\nvar metadata: HMCharacteristicMetadata?\nMetadata about the units and other properties of the characteristic.\nclass HMCharacteristicMetadata\nMetadata that describes a characteristic’s value and that may be useful for presentation purposes.\nReceiving change notifications\nfunc enableNotification(Bool, completionHandler: (Error?) -> Void)\nEnables or disables notifications for changes in the value of the characteristic.\nvar isNotificationEnabled: Bool\nA Boolean indicating whether the characteristic has been set to send notifications.\nGetting the characterized service\nvar service: HMService?\nThe service that contains this characteristic.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener."
  },
  {
    "title": "HMService | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmservice",
    "html": "Overview\n\nAn HMService instance represents a service provided by an accessory. Accessories have both user-controllable services, like a light, and services that are for the use of the accessory itself, like a firmware update service.\n\nYou don’t create services directly. Instead you find them in the services array of an HMAccessory instance.\n\nA single accessory may have more than one user-controllable service. For example, most garage door openers have a service for opening and closing the door, and another service for the light on the garage door opener. These services are what Apple’s Home app labels as \"accessories\".\n\nYou inspect or change a service’s HMCharacteristic instances to discover state, or modify behavior.\n\nTopics\nGetting service characteristics\nvar characteristics: [HMCharacteristic]\nAn array of characteristics for the service.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature.\nIdentifying the service\nvar name: String\nThe user specified name of the service.\nfunc updateName(String, completionHandler: (Error?) -> Void)\nUpdates the name of the service to the specified string.\nvar uniqueIdentifier: UUID\nA unique identifier for the service.\nGetting the service type\nvar serviceType: String\nThe type of the service.\nAccessory Service Types\nThe service types supported by HomeKit.\nvar localizedDescription: String\nThe localized description of the service.\nReading service properties\nvar isPrimaryService: Bool\nA Boolean value that indicates whether this service is the primary service on the accessory.\nvar isUserInteractive: Bool\nA Boolean value that indicates whether this service supports user interaction.\nAssociating a secondary service\nvar associatedServiceType: String?\nThe type of the service associated with an outlet or a switch.\nfunc updateAssociatedServiceType(String?, completionHandler: (Error?) -> Void)\nAssociates the service type of the plugged-in device with a switch or an outlet service.\nFinding the linked services\nvar linkedServices: [HMService]?\nAn array of service objects that represents all the services to which the service links.\nGetting the service’s provider\nvar accessory: HMAccessory?\nThe accessory that provides this service.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "HMActionSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmactionset",
    "html": "Overview\n\nAction sets can be executed as a result of evaluating a trigger (instances of HMTrigger) or manually with executeActionSet(_:completionHandler:). Actions in an action set are performed in an unspecified order. You create new action sets using the addActionSet(withName:completionHandler:) method of HMHome.\n\nTopics\nIdentifiying an action set\nvar uniqueIdentifier: UUID\nThe action set's unique identifier.\nvar name: String\nThe name of the action set.\nfunc updateName(String, completionHandler: HMErrorBlock)\nUpdates the name of the action set.\nSpecifying a type\nvar actionSetType: String\nThe type of the action set, such as built-in or user-defined.\nAction Set Types\nThe types of action sets that you can define.\nDefining the associated actions\nvar actions: Set<HMAction>\nSet of actions in the action set.\nfunc addAction(HMAction, completionHandler: HMErrorBlock)\nAdds an action to the action set.\nfunc removeAction(HMAction, completionHandler: HMErrorBlock)\nRemoves an action from the action set.\nclass HMCharacteristicWriteAction\nAn action in an action set that writes a value to a characteristic.\nclass HMAction\nAn abstract base class for actions in HomeKit.\nKeeping track of execution\nvar isExecuting: Bool\nThe execution status of the action set.\nvar lastExecutionDate: Date?\nThe last execution date of the action set.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nAction Sets\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions."
  },
  {
    "title": "Interacting with a Home Automation Network | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/interacting_with_a_home_automation_network",
    "html": "Overview\n\nThis sample app introduces you to the accessories, services, and characteristics found in a home automation network, represented by instances of HMAccessory, HMService, and HMCharacteristic, respectively. The sample displays all the properties and relationships it finds using a simple set of hierarchical views inside a split view controller.\n\nThis view hierarchy is useful for learning how HomeKit structures device data, which is slightly different than the way the Apple Home app refers to related concepts. It’s also useful for device developers who want to understand how HomeKit sees custom hardware.\n\nIn a real app that you publish on the App Store, you would provide a user experience more like the one found in Configuring a Home Automation Device. For example, you would focus on the actions a user can take and hide the underlying technical details. For more tips about presenting HomeKit data to users, see the “Adjust the Interface for a Published App” section at the end of this article.\n\nConfigure the Sample Code Project\n\nTo be able to use HomeKit, you enable the HomeKit capability and include the NSHomeKitUsageDescription key in your app’s Info.plist file, as described in Enabling HomeKit in your app. In this sample app, the capability is already enabled and a usage description is provided.\n\nTo be able to build an app that has the HomeKit capability, you must set a valid signing team in the target’s General pane before you build, so that Xcode can create a provisioning profile containing the HomeKit entitlement.\n\nThe sample app works with both real devices and simulated ones. If you don’t have any real home automation accessories, or if you want to try an accessory type that you don’t have, use the HomeKit Accessory Simulator (HAS), as described in Testing your app with the HomeKit Accessory Simulator. You can use a mix of simulated devices and real ones.\n\nGroup Accessories by Room\n\nYou always use an instance of HMHomeManager as the root HomeKit object, following the pattern described in Configuring a Home Automation Device. As in that sample, this app finds the primary home, allowing the user to create a new one if none exists. In other respects, this sample leaves home management to the Home app.\n\nWhen HomeKit data finishes loading after initialization, or after the user creates a new home, your home manager delegate—an adopter of the HMHomeManagerDelegate protocol—gets access to the user’s homes. Use the delegate to set the home view’s home property based on this information. From the corresponding didSet observer, you then call the resetDisplay(for:) method to retrieve data from HomeKit and redraw the display, which consists of a list of accessories in the home:\n\nfunc resetDisplay(for home: HMHome?) {\n    reloadDisplayData(for: home)\n    accessoryView?.accessory = nil\n    tableView.reloadData()\n}\n\n\nBefore triggering a table view reload, use the reloadDisplayData(for:) method to prepare a list of accessories sorted by room that can serve as a data source for the home view’s table view. Start with the home’s default room—accessible using the roomForEntireHome() method. Add that to the contents of the home’s rooms array. Then filter out any rooms from this composite group lacking accessories. Sort the remaining rooms by name:\n\nrooms = ([home.roomForEntireHome()] + home.rooms)\n    .filter { !$0.accessories.isEmpty }\n    .sorted { $0.name < $1.name }\n\nGroup Accessories by Category\n\nAlternatively, you can display accessories sorted by category. Accessories have a category property, which is an instance of the HMAccessoryCategory class that indicates what the device is, like a door or a light. You can derive a name from this information, and use that to group accessories:\n\nhome.accessories.forEach {\n    let name = $0.displayName   // Computed from the accessory's category.\n    if let index = categories.firstIndex(where: { $0.name == name }) {\n        categories[index].accessories.append($0)\n    } else {\n        categories.append(Category(name: name, accessories: [$0]))\n    }\n}\n\n\nUnlike the HMRoom class, the HMAccessoryCategory class doesn’t natively contain the list of related accessories. So you define a local Category type to serve as a category container:\n\nstruct Category: AccessoryGroup {\n    var name: String\n    var accessories: [HMAccessory]\n}\n\n\nAs indicated in the previous and next snippet, both the Category type and the HMRoom type adopt the AccessoryGroup protocol, which declares both a name and a list of accessories. This ensures that either type can serve as the data source:\n\nprotocol AccessoryGroup {\n    var name: String { get }\n    var accessories: [HMAccessory] { get }\n}\n\n\n// Assert that HMRoom already adopts the AccessoryGroup protocol.\nextension HMRoom: AccessoryGroup {}\n\nPick a Grouping to Display\n\nTo enable the user to select between displaying accessories grouped by room or category, use a segmented controller in the home view’s toolbar to set the groupKey property:\n\n@objc\nfunc changeSeg(_ sender: UISegmentedControl) {\n    groupKey = sender.selectedSegmentIndex == 0 ? .room : .category\n}\n\n\nInside the groupKey property’s didSet observer, reload the table view without reloading data from HomeKit:\n\nvar groupKey = GroupKey.room {\n    didSet {\n        // Refreshes the view without reloading the display data from HomeKit.\n        accessoryView?.accessory = nil\n        tableView.reloadData()\n    }\n}\n\n\nYou use the table view’s data source and delegate methods to prepare table cells based on the current grouping of accessories, as specified by the groupKey property.\n\nAdd New Accessories\n\nTo enable the pairing of new accessories, the UI presents a + button in the home view that the user taps to initiate a search for accessories on the local network. The button’s tap handler calls the home’s addAndSetupAccessories(completionHandler:) method, which presents the standard HomeKit UI for locating and adding new accessories to a given home:\n\nhome?.addAndSetupAccessories { error in\n    if let error = error {\n        print(error)\n    } else {\n        // Make no assumption about changes; just reload everything.\n        self.resetDisplay(for: self.home)\n    }\n}\n\n\nOn success, the completion handler refreshes the app’s copy of the HomeKit data and redraws the display.\n\nShow Accessory, Service, and Characteristic Details\n\nThe sample app’s split view detail controller shows an AccessoryView with information about a single accessory. This includes a list of accessory properties, like the accessory’s name and manufacturer. It also includes services, like a door opener or a light bulb, that the accessory offers. Optionally, for an accessory that’s a bridge, which is an accessory that serves as a link to accessories on a non-HomeKit network, the view also shows a list of the accessories to which the bridge provides access.\n\nNote\n\nBridged accessories (those with the isBridged property set to true) also appear in the home view’s main list of accessories because HomeKit makes them directly accessible. Listing them in the accessory view is a convenience to show the relationship with their bridge.\n\nWhen the user taps an accessory in the home view, you use the prepare(for:sender:) method override to assign the corresponding accessory to the accessory view, which triggers the view to reload its content:\n\nlet accessory = grouping[indexPath.section].accessories[indexPath.row]\ncontroller.accessory = accessory\n\n\nWhen the user taps a service in the accessory view, you push a ServiceView instance on the navigation stack. The service view lists the corresponding service’s properties, like its name. It also lists the associated characteristics, which are the control points and data values that the service exposes. For example, the garage door opener service might have a characteristic whose value you set to indicate whether the garage door should be opened or closed. It might have another characteristic whose value you read to find out where the garage door is right now—open, closed, or something in between.\n\nWhen the user taps a characteristic in the service view, you push a CharacteristicView instance onto the navigation stack to provide details about that specific characteristic, like its name and the content of its associated value.\n\nRead Characteristic Values Before Using Them\n\nA characteristic is primarily a container for its value property that represents an input to or output from a service. Other properties of the characteristic tell you about that value, like if it’s a Boolean, number, string, or something else, what units apply to it, whether you can read or write it, and so on.\n\nWhen the user taps a service in the accessory view, the incoming service view writes a characteristic to each of its characteristic cells. This begins the process of populating the cell’s UI, for example by adjusting the visibility of the cell’s controls depending on the characteristic value’s type. But the cell can’t rely on the actual value until it calls the characteristic’s readValue(completionHandler:) method.\n\ncharacteristic.readValue { error in\n    if let error = error {\n        print(error.localizedDescription)\n    } else {\n        self.redrawValueLabel()\n        self.redrawControls(animated: animated)\n    }\n}\n\n\nYou can access the value property at any time, but this is a cached value from the last interaction with the physical accessory, if any. Performing an explicit read operation prompts HomeKit to ask the accessory for the characteristic’s current value, and update its local copy. Because this query involves network access, HomeKit reports the value to your app in a completion handler, which then finalizes the UI changes by setting the cell’s label text and the control state.\n\nThe characteristic view, which also displays the characteristic value, doesn’t perform an explicit read. The user can only get to the characteristic view by tapping on a service view’s characteristic cell, which has recently refreshed the corresponding value. Both views rely on accessory delegate callbacks to track any further changes in the value, as described in the next section.\n\nKeep Home Data Up To Date\n\nHomeKit gives apps access to a shared home automation network. Apps other than yours, including the Home app, can change service names, characteristic values, the layout of a home, and other attributes. Accessories can also drive changes independently. For example, a garage door opener might have an obstruction sensor with output that varies based on physical changes in the environment. To keep your app’s local data caches and user interfaces up to date with outside changes, your app adopts HomeKit delegate protocols.\n\nThe sample app’s home view adopts the HMHomeManagerDelegate protocol to handle changes in the list of homes, as described in the section “Create a Home Manager and Get the Primary Home”. This particular implementation ensures that the home view always shows the primary home.\n\nThe home view also implements the HMHomeDelegate protocol to be informed of changes within the chosen home. Because these kinds of changes affect the entire user interface, the app redraws the whole display when anything changes, such as when a room is added by another app:\n\nfunc home(_ home: HMHome, didAdd room: HMRoom) {\n    guard home == self.home else { return }\n    resetDisplay(for: home)\n}\n\nKeep Accessory Data Up To Date\n\nAccessory changes, reported by the HMAccessoryDelegate protocol, typically don’t warrant completely redrawing the entire interface, but can nonetheless affect multiple view controllers. However, an accessory can have only a single delegate.\n\nFor example, it would be disruptive to reset the entire user interface to show only that a light bulb is turned off. But the corresponding characteristic value affects both a toggle switch in a characteristic cell and a value label in the related characteristic view. Both of these might be on the detail view’s navigation stack at the same time and need to be informed of the change.\n\nTo solve this, the home store singleton acts as the accessory delegate for all accessories, set whenever the home is updated:\n\nhome?.accessories.forEach { $0.delegate = HomeStore.shared }\n\n\nThe home store also becomes the accessory delegate for any accessories added later, set in the home(_:didAdd:) delegate method:\n\nfunc home(_ home: HMHome, didAdd accessory: HMAccessory) {\n    guard home == self.home else { return }\n    resetDisplay(for: home)\n    \n    // Make sure the new accessory generates callbacks to the home store.\n    accessory.delegate = HomeStore.shared\n}\n\n\nThe home store can then act as an accessory delegate hub. Any view controllers that want to receive accessory delegate callbacks register themselves by calling the addAccessoryDelegate(:) method:\n\nfunc addAccessoryDelegate(_ delegate: NSObject) {\n    accessoryDelegates.insert(delegate)\n}\n\n\nWhen the home store receives a delegate callback, it passes the call along to all interested parties, such as when a characteristic value changes:\n\nfunc accessory(_ accessory: HMAccessory, service: HMService, didUpdateValueFor characteristic: HMCharacteristic) {\n    accessoryDelegates.forEach {\n        guard let delegate = $0 as? HMAccessoryDelegate else { return }\n        delegate.accessory?(accessory, service: service, didUpdateValueFor: characteristic)\n    }\n}\n\nRegister for Characteristic Value Update Notifications\n\nMost delegate callbacks work by default. However, your app only receives callbacks for characteristic value changes—the delegate method shown at the end of the previous section—when it explicitly enables them. The sample app does this by calling the service’s enableNotifications method whenever the service view’s service property changes.\n\nvar service: HMService? {\n    willSet {\n        // Disable notifications on the previous service characteristics.\n        service?.enableNotifications(false)\n    }\n    didSet {\n        // Enable notifications on the new service characteristics.\n        service?.enableNotifications(true)\n        reloadDisplayData()\n    }\n}\n\n\nThis method—defined in an HMService extension—in turn calls the enableNotification(_:completionHandler:) method of all the characteristics within the given service that have the HMCharacteristicPropertySupportsEvent property.\n\nfunc enableNotifications(_ enabled: Bool) {\n    for characteristic in characteristics\n        where characteristic.properties.contains(HMCharacteristicPropertySupportsEventNotification) {\n        \n        characteristic.enableNotification(enabled) { error in\n            if let error = error {\n                print(error.localizedDescription)\n            }\n        }\n    }\n}\n\n\nThe sample app also deactivates notifications for characteristics that are no longer needed. The willSet property observer, as shown in the code above, calls the same enabling method, but with false as the input, for the service property value as it exists before the update.\n\nAdjust the Interface for a Published App\n\nFor a HomeKit app that you want to publish in the App Store, you design a different user interface than the one in this sample app.\n\nExpose a lot less detail about individual accessories, services, and characteristics. Only present information that’s really useful. Most users aren’t interested in unique device identifiers and firmware versions. At a minimum, nest or deemphasize less important details.\n\nFocus on services as the root interface element, just like in the Home app. Help users complete tasks by focusing on the actions they can perform, or the data they can read, rather than the physical objects in the environment.\n\nExpose only user interactive services. Hide services not reported as user interactive by the device.\n\nFeature behaviors and settings specific to your app. If your app supports devices only from a certain manufacturer, or with certain capabilities, filter out the accessories that don’t match. Reduce clutter and present only those devices or capabilities that make sense for your app.\n\nProvide meaningful interfaces for custom elements. Your app might enable users to manage custom services and characteristics of a device that you develop. For example, a light service might offer a power-down decay rate characteristic, reducing brightness from full on to full off over a configurable period of time. The Home app doesn’t expose this characteristic, but your app can provide the user with a suitable interface to control it.\n\nFor more information about user interface considerations for HomeKit enabled apps, see the HomeKit section of the Human Interface Guidelines.\n\nSee Also\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "HMAccessorySetupRequest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetuprequest",
    "html": "Overview\n\nUse this class to provide steps for the user to add one or more accessories to a particular home, and follow up with additional setup.\n\nTopics\nSetting up accessorices\nvar homeUniqueIdentifier: UUID?\nThe identifier corresponding to the home that the accessory should be added to when being set up.\nvar payload: HMAccessorySetupPayload?\nThe payload to use for accessory setup.\nvar suggestedAccessoryName: String?\nThe name that the framework suggests when the user names the accessory being set up.\nvar suggestedRoomUniqueIdentifier: UUID?\nThe identifier corresponding to the room that the framework suggests.\nInstance Properties\nvar matterPayload: MTRSetupPayload?\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSendable\nSee Also\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "HMHomeManager | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmhomemanager",
    "html": "Overview\n\nHomeKit stores the user’s home automation information in a database that’s shared among Apple’s built-in iOS Home app, your HomeKit-enabled app, and apps from other developers. All these apps access the database as peers using the HomeKit framework.\n\nEach app creates a single HMHomeManager instance to coordinate its HomeKit-related activities. The manager’s homes array gives your app access to a collection of HMHome instances that represent the user’s homes. These in turn contain references to the home automation accessories that your app can inspect and control.\n\nAdopt the HMHomeManagerDelegate protocol in your app to stay informed of any changes to the set of homes made outside your app.\n\nTopics\nInspecting authorization status\nvar authorizationStatus: HMHomeManagerAuthorizationStatus\nThe current state of the app’s access to home data.\nstruct HMHomeManagerAuthorizationStatus\nThe possible home-access states.\nWorking with the home layout\nvar homes: [HMHome]\nAn array of all homes managed by this home manager.\nclass HMHome\nThe primary unit of living space, typically composed of rooms organized into zones.\nKeeping track of connected homes\nvar delegate: HMHomeManagerDelegate?\nA delegate that receives updates on the collection of homes.\nprotocol HMHomeManagerDelegate\nAn interface the home manager uses to communicate changes to the state of the home network.\nAdding and removing homes\nfunc addHome(withName: String, completionHandler: (HMHome?, Error?) -> Void)\nAdds a new home to this home manager.\nfunc removeHome(HMHome, completionHandler: (Error?) -> Void)\nRemoves a home from this home manager.\nManaging the primary home\nvar primaryHome: HMHome?\nThe primary home managed by this home manager.\nDeprecated\nfunc updatePrimaryHome(HMHome, completionHandler: (Error?) -> Void)\nUpdates the primary home of this home manager.\nDeprecated\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nHome Manager\nConfiguring a Home Automation Device\nGive users a familiar experience when they manage HomeKit accessories.\nTesting your app with the HomeKit Accessory Simulator\nInstall the HomeKit Accessory Simulator to help you debug your HomeKit-enabled app."
  },
  {
    "title": "Testing your app with the HomeKit Accessory Simulator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/testing_your_app_with_the_homekit_accessory_simulator",
    "html": "Overview\n\nWhile developing your HomeKit-enabled app, you might not have physical access to all the kinds of accessories that you want your app to control. To test your app, install the HomeKit Accessory Simulator (HAS) to simulate any accessories you don’t have, or to help automate your testing process.\n\nHAS runs on your Mac, simulating accessories that you define as a supplement to any physical accessories in your network. You can create accessories with both standard and custom services and characteristics. You can use your Mac’s camera to simulate network cameras and video doorbells. You can also create bridges and bridged accessories to represent more complex network architectures.\n\nDownload the HomeKit Accessory Simulator\n\nYou download the HAS as part of the Additional Tools for Xcode package found on the More Downloads for Apple Developers page, which is part of the Apple developer portal. Choose the version of the package that matches your version of Xcode.\n\nAs a convenience, Xcode provides a link to the download page from the Capabilities pane. Xcode displays a button embedded in the HomeKit capability that takes you directly to the download page in Safari.\n\nAfter downloading the disk image file, open it and navigate to the Hardware folder. Drag the HomeKitAccessorySimulator.app from there to your Applications folder. Double-click to launch the simulator.\n\nAdd accessories, services, and characteristics\n\nAccessories in a home automation network are physical devices like light bulbs or garage door openers. Accessories provide control points called services. For example, a garage door opener might offer a door opener and a light. Each service, in turn, has characteristics—the values that describe and control the service. The light has a power state (on or off), a brightness level, and so on. Accessories also have hidden services, like the accessory information service that provides manufacturing information.\n\nIn the HomeKit Accessory Simulator, define accessories that you can use with your app. For details, see the HomeKit Accessory Simulation Help, accessible through the simulator’s Help menu.\n\nAdd an accessory. Assign a name and provide other identifying details. An accessory isn’t typically the user’s main focus, but does serve as a logical container for the services that the user cares about. When you create an accessory, HAS adds the accessory information service by default based on the information you provide.\n\nAdd one or more services to the accessory. Add as many additional services as you need, potentially including hidden services. For each, specify a service type using one of the standard values in Accessory Service Types, or using a custom service with a new, unique identifier. Give each service a unique name. For user-visible services, the user might later change the name using the Home app, or using your app.\n\nAdd or modify service characteristics. HAS populates standard services with a set of standard characteristics for that service, but you can adjust these to match the specific devices you want to model. For example, if a light bulb offers a fade-to-off feature with configurable timing, you might add a custom characteristic indicating the fade rate. The Home app doesn’t expose custom characteristics to the user, but you can control them from your own app.\n\nAssociate the accessory with the network\n\nTo be able to access simulated accessories from a HomeKit enabled app, you associate them with a home network. You can do this from any device on your local area network running the Home app, which is installed on all iOS devices by default. The accessory becomes part of the logged-in user’s home network. From the Home or Rooms tab, tap the plus button and choose Add Accessory. Then follow the instructions in the dialog that appears.\n\nAlternatively, you can call the addAndSetupAccessories(completionHandler:) method from your app.\n\nhome?.addAndSetupAccessories(completionHandler: { error in\n    if let error = error {\n        // Handle error\n    } else {\n        self.tableView.reloadData()\n    }\n})\n\n\nThis generates the same accessory association flow as the one presented in the Home app, and produces the same result. Doing it from within your app offers the advantage of being able to work on the iOS Simulator, where the Home app isn’t available.\n\nImportant\n\nIf you add an accessory on a device, including an iOS Simulator, without a logged-in iCloud account, the accessory is isolated to that device. This means that if you add an accessory to an iPhone simulator and then switch over to using an iPad simulator, you have to reassociate the accessory for it to appear in the new environment.\n\nObserve and change characteristic values\n\nAfter the simulated accessory is part of the home automation network, you can find it and control it from your app just as you would a real accessory.\n\nChanges that you make to characteristics in your app show up immediately in HAS. For example, if you let the user switch a light bulb off in your app with a toggle switch, the state of the light bulb changes right away in the HAS interface to match. When you implement accessory delegate methods like accessory(_:service:didUpdateValueFor:), changes made with HAS show up in your app right away as well.\n\nSee Also\nHome Manager\nConfiguring a Home Automation Device\nGive users a familiar experience when they manage HomeKit accessories.\nclass HMHomeManager\nThe manager for a collection of one or more of a user’s homes."
  },
  {
    "title": "Configuring a Home Automation Device | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/configuring_a_home_automation_device",
    "html": "Overview\n\nThis sample presents a simplified version of the kind of app a HomeKit-enabled accessory manufacturer might provide. You use the app to configure and control a specific device—a garage door opener from a fictional manufacturer, Kilgo Devices. The app offers access to secondary and custom characteristics that Apple’s Home app doesn’t expose. It provides a user experience that’s consistent with the Home app’s approach and terminology, but doesn’t attempt to replicate every feature of the Home app.\n\nFor more information about user interface considerations for HomeKit-enabled apps, see the HomeKit section of the Human Interface Guidelines.\n\nConfigure the Sample Code Project\n\nTo be able to use HomeKit, you enable the HomeKit capability and include the NSHomeKitUsageDescription key in your app’s Info.plist file, as described in Enabling HomeKit in your app. In this sample app, the capability is already enabled and a usage description is provided.\n\nPerform the following steps before building and running the app:\n\nSet a valid signing team in the target’s General pane so that Xcode can create a provisioning profile containing the HomeKit entitlement when you build for the first time.\n\nDownload and install the Home Accessory Simulator (HAS) on your Mac to be able to emulate HomeKit-enabled accessories. See Testing your app with the HomeKit Accessory Simulator.\n\nImport the hasaccessory file that the sample app bundles to define the specific garage door opener accessory that the app controls. Choose File > Import Accessory from the HAS menu. In the dialog that appears, navigate to the downloaded sample code project’s Documentation folder, and select the garage.hasaccessory file.\n\nThe import creates a single accessory with a hidden accessory information service that all accessories have, and two user-interactive services: one that controls a garage door and another to control an attached light bulb. Most of the associated characteristics are standard for their service. Only one—the light bulb’s fade rate—is custom. You can use HAS to inspect and manipulate all of these items.\n\nCreate a Home Manager and Get the Primary Home\n\nYou always use an instance of HMHomeManager as the root HomeKit object. The home manager contains an array of homes, each of which has a collection of accessories. The sample app defines a HomeStore class for use as a singleton that holds the one and only home manager for the app:\n\nclass HomeStore: NSObject {\n    /// A singleton that can be used anywhere in the app to access the home manager.\n    static var shared = HomeStore()\n    \n    /// The one and only home manager that belongs to the home store singleton.\n    let homeManager = HMHomeManager()\n    \n    /// A set of objects that want to receive home delegate callbacks.\n    var homeDelegates = Set<NSObject>()\n    \n    /// A set of objects that want to receive accessory delegate callbacks.\n    var accessoryDelegates = Set<NSObject>()\n}\n\n\nYou create an accessory list collection view controller to present the list of connected accessories. Because this root view controller never gets deallocated, it can safely assign itself as the HMHomeManagerDelegate protocol delegate:\n\nHomeStore.shared.homeManager.delegate = self\n\n\nThe manager tells its delegate when the list of homes changes, including the first time the home manager loads data from the HomeKit database during initialization. When this happens, the accessory list reloads to show the accessories in the primary home, or prompts the user to create a new home if none exists.\n\nYou can extend the app to allow the user to select among all known homes instead of always choosing the primary home. You can also allow users to add, remove, or rename homes, although the user performs these tasks infrequently, and typically relies on the Home app to do so.\n\nAdd New Accessories\n\nThe first time you run the app, the accessory list is empty, because you haven’t associated any accessories from Kilgo Devices. The app’s UI presents a + button in the navigation bar that you tap to initiate a search for accessories on the local network. The button’s tap handler calls the home’s addAndSetupAccessories(completionHandler:) method.\n\nhome?.addAndSetupAccessories(completionHandler: { error in\n    if let error = error {\n        print(error)\n    } else {\n        // Make no assumption about changes; just reload everything.\n        self.reloadData()\n    }\n})\n\n\nThis presents the standard HomeKit UI for locating and adding new accessories to a given home. On success, the completion handler refreshes the app’s copy of the HomeKit data and redraws the display.\n\nWhen your app enters the standard accessory association flow, which is the same one that the Home app uses, the user follows these steps:\n\nScan or enter the new device’s HomeKit setup code. This code comes packaged with the device, or is available in the HAS display for the accessory.\n\nSelect from a list of devices on the network that don’t already have an existing HomeKit association. This includes both real and simulated devices that can access the local area network.\n\nWait for HomeKit to verify that the setup code entered in step 1 matches the device’s code.\n\nAssign a name and room to each service associated with the device. HomeKit provides a default name and room for each service, one page per service, that the user can accept or change.\n\nEach item that the user names in step 4 appears in the Home app as an “accessory”. However, in HomeKit, these are HMService instances. They are owned by an HMAccessory instance that represents the physical device that you selected in step 2. To maintain a user experience consistent with the Home app, the sample app UI (and the rest of this article) also refers to each HMService instance as an accessory.\n\nShow Only Accessories Relevant to Your App\n\nYou draw the display based on a copy of data from HomeKit captured into an array of Kilgo services:\n\nvar kilgoServices = [HMService]()    // These are called \"accessories\" in the UI.\n\n\nWhen the accessory list reloads, either because a new home is set or because the accessory-add flow completes, you populate the above array, filtering out HMAccessory instances from manufacturers other than Kilgo, and HMService instances that aren’t user interactive. Also while gathering the list, you request notifications for changes on any of the corresponding characteristics, which are the individual points of status and control for a given service:\n\nfor accessory in home.accessories.filter({ $0.manufacturer == \"Kilgo Devices, Inc.\" }) {\n    accessory.delegate = HomeStore.shared\n    \n    for service in accessory.services.filter({ $0.isUserInteractive }) {\n        kilgoServices.append(service)\n        \n        // Ask for notifications from any characteristics that support them.\n        for characteristic in service.characteristics.filter({\n            $0.properties.contains(HMCharacteristicPropertySupportsEventNotification)\n        }) {\n            characteristic.enableNotification(true) { _ in }\n        }\n    }\n}\n\n\nAs a result, the display shows only the accessories relevant to this particular app.\n\nNote\n\nUse care when crafting your filters. For example, the name “Kilgo Devices, Inc.” might not be unique among all past and future manufacturers, and therefore might not serve as a sufficient predicate in a real app.\n\nTailor Common Interactions to Specific Accessories\n\nAccessories (like light bulbs) have characteristics (like power state, color temperature, brightness, and so on) that users control or observe. Users typically care about one of these characteristics above the others, because they change or read that characteristic most often. This is the primary characteristic, and you should give users quick access to it. For a light bulb, users most often want to switch it on or off, so the power state is the primary characteristic.\n\nIt’s up to you to define what the primary charactersitc is for the accessories you control. You can do that by creating a computed property on HMService in an extension that returns the type of primary characteristic:\n\nvar primaryControlCharacteristicType: String? {\n    switch kilgoServiceType {\n    case .lightBulb: return HMCharacteristicTypePowerState\n    case .garageDoor: return HMCharacteristicTypeTargetDoorState\n    case .unknown: return nil\n    }\n}\n\n\nThen use this primary characteristic type to locate and return the characteristic that has that type:\n\nvar primaryControlCharacteristic: HMCharacteristic? {\n    return characteristics.first { $0.characteristicType == primaryControlCharacteristicType }\n}\n\n\nFor Kilgo Devices, both the light bulb and garage door have binary primary state. The bulb is on or off. The target state of the door is open or closed. This lends itself to an interface where a toggle switch is sufficient to control all primary characteristics. You can implement this as the tap handler on each item in the accessory list collection view. When the user taps the accessory, you read the current characteristic value and then write the opposite:\n\nfunc tap() {\n    if let characteristic = service?.primaryControlCharacteristic,\n        let value = characteristic.value as? Bool {\n\n\n        // Provide visual feedback that the item was tapped.\n        bounce()\n        \n        // Write the new value to HomeKit.\n        characteristic.writeValue(!value) { error in\n            self.redrawState(error: error)\n        }\n    }\n}\n\n\nThe write involves network access, so HomeKit calls a completion handler when the write completes. Use this opportunity to update the state of the interface, as shown in the snippet above.\n\nEnable Custom Configuration\n\nWhen the user taps an accessory’s information button, the app reveals details about the accessory. From the detail view, the user can rename the accessory, assign it to a room, remove it from the home, and see device information, like the firmware version. The user can also tap Settings to reveal a list of secondary characteristics for that accessory.\n\nControl the user experience by presenting only relevant characteristic types. The KilgoService extension of HMService defines a computed property that limits the list of displayable characteristics to those in a curated list:\n\nvar displayableCharacteristics: [HMCharacteristic] {\n    let characteristicTypes = [HMCharacteristicTypePowerState,\n                               HMCharacteristicTypeBrightness,\n                               HMCharacteristicTypeHue,\n                               HMCharacteristicTypeSaturation,\n                               HMCharacteristicTypeTargetDoorState,\n                               HMCharacteristicTypeCurrentDoorState,\n                               HMCharacteristicTypeObstructionDetected,\n                               HMCharacteristicTypeTargetLockMechanismState,\n                               HMCharacteristicTypeCurrentLockMechanismState,\n                               KilgoCharacteristicTypes.fadeRate.rawValue]\n    \n    return characteristics.filter { characteristicTypes.contains($0.characteristicType) }\n}\n\n\nThese are mostly HomeKit standard types, all of which are applicable to Kilgo devices. There’s also one custom type—fade rate—defined earlier in the same extension:\n\nenum KilgoCharacteristicTypes: String {\n    case fadeRate = \"7E536242-341C-4862-BE90-272CE15BD633\"\n}\n\n\nCharacteristic types are stored as UUID strings. The value specified in the code for fade rate matches the value found in the accessory simulator, which you can inspect in HAS. If you also build a real Kilgo device, the value used there would have to match as well.\n\nSee Also\nHome Manager\nTesting your app with the HomeKit Accessory Simulator\nInstall the HomeKit Accessory Simulator to help you debug your HomeKit-enabled app.\nclass HMHomeManager\nThe manager for a collection of one or more of a user’s homes."
  },
  {
    "title": "Enabling HomeKit in your app | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/enabling_homekit_in_your_app",
    "html": "Overview\n\nTo access the devices in the user’s home automation network, you enable the HomeKit capability for your app. You also provide a usage description that explains to the user why the app needs access, and handle the case where the user denies access.\n\nEnable the HomeKit capability\n\nTo ready your app to work with HomeKit, enable the HomeKit capability for your app in Xcode. Open your project, select the app target, and choose the Signing & Capabilities pane. Then click the + button. In the window that appears, choose HomeKit.\n\nWhen you enable the HomeKit capability, Xcode automatically adds the HomeKit Entitlement to your entitlements file. It also adds the corresponding feature to your App ID and links the HomeKit framework.\n\nImportant\n\nHomeKit supports independent Apple Watch apps in watchOS 7 and later.\n\nExplain why your app needs access to the user’s home network\n\nA user’s home automation network is a sensitive resource. Apps with access can collect sensor data and change the state of physical objects in the real world. To protect users, the first time your app uses the HomeKit framework—typically, when you create a HMHomeManager instance—the system prompts the user for permission.\n\nYou provide a message for this prompt called a purpose string or a usage description by setting a string value for the NSHomeKitUsageDescription that you add to your app’s Information Property List file. Find and select your project’s Info.plist file in Xcode’s project navigator. Modify the file using the property list editor built into Xcode:\n\nThe system automatically generates the prompt’s title, which includes the name of your app. Your usage description—in this case, “Configure accessories from Kilgo Devices, Inc.”—indicates the reason that your app needs the access.\n\nAccurately and concisely explaining to the user why your app needs access to the home network, typically in one complete sentence, lets the user make an informed decision and improves the chances that they’ll grant access.\n\nImportant\n\nIf you don’t include a purpose string, your app crashes when you first try to use HomeKit.\n\nHandle permission denial gracefully\n\nIf the user grants permission, the system remembers the user’s choice and doesn’t prompt again. If the user denies permission, the access attempt that initiated the prompt and any further attempts fail. Look for a homeAccessNotAuthorized error in your completion handlers to detect this condition. Alternatively, you can inspect the home manager’s authorizationStatus property.\n\nBe aware that even if the user allows the initial access, they can revoke permission at any time in the Settings app. Your app should handle both initial and subsequent access denials gracefully.\n\nIf home automation is a secondary function of your app—like an alarm app that plays an audible alert on the device and can also turn the house lights on when the alarm triggers—respect the user’s choice and work around denied access. For example, you can omit unavailable features from the user interface.\n\nIf your app can’t provide meaningful functionality without HomeKit access, you can display a message to the user saying so, directing them to change the privacy setting for your app to continue.\n\nSee Also\nEssentials\nHomeKit Entitlement\nA Boolean value that indicates whether users of the app may manage HomeKit-compatible accessories.\nKey: com.apple.developer.homekit\nproperty list key NSHomeKitUsageDescription\nA message that tells the user why the app is requesting access to the user’s HomeKit configuration data.\nName: Privacy - HomeKit Usage Description"
  },
  {
    "title": "HMAccessorySetupManager | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/homekit/hmaccessorysetupmanager",
    "html": "Overview\n\nUse this class to provides steps for the user to add one or more accessories to a particular home, and follow up with additional setup. These APIs don’t require that the current app has home data authorization.\n\nTopics\nAdding accessories\nfunc performAccessorySetup(using: HMAccessorySetupRequest, completionHandler: (HMAccessorySetupResult?, Error?) -> Void)\nPerforms the process of setting up accessories with Apple Home.\nRelationships\nInherits From\nNSObject\nConforms To\nSendable\nSee Also\nAccessories\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature."
  },
  {
    "title": "HomeKit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/Homekit",
    "html": "Overview\n\nHomeKit enables your app to coordinate and control home automation accessories from multiple vendors to present a coherent, user-focused interface.\n\nUsing HomeKit, your app can:\n\nDiscover HomeKit-compatible automation accessories and add them to a persistent, cross-device home configuration database.\n\nDisplay, edit, and act upon the data in the home configuration database.\n\nCommunicate with configured accessories and services in order to perform actions like turning on the lights in the living room.\n\nTopics\nEssentials\nEnabling HomeKit in your app\nDeclare your app’s intention to use HomeKit, and get permission from the user to access home automation accessories.\nHomeKit Entitlement\nA Boolean value that indicates whether users of the app may manage HomeKit-compatible accessories.\nKey: com.apple.developer.homekit\nproperty list key NSHomeKitUsageDescription\nA message that tells the user why the app is requesting access to the user’s HomeKit configuration data.\nName: Privacy - HomeKit Usage Description\nHome Manager\nConfiguring a Home Automation Device\nGive users a familiar experience when they manage HomeKit accessories.\nTesting your app with the HomeKit Accessory Simulator\nInstall the HomeKit Accessory Simulator to help you debug your HomeKit-enabled app.\nclass HMHomeManager\nThe manager for a collection of one or more of a user’s homes.\nAccessories\nclass HMAccessorySetupManager\nAn object that setups up new accessories.\nclass HMAccessorySetupResult\nA result object describing information about a successful accessory setup request.\nclass HMAccessorySetupRequest\nAn object that describes how to add and setup up new accessories.\nInteracting with a Home Automation Network\nFind all the automation accessories in the primary home and control their state.\nclass HMAccessory\nA home automation accessory, like a garage door opener or a thermostat.\nclass HMService\nA controllable feature of an accessory, like a light attached to a garage door opener.\nclass HMCharacteristic\nA specific characteristic of a service, like the brightness of a dimmable light or its color temperature.\nAction Sets\nclass HMActionSet\nA collection of actions that you trigger as a group.\nclass HMTimerTrigger\nA trigger to activate an action set based on a periodic timer.\nclass HMEventTrigger\nA trigger to activate an action set based on a set of events and optional conditions.\nErrors\nstruct HMError\nAn error HomeKit returns.\ntypealias HMErrorBlock\nA completion block that provides an error."
  }
]
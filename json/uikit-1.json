[
  {
    "title": "registrationWithSupplementaryNib:elementKind:configurationHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600453-registrationwithsupplementarynib",
    "html": "See Also\nCreating a supplementary registration\n+ registrationWithSupplementaryClass:elementKind:configurationHandler:\nCreates a supplementary registration for the specified element kind with a registration handler.\nUICollectionViewSupplementaryRegistrationConfigurationHandler\nA block that handles the supplementary view registration and configuration."
  },
  {
    "title": "indexPathForItemAtPoint: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618030-indexpathforitematpoint",
    "html": "Parameters\npoint\n\nA point in the collection view’s coordinate system.\n\nReturn Value\n\nThe index path of the item at the specified point or nil if no item was found at the specified point.\n\nDiscussion\n\nThis method relies on the layout information provided by the associated layout object to determine which item contains the point.\n\nSee Also\nLocating items and views in the collection view\nindexPathsForVisibleItems\nAn array of the visible items in the collection view.\n- indexPathForCell:\nGets the index path of the specified cell.\n- cellForItemAtIndexPath:\nGets the cell object at the index path you specify.\n- indexPathsForVisibleSupplementaryElementsOfKind:\nGets the index paths of all visible supplementary views of the specified type.\n- supplementaryViewForElementKind:atIndexPath:\nGets the supplementary view at the specified index path.\n- visibleSupplementaryViewsOfKind:\nGets an array of the visible supplementary views of the specified kind."
  },
  {
    "title": "UICollectionViewSupplementaryRegistrationConfigurationHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistrationconfigurationhandler",
    "html": "See Also\nCreating a supplementary registration\n+ registrationWithSupplementaryClass:elementKind:configurationHandler:\nCreates a supplementary registration for the specified element kind with a registration handler.\n+ registrationWithSupplementaryNib:elementKind:configurationHandler:\nCreates a supplementary registration for the specified element kind with a registration handler and nib file."
  },
  {
    "title": "indexPathForCell: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618094-indexpathforcell",
    "html": "Parameters\ncell\n\nThe cell object whose index path you want.\n\nReturn Value\n\nThe index path of the cell or nil if the specified cell is not in the collection view.\n\nSee Also\nLocating items and views in the collection view\n- indexPathForItemAtPoint:\nGets the index path of the item at the specified point in the collection view.\nindexPathsForVisibleItems\nAn array of the visible items in the collection view.\n- cellForItemAtIndexPath:\nGets the cell object at the index path you specify.\n- indexPathsForVisibleSupplementaryElementsOfKind:\nGets the index paths of all visible supplementary views of the specified type.\n- supplementaryViewForElementKind:atIndexPath:\nGets the supplementary view at the specified index path.\n- visibleSupplementaryViewsOfKind:\nGets an array of the visible supplementary views of the specified kind."
  },
  {
    "title": "UICollectionViewSelfSizingInvalidationEnabledIncludingConstraints | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewselfsizinginvalidation/uicollectionviewselfsizinginvalidationenabledincludingconstraints",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize on a self-sizing cell or its contentView causes the cell to resize if necessary. Additionally, any Auto Layout change within the contentView of a self-sizing cell automatically calls invalidateIntrinsicContentSize."
  },
  {
    "title": "registrationWithSupplementaryClass:elementKind:configurationHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600452-registrationwithsupplementarycla",
    "html": "See Also\nCreating a supplementary registration\n+ registrationWithSupplementaryNib:elementKind:configurationHandler:\nCreates a supplementary registration for the specified element kind with a registration handler and nib file.\nUICollectionViewSupplementaryRegistrationConfigurationHandler\nA block that handles the supplementary view registration and configuration."
  },
  {
    "title": "UICollectionViewSelfSizingInvalidationDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewselfsizinginvalidation/uicollectionviewselfsizinginvalidationdisabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, no sizing updates occur after calling invalidateIntrinsicContentSize on a self-sizing cell or its contentView."
  },
  {
    "title": "supplementaryNib | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600455-supplementarynib",
    "html": "See Also\nQuerying a supplementary registration\nconfigurationHandler\nThe block that handles the supplementary view registration and configuration.\nelementKind\nThe supplementary view’s element kind.\nsupplementaryClass\nThe class associated with the supplementary view."
  },
  {
    "title": "supplementaryViewForElementKind:atIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618041-supplementaryviewforelementkind",
    "html": "Parameters\nelementKind\n\nThe kind of supplementary view to locate. This value is defined by the layout object. This parameter must not be nil.\n\nindexPath\n\nThe index path of the supplementary view. This parameter must not be nil.\n\nReturn Value\n\nThe specified supplementary view, or nil if the view could not be found.\n\nSee Also\nLocating items and views in the collection view\n- indexPathForItemAtPoint:\nGets the index path of the item at the specified point in the collection view.\nindexPathsForVisibleItems\nAn array of the visible items in the collection view.\n- indexPathForCell:\nGets the index path of the specified cell.\n- cellForItemAtIndexPath:\nGets the cell object at the index path you specify.\n- indexPathsForVisibleSupplementaryElementsOfKind:\nGets the index paths of all visible supplementary views of the specified type.\n- visibleSupplementaryViewsOfKind:\nGets an array of the visible supplementary views of the specified kind."
  },
  {
    "title": "numberOfItemsInSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618016-numberofitemsinsection",
    "html": "Parameters\nsection\n\nThe index of the section for which you want a count of the items.\n\nReturn Value\n\nThe number of items in the specified section.\n\nSee Also\nGetting the state of the collection view\nnumberOfSections\nThe number of sections displayed by the collection view.\nvisibleCells\nAn array of visible cells currently displayed by the collection view."
  },
  {
    "title": "insertItemsAtIndexPaths: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618097-insertitemsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects, each of which contains a section index and item index at which to insert a new cell. This parameter must not be nil.\n\nDiscussion\n\nCall this method to insert one or more new items into the collection view. You might do this when your data source object receives data for new items or in response to user interactions with the collection view. The collection view gets the layout information for the new cells as part of calling this method. And if the layout information indicates that the cells should appear onscreen, the collection view asks your data source to provide the appropriate views, animating them into position as needed.\n\nYou can also call this method from a block passed to the performBatchUpdates:completion: method when you want to animate multiple separate changes into place at the same time. See the description of that method for more information.\n\nSee Also\nInserting, moving, and deleting Items\n- moveItemAtIndexPath:toIndexPath:\nMoves an item from one location to another in the collection view.\n- deleteItemsAtIndexPaths:\nDeletes the items at the specified index paths."
  },
  {
    "title": "UICollectionViewSelfSizingInvalidationEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewselfsizinginvalidation/uicollectionviewselfsizinginvalidationenabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize on a self-sizing cell or its contentView causes the cell to resize if necessary."
  },
  {
    "title": "configurationHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600450-configurationhandler",
    "html": "See Also\nQuerying a supplementary registration\nelementKind\nThe supplementary view’s element kind.\nsupplementaryClass\nThe class associated with the supplementary view.\nsupplementaryNib\nThe nib file associated with the supplementary view."
  },
  {
    "title": "elementKind | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600451-elementkind",
    "html": "See Also\nQuerying a supplementary registration\nconfigurationHandler\nThe block that handles the supplementary view registration and configuration.\nsupplementaryClass\nThe class associated with the supplementary view.\nsupplementaryNib\nThe nib file associated with the supplementary view."
  },
  {
    "title": "beginInteractiveMovementForItemAtIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618019-begininteractivemovementforitema",
    "html": "Parameters\nindexPath\n\nThe index path of the item you want to move.\n\nReturn Value\n\nYES if it is possible to move the item or NO if the item is not allowed to move.\n\nDiscussion\n\nCall this method when you want to begin the interactive movement of an item from its current location to a new location within the same collection view. When using a gesture recognizer to track movements of the item, call this method from your handler method when the gesture recognition process begins. When interactions with the item end, you must call either the endInteractiveMovement or cancelInteractiveMovement method to inform the collection view of that fact.\n\nWhen you call this method, the collection view consults its delegate to make sure the item can be moved. If the data source does not support the movement of the item, this method returns NO.\n\nSee Also\nReordering items interactively\n- updateInteractiveMovementTargetPosition:\nUpdates the position of the item within the collection view’s bounds.\n- endInteractiveMovement\nEnds interactive movement tracking and moves the target item to its new location.\n- cancelInteractiveMovement\nEnds interactive movement tracking and returns the target item to its original location."
  },
  {
    "title": "supplementaryClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration/3600454-supplementaryclass",
    "html": "See Also\nQuerying a supplementary registration\nconfigurationHandler\nThe block that handles the supplementary view registration and configuration.\nelementKind\nThe supplementary view’s element kind.\nsupplementaryNib\nThe nib file associated with the supplementary view."
  },
  {
    "title": "selectItemAtIndexPath:animated:scrollPosition: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618057-selectitematindexpath",
    "html": "Parameters\nindexPath\n\nThe index path of the item to select. Specifying nil for this parameter clears the current selection.\n\nanimated\n\nSpecify YES to animate the change in the selection or NO to make the change without animating it.\n\nscrollPosition\n\nAn option that specifies where the item should be positioned when scrolling finishes. For a list of possible values, see UICollectionViewScrollPosition.\n\nDiscussion\n\nIf the allowsSelection property is NO, calling this method has no effect. If there’s an existing selection with a different index path and the allowsMultipleSelection property is NO, calling this method replaces the previous selection.\n\nThis method doesn’t cause any selection-related delegate methods to be called.\n\nSee Also\nSelecting cells\nindexPathsForSelectedItems\nThe index paths for the selected items.\n- deselectItemAtIndexPath:animated:\nDeselects the item at the specified index.\nallowsSelection\nA Boolean value that indicates whether users can select items in the collection view.\nallowsMultipleSelection\nA Boolean value that determines whether users can select more than one item in the collection view.\nallowsSelectionDuringEditing\nA Boolean value that determines whether users can select cells while the collection view is in editing mode.\nallowsMultipleSelectionDuringEditing\nA Boolean value that controls whether users can select more than one cell simultaneously in editing mode.\nselectionFollowsFocus\nA Boolean value that triggers an automatic selection when focus moves to a cell."
  },
  {
    "title": "deselectItemAtIndexPath:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618040-deselectitematindexpath",
    "html": "Parameters\nindexPath\n\nThe index path of the item to select. Specifying nil results in no change to the current selection.\n\nanimated\n\nSpecify YES to animate the change in the selection or NO to make the change without animating it.\n\nDiscussion\n\nIf the allowsSelection property is NO, calling this method has no effect.\n\nThis method doesn’t cause any selection-related delegate methods to be called.\n\nSee Also\nSelecting cells\nindexPathsForSelectedItems\nThe index paths for the selected items.\n- selectItemAtIndexPath:animated:scrollPosition:\nSelects the item at the specified index path and optionally scrolls it into view.\nallowsSelection\nA Boolean value that indicates whether users can select items in the collection view.\nallowsMultipleSelection\nA Boolean value that determines whether users can select more than one item in the collection view.\nallowsSelectionDuringEditing\nA Boolean value that determines whether users can select cells while the collection view is in editing mode.\nallowsMultipleSelectionDuringEditing\nA Boolean value that controls whether users can select more than one cell simultaneously in editing mode.\nselectionFollowsFocus\nA Boolean value that triggers an automatic selection when focus moves to a cell."
  },
  {
    "title": "moveItemAtIndexPath:toIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618059-moveitematindexpath",
    "html": "Parameters\nindexPath\n\nThe index path of the item you want to move. This parameter must not be nil.\n\nnewIndexPath\n\nThe index path of the item’s new location. This parameter must not be nil.\n\nDiscussion\n\nUse this method to reorganize existing data items. You might do this when you rearrange the items within your data source object or in response to user interactions with the collection view. You can move items between sections or within the same section. The collection view updates the layout as needed to account for the move, animating cells into position as needed.\n\nYou can also call this method from a block passed to the performBatchUpdates:completion: method when you want to animate multiple separate changes into place at the same time. See the description of that method for more information.\n\nSee Also\nInserting, moving, and deleting Items\n- insertItemsAtIndexPaths:\nInserts new items at the specified index paths.\n- deleteItemsAtIndexPaths:\nDeletes the items at the specified index paths."
  },
  {
    "title": "UICollectionView.ReorderingCadence | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/reorderingcadence",
    "html": "Topics\nConstants\ncase immediate\nItems are reordered into place immediately.\ncase fast\nItems are reordered quickly, but with a short delay.\ncase slow\nItems are reordered after a delay.\nRelationships\nConforms To\nSendable\nSee Also\nManaging drop interactions\nvar dropDelegate: UICollectionViewDropDelegate?\nThe delegate object that manages the dropping of items into the collection view.\nprotocol UICollectionViewDropDelegate\nThe interface for handling drops in a collection view.\nvar hasActiveDrop: Bool\nA Boolean value that indicates whether the collection view is currently tracking a drop session.\nvar reorderingCadence: UICollectionView.ReorderingCadence\nThe speed at which items in the collection view are reordered to show potential drop locations."
  },
  {
    "title": "registerClass:forSupplementaryViewOfKind:withReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618103-registerclass",
    "html": "Parameters\nviewClass\n\nThe class to use for the supplementary view.\n\nelementKind\n\nThe kind of supplementary view to create. This value is defined by the layout object. This parameter must not be nil.\n\nidentifier\n\nThe reuse identifier to associate with the specified class. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nPrior to calling the dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath: method of the collection view, you must use this method or the registerNib:forSupplementaryViewOfKind:withReuseIdentifier: method to tell the collection view how to create a supplementary view of the given type. If a view of the specified type isn’t currently in a reuse queue, the collection view uses the provided information to create a view object automatically.\n\nIf you previously registered a class or nib file with the same element kind and reuse identifier, the class you specify in the viewClass parameter replaces the old entry. You may specify nil for viewClass if you want to unregister the class from the specified element kind and reuse identifier.\n\nSee Also\nCreating headers and footers\nUICollectionViewSupplementaryRegistration\nA registration for the collection view’s supplementary views.\n- dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:\nDequeues a configured reusable supplementary view object.\n- registerNib:forSupplementaryViewOfKind:withReuseIdentifier:\nRegisters a nib file for use in creating supplementary views for the collection view.\n- dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:\nDequeues a reusable supplementary view located by its identifier and kind."
  },
  {
    "title": "visibleSupplementaryViewsOfKind: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618026-visiblesupplementaryviewsofkind",
    "html": "Parameters\nelementKind\n\nThe kind of supplementary view to locate. This value is defined by the layout object. This parameter must not be nil.\n\nReturn Value\n\nAn array of the visible supplementary views. If no supplementary views are visible, the returned array is empty.\n\nSee Also\nLocating items and views in the collection view\n- indexPathForItemAtPoint:\nGets the index path of the item at the specified point in the collection view.\nindexPathsForVisibleItems\nAn array of the visible items in the collection view.\n- indexPathForCell:\nGets the index path of the specified cell.\n- cellForItemAtIndexPath:\nGets the cell object at the index path you specify.\n- indexPathsForVisibleSupplementaryElementsOfKind:\nGets the index paths of all visible supplementary views of the specified type.\n- supplementaryViewForElementKind:atIndexPath:\nGets the supplementary view at the specified index path."
  },
  {
    "title": "layoutAttributesForItemAtIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618093-layoutattributesforitematindexpa",
    "html": "Parameters\nindexPath\n\nThe index path of the item.\n\nReturn Value\n\nThe layout attributes for the item or nil if no item exists at the specified path.\n\nDiscussion\n\nUse this method to retrieve the layout information for a particular item. You should always use this method instead of querying the layout object directly.\n\nSee Also\nGetting layout information\n- layoutAttributesForSupplementaryElementOfKind:atIndexPath:\nGets the layout information for the specified supplementary view."
  },
  {
    "title": "startInteractiveTransitionToCollectionViewLayout:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618098-startinteractivetransitiontocoll",
    "html": "Parameters\nlayout\n\nThe new layout object for the collected views. This is the layout that you want the collection view to use after the interactive transition is done.\n\ncompletion\n\nA completion handler to execute after the transition finishes.\n\nReturn Value\n\nThe intermediate transition layout object responsible for managing the interactive transition behavior.\n\nDiscussion\n\nCall this method when you want to change the layout of your collection view using an intermediate transition. When you call this method, the collection view quietly makes the returned transition layout object its current layout object. It is your responsibility to set up a gesture recognizer or other touch-event handling code to track the transition progress. As progress changes, update the transitionProgress property of the transition layout object and invalidate the layout. Invalidating its layout causes the transition layout object to update the position of items based on the new progress value.\n\nWhen your event-handling code determines that the user has finished the transition to the new layout, call the finishInteractiveTransition method. If your code determines that the user has canceled the transition, call the cancelInteractiveTransition method to revert the changes instead. Calling either of these methods removes the transition layout object from the collection view and installs the appropriate target layout object.\n\nThis method returns an instance of the UICollectionViewTransitionLayout class by default. If you want it to return a custom transition object instead, implement the collectionView:transitionLayoutForOldLayout:newLayout: method of your collection view delegate and use that method to return your custom object.\n\nSee Also\nChanging the layout\ncollectionViewLayout\nThe layout used to organize the collected view’s items.\n- setCollectionViewLayout:animated:\nChanges the collection view’s layout and optionally animates the change.\n- setCollectionViewLayout:animated:completion:\nChanges the collection view’s layout and notifies you when the animations complete.\n- finishInteractiveTransition\nTells the collection view to finish an interactive transition by installing the intended target layout.\n- cancelInteractiveTransition\nTells the collection view to cancel an interactive transition and return to its original layout object.\nUICollectionViewLayoutInteractiveTransitionCompletion\nThe completion block called at the end of an interactive transition for a collection view."
  },
  {
    "title": "cellForItemAtIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618088-cellforitematindexpath",
    "html": "Parameters\nindexPath\n\nThe index path that specifies the section and item number of the cell.\n\nReturn Value\n\nThe cell object at the corresponding index path. In versions of iOS earlier than iOS 15, this method returns nil if the cell isn't visible or if indexPath is out of range. In iOS 15 and later, this method returns a non-nil cell if the collection view retains a prepared cell at the specified index path, even if the cell isn't currently visible.\n\nDiscussion\n\nIn iOS 15 and later, the collection view retains a prepared cell in the following situations:\n\nCells that the collection view prefetches and retains in its cache of prepared cells, but that aren’t visible because the collection view hasn’t displayed them yet.\n\nCells that the collection view finishes displaying and continues to retain in its cache of prepared cells because they remain near the visible region and might scroll back into view.\n\nThe cell that contains the first responder.\n\nThe cell that has focus.\n\nSee Also\nLocating items and views in the collection view\n- indexPathForItemAtPoint:\nGets the index path of the item at the specified point in the collection view.\nindexPathsForVisibleItems\nAn array of the visible items in the collection view.\n- indexPathForCell:\nGets the index path of the specified cell.\n- indexPathsForVisibleSupplementaryElementsOfKind:\nGets the index paths of all visible supplementary views of the specified type.\n- supplementaryViewForElementKind:atIndexPath:\nGets the supplementary view at the specified index path.\n- visibleSupplementaryViewsOfKind:\nGets an array of the visible supplementary views of the specified kind."
  },
  {
    "title": "UICollectionView.LayoutInteractiveTransitionCompletion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/layoutinteractivetransitioncompletion",
    "html": "Discussion\n\nThis completion block takes the following parameters:\n\ncompleted\n\nA Boolean indicating whether the animations ran to completion.\n\nfinish\n\nA Boolean indicating whether the transition finished or was canceled. This parameter is true if the transition ran to completion and the new layout is installed. It is false if the user canceled the transition and the old layout is installed.\n\nSee Also\nChanging the layout\nvar collectionViewLayout: UICollectionViewLayout\nThe layout used to organize the collected view’s items.\nfunc setCollectionViewLayout(UICollectionViewLayout, animated: Bool)\nChanges the collection view’s layout and optionally animates the change.\nfunc setCollectionViewLayout(UICollectionViewLayout, animated: Bool, completion: ((Bool) -> Void)?)\nChanges the collection view’s layout and notifies you when the animations complete.\nfunc startInteractiveTransition(to: UICollectionViewLayout, completion: UICollectionView.LayoutInteractiveTransitionCompletion?) -> UICollectionViewTransitionLayout\nChanges the collection view’s current layout using an interactive transition effect.\nfunc finishInteractiveTransition()\nTells the collection view to finish an interactive transition by installing the intended target layout.\nfunc cancelInteractiveTransition()\nTells the collection view to cancel an interactive transition and return to its original layout object."
  },
  {
    "title": "UICollectionViewSelfSizingInvalidation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewselfsizinginvalidation",
    "html": "Overview\n\nUse these constants with the selfSizingInvalidation property.\n\nTopics\nConstants\nUICollectionViewSelfSizingInvalidationDisabled\nA mode that disables self-sizing invalidation.\nUICollectionViewSelfSizingInvalidationEnabled\nA mode that enables manual self-sizing invalidation.\nUICollectionViewSelfSizingInvalidationEnabledIncludingConstraints\nA mode that enables automatic self-sizing invalidation after Auto Layout changes.\nSee Also\nResizing self-sizing cells\nselfSizingInvalidation\nThe mode that the collection view uses for invalidating the size of self-sizing cells."
  },
  {
    "title": "UICollectionViewCellRegistrationConfigurationHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistrationconfigurationhandler",
    "html": "See Also\nCreating a cell registration\n+ registrationWithCellClass:configurationHandler:\nCreates a cell registration with the specified registration handler.\n+ registrationWithCellNib:configurationHandler:\nCreates a cell registration with the specified registration handler and nib file."
  },
  {
    "title": "registerNib:forSupplementaryViewOfKind:withReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618101-registernib",
    "html": "Parameters\nnib\n\nThe nib object containing the view object. The nib file must contain only one top-level object and that object must be of the type UICollectionReusableView.\n\nkind\n\nThe kind of supplementary view to create. The layout defines the types of supplementary views it supports. The value of this string may correspond to one of the predefined kind strings or to a custom string that the layout added to support a new type of supplementary view. This parameter must not be nil.\n\nidentifier\n\nThe reuse identifier to associate with the specified nib file. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nPrior to calling the dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath: method of the collection view, you must use this method or the registerClass:forSupplementaryViewOfKind:withReuseIdentifier: method to tell the collection view how to create a supplementary view of the given type. If a view of the specified type isn’t currently in a reuse queue, the collection view uses the provided information to create a view object automatically.\n\nIf you previously registered a class or nib file with the same element kind and reuse identifier, the class you specify in the viewClass parameter replaces the old entry. You may specify nil for nib if you want to unregister the class from the specified element kind and reuse identifier.\n\nSee Also\nCreating headers and footers\nUICollectionViewSupplementaryRegistration\nA registration for the collection view’s supplementary views.\n- dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:\nDequeues a configured reusable supplementary view object.\n- registerClass:forSupplementaryViewOfKind:withReuseIdentifier:\nRegisters a class for use in creating supplementary views for the collection view.\n- dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:\nDequeues a reusable supplementary view located by its identifier and kind."
  },
  {
    "title": "UICollectionViewSupplementaryRegistration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewsupplementaryregistration",
    "html": "Overview\n\nUse a supplementary registration to register supplementary views, like headers and footers, with your collection view and configure each view for display. You create a supplementary registration with your supplementary view type and data item type as the registration’s generic parameters, passing in a registration handler to configure the view. In the registration handler, you specify how to configure the content and appearance of that type of supplementary view.\n\nThe following example creates a supplementary registration for a custom header view subclass.\n\nUICollectionViewSupplementaryRegistration *headerRegistration = [UICollectionViewSupplementaryRegistration registrationWithSupplementaryClass:[HeaderView class] elementKind:@\"Header\" configurationHandler:^(HeaderView *supplementaryView, NSString *elementKind, NSIndexPath *indexPath) {\n    supplementaryView.label.text = [NSString stringWithFormat:@\"%@ for section %ld\", elementKind, (long)indexPath.section];\n    supplementaryView.backgroundColor = UIColor.lightGrayColor;\n}];\n\n\nAfter you create a supplementary registration, you pass it in to dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:, which you call from your data source’s supplementaryViewProvider.\n\nself.dataSource.supplementaryViewProvider = ^UICollectionReusableView *(UICollectionView *collectionView, NSString *elementKind, NSIndexPath *indexPath) {\n    return [collectionView dequeueConfiguredReusableSupplementaryViewWithRegistration:headerRegistration forIndexPath:indexPath];\n};\n\n\nYou don’t need to call registerClass:forSupplementaryViewOfKind:withReuseIdentifier: or registerNib:forSupplementaryViewOfKind:withReuseIdentifier:. The registration occurs automatically when you pass the supplementary view registration to dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:.\n\nImportant\n\nDon’t create your supplementary view registration inside a UICollectionViewDiffableDataSourceSupplementaryViewProvider closure; doing so prevents reuse, and generates an exception in iOS 15 and higher.\n\nTopics\nCreating a supplementary registration\n+ registrationWithSupplementaryClass:elementKind:configurationHandler:\nCreates a supplementary registration for the specified element kind with a registration handler.\n+ registrationWithSupplementaryNib:elementKind:configurationHandler:\nCreates a supplementary registration for the specified element kind with a registration handler and nib file.\nUICollectionViewSupplementaryRegistrationConfigurationHandler\nA block that handles the supplementary view registration and configuration.\nQuerying a supplementary registration\nconfigurationHandler\nThe block that handles the supplementary view registration and configuration.\nelementKind\nThe supplementary view’s element kind.\nsupplementaryClass\nThe class associated with the supplementary view.\nsupplementaryNib\nThe nib file associated with the supplementary view.\nRelationships\nInherits From\nNSObject\nSee Also\nCreating headers and footers\n- dequeueConfiguredReusableSupplementaryViewWithRegistration:forIndexPath:\nDequeues a configured reusable supplementary view object.\n- registerClass:forSupplementaryViewOfKind:withReuseIdentifier:\nRegisters a class for use in creating supplementary views for the collection view.\n- registerNib:forSupplementaryViewOfKind:withReuseIdentifier:\nRegisters a nib file for use in creating supplementary views for the collection view.\n- dequeueReusableSupplementaryViewOfKind:withReuseIdentifier:forIndexPath:\nDequeues a reusable supplementary view located by its identifier and kind."
  },
  {
    "title": "dequeueReusableCellWithReuseIdentifier:forIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618063-dequeuereusablecellwithreuseiden",
    "html": "Parameters\nidentifier\n\nThe reuse identifier for the specified cell. This parameter must not be nil.\n\nindexPath\n\nThe index path specifying the location of the cell. The data source receives this information when it is asked for the cell and should just pass it along. This method uses the index path to perform additional configuration based on the cell’s position in the collection view.\n\nReturn Value\n\nA valid UICollectionReusableView object.\n\nDiscussion\n\nCall this method from your data source object when asked to provide a new cell for the collection view. This method dequeues an existing cell if one is available or creates a new one based on the class or nib file you previously registered.\n\nImportant\n\nYou must register a class or nib file using the registerClass:forCellWithReuseIdentifier: or registerNib:forCellWithReuseIdentifier: method before calling this method.\n\nIf you registered a class for the specified identifier and a new cell must be created, this method initializes the cell by calling its initWithFrame: method. For nib-based cells, this method loads the cell object from the provided nib file. If an existing cell was available for reuse, this method calls the cell’s prepareForReuse method instead.\n\nSee Also\nCreating cells\nUICollectionViewCellRegistration\nA registration for the collection view’s cells.\n- dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:\nDequeues a configured reusable cell object.\n- registerClass:forCellWithReuseIdentifier:\nRegisters a class for use in creating new collection view cells.\n- registerNib:forCellWithReuseIdentifier:\nRegisters a nib file for use in creating new collection view cells."
  },
  {
    "title": "cellNib | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600444-cellnib",
    "html": "See Also\nQuerying a cell registration\nconfigurationHandler\nThe closure that handles the cell registration and configuration.\ncellClass\nThe class associated with the cell."
  },
  {
    "title": "registrationWithCellNib:configurationHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600447-registrationwithcellnib",
    "html": "See Also\nCreating a cell registration\n+ registrationWithCellClass:configurationHandler:\nCreates a cell registration with the specified registration handler.\nUICollectionViewCellRegistrationConfigurationHandler\nA closure that handles the cell registration and configuration."
  },
  {
    "title": "configurationHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600445-configurationhandler",
    "html": "See Also\nQuerying a cell registration\ncellClass\nThe class associated with the cell.\ncellNib\nThe nib file associated with the cell."
  },
  {
    "title": "registerNib:forCellWithReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618083-registernib",
    "html": "Parameters\nnib\n\nThe nib object containing the cell object. The nib file must contain only one top-level object and that object must be of the type UICollectionViewCell.\n\nidentifier\n\nThe reuse identifier to associate with the specified nib file. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nPrior to calling the dequeueReusableCellWithReuseIdentifier:forIndexPath: method of the collection view, you must use this method or the registerClass:forCellWithReuseIdentifier: method to tell the collection view how to create a new cell of the given type. If a cell of the specified type is not currently in a reuse queue, the collection view uses the provided information to create a new cell object automatically.\n\nIf you previously registered a class or nib file with the same reuse identifier, the object you specify in the nib parameter replaces the old entry. You may specify nil for nib if you want to unregister the nib file from the specified reuse identifier.\n\nSee Also\nCreating cells\nUICollectionViewCellRegistration\nA registration for the collection view’s cells.\n- dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:\nDequeues a configured reusable cell object.\n- registerClass:forCellWithReuseIdentifier:\nRegisters a class for use in creating new collection view cells.\n- dequeueReusableCellWithReuseIdentifier:forIndexPath:\nDequeues a reusable cell object located by its identifier."
  },
  {
    "title": "UIViewAnimationOptionOverrideInheritedCurve | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionoverrideinheritedcurve",
    "html": "Discussion\n\nIf this key is not present, the animation inherits the curve of the in-flight animation, if any."
  },
  {
    "title": "UIViewAnimationOptionBeginFromCurrentState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionbeginfromcurrentstate",
    "html": "Discussion\n\nIf this key is not present, all in-flight animations are allowed to finish before the new animation is started. If another animation is not in flight, this key has no effect."
  },
  {
    "title": "UIViewAnimationOptionOverrideInheritedDuration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionoverrideinheritedduration",
    "html": "Discussion\n\nIf this key is not present, the animation inherits the remaining duration of the in-flight animation, if any."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618065-initwithcoder",
    "html": "See Also\nCreating a collection view\n- initWithFrame:collectionViewLayout:\nCreates a collection view object with the specified frame and layout."
  },
  {
    "title": "UIViewAnimationOptionPreferredFramesPerSecond60 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionpreferredframespersecond60",
    "html": "Discussion\n\nSpecify this value to request a preferred frame rate. It's recommended that you use the default value unless you have identified a specific need for an explicit rate."
  },
  {
    "title": "UIViewAnimationOptionPreferredFramesPerSecondDefault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionpreferredframesperseconddefault",
    "html": "Discussion\n\nIt's recommended that you use the default value unless you have identified a specific need for an explicit rate."
  },
  {
    "title": "cellClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600443-cellclass",
    "html": "See Also\nQuerying a cell registration\nconfigurationHandler\nThe closure that handles the cell registration and configuration.\ncellNib\nThe nib file associated with the cell."
  },
  {
    "title": "registrationWithCellClass:configurationHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration/3600446-registrationwithcellclass",
    "html": "See Also\nCreating a cell registration\n+ registrationWithCellNib:configurationHandler:\nCreates a cell registration with the specified registration handler and nib file.\nUICollectionViewCellRegistrationConfigurationHandler\nA closure that handles the cell registration and configuration."
  },
  {
    "title": "reloadItemsAtIndexPaths: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618055-reloaditemsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects identifying the items you want to update.\n\nDiscussion\n\nCall this method to selectively reload only the specified items. This causes the collection view to discard any cells associated with those items and redisplay them.\n\nSee Also\nReloading content\nhasUncommittedUpdates\nA Boolean value that indicates whether the collection view contains drop placeholders or is reordering its items as part of handling a drop.\n- reconfigureItemsAtIndexPaths:\nUpdates the data for the items at the index paths you specify, preserving the existing cells for the items.\n- reloadData\nReloads all of the data for the collection view.\n- reloadSections:\nReloads the data in the specified sections of the collection view."
  },
  {
    "title": "deleteItemsAtIndexPaths: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618060-deleteitemsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects, each of which contains a section index and item index for the item you want to delete from the collection view. This parameter must not be nil.\n\nDiscussion\n\nUse this method to remove items from the collection view. You might do this when you remove the items from your data source object or in response to user interactions with the collection view. The collection view updates the layout of the remaining items to account for the deletions, animating the remaining items into position as needed.\n\nYou can also call this method from a block passed to the performBatchUpdates:completion: method when you want to animate multiple separate changes into place at the same time. See the description of that method for more information.\n\nSee Also\nInserting, moving, and deleting Items\n- insertItemsAtIndexPaths:\nInserts new items at the specified index paths.\n- moveItemAtIndexPath:toIndexPath:\nMoves an item from one location to another in the collection view."
  },
  {
    "title": "scrollToItemAtIndexPath:atScrollPosition:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618046-scrolltoitematindexpath",
    "html": "Parameters\nindexPath\n\nThe index path of the item to scroll into view.\n\nscrollPosition\n\nAn option that specifies where the item should be positioned when scrolling finishes. For a list of possible values, see UICollectionViewScrollPosition.\n\nanimated\n\nSpecify YES to animate the scrolling behavior or NO to adjust the scroll view’s visible content immediately.\n\nSee Also\nScrolling an item into view\nUICollectionViewScrollPosition\nConstants that indicate how to scroll an item into the visible portion of the collection view.\nUICollectionViewScrollDirection\nConstants that indicate the direction of scrolling for the layout."
  },
  {
    "title": "prefetchingEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1771771-prefetchingenabled",
    "html": "Discussion\n\nWhen YES, the collection view requests cells in advance of when they will be displayed, spreading the rendering over multiple layout passes. When NO, the cells are requested as they are needed for display, often with multiple cells being requested in the same render loop. Setting this property to NO also disables data prefetching. The default value of this property is YES.\n\nNote\n\nWhen prefetching is enabled the collectionView:cellForItemAtIndexPath: method on the collection view delegate is called in advance of when the cell is required. To avoid inconsistencies in the visual appearance, use the collectionView:willDisplayCell:forItemAtIndexPath: delegate method to update the cell to reflect visual state such as selection.\n\nSee Also\nPrefetching collection view cells and data\nprefetchDataSource\nThe object that acts as the prefetching data source for the collection view, receiving notifications of upcoming cell data requirements.\nUICollectionViewDataSourcePrefetching\nA protocol that provides advance warning of the data requirements for a collection view, allowing the triggering of asynchronous data load operations."
  },
  {
    "title": "UIViewAnimationOptionShowHideTransitionViews | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionshowhidetransitionviews",
    "html": "Discussion\n\nWhen present, this key causes views to be hidden or shown (instead of removed or added) when performing a view transition. Both views must already be present in the parent view’s hierarchy when using this key. If this key is not present, the to-view in a transition is added to, and the from-view is removed from, the parent view’s list of subviews."
  },
  {
    "title": "UIView.KeyframeAnimationOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/keyframeanimationoptions",
    "html": "Overview\n\nUse these options with the animateKeyframes(withDuration:delay:options:animations:completion:) method.\n\nTopics\nConstants\nstatic var layoutSubviews: UIView.KeyframeAnimationOptions\nThe option to lay out subviews at commit time so that they’re animated along with their parent.\nstatic var allowUserInteraction: UIView.KeyframeAnimationOptions\nThe option that allows a person to interact with views while they’re being animated.\nstatic var beginFromCurrentState: UIView.KeyframeAnimationOptions\nThe option to start an animation from the current setting associated with an already in-flight animation.\nstatic var `repeat`: UIView.KeyframeAnimationOptions\nThe option to repeat an animation indefinitely.\nstatic var autoreverse: UIView.KeyframeAnimationOptions\nThe option to run an animation backwards and forwards.\nstatic var overrideInheritedDuration: UIView.KeyframeAnimationOptions\nThe option to force an animation to use the original duration value specified when the animation was submitted.\nstatic var overrideInheritedOptions: UIView.KeyframeAnimationOptions\nThe option to not inherit the animation type or any options.\nstatic var calculationModeLinear: UIView.KeyframeAnimationOptions\nThe option to use a simple linear calculation when interpolating between keyframe values.\nstatic var calculationModeDiscrete: UIView.KeyframeAnimationOptions\nThe option to not interpolate between keyframe values, but rather to jump directly to each new keyframe value.\nstatic var calculationModePaced: UIView.KeyframeAnimationOptions\nThe option to compute intermediate keyframe values using a simple pacing algorithm.\nstatic var calculationModeCubic: UIView.KeyframeAnimationOptions\nThe option to compute intermediate frames using a default Catmull-Rom spline that passes through the keyframe values.\nstatic var calculationModeCubicPaced: UIView.KeyframeAnimationOptions\nThe option to compute intermediate frames using the cubic scheme while ignoring the timing properties of the animation.\nInitializers\ninit(rawValue: UInt)\nCreates keyframe animation options with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable"
  },
  {
    "title": "transitionFromView:toView:duration:options:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622562-transitionfromview",
    "html": "Parameters\nfromView\n\nThe starting view for the transition. By default, this view is removed from its superview as part of the transition.\n\ntoView\n\nThe ending view for the transition. By default, this view is added to the superview of fromView as part of the transition.\n\nduration\n\nThe duration of the transition animation, measured in seconds. If you specify a negative value or 0, the transition is made without animations.\n\noptions\n\nA mask of options indicating how you want to perform the animations. For a list of valid constants, see UIViewAnimationOptions.\n\ncompletion\n\nA block object to be executed when the animation sequence ends. This block has no return value and takes a single Boolean argument that indicates whether or not the animations actually finished before the completion handler was called. If the duration of the animation is 0, this block is performed at the beginning of the next run loop cycle. This parameter may be NULL.\n\nDiscussion\n\nThis method provides a simple way to transition from the view in the fromView parameter to the view in the toView parameter. By default, the view in fromView is replaced in the view hierarchy by the view in toView. If both views are already part of your view hierarchy, you can include the UIViewAnimationOptionShowHideTransitionViews option in the options parameter to simply hide or show them.\n\nThis method modifies the views in their view hierarchy only. It does not modify your application’s view controllers in any way. For example, if you use this method to change the root view displayed by a view controller, it is your responsibility to update the view controller appropriately to handle the change.\n\nThe view transition starts immediately unless another animation is already in-flight, in which case it starts immediately after the current animation finishes.\n\nDuring an animation, user interactions are temporarily disabled for the views being animated. (Prior to iOS 5, user interactions are disabled for the entire application.) If you want users to be able to interact with the views, include the UIViewAnimationOptionAllowUserInteraction constant in the options parameter.\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "itemIdentifiersInSectionWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182908-itemidentifiersinsectionwithiden",
    "html": "Parameters\nsectionIdentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nAn array of identifiers of the items contained in the section.\n\nSee Also\nIdentifying items and sections\nitemIdentifiers\nThe identifiers of all of the items in the snapshot.\nsectionIdentifiers\nThe identifiers of all of the sections in the snapshot.\n- indexOfItemIdentifier:\nReturns the index of the item in the snapshot with the specified identifier.\n- indexOfSectionIdentifier:\nReturns the index of the section of the snapshot with the specified identifier.\n- sectionIdentifierForSectionContainingItemIdentifier:\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "reloadedItemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857604-reloadeditemidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the items that the view reloads when you apply the snapshot to your data source.\n\nSee Also\nReloading data\n- reconfigureItemsWithIdentifiers:\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nreconfiguredItemIdentifiers\nIdentifies the items reconfigured by the changes to the snapshot.\n- reloadItemsWithIdentifiers:\nReloads the data within the specified items in the snapshot.\n- reloadSectionsWithIdentifiers:\nReloads the data within the specified sections of the snapshot.\nreloadedSectionIdentifiers\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "convertRect:toView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622504-convertrect",
    "html": "Parameters\nrect\n\nA rectangle specified in the local coordinate system (bounds) of the receiver.\n\nview\n\nThe view that is the target of the conversion operation. If view is nil, this method instead converts to window base coordinates. Otherwise, both view and the receiver must belong to the same UIWindow object.\n\nReturn Value\n\nThe converted rectangle.\n\nSee Also\nConverting between view coordinate systems\n- convertPoint:toView:\nConverts a point from the receiver’s coordinate system to that of the specified view.\n- convertPoint:fromView:\nConverts a point from the coordinate system of a given view to that of the receiver.\n- convertRect:fromView:\nConverts a rectangle from the coordinate system of another view to that of the receiver."
  },
  {
    "title": "UIViewAnimationOptionPreferredFramesPerSecond30 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionpreferredframespersecond30",
    "html": "Discussion\n\nSpecify this value to request a preferred frame rate. It's recommended that you use the default value unless you have identified a specific need for an explicit rate."
  },
  {
    "title": "elementKindSectionFooter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1617697-elementkindsectionfooter",
    "html": "See Also\nIdentifying collection view elements\nenum UICollectionView.ElementCategory\nConstants specifying the type of view.\nclass let elementKindSectionHeader: String\nA supplementary view that identifies the header for a given section."
  },
  {
    "title": "UICollectionView.ElementCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/elementcategory",
    "html": "Topics\nConstants\ncase cell\nThe view is a cell.\ncase supplementaryView\nThe view is a supplementary view.\ncase decorationView\nThe view is a decoration view.\nRelationships\nConforms To\nSendable\nSee Also\nIdentifying collection view elements\nclass let elementKindSectionFooter: String\nA supplementary view that identifies the footer for a given section.\nclass let elementKindSectionHeader: String\nA supplementary view that identifies the header for a given section."
  },
  {
    "title": "UICollectionView.ScrollDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrolldirection",
    "html": "Topics\nConstants\ncase vertical\nThe layout scrolls content vertically.\ncase horizontal\nThe layout scrolls content horizontally.\nRelationships\nConforms To\nSendable\nSee Also\nScrolling an item into view\nfunc scrollToItem(at: IndexPath, at: UICollectionView.ScrollPosition, animated: Bool)\nScrolls the collection view contents until the specified item is visible.\nstruct UICollectionView.ScrollPosition\nConstants that indicate how to scroll an item into the visible portion of the collection view."
  },
  {
    "title": "dequeueConfiguredReusableCellWithRegistration:forIndexPath:item: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/3600423-dequeueconfiguredreusablecellwit",
    "html": "Parameters\nregistration\n\nThe cell registration for configuring the cell object. See UICollectionViewCellRegistration.\n\nindexPath\n\nThe index path that specifies the location of the cell in the collection view.\n\nitem\n\nThe item that provides data for the cell.\n\nReturn Value\n\nA configured reusable cell object.\n\nSee Also\nCreating cells\nUICollectionViewCellRegistration\nA registration for the collection view’s cells.\n- registerClass:forCellWithReuseIdentifier:\nRegisters a class for use in creating new collection view cells.\n- registerNib:forCellWithReuseIdentifier:\nRegisters a nib file for use in creating new collection view cells.\n- dequeueReusableCellWithReuseIdentifier:forIndexPath:\nDequeues a reusable cell object located by its identifier."
  },
  {
    "title": "UICollectionViewCellRegistration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellregistration",
    "html": "Overview\n\nUse a cell registration to register cells with your collection view and configure each cell for display. You create a cell registration with your cell type and data item type as the registration’s generic parameters, passing in a registration handler to configure the cell. In the registration handler, you specify how to configure the content and appearance of that type of cell.\n\nThe following example creates a cell registration for cells of type UICollectionViewListCell. It creates a content configuration with a system default style, customizes the content and appearance of the configuration, and then assigns the configuration to the cell.\n\nUICollectionViewCellRegistration *cellRegistration = [UICollectionViewCellRegistration registrationWithCellClass:[UICollectionViewListCell class] configurationHandler:^(UICollectionViewListCell *cell, NSIndexPath *indexPath, id item) {\n    UIListContentConfiguration *contentConfiguration = cell.defaultContentConfiguration;\n    \n    contentConfiguration.text = [NSString stringWithFormat:@\"%@\", item];\n    contentConfiguration.textProperties.color = UIColor.lightGrayColor;\n    \n    cell.contentConfiguration = contentConfiguration;\n}];\n\n\nAfter you create a cell registration, you pass it in to dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:, which you call from your data source’s cell provider.\n\nself.dataSource = [[UICollectionViewDiffableDataSource alloc] initWithCollectionView:self.collectionView cellProvider:^UICollectionViewCell *(UICollectionView *collectionView, NSIndexPath *indexPath, id item) {\n    return [collectionView dequeueConfiguredReusableCellWithRegistration:cellRegistration forIndexPath:indexPath item:item];\n}];\n\n\nYou don’t need to call registerNib:forCellWithReuseIdentifier: or registerClass:forCellWithReuseIdentifier:. The collection view registers your cell automatically when you pass the cell registration to dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:.\n\nImportant\n\nDon’t create your cell registration inside a UICollectionViewDiffableDataSourceCellProvider closure; doing so prevents cell reuse, and generates an exception in iOS 15 and higher.\n\nTopics\nCreating a cell registration\n+ registrationWithCellClass:configurationHandler:\nCreates a cell registration with the specified registration handler.\n+ registrationWithCellNib:configurationHandler:\nCreates a cell registration with the specified registration handler and nib file.\nUICollectionViewCellRegistrationConfigurationHandler\nA closure that handles the cell registration and configuration.\nQuerying a cell registration\nconfigurationHandler\nThe closure that handles the cell registration and configuration.\ncellClass\nThe class associated with the cell.\ncellNib\nThe nib file associated with the cell.\nRelationships\nInherits From\nNSObject\nSee Also\nCreating cells\n- dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:\nDequeues a configured reusable cell object.\n- registerClass:forCellWithReuseIdentifier:\nRegisters a class for use in creating new collection view cells.\n- registerNib:forCellWithReuseIdentifier:\nRegisters a nib file for use in creating new collection view cells.\n- dequeueReusableCellWithReuseIdentifier:forIndexPath:\nDequeues a reusable cell object located by its identifier."
  },
  {
    "title": "registerClass:forCellWithReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618089-registerclass",
    "html": "Parameters\ncellClass\n\nThe class of a cell that you want to use in the collection view.\n\nidentifier\n\nThe reuse identifier to associate with the specified class. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nPrior to calling the dequeueReusableCellWithReuseIdentifier:forIndexPath: method of the collection view, you must use this method or the registerNib:forCellWithReuseIdentifier: method to tell the collection view how to create a new cell of the given type. If a cell of the specified type is not currently in a reuse queue, the collection view uses the provided information to create a new cell object automatically.\n\nIf you previously registered a class or nib file with the same reuse identifier, the class you specify in the cellClass parameter replaces the old entry. You may specify nil for cellClass if you want to unregister the class from the specified reuse identifier.\n\nSee Also\nCreating cells\nUICollectionViewCellRegistration\nA registration for the collection view’s cells.\n- dequeueConfiguredReusableCellWithRegistration:forIndexPath:item:\nDequeues a configured reusable cell object.\n- registerNib:forCellWithReuseIdentifier:\nRegisters a nib file for use in creating new collection view cells.\n- dequeueReusableCellWithReuseIdentifier:forIndexPath:\nDequeues a reusable cell object located by its identifier."
  },
  {
    "title": "UIView.TintAdjustmentMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/tintadjustmentmode",
    "html": "Topics\nConstants\ncase automatic\nThe tint adjustment mode of the view is the same as its superview’s tint adjustment mode (or UIViewTintAdjustmentModeNormal if the view has no superview).\ncase normal\nThe view's tintColor property returns the completely unmodified tint color of the view.\ncase dimmed\nThe view's tintColor property returns a desaturated, dimmed version of the view's original tint color.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "initWithFrame:collectionViewLayout: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1618053-initwithframe",
    "html": "Parameters\nframe\n\nThe frame rectangle for the collection view, measured in points. The origin of the frame is relative to the superview in which you plan to add it. This frame is passed to the superclass during initialization.\n\nlayout\n\nThe layout object to use for organizing items. The collection view stores a strong reference to the specified object. Must not be nil.\n\nReturn Value\n\nAn initialized collection view object, or nil if the object couldn’t be created.\n\nDiscussion\n\nUse this method when initializing a collection view object programmatically.\n\nThis method is the designated initializer.\n\nSee Also\nCreating a collection view\n- initWithCoder:\nCreates a collection view object from data in a given unarchiver."
  },
  {
    "title": "UISemanticContentAttributeUnspecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisemanticcontentattribute/uisemanticcontentattributeunspecified",
    "html": "Discussion\n\nThe view is flipped when switching between left-to-right and right-to-left layouts."
  },
  {
    "title": "itemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182907-itemidentifiers",
    "html": "See Also\nIdentifying items and sections\nsectionIdentifiers\nThe identifiers of all of the sections in the snapshot.\n- indexOfItemIdentifier:\nReturns the index of the item in the snapshot with the specified identifier.\n- indexOfSectionIdentifier:\nReturns the index of the section of the snapshot with the specified identifier.\n- itemIdentifiersInSectionWithIdentifier:\nReturns the identifiers of all of the items in the specified section of the snapshot.\n- sectionIdentifierForSectionContainingItemIdentifier:\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "numberOfItemsInSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182914-numberofitemsinsection",
    "html": "Parameters\nsectionIdentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nThe number of items in the specified section. This method returns 0 if the section is empty.\n\nDiscussion\n\nIf you call this method with the identifier of a section that doesn’t exist in the snapshot, the app throws an error.\n\nSee Also\nGetting item and section metrics\nnumberOfItems\nThe number of items in the snapshot.\nnumberOfSections\nThe number of sections in the snapshot."
  },
  {
    "title": "NSLayoutAttributeCenterYWithinMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributecenterywithinmargins",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutAttributeTopMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributetopmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutAttributeCenterXWithinMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributecenterxwithinmargins",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutAttributeRightMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributerightmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutAttributeBottomMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributebottommargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutAttributeNotAnAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributenotanattribute",
    "html": "Discussion\n\nUse this value when creating a constraint that assigns a constant to an attribute. For example, item1.height >= 40. If a constraint only has one item, set the second item to nil, and set the second attribute to NSLayoutAttributeNotAnAttribute."
  },
  {
    "title": "UIView.SystemAnimation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/systemanimation",
    "html": "Topics\nConstants\ncase delete\nOption to remove views from the view hierarchy when animation is complete.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "UIViewAnimationOptionAllowAnimatedContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewanimationoptions/uiviewanimationoptionallowanimatedcontent",
    "html": "Discussion\n\nIf this key is not present, the views are animated using a snapshot image."
  },
  {
    "title": "performSystemAnimation:onViews:options:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622635-performsystemanimation",
    "html": "Parameters\nanimation\n\nThe system animation to perform; a constant from the UISystemAnimation enum.\n\nviews\n\nThe views to perform the animations on.\n\noptions\n\nA mask of options indicating how you want to perform the animations. For a list of valid constants, see UIViewAnimationOptions.\n\nparallelAnimations\n\nAdditional animations you specify to run alongside the system animation, with the same timing and duration that the system animation defines or inherits.\n\nIn your additional animations, do not modify properties of the view on which the system animation is being performed.\n\ncompletion\n\nA block object to be executed when the animation sequence ends. The single Boolean argument indicates whether or not the animations finished before the completion handler was called. If the animation duration is 0, this block is performed at the beginning of the next run-loop cycle. You can use a nil value for this parameter.\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "modifyAnimationsWithRepeatCount:autoreverses:animations: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/3043564-modifyanimationswithrepeatcount",
    "html": "Parameters\ncount\n\nThe number of times to repeat the animations.\n\nautoreverses\n\nA Boolean value that indicates whether the animations run forward and backward.\n\nanimations\n\nThe animations to perform.\n\nDiscussion\n\nYou must call this method from within an enclosing animation block. The inverse nesting, calling animateWithDuration:animations: from inside the modifyAnimationsWithRepeatCount:autoreverses:animations: block, doesn’t work.\n\nUIView.animate(withDuration: 1.0) {\n    UIView.modifyAnimations(withRepeatCount: 2, autoreverses: true) {\n        // Set view properties.\n    }\n}\n\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation."
  },
  {
    "title": "UICollectionView.ScrollPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition",
    "html": "Topics\nConstants\nstatic var top: UICollectionView.ScrollPosition\nScroll so that the item is positioned at the top of the collection view’s bounds.\nstatic var centeredVertically: UICollectionView.ScrollPosition\nScroll so that the item is centered vertically in the collection view.\nstatic var bottom: UICollectionView.ScrollPosition\nScroll so that the item is positioned at the bottom of the collection view’s bounds.\nstatic var left: UICollectionView.ScrollPosition\nScroll so that the item is positioned at the left edge of the collection view’s bounds.\nstatic var centeredHorizontally: UICollectionView.ScrollPosition\nScroll so that the item is centered horizontally in the collection view.\nstatic var right: UICollectionView.ScrollPosition\nScroll so that the item is positioned at the right edge of the collection view’s bounds.\nInitializers\ninit(rawValue: UInt)\nCreates a scroll-position structure with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nScrolling an item into view\nfunc scrollToItem(at: IndexPath, at: UICollectionView.ScrollPosition, animated: Bool)\nScrolls the collection view contents until the specified item is visible.\nenum UICollectionView.ScrollDirection\nConstants that indicate the direction of scrolling for the layout."
  },
  {
    "title": "moveItemWithIdentifier:beforeItemWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182910-moveitemwithidentifier",
    "html": "Parameters\nfromIdentifier\n\nThe identifier of the item to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the item before which to move the specified item.\n\nSee Also\nReordering items and sections\n- moveItemWithIdentifier:afterItemWithIdentifier:\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\n- moveSectionWithIdentifier:afterSectionWithIdentifier:\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\n- moveSectionWithIdentifier:beforeSectionWithIdentifier:\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "reloadSectionsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182917-reloadsectionswithidentifiers",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to reload in the snapshot.\n\nSee Also\nReloading data\n- reconfigureItemsWithIdentifiers:\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nreconfiguredItemIdentifiers\nIdentifies the items reconfigured by the changes to the snapshot.\n- reloadItemsWithIdentifiers:\nReloads the data within the specified items in the snapshot.\nreloadedItemIdentifiers\nIdentifies the items reloaded by the changes to the snapshot.\nreloadedSectionIdentifiers\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "sectionIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182919-sectionidentifiers",
    "html": "See Also\nIdentifying items and sections\nitemIdentifiers\nThe identifiers of all of the items in the snapshot.\n- indexOfItemIdentifier:\nReturns the index of the item in the snapshot with the specified identifier.\n- indexOfSectionIdentifier:\nReturns the index of the section of the snapshot with the specified identifier.\n- itemIdentifiersInSectionWithIdentifier:\nReturns the identifiers of all of the items in the specified section of the snapshot.\n- sectionIdentifierForSectionContainingItemIdentifier:\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "appendItemsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182895-appenditemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers specifying the items to add to the snapshot.\n\nSee Also\nCreating a snapshot\n- appendSectionsWithIdentifiers:\nAdds the sections with the specified identifiers to the snapshot.\n- appendItemsWithIdentifiers:intoSectionWithIdentifier:\nAdds the items with the specified identifiers to the specified section of the snapshot."
  },
  {
    "title": "deleteItemsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182899-deleteitemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to delete from the snapshot.\n\nSee Also\nRemoving items and sections\n- deleteAllItems\nDeletes all of the items from the snapshot.\n- deleteSectionsWithIdentifiers:\nDeletes the sections with the specified identifiers from the snapshot."
  },
  {
    "title": "insertSectionsWithIdentifiers:afterSectionWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182905-insertsectionswithidentifiers",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to add to the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section after which to insert the new sections.\n\nSee Also\nInserting items and sections\n- insertItemsWithIdentifiers:afterItemWithIdentifier:\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\n- insertItemsWithIdentifiers:beforeItemWithIdentifier:\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\n- insertSectionsWithIdentifiers:beforeSectionWithIdentifier:\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "indexOfSectionIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182902-indexofsectionidentifier",
    "html": "Parameters\nsectionIdentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nThe index of the section of the snapshot, or NSNotFound if the section with the specified identifier doesn't exist in the snapshot. This index value is 0-based.\n\nSee Also\nIdentifying items and sections\nitemIdentifiers\nThe identifiers of all of the items in the snapshot.\nsectionIdentifiers\nThe identifiers of all of the sections in the snapshot.\n- indexOfItemIdentifier:\nReturns the index of the item in the snapshot with the specified identifier.\n- itemIdentifiersInSectionWithIdentifier:\nReturns the identifiers of all of the items in the specified section of the snapshot.\n- sectionIdentifierForSectionContainingItemIdentifier:\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "insertItemsWithIdentifiers:beforeItemWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182904-insertitemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to add to the snapshot.\n\nitemIdentifier\n\nThe identifier of the item before which to insert the new items.\n\nSee Also\nInserting items and sections\n- insertItemsWithIdentifiers:afterItemWithIdentifier:\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\n- insertSectionsWithIdentifiers:afterSectionWithIdentifier:\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\n- insertSectionsWithIdentifiers:beforeSectionWithIdentifier:\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "indexOfItemIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182901-indexofitemidentifier",
    "html": "Parameters\nitemIdentifier\n\nThe identifier of the item in the snapshot.\n\nReturn Value\n\nThe index of the item in the snapshot, or NSNotFound if the item with the specified identifier doesn't exist in the snapshot. This index value is 0-based.\n\nSee Also\nIdentifying items and sections\nitemIdentifiers\nThe identifiers of all of the items in the snapshot.\nsectionIdentifiers\nThe identifiers of all of the sections in the snapshot.\n- indexOfSectionIdentifier:\nReturns the index of the section of the snapshot with the specified identifier.\n- itemIdentifiersInSectionWithIdentifier:\nReturns the identifiers of all of the items in the specified section of the snapshot.\n- sectionIdentifierForSectionContainingItemIdentifier:\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "insertSectionsWithIdentifiers:beforeSectionWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182906-insertsectionswithidentifiers",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to add to the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section before which to insert the new sections.\n\nSee Also\nInserting items and sections\n- insertItemsWithIdentifiers:afterItemWithIdentifier:\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\n- insertItemsWithIdentifiers:beforeItemWithIdentifier:\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\n- insertSectionsWithIdentifiers:afterSectionWithIdentifier:\nInserts the provided sections immediately after the section with the specified identifier in the snapshot."
  },
  {
    "title": "sectionIdentifierForSectionContainingItemIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182918-sectionidentifierforsectionconta",
    "html": "Parameters\nitemIdentifier\n\nThe identifier of the item contained in the section of the snapshot.\n\nReturn Value\n\nThe identifier of the section containing the specified item, or nil if the specified item doesn't exist in any section of the snapshot.\n\nSee Also\nIdentifying items and sections\nitemIdentifiers\nThe identifiers of all of the items in the snapshot.\nsectionIdentifiers\nThe identifiers of all of the sections in the snapshot.\n- indexOfItemIdentifier:\nReturns the index of the item in the snapshot with the specified identifier.\n- indexOfSectionIdentifier:\nReturns the index of the section of the snapshot with the specified identifier.\n- itemIdentifiersInSectionWithIdentifier:\nReturns the identifiers of all of the items in the specified section of the snapshot."
  },
  {
    "title": "NSLayoutAttributeLeftMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributeleftmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutAttributeTrailingMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributetrailingmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutConstraint.Relation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/relation",
    "html": "Topics\nConstants\ncase lessThanOrEqual\nThe constraint requires the first attribute to be less than or equal to the modified second attribute.\ncase equal\nThe constraint requires the first attribute to be exactly equal to the modified second attribute.\ncase greaterThanOrEqual\nThe constraint requires the first attribute to be greater than or equal to the modified second attribute.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "NSLayoutConstraint.Attribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute",
    "html": "Topics\nConstants\ncase left\nThe left side of the object’s alignment rectangle.\ncase right\nThe right side of the object’s alignment rectangle.\ncase top\nThe top of the object’s alignment rectangle.\ncase bottom\nThe bottom of the object’s alignment rectangle.\ncase leading\nThe leading edge of the object’s alignment rectangle.\ncase trailing\nThe trailing edge of the object’s alignment rectangle.\ncase width\nThe width of the object’s alignment rectangle.\ncase height\nThe height of the object’s alignment rectangle.\ncase centerX\nThe center along the x-axis of the object’s alignment rectangle.\ncase centerY\nThe center along the y-axis of the object’s alignment rectangle.\ncase lastBaseline\nThe object’s baseline.\ncase firstBaseline\nThe object’s baseline.\ncase leftMargin\nThe object’s left margin.\ncase rightMargin\nThe object’s right margin.\ncase topMargin\nThe object’s top margin.\ncase bottomMargin\nThe object’s bottom margin.\ncase leadingMargin\nThe object’s leading margin.\ncase trailingMargin\nThe object’s trailing margin.\ncase centerXWithinMargins\nThe center along the x-axis between the object’s left and right margin.\ncase centerYWithinMargins\nThe center along the y-axis between the object’s top and bottom margin.\ncase notAnAttribute\nA placeholder value for indicating that the constraint’s second item and second attribute aren’t used in any calculations.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "NSLayoutConstraint.FormatOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/formatoptions",
    "html": "Topics\nConstants\nstatic var alignAllLeft: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.left on each.\nstatic var alignAllRight: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.right on each.\nstatic var alignAllTop: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.top on each.\nstatic var alignAllBottom: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.bottom on each.\nstatic var alignAllLeading: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.leading on each.\nstatic var alignAllTrailing: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.trailing on each.\nstatic var alignAllCenterX: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.centerX on each.\nstatic var alignAllCenterY: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using NSLayoutConstraint.Attribute.centerY on each.\nstatic var alignAllLastBaseline: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using the last baseline of each one.\nstatic var alignAllFirstBaseline: NSLayoutConstraint.FormatOptions\nAlign all specified interface elements using the first baseline of each one.\nstatic var alignmentMask: NSLayoutConstraint.FormatOptions\nBit mask that can be combined with a NSLayoutConstraint.FormatOptions variable to yield only the alignment portion of the format options.\nstatic var directionLeadingToTrailing: NSLayoutConstraint.FormatOptions\nArrange objects in order based on the normal text flow for the current user interface language. In left-to-right languages (like English), this arrangement results in the first object being placed farthest to the left, the next one to its right, and so on. In right-to-left languages (like Arabic or Hebrew), the ordering is reversed.\nstatic var directionLeftToRight: NSLayoutConstraint.FormatOptions\nArrange objects in order from left to right.\nstatic var directionRightToLeft: NSLayoutConstraint.FormatOptions\nArrange objects in order from right to left.\nstatic var directionMask: NSLayoutConstraint.FormatOptions\nA bit mask that can be combined with an NSLayoutConstraint.FormatOptions variable to yield only the direction portion of the format options.\nstatic var spacingBaselineToBaseline: NSLayoutConstraint.FormatOptions\nAlign elements vertically according to their baseline positions.\nstatic var spacingMask: NSLayoutConstraint.FormatOptions\nA bit mask that can be combined with an NSLayoutConstraint.FormatOptions variable to yield only the spacing baseline spacing portion of the format options.\nInitializers\ninit(rawValue: UInt)\nCreates a formatting-options structure with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable"
  },
  {
    "title": "pointInside:withEvent: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622533-pointinside",
    "html": "Parameters\npoint\n\nA point that is in the receiver’s local coordinate system (bounds).\n\nevent\n\nThe event that warranted a call to this method. If you are calling this method from outside your event-handling code, you may specify nil.\n\nReturn Value\n\nYES if point is inside the receiver’s bounds; otherwise, NO.\n\nSee Also\nHit-testing in a view\n- hitTest:withEvent:\nReturns the farthest descendant in the view hierarchy of the current view, including itself, that contains the specified point."
  },
  {
    "title": "UILayoutPrioritySceneSizeStayPut | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilayoutpriorityscenesizestayput",
    "html": "Discussion\n\nSpecify constraint priorities that are either higher or lower than this value, rather than equal to it."
  },
  {
    "title": "drawViewHierarchyInRect:afterScreenUpdates: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622589-drawviewhierarchyinrect",
    "html": "Parameters\nrect\n\nA rectangle specified in the local coordinate system (bounds) of the view.\n\nafterUpdates\n\nA Boolean value that indicates whether the snapshot should be rendered after recent changes have been incorporated. Specify the value NO if you want to render a snapshot in the view hierarchy’s current state, which might not include recent changes.\n\nReturn Value\n\nReturns YES if the snapshot is complete, or NO if the snapshot is missing image data for any view in the hierarchy.\n\nDiscussion\n\nUse this method when you want to apply a graphical effect, such as a blur, to a view snapshot. This method is not as fast as the snapshotViewAfterScreenUpdates: method.\n\nSee Also\nCapturing a view snapshot\n- snapshotViewAfterScreenUpdates:\nReturns a snapshot view based on the contents of the current view.\n- resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:\nReturns a snapshot view based on the specified contents of the current view, with stretchable insets."
  },
  {
    "title": "convertPoint:fromView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622424-convertpoint",
    "html": "Parameters\npoint\n\nA point specified in the local coordinate system (bounds) of view.\n\nview\n\nThe view with point in its coordinate system. If view is nil, this method instead converts from window base coordinates. Otherwise, both view and the receiver must belong to the same UIWindow object.\n\nReturn Value\n\nThe point converted to the local coordinate system (bounds) of the receiver.\n\nSee Also\nConverting between view coordinate systems\n- convertPoint:toView:\nConverts a point from the receiver’s coordinate system to that of the specified view.\n- convertRect:toView:\nConverts a rectangle from the receiver’s coordinate system to that of another view.\n- convertRect:fromView:\nConverts a rectangle from the coordinate system of another view to that of the receiver."
  },
  {
    "title": "convertPoint:toView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622442-convertpoint",
    "html": "Parameters\npoint\n\nA point specified in the local coordinate system (bounds) of the receiver.\n\nview\n\nThe view into whose coordinate system point is to be converted. If view is nil, this method instead converts to window base coordinates. Otherwise, both view and the receiver must belong to the same UIWindow object.\n\nReturn Value\n\nThe point converted to the coordinate system of view.\n\nSee Also\nConverting between view coordinate systems\n- convertPoint:fromView:\nConverts a point from the coordinate system of a given view to that of the receiver.\n- convertRect:toView:\nConverts a rectangle from the receiver’s coordinate system to that of another view.\n- convertRect:fromView:\nConverts a rectangle from the coordinate system of another view to that of the receiver."
  },
  {
    "title": "constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526954-constraintwithitem",
    "html": "Parameters\nview1\n\nThe view for the left side of the constraint.\n\nattr1\n\nThe attribute of the view for the left side of the constraint.\n\nrelation\n\nThe relationship between the left side of the constraint and the right side of the constraint.\n\nview2\n\nThe view for the right side of the constraint.\n\nattr2\n\nThe attribute of the view for the right side of the constraint.\n\nmultiplier\n\nThe constant multiplied with the attribute on the right side of the constraint as part of getting the modified attribute.\n\nc\n\nThe constant added to the multiplied attribute value on the right side of the constraint to yield the final modified attribute.\n\nReturn Value\n\nA constraint object relating the two provided views with the specified relation, attributes, multiplier, and constant.\n\nDiscussion\n\nConstraints represent linear equations of the form view1.attr1 <relation> multiplier × view2.attr2 + c. If the constraint you wish to express does not have a second view and attribute, use nil and NSLayoutAttributeNotAnAttribute.\n\nNote\n\nThis method throws an NSInvalidArgumentException exception if it is used to create an invalid constraint (for example, view1.top == 0.0 x nil.NotAnAttribute + 200.0 or view1.top == 1.0 x view2.height + 20.0).\n\nIn general, you should use the layout anchor API to programmatically create constraints. This API includes additional type information that can catch many invalid constraints at build time. For more information, see Creating Constraints Using Layout Anchors in NSView or UIView.\n\nSee Also\nCreating constraints\n+ constraintsWithVisualFormat:options:metrics:views:\nCreates constraints described by an ASCII art-like visual format string."
  },
  {
    "title": "constraintsWithVisualFormat:options:metrics:views: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526944-constraintswithvisualformat",
    "html": "Parameters\nformat\n\nThe format specification for the constraints. For more information, see Auto Layout Cookbook in Auto Layout Guide.\n\nopts\n\nOptions describing the attribute and the direction of layout for all objects in the visual format string.\n\nmetrics\n\nA dictionary of constants that appear in the visual format string. The dictionary’s keys must be the string values used in the visual format string. Their values must be NSNumber objects.\n\nviews\n\nA dictionary of views that appear in the visual format string. The keys must be the string values used in the visual format string, and the values must be the view objects.\n\nReturn Value\n\nAn array of constraints that, combined, express the constraints between the provided views and their parent view as described by the visual format string. The constraints are returned in the same order they were specified in the visual format string.\n\nDiscussion\n\nThe language used for the visual format string is described in Auto Layout Cookbook in Auto Layout Guide.\n\nSee Also\nCreating constraints\n+ constraintWithItem:attribute:relatedBy:toItem:attribute:multiplier:constant:\nCreates a constraint that defines the relationship between the specified attributes of the given views.\nRelated Documentation\nAuto Layout Guide"
  },
  {
    "title": "deactivateConstraints: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526066-deactivateconstraints",
    "html": "Parameters\nconstraints\n\nAn array of constraints to deactivate.\n\nDiscussion\n\nThis is a convenience method that provides an easy way to deactivate a set of constraints with one call. The effect of this method is the same as setting the active property of each constraint to NO. Typically, using this method is more efficient than deactivating each constraint individually.\n\nSee Also\nActivating and deactivating constraints\nactive\nThe active state of the constraint.\n+ activateConstraints:\nActivates each constraint in the specified array."
  },
  {
    "title": "transitionWithView:duration:options:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622574-transitionwithview",
    "html": "Parameters\nview\n\nThe container view that performs the transition.\n\nduration\n\nThe duration of the transition animation, measured in seconds. If you specify a negative value or 0, the transition is made without animations.\n\noptions\n\nA mask of options indicating how you want to perform the animations. For a list of valid constants, see UIViewAnimationOptions.\n\nanimations\n\nA block object that contains the changes you want to make to the specified view. This block takes no parameters and has no return value. This parameter must not be NULL.\n\ncompletion\n\nA block object to be executed when the animation sequence ends. This block has no return value and takes a single Boolean argument that indicates whether or not the animations actually finished before the completion handler was called. If the duration of the animation is 0, this block is performed at the beginning of the next run loop cycle. This parameter may be NULL.\n\nDiscussion\n\nThis method applies a transition to the specified view so that you can make state changes to it. The block you specify in the animations parameter contains whatever state changes you want to make. You can use this block to add, remove, show, or hide subviews of the specified view. If you want to incorporate other animatable changes, you must include the UIViewAnimationOptionAllowAnimatedContent key in the options parameter.\n\nThe following code creates a flip transition for the specified container view. At the appropriate point in the transition, one subview is removed and another is added to the container view. This makes it look as if a new view was flipped into place with the new subview, but really it is just the same view animated back into place with a new configuration.\n\n[UIView transitionWithView:containerView\n           duration:0.2\n           options:UIViewAnimationOptionTransitionFlipFromLeft\n           animations:^{ [fromView removeFromSuperview]; [containerView addSubview:toView]; }\n           completion:NULL];\n\n\nDuring an animation, user interactions are temporarily disabled for the views being animated. (Prior to iOS 5, user interactions are disabled for the entire application.) If you want users to be able to interact with the views, include the UIViewAnimationOptionAllowUserInteraction constant in the options parameter.\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "UIControlStateSelected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrolstate/uicontrolstateselected",
    "html": "Discussion\n\nFor many controls, this state has no effect on behavior or appearance. Some subclasses, like the UISegmentedControl class, use this state to change their appearance. You can retrieve and set this value through the selected property."
  },
  {
    "title": "convertRect:fromView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622498-convertrect",
    "html": "Parameters\nrect\n\nA rectangle specified in the local coordinate system (bounds) of view.\n\nview\n\nThe view with rect in its coordinate system. If view is nil, this method instead converts from window base coordinates. Otherwise, both view and the receiver must belong to the same UIWindow object.\n\nReturn Value\n\nThe converted rectangle.\n\nSee Also\nConverting between view coordinate systems\n- convertPoint:toView:\nConverts a point from the receiver’s coordinate system to that of the specified view.\n- convertPoint:fromView:\nConverts a point from the coordinate system of a given view to that of the receiver.\n- convertRect:toView:\nConverts a rectangle from the receiver’s coordinate system to that of another view."
  },
  {
    "title": "animateWithDuration:delay:options:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622451-animatewithduration",
    "html": "Parameters\nduration\n\nThe total duration of the animations, measured in seconds. If you specify a negative value or 0, the changes are made without animating them.\n\ndelay\n\nThe amount of time (measured in seconds) to wait before beginning the animations. Specify a value of 0 to begin the animations immediately.\n\noptions\n\nA mask of options indicating how you want to perform the animations. For a list of valid constants, see UIViewAnimationOptions.\n\nanimations\n\nA block object containing the changes to commit to the views. This is where you programmatically change any animatable properties of the views in your view hierarchy. This block takes no parameters and has no return value. This parameter must not be NULL.\n\ncompletion\n\nA block object to be executed when the animation sequence ends. This block has no return value and takes a single Boolean argument that indicates whether or not the animations actually finished before the completion handler was called. If the duration of the animation is 0, this block is performed at the beginning of the next run loop cycle. This parameter may be NULL.\n\nDiscussion\n\nThis method initiates a set of animations to perform on the view. The block object in the animations parameter contains the code for animating the properties of one or more views.\n\nDuring an animation, user interactions are temporarily disabled for the views being animated. (Prior to iOS 5, user interactions are disabled for the entire application.) If you want users to be able to interact with the views, include the UIViewAnimationOptionAllowUserInteraction constant in the options parameter.\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/4173176-animatewithspringduration",
    "html": "See Also\nAnimating views with block objects\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "animateWithDuration:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622515-animatewithduration",
    "html": "Parameters\nduration\n\nThe total duration of the animations, measured in seconds. If you specify a negative value or 0, the changes are made without animating them.\n\nanimations\n\nA block object containing the changes to commit to the views. This is where you programmatically change any animatable properties of the views in your view hierarchy. This block takes no parameters and has no return value. This parameter must not be NULL.\n\ncompletion\n\nA block object to be executed when the animation sequence ends. This block has no return value and takes a single Boolean argument that indicates whether or not the animations actually finished before the completion handler was called. If the duration of the animation is 0, this block is performed at the beginning of the next run loop cycle. This parameter may be NULL.\n\nDiscussion\n\nThis method performs the specified animations immediately using the UIViewAnimationOptionCurveEaseInOut and UIViewAnimationOptionTransitionNone animation options.\n\nFor example, if you want to fade a view until it is totally transparent and then remove it from your view hierarchy, you could use code similar to the following:\n\n[UIView animateWithDuration:0.2\n     animations:^{view.alpha = 0.0;}\n     completion:^(BOOL finished){ [view removeFromSuperview]; }];\n\n\nDuring an animation, user interactions are temporarily disabled for the views being animated. (Prior to iOS 5, user interactions are disabled for the entire application.)\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "UIView.AnimationCurve | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/animationcurve",
    "html": "Topics\nConstants\ncase easeInOut\nAn ease-in ease-out curve causes the animation to begin slowly, accelerate through the middle of its duration, and then slow again before completing. This is the default curve for most animations.\ncase easeIn\nAn ease-in curve causes the animation to begin slowly, and then speed up as it progresses.\ncase easeOut\nAn ease-out curve causes the animation to begin quickly, and then slow down as it completes.\ncase linear\nA linear animation curve causes an animation to occur evenly over its duration.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "UISemanticContentAttributeSpatial | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisemanticcontentattribute/uisemanticcontentattributespatial",
    "html": "Discussion\n\nThese views aren’t flipped when switching between left-to-right and right-to-left layouts."
  },
  {
    "title": "UIUserInterfaceLayoutDirectionRightToLeft | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiuserinterfacelayoutdirection/uiuserinterfacelayoutdirectionrighttoleft",
    "html": "Discussion\n\nThis value is appropriate when running with localizations such as Arabic or Hebrew that should have the user interface layout origin on the right edge of the coordinate system."
  },
  {
    "title": "reconfigureItemsAtIndexPaths: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/3801889-reconfigureitemsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects identifying the items you want to update.\n\nDiscussion\n\nTo update the contents of existing (including prefetched) cells without replacing them with new cells, use this method instead of reloadItemsAtIndexPaths:. For optimal performance, choose to reconfigure items instead of reloading items unless you have an explicit need to replace the existing cell with a new cell.\n\nYour cell provider must dequeue the same type of cell for the provided index path, and must return the same existing cell for a given index path. Because this method reconfigures existing cells, the collection view doesn’t call prepareForReuse for each cell dequeued. If you need to return a different type of cell for an index path, use reloadItemsAtIndexPaths: instead.\n\nIf your cells are self-sizing, the collection view resizes your cells after reconfiguring them.\n\nBy default, the collection view animates any size or layout changes that result from reconfiguration. To reconfigure cells without animation, use UIView’s performWithoutAnimation: when you call this method. Alternatively, to avoid animations when setting specific properties, use performWithoutAnimation: in your cell configuration logic.\n\nIf your collection view uses a custom implementation of UICollectionViewDataSource, use this method. If your collection view uses a diffable data source, use reconfigureItemsWithIdentifiers: on NSDiffableDataSourceSnapshot instead.\n\nSee Also\nReloading content\nhasUncommittedUpdates\nA Boolean value that indicates whether the collection view contains drop placeholders or is reordering its items as part of handling a drop.\n- reloadData\nReloads all of the data for the collection view.\n- reloadSections:\nReloads the data in the specified sections of the collection view.\n- reloadItemsAtIndexPaths:\nReloads just the items at the specified index paths."
  },
  {
    "title": "reloadedSectionIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857605-reloadedsectionidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the sections that the view reloads when you apply the snapshot to your data source.\n\nSee Also\nReloading data\n- reconfigureItemsWithIdentifiers:\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nreconfiguredItemIdentifiers\nIdentifies the items reconfigured by the changes to the snapshot.\n- reloadItemsWithIdentifiers:\nReloads the data within the specified items in the snapshot.\nreloadedItemIdentifiers\nIdentifies the items reloaded by the changes to the snapshot.\n- reloadSectionsWithIdentifiers:\nReloads the data within the specified sections of the snapshot."
  },
  {
    "title": "reloadItemsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182916-reloaditemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to reload in the snapshot.\n\nSee Also\nReloading data\n- reconfigureItemsWithIdentifiers:\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nreconfiguredItemIdentifiers\nIdentifies the items reconfigured by the changes to the snapshot.\nreloadedItemIdentifiers\nIdentifies the items reloaded by the changes to the snapshot.\n- reloadSectionsWithIdentifiers:\nReloads the data within the specified sections of the snapshot.\nreloadedSectionIdentifiers\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "reconfiguredItemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857603-reconfigureditemidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the items that the view reconfigures when you apply the snapshot to your data source.\n\nSee Also\nReloading data\n- reconfigureItemsWithIdentifiers:\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\n- reloadItemsWithIdentifiers:\nReloads the data within the specified items in the snapshot.\nreloadedItemIdentifiers\nIdentifies the items reloaded by the changes to the snapshot.\n- reloadSectionsWithIdentifiers:\nReloads the data within the specified sections of the snapshot.\nreloadedSectionIdentifiers\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "moveSectionWithIdentifier:beforeSectionWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182912-movesectionwithidentifier",
    "html": "Parameters\nfromSectionIdentifier\n\nThe identifier of the section to move in the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section before which to move the specified section.\n\nSee Also\nReordering items and sections\n- moveItemWithIdentifier:afterItemWithIdentifier:\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\n- moveItemWithIdentifier:beforeItemWithIdentifier:\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\n- moveSectionWithIdentifier:afterSectionWithIdentifier:\nMoves the section from its current position in the snapshot to the position immediately after the specified section."
  },
  {
    "title": "moveSectionWithIdentifier:afterSectionWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182911-movesectionwithidentifier",
    "html": "Parameters\nfromSectionIdentifier\n\nThe identifier of the section to move in the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section after which to move the specified section.\n\nSee Also\nReordering items and sections\n- moveItemWithIdentifier:afterItemWithIdentifier:\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\n- moveItemWithIdentifier:beforeItemWithIdentifier:\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\n- moveSectionWithIdentifier:beforeSectionWithIdentifier:\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "UIView.AutoresizingMask | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/autoresizingmask",
    "html": "Topics\nConstants\nstatic var flexibleLeftMargin: UIView.AutoresizingMask\nResizing performed by expanding or shrinking a view in the direction of the left margin.\nstatic var flexibleWidth: UIView.AutoresizingMask\nResizing performed by expanding or shrinking a view’s width.\nstatic var flexibleRightMargin: UIView.AutoresizingMask\nResizing performed by expanding or shrinking a view in the direction of the right margin.\nstatic var flexibleTopMargin: UIView.AutoresizingMask\nResizing performed by expanding or shrinking a view in the direction of the top margin.\nstatic var flexibleHeight: UIView.AutoresizingMask\nResizing performed by expanding or shrinking a view's height.\nstatic var flexibleBottomMargin: UIView.AutoresizingMask\nResizing performed by expanding or shrinking a view in the direction of the bottom margin.\nInitializers\ninit(rawValue: UInt)\nCreates an autoresizing mask structure with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable"
  },
  {
    "title": "insertItemsWithIdentifiers:afterItemWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182903-insertitemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to add to the snapshot.\n\nitemIdentifier\n\nThe identifier of the item after which to insert the new items.\n\nSee Also\nInserting items and sections\n- insertItemsWithIdentifiers:beforeItemWithIdentifier:\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\n- insertSectionsWithIdentifiers:afterSectionWithIdentifier:\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\n- insertSectionsWithIdentifiers:beforeSectionWithIdentifier:\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "deleteSectionsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182900-deletesectionswithidentifiers",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to delete from the snapshot.\n\nSee Also\nRemoving items and sections\n- deleteAllItems\nDeletes all of the items from the snapshot.\n- deleteItemsWithIdentifiers:\nDeletes the items with the specified identifiers from the snapshot."
  },
  {
    "title": "numberOfSections | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182915-numberofsections",
    "html": "See Also\nGetting item and section metrics\nnumberOfItems\nThe number of items in the snapshot.\n- numberOfItemsInSection:\nReturns the number of items in the specified section of the snapshot."
  },
  {
    "title": "frameForAlignmentRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622603-frameforalignmentrect",
    "html": "Parameters\nalignmentRect\n\nThe alignment rectangle whose corresponding frame is desired.\n\nReturn Value\n\nThe frame for the specified alignment rectangle\n\nDiscussion\n\nThe constraint-based layout system uses alignment rectangles to align views, rather than their frame. This allows custom views to be aligned based on the location of their content while still having a frame that encompasses any ornamentation they need to draw around their content, such as shadows or reflections.\n\nThe default implementation returns alignmentRect modified by the view’s alignmentRectInsets. Most custom views can override alignmentRectInsets to specify the location of their content within their frame. Custom views that require arbitrary transformations can override alignmentRectForFrame: and frameForAlignmentRect: to describe the location of their content. These two methods must always be inverses of each other.\n\nSee Also\nAligning views in Auto Layout\n- alignmentRectForFrame:\nReturns the view’s alignment rectangle for a given frame.\nalignmentRectInsets\nThe insets from the view’s frame that define its alignment rectangle.\nviewForFirstBaselineLayout\nReturns a view used to satisfy first baseline constraints.\nviewForLastBaselineLayout\nReturns a view used to satisfy last baseline constraints."
  },
  {
    "title": "removeActionForIdentifier:forControlEvents: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3600496-removeactionforidentifier",
    "html": "See Also\nManaging the control’s targets and actions\n- addTarget:action:forControlEvents:\nAssociates a target object and action method with the control.\n- removeTarget:action:forControlEvents:\nStops the delivery of events to the specified target object.\nallTargets\nReturns all target objects associated with the control.\n- addAction:forControlEvents:\n- removeAction:forControlEvents:\n- actionsForTarget:forControlEvent:\nReturns the actions performed on a target object when the specified event occurs.\nallControlEvents\nReturns the events for which the control has associated actions.\n- enumerateEventHandlers:"
  },
  {
    "title": "appendItemsWithIdentifiers:intoSectionWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182896-appenditemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers specifying the items to add to the snapshot.\n\nsectionIdentifier\n\nThe section to which to add the items.\n\nSee Also\nCreating a snapshot\n- appendSectionsWithIdentifiers:\nAdds the sections with the specified identifiers to the snapshot.\n- appendItemsWithIdentifiers:\nAdds the items with the specified identifiers to the last section of the snapshot."
  },
  {
    "title": "numberOfItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182913-numberofitems",
    "html": "See Also\nGetting item and section metrics\nnumberOfSections\nThe number of sections in the snapshot.\n- numberOfItemsInSection:\nReturns the number of items in the specified section of the snapshot."
  },
  {
    "title": "deleteAllItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182898-deleteallitems",
    "html": "See Also\nRemoving items and sections\n- deleteItemsWithIdentifiers:\nDeletes the items with the specified identifiers from the snapshot.\n- deleteSectionsWithIdentifiers:\nDeletes the sections with the specified identifiers from the snapshot."
  },
  {
    "title": "UILayoutPriorityRequired | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilayoutpriorityrequired",
    "html": "Discussion\n\nDon’t specify a layout constraint that exceeds this number."
  },
  {
    "title": "snapshotViewAfterScreenUpdates: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622531-snapshotviewafterscreenupdates",
    "html": "Parameters\nafterUpdates\n\nA Boolean value that specifies whether the snapshot should be taken after recent changes have been incorporated. Pass the value NO to capture the screen in its current state, which might not include recent changes.\n\nReturn Value\n\nA new view object based on a snapshot of the current view’s rendered contents.\n\nDiscussion\n\nThis method very efficiently captures the current rendered appearance of a view and uses it to build a new snapshot view. You can use the returned view as a visual stand-in for the current view in your app. For example, you might use a snapshot view for animations where updating a large view hierarchy might be expensive. Because the content is captured from the already rendered content, this method reflects the current visual appearance of the view and is not updated to reflect animations that are scheduled or in progress. However, calling this method is faster than trying to render the contents of the current view into a bitmap image yourself.\n\nBecause the returned snapshot is a view object, you can modify it and its layer object as needed. However, you cannot change the contents property of the snapshot view’s layer; attempts to do so fail silently. If the current view is not yet rendered, perhaps because it is not yet onscreen, the snapshot view has no visible content.\n\nYou can call this method on a previously generated snapshot to obtain a new snapshot. For example, you could do so after you change properties of a previous snapshot (such as its alpha value) and want a new snapshot that includes those changes.\n\nIf you want to apply a graphical effect, such as blur, to a snapshot, use the drawViewHierarchyInRect:afterScreenUpdates: method instead.\n\nSee Also\nCapturing a view snapshot\n- resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets:\nReturns a snapshot view based on the specified contents of the current view, with stretchable insets.\n- drawViewHierarchyInRect:afterScreenUpdates:\nRenders a snapshot of the complete view hierarchy as visible onscreen into the current context."
  },
  {
    "title": "NSLayoutAttributeLastBaseline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutattribute/nslayoutattributelastbaseline",
    "html": "Discussion\n\nFor objects with more than one line of text, this is the baseline for the bottommost line of text."
  },
  {
    "title": "active | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/1527000-active",
    "html": "Discussion\n\nYou can activate or deactivate a constraint by changing this property. Note that only active constraints affect the calculated layout. If you try to activate a constraint whose items have no common ancestor, an exception is thrown. For newly created constraints, the active property is NO by default.\n\nActivating or deactivating the constraint calls addConstraint: and removeConstraint: on the view that is the closest common ancestor of the items managed by this constraint. Use this property instead of calling addConstraint: or removeConstraint: directly.\n\nSee Also\nActivating and deactivating constraints\n+ activateConstraints:\nActivates each constraint in the specified array.\n+ deactivateConstraints:\nDeactivates each constraint in the specified array."
  },
  {
    "title": "UIControlStateFocused | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrolstate/uicontrolstatefocused",
    "html": "Discussion\n\nIn focus-based navigation systems, a control enters this state when it receives the focus. A focused control changes its appearance to indicate that it has focus, and this appearance differs from the appearance of the control when it’s highlighted or selected. Further interactions with the control can result in it also becoming highlighted or selected."
  },
  {
    "title": "activateConstraints: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/1526955-activateconstraints",
    "html": "Parameters\nconstraints\n\nAn array of constraints to activate.\n\nDiscussion\n\nThis convenience method provides an easy way to activate a set of constraints with one call. The effect of this method is the same as setting the active property of each constraint to YES. Typically, using this method is more efficient than activating each constraint individually.\n\nSee Also\nActivating and deactivating constraints\nactive\nThe active state of the constraint.\n+ deactivateConstraints:\nDeactivates each constraint in the specified array."
  },
  {
    "title": "NSDictionaryOfVariableBindings | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdictionaryofvariablebindings",
    "html": "Discussion\n\nThis macro is particularly useful when creating Auto Layout constraints. For example, the following code creates the dictionary { @\"button1\" = button1, @\"button2\" = button2 }.\n\nSee Also\nConstraints\nPositioning content within layout margins\nPosition views so that they aren’t crowded by other content.\nPositioning content relative to the safe area\nPosition views so that they aren’t obstructed by other content.\nNSLayoutConstraint\nThe relationship between two user interface objects that must be satisfied by the constraint-based layout system.\nUILayoutSupport\nA set of methods that provide layout support and access to layout anchors."
  },
  {
    "title": "animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622594-animatewithduration",
    "html": "Parameters\nduration\n\nThe total duration of the animations, measured in seconds. If you specify a negative value or 0, the changes are made without animating them.\n\ndelay\n\nThe amount of time (measured in seconds) to wait before beginning the animations. Specify a value of 0 to begin the animations immediately.\n\ndampingRatio\n\nThe damping ratio for the spring animation as it approaches its quiescent state.\n\nTo smoothly decelerate the animation without oscillation, use a value of 1. Employ a damping ratio closer to zero to increase oscillation.\n\nvelocity\n\nThe initial spring velocity. For smooth start to the animation, match this value to the view’s velocity as it was prior to attachment.\n\nA value of 1 corresponds to the total animation distance traversed in one second. For example, if the total animation distance is 200 points and you want the start of the animation to match a view velocity of 100 pt/s, use a value of 0.5.\n\noptions\n\nA mask of options indicating how you want to perform the animations. For a list of valid constants, see UIViewAnimationOptions.\n\nanimations\n\nA block object containing the changes to commit to the views. This is where you programmatically change any animatable properties of the views in your view hierarchy. This block takes no parameters and has no return value. This parameter must not be NULL.\n\ncompletion\n\nA block object to be executed when the animation sequence ends. This block has no return value and takes a single Boolean argument that indicates whether or not the animations actually finished before the completion handler was called. If the duration of the animation is 0, this block is performed at the beginning of the next run loop cycle. This parameter may be NULL.\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "addKeyframeWithRelativeStartTime:relativeDuration:animations: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622554-addkeyframewithrelativestarttime",
    "html": "Parameters\nframeStartTime\n\nThe time at which to start the specified animations. This value must be in the range 0 to 1, where 0 represents the start of the overall animation and 1 represents the end of the overall animation. For example, for an animation that is two seconds in duration, specifying a start time of 0.5 causes the animations to begin executing one second after the start of the overall animation.\n\nframeDuration\n\nThe length of time over which to animate to the specified value. This value must be in the range 0 to 1 and indicates the amount of time relative to the overall animation length. If you specify a value of 0, any properties you set in the animations block update immediately at the specified start time. If you specify a nonzero value, the properties animate over that amount of time. For example, for an animation that is two seconds in duration, specifying a duration of 0.5 results in an animation duration of one second.\n\nanimations\n\nA block object containing the animations you want to perform. This is where you programmatically change any animatable properties of the views in your view hierarchy. This block takes no parameters and has no return value. This parameter must not be nil.\n\nDiscussion\n\nTo animate view properties during a keyframe animation, call this method from within the animation block you pass to the animateKeyframesWithDuration:delay:options:animations:completion: method. To animate between different values, or to tweak the timing of your view property animations, you can call this method multiple times within a block.\n\nThe view properties you change in the animations block animate over the timespan you specify in frameDuration parameter. The properties do not begin animating until the time you specify in the frameStartTime parameter. After the frame start time, the animation executes over its specified duration or until interrupted by another animation.\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ animateWithDuration:animations:\nAnimate changes to one or more views using the specified duration.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "UIControlStateHighlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrolstate/uicontrolstatehighlighted",
    "html": "Discussion\n\nA control becomes highlighted when a touch event enters the control’s bounds, and it loses that highlight when there’s a touch-up event or when the touch event exits the control’s bounds. You can retrieve and set this value through the highlighted property."
  },
  {
    "title": "animateWithDuration:animations: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622418-animatewithduration",
    "html": "Parameters\nduration\n\nThe total duration of the animations, measured in seconds. If you specify a negative value or 0, the changes are made without animating them.\n\nanimations\n\nA block object containing the changes to commit to the views. This is where you programmatically change any animatable properties of the views in your view hierarchy. This block takes no parameters and has no return value. This parameter must not be NULL.\n\nDiscussion\n\nThis method performs the specified animations immediately using the UIViewAnimationOptionCurveEaseInOut and UIViewAnimationOptionTransitionNone animation options.\n\nDuring an animation, user interactions are temporarily disabled for the views being animated. (Prior to iOS 5, user interactions are disabled for the entire application.)\n\nSee Also\nAnimating views with block objects\n+ animateWithSpringDuration:bounce:initialSpringVelocity:delay:options:animations:completion:\nAnimates changes to one or more views using a spring animation with the specified duration, bounce, initial velocity, delay, options, and completion handler.\n+ animateWithDuration:delay:options:animations:completion:\nAnimate changes to one or more views using the specified duration, delay, options, and completion handler.\n+ animateWithDuration:animations:completion:\nAnimate changes to one or more views using the specified duration and completion handler.\n+ transitionWithView:duration:options:animations:completion:\nCreates a transition animation for the specified container view.\n+ transitionFromView:toView:duration:options:completion:\nCreates a transition animation between the specified views using the given parameters.\n+ animateKeyframesWithDuration:delay:options:animations:completion:\nCreates an animation block object that can be used to set up keyframe-based animations for the current view.\n+ addKeyframeWithRelativeStartTime:relativeDuration:animations:\nSpecifies the timing and animation values for a single frame of a keyframe animation.\n+ performSystemAnimation:onViews:options:animations:completion:\nPerforms a specified system-provided animation on one or more views, along with optional parallel animations that you define.\n+ animateWithDuration:delay:usingSpringWithDamping:initialSpringVelocity:options:animations:completion:\nPerforms a view animation using a timing curve corresponding to the motion of a physical spring.\n+ performWithoutAnimation:\nDisables a view transition animation.\n+ modifyAnimationsWithRepeatCount:autoreverses:animations:\nRepeats the specified animations a specific number of times, optionally running the animation forward and backward."
  },
  {
    "title": "UISemanticContentAttributePlayback | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisemanticcontentattribute/uisemanticcontentattributeplayback",
    "html": "Discussion\n\nThese views aren’t flipped when switching between left-to-right and right-to-left layouts."
  },
  {
    "title": "resizableSnapshotViewFromRect:afterScreenUpdates:withCapInsets: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622597-resizablesnapshotviewfromrect",
    "html": "Parameters\nrect\n\nThe portion of the view that you want to capture. The rectangle must be in the bounds coordinate space of the current view.\n\nafterUpdates\n\nA Boolean value that specifies whether the snapshot should be taken after recent changes have been incorporated. Pass the value NO if you want to capture the screen in its current state, which might not include recent changes.\n\ncapInsets\n\nThe edge insets that define the stretchable portion of the returned view’s content. You can specify UIEdgeInsetsZero if you do not want the contents of the returned view to have a stretchable area.\n\nReturn Value\n\nA new view object containing a snapshot of the current view’s rendered contents.\n\nDiscussion\n\nThis method very efficiently captures the current rendered appearance of a view and uses it to build a new snapshot view with stretchable insets. You can use the returned view as a visual stand-in for the current view in your app. For example, you might use a snapshot view for animations where updating a large view hierarchy might be expensive. Because the content is captured from the already rendered content, this method reflects the current visual appearance of the view and is not updated to reflect animations that are scheduled or in progress. However, calling this method is faster than trying to render the contents of the current view into a bitmap image yourself.\n\nBecause the returned snapshot is a view object, you can modify it and its layer object as needed. However, you cannot change the contents property of the snapshot view’s layer; attempts to do so fail silently. If the current view is not yet rendered, perhaps because it is not yet onscreen, the snapshot view has no visible content.\n\nYou can call this method on a previously generated snapshot to obtain a new snapshot. For example, you could do so after you change properties of a previous snapshot (such as its alpha value) and want a new snapshot that includes those changes.\n\nIf you want to apply a graphical effect, such as blur, to a snapshot, use the drawViewHierarchyInRect:afterScreenUpdates: method instead.\n\nIf you specify nonzero edge insets in the capInsets parameter, those values determine the returned snapshot’s stretchable content area.\n\nSee Also\nCapturing a view snapshot\n- snapshotViewAfterScreenUpdates:\nReturns a snapshot view based on the contents of the current view.\n- drawViewHierarchyInRect:afterScreenUpdates:\nRenders a snapshot of the complete view hierarchy as visible onscreen into the current context."
  },
  {
    "title": "moveItemWithIdentifier:afterItemWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182909-moveitemwithidentifier",
    "html": "Parameters\nfromIdentifier\n\nThe identifier of the item to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the item after which to move the specified item.\n\nSee Also\nReordering items and sections\n- moveItemWithIdentifier:beforeItemWithIdentifier:\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\n- moveSectionWithIdentifier:afterSectionWithIdentifier:\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\n- moveSectionWithIdentifier:beforeSectionWithIdentifier:\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "actionsForTarget:forControlEvent: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618251-actionsfortarget",
    "html": "Parameters\ntarget\n\nThe target object—that is, an object that has an action method associated with this control. You must pass an explicit object for this method to return a meaningful result. Specifying nil always returns nil.\n\ncontrolEvent\n\nA single control event constant representing the event for which you want the list of action methods. For a list of possible constants, see UIControlEvents\n\nReturn Value\n\nAn array NSString objects containing the selector names of the corresponding action methods, or nil if there are no action methods associated with the specified target object and control event.\n\nDiscussion\n\nUse this method to determine what action methods are called on the specified object in response to a particular control event. You can use the NSSelectorFromString function to convert the returned strings to valid selectors, as needed.\n\nSee Also\nManaging the control’s targets and actions\n- addTarget:action:forControlEvents:\nAssociates a target object and action method with the control.\n- removeTarget:action:forControlEvents:\nStops the delivery of events to the specified target object.\nallTargets\nReturns all target objects associated with the control.\n- addAction:forControlEvents:\n- removeAction:forControlEvents:\n- removeActionForIdentifier:forControlEvents:\nallControlEvents\nReturns the events for which the control has associated actions.\n- enumerateEventHandlers:\nRelated Documentation\n- sendAction:to:forEvent:\nCalls the specified action method.\n- sendActionsForControlEvents:\nCalls the action methods associated with the specified events."
  },
  {
    "title": "appendSectionsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3182897-appendsectionswithidentifiers",
    "html": "Parameters\nsectionIdentifiers\n\nAn array of identifiers specifying the sections to add to the snapshot.\n\nSee Also\nCreating a snapshot\n- appendItemsWithIdentifiers:intoSectionWithIdentifier:\nAdds the items with the specified identifiers to the specified section of the snapshot.\n- appendItemsWithIdentifiers:\nAdds the items with the specified identifiers to the last section of the snapshot."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618231-highlighted",
    "html": "Discussion\n\nWhen the value of this property is YES, the control draws a highlight; otherwise, the control doesn’t draw a highlight. Controls automatically set and clear this state in response to appropriate touch events. You can change the value of this property as needed to apply or remove a highlight programmatically\n\nThe default value of this property is NO for a newly created control. You can set a control’s initial selected state in your storyboard file.\n\nSee Also\nManaging state\nstate\nThe state of the control, specified as a bit mask value.\nUIControlState\nConstants describing the state of a control.\nenabled\nA Boolean value indicating whether the control is in the enabled state.\nselected\nA Boolean value indicating whether the control is in the selected state."
  },
  {
    "title": "userInterfaceLayoutDirectionForSemanticContentAttribute: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622480-userinterfacelayoutdirectionfors",
    "html": "Parameters\nattribute\n\nThe semantic content attribute for a view.\n\nReturn Value\n\nThe user interface layout direction (left-to-right or right-to-left).\n\nDiscussion\n\nWhen creating a view that contains subviews, you can use this method to determine whether the subviews should be flipped, and lay out the views in the appropriate order.\n\nSee Also\nAdjusting the user interface\noverrideUserInterfaceStyle\nThe user interface style adopted by the view and all of its subviews.\nsemanticContentAttribute\nA semantic description of the view’s contents, used to determine whether the view should be flipped when switching between left-to-right and right-to-left layouts.\neffectiveUserInterfaceLayoutDirection\nThe user interface layout direction appropriate for arranging the immediate content of the view.\n+ userInterfaceLayoutDirectionForSemanticContentAttribute:relativeToLayoutDirection:\nReturns the layout direction implied by the specified semantic content attribute, relative to the specified layout direction."
  },
  {
    "title": "encodeRestorableStateWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622516-encoderestorablestatewithcoder",
    "html": "Parameters\ncoder\n\nThe coder object to use to encode the state of the view.\n\nDiscussion\n\nIf your app supports state preservation, you can override this method for any views that have state information that should be saved between launches of your app. You should save only the data required to return the view to its current configuration. Do not save the view object itself and do not save any data that could be determined by other means at launch time.\n\nFew views should need to save state information. Most views should just be configured using the data from their view controller. However, this method is available for those views that have user-configurable state that would be otherwise lost between app launches.\n\nYour implementation of this method can encode other restorable view and view controller objects that it needs to reference. Encoding a restorable view or view controller writes that object’s restoration identifier to the coder. (That identifier is used during the decode process to locate the new version of the object.) If the view or view controller defines its own version of this method, that method is also called at some point so that the object can encode its own state.\n\nApart from views and view controllers, other objects follow the normal serialization process and must adopt the NSCoding protocol before they can be encoded. Encoding such objects embeds the object’s contents in the archive directly. During the decode process, a new object is created and initialized with the data from the archive.\n\nIt is recommended that you call super at some point during your implementation to give parent classes an opportunity to save their state information.\n\nSee Also\nPreserving and restoring state\nrestorationIdentifier\nThe identifier that determines whether the view supports state restoration.\n- decodeRestorableStateWithCoder:\nDecodes and restores state-related information for the view."
  },
  {
    "title": "UITableViewSelfSizingInvalidationEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewselfsizinginvalidation/uitableviewselfsizinginvalidationenabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize on a self-sizing cell or its contentView causes the cell to resize if necessary."
  },
  {
    "title": "UILayoutPriorityFittingSizeLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilayoutpriorityfittingsizelevel",
    "html": "Discussion\n\nWhen you send a systemLayoutSizeFittingSize: message to a view, the size fitting most closely to the target size is computed. This priority is quite low. It’s generally not appropriate to make a constraint at exactly this priority. You want to be higher or lower."
  },
  {
    "title": "elementKindSectionHeader | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/1617700-elementkindsectionheader",
    "html": "See Also\nIdentifying collection view elements\nenum UICollectionView.ElementCategory\nConstants specifying the type of view.\nclass let elementKindSectionFooter: String\nA supplementary view that identifies the footer for a given section."
  },
  {
    "title": "sendActionsForControlEvents: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618211-sendactionsforcontrolevents",
    "html": "Parameters\ncontrolEvents\n\nA bitmask whose set flags specify the control events for which action messages are sent. See UIControlEvents for bitmask constants.\n\nDiscussion\n\nYou call this method when you want the control to perform the actions associated with the specified events. This method iterates over the control’s registered targets and action methods and calls the sendAction:to:forEvent: method for each one that is associated with an event in the controlEvents parameter.\n\nSee Also\nTriggering actions\n- sendAction:\n- sendAction:to:forEvent:\nCalls the specified action method.\nRelated Documentation\n- addTarget:action:forControlEvents:\nAssociates a target object and action method with the control."
  },
  {
    "title": "UIControl.ContentVerticalAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/contentverticalalignment",
    "html": "Overview\n\nYou use these constants as the value of the contentVerticalAlignment property.\n\nTopics\nConstants\ncase center\nAligns the content vertically in the center of the control.\ncase top\nAligns the content vertically at the top in the control (the default).\ncase bottom\nAligns the content vertically at the bottom in the control.\ncase fill\nAligns the content vertically to fill the content rectangle; images may be stretched.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying content alignment\nvar contentVerticalAlignment: UIControl.ContentVerticalAlignment\nThe vertical alignment of content within the control’s bounds.\nvar contentHorizontalAlignment: UIControl.ContentHorizontalAlignment\nThe horizontal alignment of content within the control’s bounds.\nvar effectiveContentHorizontalAlignment: UIControl.ContentHorizontalAlignment\nThe horizontal alignment currently in effect for the control.\nenum UIControl.ContentHorizontalAlignment\nThe horizontal alignment of content (text and images) within a control."
  },
  {
    "title": "UIControlStateDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrolstate/uicontrolstatedisabled",
    "html": "Discussion\n\nUser interactions with disabled control have no effect and the control draws itself with a dimmed appearance to reflect that it’s disabled. You can retrieve and set this value through the enabled property."
  },
  {
    "title": "UIControl.ContentHorizontalAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/contenthorizontalalignment",
    "html": "Overview\n\nYou use these constants as the value of the contentHorizontalAlignment property.\n\nTopics\nConstants\ncase center\nAligns the content horizontally in the center of the control.\ncase left\nAligns the content horizontally from the left of the control (the default).\ncase right\nAligns the content horizontally from the right of the control.\ncase fill\nAligns the content horizontally to fill the content rectangles; text may wrap and images may be stretched.\ncase leading\nAligns the content horizontally from the leading edge of the control.\ncase trailing\nAligns the content horizontally from the trailing edge of the control.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying content alignment\nvar contentVerticalAlignment: UIControl.ContentVerticalAlignment\nThe vertical alignment of content within the control’s bounds.\nenum UIControl.ContentVerticalAlignment\nConstants for specifying the vertical alignment of content (text and images) in a control.\nvar contentHorizontalAlignment: UIControl.ContentHorizontalAlignment\nThe horizontal alignment of content within the control’s bounds.\nvar effectiveContentHorizontalAlignment: UIControl.ContentHorizontalAlignment\nThe horizontal alignment currently in effect for the control."
  },
  {
    "title": "decodeRestorableStateWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622638-decoderestorablestatewithcoder",
    "html": "Parameters\ncoder\n\nThe coder object to use to decode the state of the view.\n\nDiscussion\n\nIf your app supports state restoration, you should override this method for any views for which you also overrode the encodeRestorableStateWithCoder: method. Your implementation of this method should use any saved state information to restore the view to its previous configuration. If your encodeRestorableStateWithCoder: method called super, this method should similarly call super at some point in its implementation.\n\nSee Also\nPreserving and restoring state\nrestorationIdentifier\nThe identifier that determines whether the view supports state restoration.\n- encodeRestorableStateWithCoder:\nEncodes state-related information for the view."
  },
  {
    "title": "userInterfaceLayoutDirectionForSemanticContentAttribute:relativeToLayoutDirection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1648535-userinterfacelayoutdirectionfors",
    "html": "Parameters\nsemanticContentAttribute\n\nThe semantic content attribute for a view.\n\nlayoutDirection\n\nThe user interface layout direction (UIUserInterfaceLayoutDirectionLeftToRight or UIUserInterfaceLayoutDirectionRightToLeft).\n\nReturn Value\n\nThe layout direction implied by the semantic content attribute and relative to the layout direction.\n\nDiscussion\n\nFor example, when this method is passed a layout direction of UIUserInterfaceLayoutDirectionRightToLeft and a semantic content attribute of UISemanticContentAttributePlayback, it returns UIUserInterfaceLayoutDirectionLeftToRight. Although layout and drawing code can use this method to determine how to arrange elements, it might be easier to query the container view’s effectiveUserInterfaceLayoutDirection property instead.\n\nSee Also\nAdjusting the user interface\noverrideUserInterfaceStyle\nThe user interface style adopted by the view and all of its subviews.\nsemanticContentAttribute\nA semantic description of the view’s contents, used to determine whether the view should be flipped when switching between left-to-right and right-to-left layouts.\neffectiveUserInterfaceLayoutDirection\nThe user interface layout direction appropriate for arranging the immediate content of the view.\n+ userInterfaceLayoutDirectionForSemanticContentAttribute:\nReturns the user interface direction for the given semantic content attribute."
  },
  {
    "title": "initWithFrame: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3600493-initwithframe",
    "html": "See Also\nCreating a control\n- initWithFrame:primaryAction:\nCreates a control with the specified frame and primary action.\n- initWithCoder:\nCreates a control from data in an unarchiver."
  },
  {
    "title": "reconfigureItemsWithIdentifiers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3801890-reconfigureitemswithidentifiers",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers corresponding to the items to update data for in the snapshot.\n\nDiscussion\n\nTo update the contents of existing (including prefetched) cells without replacing them with new cells, use this method instead of reloadItemsWithIdentifiers:. For optimal performance, choose to reconfigure items instead of reloading items unless you have an explicit need to replace the existing cell with a new cell.\n\nYour cell provider must dequeue the same type of cell for the provided index path, and must return the same existing cell for a given index path. Because this method reconfigures existing cells, the collection view or table view doesn’t call prepareForReuse for each cell dequeued. If you need to return a different type of cell for an index path, use reloadItemsWithIdentifiers: instead.\n\nIf your cells are self-sizing, the collection view or table view resizes your cells after reconfiguring them.\n\nSet the animatingDifferences parameter to tell the collection view or table view whether to animate any size or layout changes that are a result of reconfiguration when you apply the snapshot to your data source. To avoid animations when setting specific properties, use performWithoutAnimation: in your cell configuration logic.\n\nIf your collection view or table view uses a diffable data source, use this method. If your collection view uses a custom implementation of UICollectionViewDataSource, use reconfigureItemsAtIndexPaths: instead. If your table view uses a custom implementation of UITableViewDataSource, use reconfigureRowsAtIndexPaths: instead.\n\nSee Also\nReloading data\nreconfiguredItemIdentifiers\nIdentifies the items reconfigured by the changes to the snapshot.\n- reloadItemsWithIdentifiers:\nReloads the data within the specified items in the snapshot.\nreloadedItemIdentifiers\nIdentifies the items reloaded by the changes to the snapshot.\n- reloadSectionsWithIdentifiers:\nReloads the data within the specified sections of the snapshot.\nreloadedSectionIdentifiers\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "UITableViewSelfSizingInvalidationEnabledIncludingConstraints | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewselfsizinginvalidation/uitableviewselfsizinginvalidationenabledincludingconstraints",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize on a self-sizing cell or its contentView causes the cell to resize if necessary. Additionally, any Auto Layout change within the contentView of a self-sizing cell automatically calls invalidateIntrinsicContentSize."
  },
  {
    "title": "mainSystem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenusystem/3327314-mainsystem",
    "html": "Discussion\n\nIn Mac apps built with Mac Catalyst, the main menu system is the app’s menu bar.\n\nSee Also\nGetting a menu system\ncontextSystem\nThe context menu system."
  },
  {
    "title": "constraintsAffectingLayoutForAxis: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622432-constraintsaffectinglayoutforaxi",
    "html": "Parameters\naxis\n\nThe axis for which the constraints should be found.\n\nReturn Value\n\nThe constraints impacting the layout of the view for the specified axis.\n\nDiscussion\n\nThe returned set of constraints may not all include the view explicitly. Constraints that impact the location of the view implicitly may also be included. While this provides a good starting point for debugging, there is no guarantee that the returned set of constraints will include all of the constraints that have an impact on the view’s layout in the given orientation.\n\nThis method should only be used for debugging constraint-based layout. No application should ship with calls to this method as part of its operation.\n\nSee Also\nDebugging Auto Layout\nhasAmbiguousLayout\nA Boolean value that determines whether the constraints impacting the layout of the view incompletely specify the location of the view.\n- exerciseAmbiguityInLayout\nRandomly changes the frame of a view with an ambiguous layout between the different valid values."
  },
  {
    "title": "UIView.ContentMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/contentmode",
    "html": "Topics\nConstants\ncase scaleToFill\nThe option to scale the content to fit the size of itself by changing the aspect ratio of the content if necessary.\ncase scaleAspectFit\nThe option to scale the content to fit the size of the view by maintaining the aspect ratio. Any remaining area of the view’s bounds is transparent.\ncase scaleAspectFill\nThe option to scale the content to fill the size of the view. Some portion of the content may be clipped to fill the view’s bounds.\ncase redraw\nThe option to redisplay the view when the bounds change by invoking the setNeedsDisplay() method.\ncase center\nThe option to center the content in the view’s bounds, keeping the proportions the same.\ncase top\nThe option to center the content aligned at the top in the view’s bounds.\ncase bottom\nThe option to center the content aligned at the bottom in the view’s bounds.\ncase left\nThe option to align the content on the left of the view.\ncase right\nThe option to align the content on the right of the view.\ncase topLeft\nThe option to align the content in the top-left corner of the view.\ncase topRight\nThe option to align the content in the top-right corner of the view.\ncase bottomLeft\nThe option to align the content in the bottom-left corner of the view.\ncase bottomRight\nThe option to align the content in the bottom-right corner of the view.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the resizing behavior\nvar contentMode: UIView.ContentMode\nA flag used to determine how a view lays out its content when its bounds change.\nfunc sizeThatFits(CGSize) -> CGSize\nAsks the view to calculate and return the size that best fits the specified size.\nfunc sizeToFit()\nResizes and moves the receiver view so it just encloses its subviews.\nvar autoresizesSubviews: Bool\nA Boolean value that determines whether the receiver automatically resizes its subviews when its bounds change.\nvar autoresizingMask: UIView.AutoresizingMask\nAn integer bit mask that determines how the receiver resizes itself when its superview’s bounds change."
  },
  {
    "title": "UITableViewSelfSizingInvalidationDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewselfsizinginvalidation/uitableviewselfsizinginvalidationdisabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, no sizing updates occur after calling invalidateIntrinsicContentSize on a self-sizing cell or its contentView."
  },
  {
    "title": "viewForLastBaselineLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622633-viewforlastbaselinelayout",
    "html": "Discussion\n\nFor views with multiple rows of text, the last baseline is the baseline for the bottommost row.\n\nWhen you make a constraint to a view’s NSLayoutAttributeLastBaseline attribute, Auto Layout uses the baseline of the view returned by this method. If that view does not have a baseline, Auto Layout uses the view’s bottom edge.\n\nOverride this property to return a text-based subview (for example, UILabel or a nonscrolling UITextView). The returned view must be a subview of the receiver. The default implementation returns the receiving view.\n\nSee Also\nAligning views in Auto Layout\n- alignmentRectForFrame:\nReturns the view’s alignment rectangle for a given frame.\n- frameForAlignmentRect:\nReturns the view’s frame for a given alignment rectangle.\nalignmentRectInsets\nThe insets from the view’s frame that define its alignment rectangle.\nviewForFirstBaselineLayout\nReturns a view used to satisfy first baseline constraints."
  },
  {
    "title": "alignmentRectForFrame: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622576-alignmentrectforframe",
    "html": "Parameters\nframe\n\nThe frame whose corresponding alignment rectangle is desired.\n\nReturn Value\n\nThe alignment rectangle for the specified frame.\n\nDiscussion\n\nThe constraint-based layout system uses alignment rectangles to align views, rather than their frame. This allows custom views to be aligned based on the location of their content while still having a frame that encompasses any ornamentation they need to draw around their content, such as shadows or reflections.\n\nThe default implementation returns the view’s frame modified by the view’s alignmentRectInsets. Most custom views can use alignmentRectInsets to specify the location of their content within their frame. Custom views that require arbitrary transformations can override alignmentRectForFrame: and frameForAlignmentRect: to describe the location of their content. These two methods must always be inverses of each other.\n\nSee Also\nAligning views in Auto Layout\n- frameForAlignmentRect:\nReturns the view’s frame for a given alignment rectangle.\nalignmentRectInsets\nThe insets from the view’s frame that define its alignment rectangle.\nviewForFirstBaselineLayout\nReturns a view used to satisfy first baseline constraints.\nviewForLastBaselineLayout\nReturns a view used to satisfy last baseline constraints."
  },
  {
    "title": "beginTrackingWithTouch:withEvent: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618227-begintrackingwithtouch",
    "html": "Parameters\ntouch\n\nThe object containing information about the touch event.\n\nevent\n\nThe event object containing the touch event.\n\nReturn Value\n\nYES if the control should continue tracking touch events or NO if it should stop. This value is used to update the tracking property of the control.\n\nDiscussion\n\nThe default implementation of this method always returns YES. Subclasses can override this method and use it to respond to events. Use the provided event information to detect which part of your control was hit and to set up any initial state information. If you want to continue tracking the touch event, return YES. If you want to stop tracking the touch event, return NO.\n\nSee Also\nTracking touches and redrawing controls\n- continueTrackingWithTouch:withEvent:\nNotifies the control when a touch event for the control updates.\n- endTrackingWithTouch:withEvent:\nNotifies the control when a touch event associated with the control ends.\n- cancelTrackingWithEvent:\nNotifies the control to cancel tracking related to the specified event.\ntracking\nA Boolean value that indicates whether the control is currently tracking touch events.\ntouchInside\nA Boolean value that indicates whether a tracked touch event is currently inside the control’s bounds."
  },
  {
    "title": "enumerateEventHandlers: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3600491-enumerateeventhandlers",
    "html": "See Also\nManaging the control’s targets and actions\n- addTarget:action:forControlEvents:\nAssociates a target object and action method with the control.\n- removeTarget:action:forControlEvents:\nStops the delivery of events to the specified target object.\nallTargets\nReturns all target objects associated with the control.\n- addAction:forControlEvents:\n- removeAction:forControlEvents:\n- removeActionForIdentifier:forControlEvents:\n- actionsForTarget:forControlEvent:\nReturns the actions performed on a target object when the specified event occurs.\nallControlEvents\nReturns the events for which the control has associated actions."
  },
  {
    "title": "menuAttachmentPointForConfiguration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3656349-menuattachmentpointforconfigurat",
    "html": "See Also\nManaging context menus\nAdding Context Menus in Your App\nProvide quick access to useful actions by adding context menus to your iOS app.\ncontextMenuInteraction\nA context menu interaction for the control.\ncontextMenuInteractionEnabled\nA Boolean value that determines whether the control enables its context menu interaction.\nshowsMenuAsPrimaryAction\nA Boolean value that determines whether the context menu interaction is the control’s primary action.\n- contextMenuInteraction:configurationForMenuAtLocation:\n- contextMenuInteraction:previewForDismissingMenuWithConfiguration:\n- contextMenuInteraction:previewForHighlightingMenuWithConfiguration:\n- contextMenuInteraction:willDisplayMenuForConfiguration:animator:\n- contextMenuInteraction:willEndForConfiguration:animator:"
  },
  {
    "title": "UIApplication.ExtensionPointIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/extensionpointidentifier",
    "html": "Topics\nConstants\nstatic let keyboard: UIApplication.ExtensionPointIdentifier\nThe identifier for custom keyboards.\nInitializers\ninit(rawValue: String)\nCreates a new instance with the specified raw value.\nRelationships\nConforms To\nEquatable\nHashable\nRawRepresentable\nSendable\nSee Also\nDisallowing specified app extension types\nfunc application(UIApplication, shouldAllowExtensionPointIdentifier: UIApplication.ExtensionPointIdentifier) -> Bool\nAsks the delegate to grant permission to use app extensions that are based on a specified extension point identifier.\nstatic let keyboard: UIApplication.ExtensionPointIdentifier\nThe identifier for custom keyboards."
  },
  {
    "title": "drawRect:forViewPrintFormatter: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1621844-drawrect",
    "html": "Parameters\narea\n\nA rectangle that defines the area for drawing printable content.\n\nformatter\n\nAn instance of UIViewPrintFormatter obtained by calling the viewPrintFormatter method.\n\nDiscussion\n\nYou implement this method if you want a view’s printed content to appear differently than its displayed content. If you add a view print formatter to a print job but do not implement this method, the view’s drawRect: method is called to provide the content for printing.\n\nFor more information about how to implement a custom drawing routine for printed content, see Drawing and Printing Guide for iOS.\n\nSee Also\nFormatting printed view content\n- viewPrintFormatter\nReturns a print formatter for the receiving view."
  },
  {
    "title": "setNeedsDisplayInRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622587-setneedsdisplayinrect",
    "html": "Parameters\ninvalidRect\n\nThe rectangular region of the receiver to mark as invalid; it should be specified in the coordinate system of the receiver.\n\nDiscussion\n\nYou can use this method or the setNeedsDisplay to notify the system that your view’s contents need to be redrawn. This method adds the specified rectangle into the view’s current list of invalid rectangles and returns immediately. The view is not actually redrawn until the next drawing cycle, at which point all invalidated views are updated.\n\nNote\n\nIf your view is backed by a CAEAGLLayer object, this method has no effect. It is intended for use only with views that use native drawing technologies (such as UIKit and Core Graphics) to render their content.\n\nYou should use this method to request that a view be redrawn only when the content or appearance of the view change. If you simply change the geometry of the view, the view is typically not redrawn. Instead, its existing content is adjusted based on the value in the view’s contentMode property. Redisplaying the existing content improves performance by avoiding the need to redraw content that has not changed.\n\nSee Also\nDrawing and updating the view\n- drawRect:\nDraws the receiver’s image within the passed-in rectangle.\n- setNeedsDisplay\nMarks the receiver’s entire bounds rectangle as needing to be redrawn.\ncontentScaleFactor\nThe scale factor applied to the view.\n- tintColorDidChange\nCalled by the system when the tintColor property changes.\nRelated Documentation\ncontentMode\nA flag used to determine how a view lays out its content when its bounds change."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3600492-initwithcoder",
    "html": "See Also\nCreating a control\n- initWithFrame:primaryAction:\nCreates a control with the specified frame and primary action.\n- initWithFrame:\nCreates a control with the specified frame."
  },
  {
    "title": "focused | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622565-focused",
    "html": "Discussion\n\nThis is a convenience property that checks whether the item is equal to the value in the UIScreen class’s focusedView property.\n\nSee Also\nWorking with focus\ncanBecomeFocused\nA Boolean value that indicates whether the view is currently capable of being focused.\ninheritedAnimationDuration\nReturns the inherited duration of the current animation.\nfocusGroupIdentifier\nThe identifier of the focus group that this view belongs to.\nfocusEffect\nThe visual effect to apply when the view becomes focused.\nfocusGroupPriority\nThe importance of the item within a focus group, used by the focus system to determine the group’s primary item."
  },
  {
    "title": "NSLayoutConstraint.Axis | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/axis",
    "html": "Topics\nConstants\ncase horizontal\nThe constraint applied when laying out the horizontal relationship between objects.\ncase vertical\nThe constraint applied when laying out the vertical relationship between objects.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "viewForFirstBaselineLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622452-viewforfirstbaselinelayout",
    "html": "Discussion\n\nFor views with multiple rows of text, the first baseline is the baseline for the topmost row.\n\nWhen you make a constraint to a view’s NSLayoutAttributeFirstBaseline attribute, Auto Layout uses the baseline of the view returned by this method. If that view does not have a baseline, Auto Layout uses the view’s top edge.\n\nOverride this property to return a text-based subview (for example, UILabel or a nonscrolling UITextView). The returned view must be a subview of the receiver. The default implementation returns the value contained by viewForLastBaselineLayout.\n\nNote\n\nIf the same subview is appropriate for both the first and last baseline, you only need to override the viewForLastBaselineLayout getter method.\n\nSee Also\nAligning views in Auto Layout\n- alignmentRectForFrame:\nReturns the view’s alignment rectangle for a given frame.\n- frameForAlignmentRect:\nReturns the view’s frame for a given alignment rectangle.\nalignmentRectInsets\nThe insets from the view’s frame that define its alignment rectangle.\nviewForLastBaselineLayout\nReturns a view used to satisfy last baseline constraints."
  },
  {
    "title": "UIApplicationLaunchOptionsAnnotationKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsannotationkey",
    "html": "Discussion\n\nThe presence of this key indicates that custom data was provided by the app that requested the opening of the URL. The value of this key is a property-list object containing the custom data. The same object is also passed to the annotation parameter of the application:openURL:sourceApplication:annotation: method. The contents of this property-list object are specific to the app that made the request.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622623-systemlayoutsizefittingsize",
    "html": "Parameters\ntargetSize\n\nThe size that you prefer for the view. To obtain a view that is as small as possible, specify the constant UILayoutFittingCompressedSize. To obtain a view that is as large as possible, specify the constant UILayoutFittingExpandedSize.\n\nhorizontalFittingPriority\n\nThe priority for horizontal constraints. Specify UILayoutPriorityFittingSizeLevel to get a width that is as close as possible to the width value of targetSize.\n\nverticalFittingPriority\n\nThe priority for vertical constraints. Specify UILayoutPriorityFittingSizeLevel to get a height that is as close as possible to the height value of targetSize.\n\nReturn Value\n\nThe optimal size for the view based on the provided constraint priorities.\n\nDiscussion\n\nUse this method when you want to prioritize the view's constraints when determining the best possible size of the view. This method does not actually change the size of the view.\n\nSee Also\nMeasuring in Auto Layout\n- systemLayoutSizeFittingSize:\nReturns the optimal size of the view based on its current constraints.\nintrinsicContentSize\nThe natural size for the receiving view, considering only properties of the view itself.\n- invalidateIntrinsicContentSize\nInvalidates the view’s intrinsic content size.\n- contentCompressionResistancePriorityForAxis:\nReturns the priority with which a view resists being made smaller than its intrinsic size.\n- setContentCompressionResistancePriority:forAxis:\nSets the priority with which a view resists being made smaller than its intrinsic size.\n- contentHuggingPriorityForAxis:\nReturns the priority with which a view resists being made larger than its intrinsic size.\n- setContentHuggingPriority:forAxis:\nSets the priority with which a view resists being made larger than its intrinsic size."
  },
  {
    "title": "UIMenuElementAttributesHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementattributes/uimenuelementattributeshidden",
    "html": "Discussion\n\nWhen you use this attribute, the menu system doesn’t display the menu element. However, if the menu element is a UIKeyCommand object, the user can still select it using the keyboard shortcut specified by the key command object.\n\nSee Also\nAttributes\nUIMenuElementAttributesDestructive\nAn attribute indicating the destructive style.\nUIMenuElementAttributesDisabled\nAn attribute indicating the disabled style.\nUIMenuElementAttributesKeepsMenuPresented\nAn attribute indicating that the menu remains presented after firing the element’s action instead of dismissing."
  },
  {
    "title": "UIMenuElementAttributesDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementattributes/uimenuelementattributesdisabled",
    "html": "Discussion\n\nWhen you use this attribute, the user can’t select the menu element.\n\nSee Also\nAttributes\nUIMenuElementAttributesDestructive\nAn attribute indicating the destructive style.\nUIMenuElementAttributesHidden\nAn attribute indicating the hidden style.\nUIMenuElementAttributesKeepsMenuPresented\nAn attribute indicating that the menu remains presented after firing the element’s action instead of dismissing."
  },
  {
    "title": "UIMenuElementAttributesKeepsMenuPresented | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementattributes/uimenuelementattributeskeepsmenupresented",
    "html": "Discussion\n\nUse this attribute to allow a person to perform a menu action multiple times without dismissing the menu in between.\n\nThis attribute doesn’t have an effect if you build your app with Mac Catalyst.\n\nSee Also\nAttributes\nUIMenuElementAttributesDestructive\nAn attribute indicating the destructive style.\nUIMenuElementAttributesDisabled\nAn attribute indicating the disabled style.\nUIMenuElementAttributesHidden\nAn attribute indicating the hidden style."
  },
  {
    "title": "configurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/3750915-configurationupdatehandler",
    "html": "Discussion\n\nA configuration update handler provides an alternative approach to overriding updateConfigurationUsingState: in a subclass. Set a configuration update handler to update the cell’s configuration using the new state in response to a configuration state change:\n\n[cell setConfigurationUpdateHandler:^(UITableViewCell *cell, UICellConfigurationState *state) {\n    UIListContentConfiguration *content = [[cell defaultContentConfiguration] updatedConfigurationForState:state];\n    if (state.isDisabled) {\n        [content.textProperties setColor:[UIColor systemGrayColor]];\n    }\n    [cell setContentConfiguration:content];\n}];\n\n\nSetting the value of this property calls setNeedsUpdateConfiguration. The system calls this handler after calling updateConfigurationUsingState:.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nUITableViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state."
  },
  {
    "title": "z | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiacceleration/1620643-z",
    "html": "Discussion\n\nWith the device held in portrait orientation and the screen facing you, the z axis runs from back (negative values) to front (positive values) through the device.\n\nSee Also\nAccessing the acceleration values\n- x\nThe acceleration value for the x axis of the device.\nDeprecated\n- y\nThe acceleration value for the y axis of the device.\nDeprecated\ntimestamp\nThe relative time at which the acceleration event occurred.\nDeprecated"
  },
  {
    "title": "configurationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600595-configurationstate",
    "html": "Discussion\n\nTo add your own custom state, see UIConfigurationStateCustomKey.\n\nSee Also\nManaging the state\n- setNeedsUpdateConfiguration\nInforms the view to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the view’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the view’s configuration using the current state.\nUITableViewHeaderFooterViewConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "UIControl.Event | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/event",
    "html": "Overview\n\nYou set up a control so that it sends an action message to a target object by associating both target and action with one or more control events. To do this, send addTarget(_:action:for:) to the control for each target-action pair you want to specify.\n\nTopics\nConstants\nstatic var touchDown: UIControl.Event\nA touch-down event in the control.\nstatic var touchDownRepeat: UIControl.Event\nA repeated touch-down event in the control; for this event the value of the UITouch tapCount method is greater than one.\nstatic var touchDragInside: UIControl.Event\nAn event where a finger is dragged inside the bounds of the control.\nstatic var touchDragOutside: UIControl.Event\nAn event where a finger is dragged just outside the bounds of the control.\nstatic var touchDragEnter: UIControl.Event\nAn event where a finger is dragged into the bounds of the control.\nstatic var touchDragExit: UIControl.Event\nAn event where a finger is dragged from within a control to outside its bounds.\nstatic var touchUpInside: UIControl.Event\nA touch-up event in the control where the finger is inside the bounds of the control.\nstatic var touchUpOutside: UIControl.Event\nA touch-up event in the control where the finger is outside the bounds of the control.\nstatic var touchCancel: UIControl.Event\nA system event canceling the current touches for the control.\nstatic var valueChanged: UIControl.Event\nA touch dragging or otherwise manipulating a control, causing it to emit a series of different values.\nstatic var menuActionTriggered: UIControl.Event\nA menu action has triggered prior to the menu being presented.\nstatic var primaryActionTriggered: UIControl.Event\nA semantic action triggered by buttons.\nstatic var editingDidBegin: UIControl.Event\nA touch initiating an editing session in a text field by entering its bounds.\nstatic var editingChanged: UIControl.Event\nA touch making an editing change in a text field.\nstatic var editingDidEnd: UIControl.Event\nA touch ending an editing session in a text field by leaving its bounds.\nstatic var editingDidEndOnExit: UIControl.Event\nA touch ending an editing session in a text field.\nstatic var allTouchEvents: UIControl.Event\nAll touch events.\nstatic var allEditingEvents: UIControl.Event\nAll editing touches for text fields.\nstatic var applicationReserved: UIControl.Event\nA range of control-event values available for app use.\nstatic var systemReserved: UIControl.Event\nA range of control-event values reserved for internal framework use.\nstatic var allEvents: UIControl.Event\nAll events, including system events.\nInitializers\ninit(rawValue: UInt)\nCreates a control event with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable"
  },
  {
    "title": "selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618203-selected",
    "html": "Discussion\n\nSet the value of this property to YES to select it or NO to deselect it. Most controls don’t modify their appearance or behavior when selected, but some do. For example, the UISegmentedControl class tracks whether a segment is selected and draws it differently when it is.\n\nThe default value of this property is NO for a newly created control. You can set a control’s initial selected state in your storyboard file.\n\nSee Also\nManaging state\nstate\nThe state of the control, specified as a bit mask value.\nUIControlState\nConstants describing the state of a control.\nenabled\nA Boolean value indicating whether the control is in the enabled state.\nhighlighted\nA Boolean value indicating whether the control draws a highlight."
  },
  {
    "title": "UIApplication.OpenURLOptionsKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/openurloptionskey",
    "html": "Overview\n\nUse these keys to retrieve options in the application(_:open:options:) method of your app delegate.\n\nTopics\nAccessing open-URL options\nstatic let sourceApplication: UIApplication.OpenURLOptionsKey\nA key containing the bundle ID of the app that sent the open-URL request to your app.\nstatic let annotation: UIApplication.OpenURLOptionsKey\nA key containing the information passed to a document interaction controller object’s annotation property.\nstatic let openInPlace: UIApplication.OpenURLOptionsKey\nA key containing a flag that indicates whether a document must be copied before you use it.\nstatic let eventAttribution: UIApplication.OpenURLOptionsKey\nCreating an open-URL options key\ninit(rawValue: String)\nCreates a URL-opening options key with the specified raw value.\nRelationships\nConforms To\nEquatable\nHashable\nRawRepresentable\nSendable\nSee Also\nOpening a URL-specified resource\nfunc application(UIApplication, open: URL, options: [UIApplication.OpenURLOptionsKey : Any]) -> Bool\nAsks the delegate to open a resource specified by a URL, and provides a dictionary of launch options."
  },
  {
    "title": "enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618217-enabled",
    "html": "Discussion\n\nSet the value of this property to YES to enable the control or NO to disable it. An enabled control is capable of responding to user interactions, whereas a disabled control ignores touch events and may draw itself differently. Setting this property to NO adds the UIControlStateDisabled flag to the control’s state bitmask; enabling the control again removes that flag.\n\nThe default value of this property is YES for a newly created control. You can set a control’s initial enabled state in your storyboard file.\n\nSee Also\nManaging state\nstate\nThe state of the control, specified as a bit mask value.\nUIControlState\nConstants describing the state of a control.\nselected\nA Boolean value indicating whether the control is in the selected state.\nhighlighted\nA Boolean value indicating whether the control draws a highlight."
  },
  {
    "title": "initWithFrame:primaryAction: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3600494-initwithframe",
    "html": "See Also\nCreating a control\n- initWithFrame:\nCreates a control with the specified frame.\n- initWithCoder:\nCreates a control from data in an unarchiver."
  },
  {
    "title": "UIApplicationKeyboardExtensionPointIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationkeyboardextensionpointidentifier",
    "html": "Discussion\n\nTo reject the use of custom keyboards in your app, specify this constant in your implementation of the application:shouldAllowExtensionPointIdentifier: delegate method.\n\nSee Also\nDisallowing specified app extension types\n- application:shouldAllowExtensionPointIdentifier:\nAsks the delegate to grant permission to use app extensions that are based on a specified extension point identifier.\nUIApplicationExtensionPointIdentifier\nA structure that identifies types of extensions."
  },
  {
    "title": "drawRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622529-drawrect",
    "html": "Parameters\nrect\n\nThe portion of the view’s bounds that needs to be updated. The first time your view is drawn, this rectangle is typically the entire visible bounds of your view. However, during subsequent drawing operations, the rectangle may specify only part of your view.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses that use technologies such as Core Graphics and UIKit to draw their view’s content should override this method and implement their drawing code there. You do not need to override this method if your view sets its content in other ways. For example, you do not need to override this method if your view just displays a background color or if your view sets its content directly using the underlying layer object.\n\nBy the time this method is called, UIKit has configured the drawing environment appropriately for your view and you can simply call whatever drawing methods and functions you need to render your content. Specifically, UIKit creates and configures a graphics context for drawing and adjusts the transform of that context so that its origin matches the origin of your view’s bounds rectangle. You can get a reference to the graphics context using the UIGraphicsGetCurrentContext function, but do not establish a strong reference to the graphics context because it can change between calls to the drawRect: method.\n\nSimilarly, if you draw using OpenGL ES and the GLKView class, GLKit configures the underlying OpenGL ES context appropriately for your view before calling this method (or the glkView:drawInRect: method of your GLKView delegate), so you can simply issue whatever OpenGL ES commands you need to render your content. For more information about how to draw using OpenGL ES, see OpenGL ES Programming Guide.\n\nYou should limit any drawing to the rectangle specified in the rect parameter. In addition, if the opaque property of your view is set to YES, your drawRect: method must totally fill the specified rectangle with opaque content.\n\nIf you subclass UIView directly, your implementation of this method does not need to call super. However, if you are subclassing a different view class, you should call super at some point in your implementation.\n\nThis method is called when a view is first displayed or when an event occurs that invalidates a visible part of the view. You should never call this method directly yourself. To invalidate part of your view, and thus cause that portion to be redrawn, call the setNeedsDisplay or setNeedsDisplayInRect: method instead.\n\nSee Also\nDrawing and updating the view\n- setNeedsDisplay\nMarks the receiver’s entire bounds rectangle as needing to be redrawn.\n- setNeedsDisplayInRect:\nMarks the specified rectangle of the receiver as needing to be redrawn.\ncontentScaleFactor\nThe scale factor applied to the view.\n- tintColorDidChange\nCalled by the system when the tintColor property changes.\nRelated Documentation\ncontentMode\nA flag used to determine how a view lays out its content when its bounds change."
  },
  {
    "title": "UICollectionLayoutListHeaderModeFirstItemInSection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistheadermode/uicollectionlayoutlistheadermodefirstiteminsection",
    "html": "Discussion\n\nChoose this header mode when you’re using hierarchical data sources if you want to be able to expand and collapse the header.\n\nWhen you use this header mode, a UICollectionViewListCell object that appears as the first item in the section automatically uses a header appearance. When you configure your data source, make sure to account for the fact that the first item in the section (at index 0) represents the header, and the actual items in the section start at index 1.\n\nBy default, lists that use the UICollectionLayoutListAppearancePlain and UICollectionLayoutListAppearanceSidebarPlain list appearances use pinned headers. If you want to opt into this default pinning behavior, use the UICollectionLayoutListHeaderModeSupplementary header mode instead.\n\nSee Also\nHeader modes\nUICollectionLayoutListHeaderModeNone\nNo headers are shown.\nUICollectionLayoutListHeaderModeSupplementary\nA header mode that uses supplementary views to show headers."
  },
  {
    "title": "defaultContentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/3600589-defaultcontentconfiguration",
    "html": "Return Value\n\nA default list content configuration. The system determines default values for the configuration according to the section where the cell appears.\n\nDiscussion\n\nThe default content configuration has preconfigured default styling, but doesn’t contain any content. After you get the default configuration, you assign your content to it, customize any other properties, and assign it to the cell as the current contentConfiguration.\n\nvar content = cell.defaultContentConfiguration()\n\n\n// Configure content.\ncontent.image = UIImage(systemName: \"star\")\ncontent.text = \"Favorites\"\n\n\n// Customize appearance.\ncontent.imageProperties.tintColor = .purple\n\n\ncell.contentConfiguration = content\n\n\nSee Also\nManaging the content\ncontentConfiguration\nThe current content configuration of the cell.\nautomaticallyUpdatesContentConfiguration\nA Boolean value that determines whether the cell automatically updates its content configuration when its state changes.\ncontentView\nThe content view of the cell object."
  },
  {
    "title": "initWithSection:configuration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199212-initwithsection",
    "html": "See Also\nCreating a layout\n- initWithSection:\nCreates a compositional layout object with a single section.\n- initWithSectionProvider:\nCreates a compositional layout object with a section provider to supply the layout's sections.\n- initWithSectionProvider:configuration:\nCreates a compositional layout object with a section provider and an additional configuration."
  },
  {
    "title": "backgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/3600586-backgroundconfiguration",
    "html": "Discussion\n\nUITableViewCell automatically sets up a default background configuration to provide its default appearance.\n\nUsing a background configuration, you can obtain system default background styling for a variety of different cell states. Create a background configuration with one of the default system styles, customize the configuration to match your cell’s style as necessary, and assign the configuration to this property.\n\nUIBackgroundConfiguration *backgroundConfig = [UIBackgroundConfiguration listPlainCellConfiguration];\n\n\n// Set a nil background color to use the view's tint color.\n[backgroundConfig setBackgroundColor:nil];\n\n\n[cell setBackgroundConfiguration:backgroundConfig];\n\n\nA background configuration is mutually exclusive with background views, so you must use one approach or the other. Setting a non-nil value for this property resets the following APIs to nil:\n\nbackgroundColor\n\nbackgroundView\n\nselectedBackgroundView\n\nmultipleSelectionBackgroundView\n\nSee Also\nConfiguring the background\n- defaultBackgroundConfiguration\nRetrieves a background configuration with system default values.\nautomaticallyUpdatesBackgroundConfiguration\nA Boolean value that determines whether the cell automatically updates its background configuration when its state changes.\nbackgroundView\nThe view to use as the background of the cell.\nselectedBackgroundView\nThe view to use as the background for a selected cell.\nmultipleSelectionBackgroundView\nThe background view to use for a selected cell when the table view allows multiple row selections."
  },
  {
    "title": "reconfigureRowsAtIndexPaths: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/3801923-reconfigurerowsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects identifying the items you want to update.\n\nDiscussion\n\nTo update the contents of existing (including prefetched) cells without replacing them with new cells, use this method instead of reloadRowsAtIndexPaths:withRowAnimation:. For optimal performance, choose to reconfigure rows instead of reloading rows unless you have an explicit need to replace the existing cell with a new cell.\n\nYour cell provider must dequeue the same type of cell for the provided index path, and must return the same existing cell for a given index path. Because this method reconfigures existing cells, the table view doesn’t call prepareForReuse for each cell dequeued. If you need to return a different type of cell for an index path, use reloadRowsAtIndexPaths:withRowAnimation: instead.\n\nIf your cells are self-sizing, the table view resizes your cells after reconfiguring them.\n\nBy default, the table view animates any size or layout changes that are a result of reconfiguration. To reconfigure cells without animation, use UIView’s performWithoutAnimation: when you call this method. Alternatively, to avoid animations when setting specific properties, use performWithoutAnimation: in your cell configuration logic.\n\nIf your table view uses a custom implementation of UITableViewDataSource, use this method. If your table view uses a diffable data source, use reconfigureItemsWithIdentifiers: on NSDiffableDataSourceSnapshot instead.\n\nSee Also\nReloading the table view\nhasUncommittedUpdates\nA Boolean value that indicates whether the table view’s appearance contains changes that aren’t present in its data source.\n- reloadData\nReloads the rows and sections of the table view.\n- reloadRowsAtIndexPaths:withRowAnimation:\nReloads the specified rows using the provided animation effect.\n- reloadSections:withRowAnimation:\nReloads the specified sections using the provided animation effect.\n- reloadSectionIndexTitles\nReloads the items in the index bar along the right side of the table view."
  },
  {
    "title": "UITableViewSelfSizingInvalidation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewselfsizinginvalidation",
    "html": "Overview\n\nUse these constants with the selfSizingInvalidation property.\n\nTopics\nConstants\nUITableViewSelfSizingInvalidationDisabled\nA mode that disables self-sizing invalidation.\nUITableViewSelfSizingInvalidationEnabled\nA mode that enables manual self-sizing invalidation.\nUITableViewSelfSizingInvalidationEnabledIncludingConstraints\nA mode that enables automatic self-sizing invalidation after Auto Layout changes.\nSee Also\nResizing self-sizing cells\nselfSizingInvalidation\nThe mode that the table view uses for invalidating the size of self-sizing cells."
  },
  {
    "title": "contextSystem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenusystem/3327313-contextsystem",
    "html": "See Also\nGetting a menu system\nmainSystem\nThe main menu system."
  },
  {
    "title": "systemLayoutSizeFittingSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622624-systemlayoutsizefittingsize",
    "html": "Parameters\ntargetSize\n\nThe size that you prefer for the view. To obtain a view that is as small as possible, specify the constant UILayoutFittingCompressedSize. To obtain a view that is as large as possible, specify the constant UILayoutFittingExpandedSize.\n\nReturn Value\n\nThe optimal size for the view.\n\nDiscussion\n\nThis method returns a size value for the view that optimally satisfies the view's current constraints and is as close to the value in the targetSize parameter as possible. This method does not actually change the size of the view.\n\nSee Also\nMeasuring in Auto Layout\n- systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:\nReturns the optimal size of the view based on its constraints and the specified fitting priorities.\nintrinsicContentSize\nThe natural size for the receiving view, considering only properties of the view itself.\n- invalidateIntrinsicContentSize\nInvalidates the view’s intrinsic content size.\n- contentCompressionResistancePriorityForAxis:\nReturns the priority with which a view resists being made smaller than its intrinsic size.\n- setContentCompressionResistancePriority:forAxis:\nSets the priority with which a view resists being made smaller than its intrinsic size.\n- contentHuggingPriorityForAxis:\nReturns the priority with which a view resists being made larger than its intrinsic size.\n- setContentHuggingPriority:forAxis:\nSets the priority with which a view resists being made larger than its intrinsic size."
  },
  {
    "title": "UIApplicationLaunchOptionsNewsstandDownloadsKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsnewsstanddownloadskey",
    "html": "Discussion\n\nThe value of this key is an array of string identifiers that identify the NKAssetDownload objects corresponding to the assets. Although you can use the identifiers for cross-checking purposes, you should obtain the definitive array of NKAssetDownload objects (representing asset downloads in progress or in error) through the downloadingAssets property of the NKLibrary object representing the Newsstand app’s library.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "contentHuggingPriorityForAxis: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622556-contenthuggingpriorityforaxis",
    "html": "Parameters\naxis\n\nThe axis of the view that might be enlarged.\n\nReturn Value\n\nThe priority with which the view should resist being enlarged from its intrinsic size on the specified axis.\n\nDiscussion\n\nThe constraint-based layout system uses these priorities when determining the best layout for views that are encountering constraints that would require them to be larger than their intrinsic size.\n\nSee Also\nMeasuring in Auto Layout\n- systemLayoutSizeFittingSize:\nReturns the optimal size of the view based on its current constraints.\n- systemLayoutSizeFittingSize:withHorizontalFittingPriority:verticalFittingPriority:\nReturns the optimal size of the view based on its constraints and the specified fitting priorities.\nintrinsicContentSize\nThe natural size for the receiving view, considering only properties of the view itself.\n- invalidateIntrinsicContentSize\nInvalidates the view’s intrinsic content size.\n- contentCompressionResistancePriorityForAxis:\nReturns the priority with which a view resists being made smaller than its intrinsic size.\n- setContentCompressionResistancePriority:forAxis:\nSets the priority with which a view resists being made smaller than its intrinsic size.\n- setContentHuggingPriority:forAxis:\nSets the priority with which a view resists being made larger than its intrinsic size."
  },
  {
    "title": "generatesDeviceOrientationNotifications | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevice/1620055-generatesdeviceorientationnotifi",
    "html": "Discussion\n\nIf the value of this property is YES, the shared UIDevice object posts a UIDeviceOrientationDidChangeNotification notification when the device changes orientation. If the value is NO, it generates no orientation notifications. Device orientation notifications can only be generated between calls to the beginGeneratingDeviceOrientationNotifications and endGeneratingDeviceOrientationNotifications methods.\n\nSee Also\nTracking the device orientation\norientation\nThe physical orientation of the device.\nUIDeviceOrientation\nConstants that describe the physical orientation of the device.\n- beginGeneratingDeviceOrientationNotifications\nBegins the generation of notifications of device orientation changes.\n- endGeneratingDeviceOrientationNotifications\nEnds the generation of notifications of device orientation changes."
  },
  {
    "title": "UIMenuElementStateOn | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementstate/uimenuelementstateon",
    "html": "See Also\nStates\nUIMenuElementStateOff\nA constant indicating the menu element is in the “off” state.\nUIMenuElementStateMixed\nA constant indicating the menu element is in the “mixed” state."
  },
  {
    "title": "UIDeviceOrientationIsFlat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/2981866-uideviceorientationisflat",
    "html": "See Also\nDetermining the current orientation\nUIDeviceOrientationIsPortrait\nReturns a Boolean value that indicates whether the device is in a portrait orientation.\nUIDeviceOrientationIsLandscape\nReturns a Boolean value that indicates whether the device is in a landscape orientation.\nUIDeviceOrientationIsValidInterfaceOrientation\nReturns a Boolean value that indicates whether the specified orientation is one of the portrait or landscape orientations."
  },
  {
    "title": "UIMenuElementStateMixed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementstate/uimenuelementstatemixed",
    "html": "Discussion\n\nA UIMenuElementStateMixed state is one that’s neither “on” or “off”. The menu system displays a mixed-mark, such as a checkmark or hyphen, next to the menu element.\n\nSee Also\nStates\nUIMenuElementStateOff\nA constant indicating the menu element is in the “off” state.\nUIMenuElementStateOn\nA constant indicating the menu element is in the “on” state."
  },
  {
    "title": "UIMenuElementAttributesDestructive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementattributes/uimenuelementattributesdestructive",
    "html": "Discussion\n\nWhen you use this attribute, the menu system displays the menu element in a more prominent style, such as with red text.\n\nSee Also\nAttributes\nUIMenuElementAttributesDisabled\nAn attribute indicating the disabled style.\nUIMenuElementAttributesHidden\nAn attribute indicating the hidden style.\nUIMenuElementAttributesKeepsMenuPresented\nAn attribute indicating that the menu remains presented after firing the element’s action instead of dismissing."
  },
  {
    "title": "endTrackingWithTouch:withEvent: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618234-endtrackingwithtouch",
    "html": "Parameters\ntouch\n\nThe touch object containing the final touch information.\n\nevent\n\nThe event object containing the touch event.\n\nDiscussion\n\nThis method is called at the end of a sequence of touch events inside the control’s bounds. Subclasses can override this method and use it to perform any actions relevant to the completion of the touch sequence. You should also use it to perform any cleanup associated with tracking the event.\n\nIf you override this method, you must call super at some point in your implementation. The default implementation updates the tracking property of the control.\n\nSee Also\nTracking touches and redrawing controls\n- beginTrackingWithTouch:withEvent:\nNotifies the control when a touch event enters the control’s bounds.\n- continueTrackingWithTouch:withEvent:\nNotifies the control when a touch event for the control updates.\n- cancelTrackingWithEvent:\nNotifies the control to cancel tracking related to the specified event.\ntracking\nA Boolean value that indicates whether the control is currently tracking touch events.\ntouchInside\nA Boolean value that indicates whether a tracked touch event is currently inside the control’s bounds."
  },
  {
    "title": "cancelTrackingWithEvent: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618219-canceltrackingwithevent",
    "html": "Parameters\nevent\n\nAn event object related to touches that occurred in the control. This parameter might be nil, indicating that the cancelation was caused by something other than an event, such as the view being removed from the window.\n\nDiscussion\n\nThe control calls this method when a control-related touch event is canceled. The default implementation cancels any ongoing tracking and updates the control’s state information. Subclasses can override this method and use it to perform any actions relevant to the cancellation of the touch sequence. You should also use it to perform any cleanup associated with tracking the event.\n\nIf you override this method, you must call super at some point in your implementation.\n\nSee Also\nTracking touches and redrawing controls\n- beginTrackingWithTouch:withEvent:\nNotifies the control when a touch event enters the control’s bounds.\n- continueTrackingWithTouch:withEvent:\nNotifies the control when a touch event for the control updates.\n- endTrackingWithTouch:withEvent:\nNotifies the control when a touch event associated with the control ends.\ntracking\nA Boolean value that indicates whether the control is currently tracking touch events.\ntouchInside\nA Boolean value that indicates whether a tracked touch event is currently inside the control’s bounds."
  },
  {
    "title": "continueTrackingWithTouch:withEvent: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618216-continuetrackingwithtouch",
    "html": "Parameters\ntouch\n\nThe touch object containing updated information.\n\nevent\n\nThe event object containing the touch event.\n\nReturn Value\n\nYES if the control should continue tracking touch events or NO if it should stop. This value is used to update the tracking property of the control.\n\nDiscussion\n\nThis method is called repeatedly while a touch event is being tracked inside the control’s bounds. The default implementation of this method always returns YES. Subclasses can override this method and use it to update their state based on changes to the touch event. If you want to continue tracking the touch event, return YES. If you want to stop tracking the touch event, return NO.\n\nSee Also\nTracking touches and redrawing controls\n- beginTrackingWithTouch:withEvent:\nNotifies the control when a touch event enters the control’s bounds.\n- endTrackingWithTouch:withEvent:\nNotifies the control when a touch event associated with the control ends.\n- cancelTrackingWithEvent:\nNotifies the control to cancel tracking related to the specified event.\ntracking\nA Boolean value that indicates whether the control is currently tracking touch events.\ntouchInside\nA Boolean value that indicates whether a tracked touch event is currently inside the control’s bounds."
  },
  {
    "title": "tracking | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618210-tracking",
    "html": "Discussion\n\nWhile tracking of a touch event is in progress, the control sets the value of this property to YES. When tracking ends or is canceled for any reason, it sets this property to NO.\n\nSee Also\nTracking touches and redrawing controls\n- beginTrackingWithTouch:withEvent:\nNotifies the control when a touch event enters the control’s bounds.\n- continueTrackingWithTouch:withEvent:\nNotifies the control when a touch event for the control updates.\n- endTrackingWithTouch:withEvent:\nNotifies the control when a touch event associated with the control ends.\n- cancelTrackingWithEvent:\nNotifies the control to cancel tracking related to the specified event.\ntouchInside\nA Boolean value that indicates whether a tracked touch event is currently inside the control’s bounds."
  },
  {
    "title": "timestamp | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiacceleration/1620650-timestamp",
    "html": "Discussion\n\nThis value indicates the time relative to the device CPU time base register. Compare acceleration event timestamps to determine the elapsed time between them. Do not use a timestamp to determine the exact time at which an event occurred.\n\nSee Also\nAccessing the acceleration values\n- x\nThe acceleration value for the x axis of the device.\nDeprecated\n- y\nThe acceleration value for the y axis of the device.\nDeprecated\n- z\nThe acceleration value for the z axis of the device.\nDeprecated"
  },
  {
    "title": "touchInside | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/1618229-touchinside",
    "html": "Return Value\n\nYES if the location of the most recent touch event is inside the control’s bounds or NO if it is not.\n\nDiscussion\n\nWhile tracking of a touch event is ongoing, the control updates the value of this property to indicate whether the most recent touch is still inside the control’s bounds. The control uses this information to trigger specific events. For example, touch events entering or exiting a control trigger appropriate drag events.\n\nSee Also\nTracking touches and redrawing controls\n- beginTrackingWithTouch:withEvent:\nNotifies the control when a touch event enters the control’s bounds.\n- continueTrackingWithTouch:withEvent:\nNotifies the control when a touch event for the control updates.\n- endTrackingWithTouch:withEvent:\nNotifies the control when a touch event associated with the control ends.\n- cancelTrackingWithEvent:\nNotifies the control to cancel tracking related to the specified event.\ntracking\nA Boolean value that indicates whether the control is currently tracking touch events."
  },
  {
    "title": "UICollectionLayoutListHeaderModeSupplementary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistheadermode/uicollectionlayoutlistheadermodesupplementary",
    "html": "Discussion\n\nChoose this header mode to use supplementary views with UICollectionElementKindSectionHeader as the section header.\n\nBy default, lists that use the UICollectionLayoutListAppearancePlain and UICollectionLayoutListAppearanceSidebarPlain list appearances use pinned headers. You must use this header mode if you want to opt into this default pinning behavior.\n\nSee Also\nHeader modes\nUICollectionLayoutListHeaderModeNone\nNo headers are shown.\nUICollectionLayoutListHeaderModeFirstItemInSection\nA header mode that styles the first item in a section as a header."
  },
  {
    "title": "configurationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/3600587-configurationstate",
    "html": "Discussion\n\nTo add your own custom state, see UIConfigurationStateCustomKey.\n\nSee Also\nManaging the state\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nUITableViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state."
  },
  {
    "title": "updateConfigurationUsingState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/3600591-updateconfigurationusingstate",
    "html": "Discussion\n\nAvoid calling this method directly. Instead, use setNeedsUpdateConfiguration to request an update.\n\nOverride this method in a subclass to update the cell’s configuration using the provided state.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nUITableViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state."
  },
  {
    "title": "UICollectionLayoutListFooterModeNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistfootermode/uicollectionlayoutlistfootermodenone",
    "html": "See Also\nFooter modes\nUICollectionLayoutListFooterModeSupplementary\nA footer mode that uses supplementary views to show footers."
  },
  {
    "title": "UIFindSessionSearchResultDisplayStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifindsessionsearchresultdisplaystyle",
    "html": "Topics\nConstants\nUIFindSessionSearchResultDisplayStyleCurrentAndTotal\nThe find panel includes the total number of results the session reports and the index of the target result.\nUIFindSessionSearchResultDisplayStyleTotal\nThe find panel includes the total number of results the session reports.\nUIFindSessionSearchResultDisplayStyleNone\nThe find panel doesn’t include the number of results the session reports.\nSee Also\nFind and replace\nUIFindInteraction\nAn interaction that provides text finding and replacing operations using a system find panel.\nUIFindInteractionDelegate\nA delegate object that provides a session object to manage the search state for a find interaction and receives notifications of search session lifetimes.\nUIFindSession\nAn abstract base class that manages the state, presentation, and behavior for a search that the find interaction initiates.\nUITextSearchingFindSession\nA find session object that wraps a searchable object implementing the text-searching protocol.\nUITextSearching\nThe methods you use on a find session’s searchable objects to perform search operations and decorate the found text results.\nUITextSearchOptions\nAn object containing the configurable options for a text search.\nUITextSearchFoundTextStyle\nConstants that describe the style a find session uses to decorate the text.\nUITextSearchMatchMethod\nConstants that describe the method to use when searching text for words that match a string."
  },
  {
    "title": "contentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/3600588-contentconfiguration",
    "html": "Discussion\n\nUsing a content configuration, you can set the cell’s content and styling for a variety of different cell states. You can get the default configuration using defaultContentConfiguration, assign your content to the configuration, customize any other properties, and assign it to the view as the current contentConfiguration.\n\nSetting a content configuration replaces the existing contentView of the cell with a new content view instance from the configuration, or directly applies the configuration to the existing content view if the configuration is compatible with the existing content view type.\n\nThe default value is nil. After you set a content configuration to this property, setting this property back to nil replaces the current content view with a new, empty content view.\n\nSee Also\nManaging the content\n- defaultContentConfiguration\nRetrieves a default list content configuration for the cell’s style.\nautomaticallyUpdatesContentConfiguration\nA Boolean value that determines whether the cell automatically updates its content configuration when its state changes.\ncontentView\nThe content view of the cell object."
  },
  {
    "title": "initWithSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199211-initwithsection",
    "html": "See Also\nCreating a layout\n- initWithSection:configuration:\nCreates a compositional layout object with a single section and an additional configuration.\n- initWithSectionProvider:\nCreates a compositional layout object with a section provider to supply the layout's sections.\n- initWithSectionProvider:configuration:\nCreates a compositional layout object with a section provider and an additional configuration."
  },
  {
    "title": "layoutWithListConfiguration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3600420-layoutwithlistconfiguration",
    "html": "See Also\nCreating a list layout\nUICollectionLayoutListConfiguration\nA configuration for creating a list layout."
  },
  {
    "title": "initWithSectionProvider: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199214-initwithsectionprovider",
    "html": "See Also\nCreating a layout\n- initWithSection:\nCreates a compositional layout object with a single section.\n- initWithSection:configuration:\nCreates a compositional layout object with a single section and an additional configuration.\n- initWithSectionProvider:configuration:\nCreates a compositional layout object with a section provider and an additional configuration."
  },
  {
    "title": "initWithSectionProvider:configuration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199215-initwithsectionprovider",
    "html": "See Also\nCreating a layout\n- initWithSection:\nCreates a compositional layout object with a single section.\n- initWithSection:configuration:\nCreates a compositional layout object with a single section and an additional configuration.\n- initWithSectionProvider:\nCreates a compositional layout object with a section provider to supply the layout's sections."
  },
  {
    "title": "UIApplicationLaunchOptionsUserActivityDictionaryKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsuseractivitydictionarykey",
    "html": "Discussion\n\nThe value of this key is an NSDictionary object containing the key UIApplicationLaunchOptionsUserActivityTypeKey, whose value is an NSString object identifying the activity type.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated\nRelated Documentation\nNSUserActivity\nA representation of the state of your app at a moment in time."
  },
  {
    "title": "UIApplicationLaunchOptionsShortcutItemKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsshortcutitemkey",
    "html": "Discussion\n\nThe value of this key is the UIApplicationShortcutItem object representing the action that the user selected.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "rectForHeaderInSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614872-rectforheaderinsection",
    "html": "Parameters\nsection\n\nAn index number identifying a section of the table view. Plain-style table views always have a section index of zero.\n\nReturn Value\n\nA rectangle defining the area in which the table view draws the section header.\n\nSee Also\nGetting the drawing areas for the table\n- rectForSection:\nReturns the drawing area for a specified section of the table view.\n- rectForRowAtIndexPath:\nReturns the drawing area for a row that an index path identifies.\n- rectForFooterInSection:\nReturns the drawing area for the footer of the specified section."
  },
  {
    "title": "UIApplicationLaunchOptionsLocationKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionslocationkey",
    "html": "Discussion\n\nThe value of this key is an NSNumber object containing a Boolean value. You should use the presence of this key as a signal to create a CLLocationManager object and start location services again. Location data is delivered only to the location manager delegate and not using this key.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "rectForFooterInSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614999-rectforfooterinsection",
    "html": "Parameters\nsection\n\nAn index number identifying a section of the table view. Plain-style table views always have a section index of zero.\n\nReturn Value\n\nA rectangle defining the area in which the table view draws the section footer.\n\nSee Also\nGetting the drawing areas for the table\n- rectForSection:\nReturns the drawing area for a specified section of the table view.\n- rectForRowAtIndexPath:\nReturns the drawing area for a row that an index path identifies.\n- rectForHeaderInSection:\nReturns the drawing area for the header of the specified section."
  },
  {
    "title": "UIApplicationLaunchOptionsBluetoothPeripheralsKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsbluetoothperipheralskey",
    "html": "Discussion\n\nThe presence of this key indicates that the app previously had one or more CBPeripheralManager objects and was relaunched by the Bluetooth system to continue actions associated with those objects. The value of this key is an NSArray object containing one or more NSString objects.\n\nEach string in the array represents the restoration identifier for a peripheral manager object. This is the same string you assigned to the CBPeripheralManagerOptionRestoreIdentifierKey key when you initialized the peripheral manager object previously. The system provides the restoration identifiers only for peripheral managers that had published or advertised services.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "UIApplicationLaunchOptionsEventAttributionKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionseventattributionkey",
    "html": "See Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "UIApplicationLaunchOptionsCloudKitShareMetadataKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionscloudkitsharemetadatakey",
    "html": "Discussion\n\nThe value of this key is a CKShareMetadata object. Schedule a CKAcceptSharesOperation task with the provided metadata object.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "UITableView.ScrollPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/scrollposition",
    "html": "Overview\n\nYou set the scroll position through a parameter of the selectRow(at:animated:scrollPosition:), scrollToNearestSelectedRow(at:animated:), cellForRow(at:), and indexPathForSelectedRow methods.\n\nTopics\nConstants\ncase none\nThe table view scrolls the row of interest to be fully visible with a minimum of movement.\ncase top\nThe table view scrolls the row of interest to the top of the visible table view.\ncase middle\nThe table view scrolls the row of interest to the middle of the visible table view.\ncase bottom\nThe table view scrolls the row of interest to the bottom of the visible table view.\nRelationships\nConforms To\nSendable\nSee Also\nScrolling the table view\nfunc scrollToRow(at: IndexPath, at: UITableView.ScrollPosition, animated: Bool)\nScrolls through the table view until a row that an index path identifies is at a particular location on the screen.\nfunc scrollToNearestSelectedRow(at: UITableView.ScrollPosition, animated: Bool)\nScrolls the table view so that the selected row nearest to a specified position in the table view is at that position."
  },
  {
    "title": "scrollToNearestSelectedRowAtScrollPosition:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614910-scrolltonearestselectedrowatscro",
    "html": "Parameters\nscrollPosition\n\nA constant that identifies a relative position in the table view (top, middle, bottom) for the row when scrolling concludes. See UITableViewScrollPosition for a descriptions of valid constants.\n\nanimated\n\nYES if you want to animate the change in position; NO if it should be immediate.\n\nSee Also\nScrolling the table view\n- scrollToRowAtIndexPath:atScrollPosition:animated:\nScrolls through the table view until a row that an index path identifies is at a particular location on the screen.\nUITableViewScrollPosition\nThe position in the table view (top, middle, bottom) to scroll a specified row to."
  },
  {
    "title": "reloadRowsAtIndexPaths:withRowAnimation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614935-reloadrowsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects identifying the rows to reload.\n\nanimation\n\nA constant that indicates how the reloading is to be animated, for example, fade out or slide out from the bottom. See UITableViewRowAnimation for descriptions of these constants.\n\nThe animation constant affects the direction in which both the old and the new rows slide. For example, if the animation constant is UITableViewRowAnimationRight, the old rows slide out to the right and the new cells slide in from the right.\n\nDiscussion\n\nReloading a row causes the table view to ask its data source for a new cell for that row. The table animates that new cell in as it animates the old row out. Call this method if you want to alert the user that the value of a cell is changing. If, however, notifying the user isn’t important — that is, you just want to change the value that a cell is displaying — you can get the cell for a particular row and set its new value.\n\nWhen this method is called in an animation block defined by the beginUpdates and endUpdates methods, it behaves similarly to deleteRowsAtIndexPaths:withRowAnimation:. The indexes that UITableView passes to the method are specified in the state of the table view prior to any updates. This happens regardless of ordering of the insertion, deletion, and reloading method calls within the animation block.\n\nSee Also\nReloading the table view\nhasUncommittedUpdates\nA Boolean value that indicates whether the table view’s appearance contains changes that aren’t present in its data source.\n- reconfigureRowsAtIndexPaths:\nUpdates the data for the rows at the index paths you specify, preserving the existing cells for the rows.\n- reloadData\nReloads the rows and sections of the table view.\n- reloadSections:withRowAnimation:\nReloads the specified sections using the provided animation effect.\n- reloadSectionIndexTitles\nReloads the items in the index bar along the right side of the table view.\nRelated Documentation\n- insertRowsAtIndexPaths:withRowAnimation:\nInserts rows in the table view at the locations that an array of index paths identifies, with an option to animate the insertion."
  },
  {
    "title": "UITableViewCell.CellStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/cellstyle",
    "html": "Overview\n\nIn all these cell styles, the larger of the text labels is accessed using the textLabel property and the smaller using the detailTextLabel property.\n\nTopics\nCell styles\ncase `default`\nA simple style for a cell with a text label (black and left-aligned) and an optional image view.\ncase value1\nA style for a cell with a label on the left side of the cell with left-aligned and black text; on the right side is a label that has smaller blue text and is right-aligned.\ncase value2\nA style for a cell with a label on the left side of the cell with text that’s right-aligned and blue; on the right side of the cell is another label with smaller text that’s left-aligned and black.\ncase subtitle\nA style for a cell with a left-aligned label across the top and a left-aligned label below it in smaller gray text.\nRelationships\nConforms To\nSendable\nSee Also\nCreating a table view cell\ninit(style: UITableViewCell.CellStyle, reuseIdentifier: String?)\nInitializes a table cell with a style and a reuse identifier and returns it to the caller.\ninit?(coder: NSCoder)\nCreates a table view from data in an unarchiver."
  },
  {
    "title": "scrollToRowAtIndexPath:atScrollPosition:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614997-scrolltorowatindexpath",
    "html": "Parameters\nindexPath\n\nAn index path that identifies a row in the table view by its row index and its section index.\n\nNSNotFound is a valid row index for scrolling to a section with zero rows.\n\nscrollPosition\n\nA constant that identifies a relative position in the table view (top, middle, bottom) for row when scrolling concludes. See UITableViewScrollPosition for descriptions of valid constants.\n\nanimated\n\nYES if you want to animate the change in position; NO if it should be immediate.\n\nDiscussion\n\nInvoking this method doesn’t cause the delegate to receive a scrollViewDidScroll: message, as is normal for programmatically invoked user interface operations.\n\nSee Also\nScrolling the table view\n- scrollToNearestSelectedRowAtScrollPosition:animated:\nScrolls the table view so that the selected row nearest to a specified position in the table view is at that position.\nUITableViewScrollPosition\nThe position in the table view (top, middle, bottom) to scroll a specified row to."
  },
  {
    "title": "isLandscape | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/1620061-islandscape",
    "html": "Parameters\norientation\n\nSpecify the value of the orientation property of the UIDevice class.\n\nReturn Value\n\ntrue if the device orientation is landscape; otherwise, false.\n\nSee Also\nOrientation testing\nvar isPortrait: Bool\nA Boolean value that indicates whether the device is in a portrait orientation.\nvar isFlat: Bool\nA Boolean value that indicates whether the specified orientation is face up or face down.\nvar isValidInterfaceOrientation: Bool\nA Boolean value that indicates whether the specified orientation is one of the portrait or landscape orientations."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623220-initwithcoder",
    "html": "See Also\nCreating a table view cell\n- initWithStyle:reuseIdentifier:\nInitializes a table cell with a style and a reuse identifier and returns it to the caller.\nUITableViewCellStyle\nAn enumeration for the various styles of cells."
  },
  {
    "title": "isPortrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/1620057-isportrait",
    "html": "Parameters\norientation\n\nSpecify the value of the orientation property of the UIDevice class.\n\nReturn Value\n\ntrue if the device orientation is portrait; otherwise, false.\n\nSee Also\nOrientation testing\nvar isLandscape: Bool\nA Boolean value that indicates whether the device is in a landscape orientation.\nvar isFlat: Bool\nA Boolean value that indicates whether the specified orientation is face up or face down.\nvar isValidInterfaceOrientation: Bool\nA Boolean value that indicates whether the specified orientation is one of the portrait or landscape orientations."
  },
  {
    "title": "UITextSearchMatchMethod | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextsearchmatchmethod",
    "html": "Topics\nConstants\nUITextSearchMatchMethodContains\nThe word contains the search string.\nUITextSearchMatchMethodStartsWith\nThe word contains the search string as a prefix.\nUITextSearchMatchMethodFullWord\nThe word matches the search string exactly.\nSee Also\nFind and replace\nUIFindInteraction\nAn interaction that provides text finding and replacing operations using a system find panel.\nUIFindInteractionDelegate\nA delegate object that provides a session object to manage the search state for a find interaction and receives notifications of search session lifetimes.\nUIFindSession\nAn abstract base class that manages the state, presentation, and behavior for a search that the find interaction initiates.\nUITextSearchingFindSession\nA find session object that wraps a searchable object implementing the text-searching protocol.\nUITextSearching\nThe methods you use on a find session’s searchable objects to perform search operations and decorate the found text results.\nUITextSearchOptions\nAn object containing the configurable options for a text search.\nUITextSearchFoundTextStyle\nConstants that describe the style a find session uses to decorate the text.\nUIFindSessionSearchResultDisplayStyle\nConstants that describe the results summary the find panel UI includes."
  },
  {
    "title": "UITableView.RowAnimation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/rowanimation",
    "html": "Overview\n\nYou specify one of these constants as a parameter of the insertRows(at:with:), insertSections(_:with:), deleteRows(at:with:),deleteSections(_:with:), reloadRows(at:with:), and reloadSections(_:with:) methods.\n\nTopics\nConstants\ncase fade\nThe inserted or deleted row or rows fade into or out of the table view.\ncase right\nThe inserted row or rows slide in from the right; the deleted row or rows slide out to the right.\ncase left\nThe inserted row or rows slide in from the left; the deleted row or rows slide out to the left.\ncase top\nThe inserted row or rows slide in from the top; the deleted row or rows slide out toward the top.\ncase bottom\nThe inserted row or rows slide in from the bottom; the deleted row or rows slide out toward the bottom.\ncase none\nThe inserted or deleted rows use the default animations.\ncase middle\nThe table view attempts to keep the old and new cells centered in the space they did or will occupy.\ncase automatic\nThe table view chooses an appropriate animation style for you.\nRelationships\nConforms To\nSendable\nSee Also\nInserting, deleting, and moving rows and sections\nfunc insertRows(at: [IndexPath], with: UITableView.RowAnimation)\nInserts rows in the table view at the locations that an array of index paths identifies, with an option to animate the insertion.\nfunc deleteRows(at: [IndexPath], with: UITableView.RowAnimation)\nDeletes the rows that an array of index paths identifies, with an option to animate the deletion.\nfunc insertSections(IndexSet, with: UITableView.RowAnimation)\nInserts one or more sections in the table view, with an option to animate the insertion.\nfunc deleteSections(IndexSet, with: UITableView.RowAnimation)\nDeletes one or more sections in the table view, with an option to animate the deletion.\nfunc moveRow(at: IndexPath, to: IndexPath)\nMoves the row at a specified location to a destination location.\nfunc moveSection(Int, toSection: Int)\nMoves a section to a new location in the table view."
  },
  {
    "title": "UIMenuElementStateOff | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementstate/uimenuelementstateoff",
    "html": "See Also\nStates\nUIMenuElementStateOn\nA constant indicating the menu element is in the “on” state.\nUIMenuElementStateMixed\nA constant indicating the menu element is in the “mixed” state."
  },
  {
    "title": "UIMenuElementAttributes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementattributes",
    "html": "Topics\nAttributes\nUIMenuElementAttributesDestructive\nAn attribute indicating the destructive style.\nUIMenuElementAttributesDisabled\nAn attribute indicating the disabled style.\nUIMenuElementAttributesHidden\nAn attribute indicating the hidden style.\nUIMenuElementAttributesKeepsMenuPresented\nAn attribute indicating that the menu remains presented after firing the element’s action instead of dismissing.\nSee Also\nMenu elements and keyboard shortcuts\nAdding Menus and Shortcuts to the Menu Bar and User Interface\nProvide quick access to useful actions by adding menus and keyboard shortcuts to your Mac app built with Mac Catalyst.\nAdopting Menus and UIActions in your User Interface\nAdd menus to your user interface, with built-in button support and bar-button items, and create custom menu experiences.\nUIMenuElement\nAn object representing a menu, action, or command.\nUIAction\nA menu element that performs its action in a block.\nUICommand\nA menu element that performs its action in a selector.\nUIKeyCommand\nAn object that specifies a key press perform on a hardware keyboard and the resulting action.\nUIDeferredMenuElement\nA placeholder menu element that the system replaces with the result of the block’s completion handler.\nUIMenuElementState\nConstants that indicate the state of an action- or command-based menu element.\nUIMenuLeaf\nAn interface for an object that represents a menu element without child elements."
  },
  {
    "title": "currentDevice | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevice/1620014-currentdevice",
    "html": "Return Value\n\nA singleton object that represents the current device.\n\nDiscussion\n\nYou access the properties of the returned UIDevice instance to obtain information about the device. You must instantiate the UIDevice instance before registering to receive device notifications."
  },
  {
    "title": "stateRestorationUserInterfaceIdiomKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1616853-staterestorationuserinterfaceidi",
    "html": "Discussion\n\nThe value of this key is an NSNumber object containing one of the values for the UIUserInterfaceIdiom enum. This value reflects whether the interface that was saved was targeting the iPad or iPhone idiom.\n\nSee Also\nManaging app state restoration\nfunc application(UIApplication, shouldSaveSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to securely preserve the app’s state.\nfunc application(UIApplication, shouldRestoreSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nfunc application(UIApplication, viewControllerWithRestorationIdentifierPath: [String], coder: NSCoder) -> UIViewController?\nAsks the delegate to provide the specified view controller.\nfunc application(UIApplication, willEncodeRestorableStateWith: NSCoder)\nTells your delegate to save any high-level state information at the beginning of the state preservation process.\nfunc application(UIApplication, didDecodeRestorableStateWith: NSCoder)\nTells your delegate to restore any high-level state information as part of the state restoration process.\nclass let stateRestorationBundleVersionKey: String\nThe version of your app responsible for creating the restoration archive.\nclass let stateRestorationSystemVersionKey: String\nThe version of the system on which your app created the restoration archive.\nclass let stateRestorationTimestampKey: String\nThe time your app created the restoration archive.\nclass let stateRestorationViewControllerStoryboardKey: String\nA reference to the storyboard that contains the view controller."
  },
  {
    "title": "NSLineBreakStrategyStandard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakstrategy/nslinebreakstrategystandard",
    "html": "Discussion\n\nThis strategy optimizes for displaying shorter strings that are common in UI labels. This strategy may be unsuitable for large amounts of text."
  },
  {
    "title": "indexForSectionIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801893-indexforsectionidentifier",
    "html": "See Also\nIdentifying sections\n- sectionIdentifierForIndex:\nReturns an identifier for the section at the index you specify in the collection view."
  },
  {
    "title": "UITableViewCellConfigurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcellconfigurationupdatehandler",
    "html": "Parameters\ncell\n\nThe table view cell to configure.\n\nstate\n\nThe new state to use for updating the cell’s configuration.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state."
  },
  {
    "title": "x | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiacceleration/1620652-x",
    "html": "Discussion\n\nWith the device held in portrait orientation and the screen facing you, the x axis runs from left (negative values) to right (positive values) across the face of the device.\n\nSee Also\nAccessing the acceleration values\n- y\nThe acceleration value for the y axis of the device.\nDeprecated\n- z\nThe acceleration value for the z axis of the device.\nDeprecated\ntimestamp\nThe relative time at which the acceleration event occurred.\nDeprecated"
  },
  {
    "title": "UIAccelerationValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccelerationvalue",
    "html": "Discussion\n\nThis type is used to store acceleration values, which are specified as g-force values, where the value 1.0 corresponds to the normal acceleration caused by gravity at the Earth’s surface."
  },
  {
    "title": "sharedAccelerometer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccelerometer/1620648-sharedaccelerometer",
    "html": "Return Value\n\nThe systemwide accelerometer object.\n\nDiscussion\n\nAlways use this method to retrieve the shared system accelerometer object. Do not create new instances of the UIAccelerometer class."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624917-initwithcoder",
    "html": "See Also\nCreating the view\n- initWithReuseIdentifier:\nInitializes a header-footer view with the specified reuse identifier."
  },
  {
    "title": "backgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600594-backgroundconfiguration",
    "html": "Discussion\n\nUsing a background configuration, you can obtain system default background styling for a variety of different view states. Create a background configuration with one of the default system styles, customize the configuration to match your view’s style as necessary, and assign the configuration to this property.\n\nUIBackgroundConfiguration *backgroundConfig = [UIBackgroundConfiguration listPlainHeaderFooterConfiguration];\n[backgroundConfig setBackgroundColor: [UIColor systemGrayColor]];\n[header setBackgroundConfiguration: backgroundConfig];\n\n\nA background configuration is mutually exclusive with background views, so you must use one approach or the other. Setting a non-nil value for this property resets the following APIs to nil:\n\nbackgroundColor\n\nbackgroundView\n\nSee Also\nConfiguring the background\n- defaultBackgroundConfiguration\nRetrieves a background configuration with system default values.\nautomaticallyUpdatesBackgroundConfiguration\nA Boolean value that determines whether the view automatically updates its background configuration when its state changes.\nbackgroundView\nThe background view of the header or footer."
  },
  {
    "title": "defaultBackgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/4013329-defaultbackgroundconfiguration",
    "html": "Return Value\n\nA default background configuration. The system determines default values for the configuration according to the section where the view appears.\n\nSee Also\nConfiguring the background\nbackgroundConfiguration\nThe current background configuration of the view.\nautomaticallyUpdatesBackgroundConfiguration\nA Boolean value that determines whether the view automatically updates its background configuration when its state changes.\nbackgroundView\nThe background view of the header or footer."
  },
  {
    "title": "updateConfigurationUsingState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600599-updateconfigurationusingstate",
    "html": "Discussion\n\nAvoid calling this method directly. Instead, use setNeedsUpdateConfiguration to request an update.\n\nOverride this method in a subclass to update the view’s configuration using the provided state.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the view.\n- setNeedsUpdateConfiguration\nInforms the view to update its configuration for its current state.\nconfigurationUpdateHandler\nA block for handling updates to the view’s configuration using the current state.\nUITableViewHeaderFooterViewConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "configurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3750917-configurationupdatehandler",
    "html": "Discussion\n\nA configuration update handler provides an alternative approach to overriding updateConfigurationUsingState: in a subclass. Set a configuration update handler to update the header footer view’s configuration using the new state in response to a configuration state change.\n\nSetting the value of this property calls setNeedsUpdateConfiguration. The system calls this handler after calling updateConfigurationUsingState:.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the view.\n- setNeedsUpdateConfiguration\nInforms the view to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the view’s configuration using the current state.\nUITableViewHeaderFooterViewConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "UITableViewHeaderFooterViewConfigurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterviewconfigurationupdatehandler",
    "html": "Parameters\ncell\n\nThe header footer view to configure.\n\nstate\n\nThe new state to use for updating the header footer view’s configuration.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the view.\n- setNeedsUpdateConfiguration\nInforms the view to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the view’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "applySnapshot:animatingDifferences: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182921-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nanimatingDifferences\n\nIf YES, the system animates the updates to the collection view. If NO, the system doesn’t animate the updates to the collection view.\n\nDiscussion\n\nThe diffable data source computes the difference between the collection view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\n- snapshot\nReturns a representation of the current state of the data in the collection view.\n- applySnapshot:animatingDifferences:completion:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\n- applySnapshotUsingReloadData:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\n- applySnapshotUsingReloadData:completion:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "childForStatusBarHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621451-childforstatusbarhidden",
    "html": "Discussion\n\nIf your container view controller derives the hidden state of the status bar from one of its child view controllers, implement this property to specify which child view controller you want to control the hidden/unhidden state. If you return nil or don’t override this property, the status bar hidden/unhidden state for self is used.\n\nCall setNeedsStatusBarAppearanceUpdate() if the child view controller for determining the hidden state of the status bar changes.\n\nSee Also\nManaging the status bar\nvar childForStatusBarStyle: UIViewController?\nCalled when the system needs the view controller to use for determining status bar style.\nvar preferredStatusBarStyle: UIStatusBarStyle\nThe preferred status bar style for the view controller.\nvar prefersStatusBarHidden: Bool\nSpecifies whether the view controller prefers the status bar to be hidden or shown.\nvar modalPresentationCapturesStatusBarAppearance: Bool\nSpecifies whether a view controller, presented non-fullscreen, takes over control of status bar appearance from the presenting view controller.\nvar preferredStatusBarUpdateAnimation: UIStatusBarAnimation\nSpecifies the animation style to use for hiding and showing the status bar for the view controller.\nfunc setNeedsStatusBarAppearanceUpdate()\nIndicates to the system that the view controller status bar attributes have changed."
  },
  {
    "title": "UIView.AnimationOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/animationoptions",
    "html": "Topics\nConstants\nstatic var layoutSubviews: UIView.AnimationOptions\nLay out subviews at commit time so that they are animated along with their parent.\nstatic var allowUserInteraction: UIView.AnimationOptions\nAllow the user to interact with views while they are being animated.\nstatic var beginFromCurrentState: UIView.AnimationOptions\nStart the animation from the current setting associated with an already in-flight animation.\nstatic var `repeat`: UIView.AnimationOptions\nRepeat the animation indefinitely.\nstatic var autoreverse: UIView.AnimationOptions\nRun the animation backwards and forwards (must be combined with the repeat option).\nstatic var overrideInheritedDuration: UIView.AnimationOptions\nForce the animation to use the original duration value specified when the animation was submitted.\nstatic var overrideInheritedCurve: UIView.AnimationOptions\nForce the animation to use the original curve value specified when the animation was submitted.\nstatic var allowAnimatedContent: UIView.AnimationOptions\nAnimate the views by changing the property values dynamically and redrawing the view.\nstatic var showHideTransitionViews: UIView.AnimationOptions\nHide or show views during a view transition.\nstatic var overrideInheritedOptions: UIView.AnimationOptions\nThe option to not inherit the animation type or any options.\nstatic var curveEaseInOut: UIView.AnimationOptions\nSpecify an ease-in ease-out curve, which causes the animation to begin slowly, accelerate through the middle of its duration, and then slow again before completing.\nstatic var curveEaseIn: UIView.AnimationOptions\nAn ease-in curve causes the animation to begin slowly, and then speed up as it progresses.\nstatic var curveEaseOut: UIView.AnimationOptions\nAn ease-out curve causes the animation to begin quickly, and then slow as it completes.\nstatic var curveLinear: UIView.AnimationOptions\nA linear animation curve causes an animation to occur evenly over its duration.\nstatic var transitionFlipFromLeft: UIView.AnimationOptions\nA transition that flips a view around its vertical axis from left to right (the left side of the view moves toward the front and right side toward the back).\nstatic var transitionFlipFromRight: UIView.AnimationOptions\nA transition that flips a view around its vertical axis from right to left (the right side of the view moves toward the front and left side toward the back).\nstatic var transitionCurlUp: UIView.AnimationOptions\nA transition that curls a view up from the bottom.\nstatic var transitionCurlDown: UIView.AnimationOptions\nA transition that curls a view down from the top.\nstatic var transitionCrossDissolve: UIView.AnimationOptions\nA transition that dissolves from one view to the next.\nstatic var transitionFlipFromTop: UIView.AnimationOptions\nA transition that flips a view around its horizontal axis from top to bottom (the top side of the view moves toward the front and the bottom side toward the back).\nstatic var transitionFlipFromBottom: UIView.AnimationOptions\nA transition that flips a view around its horizontal axis from bottom to top (the bottom side of the view moves toward the front and the top side toward the back).\nstatic var preferredFramesPerSecond30: UIView.AnimationOptions\nA frame rate of 30 frames per second.\nstatic var preferredFramesPerSecond60: UIView.AnimationOptions\nA frame rate of 60 frames per second.\nInitializers\ninit(rawValue: UInt)\nCreates an animation options structure with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable"
  },
  {
    "title": "childForStatusBarStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621433-childforstatusbarstyle",
    "html": "Return Value\n\nThe view controller whose status bar style should be used.\n\nDiscussion\n\nIf your container view controller derives its status bar style from one of its child view controllers, implement this method and return that child view controller. If you return nil or do not override this method, the status bar style for self is used. If the return value from this method changes, call the setNeedsStatusBarAppearanceUpdate() method.\n\nSee Also\nManaging the status bar\nvar childForStatusBarHidden: UIViewController?\nThe view controller to use for determining the hidden state of the status bar.\nvar preferredStatusBarStyle: UIStatusBarStyle\nThe preferred status bar style for the view controller.\nvar prefersStatusBarHidden: Bool\nSpecifies whether the view controller prefers the status bar to be hidden or shown.\nvar modalPresentationCapturesStatusBarAppearance: Bool\nSpecifies whether a view controller, presented non-fullscreen, takes over control of status bar appearance from the presenting view controller.\nvar preferredStatusBarUpdateAnimation: UIStatusBarAnimation\nSpecifies the animation style to use for hiding and showing the status bar for the view controller.\nfunc setNeedsStatusBarAppearanceUpdate()\nIndicates to the system that the view controller status bar attributes have changed."
  },
  {
    "title": "applySnapshot:animatingDifferences:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3356324-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nanimatingDifferences\n\nIf YES, the system animates the updates to the collection view. If NO, the system doesn’t animate the updates to the collection view.\n\ncompletion\n\nA closure to execute when the animations are complete. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe diffable data source computes the difference between the collection view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\n- snapshot\nReturns a representation of the current state of the data in the collection view.\n- applySnapshot:animatingDifferences:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\n- applySnapshotUsingReloadData:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\n- applySnapshotUsingReloadData:completion:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "contextMenuInteractionEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/3601222-contextmenuinteractionenabled",
    "html": "Discussion\n\nThe default value is NO.\n\nSee Also\nManaging context menus\nAdding Context Menus in Your App\nProvide quick access to useful actions by adding context menus to your iOS app.\ncontextMenuInteraction\nA context menu interaction for the control.\nshowsMenuAsPrimaryAction\nA Boolean value that determines whether the context menu interaction is the control’s primary action.\n- contextMenuInteraction:configurationForMenuAtLocation:\n- contextMenuInteraction:previewForDismissingMenuWithConfiguration:\n- contextMenuInteraction:previewForHighlightingMenuWithConfiguration:\n- contextMenuInteraction:willDisplayMenuForConfiguration:animator:\n- contextMenuInteraction:willEndForConfiguration:animator:\n- menuAttachmentPointForConfiguration:"
  },
  {
    "title": "cellForRowAtIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614983-cellforrowatindexpath",
    "html": "Parameters\nindexPath\n\nThe index path locating the row in the table view.\n\nReturn Value\n\nThe cell object at the corresponding index path. In versions of iOS earlier than iOS 15, this method returns nil if the cell isn’t visible or if indexPath is out of range. In iOS 15 and later, this method returns a non-nil cell if the table view retains a prepared cell at the specified index path, even if the cell isn’t currently visible.\n\nDiscussion\n\nIn iOS 15 and later, the table view retains a prepared cell in the following situations:\n\nCells that the table view prefetches and retains in its cache of prepared cells, but that aren’t visible because the table view hasn’t displayed them yet.\n\nCells that the table view finishes displaying and continues to retain in its cache of prepared cells because they remain near the visible region and might scroll back into view.\n\nThe cell that contains the first responder.\n\nThe cell that has focus.\n\nSee Also\nGetting cells and section-based views\n- headerViewForSection:\nReturns the header view for the specified section.\n- footerViewForSection:\nReturns the footer view for the specified section.\n- indexPathForCell:\nReturns an index path that represents the row and section of a specified table-view cell.\n- indexPathForRowAtPoint:\nReturns an index path that identifies the row and section at the specified point.\n- indexPathsForRowsInRect:\nReturns an array of index paths, each representing a row that the specified rectangle encloses.\nvisibleCells\nThe table cells that are visible in the table view.\nindexPathsForVisibleRows\nAn array of index paths, each identifying a visible row in the table view."
  },
  {
    "title": "UIApplicationSignificantTimeChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationsignificanttimechangenotification",
    "html": "Discussion\n\nThe system posts this notification when, for example, there’s a change to a new day (midnight), a carrier time update, or a change to, or from, daylight savings time. The notification doesn’t contain a user info dictionary.\n\nSee Also\nResponding to environment changes\n- applicationProtectedDataDidBecomeAvailable:\nTells the delegate that protected files are available now.\n- applicationProtectedDataWillBecomeUnavailable:\nTells the delegate that the protected files are about to become unavailable.\n- applicationDidReceiveMemoryWarning:\nTells the delegate when the app receives a memory warning from the system.\n- applicationSignificantTimeChange:\nTells the delegate when there is a significant change in the time.\nUIApplicationProtectedDataDidBecomeAvailable\nA notification that posts when the protected files become available for your code to access.\nUIApplicationProtectedDataWillBecomeUnavailable\nA notification that posts shortly before protected files are locked down and become inaccessible.\nUIApplicationDidReceiveMemoryWarningNotification\nA notification that posts when the app receives a warning from the operating system about low memory availability."
  },
  {
    "title": "UIApplicationDidReceiveMemoryWarningNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdidreceivememorywarningnotification",
    "html": "Discussion\n\nThis notification does not contain a userInfo dictionary.\n\nSee Also\nResponding to environment changes\n- applicationProtectedDataDidBecomeAvailable:\nTells the delegate that protected files are available now.\n- applicationProtectedDataWillBecomeUnavailable:\nTells the delegate that the protected files are about to become unavailable.\n- applicationDidReceiveMemoryWarning:\nTells the delegate when the app receives a memory warning from the system.\n- applicationSignificantTimeChange:\nTells the delegate when there is a significant change in the time.\nUIApplicationProtectedDataDidBecomeAvailable\nA notification that posts when the protected files become available for your code to access.\nUIApplicationProtectedDataWillBecomeUnavailable\nA notification that posts shortly before protected files are locked down and become inaccessible.\nUIApplicationSignificantTimeChangeNotification\nA notification that posts when there’s a significant change in time."
  },
  {
    "title": "UITableViewCellAccessoryDisclosureIndicator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcellaccessorytype/uitableviewcellaccessorydisclosureindicator",
    "html": "Discussion\n\nChoose this type when you want taps in the accessory view to display new content. Connect the accessory view itself to a push segue to display that content.\n\nThe table view doesn’t call the delegate’s tableView:accessoryButtonTappedForRowWithIndexPath: method in response to touch events in this accessory view.\n\nSee Also\nAccessory views\nUITableViewCellAccessoryNone\nNo accessory view.\nUITableViewCellAccessoryDetailDisclosureButton\nAn information button and a disclosure (chevron) control.\nUITableViewCellAccessoryCheckmark\nA checkmark image.\nUITableViewCellAccessoryDetailButton\nAn information button."
  },
  {
    "title": "hidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622585-hidden",
    "html": "Discussion\n\nSetting the value of this property to YES hides the receiver and setting it to NO shows the receiver. The default value is NO.\n\nA hidden view disappears from its window and does not receive input events. It remains in its superview’s list of subviews, however, and participates in autoresizing as usual. Hiding a view with subviews has the effect of hiding those subviews and any view descendants they might have. This effect is implicit and does not alter the hidden state of the receiver’s descendants.\n\nHiding the view that is the window’s current first responder causes the view’s next valid key view to become the new first responder.\n\nThe value of this property reflects the state of the receiver only and does not account for the state of the receiver’s ancestors in the view hierarchy. Thus this property can be NO but the receiver may still be hidden if an ancestor is hidden.\n\nSee Also\nConfiguring a view’s visual appearance\nbackgroundColor\nThe view’s background color.\nalpha\nThe view’s alpha value.\nopaque\nA Boolean value that determines whether the view is opaque.\ntintColor\nThe first nondefault tint color value in the view’s hierarchy, ascending from and starting with the view itself.\ntintAdjustmentMode\nThe first non-default tint adjustment mode value in the view’s hierarchy, ascending from and starting with the view itself.\nclipsToBounds\nA Boolean value that determines whether subviews are confined to the bounds of the view.\nclearsContextBeforeDrawing\nA Boolean value that determines whether the view’s bounds should be automatically cleared before drawing.\nmaskView\nAn optional view whose alpha channel is used to mask a view’s content.\nlayerClass\nReturns the class used to create the layer for instances of this class.\nlayer\nThe view’s Core Animation layer used for rendering."
  },
  {
    "title": "opaque | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622622-opaque",
    "html": "Discussion\n\nThis property provides a hint to the drawing system as to how it should treat the view. If set to YES, the drawing system treats the view as fully opaque, which allows the drawing system to optimize some drawing operations and improve performance. If set to NO, the drawing system composites the view normally with other content. The default value of this property is YES.\n\nAn opaque view is expected to fill its bounds with entirely opaque content—that is, the content should have an alpha value of 1.0. If the view is opaque and either does not fill its bounds or contains wholly or partially transparent content, the results are unpredictable. You should always set the value of this property to NO if the view is fully or partially transparent.\n\nYou only need to set a value for the opaque property in subclasses of UIView that draw their own content using the drawRect: method. The opaque property has no effect in system-provided classes such as UIButton, UILabel, UITableViewCell, and so on.\n\nSee Also\nConfiguring a view’s visual appearance\nbackgroundColor\nThe view’s background color.\nhidden\nA Boolean value that determines whether the view is hidden.\nalpha\nThe view’s alpha value.\ntintColor\nThe first nondefault tint color value in the view’s hierarchy, ascending from and starting with the view itself.\ntintAdjustmentMode\nThe first non-default tint adjustment mode value in the view’s hierarchy, ascending from and starting with the view itself.\nclipsToBounds\nA Boolean value that determines whether subviews are confined to the bounds of the view.\nclearsContextBeforeDrawing\nA Boolean value that determines whether the view’s bounds should be automatically cleared before drawing.\nmaskView\nAn optional view whose alpha channel is used to mask a view’s content.\nlayerClass\nReturns the class used to create the layer for instances of this class.\nlayer\nThe view’s Core Animation layer used for rendering."
  },
  {
    "title": "rectForRowAtIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614974-rectforrowatindexpath",
    "html": "Parameters\nindexPath\n\nAn index path object that identifies a row by its index and its section index.\n\nReturn Value\n\nA rectangle defining the area in which the table view draws the row or CGRectZero if indexPath is invalid.\n\nSee Also\nGetting the drawing areas for the table\n- rectForSection:\nReturns the drawing area for a specified section of the table view.\n- rectForFooterInSection:\nReturns the drawing area for the footer of the specified section.\n- rectForHeaderInSection:\nReturns the drawing area for the header of the specified section."
  },
  {
    "title": "rectForSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614951-rectforsection",
    "html": "Parameters\nsection\n\nAn index number identifying a section of the table view. Plain-style table views always have a section index of zero.\n\nReturn Value\n\nA rectangle defining the area in which the table view draws the section.\n\nSee Also\nGetting the drawing areas for the table\n- rectForRowAtIndexPath:\nReturns the drawing area for a row that an index path identifies.\n- rectForFooterInSection:\nReturns the drawing area for the footer of the specified section.\n- rectForHeaderInSection:\nReturns the drawing area for the header of the specified section."
  },
  {
    "title": "decodeRestorableStateWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621429-decoderestorablestatewithcoder",
    "html": "Parameters\ncoder\n\nThe coder object to use to decode the state of the view.\n\nDiscussion\n\nDo not call this method directly. The system calls this method during the state restoration process so that you can restore your view controller to its previous state.\n\nIf your app supports state restoration, override this method for any view controllers for which you also overrode the encodeRestorableStateWithCoder: method. Your implementation of this method should use any saved state information to restore the view controller to its previous configuration. If your encodeRestorableStateWithCoder: method called super, this method should similarly call super at some point in its implementation.\n\nSee Also\nManaging state restoration\nRestoring Your App’s State\nProvide continuity for the user by preserving current activities.\nrestorationIdentifier\nThe identifier that determines whether the view controller supports state restoration.\nrestorationClass\nThe class responsible for recreating this view controller when restoring the app's state.\n- encodeRestorableStateWithCoder:\nEncodes state-related information for the view controller.\n- applicationFinishedRestoringState\nCalled on restored view controllers after other object decoding is complete."
  },
  {
    "title": "indexSearch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614959-indexsearch",
    "html": "Discussion\n\nIf the data source includes this constant string in the array of strings it returns in sectionIndexTitles(for:), the section index displays a magnifying glass icon at the corresponding index location. This location should generally be the first title in the index.\n\nSee Also\nConfiguring the table index\nvar sectionIndexMinimumDisplayRowCount: Int\nThe number of table rows at which to display the index list on the right edge of the table.\nvar sectionIndexColor: UIColor?\nThe color to use for the table view’s index text.\nvar sectionIndexBackgroundColor: UIColor?\nThe color to use for the background of the table view’s section index.\nvar sectionIndexTrackingBackgroundColor: UIColor?\nThe color to use for the table view’s index background area."
  },
  {
    "title": "UICollectionLayoutListHeaderModeNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistheadermode/uicollectionlayoutlistheadermodenone",
    "html": "See Also\nHeader modes\nUICollectionLayoutListHeaderModeSupplementary\nA header mode that uses supplementary views to show headers.\nUICollectionLayoutListHeaderModeFirstItemInSection\nA header mode that styles the first item in a section as a header."
  },
  {
    "title": "editing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1615001-editing",
    "html": "Discussion\n\nWhen the value of this property is YES, the table view is in editing mode: The cells of the table might show an insertion or deletion control on the left side of each cell and a reordering control on the right side, depending on how the cell is configured. (See UITableViewCell for details.) Tapping a control causes the table view to invoke the data source method tableView:commitEditingStyle:forRowAtIndexPath:. The default value is NO.\n\nSee Also\nPutting the table into edit mode\n- setEditing:animated:\nToggles the table view into and out of editing mode."
  },
  {
    "title": "UITableViewScrollPositionNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewscrollposition/uitableviewscrollpositionnone",
    "html": "Discussion\n\nIf the row is already fully visible, no scrolling occurs. For example, if the row is above the visible area, the behavior is identical to that specified by UITableViewScrollPositionTop. This is the default."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623241-highlighted",
    "html": "Discussion\n\nThe highlighting affects the appearance of labels, image, and background. When the highlighted state of a cell is set to YES, labels are drawn in their highlighted text color (default is white). The default value is NO. If you set the highlighted state to YES through this property, the transition to the new state appearance is not animated. For animated highlighted-state transitions, see the setHighlighted:animated: method.\n\nNote that for highlighting to work properly, you must fetch the cell’s labels using the textLabel and detailTextLabel properties and set each label’s highlightedTextColor property; for images, get the cell’s image using the imageView property and set the UIImageView object’s highlightedImage property.\n\nSee Also\nManaging cell selection and highlighting\nselectionStyle\nThe style of selection for a cell.\nUITableViewCellSelectionStyle\nThe style of selected cells.\nselected\nA Boolean value that indicates whether the cell is selected.\n- setSelected:animated:\nSets the selected state of the cell, optionally animating the transition between states.\n- setHighlighted:animated:\nSets the highlighted state of the cell, optionally animating the transition between states."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/visibility/3727230",
    "html": "See Also\nComparing separator visibility\nstatic func == (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator visibility enumeration by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UIApplicationLaunchOptionsBluetoothCentralsKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsbluetoothcentralskey",
    "html": "Discussion\n\nThe presence of this key indicates that the app previously had one or more CBCentralManager objects and was relaunched by the Bluetooth system to continue actions associated with those objects. The value of this key is an NSArray object containing one or more NSString objects.\n\nEach string in the array represents the restoration identifier for a central manager object. This is the same string you assigned to the CBCentralManagerOptionRestoreIdentifierKey key when you initialized the central manager object previously. The system provides the restoration identifiers only for central managers that had active or pending peripheral connections or were scanning for peripherals.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "actionWithTitle:image:identifier:handler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaction/3340167-actionwithtitle",
    "html": "Parameters\ntitle\n\nThe title to display for the action.\n\nimage\n\nThe image to display next to the action’s title. Only the contextSystem menu system supports the display of an image, and only when the app is running in iOS.\n\nidentifier\n\nThe unique identifier for the action. Specify nil to let this method create a unique identifier for you.\n\nhandler\n\nThe handler to invoke after a person selects the action. This handler has the following parameter:\n\naction\n\nThe action that a person selects.\n\nReturn Value\n\nA newly initialized action object.\n\nSee Also\nCreating an action\n+ actionWithHandler:\nCreates an action with the specified handler.\n+ captureTextFromCameraActionForResponder:identifier:\nCreates an action for capturing text using the device’s camera.\nUIActionIdentifier\nA type that represents an action identifier.\nUIActionHandler\nA type that defines the block for an action handler."
  },
  {
    "title": "captureTextFromCameraActionForResponder:identifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaction/3778552-capturetextfromcameraactionforre",
    "html": "Parameters\nresponder\n\nThe UIKeyInput responder to send the captureTextFromCamera: message to.\n\nidentifier\n\nThe unique identifier for the action. Specify nil to let this method create a unique identifier for you.\n\nSee Also\nCreating an action\n+ actionWithTitle:image:identifier:handler:\nCreates an action with the specified title, image, identifier, and handler.\n+ actionWithHandler:\nCreates an action with the specified handler.\nUIActionIdentifier\nA type that represents an action identifier.\nUIActionHandler\nA type that defines the block for an action handler."
  },
  {
    "title": "actionWithHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaction/3656167-actionwithhandler",
    "html": "Parameters\nhandler\n\nThe handler to invoke after a person selects the action. This handler has the following parameter:\n\naction\n\nThe action that a person selects.\n\nSee Also\nCreating an action\n+ actionWithTitle:image:identifier:handler:\nCreates an action with the specified title, image, identifier, and handler.\n+ captureTextFromCameraActionForResponder:identifier:\nCreates an action for capturing text using the device’s camera.\nUIActionIdentifier\nA type that represents an action identifier.\nUIActionHandler\nA type that defines the block for an action handler."
  },
  {
    "title": "defaultBackgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/4013328-defaultbackgroundconfiguration",
    "html": "Return Value\n\nA default background configuration. The system determines default values for the configuration according to the section where the cell appears.\n\nSee Also\nConfiguring the background\nbackgroundConfiguration\nThe current background configuration of the cell.\nautomaticallyUpdatesBackgroundConfiguration\nA Boolean value that determines whether the cell automatically updates its background configuration when its state changes.\nbackgroundView\nThe view to use as the background of the cell.\nselectedBackgroundView\nThe view to use as the background for a selected cell.\nmultipleSelectionBackgroundView\nThe background view to use for a selected cell when the table view allows multiple row selections."
  },
  {
    "title": "stateRestorationSystemVersionKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1616860-staterestorationsystemversionkey",
    "html": "Discussion\n\nThe value of this key is an NSString object containing the iOS system version that was installed when the archive was saved. The format of this string matches the format of the value in the systemVersion property of the UIDevice class.\n\nSee Also\nManaging app state restoration\nfunc application(UIApplication, shouldSaveSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to securely preserve the app’s state.\nfunc application(UIApplication, shouldRestoreSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nfunc application(UIApplication, viewControllerWithRestorationIdentifierPath: [String], coder: NSCoder) -> UIViewController?\nAsks the delegate to provide the specified view controller.\nfunc application(UIApplication, willEncodeRestorableStateWith: NSCoder)\nTells your delegate to save any high-level state information at the beginning of the state preservation process.\nfunc application(UIApplication, didDecodeRestorableStateWith: NSCoder)\nTells your delegate to restore any high-level state information as part of the state restoration process.\nclass let stateRestorationBundleVersionKey: String\nThe version of your app responsible for creating the restoration archive.\nclass let stateRestorationTimestampKey: String\nThe time your app created the restoration archive.\nclass let stateRestorationUserInterfaceIdiomKey: String\nThe user interface idiom that was in effect when your app created the restoration archive.\nclass let stateRestorationViewControllerStoryboardKey: String\nA reference to the storyboard that contains the view controller."
  },
  {
    "title": "stateRestorationBundleVersionKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1616852-staterestorationbundleversionkey",
    "html": "Discussion\n\nThe value of this key is an NSString object that identifies the version of your app (as obtained from the CFBundleVersion key of your app’s Info.plist file) that was present when the state information was saved. You can use the value of this key to help make choices about how to proceed during state restoration. For example, if the key indicates that the state is associated with an older version of your app, you might want to avoid restoring the previous state altogether or modify the restoration process more significantly.\n\nSee Also\nManaging app state restoration\nfunc application(UIApplication, shouldSaveSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to securely preserve the app’s state.\nfunc application(UIApplication, shouldRestoreSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nfunc application(UIApplication, viewControllerWithRestorationIdentifierPath: [String], coder: NSCoder) -> UIViewController?\nAsks the delegate to provide the specified view controller.\nfunc application(UIApplication, willEncodeRestorableStateWith: NSCoder)\nTells your delegate to save any high-level state information at the beginning of the state preservation process.\nfunc application(UIApplication, didDecodeRestorableStateWith: NSCoder)\nTells your delegate to restore any high-level state information as part of the state restoration process.\nclass let stateRestorationSystemVersionKey: String\nThe version of the system on which your app created the restoration archive.\nclass let stateRestorationTimestampKey: String\nThe time your app created the restoration archive.\nclass let stateRestorationUserInterfaceIdiomKey: String\nThe user interface idiom that was in effect when your app created the restoration archive.\nclass let stateRestorationViewControllerStoryboardKey: String\nA reference to the storyboard that contains the view controller."
  },
  {
    "title": "UIApplicationLaunchOptionsLocalNotificationKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionslocalnotificationkey",
    "html": "Deprecated\n\nUse userNotificationCenter:didReceiveNotificationResponse:withCompletionHandler: instead.\n\nDiscussion\n\nThe value of this key is the UILocalNotification object that was triggered. For additional information about handling local notifications, see the application:didReceiveLocalNotification: method.\n\nThis key is also used to access the same value in the userInfo dictionary of the notification named UIApplicationDidFinishLaunchingNotification.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated"
  },
  {
    "title": "stateRestorationTimestampKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1616865-staterestorationtimestampkey",
    "html": "Discussion\n\nThe value of this key is an NSDate object containing the date when the restoration archive was saved. The date is specified using coordinated universal time (UTC).\n\nSee Also\nManaging app state restoration\nfunc application(UIApplication, shouldSaveSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to securely preserve the app’s state.\nfunc application(UIApplication, shouldRestoreSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nfunc application(UIApplication, viewControllerWithRestorationIdentifierPath: [String], coder: NSCoder) -> UIViewController?\nAsks the delegate to provide the specified view controller.\nfunc application(UIApplication, willEncodeRestorableStateWith: NSCoder)\nTells your delegate to save any high-level state information at the beginning of the state preservation process.\nfunc application(UIApplication, didDecodeRestorableStateWith: NSCoder)\nTells your delegate to restore any high-level state information as part of the state restoration process.\nclass let stateRestorationBundleVersionKey: String\nThe version of your app responsible for creating the restoration archive.\nclass let stateRestorationSystemVersionKey: String\nThe version of the system on which your app created the restoration archive.\nclass let stateRestorationUserInterfaceIdiomKey: String\nThe user interface idiom that was in effect when your app created the restoration archive.\nclass let stateRestorationViewControllerStoryboardKey: String\nA reference to the storyboard that contains the view controller."
  },
  {
    "title": "stateRestorationViewControllerStoryboardKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1616861-staterestorationviewcontrollerst",
    "html": "Discussion\n\nThe value of this key is a UIStoryboard object representing the storyboard from which a view controller was initially obtained. You don’t need to write this key to the coder yourself. Each UIViewController class automatically writes this key to the coder during the state preservation process.\n\nSee Also\nManaging app state restoration\nfunc application(UIApplication, shouldSaveSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to securely preserve the app’s state.\nfunc application(UIApplication, shouldRestoreSecureApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nfunc application(UIApplication, viewControllerWithRestorationIdentifierPath: [String], coder: NSCoder) -> UIViewController?\nAsks the delegate to provide the specified view controller.\nfunc application(UIApplication, willEncodeRestorableStateWith: NSCoder)\nTells your delegate to save any high-level state information at the beginning of the state preservation process.\nfunc application(UIApplication, didDecodeRestorableStateWith: NSCoder)\nTells your delegate to restore any high-level state information as part of the state restoration process.\nclass let stateRestorationBundleVersionKey: String\nThe version of your app responsible for creating the restoration archive.\nclass let stateRestorationSystemVersionKey: String\nThe version of the system on which your app created the restoration archive.\nclass let stateRestorationTimestampKey: String\nThe time your app created the restoration archive.\nclass let stateRestorationUserInterfaceIdiomKey: String\nThe user interface idiom that was in effect when your app created the restoration archive."
  },
  {
    "title": "UIDeviceBatteryStateDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevicebatterystatedidchangenotification",
    "html": "Discussion\n\nFor this notification to be sent, you must set the batteryMonitoringEnabled property to YES.\n\nYou can obtain the battery state by getting the value of the batteryState property.\n\nSee Also\nManaging notifications\nUIDeviceBatteryLevelDidChangeNotification\nA notification that posts when the battery level changes.\nUIDeviceOrientationDidChangeNotification\nA notification that posts when the orientation of the device changes.\nUIDeviceProximityStateDidChangeNotification\nA notification that posts when the state of the proximity sensor changes."
  },
  {
    "title": "UIDevice.BatteryState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevice/batterystate",
    "html": "Overview\n\nThese constants are used by the batteryState property.\n\nTopics\nConstants\ncase unknown\nThe battery state for the device can’t be determined.\ncase unplugged\nThe device isn’t plugged into power; the battery is discharging.\ncase charging\nThe device is plugged into power and the battery is less than 100% charged.\ncase full\nThe device is plugged into power and the battery is 100% charged.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the device battery state\nvar batteryLevel: Float\nThe battery charge level for the device.\nvar isBatteryMonitoringEnabled: Bool\nA Boolean value that indicates whether battery monitoring is enabled.\nvar batteryState: UIDevice.BatteryState\nThe battery state for the device."
  },
  {
    "title": "UIApplicationLaunchOptionsURLKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsurlkey",
    "html": "Discussion\n\nThe value of this key is an NSURL object containing the URL to open. This key is also used to access the same value in the userInfo dictionary of the notification named UIApplicationDidFinishLaunchingNotification.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "batteryMonitoringEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevice/1620045-batterymonitoringenabled",
    "html": "Discussion\n\nEnable battery monitoring if your app needs to be notified of changes to the battery state, or if you want to check the battery charge level.\n\nThe default value of this property is NO, which:\n\nDisables the posting of battery-related notifications\n\nDisables the ability to read battery charge level and battery state\n\nSee Also\nGetting the device battery state\nbatteryLevel\nThe battery charge level for the device.\nbatteryState\nThe battery state for the device.\nUIDeviceBatteryState\nConstants that describe the battery power state of the device.\nRelated Documentation\nUIDeviceBatteryLevelDidChangeNotification\nA notification that posts when the battery level changes.\nUIDeviceBatteryStateDidChangeNotification\nA notification that posts when battery state changes."
  },
  {
    "title": "UIDeviceOrientationDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientationdidchangenotification",
    "html": "Discussion\n\nYou can obtain the new orientation by getting the value of the orientation property.\n\nSee Also\nManaging notifications\nUIDeviceBatteryLevelDidChangeNotification\nA notification that posts when the battery level changes.\nUIDeviceBatteryStateDidChangeNotification\nA notification that posts when battery state changes.\nUIDeviceProximityStateDidChangeNotification\nA notification that posts when the state of the proximity sensor changes."
  },
  {
    "title": "UIDeviceBatteryLevelDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevicebatteryleveldidchangenotification",
    "html": "Discussion\n\nFor this notification to be sent, you must set the batteryMonitoringEnabled property to YES.\n\nNotifications for battery level change are sent no more frequently than once per minute. Don’t attempt to calculate battery drainage rate or battery time remaining; drainage rate can change frequently depending on built-in applications as well as your application.\n\nYou can obtain the battery level by getting the value of the batteryLevel property.\n\nSee Also\nManaging notifications\nUIDeviceBatteryStateDidChangeNotification\nA notification that posts when battery state changes.\nUIDeviceOrientationDidChangeNotification\nA notification that posts when the orientation of the device changes.\nUIDeviceProximityStateDidChangeNotification\nA notification that posts when the state of the proximity sensor changes."
  },
  {
    "title": "UIDeviceProximityStateDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceproximitystatedidchangenotification",
    "html": "Discussion\n\nYou can obtain the proximity state by getting the value of the proximityState property.\n\nSee Also\nManaging notifications\nUIDeviceBatteryLevelDidChangeNotification\nA notification that posts when the battery level changes.\nUIDeviceBatteryStateDidChangeNotification\nA notification that posts when battery state changes.\nUIDeviceOrientationDidChangeNotification\nA notification that posts when the orientation of the device changes."
  },
  {
    "title": "UIDeviceOrientationIsValidInterfaceOrientation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/1623095-uideviceorientationisvalidinterf",
    "html": "See Also\nDetermining the current orientation\nUIDeviceOrientationIsPortrait\nReturns a Boolean value that indicates whether the device is in a portrait orientation.\nUIDeviceOrientationIsLandscape\nReturns a Boolean value that indicates whether the device is in a landscape orientation.\nUIDeviceOrientationIsFlat\nReturns a Boolean value that indicates whether the specified orientation is face up or face down."
  },
  {
    "title": "sectionIdentifierForIndex: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801894-sectionidentifierforindex",
    "html": "See Also\nIdentifying sections\n- indexForSectionIdentifier:\nReturns an index for the section with the identifier you specify in the collection view."
  },
  {
    "title": "resolvedBackgroundColorForTintColor: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600330-resolvedbackgroundcolorfortintco",
    "html": "Discussion\n\nThe resulting color depends on backgroundColor and backgroundColorTransformer.\n\nSee Also\nCustomizing the background\ncustomView\nA custom view for the background.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the background and stroke.\nbackgroundInsets\nThe insets (or outsets, if negative) for the background and stroke, relative to the edges of the containing view.\nedgesAddingLayoutMarginsToBackgroundInsets\nThe edges on which the configuration adds the containing view’s layout margins to the background insets.\nbackgroundColor\nThe color of the background.\nbackgroundColorTransformer\nThe color transformer for resolving the background color.\nvisualEffect\nThe visual effect that the configuration applies to the background.\nstrokeColor\nThe color of the stroke.\nstrokeColorTransformer\nThe color transformer for resolving the stroke color.\n- resolvedStrokeColorForTintColor:\nGenerates the resolved stroke color for the specified tint color, using the stroke color and color transformer.\nstrokeWidth\nThe width of the stroke.\nstrokeOutset\nThe outset (or inset, if negative) for the stroke.\nimage\nThe image displayed in the view’s background.\nimageContentMode\nA property that determines the layout of a background image in a view when its bounds change."
  },
  {
    "title": "clearConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600320-clearconfiguration",
    "html": "Return Value\n\nAn empty background configuration with a transparent background and no default styling.\n\nDiscussion\n\nCreate this configuration for the background of a view. It configures the view with a transparent background and no default styling."
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce.always | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/bounce/always",
    "html": "See Also\nSelecting bounce options\ncase automatic\nThe orthogonal scroll view bounces when it encounters a content boundary.\ncase never\nThe orthogonal scroll view stops scrolling immediately when it encounters a content boundary without bouncing."
  },
  {
    "title": "NSLineBreakStrategyHangulWordPriority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakstrategy/nslinebreakstrategyhangulwordpriority",
    "html": "Discussion\n\nTo avoid breaking between Hangul characters, this strategy is preferred for typesetting modern Korean documents that display UI strings."
  },
  {
    "title": "NSLineBreakStrategyPushOut | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakstrategy/nslinebreakstrategypushout",
    "html": "Discussion\n\nTo avoid an orphan word on the last line of a paragraph before a page break, the text system may extend individual lines by one or more words. Typically, the text system only pushes out the last line by one word."
  },
  {
    "title": "y | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiacceleration/1620644-y",
    "html": "Discussion\n\nWith the device held in portrait orientation and the screen facing you, the y axis runs from bottom (negative values) to top (positive values) across the face of the device.\n\nSee Also\nAccessing the acceleration values\n- x\nThe acceleration value for the x axis of the device.\nDeprecated\n- z\nThe acceleration value for the z axis of the device.\nDeprecated\ntimestamp\nThe relative time at which the acceleration event occurred.\nDeprecated"
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccelerometer/1620646-delegate",
    "html": "Discussion\n\nThe UIAccelerometerDelegate is a formal protocol, so your delegate object must implement the method it defines. The shared accelerometer object delivers the acceleration data to your delegate at the specified interval. It delivers these events on the main thread of your application when it is in the NSDefaultRunLoopMode run loop mode.\n\nSee Also\nAccessing the accelerometer properties\nupdateInterval\nThe interval at which to deliver acceleration data to the delegate.\nDeprecated"
  },
  {
    "title": "contentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600596-contentconfiguration",
    "html": "Discussion\n\nUsing a content configuration, you can set the view’s content and styling for a variety of different view states. You can get the default configuration using defaultContentConfiguration, assign your content to the configuration, customize any other properties, and assign it to the view as the current contentConfiguration.\n\nSetting a content configuration replaces the existing contentView of the view with a new content view instance from the configuration, or directly applies the configuration to the existing content view if the configuration is compatible with the existing content view type.\n\nThe default value is nil. After you set a content configuration to this property, setting this property back to nil replaces the current content view with a new, empty content view.\n\nSee Also\nManaging the content\n- defaultContentConfiguration\nRetrieves a default list content configuration for the view’s style.\nautomaticallyUpdatesContentConfiguration\nA Boolean value that determines whether the view automatically updates its content configuration when its state changes.\ncontentView\nThe content view of the header or footer."
  },
  {
    "title": "updateInterval | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccelerometer/1620651-updateinterval",
    "html": "Discussion\n\nThis property is measured in seconds. The value of this property is capped to certain minimum and maximum values. The maximum value is determined by the maximum frequency supported by the hardware. To ensure that it can deliver device orientation events in a timely fashion, the system determines the appropriate minimum value based on its needs.\n\nChanges to this property are delivered synchronously to the accelerometer hardware. You may change this property while the delegate is non-nil.\n\nSee Also\nAccessing the accelerometer properties\ndelegate\nThe delegate object you want to receive acceleration events.\nDeprecated"
  },
  {
    "title": "traitOverrides | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/4134900-traitoverrides",
    "html": "See Also\nOverriding trait values\nUITraitOverrides"
  },
  {
    "title": "editing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621498-editing",
    "html": "Discussion\n\nIf YES, the view controller currently allows editing; otherwise, NO.\n\nIf the view is editable and the associated navigation controller contains an edit-done button, then a Done button is displayed; otherwise, an Edit button is displayed. Clicking either button toggles the state of this property. Add an edit-done button by setting the custom left or right view of the navigation item to the value returned by the editButtonItem method. Set the editing property to the initial state of your view. Use the setEditing:animated: method as an action method to animate the transition of this state if the view is already displayed.\n\nSee Also\nAdding editing behaviors to your view controller\n- setEditing:animated:\nSets whether the view controller shows an editable view.\neditButtonItem\nReturns a bar button item that toggles its title and associated state between Edit and Done."
  },
  {
    "title": "defaultContentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600597-defaultcontentconfiguration",
    "html": "Return Value\n\nA default list content configuration. The system determines default values for the configuration according to the section where the view appears.\n\nDiscussion\n\nThe default content configuration has preconfigured default styling, but doesn’t contain any content. After you get the default configuration, you assign your content to it, customize any other properties, and assign it to the view as the current contentConfiguration.\n\nSee Also\nManaging the content\ncontentConfiguration\nThe current content configuration of the view.\nautomaticallyUpdatesContentConfiguration\nA Boolean value that determines whether the view automatically updates its content configuration when its state changes.\ncontentView\nThe content view of the header or footer."
  },
  {
    "title": "childForHomeIndicatorAutoHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2887508-childforhomeindicatorautohidden",
    "html": "Return Value\n\nThe child view controller to consult. The default implementation of this method returns nil.\n\nDiscussion\n\nWhen implementing a container view controller, override this method if you want one your child view controllers to determine whether to display the visual indicator. If you do, the system calls the prefersHomeIndicatorAutoHidden method of the returned view controller. If the method returns nil, the system calls the prefersHomeIndicatorAutoHidden method of the current view controller.\n\nSee Also\nCoordinating with system gestures\nvar preferredScreenEdgesDeferringSystemGestures: UIRectEdge\nThe screen edges for which you want your gestures to take precedence over the system gestures.\nvar childForScreenEdgesDeferringSystemGestures: UIViewController?\nReturns the child view controller that should be queried to see if its gestures should take precedence.\nfunc setNeedsUpdateOfScreenEdgesDeferringSystemGestures()\nNotifies the system of changes to the screen edges that defer system gestures.\nvar prefersHomeIndicatorAutoHidden: Bool\nA Boolean that indicates whether the system is allowed to hide the visual indicator for returning to the Home Screen.\nfunc setNeedsUpdateOfHomeIndicatorAutoHidden()\nNotifies UIKit that your view controller updated its preference regarding the visual indicator for returning to the Home screen."
  },
  {
    "title": "snapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182925-snapshot",
    "html": "Return Value\n\nA snapshot containing section and item identifiers in the order that they appear in the UI.\n\nSee Also\nUpdating data\n- applySnapshot:animatingDifferences:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\n- applySnapshot:animatingDifferences:completion:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\n- applySnapshotUsingReloadData:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\n- applySnapshotUsingReloadData:completion:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "initWithFrame: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622488-initwithframe",
    "html": "Parameters\nframe\n\nThe frame rectangle for the view, measured in points. The origin of the frame is relative to the superview in which you plan to add it. This method uses the frame rectangle to set the center and bounds properties accordingly.\n\nReturn Value\n\nAn initialized view object.\n\nDiscussion\n\nThe new view object must be inserted into the view hierarchy of a window before it can be used. If you create a view object programmatically, this method is the designated initializer for the UIView class. Subclasses can override this method to perform any custom initialization but must call super at the beginning of their implementation.\n\nIf you use Interface Builder to design your interface, this method is not called when your view objects are subsequently loaded from the nib file. Objects in a nib file are reconstituted and then initialized using their initWithCoder: method, which modifies the attributes of the view to match the attributes stored in the nib file. For detailed information about how views are loaded from a nib file, see Resource Programming Guide.\n\nSee Also\nCreating a view object\n- initWithCoder:\nCreates a view from data in an unarchiver.\nRelated Documentation\nView Programming Guide for iOS\nUIKit User Interface Catalog"
  },
  {
    "title": "snapshotForSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600515-snapshotforsection",
    "html": "See Also\nUpdating section data\n- applySnapshot:toSection:animatingDifferences:\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes.\n- applySnapshot:toSection:animatingDifferences:completion:\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes and executing a completion handler."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622477-initwithcoder",
    "html": "See Also\nCreating a view object\n- initWithFrame:\nCreates a view with the specified frame rectangle."
  },
  {
    "title": "applySnapshotUsingReloadData:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801892-applysnapshotusingreloaddata",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\ncompletion\n\nA closure to execute when the reload completes. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the collection view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\n- snapshot\nReturns a representation of the current state of the data in the collection view.\n- applySnapshot:animatingDifferences:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\n- applySnapshot:animatingDifferences:completion:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\n- applySnapshotUsingReloadData:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes."
  },
  {
    "title": "applySnapshotUsingReloadData: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3801891-applysnapshotusingreloaddata",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the collection view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\n- snapshot\nReturns a representation of the current state of the data in the collection view.\n- applySnapshot:animatingDifferences:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\n- applySnapshot:animatingDifferences:completion:\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\n- applySnapshotUsingReloadData:completion:\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "childForScreenEdgesDeferringSystemGestures | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2887511-childforscreenedgesdeferringsyst",
    "html": "Discussion\n\nWhen implementing a container view controller, override this method if one of your child view controllers defines screen-edge gestures that should take precedence over the system gestures. UIKit then uses the preferredScreenEdgesDeferringSystemGestures property of the returned child view controller to determine which screen edges have competing gesture recognizers.\n\nSee Also\nCoordinating with system gestures\nvar preferredScreenEdgesDeferringSystemGestures: UIRectEdge\nThe screen edges for which you want your gestures to take precedence over the system gestures.\nfunc setNeedsUpdateOfScreenEdgesDeferringSystemGestures()\nNotifies the system of changes to the screen edges that defer system gestures.\nvar prefersHomeIndicatorAutoHidden: Bool\nA Boolean that indicates whether the system is allowed to hide the visual indicator for returning to the Home Screen.\nvar childForHomeIndicatorAutoHidden: UIViewController?\nReturns the child view controller that is consulted about its preference for displaying a visual indicator for returning to the Home screen.\nfunc setNeedsUpdateOfHomeIndicatorAutoHidden()\nNotifies UIKit that your view controller updated its preference regarding the visual indicator for returning to the Home screen."
  },
  {
    "title": "insertRowsAtIndexPaths:withRowAnimation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614879-insertrowsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of index path objects, each representing a row index and section index that together identify a row in the table view.\n\nanimation\n\nA constant that either specifies the kind of animation to perform when inserting the cell or requests no animation. See UITableViewRowAnimation for descriptions of the constants.\n\nDiscussion\n\nUITableView calls the relevant delegate and data source methods immediately afterward to get the cells and other content for visible cells.\n\nWhen this method is called in an animation block defined by the beginUpdates and endUpdates methods, UITableView defers any insertions of rows or sections until after it has handled the deletions of rows or sections. This order is followed regardless of how the insertion and deletion method calls are ordered. This is unlike inserting or removing an item in a mutable array, in which the operation can affect the array index used for the successive insertion or removal operation. For more on this subject, see Batch Insertion, Deletion, and Reloading of Rows and Sections in Table View Programming Guide for iOS.\n\nSee Also\nInserting, deleting, and moving rows and sections\n- deleteRowsAtIndexPaths:withRowAnimation:\nDeletes the rows that an array of index paths identifies, with an option to animate the deletion.\n- insertSections:withRowAnimation:\nInserts one or more sections in the table view, with an option to animate the insertion.\n- deleteSections:withRowAnimation:\nDeletes one or more sections in the table view, with an option to animate the deletion.\nUITableViewRowAnimation\nThe type of animation to use when inserting or deleting rows.\n- moveRowAtIndexPath:toIndexPath:\nMoves the row at a specified location to a destination location.\n- moveSection:toSection:\nMoves a section to a new location in the table view.\nRelated Documentation\n- reloadRowsAtIndexPaths:withRowAnimation:\nReloads the specified rows using the provided animation effect."
  },
  {
    "title": "UITableViewCell.EditingStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/editingstyle",
    "html": "Overview\n\nUse these constants with the editingStyle property.\n\nTopics\nConstants\ncase none\nThe cell has no editing control.\ncase delete\nThe cell has the delete editing control; this control is a red circle enclosing a minus sign.\ncase insert\nThe cell has the insert editing control; this control is a green circle enclosing a plus sign.\nRelationships\nConforms To\nSendable\nSee Also\nEditing the cell\nvar isEditing: Bool\nA Boolean value that indicates whether the cell is in an editable state.\nfunc setEditing(Bool, animated: Bool)\nToggles the cell into and out of editing mode.\nvar editingStyle: UITableViewCell.EditingStyle\nThe editing style of the cell.\nvar showingDeleteConfirmation: Bool\nA Boolean value that indicates whether the cell is currently showing the delete-confirmation button.\nvar showsReorderControl: Bool\nA Boolean value that determines whether the cell shows the reordering control."
  },
  {
    "title": "UIContentSizeCategoryDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentsizecategorydidchangenotification",
    "html": "Discussion\n\nThis notification is sent when the value in the preferredContentSizeCategory property changes. The userInfo dictionary of the notification contains the UIContentSizeCategoryNewValueKey key, which reflects the new setting.\n\nSee Also\nManaging the preferred content size\npreferredContentSizeCategory\nThe font sizing option preferred by the user.\nUIContentSizeCategory\nConstants that indicate the preferred size of your content.\nUIContentSizeCategoryAdjusting\nA collection of methods that give controls an easy way to adopt automatic adjustment to content category changes.\nUIContentSizeCategoryNewValueKey\nA key that reflects the new preferred content size."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/visibility/3727749",
    "html": "See Also\nComparing separator visibility\nstatic func != (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator visibility enumeration by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UIMenuElementState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uimenuelementstate",
    "html": "Topics\nStates\nUIMenuElementStateOff\nA constant indicating the menu element is in the “off” state.\nUIMenuElementStateOn\nA constant indicating the menu element is in the “on” state.\nUIMenuElementStateMixed\nA constant indicating the menu element is in the “mixed” state.\nSee Also\nMenu elements and keyboard shortcuts\nAdding Menus and Shortcuts to the Menu Bar and User Interface\nProvide quick access to useful actions by adding menus and keyboard shortcuts to your Mac app built with Mac Catalyst.\nAdopting Menus and UIActions in your User Interface\nAdd menus to your user interface, with built-in button support and bar-button items, and create custom menu experiences.\nUIMenuElement\nAn object representing a menu, action, or command.\nUIAction\nA menu element that performs its action in a block.\nUICommand\nA menu element that performs its action in a selector.\nUIKeyCommand\nAn object that specifies a key press perform on a hardware keyboard and the resulting action.\nUIDeferredMenuElement\nA placeholder menu element that the system replaces with the result of the block’s completion handler.\nUIMenuElementAttributes\nAttributes that determine the style of the menu element.\nUIMenuLeaf\nAn interface for an object that represents a menu element without child elements."
  },
  {
    "title": "backgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600409-backgroundcolor",
    "html": "Discussion\n\nThe default vaue is nil, which means that the configuration uses the system background color for the specified appearance.\n\nSee Also\nConfiguring appearance\nappearance\nThe overall appearance of the list layout.\nUICollectionLayoutListAppearance\nConstants that describe the appearance of the list."
  },
  {
    "title": "UICollectionLayoutListAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance",
    "html": "Topics\nList Appearances\nUICollectionLayoutListAppearancePlain\nThe plain list appearance.\nUICollectionLayoutListAppearanceGrouped\nThe grouped list appearance.\nUICollectionLayoutListAppearanceInsetGrouped\nThe inset grouped list appearance.\nUICollectionLayoutListAppearanceSidebar\nThe sidebar list appearance.\nUICollectionLayoutListAppearanceSidebarPlain\nThe plain sidebar list appearance.\nSee Also\nConfiguring appearance\nappearance\nThe overall appearance of the list layout.\nbackgroundColor\nThe background color of the list."
  },
  {
    "title": "showsSeparators | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3601202-showsseparators",
    "html": "See Also\nConfiguring separators\nseparatorConfiguration\nThe section’s preferred configuration for list separators.\nUIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nitemSeparatorHandler\nThe closure that provides granular control over the list separator appearance of each item.\nUICollectionLayoutListItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "separatorConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3727309-separatorconfiguration",
    "html": "Discussion\n\nThis configuration only takes effect if showsSeparators is YES.\n\nFor more granular control over list separator appearance, use itemSeparatorHandler.\n\nSee Also\nConfiguring separators\nshowsSeparators\nA Boolean value that determines whether the list shows separators between cells.\nUIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nitemSeparatorHandler\nThe closure that provides granular control over the list separator appearance of each item.\nUICollectionLayoutListItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "itemSeparatorHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3727308-itemseparatorhandler",
    "html": "Discussion\n\nThe list section treats the configuration that returns from this closure as the final separator configuration for the item at the input index path.\n\nSee Also\nConfiguring separators\nshowsSeparators\nA Boolean value that determines whether the list shows separators between cells.\nseparatorConfiguration\nThe section’s preferred configuration for list separators.\nUIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nUICollectionLayoutListItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "headerMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600411-headermode",
    "html": "Discussion\n\nThe default value is UICollectionLayoutListHeaderModeNone.\n\nSee Also\nConfiguring headers and footers\nfooterMode\nThe type of footer to use for the list.\nUICollectionLayoutListHeaderMode\nConstants that describe the list’s header mode.\nUICollectionLayoutListFooterMode\nConstants that describe the list’s footer mode.\nheaderTopPadding\nThe amount of padding above each section header.\nUICollectionViewLayoutAutomaticDimension\nA constant that specifies a default value for a particular dimension."
  },
  {
    "title": "UICollectionLayoutListItemSeparatorHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistitemseparatorhandler",
    "html": "Parameters\nindexPath\n\nThe NSIndexPath of the cell to configure separators for.\n\nsectionSeparatorConfiguration\n\nThe list section's separator configuration for the cell at indexPath. This configuration contains the values for separator visibility and insets according to the current state of the item.\n\nReturn Value\n\nThe configuration to use for the separators at indexPath.\n\nSee Also\nConfiguring separators\nshowsSeparators\nA Boolean value that determines whether the list shows separators between cells.\nseparatorConfiguration\nThe section’s preferred configuration for list separators.\nUIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nitemSeparatorHandler\nThe closure that provides granular control over the list separator appearance of each item."
  },
  {
    "title": "footerMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600410-footermode",
    "html": "Discussion\n\nThe default value is UICollectionLayoutListFooterModeNone.\n\nSee Also\nConfiguring headers and footers\nheaderMode\nThe type of header to use for the list.\nUICollectionLayoutListHeaderMode\nConstants that describe the list’s header mode.\nUICollectionLayoutListFooterMode\nConstants that describe the list’s footer mode.\nheaderTopPadding\nThe amount of padding above each section header.\nUICollectionViewLayoutAutomaticDimension\nA constant that specifies a default value for a particular dimension."
  },
  {
    "title": "UICollectionLayoutListHeaderMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistheadermode",
    "html": "Topics\nHeader modes\nUICollectionLayoutListHeaderModeNone\nNo headers are shown.\nUICollectionLayoutListHeaderModeSupplementary\nA header mode that uses supplementary views to show headers.\nUICollectionLayoutListHeaderModeFirstItemInSection\nA header mode that styles the first item in a section as a header.\nSee Also\nConfiguring headers and footers\nheaderMode\nThe type of header to use for the list.\nfooterMode\nThe type of footer to use for the list.\nUICollectionLayoutListFooterMode\nConstants that describe the list’s footer mode.\nheaderTopPadding\nThe amount of padding above each section header.\nUICollectionViewLayoutAutomaticDimension\nA constant that specifies a default value for a particular dimension."
  },
  {
    "title": "UIListContentTextAlignmentJustified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextalignment/uilistcontenttextalignmentjustified",
    "html": "See Also\nText alignment\nUIListContentTextAlignmentCenter\nThe text has centered alignment.\nUIListContentTextAlignmentNatural\nThe text uses the default alignment that the system associates with the current localization of the app."
  },
  {
    "title": "headerTopPadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3750827-headertoppadding",
    "html": "Discussion\n\nThe default value is UICollectionViewLayoutAutomaticDimension.\n\nSee Also\nConfiguring headers and footers\nheaderMode\nThe type of header to use for the list.\nfooterMode\nThe type of footer to use for the list.\nUICollectionLayoutListHeaderMode\nConstants that describe the list’s header mode.\nUICollectionLayoutListFooterMode\nConstants that describe the list’s footer mode.\nUICollectionViewLayoutAutomaticDimension\nA constant that specifies a default value for a particular dimension."
  },
  {
    "title": "UICollectionLayoutListSwipeActionsConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistswipeactionsconfigurationprovider",
    "html": "See Also\nCustomizing swipe actions\nleadingSwipeActionsConfigurationProvider\nThe closure that provides the set of actions to display when swiping on the leading edge of the cell.\ntrailingSwipeActionsConfigurationProvider\nThe closure that provides the set of actions to display when swiping on the trailing edge of the cell."
  },
  {
    "title": "UIListContentTextAlignmentCenter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextalignment/uilistcontenttextalignmentcenter",
    "html": "See Also\nText alignment\nUIListContentTextAlignmentJustified\nThe text has justified alignment.\nUIListContentTextAlignmentNatural\nThe text uses the default alignment that the system associates with the current localization of the app."
  },
  {
    "title": "leadingSwipeActionsConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3650427-leadingswipeactionsconfiguration",
    "html": "See Also\nCustomizing swipe actions\ntrailingSwipeActionsConfigurationProvider\nThe closure that provides the set of actions to display when swiping on the trailing edge of the cell.\nUICollectionLayoutListSwipeActionsConfigurationProvider\nA closure that configures the swipe actions for a cell."
  },
  {
    "title": "trailingSwipeActionsConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3650428-trailingswipeactionsconfiguratio",
    "html": "See Also\nCustomizing swipe actions\nleadingSwipeActionsConfigurationProvider\nThe closure that provides the set of actions to display when swiping on the leading edge of the cell.\nUICollectionLayoutListSwipeActionsConfigurationProvider\nA closure that configures the swipe actions for a cell."
  },
  {
    "title": "UICollectionLayoutListFooterMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistfootermode",
    "html": "Topics\nFooter modes\nUICollectionLayoutListFooterModeNone\nNo footers are shown.\nUICollectionLayoutListFooterModeSupplementary\nA footer mode that uses supplementary views to show footers.\nSee Also\nConfiguring headers and footers\nheaderMode\nThe type of header to use for the list.\nfooterMode\nThe type of footer to use for the list.\nUICollectionLayoutListHeaderMode\nConstants that describe the list’s header mode.\nheaderTopPadding\nThe amount of padding above each section header.\nUICollectionViewLayoutAutomaticDimension\nA constant that specifies a default value for a particular dimension."
  },
  {
    "title": "encodeRestorableStateWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621461-encoderestorablestatewithcoder",
    "html": "Parameters\ncoder\n\nThe coder object to use to encode the state of the view controller.\n\nDiscussion\n\nDo not call this method directly. The system calls this method during the state preservation process to give your view controller or view-controller subclass a chance to save state-related information.\n\nWhen deciding what data to save, write the smallest amount of data needed to restore the view controller to its current configuration. The information you save should be data that you could not easily recreate, such as the user’s current selection. You might also save references to any data objects that the view controller was using, but never write the data objects themselves to the coder. Instead, store enough information so that you can retrieve the data objects from your app's main data structures again.\n\nImportant\n\nThis method is not a substitute for saving your app's data structures persistently to disk. You should continue to save your app's actual data to iCloud or the local file system using existing techniques. This method is intended only for saving configuration state or other information related to your app's user interface. You should consider any data you write to the coder as purgeable and be prepared for it to be unavailable during subsequent launches.\n\nIt is strongly recommended that you call super at some point during your implementation to give parent classes an opportunity to save information. A UIViewController object saves a reference to the presented view controller and to the storyboard (if any) that was used to create the view controller. The view controller also asks the views in its view hierarchy to save any relevant information. However, a view controller does not automatically save references to contained child view controllers. If you are implementing a custom container view controller, you must encode the child view controller objects yourself if you want them to be preserved.\n\nYour implementation of this method can encode other restorable objects views, view controllers, and objects that adopt the UIStateRestoring protocol, using the encodeObject:forKey: method of the provided coder object. Encoding a restorable object writes that object's restoration identifier to the coder. That identifier is then used during the decode process to locate the new version of the object. If the view or view controller defines its own version of this method, that method is also called at some point so that the object can encode its own state.\n\nFor objects that are not restorable, encoding the object writes its data (and not a restoration identifier) to the archive. Such objects must adopt the NSCoding protocol. During decoding, the system creates a new object that is initialized with the data from the archive.\n\nSee Also\nManaging state restoration\nRestoring Your App’s State\nProvide continuity for the user by preserving current activities.\nrestorationIdentifier\nThe identifier that determines whether the view controller supports state restoration.\nrestorationClass\nThe class responsible for recreating this view controller when restoring the app's state.\n- decodeRestorableStateWithCoder:\nDecodes and restores state-related information for the view controller.\n- applicationFinishedRestoringState\nCalled on restored view controllers after other object decoding is complete."
  },
  {
    "title": "UITrackingRunLoopMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitrackingrunloopmode",
    "html": "Discussion\n\nYou can use this mode to add timers that fire during tracking."
  },
  {
    "title": "indexPathForItemIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182922-indexpathforitemidentifier",
    "html": "Parameters\nidentifier\n\nThe identifier of the item in the collection view.\n\nReturn Value\n\nThe item's index path, or nil if no item is found with the provided item identifier.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\n- itemIdentifierForIndexPath:\nReturns an identifier for the item at the specified index path in the collection view."
  },
  {
    "title": "moveRowAtIndexPath:toIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614987-moverowatindexpath",
    "html": "Parameters\nindexPath\n\nAn index path identifying the row to move.\n\nnewIndexPath\n\nAn index path identifying the row that’s the destination of the row at indexPath. The existing row at that location slides up or down to an adjoining index position to make room for it.\n\nDiscussion\n\nYou can combine row-move operations with row-insertion and row-deletion operations within a beginUpdates–endUpdates block to have all changes occur together as a single animation.\n\nUnlike the row-insertion and row-deletion methods, this method doesn’t take an animation parameter. For rows that are moved, the moved row animates straight from the starting position to the ending position. Also unlike the other methods, this method allows only one row to be moved per call. If you want multiple rows moved, you can call this method repeatedly within a beginUpdates–endUpdates block.\n\nSee Also\nInserting, deleting, and moving rows and sections\n- insertRowsAtIndexPaths:withRowAnimation:\nInserts rows in the table view at the locations that an array of index paths identifies, with an option to animate the insertion.\n- deleteRowsAtIndexPaths:withRowAnimation:\nDeletes the rows that an array of index paths identifies, with an option to animate the deletion.\n- insertSections:withRowAnimation:\nInserts one or more sections in the table view, with an option to animate the insertion.\n- deleteSections:withRowAnimation:\nDeletes one or more sections in the table view, with an option to animate the deletion.\nUITableViewRowAnimation\nThe type of animation to use when inserting or deleting rows.\n- moveSection:toSection:\nMoves a section to a new location in the table view.\nRelated Documentation\n- reloadRowsAtIndexPaths:withRowAnimation:\nReloads the specified rows using the provided animation effect."
  },
  {
    "title": "minimumScaleFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailabletextproperties/4173122-minimumscalefactor",
    "html": "Discussion\n\nIf you set adjustsFontSizeToFitWidth to YES, this property defines the smallest multiplier the view uses to fit the text."
  },
  {
    "title": "UITableViewCell.AccessoryType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/accessorytype",
    "html": "Overview\n\nUse these constants to set the value of the accessoryType property.\n\nSeveral accessory views support additional interactions. For example, a detail button conveys that there is additional information for the user to see. For information about how to respond to interactions with a specific accessory view, see the discussion for that type.\n\nTopics\nAccessory views\ncase none\nNo accessory view.\ncase disclosureIndicator\nA chevron-shaped control for presenting new content.\ncase detailDisclosureButton\nAn information button and a disclosure (chevron) control.\ncase checkmark\nA checkmark image.\ncase detailButton\nAn information button.\nRelationships\nConforms To\nSendable\nSee Also\nManaging accessory views\nvar accessoryType: UITableViewCell.AccessoryType\nThe type of standard accessory view for the cell to use in the table view’s normal state.\nvar accessoryView: UIView?\nThe view to use on the right side of the cell, typically as a control, in the table view’s normal state.\nvar editingAccessoryType: UITableViewCell.AccessoryType\nThe type of standard accessory view for the cell to use in the table view’s editing state.\nvar editingAccessoryView: UIView?\nThe view to use on the right side of the cell, typically as a control, in the table view’s editing state."
  },
  {
    "title": "UIApplicationLaunchOptionsSourceApplicationKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionssourceapplicationkey",
    "html": "Discussion\n\nThe value of this key is an NSString object containing the bundle ID of the app that made the request. If the request originated from another app belonging to your team, UIKit sets the value of this key to the ID of that app. If the team identifier of the originating app is different than the team identifier of the current app, the value of the key is nil.\n\nThis key is also used to access the same value in the userInfo dictionary of the notification named UIApplicationDidFinishLaunchingNotification.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsRemoteNotificationKey\nA key indicating that a remote notification is available for the app to process.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "UIApplicationLaunchOptionsRemoteNotificationKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationlaunchoptionsremotenotificationkey",
    "html": "Discussion\n\nThe value of this key is an NSDictionary containing the payload of the remote notification. See the description of application:didReceiveRemoteNotification: for further information about handling remote notifications.\n\nThis key is also used to access the same value in the userInfo dictionary of the notification named UIApplicationDidFinishLaunchingNotification.\n\nSee Also\nAccessing launch options\nUIApplicationLaunchOptionsBluetoothCentralsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nUIApplicationLaunchOptionsBluetoothPeripheralsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nUIApplicationLaunchOptionsCloudKitShareMetadataKey\nA key indicating that the app received a CloudKit share invitation.\nUIApplicationLaunchOptionsEventAttributionKey\nUIApplicationLaunchOptionsLocationKey\nA key indicating that the app was launched to handle an incoming location event.\nUIApplicationLaunchOptionsNewsstandDownloadsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nUIApplicationLaunchOptionsShortcutItemKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nUIApplicationLaunchOptionsSourceApplicationKey\nA key indicating that another app requested the launch of your app.\nUIApplicationLaunchOptionsURLKey\nA key indicating that the app was launched so that it could open the specified URL.\nUIApplicationLaunchOptionsUserActivityDictionaryKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nUIApplicationLaunchOptionsUserActivityTypeKey\nA key indicating the type of user activity that the user wants to continue.\nUIApplicationLaunchOptionsAnnotationKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nUIApplicationLaunchOptionsLocalNotificationKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "itemIdentifierForIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182924-itemidentifierforindexpath",
    "html": "Parameters\nindexPath\n\nThe index path of the item in the collection view.\n\nReturn Value\n\nThe item's identifier, or nil if no item is found at the provided index path.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an item identifier from its corresponding index path with no significant overhead.\n\nSee Also\nIdentifying items\n- indexPathForItemIdentifier:\nReturns an index path for the item with the specified identifier in the collection view."
  },
  {
    "title": "contentScrollViewForEdge: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/3750929-contentscrollviewforedge",
    "html": "Parameters\nedge\n\nThe edge the scroll view observes for alignment, NSDirectionalRectEdgeTop or NSDirectionalRectEdgeBottom. Passing any other value raises an exception.\n\nReturn Value\n\nThe scroll view the view controller observes for the edge.\n\nDiscussion\n\nToolbars, navigation bars, and tab bars adjust their appearance when the edge of a scroll view’s content aligns with the edge of the bar. If you want to disable this behavior for one or more edges, override this method and return nil for the appropriate edge. If you don’t set a scroll view with setContentScrollView:forEdge: or setContentScrollView(_:), the default implementation of this method returns nil.\n\nThe following example disables the scroll edge view for the top edge only. This example disables the appearance changes of the navigation bar at the top edge, but not the toolbar at the bottom edge.\n\noverride func contentScrollView(for edge: NSDirectionalRectEdge) -> UIScrollView? {\n    if edge == .top {\n        return nil\n    } else {\n        return super.contentScrollView(for: edge)\n    }\n}\n\n\nSee Also\nWorking with scrolling content\n- setContentScrollView:forEdge:\nSets the scroll view that bars observe for the specified edge."
  },
  {
    "title": "deleteRowsAtIndexPaths:withRowAnimation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614960-deleterowsatindexpaths",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects identifying the rows to delete.\n\nanimation\n\nA constant that indicates how the deletion is to be animated, for example, fade out or slide out from the bottom. See UITableViewRowAnimation for descriptions of these constants.\n\nDiscussion\n\nWhen this method is called in an animation block defined by the beginUpdates and endUpdates methods, UITableView defers any insertions of rows or sections until after it has handled the deletions of rows or sections. This order is followed regardless how the insertion and deletion method calls are ordered. This is unlike inserting or removing an item in a mutable array, in which the operation can affect the array index used for the successive insertion or removal operation. For more on this subject, see Batch Insertion, Deletion, and Reloading of Rows and Sections in Table View Programming Guide for iOS.\n\nSee Also\nInserting, deleting, and moving rows and sections\n- insertRowsAtIndexPaths:withRowAnimation:\nInserts rows in the table view at the locations that an array of index paths identifies, with an option to animate the insertion.\n- insertSections:withRowAnimation:\nInserts one or more sections in the table view, with an option to animate the insertion.\n- deleteSections:withRowAnimation:\nDeletes one or more sections in the table view, with an option to animate the deletion.\nUITableViewRowAnimation\nThe type of animation to use when inserting or deleting rows.\n- moveRowAtIndexPath:toIndexPath:\nMoves the row at a specified location to a destination location.\n- moveSection:toSection:\nMoves a section to a new location in the table view.\nRelated Documentation\n- reloadRowsAtIndexPaths:withRowAnimation:\nReloads the specified rows using the provided animation effect."
  },
  {
    "title": "deselectRowAtIndexPath:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614989-deselectrowatindexpath",
    "html": "Parameters\nindexPath\n\nAn index path identifying a row in the table view.\n\nanimated\n\nYES if you want to animate the deselection, and NO if the change should be immediate.\n\nDiscussion\n\nCalling this method doesn’t cause the delegate to receive a tableView:willDeselectRowAtIndexPath: or tableView:didDeselectRowAtIndexPath: message, nor does it send UITableViewSelectionDidChangeNotification notifications to observers.\n\nCalling this method doesn’t cause any scrolling to the deselected row.\n\nSee Also\nSelecting rows\nindexPathForSelectedRow\nAn index path that identifies the row and section of the selected row.\nindexPathsForSelectedRows\nThe index paths that represent the selected rows.\n- selectRowAtIndexPath:animated:scrollPosition:\nSelects a row in the table view that an index path identifies, optionally scrolling the row to a location in the table view.\nallowsSelection\nA Boolean value that determines whether users can select a row.\nallowsMultipleSelection\nA Boolean value that determines whether users can select more than one row outside of editing mode.\nallowsSelectionDuringEditing\nA Boolean value that determines whether users can select cells while the table view is in editing mode.\nallowsMultipleSelectionDuringEditing\nA Boolean value that controls whether users can select more than one cell simultaneously in editing mode.\nselectionFollowsFocus\nA Boolean value that triggers an automatic selection when focus moves to a cell.\nUITableViewSelectionDidChangeNotification\nA notification that posts when the selected row in the posting table view changes."
  },
  {
    "title": "UITableViewSelectionDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewselectiondidchangenotification",
    "html": "Discussion\n\nThere’s no userInfo dictionary associated with this notification.\n\nSee Also\nSelecting rows\nindexPathForSelectedRow\nAn index path that identifies the row and section of the selected row.\nindexPathsForSelectedRows\nThe index paths that represent the selected rows.\n- selectRowAtIndexPath:animated:scrollPosition:\nSelects a row in the table view that an index path identifies, optionally scrolling the row to a location in the table view.\n- deselectRowAtIndexPath:animated:\nDeselects a row that an index path identifies, with an option to animate the deselection.\nallowsSelection\nA Boolean value that determines whether users can select a row.\nallowsMultipleSelection\nA Boolean value that determines whether users can select more than one row outside of editing mode.\nallowsSelectionDuringEditing\nA Boolean value that determines whether users can select cells while the table view is in editing mode.\nallowsMultipleSelectionDuringEditing\nA Boolean value that controls whether users can select more than one cell simultaneously in editing mode.\nselectionFollowsFocus\nA Boolean value that triggers an automatic selection when focus moves to a cell."
  },
  {
    "title": "selectRowAtIndexPath:animated:scrollPosition: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614875-selectrowatindexpath",
    "html": "Parameters\nindexPath\n\nAn index path identifying a row in the table view.\n\nanimated\n\nYES if you want to animate the selection and any change in position; NO if the change should be immediate.\n\nscrollPosition\n\nA constant that identifies a relative position in the table view (top, middle, bottom) for the row when scrolling concludes. See UITableViewScrollPosition for descriptions of valid constants.\n\nDiscussion\n\nCalling this method doesn’t cause the delegate to receive a tableView:willSelectRowAtIndexPath: or tableView:didSelectRowAtIndexPath: message, nor does it send UITableViewSelectionDidChangeNotification notifications to observers.\n\nSpecial considerations\n\nPassing UITableViewScrollPositionNone results in no scrolling, rather than the minimum scrolling described for that constant. To scroll to the newly selected row with minimum scrolling, select the row using this method with UITableViewScrollPositionNone, then call scrollToRowAtIndexPath:atScrollPosition:animated: with UITableViewScrollPositionNone.\n\nNSIndexPath *rowToSelect;  // assume this exists and is set properly\nUITableView *myTableView;  // assume this exists\n \n[myTableView selectRowAtIndexPath:rowToSelect animated:YES scrollPosition:UITableViewScrollPositionNone];\n[myTableView scrollToRowAtIndexPath:rowToSelect atScrollPosition:UITableViewScrollPositionNone animated:YES];\n\nSee Also\nSelecting rows\nindexPathForSelectedRow\nAn index path that identifies the row and section of the selected row.\nindexPathsForSelectedRows\nThe index paths that represent the selected rows.\n- deselectRowAtIndexPath:animated:\nDeselects a row that an index path identifies, with an option to animate the deselection.\nallowsSelection\nA Boolean value that determines whether users can select a row.\nallowsMultipleSelection\nA Boolean value that determines whether users can select more than one row outside of editing mode.\nallowsSelectionDuringEditing\nA Boolean value that determines whether users can select cells while the table view is in editing mode.\nallowsMultipleSelectionDuringEditing\nA Boolean value that controls whether users can select more than one cell simultaneously in editing mode.\nselectionFollowsFocus\nA Boolean value that triggers an automatic selection when focus moves to a cell.\nUITableViewSelectionDidChangeNotification\nA notification that posts when the selected row in the posting table view changes."
  },
  {
    "title": "defaultWritingDirectionForLanguage: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsparagraphstyle/1535327-defaultwritingdirectionforlangua",
    "html": "Parameters\nlanguageName\n\nThe language specified in ISO language region format. Can be nil to return a default writing direction derived from the user’s defaults database.\n\nReturn Value\n\nThe default writing direction.\n\nSee Also\nDetermining writing direction\nbaseWritingDirection\nThe base writing direction for the paragraph.\nNSWritingDirection\nConstants that specify the writing direction."
  },
  {
    "title": "isDescendantOfView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622521-isdescendantofview",
    "html": "Parameters\nview\n\nThe view to test against the receiver’s view hierarchy.\n\nReturn Value\n\nYES if the receiver is an immediate or distant subview of view or if view is the receiver itself; otherwise NO.\n\nSee Also\nManaging the view hierarchy\nsuperview\nThe receiver’s superview, or nil if it has none.\nsubviews\nThe receiver’s immediate subviews.\nwindow\nThe receiver’s window object, or nil if it has none.\n- addSubview:\nAdds a view to the end of the receiver’s list of subviews.\n- bringSubviewToFront:\nMoves the specified subview so that it appears on top of its siblings.\n- sendSubviewToBack:\nMoves the specified subview so that it appears behind its siblings.\n- removeFromSuperview\nUnlinks the view from its superview and its window, and removes it from the responder chain.\n- insertSubview:atIndex:\nInserts a subview at the specified index.\n- insertSubview:aboveSubview:\nInserts a view above another view in the view hierarchy.\n- insertSubview:belowSubview:\nInserts a view below another view in the view hierarchy.\n- exchangeSubviewAtIndex:withSubviewAtIndex:\nExchanges the subviews at the specified indices."
  },
  {
    "title": "sizeForChildContentContainer:withParentContainerSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentcontainer/1621484-sizeforchildcontentcontainer",
    "html": "Required\n\nParameters\ncontainer\n\nThe child view controller.\n\nparentSize\n\nThe size of the parent view controller.\n\nReturn Value\n\nThe size to apply to the child view controller.\n\nDiscussion\n\nContainer view controllers use this method to return the sizes for their child view controllers. UIKit calls the method as part of the default implementation of the viewWillTransitionToSize:withTransitionCoordinator: method for view controllers. It calls the method once for each child view controller embedded in the view controller. If you’re implementing a custom container view controller, you should override this method and use it to return the sizes of the contained children.\n\nView controllers and presentation controllers return the value in parentSize by default.\n\nSee Also\nResponding to changes in child view controllers\n- preferredContentSizeDidChangeForChildContentContainer:\nNotifies an interested controller that the preferred content size of one of its children changed.\n\nRequired\n\n- systemLayoutFittingSizeDidChangeForChildContentContainer:\nNotifies the container that a child view controller was resized using Auto Layout.\n\nRequired\n\npreferredContentSize\nThe preferred size for the container’s content.\n\nRequired"
  },
  {
    "title": "indexPathsForRowsInRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614991-indexpathsforrowsinrect",
    "html": "Parameters\nrect\n\nA rectangle defining an area of the table view in local coordinates.\n\nReturn Value\n\nAn array of NSIndexPath objects each representing a row and section index identifying a row within rect. Returns an empty array if there aren’t any rows to return.\n\nSee Also\nGetting cells and section-based views\n- cellForRowAtIndexPath:\nReturns the table cell at the index path you specify.\n- headerViewForSection:\nReturns the header view for the specified section.\n- footerViewForSection:\nReturns the footer view for the specified section.\n- indexPathForCell:\nReturns an index path that represents the row and section of a specified table-view cell.\n- indexPathForRowAtPoint:\nReturns an index path that identifies the row and section at the specified point.\nvisibleCells\nThe table cells that are visible in the table view.\nindexPathsForVisibleRows\nAn array of index paths, each identifying a visible row in the table view."
  },
  {
    "title": "indexPathForRowAtPoint: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614874-indexpathforrowatpoint",
    "html": "Parameters\npoint\n\nA point in the local coordinate system of the table view (the table view’s bounds).\n\nReturn Value\n\nAn index path representing the row and section associated with point, or nil if the point is out of the bounds of any row.\n\nSee Also\nGetting cells and section-based views\n- cellForRowAtIndexPath:\nReturns the table cell at the index path you specify.\n- headerViewForSection:\nReturns the header view for the specified section.\n- footerViewForSection:\nReturns the footer view for the specified section.\n- indexPathForCell:\nReturns an index path that represents the row and section of a specified table-view cell.\n- indexPathsForRowsInRect:\nReturns an array of index paths, each representing a row that the specified rectangle encloses.\nvisibleCells\nThe table cells that are visible in the table view.\nindexPathsForVisibleRows\nAn array of index paths, each identifying a visible row in the table view."
  },
  {
    "title": "indexPathForCell: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614881-indexpathforcell",
    "html": "Parameters\ncell\n\nA cell object of the table view.\n\nReturn Value\n\nAn index path representing the row and section of the cell, or nil if the index path is invalid.\n\nSee Also\nGetting cells and section-based views\n- cellForRowAtIndexPath:\nReturns the table cell at the index path you specify.\n- headerViewForSection:\nReturns the header view for the specified section.\n- footerViewForSection:\nReturns the footer view for the specified section.\n- indexPathForRowAtPoint:\nReturns an index path that identifies the row and section at the specified point.\n- indexPathsForRowsInRect:\nReturns an array of index paths, each representing a row that the specified rectangle encloses.\nvisibleCells\nThe table cells that are visible in the table view.\nindexPathsForVisibleRows\nAn array of index paths, each identifying a visible row in the table view."
  },
  {
    "title": "headerViewForSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614965-headerviewforsection",
    "html": "Parameters\nsection\n\nAn index number that identifies a section of the table. Table views in a plain style have a section index of zero.\n\nReturn Value\n\nThe header view associated with the section, or nil if the section does not have a header view.\n\nSee Also\nGetting cells and section-based views\n- cellForRowAtIndexPath:\nReturns the table cell at the index path you specify.\n- footerViewForSection:\nReturns the footer view for the specified section.\n- indexPathForCell:\nReturns an index path that represents the row and section of a specified table-view cell.\n- indexPathForRowAtPoint:\nReturns an index path that identifies the row and section at the specified point.\n- indexPathsForRowsInRect:\nReturns an array of index paths, each representing a row that the specified rectangle encloses.\nvisibleCells\nThe table cells that are visible in the table view.\nindexPathsForVisibleRows\nAn array of index paths, each identifying a visible row in the table view."
  },
  {
    "title": "newValueUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentsizecategory/1623012-newvalueuserinfokey",
    "html": "Discussion\n\nThis key’s value is an NSString object that reflects the new value of the preferredContentSizeCategory property.\n\nSee Also\nFont size change notifications\nstatic let didChangeNotification: NSNotification.Name\nA notification that posts when the user changes the preferred content size setting."
  },
  {
    "title": "universalLinksOnly | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/openexternalurloptionskey/1648680-universallinksonly",
    "html": "Discussion\n\nWhen you include this key in the options dictionary of the open(_:options:completionHandler:) method, the method opens the URL only if the URL is a valid universal link and there is an installed app capable of opening that URL. The value of this key is an NSNumber object containing a Boolean value."
  },
  {
    "title": "supportedInterfaceOrientationsForWindow: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623091-supportedinterfaceorientationsfo",
    "html": "Parameters\nwindow\n\nThe window whose default interface orientations you want to retrieve.\n\nReturn Value\n\nA bit mask specifying which orientations are supported. See UIInterfaceOrientationMask for valid bit-mask values. The value returned by this method must not be 0.\n\nDiscussion\n\nStarting in iOS 8, you should employ the UITraitCollection and UITraitEnvironment APIs, and size class properties as used in those APIs, instead of using this method or otherwise writing your app in terms of interface orientation.\n\nThis method returns the default interface orientations for the app. These orientations are used only for view controllers that do not specify their own. If your app delegate implements the application:supportedInterfaceOrientationsForWindow: method, the system does not call this method.\n\nThe default implementation of this method returns the app’s default set of supported interface orientations, as you define them in the UISupportedInterfaceOrientations key of the Info.plist file in your Xcode project. If the file does not contain that key, this method returns all interface orientations for the iPad idiom and returns all interface orientations except the portrait upside-down orientation for the iPhone idiom."
  },
  {
    "title": "UITableViewCellAccessoryDetailButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcellaccessorytype/uitableviewcellaccessorydetailbutton",
    "html": "Discussion\n\nChoose this option to display a button that, when tapped, displays information about the row. Use your delegate’s tableView:accessoryButtonTappedForRowWithIndexPath: method to respond to taps in the button.\n\nSee Also\nAccessory views\nUITableViewCellAccessoryNone\nNo accessory view.\nUITableViewCellAccessoryDisclosureIndicator\nA chevron-shaped control for presenting new content.\nUITableViewCellAccessoryDetailDisclosureButton\nAn information button and a disclosure (chevron) control.\nUITableViewCellAccessoryCheckmark\nA checkmark image."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/visibility/3727752-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing separator visibility\nstatic func == (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are equal.\nstatic func != (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator visibility enumeration by feeding them into the hasher."
  },
  {
    "title": "selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623263-selected",
    "html": "Discussion\n\nThe selection affects the appearance of labels, image, and background. When the selected state of a cell is set to YES, it draws the background for selected cells with its title in white. The default value is NO. If you set the selection state to YES through this property, the transition to the new state appearance is not animated. For animated selected-state transitions, see the setSelected:animated: method.\n\nSee Also\nManaging cell selection and highlighting\nselectionStyle\nThe style of selection for a cell.\nUITableViewCellSelectionStyle\nThe style of selected cells.\n- setSelected:animated:\nSets the selected state of the cell, optionally animating the transition between states.\nhighlighted\nA Boolean value that indicates whether the cell is highlighted.\n- setHighlighted:animated:\nSets the highlighted state of the cell, optionally animating the transition between states."
  },
  {
    "title": "UITableViewCell.SelectionStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/selectionstyle",
    "html": "Overview\n\nYou use these constants to set the value of the selectionStyle property.\n\nTopics\nConstants\ncase none\nThe cell has no distinct style for when it’s selected.\ncase blue\nThe cell has a default background color when it’s selected.\ncase gray\nThe cell has a gray background when it’s selected.\ncase `default`\nThe cell selection style to use for tables.\nRelationships\nConforms To\nSendable\nSee Also\nManaging cell selection and highlighting\nvar selectionStyle: UITableViewCell.SelectionStyle\nThe style of selection for a cell.\nvar isSelected: Bool\nA Boolean value that indicates whether the cell is selected.\nfunc setSelected(Bool, animated: Bool)\nSets the selected state of the cell, optionally animating the transition between states.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the cell is highlighted.\nfunc setHighlighted(Bool, animated: Bool)\nSets the highlighted state of the cell, optionally animating the transition between states."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/visibility/3727751-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing separator visibility\nstatic func == (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are equal.\nstatic func != (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UITableViewCellAccessoryCheckmark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcellaccessorytype/uitableviewcellaccessorycheckmark",
    "html": "Discussion\n\nChoose this option to display a checkmark image. This type of accessory view doesn’t track touches.\n\nTo hide or show a check mark for a row, toggle the accessoryType property of the cell between the UITableViewCellAccessoryNone and UITableViewCellAccessoryCheckmark values. For example, if you use a checkmark to indicate one selected row from a group of rows, use your delegate’s tableView:didSelectRowAtIndexPath: method to update the accessory views of the affected rows.\n\nSee Also\nAccessory views\nUITableViewCellAccessoryNone\nNo accessory view.\nUITableViewCellAccessoryDisclosureIndicator\nA chevron-shaped control for presenting new content.\nUITableViewCellAccessoryDetailDisclosureButton\nAn information button and a disclosure (chevron) control.\nUITableViewCellAccessoryDetailButton\nAn information button."
  },
  {
    "title": "listPlainCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600326-listplaincellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell in a plain list.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a cell in a list. When you apply this configuration to a cell, the background of the cell matches the system default styling for a plain cell, including highlighted and selected states.\n\nFor an appearance consistent with system defaults, use this background configuration for a cell in these contexts:\n\nA table view that you configure with the UITableViewStylePlain enumeration case.\n\nA collection view list that you configure with the UICollectionLayoutListAppearancePlain enumeration case.\n\nSee Also\nCreating cell background configurations\n+ listGroupedCellConfiguration\nCreates the default configuration you use to style a cell in a grouped list.\n+ listSidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ listAccompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list."
  },
  {
    "title": "UIApplicationWillResignActiveNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationwillresignactivenotification",
    "html": "Discussion\n\nAn app is active when it is receiving events. An active app can be said to have focus. It gains focus after being launched, loses focus when an overlay window pops up or when the device is locked, and gains focus when the device is unlocked.\n\nSee Also\nResponding to app life-cycle events\n- applicationDidBecomeActive:\nTells the delegate that the app has become active.\n- applicationWillResignActive:\nTells the delegate that the app is about to become inactive.\n- applicationDidEnterBackground:\nTells the delegate that the app is now in the background.\n- applicationWillEnterForeground:\nTells the delegate that the app is about to enter the foreground.\n- applicationWillTerminate:\nTells the delegate when the app is about to terminate.\nUIApplicationDidBecomeActiveNotification\nA notification that posts when the app becomes active.\nUIApplicationDidEnterBackgroundNotification\nA notification that posts when the app enters the background.\nUIApplicationWillEnterForegroundNotification\nA notification that posts shortly before an app leaves the background state on its way to becoming the active app.\nUIApplicationWillTerminateNotification\nA notification that posts when the app is about to terminate."
  },
  {
    "title": "UIListContentTextTransformNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttexttransform/uilistcontenttexttransformnone",
    "html": "See Also\nText transforms\nUIListContentTextTransformCapitalized\nDisplays the text with the first character capitalized.\nUIListContentTextTransformLowercase\nDisplays the text in all lowercase characters.\nUIListContentTextTransformUppercase\nDisplays the text in all uppercase characters."
  },
  {
    "title": "UIListContentTextTransformLowercase | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttexttransform/uilistcontenttexttransformlowercase",
    "html": "See Also\nText transforms\nUIListContentTextTransformNone\nThe text doesn’t have a transform.\nUIListContentTextTransformCapitalized\nDisplays the text with the first character capitalized.\nUIListContentTextTransformUppercase\nDisplays the text in all uppercase characters."
  },
  {
    "title": "UIListContentTextTransformCapitalized | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttexttransform/uilistcontenttexttransformcapitalized",
    "html": "See Also\nText transforms\nUIListContentTextTransformNone\nThe text doesn’t have a transform.\nUIListContentTextTransformLowercase\nDisplays the text in all lowercase characters.\nUIListContentTextTransformUppercase\nDisplays the text in all uppercase characters."
  },
  {
    "title": "UIListContentTextAlignmentNatural | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextalignment/uilistcontenttextalignmentnatural",
    "html": "See Also\nText alignment\nUIListContentTextAlignmentCenter\nThe text has centered alignment.\nUIListContentTextAlignmentJustified\nThe text has justified alignment."
  },
  {
    "title": "UIListContentTextTransformUppercase | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttexttransform/uilistcontenttexttransformuppercase",
    "html": "See Also\nText transforms\nUIListContentTextTransformNone\nThe text doesn’t have a transform.\nUIListContentTextTransformCapitalized\nDisplays the text with the first character capitalized.\nUIListContentTextTransformLowercase\nDisplays the text in all lowercase characters."
  },
  {
    "title": "appearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600408-appearance",
    "html": "See Also\nConfiguring appearance\nbackgroundColor\nThe background color of the list.\nUICollectionLayoutListAppearance\nConstants that describe the appearance of the list."
  },
  {
    "title": "UIApplicationUserDidTakeScreenshotNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationuserdidtakescreenshotnotification",
    "html": "Discussion\n\nThis notification doesn’t contain a userInfo dictionary. This notification posts after the screenshot is taken."
  },
  {
    "title": "adjustsFontSizeToFitWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailabletextproperties/4173117-adjustsfontsizetofitwidth",
    "html": "Discussion\n\nYou can define the smallest font size used by setting the minimumScaleFactor property."
  },
  {
    "title": "UICollectionViewLayoutAutomaticDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutautomaticdimension",
    "html": "See Also\nConfiguring headers and footers\nheaderMode\nThe type of header to use for the list.\nfooterMode\nThe type of footer to use for the list.\nUICollectionLayoutListHeaderMode\nConstants that describe the list’s header mode.\nUICollectionLayoutListFooterMode\nConstants that describe the list’s footer mode.\nheaderTopPadding\nThe amount of padding above each section header."
  },
  {
    "title": "numberOfLines | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailabletextproperties/4173123-numberoflines",
    "html": "Discussion\n\nA value of 0 indicates an unlimited number of lines."
  },
  {
    "title": "allowsDefaultTighteningForTruncation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600570-allowsdefaulttighteningfortrunca",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UIButtonConfigurationCornerStyleCapsule | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle/uibuttonconfigurationcornerstylecapsule",
    "html": "See Also\nCorner styles\nUIButtonConfigurationCornerStyleDynamic\nA style that adjusts the background corner radius for dynamic type.\nUIButtonConfigurationCornerStyleFixed\nA style that uses the background corner radius without modification.\nUIButtonConfigurationCornerStyleLarge\nA style that ignores the background corner radius and uses a large system-defined corner radius.\nUIButtonConfigurationCornerStyleMedium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\nUIButtonConfigurationCornerStyleSmall\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "maximumSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableimageproperties/4173113-maximumsize",
    "html": "Discussion\n\nThe default value is CGSizeZero. Setting a width or height of zero makes the size unconstrained on that dimension. If the image exceeds maximumSize size on either dimension, the view reduces its size proportionately, maintaining aspect ratio."
  },
  {
    "title": "UICollectionViewDiffableDataSourceSupplementaryViewProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesupplementaryviewprovider",
    "html": "Parameters\ncollectionView\n\nThe collection view to configure this supplementary view for.\n\nkind\n\nThe kind of supplementary view to provide. The layout object that supports the supplementary view defines the value of this string.\n\nindexPath\n\nThe index path that specifies the location of the supplementary view in the collection view.\n\nReturn Value\n\nA non-nil configured supplementary view object. The supplementary view provider must return a valid view object to the collection view.\n\nSee Also\nCreating supplementary views\nsupplementaryViewProvider\nThe closure that configures and returns the collection view’s supplementary views, such as headers and footers, from the diffable data source."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableimageproperties/4173115-tintcolor",
    "html": "Discussion\n\nSetting the value to nil makes the image view use its inherited tint color."
  },
  {
    "title": "UIInterfaceOrientationLandscapeRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/uiinterfaceorientationlandscaperight",
    "html": "See Also\nOrientations\nUIInterfaceOrientationUnknown\nThe orientation of the device is unknown.\nUIInterfaceOrientationPortrait\nThe device is in portrait mode, with the device upright and the Home button on the bottom.\nUIInterfaceOrientationPortraitUpsideDown\nThe device is in portrait mode but is upside down, with the device upright and the Home button at the top.\nUIInterfaceOrientationLandscapeLeft\nThe device is in landscape mode, with the device upright and the Home button on the left."
  },
  {
    "title": "UIInterfaceOrientationPortraitUpsideDown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/uiinterfaceorientationportraitupsidedown",
    "html": "Discussion\n\nUIViewController doesn’t support this case on devices without a Home button.\n\nSee Also\nOrientations\nUIInterfaceOrientationUnknown\nThe orientation of the device is unknown.\nUIInterfaceOrientationPortrait\nThe device is in portrait mode, with the device upright and the Home button on the bottom.\nUIInterfaceOrientationLandscapeLeft\nThe device is in landscape mode, with the device upright and the Home button on the left.\nUIInterfaceOrientationLandscapeRight\nThe device is in landscape mode, with the device upright and the Home button on the right."
  },
  {
    "title": "UITableViewCellAccessoryNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcellaccessorytype/uitableviewcellaccessorynone",
    "html": "Discussion\n\nThis is the default value.\n\nSee Also\nAccessory views\nUITableViewCellAccessoryDisclosureIndicator\nA chevron-shaped control for presenting new content.\nUITableViewCellAccessoryDetailDisclosureButton\nAn information button and a disclosure (chevron) control.\nUITableViewCellAccessoryCheckmark\nA checkmark image.\nUITableViewCellAccessoryDetailButton\nAn information button."
  },
  {
    "title": "initWithFrame:style: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614886-initwithframe",
    "html": "Parameters\nframe\n\nA rectangle specifying the initial location and size of the table view in its superview’s coordinates. The frame of the table view changes as table cells are added and deleted.\n\nstyle\n\nA constant that specifies the style of the table view. For a list of valid styles, see UITableViewStyle.\n\nReturn Value\n\nReturns an initialized UITableView object.\n\nDiscussion\n\nYou must specify the style of a table view when you create it, and you can’t change that style later. If you initialize the table view with the UIView method initWithFrame:, the UITableViewStylePlain style is used as a default.\n\nSee Also\nCreating a table view\n- initWithCoder:\nCreates a table view object from data in an unarchiver."
  },
  {
    "title": "fast | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/decelerationrate/4134816-fast",
    "html": "See Also\nSelecting deceleration rates\nstatic let automatic: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA deceleration rate that matches the parent scroll view’s deceleration rate for the orthogonal scrolling section.\nstatic let normal: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nThe default deceleration rate for the orthogonal scrolling section."
  },
  {
    "title": "automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/decelerationrate/4134815-automatic",
    "html": "See Also\nSelecting deceleration rates\nstatic let fast: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA rapid deceleration rate for the orthogonal scrolling section.\nstatic let normal: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nThe default deceleration rate for the orthogonal scrolling section."
  },
  {
    "title": "UIImagePickerControllerSourceTypeSavedPhotosAlbum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontrollersourcetype/uiimagepickercontrollersourcetypesavedphotosalbum",
    "html": "Deprecated\n\nUse PHPickerViewController instead.\n\nDiscussion\n\nIf the device does not have a camera, specifies the Saved Photos album as the source."
  },
  {
    "title": "UIImagePickerControllerSourceTypePhotoLibrary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontrollersourcetype/uiimagepickercontrollersourcetypephotolibrary",
    "html": "Deprecated\n\nUse PHPickerViewController instead."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style/3600844",
    "html": "See Also\nComparing Outline Disclosure Styles\nstatic func != (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the outline disclosure style by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UICellAccessory.OutlineDisclosureOptions.Style.cell | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style/cell",
    "html": "Discussion\n\nWhen using this style, a tap on the outline disclosure accessory toggles the expansion state of the item. A tap on the cell selects the item itself."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style/3600848-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing Outline Disclosure Styles\nstatic func == (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are equal.\nstatic func != (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the outline disclosure style by feeding them into the hasher."
  },
  {
    "title": "UICellAccessory.OutlineDisclosureOptions.Style.header | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style/header",
    "html": "Discussion\n\nWhen using this style, a tap anywhere in the header toggles the expansion state of the item. The cell itself is not selectable when using this style."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style/3600843",
    "html": "See Also\nComparing Outline Disclosure Styles\nstatic func == (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the outline disclosure style by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style/3600847-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing Outline Disclosure Styles\nstatic func == (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are equal.\nstatic func != (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UIAcceleration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiacceleration",
    "html": "Deprecated\n\nUse the Core Motion framework instead.\n\nOverview\n\nTo receive accelerometer events, register an application object as a delegate of the shared UIAccelerometer object, as described in UIAccelerometer.\n\nEach acceleration event includes simultaneous acceleration readings along the three axes of the device, as shown in the following image.\n\nThe device accelerometer reports values for each axis in units of g-force, where a value of 1.0 represents acceleration of about +1 g along a given axis. When a device is laying still with its back on a horizontal surface, each acceleration event has approximately the following values:\n\nx: 0\ny: 0\nz: -1\n\n\nIndividual acceleration values are of type UIAccelerationValue, equivalent to a double. Values can range over the accelerations found in normal use of a device.\n\nNote\n\nAcceleration event values are approximate—don’t attempt to use them to make precise measurements. Apple recommends that you average accelerometer values over time to derive usable data.\n\nIf you want to detect specific types of motion as gestures—specifically, shaking motions—use the UIEvent class and its UIEventTypeMotion event type. For details, see Handling Tap and Long-Press Gestures in Event Handling Guide for UIKit Apps.\n\nTopics\nAccessing the acceleration values\n- x\nThe acceleration value for the x axis of the device.\n- y\nThe acceleration value for the y axis of the device.\n- z\nThe acceleration value for the z axis of the device.\ntimestamp\nThe relative time at which the acceleration event occurred.\nConstants\nUIAccelerationValue\nThe amount of acceleration in a single linear direction.\nRelationships\nInherits From\nNSObject\nSee Also\nDeprecated classes\nUIAccelerometer\nAn object that lets you register to receive acceleration-related data from the onboard hardware.\nDeprecated\nUIActionSheet\nA view that presents a set of alternatives for how to proceed with a task.\nDeprecated\nUIAlertView\nA view that displays an alert message.\nDeprecated\nUIDocumentMenuViewController\nA list of all the available document providers for a given file type and mode, in addition to custom menu items that you add.\nDeprecated\nUILocalNotification\nA notification that an app can schedule for presentation at a specific date and time.\nDeprecated\nUIMenuController\nThe menu interface for the Cut, Copy, Paste, Select, Select All, and Delete commands.\nDeprecated\nUIMenuItem\nA custom item in the editing menu managed by the menu controller.\nDeprecated\nUIMutableUserNotificationAction\nA modifiable version of the user notification action class.\nDeprecated\nUIMutableUserNotificationCategory\nInformation about custom actions that your app can perform in response to a local or push notification.\nDeprecated\nUIPopoverController\nAn object that manages the presentation of content in a popover.\nDeprecated\nUIPreviewAction\nA preview action, or peek quick action, that displays below a peek when a user swipes the peek upward.\nDeprecated\nUIPreviewActionGroup\nA group of one or more child quick actions, each an instance of the preview action class.\nDeprecated\nUISearchDisplayController\nAn object that manages the display of a search bar, along with a table view that displays search results.\nDeprecated\nUIStoryboardPopoverSegue\nA specific type of segue for presenting content in a popover.\nDeprecated\nUIUserNotificationAction\nA custom action that your app can perform in response to a remote or local notification.\nDeprecated\nUIUserNotificationCategory\nInformation about custom actions that your app can perform in response to a local or push notification.\nDeprecated\nUIUserNotificationSettings\nThe types of notifications that can be displayed to the user by your app.\nDeprecated"
  },
  {
    "title": "exchangeSubviewAtIndex:withSubviewAtIndex: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622448-exchangesubviewatindex",
    "html": "Parameters\nindex1\n\nThe index of the first subview in the receiver.\n\nindex2\n\nThe index of the second subview in the receiver.\n\nDiscussion\n\nEach index represents the position of the corresponding view in the array in the subviews property. Subview indices start at 0 and cannot be greater than the number of subviews. This method does not change the superview of either view but simply swaps their positions in the subviews array.\n\nSee Also\nManaging the view hierarchy\nsuperview\nThe receiver’s superview, or nil if it has none.\nsubviews\nThe receiver’s immediate subviews.\nwindow\nThe receiver’s window object, or nil if it has none.\n- addSubview:\nAdds a view to the end of the receiver’s list of subviews.\n- bringSubviewToFront:\nMoves the specified subview so that it appears on top of its siblings.\n- sendSubviewToBack:\nMoves the specified subview so that it appears behind its siblings.\n- removeFromSuperview\nUnlinks the view from its superview and its window, and removes it from the responder chain.\n- insertSubview:atIndex:\nInserts a subview at the specified index.\n- insertSubview:aboveSubview:\nInserts a view above another view in the view hierarchy.\n- insertSubview:belowSubview:\nInserts a view below another view in the view hierarchy.\n- isDescendantOfView:\nReturns a Boolean value indicating whether the receiver is a subview of a given view or identical to that view."
  },
  {
    "title": "UIAccelerometer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccelerometer",
    "html": "Deprecated\n\nUse the Core Motion framework instead.\n\nOverview\n\nAs a device moves, its hardware reports linear acceleration changes along the primary axes in three-dimensional space. You can use this data to detect both the current orientation of the device (relative to the ground) and any instantaneous changes to that orientation. You might use instantaneous changes as input to a game or to initiate some action in your application.\n\nYou don’t create accelerometer objects directly. Instead, you use the shared UIAccelerometer object to specify the interval at which you want to receive events and then set its delegate property. Upon assigning your delegate object, the accelerometer object begins delivering acceleration events to your delegate immediately at the specified interval. Events are always delivered on the main thread of your application.\n\nThe maximum frequency for accelerometer updates is based on the available hardware. You can request updates less frequently but can’t request them more frequently than the hardware maximum. Once you assign your delegate, however, updates are delivered regularly at the frequency you requested, whether or not the acceleration data actually changed. Your delegate is responsible for filtering out any unwanted updates and for ensuring that the amount of change is significant enough to warrant taking action.\n\nFor more information about the data delivered to your observer, see UIAcceleration. For information about implementing your delegate object, see UIAccelerometerDelegate.\n\nTopics\nGetting the shared accelerometer object\n+ sharedAccelerometer\nReturns the shared accelerometer object for the system.\nAccessing the accelerometer properties\nupdateInterval\nThe interval at which to deliver acceleration data to the delegate.\ndelegate\nThe delegate object you want to receive acceleration events.\nRelationships\nInherits From\nNSObject\nSee Also\nDeprecated classes\nUIAcceleration\nAn acceleration event that represents immediate, three-dimensional acceleration data.\nDeprecated\nUIActionSheet\nA view that presents a set of alternatives for how to proceed with a task.\nDeprecated\nUIAlertView\nA view that displays an alert message.\nDeprecated\nUIDocumentMenuViewController\nA list of all the available document providers for a given file type and mode, in addition to custom menu items that you add.\nDeprecated\nUILocalNotification\nA notification that an app can schedule for presentation at a specific date and time.\nDeprecated\nUIMenuController\nThe menu interface for the Cut, Copy, Paste, Select, Select All, and Delete commands.\nDeprecated\nUIMenuItem\nA custom item in the editing menu managed by the menu controller.\nDeprecated\nUIMutableUserNotificationAction\nA modifiable version of the user notification action class.\nDeprecated\nUIMutableUserNotificationCategory\nInformation about custom actions that your app can perform in response to a local or push notification.\nDeprecated\nUIPopoverController\nAn object that manages the presentation of content in a popover.\nDeprecated\nUIPreviewAction\nA preview action, or peek quick action, that displays below a peek when a user swipes the peek upward.\nDeprecated\nUIPreviewActionGroup\nA group of one or more child quick actions, each an instance of the preview action class.\nDeprecated\nUISearchDisplayController\nAn object that manages the display of a search bar, along with a table view that displays search results.\nDeprecated\nUIStoryboardPopoverSegue\nA specific type of segue for presenting content in a popover.\nDeprecated\nUIUserNotificationAction\nA custom action that your app can perform in response to a remote or local notification.\nDeprecated\nUIUserNotificationCategory\nInformation about custom actions that your app can perform in response to a local or push notification.\nDeprecated\nUIUserNotificationSettings\nThe types of notifications that can be displayed to the user by your app.\nDeprecated"
  },
  {
    "title": "removeFromParent() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621425-removefromparent",
    "html": "Discussion\n\nThis method is only intended to be called by an implementation of a custom container view controller. If you override this method, you must call super in your implementation.\n\nSee Also\nManaging child view controllers in a custom container\nvar children: [UIViewController]\nAn array of view controllers that are children of the current view controller.\nfunc addChild(UIViewController)\nAdds the specified view controller as a child of the current view controller.\nfunc transition(from: UIViewController, to: UIViewController, duration: TimeInterval, options: UIView.AnimationOptions, animations: (() -> Void)?, completion: ((Bool) -> Void)?)\nTransitions between two of the view controller's child view controllers.\nvar shouldAutomaticallyForwardAppearanceMethods: Bool\nReturns a Boolean value indicating whether appearance methods are forwarded to child view controllers.\nfunc beginAppearanceTransition(Bool, animated: Bool)\nTells a child controller its appearance is about to change.\nfunc endAppearanceTransition()\nTells a child controller its appearance has changed.\nclass let hierarchyInconsistencyException: NSExceptionName\nRaised if the view controller hierarchy is inconsistent with the view hierarchy."
  },
  {
    "title": "contentUnavailableConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/4173177-contentunavailableconfiguration",
    "html": "See Also\nIndicating missing content\ncontentUnavailableConfigurationState\n- setNeedsUpdateContentUnavailableConfiguration\nRequests that the system update the content-unavailable configuration for the latest state.\n- updateContentUnavailableConfigurationUsingState:\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view."
  },
  {
    "title": "contentUnavailableConfigurationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/4173178-contentunavailableconfigurations",
    "html": "See Also\nIndicating missing content\ncontentUnavailableConfiguration\n- setNeedsUpdateContentUnavailableConfiguration\nRequests that the system update the content-unavailable configuration for the latest state.\n- updateContentUnavailableConfigurationUsingState:\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view."
  },
  {
    "title": "willMoveToWindow: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622563-willmovetowindow",
    "html": "Parameters\nnewWindow\n\nThe window object that will be at the root of the receiver's new view hierarchy. This parameter may be nil.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses can override it to perform additional actions whenever the window changes.\n\nSee Also\nObserving view-related changes\n- didAddSubview:\nTells the view that a subview was added.\n- willRemoveSubview:\nTells the view that a subview is about to be removed.\n- willMoveToSuperview:\nTells the view that its superview is about to change to the specified superview.\n- didMoveToSuperview\nTells the view that its superview changed.\n- didMoveToWindow\nTells the view that its window object changed."
  },
  {
    "title": "multipleTouchEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622519-multipletouchenabled",
    "html": "Discussion\n\nWhen set to YES, the view receives all touches associated with a multi-touch sequence and starting within the view's bounds. When set to NO, the view receives only the first touch event in a multi-touch sequence that start within the view's bounds. The default value of this property is NO.\n\nNote\n\nThis property does not affect the gesture recognizers attached to the view. Gesture recognizers receive all touches that occur in the view.\n\nOther views in the same window can still receive touch events when this property is NO. If you want this view to handle multi-touch events exclusively, set the values of both this property and the exclusiveTouch property to YES. This property does not prevent a view from being asked to handle multiple touches. For example, two subviews may both forward their touches to a common parent, such as a window or the root view of a view controller. This property determines how many touches initially targeting the view are delivered to that view.\n\nSee Also\nConfiguring the event-related behavior\nuserInteractionEnabled\nA Boolean value that determines whether user events are ignored and removed from the event queue.\nexclusiveTouch\nA Boolean value that indicates whether the receiver handles touch events exclusively."
  },
  {
    "title": "exclusiveTouch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622453-exclusivetouch",
    "html": "Discussion\n\nSetting this property to YES causes the receiver to block the delivery of touch events to other views in the same window. The default value of this property is NO.\n\nSee Also\nConfiguring the event-related behavior\nuserInteractionEnabled\nA Boolean value that determines whether user events are ignored and removed from the event queue.\nmultipleTouchEnabled\nA Boolean value that indicates whether the view receives more than one touch at a time."
  },
  {
    "title": "willMoveToSuperview: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622629-willmovetosuperview",
    "html": "Parameters\nnewSuperview\n\nA view object that will be the new superview of the receiver. This object may be nil.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses can override it to perform additional actions whenever the superview changes.\n\nSee Also\nObserving view-related changes\n- didAddSubview:\nTells the view that a subview was added.\n- willRemoveSubview:\nTells the view that a subview is about to be removed.\n- didMoveToSuperview\nTells the view that its superview changed.\n- willMoveToWindow:\nTells the view that its window object is about to change.\n- didMoveToWindow\nTells the view that its window object changed."
  },
  {
    "title": "willTransitionToTraitCollection:withTransitionCoordinator: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentcontainer/1621511-willtransitiontotraitcollection",
    "html": "Required\n\nParameters\nnewCollection\n\nThe traits to be applied to the container.\n\ncoordinator\n\nThe transition coordinator object managing the trait change. You can use this object to animate any changes or to get information about the transition that is in progress.\n\nDiscussion\n\nUIKit calls this method before changing the current object’s traits and before calling the traitCollectionDidChange: method of any affected views and view controllers. Implementors of this method can use it to adapt the interface based on the values in the newCollection parameter. A common use of this method is to make changes to the high-level presentation style when the current size class changes. For example, a container view controller that manages multiple child view controllers might change the number of child view controllers it displays onscreen when the size class changes. A standard view controller might use this method to change the constraints on the views it manages. Use the provided coordinator object to animate any changes you make.\n\nIf you override this method in your own objects, always call super at some point in your implementation so that UIKit can forward the trait changes to the associated presentation controller and to any child view controllers. View controllers forward the trait change message to their child view controllers. Presentation controllers forward the trait change to their presented view controller.\n\nSee Also\nResponding to environment changes\n- viewWillTransitionToSize:withTransitionCoordinator:\nNotifies the container that the size of its view is about to change.\n\nRequired\n\nRelated Documentation\n- traitCollectionDidChange:\nReports changes in the iOS interface environment."
  },
  {
    "title": "preferredContentSizeDidChangeForChildContentContainer: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentcontainer/1621351-preferredcontentsizedidchangefor",
    "html": "Required\n\nParameters\ncontainer\n\nThe child view controller whose preferred content size has changed.\n\nDiscussion\n\nUIKit calls this method on a container view controller when the preferredContentSize property of one of its child view controllers changes. Similarly, if the view controller is managed by a presentation controller, UIKit calls this method on the presentation controller to let it know of the change. The parent view controller or presentation controller can use this method to initiate layout adjustments based on the new size information.\n\nSee Also\nResponding to changes in child view controllers\n- sizeForChildContentContainer:withParentContainerSize:\nReturns the size of the specified child view controller’s content.\n\nRequired\n\n- systemLayoutFittingSizeDidChangeForChildContentContainer:\nNotifies the container that a child view controller was resized using Auto Layout.\n\nRequired\n\npreferredContentSize\nThe preferred size for the container’s content.\n\nRequired"
  },
  {
    "title": "reorderingHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600513-reorderinghandlers",
    "html": "Discussion\n\nProvide reordering handlers to support the reordering of items in your collection view.\n\nThe system calls the didReorderHandler handler after a reordering transaction (NSDiffableDataSourceTransaction) occurs, so you can update your data backing store with information about the changes.\n\n// Allow every item to be reordered.\n[dataSource.reorderingHandlers setCanReorderItemHandler:^BOOL(NSString *item) {\n    return YES;\n}];\n\n\n// Option 1: Update the backing store from a CollectionDifference.\n[dataSource.reorderingHandlers setDidReorderHandler:^(NSDiffableDataSourceTransaction<NSNumber *,NSString *> *transaction) {\n    NSArray<NSString *> *updatedBackingStore = [backingStore arrayByApplyingDifference: transaction.difference];\n    if (updatedBackingStore != nil) {\n        backingStore = updatedBackingStore;\n    }\n}];\n\n\n// Option 2: Update the backing store from the final item identifiers.\n[dataSource.reorderingHandlers setDidReorderHandler:^(NSDiffableDataSourceTransaction<NSNumber *,NSString *> *transaction) {\n    backingStore = transaction.finalSnapshot.itemIdentifiers;\n}];\n\n\nSee Also\nSupporting reordering\nUICollectionViewDiffableDataSourceReorderingHandlers\nHandlers for reordering items.\nNSDiffableDataSourceTransaction\nA transaction that describes the changes after reordering the items in the view.\nNSDiffableDataSourceSectionTransaction\nA transaction that describes the changes after reordering the items in a section."
  },
  {
    "title": "applySnapshot:toSection:animatingDifferences: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600511-applysnapshot",
    "html": "See Also\nUpdating section data\n- snapshotForSection:\nReturns a representation of the current state of the data in the specified section of the collection view.\n- applySnapshot:toSection:animatingDifferences:completion:\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes and executing a completion handler."
  },
  {
    "title": "applySnapshot:toSection:animatingDifferences:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600512-applysnapshot",
    "html": "See Also\nUpdating section data\n- snapshotForSection:\nReturns a representation of the current state of the data in the specified section of the collection view.\n- applySnapshot:toSection:animatingDifferences:\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes."
  },
  {
    "title": "footerViewForSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614972-footerviewforsection",
    "html": "Parameters\nsection\n\nAn index number that identifies a section of the table. Table views in a plain style have a section index of zero.\n\nReturn Value\n\nThe footer view associated with the section, or nil if the section does not have a footer view.\n\nSee Also\nGetting cells and section-based views\n- cellForRowAtIndexPath:\nReturns the table cell at the index path you specify.\n- headerViewForSection:\nReturns the header view for the specified section.\n- indexPathForCell:\nReturns an index path that represents the row and section of a specified table-view cell.\n- indexPathForRowAtPoint:\nReturns an index path that identifies the row and section at the specified point.\n- indexPathsForRowsInRect:\nReturns an array of index paths, each representing a row that the specified rectangle encloses.\nvisibleCells\nThe table cells that are visible in the table view.\nindexPathsForVisibleRows\nAn array of index paths, each identifying a visible row in the table view."
  },
  {
    "title": "initWithReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624918-initwithreuseidentifier",
    "html": "Parameters\nreuseIdentifier\n\nA string used to identify the header or footer view if it’s to be reused by multiple sections. Pass nil if the view isn’t to be reused. You should use the same reuse identifier for all header or footer views of the same form.\n\nReturn Value\n\nAn initialized UITableViewHeaderFooterView object or nil if the object could not be created.\n\nDiscussion\n\nOnce set, you can’t change the reuse identifier for the returned view object.\n\nSee Also\nCreating the view\n- initWithCoder:\nCreates a header-footer view from data in an unarchiver."
  },
  {
    "title": "UITableViewCell.DragState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/dragstate",
    "html": "Topics\nConstants\ncase none\nThe cell isn’t involved in a drag operation.\ncase lifting\nThe cell is being animated off of the table’s surface.\ncase dragging\nThe cell is currently being dragged.\nRelationships\nConforms To\nSendable\nSee Also\nDragging the row\nvar userInteractionEnabledWhileDragging: Bool\nA Boolean value indicating whether users can interact with a cell while it is being dragged.\nfunc dragStateDidChange(UITableViewCell.DragState)\nNotifies the cell that its drag status changed."
  },
  {
    "title": "UITableViewCell.StateMask | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/statemask",
    "html": "Overview\n\nThe methods that use these constants are didTransition(to:) and willTransition(to:).\n\nTopics\nConstants\nstatic var showingEditControl: UITableViewCell.StateMask\nThe state of a table view cell when the table view is in editing mode.\nstatic var showingDeleteConfirmation: UITableViewCell.StateMask\nThe state of a table view cell that shows a button requesting confirmation of a delete gesture.\nInitializers\ninit(rawValue: UInt)\nCreates a state mask with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nAdjusting to state transitions\nfunc willTransition(to: UITableViewCell.StateMask)\nNotifies the cell that it’s about to transition to a new cell state.\nfunc didTransition(to: UITableViewCell.StateMask)\nNotifies the cell that it transitioned to a new cell state."
  },
  {
    "title": "didTransitionToState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623274-didtransitiontostate",
    "html": "Parameters\nstate\n\nA bit mask indicating the state or combination of states the cell is transitioning to.\n\nDiscussion\n\nSubclasses of UITableViewCell can implement this method to animate additional changes to a cell when it is changing state. UITableViewCell calls this method whenever a cell transitions between states, such as from a normal state (the default) to editing mode. This method is called at the end of the animation block, which gives the custom cell a chance to clean up after the state change—for example, removing the edit and reorder controls after transitioning out of editing. Subclasses must always call super when overriding this method.\n\nNote that when the user swipes a cell to delete it, the cell transitions to the state identified by the UITableViewCellStateShowingDeleteConfirmationMask constant but the UITableViewCellStateShowingEditControlMask is not set.\n\nSee Also\nAdjusting to state transitions\n- willTransitionToState:\nNotifies the cell that it’s about to transition to a new cell state.\nUITableViewCellStateMask\nConstants used to determine the new state of a cell as it transitions between states.\nRelated Documentation\neditingAccessoryType\nThe type of standard accessory view for the cell to use in the table view’s editing state.\neditingAccessoryView\nThe view to use on the right side of the cell, typically as a control, in the table view’s editing state.\naccessoryView\nThe view to use on the right side of the cell, typically as a control, in the table view’s normal state.\naccessoryType\nThe type of standard accessory view for the cell to use in the table view’s normal state."
  },
  {
    "title": "editing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623268-editing",
    "html": "Discussion\n\nWhen a cell is in an editable state, it displays the editing controls specified for it: the green insertion control, the red deletion control, or (on the right side) the reordering control. Use editingStyle and showsReorderControl to specify these controls for the cell.\n\nSee Also\nEditing the cell\n- setEditing:animated:\nToggles the cell into and out of editing mode.\neditingStyle\nThe editing style of the cell.\nUITableViewCellEditingStyle\nThe editing control used by a cell.\nshowingDeleteConfirmation\nA Boolean value that indicates whether the cell is currently showing the delete-confirmation button.\nshowsReorderControl\nA Boolean value that determines whether the cell shows the reordering control."
  },
  {
    "title": "willTransitionToState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623240-willtransitiontostate",
    "html": "Parameters\nstate\n\nA bit mask indicating the state or combination of states the cell is transitioning to.\n\nDiscussion\n\nSubclasses of UITableViewCell can implement this method to animate additional changes to a cell when it is changing state. UITableViewCell calls this method whenever a cell transitions between states, such as from a normal state (the default) to editing mode. The custom cell can set up and position any new views that appear with the new state. The cell then receives a layoutSubviews message (UIView) in which it can position these new views in their final locations for the new state. Subclasses must always call super when overriding this method.\n\nNote that when the user swipes a cell to delete it, the cell transitions to the state identified by the UITableViewCellStateShowingDeleteConfirmationMask constant but the UITableViewCellStateShowingEditControlMask is not set.\n\nSee Also\nAdjusting to state transitions\n- didTransitionToState:\nNotifies the cell that it transitioned to a new cell state.\nUITableViewCellStateMask\nConstants used to determine the new state of a cell as it transitions between states.\nRelated Documentation\neditingAccessoryType\nThe type of standard accessory view for the cell to use in the table view’s editing state.\neditingAccessoryView\nThe view to use on the right side of the cell, typically as a control, in the table view’s editing state.\naccessoryView\nThe view to use on the right side of the cell, typically as a control, in the table view’s normal state.\naccessoryType\nThe type of standard accessory view for the cell to use in the table view’s normal state."
  },
  {
    "title": "UIButtonConfigurationTitleAlignmentLeading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationtitlealignment/uibuttonconfigurationtitlealignmentleading",
    "html": "See Also\nTitle alignments\nUIButtonConfigurationTitleAlignmentAutomatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\nUIButtonConfigurationTitleAlignmentCenter\nAligns the title and subtitle on their horizontal centers.\nUIButtonConfigurationTitleAlignmentTrailing\nAligns the title and subtitle on their trailing edges."
  },
  {
    "title": "UITableViewStyleInsetGrouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewstyle/uitableviewstyleinsetgrouped",
    "html": "See Also\nStyles\nUITableViewStylePlain\nA plain table view.\nUITableViewStyleGrouped\nA table view where sections have distinct groups of rows."
  },
  {
    "title": "UIApplicationWillTerminateNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationwillterminatenotification",
    "html": "Discussion\n\nThis notification is associated with the delegate applicationWillTerminate: method. This notification does not contain a userInfo dictionary.\n\nSee Also\nResponding to app life-cycle events\n- applicationDidBecomeActive:\nTells the delegate that the app has become active.\n- applicationWillResignActive:\nTells the delegate that the app is about to become inactive.\n- applicationDidEnterBackground:\nTells the delegate that the app is now in the background.\n- applicationWillEnterForeground:\nTells the delegate that the app is about to enter the foreground.\n- applicationWillTerminate:\nTells the delegate when the app is about to terminate.\nUIApplicationDidBecomeActiveNotification\nA notification that posts when the app becomes active.\nUIApplicationDidEnterBackgroundNotification\nA notification that posts when the app enters the background.\nUIApplicationWillEnterForegroundNotification\nA notification that posts shortly before an app leaves the background state on its way to becoming the active app.\nUIApplicationWillResignActiveNotification\nA notification that posts when the app is no longer active and loses focus."
  },
  {
    "title": "colorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3606378-colortransformer",
    "html": "Discussion\n\nIf the value is nil, the configuration uses color without any transformations.\n\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UICollectionLayoutListAppearanceSidebarPlain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance/uicollectionlayoutlistappearancesidebarplain",
    "html": "See Also\nList Appearances\nUICollectionLayoutListAppearancePlain\nThe plain list appearance.\nUICollectionLayoutListAppearanceGrouped\nThe grouped list appearance.\nUICollectionLayoutListAppearanceInsetGrouped\nThe inset grouped list appearance.\nUICollectionLayoutListAppearanceSidebar\nThe sidebar list appearance."
  },
  {
    "title": "listSidebarCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600328-listsidebarcellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell in a sidebar list.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a cell in a list. When you apply this configuration to a cell, the background of the cell matches the system default styling for a cell in a sidebar collection view list, including highlighted and selected states.\n\nFor an appearance consistent with system defaults, use this background configuration for a cell in a collection view list that you configure with the UICollectionLayoutListAppearanceSidebar or UICollectionLayoutListAppearanceSidebarPlain enumeration case.\n\nSee Also\nCreating cell background configurations\n+ listPlainCellConfiguration\nCreates the default configuration you use to style a cell in a plain list.\n+ listGroupedCellConfiguration\nCreates the default configuration you use to style a cell in a grouped list.\n+ listAccompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list."
  },
  {
    "title": "NSLineBreakByTruncatingMiddle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakmode/nslinebreakbytruncatingmiddle",
    "html": "Discussion\n\nUse this mode for single-line layout; using it with multiline text truncates the text into a single line."
  },
  {
    "title": "adjustsFontSizeToFitWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600568-adjustsfontsizetofitwidth",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "minimumScaleFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600574-minimumscalefactor",
    "html": "Discussion\n\nThis value applies when adjustsFontSizeToFitWidth is YES.\n\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UICollectionViewDiffableDataSourceSectionSnapshotHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers",
    "html": "Topics\nExpanding and collapsing items\nshouldCollapseItemHandler\nThe handler that determines whether a particular item is collapsable.\nshouldExpandItemHandler\nThe handler that determines whether a particular item is expandable.\nwillCollapseItemHandler\nThe handler that prepares the diffable data source for collapsing an item.\nwillExpandItemHandler\nThe handler that prepares the diffable data source for expanding an item.\nsnapshotForExpandingParentItemHandler\nThe handler that provides the section snapshot for expanding the parent item.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSupporting expanding and collapsing\nsectionSnapshotHandlers\nThe diffable data source’s handlers for expanding and collapsing items."
  },
  {
    "title": "sectionSnapshotHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600514-sectionsnapshothandlers",
    "html": "Discussion\n\nProvide section snapshot handlers to support the expanding or collapsing of items in your collection view.\n\nUse the snapshotForExpandingParentItemHandler handler to customize the snapshot that returns when a particular parent item is expanded.\n\n// Allow every item to be collapsed.\n[dataSource.sectionSnapshotHandlers setShouldCollapseItemHandler:^BOOL(NSString *item) {\n    return YES;\n}];\n\n\n[dataSource.sectionSnapshotHandlers setSnapshotForExpandingParentItemHandler:^NSDiffableDataSourceSectionSnapshot<NSString *> * (NSString *parent, NSDiffableDataSourceSectionSnapshot<NSString *> *currentChildSnapshot) {\n    // Return child snapshot for the parent, or just currentChildSnapshot.\n}];\n\n\nSee Also\nSupporting expanding and collapsing\nUICollectionViewDiffableDataSourceSectionSnapshotHandlers\nHandlers for expanding and collapsing items."
  },
  {
    "title": "canReorderItemHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers/3600517-canreorderitemhandler",
    "html": "See Also\nReordering items\nwillReorderHandler\nThe handler that prepares the diffable data source for reordering its items.\ndidReorderHandler\nThe handler that processes a reordering transaction."
  },
  {
    "title": "willReorderHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers/3600519-willreorderhandler",
    "html": "See Also\nReordering items\ncanReorderItemHandler\nThe handler that determines whether you can reorder a particular item.\ndidReorderHandler\nThe handler that processes a reordering transaction."
  },
  {
    "title": "shouldCollapseItemHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600521-shouldcollapseitemhandler",
    "html": "See Also\nExpanding and collapsing items\nshouldExpandItemHandler\nThe handler that determines whether a particular item is expandable.\nwillCollapseItemHandler\nThe handler that prepares the diffable data source for collapsing an item.\nwillExpandItemHandler\nThe handler that prepares the diffable data source for expanding an item.\nsnapshotForExpandingParentItemHandler\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "UIButtonConfigurationCornerStyleMedium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle/uibuttonconfigurationcornerstylemedium",
    "html": "See Also\nCorner styles\nUIButtonConfigurationCornerStyleDynamic\nA style that adjusts the background corner radius for dynamic type.\nUIButtonConfigurationCornerStyleFixed\nA style that uses the background corner radius without modification.\nUIButtonConfigurationCornerStyleCapsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\nUIButtonConfigurationCornerStyleLarge\nA style that ignores the background corner radius and uses a large system-defined corner radius.\nUIButtonConfigurationCornerStyleSmall\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "supplementaryViewProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182926-supplementaryviewprovider",
    "html": "See Also\nCreating supplementary views\nUICollectionViewDiffableDataSourceSupplementaryViewProvider\nA closure that configures and returns a collection view’s supplementary view, such as a header or footer, from a diffable data source."
  },
  {
    "title": "cornerRadius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableimageproperties/4173112-cornerradius",
    "html": "Discussion\n\nThe default value is 0. If the image is too small to fit the requested radius, the view adjusts the corner curve and radius to fit."
  },
  {
    "title": "enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailablebuttonproperties/4173074-enabled",
    "html": "Discussion\n\nThe default value is YES."
  },
  {
    "title": "UIButtonConfigurationCornerStyleFixed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle/uibuttonconfigurationcornerstylefixed",
    "html": "See Also\nCorner styles\nUIButtonConfigurationCornerStyleDynamic\nA style that adjusts the background corner radius for dynamic type.\nUIButtonConfigurationCornerStyleCapsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\nUIButtonConfigurationCornerStyleLarge\nA style that ignores the background corner radius and uses a large system-defined corner radius.\nUIButtonConfigurationCornerStyleMedium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\nUIButtonConfigurationCornerStyleSmall\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "UIButtonConfigurationCornerStyleLarge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle/uibuttonconfigurationcornerstylelarge",
    "html": "See Also\nCorner styles\nUIButtonConfigurationCornerStyleDynamic\nA style that adjusts the background corner radius for dynamic type.\nUIButtonConfigurationCornerStyleFixed\nA style that uses the background corner radius without modification.\nUIButtonConfigurationCornerStyleCapsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\nUIButtonConfigurationCornerStyleMedium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\nUIButtonConfigurationCornerStyleSmall\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "listGroupedHeaderFooterConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600325-listgroupedheaderfooterconfigura",
    "html": "Return Value\n\nThe default configuration for a grouped list header or footer.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a header or footer in a table view or collection view list. When you apply this configuration, the background of the header or footer matches the system default styling for a header or footer in a grouped list.\n\nFor an appearance consistent with system defaults, use this background configuration for a header or footer in these contexts:\n\nA table view that you configure with the UITableViewStyleGrouped or UITableViewStyleInsetGrouped enumeration cases.\n\nA a collection view list that you configure with the UICollectionLayoutListAppearanceGrouped or UICollectionLayoutListAppearanceInsetGrouped enumeration cases.\n\nSee Also\nCreating header and footer background configurations\n+ listPlainHeaderFooterConfiguration\nCreates the default configuration you use to style a plain list header or footer.\n+ listSidebarHeaderConfiguration\nCreates the default configuration you use to style a sidebar list header."
  },
  {
    "title": "isLandscape | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/1623001-islandscape",
    "html": "Parameters\norientation\n\nSpecify the orientation constant to check.\n\nReturn Value\n\nReturns true if the interface orientation is landscape, otherwise returns false.\n\nDiscussion\n\nThe interface orientation can be different than the device orientation. You typically call this function in your view controller code to check the current orientation.\n\nSee Also\nOrientation Checks\nvar isPortrait: Bool\nA Boolean value that indicates whether the user interface is currently presented in a portrait orientation."
  },
  {
    "title": "isPortrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/1623046-isportrait",
    "html": "Parameters\norientation\n\nSpecify the orientation constant to check.\n\nReturn Value\n\nReturns true if the interface orientation is portrait, otherwise returns false.\n\nDiscussion\n\nThe interface orientation can be different than the device orientation. You typically call this function in your view controller code to check the current orientation.\n\nSee Also\nOrientation Checks\nvar isLandscape: Bool\nA Boolean value that indicates whether the user interface is currently presented in a landscape orientation."
  },
  {
    "title": "UIInterfaceOrientationLandscapeLeft | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/uiinterfaceorientationlandscapeleft",
    "html": "See Also\nOrientations\nUIInterfaceOrientationUnknown\nThe orientation of the device is unknown.\nUIInterfaceOrientationPortrait\nThe device is in portrait mode, with the device upright and the Home button on the bottom.\nUIInterfaceOrientationPortraitUpsideDown\nThe device is in portrait mode but is upside down, with the device upright and the Home button at the top.\nUIInterfaceOrientationLandscapeRight\nThe device is in landscape mode, with the device upright and the Home button on the right."
  },
  {
    "title": "UIApplicationInvalidInterfaceOrientationException | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationinvalidinterfaceorientationexception",
    "html": "Discussion\n\nThis exception is thrown if a view controller or the app returns 0 instead of a valid set of supported interface orientation values. It is also thrown if the orientation returned by a view controller’s preferredInterfaceOrientationForPresentation method does not match one of the view controller’s supported orientations.\n\nSee Also\nManaging interface geometry\n- application:supportedInterfaceOrientationsForWindow:\nAsks the delegate for the interface orientations to use for the view controllers in the specified window.\nUIInterfaceOrientation\nConstants that specify the orientation of the app’s user interface.\nUIInterfaceOrientationMask\nConstants that specify a view controller’s supported interface orientations."
  },
  {
    "title": "NSObliquenessAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsobliquenessattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing a floating point value indicating skew to be applied to glyphs. The default value is 0, indicating no skew.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "UIListContentImageStandardDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimagestandarddimension",
    "html": "Discussion\n\nSetting the reservedLayoutSize width or height to this constant results in using the system standard value for a symbol image for that dimension, even when the image is not a symbol image.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "NSLinkAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinkattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSURL object (preferred) or an NSString object. The default value of this property is nil, indicating no link.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSLigatureAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsligatureattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing an integer. Ligatures cause specific character combinations to be rendered using a single custom glyph that corresponds to those characters. The value 0 indicates no ligatures. The value 1 indicates the use of the default ligatures. The value 2 indicates the use of all ligatures. The default value for this attribute is 1. (Value 2 is unsupported on iOS.)\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/bounce/automatic",
    "html": "See Also\nSelecting bounce options\ncase always\nThe orthogonal scroll view bounces even if the content is smaller than its bounds.\ncase never\nThe orthogonal scroll view stops scrolling immediately when it encounters a content boundary without bouncing."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614859-initwithcoder",
    "html": "See Also\nCreating a table view\n- initWithFrame:style:\nCreates and returns a table view with the specified frame and style."
  },
  {
    "title": "normal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/decelerationrate/4134817-normal",
    "html": "See Also\nSelecting deceleration rates\nstatic let automatic: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA deceleration rate that matches the parent scroll view’s deceleration rate for the orthogonal scrolling section.\nstatic let fast: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA rapid deceleration rate for the orthogonal scrolling section."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/decelerationrate/4138471-init",
    "html": "Parameters\nrawValue\n\nA float value that represents a deceleration rate."
  },
  {
    "title": "parentViewController | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621362-parentviewcontroller",
    "html": "Discussion\n\nIf the recipient is a child of a container view controller, this property holds the view controller it is contained in. If the recipient has no parent, the value in this property is nil.\n\nPrior to iOS 5.0, if a view did not have a parent view controller and was being presented, the presenting view controller would be returned. On iOS 5, this behavior no longer occurs. Instead, use the presentingViewController property to access the presenting view controller.\n\nSee Also\nGetting other related view controllers\npresentingViewController\nThe view controller that presented this view controller.\npresentedViewController\nThe view controller that is presented by this view controller, or one of its ancestors in the view controller hierarchy.\nsplitViewController\nThe nearest ancestor in the view controller hierarchy that is a split view controller.\nnavigationController\nThe nearest ancestor in the view controller hierarchy that is a navigation controller.\ntabBarController\nThe nearest ancestor in the view controller hierarchy that is a tab bar controller."
  },
  {
    "title": "updateContentUnavailableConfigurationUsingState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/4173180-updatecontentunavailableconfigur",
    "html": "See Also\nIndicating missing content\ncontentUnavailableConfiguration\ncontentUnavailableConfigurationState\n- setNeedsUpdateContentUnavailableConfiguration\nRequests that the system update the content-unavailable configuration for the latest state.\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view."
  },
  {
    "title": "transitionFromViewController:toViewController:duration:options:animations:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621363-transitionfromviewcontroller",
    "html": "Parameters\nfromViewController\n\nA view controller whose view is currently visible in the parent's view hierarchy.\n\ntoViewController\n\nA child view controller whose view is not currently in the view hierarchy.\n\nduration\n\nThe total duration of the animations, in seconds. If you pass zero, the changes are made without animating them.\n\noptions\n\nA mask of options indicating how you want to perform the animations. For a list of valid constants, see UIViewAnimationOptions.\n\nanimations\n\nA block object containing the changes to commit to the views. Here you programmatically change any animatable properties of the views in your view hierarchy. This block takes no parameters and has no return value. This parameter must not be NULL.\n\ncompletion\n\nA block to be called when the animation completes.\n\nThe block takes the following parameters:\n\nfinished\n\nYES if the animation finished; NO if it was skipped.\n\nDiscussion\n\nThis method adds the second view controller's view to the view hierarchy and then performs the animations defined in your animations block. After the animation completes, it removes the first view controller's view from the view hierarchy.\n\nThis method is only intended to be called by an implementation of a custom container view controller. If you override this method, you must call super in your implementation.\n\nSee Also\nManaging child view controllers in a custom container\nchildViewControllers\nAn array of view controllers that are children of the current view controller.\n- addChildViewController:\nAdds the specified view controller as a child of the current view controller.\n- removeFromParentViewController\nRemoves the view controller from its parent.\nshouldAutomaticallyForwardAppearanceMethods\nReturns a Boolean value indicating whether appearance methods are forwarded to child view controllers.\n- beginAppearanceTransition:animated:\nTells a child controller its appearance is about to change.\n- endAppearanceTransition\nTells a child controller its appearance has changed.\nUIViewControllerHierarchyInconsistencyException\nRaised if the view controller hierarchy is inconsistent with the view hierarchy."
  },
  {
    "title": "willMoveToParentViewController: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621381-willmovetoparentviewcontroller",
    "html": "Parameters\nparent\n\nThe parent view controller, or nil if there is no parent.\n\nDiscussion\n\nYour view controller can override this method when it needs to know that it has been added to a container.\n\nIf you are implementing your own container view controller, it must call the willMoveToParentViewController: method of the child view controller before calling the removeFromParentViewController method, passing in a parent value of nil.\n\nWhen your custom container calls the addChildViewController: method, it automatically calls the willMoveToParentViewController: method of the view controller to be added as a child before adding it.\n\nSee Also\nResponding to containment events\n- didMoveToParentViewController:\nCalled after the view controller is added or removed from a container view controller."
  },
  {
    "title": "listSidebarHeaderConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600329-listsidebarheaderconfiguration",
    "html": "Return Value\n\nThe default configuration for a sidebar list header.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a header or footer in a table view or collection view list. When you apply this configuration, the background of the header or footer matches the system default styling for a header or footer in a sidebar list.\n\nFor an appearance consistent with system defaults, use this background configuration for a header or footer in a collection view list that you configure with the UICollectionLayoutListAppearanceSidebar enumeration case.\n\nSee Also\nCreating header and footer background configurations\n+ listPlainHeaderFooterConfiguration\nCreates the default configuration you use to style a plain list header or footer.\n+ listGroupedHeaderFooterConfiguration\nCreates the default configuration you use to style a grouped list header or footer."
  },
  {
    "title": "UIViewControllerHierarchyInconsistencyException | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontrollerhierarchyinconsistencyexception",
    "html": "Discussion\n\nWhen a view controller's view is added to the view hierarchy, the system walks up the view hierarchy to find the first parent view that has a view controller. That view controller must be the parent of the view controller whose view is being added. Otherwise, this exception is raised. This consistency check is also performed when a view controller is added as a child by calling the addChildViewController: method.\n\nIt is also allowed for a view controller that has no parent to add its view to the view hierarchy. This is generally not recommended, but is useful in some special cases.\n\nSee Also\nManaging child view controllers in a custom container\nchildViewControllers\nAn array of view controllers that are children of the current view controller.\n- addChildViewController:\nAdds the specified view controller as a child of the current view controller.\n- removeFromParentViewController\nRemoves the view controller from its parent.\n- transitionFromViewController:toViewController:duration:options:animations:completion:\nTransitions between two of the view controller's child view controllers.\nshouldAutomaticallyForwardAppearanceMethods\nReturns a Boolean value indicating whether appearance methods are forwarded to child view controllers.\n- beginAppearanceTransition:animated:\nTells a child controller its appearance is about to change.\n- endAppearanceTransition\nTells a child controller its appearance has changed."
  },
  {
    "title": "didMoveToParentViewController: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621405-didmovetoparentviewcontroller",
    "html": "Parameters\nparent\n\nThe parent view controller, or nil if there is no parent.\n\nDiscussion\n\nYour view controller can override this method when it wants to react to being added to a container.\n\nIf you are implementing your own container view controller, it must call the didMoveToParentViewController: method of the child view controller after the transition to the new controller is complete or, if there is no transition, immediately after calling the addChildViewController: method.\n\nThe removeFromParentViewController method automatically calls the didMoveToParentViewController: method of the child view controller after it removes the child.\n\nSee Also\nResponding to containment events\n- willMoveToParentViewController:\nCalled just before the view controller is added or removed from a container view controller."
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce.never | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/bounce/never",
    "html": "See Also\nSelecting bounce options\ncase always\nThe orthogonal scroll view bounces even if the content is smaller than its bounds.\ncase automatic\nThe orthogonal scroll view bounces when it encounters a content boundary."
  },
  {
    "title": "maskView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622557-maskview",
    "html": "Discussion\n\nThe view’s alpha channel determines how much of the view’s content and background shows through. Fully or partially opaque pixels allow the underlying content to show through but fully transparent pixels block that content.\n\nSee Also\nConfiguring a view’s visual appearance\nbackgroundColor\nThe view’s background color.\nhidden\nA Boolean value that determines whether the view is hidden.\nalpha\nThe view’s alpha value.\nopaque\nA Boolean value that determines whether the view is opaque.\ntintColor\nThe first nondefault tint color value in the view’s hierarchy, ascending from and starting with the view itself.\ntintAdjustmentMode\nThe first non-default tint adjustment mode value in the view’s hierarchy, ascending from and starting with the view itself.\nclipsToBounds\nA Boolean value that determines whether subviews are confined to the bounds of the view.\nclearsContextBeforeDrawing\nA Boolean value that determines whether the view’s bounds should be automatically cleared before drawing.\nlayerClass\nReturns the class used to create the layer for instances of this class.\nlayer\nThe view’s Core Animation layer used for rendering."
  },
  {
    "title": "UICollectionViewDiffableDataSourceReorderingHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers",
    "html": "Topics\nReordering items\ncanReorderItemHandler\nThe handler that determines whether you can reorder a particular item.\nwillReorderHandler\nThe handler that prepares the diffable data source for reordering its items.\ndidReorderHandler\nThe handler that processes a reordering transaction.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSupporting reordering\nreorderingHandlers\nThe diffable data source’s handlers for reordering items.\nNSDiffableDataSourceTransaction\nA transaction that describes the changes after reordering the items in the view.\nNSDiffableDataSourceSectionTransaction\nA transaction that describes the changes after reordering the items in a section."
  },
  {
    "title": "maximumSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600557-maximumsize",
    "html": "Discussion\n\nThe default value is CGSizeZero. A width or height of zero means that the system doesn’t constrain the size for that dimension.\n\nIf the image exceeds this size on either dimension, the system reduces the size proportionately, maintaining the aspect ratio.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "reservedLayoutSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600559-reservedlayoutsize",
    "html": "Discussion\n\nUse this property to ensure:\n\nConsistent horizontal alignment for images across adjacent content views, even when the images vary in width.\n\nConsistent height for content views, even when the images vary in height.\n\nThe reserved layout size only affects the amount of space for the image, and its positioning within that space. It doesn’t affect the size of the image.\n\nThe default value is CGSizeZero. A width or height of zero means that the system uses the default behavior for that dimension:\n\nThe system centers symbol images inside a predefined reserved layout size that scales with the content size category.\n\nNonsymbol images use a reserved layout size equal to the actual size of the displayed image.\n\nAt Accessibility Dynamic Type sizes, content views ignore the reserved layout width. Content views ignore the reserved layout height when using the special Accessibility Dynamic Type layout where text wraps around the image.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "UIButtonConfigurationIndicatorAutomatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationindicator/uibuttonconfigurationindicatorautomatic",
    "html": "Discussion\n\nWith this behavior, the system automatically shows an indicator if the button shows a menu and has single-selection behavior (when its contextMenuInteractionEnabled, showsMenuAsPrimaryAction, and changesSelectionAsPrimaryAction properties are YES).\n\nSee Also\nIndicator styles\nUIButtonConfigurationIndicatorNone\nA constant that doesn’t show an indicator.\nUIButtonConfigurationIndicatorPopup\nA constant that shows a popup-style indicator."
  },
  {
    "title": "UIButtonConfigurationSizeMedium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationsize/uibuttonconfigurationsizemedium",
    "html": "See Also\nButton sizes\nUIButtonConfigurationSizeLarge\nDisplays button elements at a large size.\nUIButtonConfigurationSizeSmall\nDisplays button elements at a small size.\nUIButtonConfigurationSizeMini\nDisplays button elements at the smallest size."
  },
  {
    "title": "UIInterfaceOrientationUnknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/uiinterfaceorientationunknown",
    "html": "See Also\nOrientations\nUIInterfaceOrientationPortrait\nThe device is in portrait mode, with the device upright and the Home button on the bottom.\nUIInterfaceOrientationPortraitUpsideDown\nThe device is in portrait mode but is upside down, with the device upright and the Home button at the top.\nUIInterfaceOrientationLandscapeLeft\nThe device is in landscape mode, with the device upright and the Home button on the left.\nUIInterfaceOrientationLandscapeRight\nThe device is in landscape mode, with the device upright and the Home button on the right."
  },
  {
    "title": "UIApplicationDidEnterBackgroundNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdidenterbackgroundnotification",
    "html": "Discussion\n\nThe object of the notification is the UIApplication object. There is no userInfo dictionary.\n\nSee Also\nResponding to app life-cycle events\n- applicationDidBecomeActive:\nTells the delegate that the app has become active.\n- applicationWillResignActive:\nTells the delegate that the app is about to become inactive.\n- applicationDidEnterBackground:\nTells the delegate that the app is now in the background.\n- applicationWillEnterForeground:\nTells the delegate that the app is about to enter the foreground.\n- applicationWillTerminate:\nTells the delegate when the app is about to terminate.\nUIApplicationDidBecomeActiveNotification\nA notification that posts when the app becomes active.\nUIApplicationWillEnterForegroundNotification\nA notification that posts shortly before an app leaves the background state on its way to becoming the active app.\nUIApplicationWillResignActiveNotification\nA notification that posts when the app is no longer active and loses focus.\nUIApplicationWillTerminateNotification\nA notification that posts when the app is about to terminate."
  },
  {
    "title": "UIApplication.LaunchOptionsKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/launchoptionskey",
    "html": "Overview\n\nThese keys are passed to the options dictionary that’s passed to the application(_:willFinishLaunchingWithOptions:) and application(_:didFinishLaunchingWithOptions:) methods of the app delegate.\n\nTopics\nAccessing launch options\nstatic let bluetoothCentrals: UIApplication.LaunchOptionsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nstatic let bluetoothPeripherals: UIApplication.LaunchOptionsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nstatic let cloudKitShareMetadata: UIApplication.LaunchOptionsKey\nA key indicating that the app received a CloudKit share invitation.\nstatic let eventAttribution: UIApplication.LaunchOptionsKey\nstatic let location: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle an incoming location event.\nstatic let newsstandDownloads: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nstatic let remoteNotification: UIApplication.LaunchOptionsKey\nA key indicating that a remote notification is available for the app to process.\nstatic let shortcutItem: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nstatic let sourceApplication: UIApplication.LaunchOptionsKey\nA key indicating that another app requested the launch of your app.\nstatic let url: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched so that it could open the specified URL.\nstatic let userActivityDictionary: UIApplication.LaunchOptionsKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nstatic let userActivityType: UIApplication.LaunchOptionsKey\nA key indicating the type of user activity that the user wants to continue.\nstatic let annotation: UIApplication.LaunchOptionsKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nstatic let localNotification: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated\nCreating a launch options key\ninit(rawValue: String)\nCreates a launch options key with the specified raw value.\nRelationships\nConforms To\nEquatable\nHashable\nRawRepresentable\nSendable\nSee Also\nInitializing the app\nfunc application(UIApplication, willFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?) -> Bool\nTells the delegate that the launch process has begun but that state restoration hasn’t occured.\nfunc application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?) -> Bool\nTells the delegate that the launch process is almost done and the app is almost ready to run.\nclass let didFinishLaunchingNotification: NSNotification.Name\nA notification that posts immediately after the app finishes launching."
  },
  {
    "title": "UIApplicationWillEnterForegroundNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationwillenterforegroundnotification",
    "html": "Discussion\n\nThe object of the notification is the UIApplication object. There is no userInfo dictionary.\n\nSee Also\nResponding to app life-cycle events\n- applicationDidBecomeActive:\nTells the delegate that the app has become active.\n- applicationWillResignActive:\nTells the delegate that the app is about to become inactive.\n- applicationDidEnterBackground:\nTells the delegate that the app is now in the background.\n- applicationWillEnterForeground:\nTells the delegate that the app is about to enter the foreground.\n- applicationWillTerminate:\nTells the delegate when the app is about to terminate.\nUIApplicationDidBecomeActiveNotification\nA notification that posts when the app becomes active.\nUIApplicationDidEnterBackgroundNotification\nA notification that posts when the app enters the background.\nUIApplicationWillResignActiveNotification\nA notification that posts when the app is no longer active and loses focus.\nUIApplicationWillTerminateNotification\nA notification that posts when the app is about to terminate."
  },
  {
    "title": "UIApplicationDidBecomeActiveNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdidbecomeactivenotification",
    "html": "Discussion\n\nAn app is active when it is receiving events. An active app can be said to have focus. It gains focus after being launched, loses focus when an overlay window pops up or when the device is locked, and gains focus when the device is unlocked.\n\nSee Also\nResponding to app life-cycle events\n- applicationDidBecomeActive:\nTells the delegate that the app has become active.\n- applicationWillResignActive:\nTells the delegate that the app is about to become inactive.\n- applicationDidEnterBackground:\nTells the delegate that the app is now in the background.\n- applicationWillEnterForeground:\nTells the delegate that the app is about to enter the foreground.\n- applicationWillTerminate:\nTells the delegate when the app is about to terminate.\nUIApplicationDidEnterBackgroundNotification\nA notification that posts when the app enters the background.\nUIApplicationWillEnterForegroundNotification\nA notification that posts shortly before an app leaves the background state on its way to becoming the active app.\nUIApplicationWillResignActiveNotification\nA notification that posts when the app is no longer active and loses focus.\nUIApplicationWillTerminateNotification\nA notification that posts when the app is about to terminate."
  },
  {
    "title": "listAccompaniedSidebarCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3667725-listaccompaniedsidebarcellconfig",
    "html": "Return Value\n\nThe default configuration for a cell in an accompanied sidebar list.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a cell in a list. When you apply this configuration to a cell, the background of the cell matches the system default styling for a cell in an accompanied sidebar collection view list, including highlighted and selected states. An accompanied sidebar collection view list is a list that’s in the primary column of a split view controller, accompanied by another list in the split view controller’s supplementary column.\n\nFor an appearance consistent with system defaults, use this background configuration for a cell in an accompanied sidebar collection view list that you configure with the UICollectionLayoutListAppearanceSidebar or UICollectionLayoutListAppearanceSidebarPlain enumeration case.\n\nSee Also\nCreating cell background configurations\n+ listPlainCellConfiguration\nCreates the default configuration you use to style a cell in a plain list.\n+ listGroupedCellConfiguration\nCreates the default configuration you use to style a cell in a grouped list.\n+ listSidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list."
  },
  {
    "title": "listGroupedCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600324-listgroupedcellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell in a grouped list.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a cell in a list. When you apply this configuration to a cell, the background of the cell matches the system default styling for a grouped cell, including highlighted and selected states.\n\nFor an appearance consistent with system defaults, use this background configuration for a cell in these contexts:\n\nA table view that you configure with the UITableViewStyleGrouped or UITableViewStyleInsetGrouped enumeration case.\n\nA a collection view list that you configure with the UICollectionLayoutListAppearanceGrouped or UICollectionLayoutListAppearanceInsetGrouped enumeration case.\n\nSee Also\nCreating cell background configurations\n+ listPlainCellConfiguration\nCreates the default configuration you use to style a cell in a plain list.\n+ listSidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ listAccompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list."
  },
  {
    "title": "UIApplicationDidFinishLaunchingNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdidfinishlaunchingnotification",
    "html": "Discussion\n\nIf the app was launched as a result of in remote notification targeted at it or because another app opened a URL resource claimed the posting app (the notification object), this notification contains a userInfo dictionary. You can access the contents of the dictionary using the UIApplicationLaunchOptionsURLKey and UIApplicationLaunchOptionsSourceApplicationKey constants (for URLs), the UIApplicationLaunchOptionsRemoteNotificationKey constant (for remote notifications), and the UIApplicationLaunchOptionsLocalNotificationKey constant (for local notifications). If the notification was posted for a normal app launch, there is no userInfo dictionary.\n\nSee Also\nInitializing the app\n- application:willFinishLaunchingWithOptions:\nTells the delegate that the launch process has begun but that state restoration hasn’t occured.\n- application:didFinishLaunchingWithOptions:\nTells the delegate that the launch process is almost done and the app is almost ready to run.\nUIApplicationLaunchOptionsKey\nThe keys you use to access values in the launch options dictionary that the system passes to your app at initialization."
  },
  {
    "title": "font | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600572-font",
    "html": "See Also\nConfiguring text properties\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UITableViewStyleGrouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewstyle/uitableviewstylegrouped",
    "html": "Discussion\n\nSection headers and footers don’t float when the table view scrolls.\n\nSee Also\nStyles\nUITableViewStylePlain\nA plain table view.\nUITableViewStyleInsetGrouped\nA table view where the grouped sections are inset with rounded corners."
  },
  {
    "title": "storyboardWithName:bundle: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistoryboard/1616216-storyboardwithname",
    "html": "Parameters\nname\n\nThe name of the storyboard resource file without the filename extension. This method raises an exception if this parameter is nil.\n\nstoryboardBundleOrNil\n\nThe bundle containing the storyboard file and its related resources. If you specify nil, this method looks in the main bundle of the current application.\n\nReturn Value\n\nA storyboard object for the specified file. If no storyboard resource file matching name exists, an exception is thrown with description: Could not find a storyboard named 'XXXXXX' in bundle....\n\nDiscussion\n\nUse this method to retrieve the storyboard object containing the view controller graph you want to access. All of the resources associated with the storyboard must be in the bundle indicated by the storyboardBundleOrNil parameter.\n\nSee Also\nRelated Documentation\nView Controller Programming Guide for iOS"
  },
  {
    "title": "UICollectionLayoutListAppearancePlain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance/uicollectionlayoutlistappearanceplain",
    "html": "See Also\nList Appearances\nUICollectionLayoutListAppearanceGrouped\nThe grouped list appearance.\nUICollectionLayoutListAppearanceInsetGrouped\nThe inset grouped list appearance.\nUICollectionLayoutListAppearanceSidebar\nThe sidebar list appearance.\nUICollectionLayoutListAppearanceSidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "UICollectionLayoutListAppearanceGrouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance/uicollectionlayoutlistappearancegrouped",
    "html": "See Also\nList Appearances\nUICollectionLayoutListAppearancePlain\nThe plain list appearance.\nUICollectionLayoutListAppearanceInsetGrouped\nThe inset grouped list appearance.\nUICollectionLayoutListAppearanceSidebar\nThe sidebar list appearance.\nUICollectionLayoutListAppearanceSidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "UIStoryboardViewControllerCreator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistoryboardviewcontrollercreator",
    "html": "Parameters\ncoder\n\nThe coder object containing the storyboard data to use when configuring the view controller. Pass this coder object to any methods you use to restore the state of the view controller and its views. For example, you might pass it to the view controller’s initWithCoder: method before initializing any other custom properties.\n\nSee Also\nStoryboards\nCustomizing the behavior of segue-based presentations\nPass data between view controllers during a segue, and programmatically control when segues occur.\nDismissing a view controller with an unwind segue\nConfigure an unwind segue in your storyboard file that dynamically chooses the most appropriate view controller to display next.\nUIStoryboard\nAn encapsulation of the design-time view controller graph represented in an Interface Builder storyboard resource file.\nUIStoryboardSegue\nAn object that prepares for and performs the visual transition between two view controllers.\nUIStoryboardUnwindSegueSource\nAn encapsulation of information about an unwind segue."
  },
  {
    "title": "color | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600571-color",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "lineBreakMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600573-linebreakmode",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "numberOfLines | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600575-numberoflines",
    "html": "Discussion\n\nA value of 0 indicates that the number of lines is limitless.\n\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UITableViewStylePlain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewstyle/uitableviewstyleplain",
    "html": "Discussion\n\nSection headers and footers are displayed as inline separators and float when the table view is scrolled.\n\nSee Also\nStyles\nUITableViewStyleGrouped\nA table view where sections have distinct groups of rows.\nUITableViewStyleInsetGrouped\nA table view where the grouped sections are inset with rounded corners."
  },
  {
    "title": "alignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600569-alignment",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "resolvedColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3606379-resolvedcolor",
    "html": "Discussion\n\nThe resulting color depends on color and colorTransformer.\n\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "proximityMonitoringEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidevice/1620017-proximitymonitoringenabled",
    "html": "Discussion\n\nEnable proximity monitoring only when your application needs to be notified of changes to the proximity state. Otherwise, disable proximity monitoring. The default value is NO.\n\nNot all iOS devices have proximity sensors. To determine if proximity monitoring is available, attempt to enable it. If the value of the proximityMonitoringEnabled property remains NO, proximity monitoring isn’t available.\n\nSee Also\nUsing the proximity sensor\nproximityState\nA Boolean value that indicates whether the proximity sensor is close to the user."
  },
  {
    "title": "init(listAppearance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727763-init",
    "html": "Parameters\nlistAppearance\n\nThe appearance of the list using this separator configuration."
  },
  {
    "title": "shouldExpandItemHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600522-shouldexpanditemhandler",
    "html": "See Also\nExpanding and collapsing items\nshouldCollapseItemHandler\nThe handler that determines whether a particular item is collapsable.\nwillCollapseItemHandler\nThe handler that prepares the diffable data source for collapsing an item.\nwillExpandItemHandler\nThe handler that prepares the diffable data source for expanding an item.\nsnapshotForExpandingParentItemHandler\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "willExpandItemHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600525-willexpanditemhandler",
    "html": "See Also\nExpanding and collapsing items\nshouldCollapseItemHandler\nThe handler that determines whether a particular item is collapsable.\nshouldExpandItemHandler\nThe handler that determines whether a particular item is expandable.\nwillCollapseItemHandler\nThe handler that prepares the diffable data source for collapsing an item.\nsnapshotForExpandingParentItemHandler\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "NSLineBreakByTruncatingTail | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakmode/nslinebreakbytruncatingtail",
    "html": "Discussion\n\nAlthough this mode works for multiline text, it’s more often used for single line text."
  },
  {
    "title": "UISceneErrorCodeRequestDenied | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneerrorcode/uisceneerrorcoderequestdenied",
    "html": "See Also\nError codes\nUISceneErrorCodeMultipleScenesNotSupported\nAn error that indicates multiple scenes aren’t supported.\nUISceneErrorCodeGeometryRequestUnsupported\nAn error that indicates the geometry request is invalid or unsupported.\nUISceneErrorCodeGeometryRequestDenied\nAn error that indicates the geometry request is valid but the system denied the request."
  },
  {
    "title": "willCollapseItemHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600524-willcollapseitemhandler",
    "html": "See Also\nExpanding and collapsing items\nshouldCollapseItemHandler\nThe handler that determines whether a particular item is collapsable.\nshouldExpandItemHandler\nThe handler that determines whether a particular item is expandable.\nwillExpandItemHandler\nThe handler that prepares the diffable data source for expanding an item.\nsnapshotForExpandingParentItemHandler\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "UIButtonConfigurationCornerStyleSmall | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle/uibuttonconfigurationcornerstylesmall",
    "html": "See Also\nCorner styles\nUIButtonConfigurationCornerStyleDynamic\nA style that adjusts the background corner radius for dynamic type.\nUIButtonConfigurationCornerStyleFixed\nA style that uses the background corner radius without modification.\nUIButtonConfigurationCornerStyleCapsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\nUIButtonConfigurationCornerStyleLarge\nA style that ignores the background corner radius and uses a large system-defined corner radius.\nUIButtonConfigurationCornerStyleMedium\nA style that ignores the background corner radius and uses a medium system-defined corner radius."
  },
  {
    "title": "initWithCollectionView:cellProvider: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3182923-initwithcollectionview",
    "html": "Parameters\ncollectionView\n\nThe initialized collection view object to connect to the diffable data source.\n\ncellProvider\n\nA closure that creates and returns each of the cells for the collection view from the data the diffable data source provides.\n\nDiscussion\n\nTo connect a diffable data source to a collection view, you create the diffable data source using this initializer, passing in the collection view you want to associate with that data source. You also pass in a cell provider, where you configure each of your cells to determine how to display your data in the UI.\n\nself.dataSource = [[UICollectionViewDiffableDataSource alloc] initWithCollectionView:self.collectionView cellProvider:^UICollectionViewCell *(UICollectionView *collectionView, NSIndexPath *indexPath, id item) {\n    // configure and return cell\n}];\n\n\nSee Also\nCreating a diffable data source\nUICollectionViewDiffableDataSourceCellProvider\nA closure that configures and returns a cell for a collection view from its diffable data source."
  },
  {
    "title": "UICollectionViewDiffableDataSourceCellProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcecellprovider",
    "html": "Parameters\ncollectionView\n\nThe collection view to configure this cell for.\n\nindexPath\n\nThe index path that specifies the location of the cell in the collection view.\n\nidentifier\n\nThe identifier of the item for this cell.\n\nReturn Value\n\nA non-nil configured cell object. The cell provider must return a valid cell object to the collection view.\n\nSee Also\nCreating a diffable data source\n- initWithCollectionView:cellProvider:\nCreates a diffable data source with the specified cell provider, and connects it to the specified collection view."
  },
  {
    "title": "listPlainHeaderFooterConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundconfiguration/3600327-listplainheaderfooterconfigurati",
    "html": "Return Value\n\nThe default configuration for a plain list header or footer.\n\nDiscussion\n\nCreate this configuration to update the styling for the background of a header or footer in a table view or collection view list. When you apply this configuration, the background of the header or footer matches the system default styling for a header or footer in a plain table.\n\nFor an appearance consistent with system defaults, use this background configuration for a header or footer in these contexts:\n\nA table view that you configure with the UITableViewStylePlain enumeration case.\n\nA collection view list that you configure with the UICollectionLayoutListAppearancePlain or UICollectionLayoutListAppearanceSidebarPlain enumeration cases.\n\nSee Also\nCreating header and footer background configurations\n+ listGroupedHeaderFooterConfiguration\nCreates the default configuration you use to style a grouped list header or footer.\n+ listSidebarHeaderConfiguration\nCreates the default configuration you use to style a sidebar list header."
  },
  {
    "title": "NSUnderlineColorAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsunderlinecolorattributename",
    "html": "Discussion\n\nThe value of this attribute is a UIColor object. The default value is nil, indicating same as foreground color.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSStrikethroughColorAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsstrikethroughcolorattributename",
    "html": "Discussion\n\nThe value of this attribute is a UIColor object. The default value is nil, indicating same as foreground color.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSLineBreakStrategy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakstrategy",
    "html": "Topics\nConstants\nNSLineBreakStrategyNone\nThe text system doesn’t use any line-break strategies.\nNSLineBreakStrategyPushOut\nThe text system pushes out individual lines to avoid an orphan word on the last line of the paragraph.\nNSLineBreakStrategyHangulWordPriority\nThe text system prohibits breaking between Hangul characters.\nNSLineBreakStrategyStandard\nThe text system uses the same configuration of line-break strategies that it uses for standard UI labels.\nSee Also\nGetting line-break information\nlineBreakMode\nThe mode for breaking lines in the paragraph that don’t fit within a container.\nNSLineBreakMode\nConstants that specify what happens when a line is too long for a container.\nlineBreakStrategy\nThe strategy for breaking lines while laying out paragraphs.\nhyphenationFactor\nThe paragraph’s threshold for hyphenation.\nusesDefaultHyphenation\nA Boolean value that indicates whether the paragraph style uses the system hyphenation settings.\ntighteningFactorForTruncation\nThe threshold for using tightening as an alternative to truncation.\nallowsDefaultTighteningForTruncation\nA Boolean value that indicates whether the system tightens character spacing before truncating text."
  },
  {
    "title": "addSymbolEffect:options:animated:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210358-addsymboleffect",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to add.\n\noptions\n\nThe options for the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the addition of a scale, appear, or disappear effect.\n\ncompletionHandler\n\nA completion handler the system calls after the effect’s addition is complete.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "NSBaselineOffsetAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsbaselineoffsetattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing a floating point value indicating the character’s offset from the baseline, in points. The default value is 0.\n\nImportant\n\nThis attribute is different from kCTBaselineOffsetAttributeName; you need to use kCTBaselineOffsetAttributeName if you are writing code for Core Text.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text.\nRelated Documentation\nkCTBaselineOffsetAttributeName\nVertical offset for text position."
  },
  {
    "title": "cornerRadius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600556-cornerradius",
    "html": "Discussion\n\nIf the image is too small to fit the requested radius, the system adjusts the corner curve and radius.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "accessibilityIgnoresInvertColors | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3667733-accessibilityignoresinvertcolors",
    "html": "Discussion\n\nIf the value of this property is YES, the image doesn’t invert its colors when the user turns on Invert Colors. The default value is NO.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size."
  },
  {
    "title": "UIButtonConfigurationTitleAlignmentCenter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationtitlealignment/uibuttonconfigurationtitlealignmentcenter",
    "html": "See Also\nTitle alignments\nUIButtonConfigurationTitleAlignmentAutomatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\nUIButtonConfigurationTitleAlignmentLeading\nAligns the title and subtitle on their leading edges.\nUIButtonConfigurationTitleAlignmentTrailing\nAligns the title and subtitle on their trailing edges."
  },
  {
    "title": "UIButtonConfigurationTitleAlignmentAutomatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationtitlealignment/uibuttonconfigurationtitlealignmentautomatic",
    "html": "See Also\nTitle alignments\nUIButtonConfigurationTitleAlignmentCenter\nAligns the title and subtitle on their horizontal centers.\nUIButtonConfigurationTitleAlignmentLeading\nAligns the title and subtitle on their leading edges.\nUIButtonConfigurationTitleAlignmentTrailing\nAligns the title and subtitle on their trailing edges."
  },
  {
    "title": "UIButtonConfigurationIndicatorPopup | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationindicator/uibuttonconfigurationindicatorpopup",
    "html": "See Also\nIndicator styles\nUIButtonConfigurationIndicatorAutomatic\nA constant that automatically determines an indicator style according to the button’s properties.\nUIButtonConfigurationIndicatorNone\nA constant that doesn’t show an indicator."
  },
  {
    "title": "UIContentUnavailableAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailablealignment",
    "html": "Topics\nConstants\nUIContentUnavailableAlignmentCenter\nViews with centered alignment.\nUIContentUnavailableAlignmentNatural\nThe default alignment for the current locale.\nSee Also\nUnavailable content configurations\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view.\nUIContentUnavailableConfigurationState\nAn object that encapsulates state for a content-unavailable view.\nUIContentUnavailableButtonProperties\nProperties configuring the appearance and behavior of a button in a content-unavailable view.\nUIContentUnavailableImageProperties\nProperties configuring the appearance of images in a content-unavailable view.\nUIContentUnavailableTextProperties\nProperties configuring the appearance of text in a content-unavailable view."
  },
  {
    "title": "UIButtonConfigurationTitleAlignmentTrailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationtitlealignment/uibuttonconfigurationtitlealignmenttrailing",
    "html": "See Also\nTitle alignments\nUIButtonConfigurationTitleAlignmentAutomatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\nUIButtonConfigurationTitleAlignmentCenter\nAligns the title and subtitle on their horizontal centers.\nUIButtonConfigurationTitleAlignmentLeading\nAligns the title and subtitle on their leading edges."
  },
  {
    "title": "UIButtonConfigurationMacIdiomStyleBorderlessTinted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationmacidiomstyle/uibuttonconfigurationmacidiomstyleborderlesstinted",
    "html": "See Also\nButton styles\nUIButtonConfigurationMacIdiomStyleAutomatic\nThe button has a style that matches other content in the button configuration.\nUIButtonConfigurationMacIdiomStyleBordered\nThe button has a bordered style.\nUIButtonConfigurationMacIdiomStyleBorderless\nThe button has a borderless style."
  },
  {
    "title": "UIButtonConfigurationMacIdiomStyleBorderless | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationmacidiomstyle/uibuttonconfigurationmacidiomstyleborderless",
    "html": "See Also\nButton styles\nUIButtonConfigurationMacIdiomStyleAutomatic\nThe button has a style that matches other content in the button configuration.\nUIButtonConfigurationMacIdiomStyleBordered\nThe button has a bordered style.\nUIButtonConfigurationMacIdiomStyleBorderlessTinted\nThe button has a tinted, borderless style."
  },
  {
    "title": "UIButtonRoleNormal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonrole/uibuttonrolenormal",
    "html": "See Also\nButton Roles\nUIButtonRolePrimary\nA button role that responds to a primary key press.\nUIButtonRoleCancel\nA button role that responds to a cancel action.\nUIButtonRoleDestructive\nA button role with a red background color."
  },
  {
    "title": "UIButtonRoleDestructive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonrole/uibuttonroledestructive",
    "html": "See Also\nButton Roles\nUIButtonRoleNormal\nA button role for a default button style.\nUIButtonRolePrimary\nA button role that responds to a primary key press.\nUIButtonRoleCancel\nA button role that responds to a cancel action."
  },
  {
    "title": "UIButtonConfigurationSizeSmall | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationsize/uibuttonconfigurationsizesmall",
    "html": "See Also\nButton sizes\nUIButtonConfigurationSizeLarge\nDisplays button elements at a large size.\nUIButtonConfigurationSizeMedium\nDisplays button elements at a standard size.\nUIButtonConfigurationSizeMini\nDisplays button elements at the smallest size."
  },
  {
    "title": "UIButtonRoleCancel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonrole/uibuttonrolecancel",
    "html": "See Also\nButton Roles\nUIButtonRoleNormal\nA button role for a default button style.\nUIButtonRolePrimary\nA button role that responds to a primary key press.\nUIButtonRoleDestructive\nA button role with a red background color."
  },
  {
    "title": "UIActionIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactionidentifier",
    "html": "Topics\nConstants\nUIActionPaste\nIdentifies the action that pastes the current contents of the pasteboard into your app’s interface.\nUIActionPasteAndGo\nIdentifies the action that pastes the current contents of the pasteboard into your app’s interface and navigates to the entity it references.\nUIActionPasteAndMatchStyle\nIdentifies the action that pastes the current contents of the pasteboard into your app’s interface using the text style of the target.\nUIActionPasteAndSearch\nIdentifies the action that pastes the current contents of the pasteboard into your app’s interface and performs a search.\nSee Also\nCreating an action\n+ actionWithTitle:image:identifier:handler:\nCreates an action with the specified title, image, identifier, and handler.\n+ actionWithHandler:\nCreates an action with the specified handler.\n+ captureTextFromCameraActionForResponder:identifier:\nCreates an action for capturing text using the device’s camera.\nUIActionHandler\nA type that defines the block for an action handler."
  },
  {
    "title": "UIButtonConfigurationSizeMini | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationsize/uibuttonconfigurationsizemini",
    "html": "See Also\nButton sizes\nUIButtonConfigurationSizeLarge\nDisplays button elements at a large size.\nUIButtonConfigurationSizeMedium\nDisplays button elements at a standard size.\nUIButtonConfigurationSizeSmall\nDisplays button elements at a small size."
  },
  {
    "title": "UIApplicationProtectedDataDidBecomeAvailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationprotecteddatadidbecomeavailable",
    "html": "Discussion\n\nThis notification does not contain a userInfo dictionary.\n\nSee Also\nAccessing protected content\nprotectedDataAvailable\nA Boolean value that indicates whether content protection is active.\nUIApplicationProtectedDataWillBecomeUnavailable\nA notification that posts shortly before protected files are locked down and become inaccessible."
  },
  {
    "title": "UIButtonConfigurationSizeLarge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationsize/uibuttonconfigurationsizelarge",
    "html": "See Also\nButton sizes\nUIButtonConfigurationSizeMedium\nDisplays button elements at a standard size.\nUIButtonConfigurationSizeSmall\nDisplays button elements at a small size.\nUIButtonConfigurationSizeMini\nDisplays button elements at the smallest size."
  },
  {
    "title": "UIApplicationProtectedDataWillBecomeUnavailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationprotecteddatawillbecomeunavailable",
    "html": "Discussion\n\nUpon receiving this notification, clients should release any references to protected files. This notification does not contain a userInfo dictionary.\n\nSee Also\nAccessing protected content\nprotectedDataAvailable\nA Boolean value that indicates whether content protection is active.\nUIApplicationProtectedDataDidBecomeAvailable\nA notification that posts when the protected files become available for your code to access."
  },
  {
    "title": "protectedDataAvailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1622925-protecteddataavailable",
    "html": "Discussion\n\nThe value of this property is NO if data protection is enabled and the device is currently locked. The value of this property is set to YES if the device is unlocked or if content protection is not enabled.\n\nWhen the value of this property is NO, files that were assigned the NSFileProtectionComplete or NSFileProtectionCompleteUnlessOpen protection key cannot be read or written by your app. The user must unlock the device before your app can access them.\n\nSee Also\nAccessing protected content\nUIApplicationProtectedDataDidBecomeAvailable\nA notification that posts when the protected files become available for your code to access.\nUIApplicationProtectedDataWillBecomeUnavailable\nA notification that posts shortly before protected files are locked down and become inaccessible."
  },
  {
    "title": "UISceneErrorCodeGeometryRequestDenied | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneerrorcode/uisceneerrorcodegeometryrequestdenied",
    "html": "See Also\nError codes\nUISceneErrorCodeMultipleScenesNotSupported\nAn error that indicates multiple scenes aren’t supported.\nUISceneErrorCodeRequestDenied\nAn error that indicates the request was denied.\nUISceneErrorCodeGeometryRequestUnsupported\nAn error that indicates the geometry request is invalid or unsupported."
  },
  {
    "title": "instantiateViewControllerWithIdentifier:creator: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistoryboard/3173166-instantiateviewcontrollerwithide",
    "html": "Parameters\nidentifier\n\nA string that uniquely identifies the view controller in the storyboard file. At design time, put this same string in the Storyboard ID attribute of your view controller in Interface Builder. This identifier is not a property of the view controller object itself. The storyboard uses it to locate the appropriate data for your view controller.\n\nIf the specified identifier does not exist in the storyboard file, this method raises an exception.\n\nblock\n\nA block containing your custom creation code for the view controller. Use this block to create the view controller, initialize it with the provided coder object and any custom information you require, and return the result. This block returns a new view controller object and takes the following parameter:\n\ncoder\n\nThe coder object containing the storyboard data to use when configuring the view controller.\n\nIf you return nil from your block, this method creates the view controller using the default initWithCoder: method.\n\nReturn Value\n\nThe view controller corresponding to the specified identifier string. If no view controller has the given identifier, this method throws an exception.\n\nDiscussion\n\nUse this method to create a view controller object to present programmatically. Each time you call this method, it creates a new instance of the view controller using the block you provide.\n\nIn your block, create the view controller using your custom initialization method and return it. Your custom initialization method must accept an NSCoder parameter and must call the inherited initWithCoder: method at some point during its execution. Not doing so is a programmer error. After initializing the storyboard state, initialize your view controller's custom properties.\n\nSee Also\nInstantiating Storyboard View Controllers\n- instantiateViewControllerWithIdentifier:\nCreates the view controller with the specified identifier and initializes it with the data from the storyboard.\nUIStoryboardViewControllerCreator\nA handler block that contains the custom initialization code for a view controller you instantiate from a storyboard."
  },
  {
    "title": "instantiateInitialViewControllerWithCreator: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistoryboard/3173165-instantiateinitialviewcontroller",
    "html": "Parameters\ncreator\n\nA block containing your custom creation code for the view controller. Use this block to create the view controller, initialize it with the provided coder object and any custom information you require, and return the result. This block returns a new view controller object and takes the following parameter:\n\ncoder\n\nThe coder object containing the storyboard data to use when configuring the view controller.\n\nIf you return nil from your block, this method creates the view controller using the default initWithCoder: method.\n\nReturn Value\n\nThe initial view controller in the storyboard.\n\nDiscussion\n\nEvery storyboard file has an initial view controller that represents the default view controller to create. Typically, you use the initial view controller as the root view controller for a window. However, you can also instantiate the initial view controller when transitioning to content in a new storyboard file.\n\nThis method creates a new instance of the initial view controller using the custom block you provide. In your block, create the view controller using your custom initialization method and return it. Your custom initialization method must accept an NSCoder parameter and must call the inherited initWithCoder: method at some point during its execution. Not doing so is a programmer error.\n\nSee Also\nLoading the Initial View Controller\n- instantiateInitialViewController\nCreates the initial view controller and initializes it with the data from the storyboard."
  },
  {
    "title": "UICollectionLayoutListAppearanceSidebar | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance/uicollectionlayoutlistappearancesidebar",
    "html": "See Also\nList Appearances\nUICollectionLayoutListAppearancePlain\nThe plain list appearance.\nUICollectionLayoutListAppearanceGrouped\nThe grouped list appearance.\nUICollectionLayoutListAppearanceInsetGrouped\nThe inset grouped list appearance.\nUICollectionLayoutListAppearanceSidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "UICollectionLayoutListAppearanceInsetGrouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistappearance/uicollectionlayoutlistappearanceinsetgrouped",
    "html": "See Also\nList Appearances\nUICollectionLayoutListAppearancePlain\nThe plain list appearance.\nUICollectionLayoutListAppearanceGrouped\nThe grouped list appearance.\nUICollectionLayoutListAppearanceSidebar\nThe sidebar list appearance.\nUICollectionLayoutListAppearanceSidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "UIListContentTextTransform | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttexttransform",
    "html": "Topics\nText transforms\nUIListContentTextTransformNone\nThe text doesn’t have a transform.\nUIListContentTextTransformCapitalized\nDisplays the text with the first character capitalized.\nUIListContentTextTransformLowercase\nDisplays the text in all lowercase characters.\nUIListContentTextTransformUppercase\nDisplays the text in all uppercase characters.\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UIListContentTextAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextalignment",
    "html": "Topics\nText alignment\nUIListContentTextAlignmentCenter\nThe text has centered alignment.\nUIListContentTextAlignmentJustified\nThe text has justified alignment.\nUIListContentTextAlignmentNatural\nThe text uses the default alignment that the system associates with the current localization of the app.\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "adjustsFontForContentSizeCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3600567-adjustsfontforcontentsizecategor",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "showsExpansionTextWhenTruncated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3967520-showsexpansiontextwhentruncated",
    "html": "Discussion\n\nThe default value is YES.\n\nSee Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text."
  },
  {
    "title": "transform | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties/3650227-transform",
    "html": "See Also\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "resolvedTintColorForTintColor: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3606376-resolvedtintcolorfortintcolor",
    "html": "Discussion\n\nThe resulting color depends on tintColor and tintColorTransformer.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600560-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the image view uses its inherited tint color.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "tintColorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3606377-tintcolortransformer",
    "html": "Discussion\n\nIf the value is nil, the configuration uses tintColor without any transformations.\n\nSee Also\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "preferredSymbolConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties/3600558-preferredsymbolconfiguration",
    "html": "See Also\nConfiguring image properties\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode/3600921-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing footer modes\nstatic func == (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are equal.\nstatic func != (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the footer mode by feeding them into the hasher."
  },
  {
    "title": "registerClass:forHeaderFooterViewReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614964-registerclass",
    "html": "Parameters\naClass\n\nThe class of the header or footer view that you want to register. You must specify either UITableViewHeaderFooterView or a subclass of it.\n\nidentifier\n\nThe reuse identifier for the header or footer view. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nBefore dequeueing any header or footer views, call this method or the registerNib:forHeaderFooterViewReuseIdentifier: method to tell the table view how to create new instances of your views. If a view of the specified type isn’t currently in a reuse queue, the table view uses the provided information to create a one automatically.\n\nIf you previously registered a class or nib file with the same reuse identifier, the class you specify in the aClass parameter replaces the old entry. You may specify nil for aClass if you want to unregister the class from the specified reuse identifier.\n\nSee Also\nRecycling section headers and footers\n- registerNib:forHeaderFooterViewReuseIdentifier:\nRegisters a nib object that contains a header or footer with the table view under a specified identifier.\n- dequeueReusableHeaderFooterViewWithIdentifier:\nReturns a reusable header or footer view after locating it by its identifier."
  },
  {
    "title": "removeAllSymbolEffects | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210359-removeallsymboleffects",
    "html": "See Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "NSWritingDirectionAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nswritingdirectionattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSArray object containing NSNumber objects representing the nested levels of writing direction overrides, in order from outermost to innermost.\n\nThis attribute provides a means to override the default bidirectional text algorithm, equivalent to using the Unicode bidi control characters LRE, RLE, LRO, or RLO paired with PDF, but as a higher-level attribute. (See Unicode Standard Annex #9 for information about the Unicode bidi formatting codes.) The NSWritingDirectionAttributeName constant is a character-level attribute that provides a higher-level alternative to the inclusion of explicit bidirectional control characters in text. It is the NSAttributedString equivalent of the HTML markup using bdo element with the dir attribute.\n\nThe values of the NSNumber objects should be 0, 1, 2, or 3, for LRE, RLE, LRO, or RLO respectively, and combinations of NSWritingDirectionLeftToRight and NSWritingDirectionRightToLeft with NSTextWritingDirectionEmbedding or NSTextWritingDirectionOverride, as shown in Table 1.\n\nTable 1 Values of NSWritingDirectionAttributeName and equivalent markup\n\nArray NSNumber Values\n\n\t\n\nUnicode Control Characters\n\n\t\n\nWriting Direction Constants\n\n\n\n\n0\n\n\t\n\nLRE\n\n\t\n\nNSWritingDirectionLeftToRight | NSTextWritingDirectionEmbedding\n\n\n\n\n1\n\n\t\n\nRLE\n\n\t\n\nNSWritingDirectionRightToLeft | NSTextWritingDirectionEmbedding\n\n\n\n\n2\n\n\t\n\nLRO\n\n\t\n\nNSWritingDirectionLeftToRight | NSTextWritingDirectionOverride\n\n\n\n\n3\n\n\t\n\nRLO\n\n\t\n\nNSWritingDirectionRightToLeft | NSTextWritingDirectionOverride\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated"
  },
  {
    "title": "NSVerticalGlyphFormAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsverticalglyphformattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing an integer. The value 0 indicates horizontal text. The value 1 indicates vertical text. In iOS, horizontal text is always used and specifying a different value is undefined.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "UIButtonConfigurationMacIdiomStyleAutomatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationmacidiomstyle/uibuttonconfigurationmacidiomstyleautomatic",
    "html": "See Also\nButton styles\nUIButtonConfigurationMacIdiomStyleBordered\nThe button has a bordered style.\nUIButtonConfigurationMacIdiomStyleBorderless\nThe button has a borderless style.\nUIButtonConfigurationMacIdiomStyleBorderlessTinted\nThe button has a tinted, borderless style."
  },
  {
    "title": "NSTextEffectAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstexteffectattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSString object. Use this attribute to specify a text effect, such as NSTextEffectLetterpressStyle. The default value of this property is nil, indicating no text effect.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSStrokeWidthAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsstrokewidthattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing a floating-point value. This value represents the amount to change the stroke width and is specified as a percentage of the font point size. Specify 0 (the default) for no additional changes. Specify positive values to change the stroke width alone. Specify negative values to stroke and fill the text. For example, a typical value for outlined text would be 3.0.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSParagraphStyleAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsparagraphstyleattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSParagraphStyle object. Use this attribute to apply multiple attributes to a range of text. If you do not specify this attribute, the string uses the default paragraph attributes, as returned by the defaultParagraphStyle method of NSParagraphStyle.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSStrokeColorAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsstrokecolorattributename",
    "html": "Discussion\n\nThe value of this parameter is a UIColor object. If it is not defined (which is the case by default), it is assumed to be the same as the value of NSForegroundColorAttributeName; otherwise, it describes the outline color. For more details, see Drawing attributed strings that are both filled and stroked.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSStrikethroughStyleAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsstrikethroughstyleattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing an integer. This value indicates whether the text has a line through it and corresponds to one of the constants described in NSUnderlineStyle. The default value for this attribute is NSUnderlineStyleNone.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "registerObjectForStateRestoration:restorationIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623027-registerobjectforstaterestoratio",
    "html": "Parameters\nobject\n\nThe object to be registered with the restoration archive. The object must adopt the UIStateRestoring protocol. This parameter must not be nil.\n\nrestorationIdentifier\n\nThe restoration identifier for the object. UIKit uses this parameter to distinguish the object from other objects in the archive. This parameter must not be nil.\n\nDiscussion\n\nYou use this method to register objects that you want to save as part of the overall state restoration process. Registering the object makes it available for inclusion in the restoration archive but does not automatically include it. To include the object, refer to it from one of your other interface objects. For example, you might write out a reference to the object from the encodeRestorableStateWithCoder: method of one of your view controllers.\n\nSee Also\nManaging state restoration\n- extendStateRestoration\nTells the app that your code is restoring state asynchronously.\n- completeStateRestoration\nTells the app that your code has finished any asynchronous state restoration.\n- ignoreSnapshotOnNextApplicationLaunch\nPrevents the app from using the recent snapshot image during the next launch cycle."
  },
  {
    "title": "defaultParagraphStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsparagraphstyle/1532681-defaultparagraphstyle",
    "html": "Discussion\n\nThe default paragraph style has the following default values:\n\nSubattribute\n\n\t\n\nDefault\n\n\n\n\nAlignment\n\n\t\n\nNSNaturalTextAlignment\n\n\n\n\nTab stops\n\n\t\n\n12 left-aligned tabs, spaced by 28.0 points\n\n\n\n\nLine break mode\n\n\t\n\nNSLineBreakByWordWrapping\n\n\n\n\nAll others\n\n\t\n\n0.0\n\nSee individual method descriptions for explanations of each subattribute.\n\nSee Also\nRelated Documentation\nRuler and Paragraph Style Programming Topics"
  },
  {
    "title": "NSTextAlignmentNatural | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextalignment/nstextalignmentnatural",
    "html": "Discussion\n\nThe default alignment for left-to-right scripts is NSTextAlignmentLeft, and the default alignment for right-to-left scripts is NSTextAlignmentRight."
  },
  {
    "title": "NSExpansionAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsexpansionattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing a floating point value indicating the log of the expansion factor to be applied to glyphs. The default value is 0, indicating no expansion.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "openURL:options:completionHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1648685-openurl",
    "html": "Parameters\nurl\n\nA URL (Universal Resource Locator). The resource identified by this URL may be local to the current app or it may be one that must be provided by a different app. UIKit supports many common schemes, including the http, https, tel, facetime, and mailto schemes. You can also employ custom URL schemes associated with apps installed on the device.\n\noptions\n\nA dictionary of options to use when opening the URL. For a list of possible keys to include in this dictionary, see UIApplicationOpenExternalURLOptionsKey.\n\ncompletionHandler\n\nThe block to execute with the results. Provide a value for this parameter if you want to be informed of the success or failure of opening the URL. This block is executed asynchronously on your app's main thread. The block has no return value and takes the following parameter:\n\nsuccess\n\nA Boolean value that indicates whether the URL was opened successfully.\n\nDiscussion\n\nUse this method to open the specified resource. If the specified URL scheme is handled by another app, iOS launches that app and passes the URL to it. (Launching the app brings the other app to the foreground.) If no app is capable of handling the specified scheme, the completion handler is called with the success parameter set to NO.\n\nTo determine whether an app is installed that is capable of handling the URL, call the canOpenURL: method before calling this one. Be sure to read the description of that method for an important note about registering the schemes you want to employ.\n\nSee Also\nOpening a URL resource\n- canOpenURL:\nReturns a Boolean value that indicates whether an app is available to handle a URL scheme.\nUIApplicationOpenExternalURLOptionsKey\nOptions for opening a URL."
  },
  {
    "title": "openSettingsURLString | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623042-opensettingsurlstring",
    "html": "Discussion\n\nCreate a URL from this value and pass it to the open(_:options:completionHandler:) method to launch the Settings app and display your app’s custom settings, if it has any.\n\n// Create the URL that deep links to your app's custom settings.\nif let url = URL(string: UIApplication.openSettingsURLString) {\n    // Ask the system to open that URL.\n    await UIApplication.shared.open(url)\n}\n\n\nFor design guidance, see Human Interface Guidelines.\n\nSee Also\nDeep linking to custom settings\nstatic let openNotificationSettingsURLString: String\nThe URL string you use to deep link to your app’s notification settings in the Settings app.\nlet UIApplicationOpenNotificationSettingsURLString: String\nA constant that provides the URL string you use to deep link to your app’s notification settings in the Settings app."
  },
  {
    "title": "NSBackgroundColorAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsbackgroundcolorattributename",
    "html": "Discussion\n\nThe value of this attribute is a UIColor object. Use this attribute to specify the color of the background area behind the text. If you do not specify this attribute, no background color is drawn.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "addSymbolEffect:options:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210357-addsymboleffect",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to add.\n\noptions\n\nThe options for the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the addition of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "addSymbolEffect:options: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210356-addsymboleffect",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to add.\n\noptions\n\nThe options for the symbol effect.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "setSymbolImage:withContentTransition: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210366-setsymbolimage",
    "html": "Parameters\nsymbolImage\n\nThe symbol image to set.\n\ntransition\n\nThe content transition to use when setting the symbol image.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "setSymbolImage:withContentTransition:options:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210368-setsymbolimage",
    "html": "Parameters\nsymbolImage\n\nThe symbol image to set.\n\ntransition\n\nThe content transition to use when setting the symbol image.\n\noptions\n\nThe options to use when setting the symbol image.\n\ncompletion\n\nA completion handler the system calls after setting the symbol image.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "setSymbolImage:withContentTransition:options: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210367-setsymbolimage",
    "html": "Parameters\nsymbolImage\n\nThe symbol image to set.\n\ntransition\n\nThe content transition to use when setting the symbol image.\n\noptions\n\nThe options to use when setting the symbol image.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "removeSymbolEffectOfType:options: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210363-removesymboleffectoftype",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to match for removal.\n\noptions\n\nThe options to use when removing the symbol effect.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "UIContentUnavailableTextProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailabletextproperties",
    "html": "Topics\nInstance Properties\nadjustsFontSizeToFitWidth\nA Boolean value indicating whether the view modifies the font size of the text to fit the available width.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the view tightens text before truncating.\ncolor\nThe color of the text.\nfont\nThe font of the text.\nlineBreakMode\nThe technique for wrapping and truncating the text.\nminimumScaleFactor\nThe minimum scale factor for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nUnavailable content configurations\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view.\nUIContentUnavailableConfigurationState\nAn object that encapsulates state for a content-unavailable view.\nUIContentUnavailableButtonProperties\nProperties configuring the appearance and behavior of a button in a content-unavailable view.\nUIContentUnavailableImageProperties\nProperties configuring the appearance of images in a content-unavailable view.\nUIContentUnavailableAlignment\nDefines the alignment of views in a content-unavailable view."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/reorderoptions/3600863-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar showsVerticalSeparator: Bool\nA Boolean value that determines whether a vertical separator displays before the accessory when it appears after another accessory."
  },
  {
    "title": "UIButtonConfigurationCornerStyleDynamic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle/uibuttonconfigurationcornerstyledynamic",
    "html": "See Also\nCorner styles\nUIButtonConfigurationCornerStyleFixed\nA style that uses the background corner radius without modification.\nUIButtonConfigurationCornerStyleCapsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\nUIButtonConfigurationCornerStyleLarge\nA style that ignores the background corner radius and uses a large system-defined corner radius.\nUIButtonConfigurationCornerStyleMedium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\nUIButtonConfigurationCornerStyleSmall\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "UIButtonConfigurationMacIdiomStyleBordered | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationmacidiomstyle/uibuttonconfigurationmacidiomstylebordered",
    "html": "See Also\nButton styles\nUIButtonConfigurationMacIdiomStyleAutomatic\nThe button has a style that matches other content in the button configuration.\nUIButtonConfigurationMacIdiomStyleBorderless\nThe button has a borderless style.\nUIButtonConfigurationMacIdiomStyleBorderlessTinted\nThe button has a tinted, borderless style."
  },
  {
    "title": "UIButtonRolePrimary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonrole/uibuttonroleprimary",
    "html": "See Also\nButton Roles\nUIButtonRoleNormal\nA button role for a default button style.\nUIButtonRoleCancel\nA button role that responds to a cancel action.\nUIButtonRoleDestructive\nA button role with a red background color."
  },
  {
    "title": "invalid | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibackgroundtaskidentifier/1622983-invalid",
    "html": "Discussion\n\nUse this constant to initialize variables or to check for errors."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727761-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\ncomparing list separator configurations\nstatic func == (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are equal.\nstatic func != (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinsintegertraitdefinition/4134831-defaultvalue",
    "html": "Required"
  },
  {
    "title": "bottomSeparatorInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727755-bottomseparatorinsets",
    "html": "Discussion\n\nThe default value is automaticInsets.\n\nSee Also\nConfiguring separator insets\nvar topSeparatorInsets: NSDirectionalEdgeInsets\nInsets to apply to the top separator of the item the configuration applies to.\nstatic let automaticInsets: NSDirectionalEdgeInsets\nA constant that specifies a placeholder size for separator insets."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/multiselectoptions/3600840-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar backgroundColor: UIColor?\nThe background color to apply to the accessory."
  },
  {
    "title": "removeAllSymbolEffectsWithOptions:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210361-removeallsymboleffectswithoption",
    "html": "Parameters\noptions\n\nThe options to use when removing the symbol effects.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effects.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/detailoptions/3917547-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "UICellAccessory.AccessoryType.popUpMenu | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/popupmenu",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "removeAllSymbolEffectsWithOptions: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210360-removeallsymboleffectswithoption",
    "html": "Parameters\noptions\n\nThe options to use when removing the symbol effects.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "removeSymbolEffectOfType:options:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210364-removesymboleffectoftype",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to match for removal.\n\noptions\n\nThe options to use when removing the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "removeSymbolEffectOfType:options:animated:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210365-removesymboleffectoftype",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to match for removal.\n\noptions\n\nThe options to use when removing the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effect.\n\ncompletionHandler\n\nA completion handler the system calls after the removal is complete.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "registerClass:forCellReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614888-registerclass",
    "html": "Parameters\ncellClass\n\nThe class of a cell that you want to use in the table (must be a UITableViewCell subclass).\n\nidentifier\n\nThe reuse identifier for the cell. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nPrior to dequeueing any cells, call this method or the registerNib:forCellReuseIdentifier: method to tell the table view how to create new cells. If a cell of the specified type isn’t currently in a reuse queue, the table view uses the provided information to create a new cell object automatically.\n\nIf you previously registered a class or nib file with the same reuse identifier, the class you specify in the cellClass parameter replaces the old entry. You may specify nil for cellClass if you want to unregister the class from the specified reuse identifier.\n\nSee Also\nRecycling table view cells\n- registerNib:forCellReuseIdentifier:\nRegisters a nib object that contains a cell with the table view under a specified identifier.\n- dequeueReusableCellWithIdentifier:forIndexPath:\nReturns a reusable table-view cell object for the specified reuse identifier and adds it to the table.\n- dequeueReusableCellWithIdentifier:\nReturns a reusable table-view cell object after locating it by its identifier."
  },
  {
    "title": "registerNib:forHeaderFooterViewReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614921-registernib",
    "html": "Parameters\nnib\n\nA nib object that specifies the nib file to use to create the header or footer view. This parameter can’t be nil.\n\nidentifier\n\nThe reuse identifier for the header or footer view. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nBefore dequeueing any header or footer views, call this method or the registerClass:forHeaderFooterViewReuseIdentifier: method to tell the table view how to create new instances of your views. If a view of the specified type isn’t currently in a reuse queue, the table view uses the provided information to create a new one automatically.\n\nIf you previously registered a class or nib file with the same reuse identifier, the nib you specify in the nib parameter replaces the old entry. You may specify nil for nib if you want to unregister the nib from the specified reuse identifier.\n\nSee Also\nRecycling section headers and footers\n- registerClass:forHeaderFooterViewReuseIdentifier:\nRegisters a class to use in creating new table header or footer views.\n- dequeueReusableHeaderFooterViewWithIdentifier:\nReturns a reusable header or footer view after locating it by its identifier."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode/3600918",
    "html": "See Also\nComparing footer modes\nstatic func == (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the footer mode by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UITableView.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/style",
    "html": "Overview\n\nYou set the table style when you initialize the table view (see init(frame:style:)). You can’t modify the style thereafter.\n\nTopics\nStyles\ncase plain\nA plain table view.\ncase grouped\nA table view where sections have distinct groups of rows.\ncase insetGrouped\nA table view where the grouped sections are inset with rounded corners.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the table’s appearance\nvar style: UITableView.Style\nThe style of the table view.\nvar tableHeaderView: UIView?\nThe view that displays above the table’s content.\nvar tableFooterView: UIView?\nThe view that displays below the table’s content.\nvar backgroundView: UIView?\nThe background view of the table view."
  },
  {
    "title": "UITableView.SeparatorInsetReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/separatorinsetreference",
    "html": "Topics\nConstants\ncase fromCellEdges\nAn inset value that’s relative to the edge of the cell.\ncase fromAutomaticInsets\nAn inset value that indicates the starting position is based on the default separator insets.\nRelationships\nConforms To\nSendable\nSee Also\nCustomizing the separator appearance\nvar separatorStyle: UITableViewCell.SeparatorStyle\nThe style for table cells to use as separators.\nenum UITableViewCell.SeparatorStyle\nThe style for cells to use as separators.\nvar separatorColor: UIColor?\nThe color of separator rows in the table view.\nvar separatorEffect: UIVisualEffect?\nThe effect to apply to table separators.\nvar separatorInset: UIEdgeInsets\nThe default inset of cell separators.\nvar separatorInsetReference: UITableView.SeparatorInsetReference\nAn indicator of how to interpret the separator inset value."
  },
  {
    "title": "numberOfRowsInSection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614952-numberofrowsinsection",
    "html": "Parameters\nsection\n\nAn index number that identifies a section of the table. Table views in a plain style have a section index of zero.\n\nReturn Value\n\nThe number of rows in the section.\n\nDiscussion\n\nUITableView gets the value returned by this method from its data source and caches it.\n\nSee Also\nGetting the number of rows and sections\nnumberOfSections\nThe number of sections in the table view."
  },
  {
    "title": "UICollectionLayoutListConfiguration.FooterMode.supplementary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode/supplementary",
    "html": "Discussion\n\nChoose this footer mode to use supplementary views with elementKindSectionFooter as the section footer.\n\nBy default, lists that use the UICollectionLayoutListConfiguration.Appearance.plain and UICollectionLayoutListConfiguration.Appearance.sidebarPlain list appearances use pinned footers. You must use this footer mode if you want to opt into this default pinning behavior.\n\nSee Also\nFooter modes\ncase none\nNo footers are shown."
  },
  {
    "title": "dequeueReusableHeaderFooterViewWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614975-dequeuereusableheaderfootervieww",
    "html": "Parameters\nidentifier\n\nA string identifying the header or footer view to be reused. This parameter must not be nil.\n\nReturn Value\n\nA UITableViewHeaderFooterView object with the associated identifier or nil if no such object exists in the reusable view queue.\n\nDiscussion\n\nFor performance reasons, a table view’s delegate should generally reuse UITableViewHeaderFooterView objects when it’s asked to provide them. A table view maintains a queue or list of UITableViewHeaderFooterView objects that the table view’s delegate has marked for reuse. It marks a view for reuse by assigning it a reuse identifier when it creates it (in the initWithReuseIdentifier: method of UITableViewHeaderFooterView).\n\nYou can use this method to access specific template header and footer views that you previously created. You can access a view’s reuse identifier through its reuseIdentifier property.\n\nSee Also\nRecycling section headers and footers\n- registerNib:forHeaderFooterViewReuseIdentifier:\nRegisters a nib object that contains a header or footer with the table view under a specified identifier.\n- registerClass:forHeaderFooterViewReuseIdentifier:\nRegisters a class to use in creating new table header or footer views."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode/3600920-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing footer modes\nstatic func == (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are equal.\nstatic func != (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode/3600919",
    "html": "See Also\nComparing footer modes\nstatic func != (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the footer mode by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "italicSystemFontOfSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619043-italicsystemfontofsize",
    "html": "Parameters\nfontSize\n\nThe size (in points) for the font. This value must be greater than 0.0.\n\nReturn Value\n\nA font object of the specified size.\n\nDiscussion\n\nInstead of using this method to get a font, it’s often more appropriate to use preferredFontForTextStyle: because that method respects the user’s selected content size category.\n\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "UICellAccessory.AccessoryType.detail | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/detail",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UICellAccessory.Placement.leading(displayed:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/placement/leading_displayed_at",
    "html": "See Also\nSpecifying accessory placement\ncase trailing(displayed: UICellAccessory.DisplayedState, at: UICellAccessory.Placement.Position)\nThe accessory appears on the trailing edge of the cell."
  },
  {
    "title": "topSeparatorVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727766-topseparatorvisibility",
    "html": "See Also\nControlling separator visibility\nvar bottomSeparatorVisibility: UIListSeparatorConfiguration.Visibility\nThe visibility of the bottom separator for the item the configuration applies to.\nenum UIListSeparatorConfiguration.Visibility\nConstants that define the visibility of list separators."
  },
  {
    "title": "UISceneErrorCodeGeometryRequestUnsupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneerrorcode/uisceneerrorcodegeometryrequestunsupported",
    "html": "See Also\nError codes\nUISceneErrorCodeMultipleScenesNotSupported\nAn error that indicates multiple scenes aren’t supported.\nUISceneErrorCodeRequestDenied\nAn error that indicates the request was denied.\nUISceneErrorCodeGeometryRequestDenied\nAn error that indicates the geometry request is valid but the system denied the request."
  },
  {
    "title": "UISceneErrorCodeMultipleScenesNotSupported | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneerrorcode/uisceneerrorcodemultiplescenesnotsupported",
    "html": "Discussion\n\nThis error code indicates that the app doesn’t support multiple scenes, or the system was unable to display multiple scenes for your app.\n\nSee Also\nError codes\nUISceneErrorCodeRequestDenied\nAn error that indicates the request was denied.\nUISceneErrorCodeGeometryRequestUnsupported\nAn error that indicates the geometry request is invalid or unsupported.\nUISceneErrorCodeGeometryRequestDenied\nAn error that indicates the geometry request is valid but the system denied the request."
  },
  {
    "title": "eventAttribution | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneopenexternalurloptions/3727336-eventattribution",
    "html": "Discussion\n\nFor more information about preparing event attribution data, see UIEventAttribution."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiobjecttraitdefinition/4134834-defaultvalue",
    "html": "Required"
  },
  {
    "title": "NSUnderlineStyleAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsunderlinestyleattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing an integer. This value indicates whether the text is underlined and corresponds to one of the constants described in NSUnderlineStyle. The default value for this attribute is NSUnderlineStyleNone.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSLineBreakByTruncatingHead | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakmode/nslinebreakbytruncatinghead",
    "html": "Discussion\n\nAlthough this mode works for multiline text, it’s more often used for single line text."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicgfloattraitdefinition/4134828-defaultvalue",
    "html": "Required"
  },
  {
    "title": "idleTimerDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623070-idletimerdisabled",
    "html": "Discussion\n\nThe default value of this property is NO. When most apps have no touches as user input for a short period, the system puts the device into a “sleep” state where the screen dims. This is done for the purposes of conserving power. However, apps that don’t have user input except for the accelerometer — games, for instance — can, by setting this property to YES, disable the “idle timer” to avert system sleep.\n\nImportant\n\nYou should set this property only if necessary and should be sure to reset it to NO when the need no longer exists. Most apps should let the system turn off the screen when the idle timer elapses. This includes audio apps. With appropriate use of Audio Session Services, playback and recording proceed uninterrupted when the screen turns off. The only apps that should disable the idle timer are mapping apps, games, or programs where the app needs to continue displaying content when user interaction is minimal."
  },
  {
    "title": "NSAttachmentAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsattachmentattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSTextAttachment object. The default value of this property is nil, indicating no attachment.\n\nSee Also\nKeys\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "UIApplicationOpenExternalURLOptionsKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationopenexternalurloptionskey",
    "html": "Topics\nURL options\nUIApplicationOpenURLOptionUniversalLinksOnly\nURLs must be universal links and have an app configured to open them.\nMeasuring ad taps\nUIApplicationOpenExternalURLOptionsEventAttributionKey\nAn object you use to send tap event attribution data to the browser for Private Click Measurement.\nSee Also\nOpening a URL resource\n- openURL:options:completionHandler:\nAttempts to asynchronously open the resource at the specified URL.\n- canOpenURL:\nReturns a Boolean value that indicates whether an app is available to handle a URL scheme."
  },
  {
    "title": "backgroundFetchIntervalNever | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623023-backgroundfetchintervalnever",
    "html": "See Also\nFetching content in the background\nclass let backgroundFetchIntervalMinimum: TimeInterval\nThe smallest fetch interval supported by the system."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration/3667990-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nlet customView: UIView\nThe custom view to display for the accessory.\nlet placement: UICellAccessory.Placement\nThe placement for the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar maintainsFixedSize: Bool\nA Boolean value that determines whether to preserve the frame size of the custom view."
  },
  {
    "title": "removeSymbolEffectOfType: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210362-removesymboleffectoftype",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to match for removal.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:\nAdds a symbol effect to the image view with default options and animation.\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "maintainsFixedSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration/3600802-maintainsfixedsize",
    "html": "Discussion\n\nWhen the value of this property is true, the system preserves the current frame size of the view. When the value of this property is false, the system sizes the view during layout of the accessories.\n\nThe default value of this property is false.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nlet customView: UIView\nThe custom view to display for the accessory.\nlet placement: UICellAccessory.Placement\nThe placement for the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "bottomSeparatorVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727756-bottomseparatorvisibility",
    "html": "See Also\nControlling separator visibility\nvar topSeparatorVisibility: UIListSeparatorConfiguration.Visibility\nThe visibility of the top separator for the item the configuration applies to.\nenum UIListSeparatorConfiguration.Visibility\nConstants that define the visibility of list separators."
  },
  {
    "title": "UIListSeparatorConfiguration.Visibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/visibility",
    "html": "Topics\nConstants\ncase automatic\nThe collection view list section automatically determines the visibility of the separator.\ncase hidden\nThe list separator is hidden.\ncase visible\nThe list separator is visible.\nComparing separator visibility\nstatic func == (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are equal.\nstatic func != (UIListSeparatorConfiguration.Visibility, UIListSeparatorConfiguration.Visibility) -> Bool\nAn operator for checking whether two list separator visibility enumerations are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator visibility enumeration by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nRelationships\nConforms To\nHashable\nSee Also\nControlling separator visibility\nvar topSeparatorVisibility: UIListSeparatorConfiguration.Visibility\nThe visibility of the top separator for the item the configuration applies to.\nvar bottomSeparatorVisibility: UIListSeparatorConfiguration.Visibility\nThe visibility of the bottom separator for the item the configuration applies to."
  },
  {
    "title": "automaticInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3736162-automaticinsets",
    "html": "Discussion\n\nUse the values from the edges in this constant to indicate that an edge’s inset needs replacement with an appropriate value according to the context.\n\nSee Also\nConfiguring separator insets\nvar topSeparatorInsets: NSDirectionalEdgeInsets\nInsets to apply to the top separator of the item the configuration applies to.\nvar bottomSeparatorInsets: NSDirectionalEdgeInsets\nInsets to apply to the bottom separator of the item the configuration applies to."
  },
  {
    "title": "topSeparatorInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727765-topseparatorinsets",
    "html": "Discussion\n\nThe default value is automaticInsets.\n\nSee Also\nConfiguring separator insets\nvar bottomSeparatorInsets: NSDirectionalEdgeInsets\nInsets to apply to the bottom separator of the item the configuration applies to.\nstatic let automaticInsets: NSDirectionalEdgeInsets\nA constant that specifies a placeholder size for separator insets."
  },
  {
    "title": "multipleSelectionColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727764-multipleselectioncolor",
    "html": "See Also\nConfiguring separator appearance\nvar color: UIColor\nThe color to use for the separators of the item the configuration applies to.\nvar visualEffect: UIVisualEffect?\nThe visual effect to use for the separators of the item the configuration applies to."
  },
  {
    "title": "color | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727757-color",
    "html": "See Also\nConfiguring separator appearance\nvar multipleSelectionColor: UIColor\nThe color to use for the separators of the item the configuration applies to when the item is in a multiple-selection group.\nvar visualEffect: UIVisualEffect?\nThe visual effect to use for the separators of the item the configuration applies to."
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727760-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible\nSee Also\nDescribing list separator configuration\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging.\nvar customMirror: Mirror\nThe custom mirror for this instance."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727747",
    "html": "See Also\ncomparing list separator configurations\nstatic func != (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator configuration by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "visualEffect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3864375-visualeffect",
    "html": "See Also\nConfiguring separator appearance\nvar color: UIColor\nThe color to use for the separators of the item the configuration applies to.\nvar multipleSelectionColor: UIColor\nThe color to use for the separators of the item the configuration applies to when the item is in a multiple-selection group."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727746",
    "html": "See Also\ncomparing list separator configurations\nstatic func == (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator configuration by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727759-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible\nSee Also\nDescribing list separator configuration\nvar description: String\nA textual representation of this instance.\nvar customMirror: Mirror\nThe custom mirror for this instance."
  },
  {
    "title": "UICollectionLayoutListConfiguration.FooterMode.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode/none",
    "html": "See Also\nFooter modes\ncase supplementary\nA footer mode that uses supplementary views to show footers."
  },
  {
    "title": "backgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/multiselectoptions/3668001-backgroundcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which uses the system default.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "customMirror | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727758-custommirror",
    "html": "Relationships\nFrom Protocol\nCustomReflectable\nSee Also\nDescribing list separator configuration\nvar description: String\nA textual representation of this instance.\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/multiselectoptions/3668003-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar backgroundColor: UIColor?\nThe background color to apply to the accessory."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/checkmarkoptions/3600797-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/checkmarkoptions/3600798-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/detailoptions/3917548-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/checkmarkoptions/3667988-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/multiselectoptions/3600838-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar backgroundColor: UIColor?\nThe background color to apply to the accessory."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/detailoptions/3917549-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/3600815",
    "html": "See Also\nComparing displayed states\nstatic func == (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory display state by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UICellAccessory.DisplayedState.whenNotEditing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/whennotediting",
    "html": "See Also\nStates\ncase always\nThe accessory always displays.\ncase whenEditing\nThe accessory displays only when the cell is in editing mode."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/3600818-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing displayed states\nstatic func == (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are equal.\nstatic func != (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UICellAccessory.AccessoryType.insert | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/insert",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UICellAccessory.AccessoryType.disclosureIndicator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/disclosureindicator",
    "html": "See Also\nAccessories\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UICellAccessory.AccessoryType.reorder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/reorder",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UICellAccessory.AccessoryType.outlineDisclosure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/outlinedisclosure",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UICellAccessory.AccessoryType.delete | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/delete",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UICellAccessory.AccessoryType.checkmark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/checkmark",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "UITableViewCellAccessoryDetailDisclosureButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcellaccessorytype/uitableviewcellaccessorydetaildisclosurebutton",
    "html": "Discussion\n\nChoose this type when you want both an information button and a disclosure control. Connect the disclosure control to a push segue to display new content. Use the delegate’s tableView:accessoryButtonTappedForRowWithIndexPath:method to respond to touch events in the detail button.\n\nSee Also\nAccessory views\nUITableViewCellAccessoryNone\nNo accessory view.\nUITableViewCellAccessoryDisclosureIndicator\nA chevron-shaped control for presenting new content.\nUITableViewCellAccessoryCheckmark\nA checkmark image.\nUITableViewCellAccessoryDetailButton\nAn information button."
  },
  {
    "title": "showsVerticalSeparator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/reorderoptions/3600864-showsverticalseparator",
    "html": "Discussion\n\nThe default value of this property is true.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "UIImageRenderingModeAlwaysOriginal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagerenderingmode/uiimagerenderingmodealwaysoriginal",
    "html": "See Also\nRendering modes\nUIImageRenderingModeAutomatic\nDraw the image using the context’s default rendering mode.\nUIImageRenderingModeAlwaysTemplate\nAlways draw the image as a template image, ignoring its color information."
  },
  {
    "title": "dequeueReusableCellWithIdentifier:forIndexPath: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614878-dequeuereusablecellwithidentifie",
    "html": "Parameters\nidentifier\n\nA string identifying the cell object to be reused. This parameter must not be nil.\n\nindexPath\n\nThe index path specifying the location of the cell. Always specify the index path provided to you by your data source object. This method uses the index path to perform additional configuration based on the cell’s position in the table view.\n\nReturn Value\n\nA UITableViewCell object with the associated reuse identifier. This method always returns a valid cell.\n\nDiscussion\n\nCall this method only from the tableView:cellForRowAtIndexPath: method of your table view data source object. This method returns an existing cell of the specified type, if one is available, or it creates and returns a new cell using the class or storyboard you provided earlier. Don’t call this method outside of your data source’s tableView:cellForRowAtIndexPath: method. If you need to create cells at other times, call dequeueReusableCellWithIdentifier: instead.\n\nImportant\n\nYou must specify a cell with a matching identifier in your storyboard file. You may also register a class or nib file using the registerNib:forCellReuseIdentifier: or registerClass:forCellReuseIdentifier: method, but must do so before calling this method.\n\nWhen creating new cells from your storyboard or nib file, this method loads the cell object and initializes it using its initWithCoder: method. When creating cells from a registered class, this method creates the cell and initializes it by calling its initWithStyle:reuseIdentifier: method. For nib-based cells, this method loads the cell object from the provided nib file. If an existing cell was available for reuse, this method calls the cell’s prepareForReuse method instead.\n\nSee Also\nRecycling table view cells\n- registerNib:forCellReuseIdentifier:\nRegisters a nib object that contains a cell with the table view under a specified identifier.\n- registerClass:forCellReuseIdentifier:\nRegisters a class to use in creating new table cells.\n- dequeueReusableCellWithIdentifier:\nReturns a reusable table-view cell object after locating it by its identifier."
  },
  {
    "title": "registerNib:forCellReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614937-registernib",
    "html": "Parameters\nnib\n\nA nib object that specifies the nib file to use to create the cell.\n\nidentifier\n\nThe reuse identifier for the cell. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nBefore dequeueing any cells, call this method or the registerClass:forCellReuseIdentifier: method to tell the table view how to create new cells. If a cell of the specified type isn’t currently in a reuse queue, the table view uses the provided information to create a new cell object automatically.\n\nIf you previously registered a class or nib file with the same reuse identifier, the nib you specify in the nib parameter replaces the old entry. You may specify nil for nib if you want to unregister the nib from the specified reuse identifier.\n\nSee Also\nRecycling table view cells\n- registerClass:forCellReuseIdentifier:\nRegisters a class to use in creating new table cells.\n- dequeueReusableCellWithIdentifier:forIndexPath:\nReturns a reusable table-view cell object for the specified reuse identifier and adds it to the table.\n- dequeueReusableCellWithIdentifier:\nReturns a reusable table-view cell object after locating it by its identifier.\nRelated Documentation\n- tableView:cellForRowAtIndexPath:\nAsks the data source for a cell to insert in a particular location of the table view."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/3600851-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar style: UICellAccessory.OutlineDisclosureOptions.Style\nThe style of the outline disclosure accessory.\nenum UICellAccessory.OutlineDisclosureOptions.Style\nConstants that describe the style of the outline disclosure accessory."
  },
  {
    "title": "prefetchingEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/3801922-prefetchingenabled",
    "html": "Discussion\n\nWhen YES, the table view may request cells in advance of displaying them. When NO, the table view requests cells when they need to display. Setting this property to NO also disables data prefetching. The default value of this property is YES.\n\nSee Also\nProviding the data and cells\ndataSource\nThe object that acts as the data source of the table view.\nprefetchDataSource\nThe object that acts as the prefetching data source for the table view, receiving notifications of upcoming cell data requirements.\nUITableViewDataSource\nThe methods that an object adopts to manage data and provide cells for a table view.\nUITableViewDataSourcePrefetching\nA protocol that provides advance warning of the data requirements for a table view, allowing you to start potentially long-running data operations early."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/disclosureindicatoroptions/3600813-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/disclosureindicatoroptions/3600812-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "position(after:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/placement/3600858-position",
    "html": "See Also\nSpecifying position\nstatic func position(before: UICellAccessory) -> UICellAccessory.Placement.Position\nProvides a position before the accessory that matches the specified type, or at the beginning if there’s no matching type.\ntypealias UICellAccessory.Placement.Position\nThe index position of the cell accessory in relation to the other accessories in the specified array."
  },
  {
    "title": "shouldPerformSegueWithIdentifier:sender: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621502-shouldperformseguewithidentifier",
    "html": "Parameters\nidentifier\n\nThe string that identifies the triggered segue. In Interface Builder, you specify the segue’s identifier string in the attributes inspector. This string is used only for locating the segue inside the storyboard.\n\nsender\n\nThe object that initiated the segue. This object is made available for informational purposes during the actual segue.\n\nReturn Value\n\nYES if the segue should be performed or NO if it should be ignored.\n\nDiscussion\n\nSubclasses can override this method and use it to perform segues conditionally based on current conditions. If you do not implement this method, all segues are performed.\n\nSee Also\nPerforming segues\n- prepareForSegue:sender:\nNotifies the view controller that a segue is about to be performed.\n- performSegueWithIdentifier:sender:\nInitiates the segue with the specified identifier from the current view controller's storyboard file.\n- allowedChildViewControllersForUnwindingFromSource:\nReturns an array of child view controllers to search for an unwind segue destination.\n- childViewControllerContainingSegueSource:\nReturns the child view controller that contains the source of the unwind segue.\n- canPerformUnwindSegueAction:fromViewController:sender:\nCalled on a view controller to determine whether it responds to an unwind action.\n- unwindForSegue:towardsViewController:\nCalled when an unwind segue transitions to a new view controller."
  },
  {
    "title": "UICollectionViewUpdateItem.Action.insert | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/action/insert",
    "html": "Discussion\n\nInsert the item into the collection view."
  },
  {
    "title": "UIFontWeightRegular | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightregular",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "UIFontWeightMedium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightmedium",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "UICellAccessory.AccessoryType.label | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/label",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/3600788-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing accessory types\nstatic func == (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are equal.\nstatic func != (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory type by feeding them into the hasher."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/3600787-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing accessory types\nstatic func == (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are equal.\nstatic func != (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/3600781",
    "html": "See Also\nComparing accessory types\nstatic func == (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory type by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration/3600804-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nlet customView: UIView\nThe custom view to display for the accessory.\nlet placement: UICellAccessory.Placement\nThe placement for the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar maintainsFixedSize: Bool\nA Boolean value that determines whether to preserve the frame size of the custom view."
  },
  {
    "title": "adjustsFontForContentSizeCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/labeloptions/3600827-adjustsfontforcontentsizecategor",
    "html": "Discussion\n\nThe default value of this property is true.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar font: UIFont\nThe font for the label."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration/3600805-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nlet customView: UIView\nThe custom view to display for the accessory.\nlet placement: UICellAccessory.Placement\nThe placement for the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar maintainsFixedSize: Bool\nA Boolean value that determines whether to preserve the frame size of the custom view."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/labeloptions/3600831-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar font: UIFont\nThe font for the label.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the label automatically adjusts its font according to the content size category."
  },
  {
    "title": "font | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/labeloptions/3600828-font",
    "html": "Discussion\n\nThe default value of this property is the preferred font for body.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the label automatically adjusts its font according to the content size category."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/reorderoptions/3668007-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar showsVerticalSeparator: Bool\nA Boolean value that determines whether a vertical separator displays before the accessory when it appears after another accessory."
  },
  {
    "title": "uppercaseHexadecimal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870039-uppercasehexadecimal",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "uppercaseRoman | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870048-uppercaseroman",
    "html": "Discussion\n\nUppercase Roman numeral markers follow the pattern I, II, III, IV, and so on.\n\nSee Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item."
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/decelerationrate",
    "html": "Topics\nSelecting deceleration rates\nstatic let automatic: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA deceleration rate that matches the parent scroll view’s deceleration rate for the orthogonal scrolling section.\nstatic let fast: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA rapid deceleration rate for the orthogonal scrolling section.\nstatic let normal: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nThe default deceleration rate for the orthogonal scrolling section.\nCreating a deceleration rate\ninit(rawValue: CGFloat)\nCreates a deceleration rate.\nRelationships\nConforms To\nHashable\nRawRepresentable\nSendable\nSee Also\nSpecifying the rate of deceleration\nvar decelerationRate: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA value that specifies the rate of deceleration in the orthogonal scrolling section after the scrolling pan gesture ends."
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/bounce",
    "html": "Topics\nSelecting bounce options\ncase always\nThe orthogonal scroll view bounces even if the content is smaller than its bounds.\ncase automatic\nThe orthogonal scroll view bounces when it encounters a content boundary.\ncase never\nThe orthogonal scroll view stops scrolling immediately when it encounters a content boundary without bouncing.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying the bounce behavior\nvar bounce: UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce\nA value that specifies whether the orthogonal scrolling section bounces past the edge of content and back again."
  },
  {
    "title": "decelerationRate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/4134820-decelerationrate",
    "html": "See Also\nSpecifying the rate of deceleration\nstruct UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nConstants that specify the rate of deceleration in the orthogonal scrolling section after the scrolling pan gesture ends."
  },
  {
    "title": "bounce | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties/4134819-bounce",
    "html": "Discussion\n\nSet this value to specify whether the section stops scrolling immediately upon encountering the content boundary, or if it continues scrolling past the boundary and then bounces back.\n\nSee Also\nSpecifying the bounce behavior\nenum UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce\nConstants that specify whether the orthogonal scrolling section bounces past the edge of content and back again."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/3600819-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing displayed states\nstatic func == (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are equal.\nstatic func != (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory display state by feeding them into the hasher."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration/3727762-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\ncomparing list separator configurations\nstatic func == (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are equal.\nstatic func != (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator configuration by feeding them into the hasher."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/3600816",
    "html": "See Also\nComparing displayed states\nstatic func != (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory display state by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UIImagePickerControllerSourceTypeCamera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontrollersourcetype/uiimagepickercontrollersourcetypecamera",
    "html": "Discussion\n\nIndicate the specific camera you want (front or rear, as available) by using the cameraDevice property."
  },
  {
    "title": "showViewController:sender: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621377-showviewcontroller",
    "html": "Parameters\nvc\n\nThe view controller to display.\n\nsender\n\nThe object that initiated the request.\n\nDiscussion\n\nYou use this method to decouple the need to display a view controller from the process of actually presenting that view controller onscreen. Using this method, a view controller does not need to know whether it is embedded inside a navigation controller or split-view controller. It calls the same method for both. The UISplitViewController and UINavigationController classes override this method and handle the presentation according to their design. For example, a navigation controller overrides this method and uses it to push vc onto its navigation stack.\n\nThe default implementation of this method calls the targetViewControllerForAction:sender: method to locate an object in the view controller hierarchy that overrides this method. It then calls the method on that target object, which displays the view controller in an appropriate way. If the targetViewControllerForAction:sender: method returns nil, this method uses the window’s root view controller to present vc modally.\n\nYou can override this method in custom view controllers to display vc yourself. Use this method to display vc in a primary context. For example, a container view controller might use this method to replace its primary child. Your implementation should adapt its behavior for both regular and compact environments.\n\nSee Also\nPresenting a view controller\n- showDetailViewController:sender:\nPresents a view controller in a secondary (or detail) context.\n- presentViewController:animated:completion:\nPresents a view controller modally.\n- dismissViewControllerAnimated:completion:\nDismisses the view controller that was presented modally by the view controller.\nmodalPresentationStyle\nThe presentation style for modal view controllers.\nUIModalPresentationStyle\nModal presentation styles available when presenting view controllers.\nmodalTransitionStyle\nThe transition style to use when presenting the view controller.\nUIModalTransitionStyle\nTransition styles available when presenting view controllers.\nmodalInPresentation\nA Boolean value indicating whether the view controller enforces a modal behavior.\ndefinesPresentationContext\nA Boolean value that indicates whether this view controller's view is covered when the view controller or one of its descendants presents a view controller.\nprovidesPresentationContextTransitionStyle\nA Boolean value that indicates whether the view controller specifies the transition style for view controllers it presents.\ndisablesAutomaticKeyboardDismissal\nReturns a Boolean indicating whether the current input view is dismissed automatically when changing controls.\nUIViewControllerShowDetailTargetDidChangeNotification\nPosted when a split view controller is expanded or collapsed."
  },
  {
    "title": "UICellAccessory.DisplayedState.whenEditing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/whenediting",
    "html": "See Also\nStates\ncase always\nThe accessory always displays.\ncase whenNotEditing\nThe accessory displays only when the cell isn’t in editing mode."
  },
  {
    "title": "check | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870040-check",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "position(before:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/placement/3600859-position",
    "html": "See Also\nSpecifying position\nstatic func position(after: UICellAccessory) -> UICellAccessory.Placement.Position\nProvides a position after the accessory that matches the specified type, or at the end if there’s no matching type.\ntypealias UICellAccessory.Placement.Position\nThe index position of the cell accessory in relation to the other accessories in the specified array."
  },
  {
    "title": "circle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870043-circle",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/reorderoptions/3600865-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar showsVerticalSeparator: Bool\nA Boolean value that determines whether a vertical separator displays before the accessory when it appears after another accessory."
  },
  {
    "title": "fontWithDescriptor:size: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619025-fontwithdescriptor",
    "html": "Parameters\ndescriptor\n\nThe font descriptor to match.\n\npointSize\n\nThe size in points to which the font is scaled. If greater than 0.0, it has precedence over UIFontDescriptorSizeAttribute in descriptor.\n\nReturn Value\n\nA font object for the specified descriptor and size.\n\nDiscussion\n\nIn most cases, you can simply use fontWithName:size: to create standard scaled fonts.\n\nSee Also\nCreating Fonts\nScaling Fonts Automatically\nScale text in your interface automatically using Dynamic Type.\nCreating Self-Sizing Table View Cells\nCreate table view cells that support Dynamic Type and use system spacing constraints to adjust the spacing surrounding text labels.\n+ preferredFontForTextStyle:\nReturns an instance of the system font for the specified text style with scaling for the user's selected content size category.\n+ preferredFontForTextStyle:compatibleWithTraitCollection:\nReturns an instance of the system font for the appropriate text style and traits.\nUIFontTextStyle\nConstants that describe the preferred styles for fonts.\n+ fontWithName:size:\nCreates and returns a font object for the specified font name and size.\n- fontWithSize:\nReturns a font object that is the same as the font, but has the specified size."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/3600854-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar style: UICellAccessory.OutlineDisclosureOptions.Style\nThe style of the outline disclosure accessory.\nenum UICellAccessory.OutlineDisclosureOptions.Style\nConstants that describe the style of the outline disclosure accessory."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/3668005-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar style: UICellAccessory.OutlineDisclosureOptions.Style\nThe style of the outline disclosure accessory.\nenum UICellAccessory.OutlineDisclosureOptions.Style\nConstants that describe the style of the outline disclosure accessory."
  },
  {
    "title": "UICellAccessory.OutlineDisclosureOptions.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/style",
    "html": "Topics\nConstants\ncase automatic\nThe system automatically determines the style depending on whether the cell’s configuration is as a section header.\ncase cell\nThe style to use for a selectable cell with nested children.\ncase header\nThe style to use for a section header.\nComparing Outline Disclosure Styles\nstatic func == (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are equal.\nstatic func != (UICellAccessory.OutlineDisclosureOptions.Style, UICellAccessory.OutlineDisclosureOptions.Style) -> Bool\nAn operator for checking whether two outline disclosure styles are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the outline disclosure style by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar style: UICellAccessory.OutlineDisclosureOptions.Style\nThe style of the outline disclosure accessory."
  },
  {
    "title": "style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions/3600853-style",
    "html": "Discussion\n\nThe default value of this property is UICellAccessory.OutlineDisclosureOptions.Style.automatic.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nenum UICellAccessory.OutlineDisclosureOptions.Style\nConstants that describe the style of the outline disclosure accessory."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/disclosureindicatoroptions/3667995-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "UICellAccessory.Placement.trailing(displayed:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/placement/trailing_displayed_at",
    "html": "See Also\nSpecifying accessory placement\ncase leading(displayed: UICellAccessory.DisplayedState, at: UICellAccessory.Placement.Position)\nThe accessory appears on the leading edge of the cell."
  },
  {
    "title": "UIContentInsetsReference.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentinsetsreference/automatic",
    "html": "Discussion\n\nWhen you set this value on a section in a collection view, the section defaults to using the content insets reference value of the collection view."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/popupmenuoptions/4024650-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/popupmenuoptions/4024652-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the accessory uses the system default tint color.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617734-init",
    "html": "Return Value\n\nAn initialized collection view layout object.\n\nSee Also\nCreating the collection view layout\ninit?(coder: NSCoder)\nCreates a collection view layout object from data in a given unarchiver."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617766-init",
    "html": "See Also\nCreating the collection view layout\ninit()\nCreates a collection view layout object."
  },
  {
    "title": "collectionView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617751-collectionview",
    "html": "Discussion\n\nThe collection view object sets the value of this property when a new layout object is assigned to it.\n\nSee Also\nGetting the collection view information\nvar collectionViewContentSize: CGSize\nThe width and height of the collection view’s contents."
  },
  {
    "title": "UICollectionViewUpdateItem.Action.reload | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/action/reload",
    "html": "Discussion\n\nReload the item, which consists of deleting and then inserting the item."
  },
  {
    "title": "UICollectionViewUpdateItem.Action.move | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/action/move",
    "html": "Discussion\n\nMove the item from its current location to a new location."
  },
  {
    "title": "UICollectionViewUpdateItem.Action.delete | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/action/delete",
    "html": "Discussion\n\nRemove the item from the collection view."
  },
  {
    "title": "UICollectionViewUpdateItem.Action.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/action/none",
    "html": "Discussion\n\nTake no action on the item."
  },
  {
    "title": "performSegueWithIdentifier:sender: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621413-performseguewithidentifier",
    "html": "Parameters\nidentifier\n\nThe string that identifies the triggered segue. In Interface Builder, you specify the segue’s identifier string in the attributes inspector.\n\nThis method throws an Exception handling if there is no segue with the specified identifier.\n\nsender\n\nThe object that you want to use to initiate the segue. This object is made available for informational purposes during the actual segue.\n\nDiscussion\n\nNormally, segues are initiated automatically and not using this method. However, you can use this method in cases where the segue could not be configured in your storyboard file. For example, you might call it from a custom action handler used in response to shake or accelerometer events.\n\nThe current view controller must have been loaded from a storyboard. If its storyboard property is nil, perhaps because you allocated and initialized the view controller yourself, this method throws an exception.\n\nSee Also\nPerforming segues\n- shouldPerformSegueWithIdentifier:sender:\nDetermines whether the segue with the specified identifier should be performed.\n- prepareForSegue:sender:\nNotifies the view controller that a segue is about to be performed.\n- allowedChildViewControllersForUnwindingFromSource:\nReturns an array of child view controllers to search for an unwind segue destination.\n- childViewControllerContainingSegueSource:\nReturns the child view controller that contains the source of the unwind segue.\n- canPerformUnwindSegueAction:fromViewController:sender:\nCalled on a view controller to determine whether it responds to an unwind action.\n- unwindForSegue:towardsViewController:\nCalled when an unwind segue transitions to a new view controller."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/popupmenuoptions/4024651-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory."
  },
  {
    "title": "preferredFontForTextStyle:compatibleWithTraitCollection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1771762-preferredfontfortextstyle",
    "html": "Parameters\nstyle\n\nThe text style for which to return a font. See UIFontTextStyle for recognized values.\n\ntraitCollection\n\nThe traits to use when determining which font to return.\n\nReturn Value\n\nThe system font associated with the specified text style and traits.\n\nDiscussion\n\nTo create a styled font based on a custom font, use a UIFontMetrics object.\n\nBecause fonts are immutable, any element that adjusts for an updated content size category does not modify the font itself. Instead, the element replaces the assigned font with a new instance based on the original settings.\n\nSee Also\nCreating Fonts\nScaling Fonts Automatically\nScale text in your interface automatically using Dynamic Type.\nCreating Self-Sizing Table View Cells\nCreate table view cells that support Dynamic Type and use system spacing constraints to adjust the spacing surrounding text labels.\n+ preferredFontForTextStyle:\nReturns an instance of the system font for the specified text style with scaling for the user's selected content size category.\nUIFontTextStyle\nConstants that describe the preferred styles for fonts.\n+ fontWithName:size:\nCreates and returns a font object for the specified font name and size.\n+ fontWithDescriptor:size:\nReturns a font that matches the specified font descriptor.\n- fontWithSize:\nReturns a font object that is the same as the font, but has the specified size."
  },
  {
    "title": "UIFontWeightThin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightthin",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "UIFontWeightLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightlight",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "systemFontOfSize:weight:width: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/4076582-systemfontofsize",
    "html": "See Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "UICellAccessory.AccessoryType.multiselect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/multiselect",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type."
  },
  {
    "title": "monospacedDigitSystemFontOfSize:weight: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619022-monospaceddigitsystemfontofsize",
    "html": "Parameters\nfontSize\n\nThe size (in points) for the font. This value must be greater than 0.0.\n\nweight\n\nThe weight of the font, specified as a font weight constant. For a list of possible values, see UIFontWeight. Avoid passing an arbitrary floating-point number for weight, because a font might not include a variant for every weight.\n\nReturn Value\n\nA font object of the specified size and weight, with variable-width text and fixed-width digits.\n\nDiscussion\n\nThe system font uses proportional spacing. When displaying numerical data, you can use this method to retrieve a monospace font for displaying that data. With a monospaced font, each digit occupies the same amount of space, which makes it easier to read numbers that are stacked vertically.\n\nNote\n\nThis method returns the same font as systemFontOfSize:weight:, but with modified digits. If you want all characters to be fixed-width, use monospacedSystemFontOfSize:weight: instead.\n\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size."
  },
  {
    "title": "systemFontOfSize:weight: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619027-systemfontofsize",
    "html": "Parameters\nfontSize\n\nThe size (in points) to which the font is scaled. This value must be greater than 0.0.\n\nweight\n\nThe weight of the font, specified as a font weight constant. For a list of possible values, see \"Font Weights” in UIFontDescriptor. Avoid passing an arbitrary floating-point number for weight, because a font might not include a variant for every weight.\n\nReturn Value\n\nA font object of the specified size and weight.\n\nDiscussion\n\nInstead of using this method to get a font, it’s often more appropriate to use preferredFontForTextStyle: because that method respects the user’s selected content size category.\n\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "monospacedSystemFontOfSize:weight: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/3042484-monospacedsystemfontofsize",
    "html": "Parameters\nfontSize\n\nThe size (in points) for the font. This value must be greater than 0.0.\n\nReturn Value\n\nA font object of the specified size.\n\nDiscussion\n\nThis method provides the same font as the UIFontDescriptorSystemDesignMonospaced system font descriptor. For design guidance, see Typography in the Human Interface Guidelines.\n\nNote\n\nTo display text in the standard system font, but with fixed-width digits, use monospacedDigitSystemFontOfSize:weight: instead.\n\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "boldSystemFontOfSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619039-boldsystemfontofsize",
    "html": "Parameters\nfontSize\n\nThe size (in points) for the font. This value must be greater than 0.0.\n\nReturn Value\n\nA font object of the specified size.\n\nDiscussion\n\nInstead of using this method to get a font, it’s often more appropriate to use preferredFontForTextStyle: because that method respects the user’s selected content size category.\n\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "UICellAccessory.AccessoryType.customView(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype/customview",
    "html": "See Also\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/labeloptions/3668000-ishidden",
    "html": "Discussion\n\nA hidden accessory takes up space in the layout, but it isn’t visible and doesn’t provide any behaviors.\n\nUse this property to achieve a consistent layout across cells when some cells show this type of accessory and others don’t.\n\nSee Also\nAccessing configuration options\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar font: UIFont\nThe font for the label.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the label automatically adjusts its font according to the content size category."
  },
  {
    "title": "placement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration/3600803-placement",
    "html": "See Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nlet customView: UIView\nThe custom view to display for the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar maintainsFixedSize: Bool\nA Boolean value that determines whether to preserve the frame size of the custom view."
  },
  {
    "title": "customView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration/3600800-customview",
    "html": "See Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nlet placement: UICellAccessory.Placement\nThe placement for the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar maintainsFixedSize: Bool\nA Boolean value that determines whether to preserve the frame size of the custom view."
  },
  {
    "title": "reservedLayoutWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/labeloptions/3600830-reservedlayoutwidth",
    "html": "Discussion\n\nUse this property to ensure consistent horizontal alignment from both system and custom accessories to your content, even when the accessories vary in size.\n\nThe reserved layout width only affects the amount of space for the accessory, and its positioning within that space. It doesn’t affect the size of the accessory.\n\nSee Also\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar font: UIFont\nThe font for the label.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the label automatically adjusts its font according to the content size category."
  },
  {
    "title": "isLookToDictateEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilooktodictatecapable/4230966-islooktodictateenabled",
    "html": "Required"
  },
  {
    "title": "originalImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619164-originalimage",
    "html": "Discussion\n\nThe value for this key is a UIImage object."
  },
  {
    "title": "fontNamesForFamilyName: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619023-fontnamesforfamilyname",
    "html": "Parameters\nfamilyName\n\nThe name of the font family. Use the familyNames method to get an array of the available font family names on the system.\n\nReturn Value\n\nAn array of NSString objects, each of which contains a font name associated with the specified family.\n\nDiscussion\n\nYou can pass the returned strings as parameters to the fontWithName:size: method to retrieve an actual font object.\n\nSee Also\nGetting the Available Font Names\nfamilyNames\nReturns an array of font family names available on the system.\nRelated Documentation\n+ fontWithName:size:\nCreates and returns a font object for the specified font name and size."
  },
  {
    "title": "popoverArrowDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624665-popoverarrowdirection",
    "html": "Discussion\n\nThe default value of this property is UIPopoverArrowDirectionUnknown. When you present the popover, the value changes to reflect the actual direction of the arrow being used by the popover. When the popover is subsequently dismissed, the value of this property returns to UIPopoverArrowDirectionUnknown.\n\nSee Also\nGetting the popover attributes\npopoverVisible\nA Boolean value indicating whether the popover is currently visible.\nDeprecated"
  },
  {
    "title": "presentPopoverFromBarButtonItem:permittedArrowDirections:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624668-presentpopoverfrombarbuttonitem",
    "html": "Parameters\nitem\n\nThe bar button item on which to anchor the popover.\n\narrowDirections\n\nThe arrow directions the popover is permitted to use. You can use this value to force the popover to be positioned on a specific side of the bar button item. However, it is generally better to specify UIPopoverArrowDirectionAny and let the popover decide the best placement. You must not specify UIPopoverArrowDirectionUnknown for this parameter.\n\nanimated\n\nSpecify YES to animate the presentation of the popover or NO to display it immediately.\n\nDiscussion\n\nWhen presenting the popover, this method adds the toolbar that owns the button to the popover’s list of passthrough views. Thus, taps in the toolbar result in the action methods of the corresponding toolbar items being called. If you want the popover to be dismissed when a different toolbar item is tapped, you must implement that behavior in your action handler methods.\n\nSee Also\nPresenting and dismissing the popover\n- presentPopoverFromRect:inView:permittedArrowDirections:animated:\nDisplays the popover and anchors it to the specified location in the view.\nDeprecated\n- dismissPopoverAnimated:\nDismisses the popover programmatically.\nDeprecated"
  },
  {
    "title": "dismissPopoverAnimated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624662-dismisspopoveranimated",
    "html": "Parameters\nanimated\n\nSpecify YES to animate the dismissal of the popover or NO to dismiss it immediately.\n\nDiscussion\n\nYou can use this method to dismiss the popover programmatically in response to taps inside the popover window. Taps outside of the popover’s contents automatically dismiss the popover.\n\nSee Also\nPresenting and dismissing the popover\n- presentPopoverFromRect:inView:permittedArrowDirections:animated:\nDisplays the popover and anchors it to the specified location in the view.\nDeprecated\n- presentPopoverFromBarButtonItem:permittedArrowDirections:animated:\nDisplays the popover and anchors it to the specified bar button item.\nDeprecated"
  },
  {
    "title": "UIFontWeightTrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweighttrait",
    "html": "Discussion\n\nThe value of this key is an NSNumber object. The valid value range is from -1.0 to 1.0, where 0.0 corresponds to the regular weight constant. The negative side of the value range indicates that the font is light or thin; the positive side means the font is heavier or bolder. For example, the font face UIFontWeightUltraLight has the approximate value of -0.8, and NSFontWeightBlack has the approximate value of 0.62. When providing a weight that doesn’t precisely match a font face in the family, the system locates an available face that represents the closest match.\n\nYou can use a font face constant to specify a weight; for a list of constants, see UIFontWeight.\n\nTo access the weight of a font, first retrieve the font’s UIFontDescriptorTraitsAttribute dictionary information:\n\nlet font = UIFont.systemFont(ofSize: 21, weight: .bold)\nif let traits = font.fontDescriptor.object(forKey: .traits) as? [UIFontDescriptor.TraitKey: Any]{\n    let weightValue = traits[.weight]\n}\n\n\nSee Also\nFont traits\nUIFontSlantTrait\nThe relative slant angle of the font.\nUIFontSymbolicTrait\nThe symbolic font traits.\nUIFontWidthTrait\nThe inter-glyph spacing of the font."
  },
  {
    "title": "UIFontSlantTrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontslanttrait",
    "html": "Discussion\n\nThe value of this key is an NSNumber object. The valid value range is from -1.0 to 1.0. The value of 0.0 corresponds to 0 degree clockwise rotation from the vertical and 1.0 corresponds to 30 degrees clockwise rotation.\n\nSee Also\nFont traits\nUIFontSymbolicTrait\nThe symbolic font traits.\nUIFontWeightTrait\nThe numerical value that corresponds to a font face.\nUIFontWidthTrait\nThe inter-glyph spacing of the font."
  },
  {
    "title": "UIFontSymbolicTrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontsymbolictrait",
    "html": "Discussion\n\nUse this key with a trait dictionary to get the symbolic traits value as an NSNumber object.\n\nSee Also\nFont traits\nUIFontSlantTrait\nThe relative slant angle of the font.\nUIFontWeightTrait\nThe numerical value that corresponds to a font face.\nUIFontWidthTrait\nThe inter-glyph spacing of the font."
  },
  {
    "title": "uppercaseAlpha | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870051-uppercasealpha",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2899606-init",
    "html": "Parameters\nrawValue\n\nA string object that represents the marker image, such as “box,” “check,” “diamond,” and so on.\n\nSee Also\nInitializing a marker format\ninit(String)\nCreates a new marker that you can apply to an item in a text list with the raw value you provide."
  },
  {
    "title": "octal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870052-octal",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "square | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870047-square",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "decimal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870053-decimal",
    "html": "Discussion\n\nDecimal annotation markers follow the pattern 1.0, 1.1, 2.0, and so on.\n\nSee Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "diamond | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870055-diamond",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "modalInPresentation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/3229894-modalinpresentation",
    "html": "Discussion\n\nThe default value of this property is NO. When you set it to YES, UIKit ignores events outside the view controller's bounds and prevents the interactive dismissal of the view controller while it is onscreen.\n\nSee Also\nPresenting a view controller\n- showViewController:sender:\nPresents a view controller in a primary context.\n- showDetailViewController:sender:\nPresents a view controller in a secondary (or detail) context.\n- presentViewController:animated:completion:\nPresents a view controller modally.\n- dismissViewControllerAnimated:completion:\nDismisses the view controller that was presented modally by the view controller.\nmodalPresentationStyle\nThe presentation style for modal view controllers.\nUIModalPresentationStyle\nModal presentation styles available when presenting view controllers.\nmodalTransitionStyle\nThe transition style to use when presenting the view controller.\nUIModalTransitionStyle\nTransition styles available when presenting view controllers.\ndefinesPresentationContext\nA Boolean value that indicates whether this view controller's view is covered when the view controller or one of its descendants presents a view controller.\nprovidesPresentationContextTransitionStyle\nA Boolean value that indicates whether the view controller specifies the transition style for view controllers it presents.\ndisablesAutomaticKeyboardDismissal\nReturns a Boolean indicating whether the current input view is dismissed automatically when changing controls.\nUIViewControllerShowDetailTargetDidChangeNotification\nPosted when a split view controller is expanded or collapsed.\nRelated Documentation\nDisabling the Pull-Down Gesture for a Sheet\nEnsure a positive user experience when presenting a view controller as a sheet."
  },
  {
    "title": "targetViewControllerForAction:sender: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621415-targetviewcontrollerforaction",
    "html": "Parameters\naction\n\nThe requested action.\n\nsender\n\nThe object sending the request.\n\nReturn Value\n\nThe view controller that handles the specified action or nil if no view controller handles the action.\n\nDiscussion\n\nThis method returns the current view controller if that view controller overrides the method indicated by the action parameter. If the current view controller does not override that method, UIKit walks up the view hierarchy and returns the first view controller that does override it. If no view controller handles the action, this method returns nil.\n\nA view controller can selectively respond to an action by returning an appropriate value from its canPerformAction:withSender: method.\n\nSee Also\nAdding a custom transition or presentation\ntransitioningDelegate\nThe delegate object that provides transition animator, interactive controller, and custom presentation controller objects.\ntransitionCoordinator\nReturns the active transition coordinator object.\npresentationController\nThe presentation controller that’s managing the current view controller.\npopoverPresentationController\nThe nearest popover presentation controller that is managing the current view controller.\nsheetPresentationController\nThe sheet presentation controller for the view controller.\nactivePresentationController\nThe presentation controller that’s managing the view controller.\nrestoresFocusAfterTransition\nA Boolean value that indicates whether an item that previously was focused should again become focused when the item’s view controller becomes visible and focusable.\nCustomizing and resizing sheets in UIKit\nDiscover how to create a layered and customized sheet experience in UIKit."
  },
  {
    "title": "box | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870042-box",
    "html": "See Also\nSelecting a marker format\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "childViewControllerContainingSegueSource: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621384-childviewcontrollercontainingseg",
    "html": "Parameters\nsource\n\nThe unwind segue source object containing information about the unwind segue.\n\nReturn Value\n\nThe view controller that contains the segue source.\n\nDiscussion\n\nContainer view controllers call this method to identify the child view controller that is the source of the unwind segue. Typically, you call this method from your allowedChildViewControllersForUnwindingFromSource: method so that you can remove the corresponding view controller from the returned list of children.\n\nSee Also\nPerforming segues\n- shouldPerformSegueWithIdentifier:sender:\nDetermines whether the segue with the specified identifier should be performed.\n- prepareForSegue:sender:\nNotifies the view controller that a segue is about to be performed.\n- performSegueWithIdentifier:sender:\nInitiates the segue with the specified identifier from the current view controller's storyboard file.\n- allowedChildViewControllersForUnwindingFromSource:\nReturns an array of child view controllers to search for an unwind segue destination.\n- canPerformUnwindSegueAction:fromViewController:sender:\nCalled on a view controller to determine whether it responds to an unwind action.\n- unwindForSegue:towardsViewController:\nCalled when an unwind segue transitions to a new view controller."
  },
  {
    "title": "traitOverrides | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/4134901-traitoverrides",
    "html": "See Also\nOverriding trait values\nUITraitOverrides"
  },
  {
    "title": "addChild(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621394-addchild",
    "html": "Parameters\nchildController\n\nThe view controller to be added as a child.\n\nDiscussion\n\nThis method creates a parent-child relationship between the current view controller and the object in the childController parameter. This relationship is necessary when embedding the child view controller’s view into the current view controller’s content. If the new child view controller is already the child of a container view controller, it is removed from that container before being added.\n\nThis method is only intended to be called by an implementation of a custom container view controller. If you override this method, you must call super in your implementation.\n\nSee Also\nManaging child view controllers in a custom container\nvar children: [UIViewController]\nAn array of view controllers that are children of the current view controller.\nfunc removeFromParent()\nRemoves the view controller from its parent.\nfunc transition(from: UIViewController, to: UIViewController, duration: TimeInterval, options: UIView.AnimationOptions, animations: (() -> Void)?, completion: ((Bool) -> Void)?)\nTransitions between two of the view controller's child view controllers.\nvar shouldAutomaticallyForwardAppearanceMethods: Bool\nReturns a Boolean value indicating whether appearance methods are forwarded to child view controllers.\nfunc beginAppearanceTransition(Bool, animated: Bool)\nTells a child controller its appearance is about to change.\nfunc endAppearanceTransition()\nTells a child controller its appearance has changed.\nclass let hierarchyInconsistencyException: NSExceptionName\nRaised if the view controller hierarchy is inconsistent with the view hierarchy."
  },
  {
    "title": "UIViewControllerShowDetailTargetDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontrollershowdetailtargetdidchangenotification",
    "html": "Discussion\n\nWhen a view controller is using showViewController:sender: or showDetailViewController:sender:, it may need to know when a split view controller higher in the view hierarchy has changed. This notification is sent when a split view controller expands or collapses. The object of this notification is the view controller that caused the change.\n\nSee Also\nPresenting a view controller\n- showViewController:sender:\nPresents a view controller in a primary context.\n- showDetailViewController:sender:\nPresents a view controller in a secondary (or detail) context.\n- presentViewController:animated:completion:\nPresents a view controller modally.\n- dismissViewControllerAnimated:completion:\nDismisses the view controller that was presented modally by the view controller.\nmodalPresentationStyle\nThe presentation style for modal view controllers.\nUIModalPresentationStyle\nModal presentation styles available when presenting view controllers.\nmodalTransitionStyle\nThe transition style to use when presenting the view controller.\nUIModalTransitionStyle\nTransition styles available when presenting view controllers.\nmodalInPresentation\nA Boolean value indicating whether the view controller enforces a modal behavior.\ndefinesPresentationContext\nA Boolean value that indicates whether this view controller's view is covered when the view controller or one of its descendants presents a view controller.\nprovidesPresentationContextTransitionStyle\nA Boolean value that indicates whether the view controller specifies the transition style for view controllers it presents.\ndisablesAutomaticKeyboardDismissal\nReturns a Boolean indicating whether the current input view is dismissed automatically when changing controls."
  },
  {
    "title": "children | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621452-children",
    "html": "Discussion\n\nThis property does not include any presented view controllers. This property is only intended to be read by an implementation of a custom container view controller.\n\nSee Also\nManaging child view controllers in a custom container\nfunc addChild(UIViewController)\nAdds the specified view controller as a child of the current view controller.\nfunc removeFromParent()\nRemoves the view controller from its parent.\nfunc transition(from: UIViewController, to: UIViewController, duration: TimeInterval, options: UIView.AnimationOptions, animations: (() -> Void)?, completion: ((Bool) -> Void)?)\nTransitions between two of the view controller's child view controllers.\nvar shouldAutomaticallyForwardAppearanceMethods: Bool\nReturns a Boolean value indicating whether appearance methods are forwarded to child view controllers.\nfunc beginAppearanceTransition(Bool, animated: Bool)\nTells a child controller its appearance is about to change.\nfunc endAppearanceTransition()\nTells a child controller its appearance has changed.\nclass let hierarchyInconsistencyException: NSExceptionName\nRaised if the view controller hierarchy is inconsistent with the view hierarchy."
  },
  {
    "title": "separateSecondaryViewControllerForSplitViewController: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1623191-separatesecondaryviewcontrollerf",
    "html": "Parameters\nsplitViewController\n\nThe current split view controller.\n\nReturn Value\n\nThe designated secondary view controller for the split view controller.\n\nDiscussion\n\nThis method provides default behavior when you do not overwrite the splitViewController:separateSecondaryViewControllerFromPrimaryViewController: method. The previous secondary view controller is returned.\n\nSee Also\nAdapting to environment changes\n- collapseSecondaryViewController:forSplitViewController:\nCalled when a split view controller transitions to a compact-width size class."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/options/1532793-init",
    "html": "Parameters\nrawValue\n\nAn unsigned integer that describes the text list options."
  },
  {
    "title": "prepareForSegue:sender: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621490-prepareforsegue",
    "html": "Parameters\nsegue\n\nThe segue object containing information about the view controllers involved in the segue.\n\nsender\n\nThe object that initiated the segue. You might use this parameter to perform different actions based on which control (or other object) initiated the segue.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses override this method and use it to configure the new view controller prior to it being displayed. The segue object contains information about the transition, including references to both view controllers that are involved.\n\nBecause segues can be triggered from multiple sources, you can use the information in the segue and sender parameters to disambiguate between different logical paths in your app. For example, if the segue originated from a table view, the sender parameter would identify the table view cell that the user tapped. You could then use that information to set the data on the destination view controller.\n\nSee Also\nPerforming segues\n- shouldPerformSegueWithIdentifier:sender:\nDetermines whether the segue with the specified identifier should be performed.\n- performSegueWithIdentifier:sender:\nInitiates the segue with the specified identifier from the current view controller's storyboard file.\n- allowedChildViewControllersForUnwindingFromSource:\nReturns an array of child view controllers to search for an unwind segue destination.\n- childViewControllerContainingSegueSource:\nReturns the child view controller that contains the source of the unwind segue.\n- canPerformUnwindSegueAction:fromViewController:sender:\nCalled on a view controller to determine whether it responds to an unwind action.\n- unwindForSegue:towardsViewController:\nCalled when an unwind segue transitions to a new view controller."
  },
  {
    "title": "fontWithSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619032-fontwithsize",
    "html": "Parameters\nfontSize\n\nThe desired size (in points) of the new font object. This value must be greater than 0.0.\n\nReturn Value\n\nA font object of the specified size.\n\nSee Also\nCreating Fonts\nScaling Fonts Automatically\nScale text in your interface automatically using Dynamic Type.\nCreating Self-Sizing Table View Cells\nCreate table view cells that support Dynamic Type and use system spacing constraints to adjust the spacing surrounding text labels.\n+ preferredFontForTextStyle:\nReturns an instance of the system font for the specified text style with scaling for the user's selected content size category.\n+ preferredFontForTextStyle:compatibleWithTraitCollection:\nReturns an instance of the system font for the appropriate text style and traits.\nUIFontTextStyle\nConstants that describe the preferred styles for fonts.\n+ fontWithName:size:\nCreates and returns a font object for the specified font name and size.\n+ fontWithDescriptor:size:\nReturns a font that matches the specified font descriptor."
  },
  {
    "title": "UIFontWeightBold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightbold",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "UIFontWeightSemibold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightsemibold",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "fontWithName:size: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619041-fontwithname",
    "html": "Parameters\nfontName\n\nThe fully specified name of the font. This name incorporates both the font family name and the specific style information for the font.\n\nfontSize\n\nThe size (in points) to which the font is scaled. This value must be greater than 0.0.\n\nReturn Value\n\nA font object of the specified name and size.\n\nDiscussion\n\nYou can use the fontNamesForFamilyName: method to retrieve the specific font names for a given font family.\n\nSee Also\nCreating Fonts\nScaling Fonts Automatically\nScale text in your interface automatically using Dynamic Type.\nCreating Self-Sizing Table View Cells\nCreate table view cells that support Dynamic Type and use system spacing constraints to adjust the spacing surrounding text labels.\n+ preferredFontForTextStyle:\nReturns an instance of the system font for the specified text style with scaling for the user's selected content size category.\n+ preferredFontForTextStyle:compatibleWithTraitCollection:\nReturns an instance of the system font for the appropriate text style and traits.\nUIFontTextStyle\nConstants that describe the preferred styles for fonts.\n+ fontWithDescriptor:size:\nReturns a font that matches the specified font descriptor.\n- fontWithSize:\nReturns a font object that is the same as the font, but has the specified size.\nRelated Documentation\nfamilyNames\nReturns an array of font family names available on the system.\n+ fontNamesForFamilyName:\nReturns an array of font names available in a particular font family."
  },
  {
    "title": "UIFontWeightBlack | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightblack",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight."
  },
  {
    "title": "UIImageSymbolWeightForFontWeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/3294271-uiimagesymbolweightforfontweight",
    "html": "Parameters\nfontWeight\n\nThe font weight of the text.\n\nReturn Value\n\nThe UIImageSymbolWeight that most closely coordinates with the provided font weight.\n\nDiscussion\n\nWhen placing symbols adjacent to text, use this method to find the appropriate symbol weight to match the weight of the text. Similarly, if you want to display a symbol with a particular weight, you can use UIFontWeightForImageSymbolWeight to look up the matching font weight for adjacent text."
  },
  {
    "title": "UICellAccessory.DisplayedState.always | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate/always",
    "html": "See Also\nStates\ncase whenEditing\nThe accessory displays only when the cell is in editing mode.\ncase whenNotEditing\nThe accessory displays only when the cell isn’t in editing mode."
  },
  {
    "title": "UIApplicationWillChangeStatusBarFrameNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationwillchangestatusbarframenotification",
    "html": "Discussion\n\nThe userInfo dictionary contains an NSValue object that encapsulates a CGRect structure expressing the location and size of the new status bar frame. Use UIApplicationStatusBarFrameUserInfoKey to access this value.\n\nSee Also\nDeprecated notifications\nUIApplicationDidChangeStatusBarFrameNotification\nPosted when the frame of the status bar changes.\nDeprecated\nUIApplicationWillChangeStatusBarOrientationNotification\nPosted when the app is about to change the orientation of its interface.\nDeprecated\nUIApplicationDidChangeStatusBarOrientationNotification\nPosted when the orientation of the app’s user interface changes.\nDeprecated"
  },
  {
    "title": "UIFontWeightHeavy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweightheavy",
    "html": "See Also\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightBlack\nThe black font weight."
  },
  {
    "title": "UIApplicationDidChangeStatusBarOrientationNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdidchangestatusbarorientationnotification",
    "html": "Discussion\n\nThe userInfo dictionary contains an NSNumber object that encapsulates a UIInterfaceOrientation value (see UIInterfaceOrientation). Use UIApplicationStatusBarOrientationUserInfoKey to access this value\n\nSee Also\nDeprecated notifications\nUIApplicationWillChangeStatusBarFrameNotification\nPosted when the app is about to change the frame of the status bar.\nDeprecated\nUIApplicationDidChangeStatusBarFrameNotification\nPosted when the frame of the status bar changes.\nDeprecated\nUIApplicationWillChangeStatusBarOrientationNotification\nPosted when the app is about to change the orientation of its interface.\nDeprecated"
  },
  {
    "title": "imageToTextPadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600535-imagetotextpadding",
    "html": "Discussion\n\nThis value only applies when there’s both an image and text.\n\nSee Also\nCustomizing layout\naxesPreservingSuperviewLayoutMargins\nA Boolean value that detemines whether the content view preserves the layout margins that it inherits from its superview on the horizontal or vertical axes.\ndirectionalLayoutMargins\nThe margins between the content and the edges of the content view.\nprefersSideBySideTextAndSecondaryText\nA Boolean value that determines whether the configuration positions the text and secondary text side by side.\ntextToSecondaryTextHorizontalPadding\nThe minimum horizontal padding between the text and secondary text.\ntextToSecondaryTextVerticalPadding\nThe vertical padding between the text and secondary text."
  },
  {
    "title": "textToSecondaryTextVerticalPadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600549-texttosecondarytextverticalpaddi",
    "html": "Discussion\n\nThis value only applies when there’s both text and secondary text, and they’re in a stacked vertical layout.\n\nSee Also\nCustomizing layout\naxesPreservingSuperviewLayoutMargins\nA Boolean value that detemines whether the content view preserves the layout margins that it inherits from its superview on the horizontal or vertical axes.\ndirectionalLayoutMargins\nThe margins between the content and the edges of the content view.\nprefersSideBySideTextAndSecondaryText\nA Boolean value that determines whether the configuration positions the text and secondary text side by side.\nimageToTextPadding\nThe padding between the image and text.\ntextToSecondaryTextHorizontalPadding\nThe minimum horizontal padding between the text and secondary text."
  },
  {
    "title": "configurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/3750829-configurationupdatehandler",
    "html": "Discussion\n\nA configuration update handler provides an alternative approach to overriding updateConfigurationUsingState: in a subclass. Set a configuration update handler to update the cell’s configuration using the new state in response to a configuration state change:\n\n[cell setConfigurationUpdateHandler:^(UICollectionViewCell *cell, UICellConfigurationState *state) {\n    UIListContentConfiguration *content = [[UIListContentConfiguration cellConfiguration] updatedConfigurationForState:state];\n    [content setText: @\"Hello world!\"];\n    if (state.isDisabled) {\n        [content.textProperties setColor:[UIColor systemGrayColor]];\n    }\n    [cell setContentConfiguration:content];\n}];\n\n\nSetting the value of this property calls setNeedsUpdateConfiguration. The system calls this handler after calling updateConfigurationUsingState:.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nUICollectionViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state.\nselected\nThe selection state of the cell.\nhighlighted\nThe highlight state of the cell."
  },
  {
    "title": "text | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600546-text",
    "html": "See Also\nCustomizing content\nimage\nThe image to display.\nattributedText\nAn attributed variant of the primary text.\nsecondaryText\nThe secondary text.\nsecondaryAttributedText\nAn attributed variant of the secondary text."
  },
  {
    "title": "sidebarHeaderConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600543-sidebarheaderconfiguration",
    "html": "Return Value\n\nThe default configuration for a header in a sidebar list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a header in a sidebar collection view list.\n\nFor an appearance consistent with system defaults, display your header in a sidebar collection view list that you configure with the UICollectionLayoutListAppearanceSidebar enumeration case.\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistSidebarHeaderConfiguration\n\n\t\n\nUICollectionLayoutListAppearanceSidebar\n\nSee Also\nCreating header and footer configurations\n+ plainHeaderConfiguration\nCreates the default configuration you use to style a header in a plain list.\n+ plainFooterConfiguration\nCreates the default configuration you use to style a footer in a plain list.\n+ groupedHeaderConfiguration\nCreates the default configuration you use to style a header in a grouped list.\n+ groupedFooterConfiguration\nCreates the default configuration you use to style a footer in a grouped list.\n+ prominentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style a prominent header in an inset grouped list.\n+ extraProminentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style an extra prominent header in an inset grouped list."
  },
  {
    "title": "allowedChildrenForUnwinding(from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621371-allowedchildrenforunwinding",
    "html": "Parameters\nsource\n\nThe unwind segue source object containing information about the unwind segue.\n\nReturn Value\n\nAn array of view controllers representing the child view controllers to search. The order of the items in the array determines the search order.\n\nDiscussion\n\nUIKit calls this method when searching for the destination of an unwind segue. The default implementation returns the contents of the children property minus the view controller returned by the childContaining(_:) method. You can override this method as needed in your custom container view controllers to change the search order. For example, a navigation controller reverses the order so that the search starts with the view controller at the top of the navigation stack.\n\nSee Also\nPerforming segues\nfunc shouldPerformSegue(withIdentifier: String, sender: Any?) -> Bool\nDetermines whether the segue with the specified identifier should be performed.\nfunc prepare(for: UIStoryboardSegue, sender: Any?)\nNotifies the view controller that a segue is about to be performed.\nfunc performSegue(withIdentifier: String, sender: Any?)\nInitiates the segue with the specified identifier from the current view controller's storyboard file.\nfunc childContaining(UIStoryboardUnwindSegueSource) -> UIViewController?\nReturns the child view controller that contains the source of the unwind segue.\nfunc canPerformUnwindSegueAction(Selector, from: UIViewController, sender: Any?) -> Bool\nCalled on a view controller to determine whether it responds to an unwind action.\nfunc unwind(for: UIStoryboardSegue, towards: UIViewController)\nCalled when an unwind segue transitions to a new view controller."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600533-image",
    "html": "See Also\nCustomizing content\ntext\nThe primary text.\nattributedText\nAn attributed variant of the primary text.\nsecondaryText\nThe secondary text.\nsecondaryAttributedText\nAn attributed variant of the secondary text."
  },
  {
    "title": "initWithContentViewController: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624669-initwithcontentviewcontroller",
    "html": "Parameters\nviewController\n\nThe view controller for managing the popover’s content. This parameter must not be nil.\n\nReturn Value\n\nAn initialized popover controller object.\n\nDiscussion\n\nWhen initializing a popover controller, you must specify the view controller object whose content is to be displayed in the popover. You can change this view controller later by modifying the contentViewController property.\n\nSee Also\nRelated Documentation\nView Controller Catalog for iOS"
  },
  {
    "title": "groupedHeaderConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600532-groupedheaderconfiguration",
    "html": "Return Value\n\nThe default configuration for a header in a grouped list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a header in a table view or collection view list.\n\nFor an appearance consistent with system defaults, display your header in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStyleGrouped\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearanceGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your header using one of the UIBackgroundConfiguration options below. Match the background of your header to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistGroupedHeaderFooterConfiguration\n\n\t\n\nUITableViewStyleGrouped, UITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating header and footer configurations\n+ plainHeaderConfiguration\nCreates the default configuration you use to style a header in a plain list.\n+ plainFooterConfiguration\nCreates the default configuration you use to style a footer in a plain list.\n+ groupedFooterConfiguration\nCreates the default configuration you use to style a footer in a grouped list.\n+ prominentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style a prominent header in an inset grouped list.\n+ extraProminentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style an extra prominent header in an inset grouped list.\n+ sidebarHeaderConfiguration\nCreates the default configuration you use to style a header in a sidebar list."
  },
  {
    "title": "setContentViewController:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624655-setcontentviewcontroller",
    "html": "Parameters\nviewController\n\nThe new view controller whose content should be displayed by the popover.\n\nanimated\n\nSpecify YES if the change of view controllers should be animated or NO if the change should occur immediately.\n\nSee Also\nConfiguring the popover content\ncontentViewController\nThe view controller responsible for the content portion of the popover.\nDeprecated\npopoverContentSize\nThe size of the popover’s content view.\nDeprecated\n- setPopoverContentSize:animated:\nChanges the size of the popover’s content view.\nDeprecated\npassthroughViews\nAn array of views that the user can interact with while the popover is visible.\nDeprecated"
  },
  {
    "title": "plainHeaderConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600537-plainheaderconfiguration",
    "html": "Return Value\n\nThe default configuration for a header in a plain list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a header in a table view or collection view list.\n\nFor an appearance consistent with system defaults, display your header in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStylePlain\n\nUICollectionLayoutListAppearancePlain\n\nUICollectionLayoutListAppearanceSidebarPlain\n\nConfigure the background of your header using one of the UIBackgroundConfiguration options below. Match the background of your header to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistPlainHeaderFooterConfiguration\n\n\t\n\nUITableViewStylePlain, UICollectionLayoutListAppearancePlain, UICollectionLayoutListAppearanceSidebarPlain\n\nSee Also\nCreating header and footer configurations\n+ plainFooterConfiguration\nCreates the default configuration you use to style a footer in a plain list.\n+ groupedHeaderConfiguration\nCreates the default configuration you use to style a header in a grouped list.\n+ groupedFooterConfiguration\nCreates the default configuration you use to style a footer in a grouped list.\n+ prominentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style a prominent header in an inset grouped list.\n+ extraProminentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style an extra prominent header in an inset grouped list.\n+ sidebarHeaderConfiguration\nCreates the default configuration you use to style a header in a sidebar list."
  },
  {
    "title": "setPopoverContentSize:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624670-setpopovercontentsize",
    "html": "Parameters\nsize\n\nThe new size to apply to the content view.\n\nanimated\n\nSpecify YES if you want the change in size to be animated or NO if you want the change to appear immediately.\n\nDiscussion\n\nWhen changing the size of the popover’s content, the width value you specify must be at least 320 points and no more than 600 points. There are no restrictions on the height value. However, both the width and height values you specify may be adjusted to ensure the popup fits on screen and is not covered by the keyboard.\n\nSee Also\nConfiguring the popover content\ncontentViewController\nThe view controller responsible for the content portion of the popover.\nDeprecated\n- setContentViewController:animated:\nSets the view controller responsible for the content portion of the popover.\nDeprecated\npopoverContentSize\nThe size of the popover’s content view.\nDeprecated\npassthroughViews\nAn array of views that the user can interact with while the popover is visible.\nDeprecated"
  },
  {
    "title": "accompaniedSidebarSubtitleCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3667732-accompaniedsidebarsubtitlecellco",
    "html": "Return Value\n\nThe default configuration for a cell that’s in an accompanied sidebar list and contains subtitle text.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell in an accompanied sidebar collection view list, where the list is in the primary column of a split view controller, accompanied by another list in the split view controller’s supplementary column. When you apply this configuration to a cell, the cell displays one primary label and one subtitle label below the primary label. Both labels resize automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in an accompanied sidebar collection view list that you configure with one of the following enumeration cases:\n\nUICollectionLayoutListAppearanceSidebar\n\nUICollectionLayoutListAppearanceSidebarPlain\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistAccompaniedSidebarCellConfiguration\n\n\t\n\nUICollectionLayoutListAppearanceSidebar, UICollectionLayoutListAppearanceSidebarPlain\n\nSee Also\nCreating default cell configurations\n+ cellConfiguration\nCreates the default configuration you use to style a cell in a list.\n+ subtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains subtitle text.\n+ valueCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains side-by-side value text.\n+ sidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ sidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a sidebar list and contains subtitle text.\n+ accompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list."
  },
  {
    "title": "popoverLayoutMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624657-popoverlayoutmargins",
    "html": "Discussion\n\nThe edge inset values are measured in points from the edges of the screen, relative to the current device orientation. Thus, the top-edge inset always reflects the top edge of the device from the user’s perspective, which changes depending on whether the user is holding the device in a portrait or landscape orientation. Remember that the device orientation is not always the same as the interface orientation—that is, the orientation of your window and views. Window orientations are typically fixed and view orientations are controlled by the owning view controller. In addition, if the rotation lock option is engaged, the interface does not change orientation at all, even when the device orientation changes.\n\nThe default edge insets are 10 points along each edge. The popover controller automatically subtracts the status bar from the viable area when determining where to display the popover, so you do not need to factor the status bar height into your insets.\n\nSee Also\nCustomizing the popover appearance\npopoverBackgroundViewClass\nThe class to use for displaying the popover background content.\nDeprecated\nbackgroundColor\nThe color of the popover’s backdrop view.\nDeprecated"
  },
  {
    "title": "popoverBackgroundViewClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624659-popoverbackgroundviewclass",
    "html": "Discussion\n\nThe default value of this property is nil, which indicates that the popover controller should use the default popover appearance. Setting this property to a value other than nil causes the popover controller to use the specified class to draw the popover’s background content. The class you specify must be a subclass of UIPopoverBackgroundView.\n\nSee Also\nCustomizing the popover appearance\npopoverLayoutMargins\nThe margins that define the portion of the screen in which it is permissible to display the popover.\nDeprecated\nbackgroundColor\nThe color of the popover’s backdrop view.\nDeprecated"
  },
  {
    "title": "userInteractionEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/1622577-userinteractionenabled",
    "html": "Discussion\n\nWhen set to NO, touch, press, keyboard, and focus events intended for the view are ignored and removed from the event queue. When set to YES, events are delivered to the view normally. The default value of this property is YES.\n\nDuring an animation, user interactions are temporarily disabled for all views involved in the animation, regardless of the value in this property. You can disable this behavior by specifying the UIViewAnimationOptionAllowUserInteraction option when configuring the animation.\n\nNote\n\nSome UIKit subclasses override this property and return a different default value. See the documentation for that class to determine if it returns a different value.\n\nSee Also\nConfiguring the event-related behavior\nmultipleTouchEnabled\nA Boolean value that indicates whether the view receives more than one touch at a time.\nexclusiveTouch\nA Boolean value that indicates whether the receiver handles touch events exclusively."
  },
  {
    "title": "phAsset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/2890963-phasset",
    "html": "Deprecated\n\nUse PHPickerViewController instead.\n\nDiscussion\n\nThe value of this key is a PHAsset object."
  },
  {
    "title": "mediaMetadata | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619147-mediametadata",
    "html": "Discussion\n\nThis key is valid only when using an image picker whose source type is set to UIImagePickerController.SourceType.camera, and applies only to still images.\n\nThe value for this key is an NSDictionary object that contains the metadata of the photo that was just captured. To store the metadata along with the image in the Camera Roll, use the PHAssetChangeRequest class from the Photos framework."
  },
  {
    "title": "unwindForSegue:towardsViewController: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621473-unwindforsegue",
    "html": "Parameters\nunwindSegue\n\nThe unwind segue being performed.\n\nsubsequentVC\n\nThe view controller closest to the current controller that represents the transition direction. Container view controllers should configure themselves so that this view controller is displayed.\n\nDiscussion\n\nDuring the execution of an unwind segue, UIKit calls this method on any view controllers in the unwind path to give them an opportunity to reconfigure themselves. Container view controllers must implement this method and use to display the view controller in the subsequentVC parameter. For example, a tab bar controller selects the tab containing the specified view controller. Noncontainer view controllers should not override this method.\n\nSee Also\nPerforming segues\n- shouldPerformSegueWithIdentifier:sender:\nDetermines whether the segue with the specified identifier should be performed.\n- prepareForSegue:sender:\nNotifies the view controller that a segue is about to be performed.\n- performSegueWithIdentifier:sender:\nInitiates the segue with the specified identifier from the current view controller's storyboard file.\n- allowedChildViewControllersForUnwindingFromSource:\nReturns an array of child view controllers to search for an unwind segue destination.\n- childViewControllerContainingSegueSource:\nReturns the child view controller that contains the source of the unwind segue.\n- canPerformUnwindSegueAction:fromViewController:sender:\nCalled on a view controller to determine whether it responds to an unwind action."
  },
  {
    "title": "viewWillTransitionToSize:withTransitionCoordinator: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentcontainer/1621466-viewwilltransitiontosize",
    "html": "Required\n\nParameters\nsize\n\nThe new size for the container’s view.\n\ncoordinator\n\nThe transition coordinator object managing the size change. You can use this object to animate your changes or get information about the transition that is in progress.\n\nDiscussion\n\nUIKit calls this method before changing the size of a presented view controller’s view. You can override this method in your own objects and use it to perform additional tasks related to the size change. For example, a container view controller might use this method to override the traits of its embedded child view controllers. Use the provided coordinator object to animate any changes you make.\n\nIf you override this method in your custom view controllers, always call super at some point in your implementation so that UIKit can forward the size change message appropriately. View controllers forward the size change message to their views and child view controllers. Presentation controllers forward the size change to their presented view controller.\n\nSee Also\nResponding to environment changes\n- willTransitionToTraitCollection:withTransitionCoordinator:\nNotifies the container that its trait collection changed.\n\nRequired\n\nRelated Documentation\n- sizeForChildContentContainer:withParentContainerSize:\nReturns the size of the specified child view controller’s content."
  },
  {
    "title": "UIImagePickerController.ImageURLExportPreset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/imageurlexportpreset",
    "html": "Deprecated\n\nUse PHPickerViewController instead.\n\nTopics\nConstants\ncase compatible\nA preset for converting HEIF formatted images to JPEG.\ncase current\nA preset for passing image data as-is to the client.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the export presets\nvar imageExportPreset: UIImagePickerController.ImageURLExportPreset\nThe preset to use when preparing images for export to your app.\nDeprecated\nvar videoExportPreset: String\nThe preset to use when preparing video for export to your app.\nDeprecated"
  },
  {
    "title": "UIImagePickerController.CameraFlashMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/cameraflashmode",
    "html": "Overview\n\nThe constants in this enumeration are for use as values of the cameraFlashMode property.\n\nThe behavior of the flash depends on the camera capture mode.\n\nFor a cameraCaptureMode value of UIImagePickerController.CameraCaptureMode.photo, flash is used to transiently illuminate the subject during still image capture.\n\nFor a cameraCaptureMode value of UIImagePickerController.CameraCaptureMode.video, flash is used to continuously illuminate the subject during movie capture.\n\nFor a given camera on a device, flash may or may not be available. You specify the active camera by way of the cameraDevice property. You can determine if the active camera has flash available by calling the isFlashAvailable(for:) class method.\n\nYou can manipulate the flash directly to provide effects such as a strobe light. Present a picker interface set to use video capture mode. Then, turn the flash LED on or off by setting the cameraFlashMode property to UIImagePickerController.CameraFlashMode.on or UIImagePickerController.CameraFlashMode.off.\n\nTopics\nConstants\ncase off\nSpecifies that flash illumination is always off, no matter what the ambient light conditions are.\ncase auto\nSpecifies that the device should consider ambient light conditions to automatically determine whether or not to use flash illumination.\ncase on\nSpecifies that flash illumination is always on, no matter what the ambient light conditions are.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the flash behavior\nclass func isFlashAvailable(for: UIImagePickerController.CameraDevice) -> Bool\nQueries whether the specified camera has flash illumination capability.\nvar cameraFlashMode: UIImagePickerController.CameraFlashMode\nThe flash mode used by the active camera."
  },
  {
    "title": "UIImagePickerController.CameraCaptureMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/cameracapturemode",
    "html": "Overview\n\nThe constants in this enumeration are for use as values of the cameraCaptureMode property.\n\nTopics\nConstants\ncase photo\nSpecifies that the camera captures still images.\ncase video\nSpecifies that the camera captures movies.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the camera capture mode\nclass func availableCaptureModes(for: UIImagePickerController.CameraDevice) -> [NSNumber]?\nRetrieves the capture modes supported by the specified camera device.\nvar cameraCaptureMode: UIImagePickerController.CameraCaptureMode\nThe capture mode used by the camera."
  },
  {
    "title": "isFlashAvailableForCameraDevice: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619118-isflashavailableforcameradevice",
    "html": "Parameters\ncameraDevice\n\nA UIImagePickerControllerCameraDevice constant indicating the camera whose flash capability you want to know.\n\nReturn Value\n\nYES if cameraDevice can use flash illumination, or NO if it cannot.\n\nSee Also\nConfiguring the flash behavior\ncameraFlashMode\nThe flash mode used by the active camera.\nUIImagePickerControllerCameraFlashMode\nConstants that specify the flash mode to use with the active camera.\nRelated Documentation\ncameraDevice\nThe camera used by the image picker controller."
  },
  {
    "title": "didReorderHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereorderinghandlers/3600518-didreorderhandler",
    "html": "Discussion\n\nThe system calls the didReorderHandler handler after a reordering transaction (NSDiffableDataSourceTransaction) occurs, so you can update your data backing store with information about the changes.\n\n// Allow every item to be reordered\ndataSource.reorderingHandlers.canReorderItem = { item in return true }\n\n\n// Option 1: Update the backing store from a CollectionDifference\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    if let updatedBackingStore = self.backingStore.applying(transaction.difference) {\n        self.backingStore = updatedBackingStore\n    }\n}\n\n\n// Option 2: Update the backing store from the final item identifiers\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    self.backingStore = transaction.finalSnapshot.itemIdentifiers\n}\n\n\nSee Also\nReordering items\ncanReorderItemHandler\nThe handler that determines whether you can reorder a particular item.\nwillReorderHandler\nThe handler that prepares the diffable data source for reordering its items."
  },
  {
    "title": "snapshotForExpandingParentItemHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcesectionsnapshothandlers/3600523-snapshotforexpandingparentitemha",
    "html": "Discussion\n\nUse the snapshotForExpandingParentItemHandler handler to customize the snapshot that returns when a particular parent item is expanded.\n\n// Allow every item to be collapsed\ndataSource.sectionSnapshotHandlers.shouldCollapseItem = { item in return true }\n\n\ndataSource.sectionSnapshotHandlers.snapshotForExpandingParent = {\n    parent, existingSnapshot -> NSDiffableDataSourceSectionSnapshot<String> in\n    \n    // Return child snapshot for the parent, or just existingSnapshot\n}\n\n\nSee Also\nExpanding and collapsing items\nshouldCollapseItemHandler\nThe handler that determines whether a particular item is collapsable.\nshouldExpandItemHandler\nThe handler that determines whether a particular item is expandable.\nwillCollapseItemHandler\nThe handler that prepares the diffable data source for collapsing an item.\nwillExpandItemHandler\nThe handler that prepares the diffable data source for expanding an item."
  },
  {
    "title": "UIContentUnavailableImageProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableimageproperties",
    "html": "Topics\nInstance Properties\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors with the Invert Colors accessibility feature enabled.\ncornerRadius\nThe preferred corner radius for the image.\nmaximumSize\nA maximum size for the image.\npreferredSymbolConfiguration\nThe symbol configuration for the image.\ntintColor\nThe tint color applied to the image view.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nUnavailable content configurations\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view.\nUIContentUnavailableConfigurationState\nAn object that encapsulates state for a content-unavailable view.\nUIContentUnavailableButtonProperties\nProperties configuring the appearance and behavior of a button in a content-unavailable view.\nUIContentUnavailableTextProperties\nProperties configuring the appearance of text in a content-unavailable view.\nUIContentUnavailableAlignment\nDefines the alignment of views in a content-unavailable view."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620134-highlighted",
    "html": "Discussion\n\nThis property manages the highlight state of the cell only. The default value of this property is NO, which indicates that the cell isn’t in a highlighted state.\n\nYou typically don’t set the value of this property directly. Instead, the preferred way to select the cell and highlight it’s to use the selection methods of the collection view object.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nUICollectionViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state.\nselected\nThe selection state of the cell."
  },
  {
    "title": "selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/1620130-selected",
    "html": "Discussion\n\nThis property manages the selection state of the cell only. The default value of this property is NO, which indicates an unselected state.\n\nYou typically don’t set the value of this property directly. Changing the value of this property programmatically doesn’t change the appearance of the cell. The preferred way to select the cell and highlight it’s to use the selection methods of the collection view object.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nUICollectionViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state.\nhighlighted\nThe highlight state of the cell."
  },
  {
    "title": "hyphen | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870054-hyphen",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "lowercaseAlpha | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870050-lowercasealpha",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "lowercaseRoman | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870044-lowercaseroman",
    "html": "Discussion\n\nLowercase Roman numeral markers follow the pattern i, ii, iii, iv, and so on.\n\nSee Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "disc | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870041-disc",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "lowercaseLatin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870049-lowercaselatin",
    "html": "Discussion\n\nLowercase Latin alphabetical markers follow the pattern a, b, c, and so on.\n\nSee Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "lowercaseHexadecimal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat/2870045-lowercasehexadecimal",
    "html": "See Also\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item."
  },
  {
    "title": "NSKernAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nskernattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSNumber object containing a floating-point value. This value specifies the number of points by which to adjust kern-pair characters. Kerning prevents unwanted space from occurring between specific characters and depends on the font. The value 0 means kerning is disabled. The default value for this attribute is 0.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "registerForRemoteNotificationTypes: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623010-registerforremotenotificationtyp",
    "html": "Deprecated\n\nUse the registerForRemoteNotifications method instead.\n\nParameters\ntypes\n\nA bit mask specifying the types of notifications the app accepts. For a list of values, see UIRemoteNotificationType.\n\nDiscussion\n\nWhen you send this message, the device initiates the registration process with Apple Push Notification service. If it succeeds, the app delegate receives a device token in the application:didRegisterForRemoteNotificationsWithDeviceToken: method; if registration doesn’t succeed, the delegate is informed via the application:didFailToRegisterForRemoteNotificationsWithError: method. If the app delegate receives a device token, it should connect with its provider and pass it the token.\n\niOS does not display or play notification types specified in the notification payload that are not one of the requested ones. For example, if alert messages are not one of the accepted notification types, iOS does not display an alert even if one is specified in the notification payload. To find out what the app’s current notification types are, call the enabledRemoteNotificationTypes method.\n\nSee Also\nDeprecated methods\n- requestSceneSessionActivation:userActivity:options:errorHandler:\nAsks the system to activate an existing scene, or create a new scene and associate it with your app.\nDeprecated\n- beginIgnoringInteractionEvents\nTells the receiver to suspend the handling of touch-related events.\nDeprecated\n- endIgnoringInteractionEvents\nTells the receiver to resume the handling of touch-related events.\nDeprecated\n- setMinimumBackgroundFetchInterval:\nSpecifies the minimum amount of time that must elapse between background fetch operations.\nDeprecated\n- scheduleLocalNotification:\nSchedules a local notification for delivery at its encapsulated date and time.\nDeprecated\n- presentLocalNotificationNow:\nPresents a local notification immediately.\nDeprecated\n- cancelLocalNotification:\nCancels the delivery of the specified scheduled local notification.\nDeprecated\n- cancelAllLocalNotifications\nCancels the delivery of all scheduled local notifications.\nDeprecated\n- setKeepAliveTimeout:handler:\nConfigures a periodic handler for VoIP apps in older versions of iOS.\nDeprecated\nUIMinimumKeepAliveTimeout\nThe minimum amount of time (measured in seconds) an app may run a critical background task in the background.\nDeprecated\n- clearKeepAliveTimeout\nRemoves a previously installed periodic handler block.\nDeprecated\n- setStatusBarHidden:animated:\nHides or shows the status bar, optionally animating the transition.\nDeprecated\n- setStatusBarHidden:withAnimation:\nHides or shows the status bar, optionally animating the transition.\nDeprecated\n- setStatusBarStyle:animated:\nSets the style of the status bar, optionally animating the transition to the new style.\nDeprecated\n- setStatusBarOrientation:animated:\nSets the app's status bar to the specified orientation, optionally animating the transition.\nDeprecated\n- registerUserNotificationSettings:\nRegisters your preferred options for notifying the user.\nDeprecated\n- enabledRemoteNotificationTypes\nReturns the types of notifications the app accepts.\nDeprecated\nUIRemoteNotificationType\nConstants indicating the types of notifications the app may display to the user.\nDeprecated\n- openURL:\nAttempts to open the resource at the specified URL.\nDeprecated\n- setNewsstandIconImage:\nSets the icon of a Newsstand app to an image depicting the current issue of a publication.\nDeprecated\nRelated Documentation"
  },
  {
    "title": "valueCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600550-valuecellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell that’s in a list and contains side-by-side value text.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell in a list. When you apply this configuration to a cell, the cell displays one primary label and one value label next to the main label in the trailing direction. Both labels resize automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStylePlain\n\nUITableViewStyleGrouped\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearancePlain\n\nUICollectionLayoutListAppearanceGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistPlainCellConfiguration\n\n\t\n\nUITableViewStylePlain, UICollectionLayoutListAppearancePlain\n\n\n\n\nlistGroupedCellConfiguration\n\n\t\n\nUITableViewStyleGrouped, UITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating default cell configurations\n+ cellConfiguration\nCreates the default configuration you use to style a cell in a list.\n+ subtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains subtitle text.\n+ sidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ sidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a sidebar list and contains subtitle text.\n+ accompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list.\n+ accompaniedSidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in an accompanied sidebar list and contains subtitle text."
  },
  {
    "title": "UIApplicationWillChangeStatusBarOrientationNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationwillchangestatusbarorientationnotification",
    "html": "Discussion\n\nThe userInfo dictionary contains an NSNumber that encapsulates a UIInterfaceOrientation value (see UIInterfaceOrientation). Use UIApplicationStatusBarOrientationUserInfoKey to access this value.\n\nSee Also\nDeprecated notifications\nUIApplicationWillChangeStatusBarFrameNotification\nPosted when the app is about to change the frame of the status bar.\nDeprecated\nUIApplicationDidChangeStatusBarFrameNotification\nPosted when the frame of the status bar changes.\nDeprecated\nUIApplicationDidChangeStatusBarOrientationNotification\nPosted when the orientation of the app’s user interface changes.\nDeprecated"
  },
  {
    "title": "background | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750780-background",
    "html": "Discussion\n\nThe button lays out foreground configuration elements such as title, subtitle, and image on top of background elements. Use this property for detailed control over the background.\n\nSee Also\nConfiguring the button background\ncornerStyle\nThe button style that controls the display behavior of the background corner radius.\nUIButtonConfigurationCornerStyle\nSettings that determine the appearance of the background corner radius."
  },
  {
    "title": "UICollectionViewCellConfigurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcellconfigurationupdatehandler",
    "html": "Parameters\ncell\n\nThe collection view cell to configure.\n\nstate\n\nThe new state to use for updating the cell’s configuration.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nselected\nThe selection state of the cell.\nhighlighted\nThe highlight state of the cell."
  },
  {
    "title": "textToSecondaryTextHorizontalPadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600548-texttosecondarytexthorizontalpad",
    "html": "Discussion\n\nThis value only applies when there’s both text and secondary text, and they’re in a side-by-side layout that prefersSideBySideTextAndSecondaryText specifies.\n\nSee Also\nCustomizing layout\naxesPreservingSuperviewLayoutMargins\nA Boolean value that detemines whether the content view preserves the layout margins that it inherits from its superview on the horizontal or vertical axes.\ndirectionalLayoutMargins\nThe margins between the content and the edges of the content view.\nprefersSideBySideTextAndSecondaryText\nA Boolean value that determines whether the configuration positions the text and secondary text side by side.\nimageToTextPadding\nThe padding between the image and text.\ntextToSecondaryTextVerticalPadding\nThe vertical padding between the text and secondary text."
  },
  {
    "title": "UIContentUnavailableButtonProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailablebuttonproperties",
    "html": "Topics\nInstance Properties\nenabled\nA Boolean value that enables and disables the button.\nmenu\nA menu that the button displays.\nprimaryAction\nThe action to perform for the primary action control event.\nrole\nThe role of the button.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nUnavailable content configurations\nUIContentUnavailableConfiguration\nA content configuration for a content-unavailable view.\nUIContentUnavailableConfigurationState\nAn object that encapsulates state for a content-unavailable view.\nUIContentUnavailableImageProperties\nProperties configuring the appearance of images in a content-unavailable view.\nUIContentUnavailableTextProperties\nProperties configuring the appearance of text in a content-unavailable view.\nUIContentUnavailableAlignment\nDefines the alignment of views in a content-unavailable view."
  },
  {
    "title": "updateConfigurationUsingState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600433-updateconfigurationusingstate",
    "html": "Discussion\n\nAvoid calling this method directly. Instead, use setNeedsUpdateConfiguration to request an update.\n\nOverride this method in a subclass to update the cell’s configuration using the provided state.\n\nSee Also\nManaging the state\nconfigurationState\nThe current configuration state of the cell.\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nUICollectionViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state.\nselected\nThe selection state of the cell.\nhighlighted\nThe highlight state of the cell."
  },
  {
    "title": "prefersSideBySideTextAndSecondaryText | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600538-preferssidebysidetextandsecondar",
    "html": "Discussion\n\nWhen this value is YES, the configuration positions the text and secondary text side by side if there’s sufficient space. Otherwise, the configuration stacks the text in a vertical layout.\n\nSee Also\nCustomizing layout\naxesPreservingSuperviewLayoutMargins\nA Boolean value that detemines whether the content view preserves the layout margins that it inherits from its superview on the horizontal or vertical axes.\ndirectionalLayoutMargins\nThe margins between the content and the edges of the content view.\nimageToTextPadding\nThe padding between the image and text.\ntextToSecondaryTextHorizontalPadding\nThe minimum horizontal padding between the text and secondary text.\ntextToSecondaryTextVerticalPadding\nThe vertical padding between the text and secondary text."
  },
  {
    "title": "secondaryAttributedText | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600539-secondaryattributedtext",
    "html": "Discussion\n\nThis value supersedes the secondaryText property.\n\nSee Also\nCustomizing content\nimage\nThe image to display.\ntext\nThe primary text.\nattributedText\nAn attributed variant of the primary text.\nsecondaryText\nThe secondary text."
  },
  {
    "title": "UIButtonConfigurationIndicatorNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationindicator/uibuttonconfigurationindicatornone",
    "html": "See Also\nIndicator styles\nUIButtonConfigurationIndicatorAutomatic\nA constant that automatically determines an indicator style according to the button’s properties.\nUIButtonConfigurationIndicatorPopup\nA constant that shows a popup-style indicator."
  },
  {
    "title": "UIButtonConfigurationCornerStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationcornerstyle",
    "html": "Overview\n\nUse this property to control how the button uses the cornerRadius property of the button’s background.\n\nTopics\nCorner styles\nUIButtonConfigurationCornerStyleDynamic\nA style that adjusts the background corner radius for dynamic type.\nUIButtonConfigurationCornerStyleFixed\nA style that uses the background corner radius without modification.\nUIButtonConfigurationCornerStyleCapsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\nUIButtonConfigurationCornerStyleLarge\nA style that ignores the background corner radius and uses a large system-defined corner radius.\nUIButtonConfigurationCornerStyleMedium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\nUIButtonConfigurationCornerStyleSmall\nA style that ignores the background corner radius and uses a small system-defined corner radius.\nSee Also\nConfiguring the button background\nbackground\nThe configuration to customize the button background.\ncornerStyle\nThe button style that controls the display behavior of the background corner radius."
  },
  {
    "title": "defaultBackgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/4013312-defaultbackgroundconfiguration",
    "html": "Return Value\n\nA default background configuration. The system determines default values for the configuration according to the section where the cell appears.\n\nSee Also\nConfiguring the background\nbackgroundConfiguration\nThe current background configuration of the cell.\nautomaticallyUpdatesBackgroundConfiguration\nA Boolean value that determines whether the cell automatically updates its background configuration when its state changes.\nbackgroundView\nThe view that displays behind the cell’s other content.\nselectedBackgroundView\nThe view that displays just above the background view for a selected cell."
  },
  {
    "title": "presentPopoverFromRect:inView:permittedArrowDirections:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624660-presentpopoverfromrect",
    "html": "Parameters\nrect\n\nThe rectangle in view at which to anchor the popover window.\n\nview\n\nThe view containing the anchor rectangle for the popover.\n\narrowDirections\n\nThe arrow directions the popover is permitted to use. You can use this value to force the popover to be positioned on a specific side of the rectangle. However, it is generally better to specify UIPopoverArrowDirectionAny and let the popover decide the best placement. You must not specify UIPopoverArrowDirectionUnknown for this parameter.\n\nanimated\n\nSpecify YES to animate the presentation of the popover or NO to display it immediately.\n\nSee Also\nPresenting and dismissing the popover\n- presentPopoverFromBarButtonItem:permittedArrowDirections:animated:\nDisplays the popover and anchors it to the specified bar button item.\nDeprecated\n- dismissPopoverAnimated:\nDismisses the popover programmatically.\nDeprecated"
  },
  {
    "title": "attributedText | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600527-attributedtext",
    "html": "Discussion\n\nThis value supersedes the text property.\n\nSee Also\nCustomizing content\nimage\nThe image to display.\ntext\nThe primary text.\nsecondaryText\nThe secondary text.\nsecondaryAttributedText\nAn attributed variant of the secondary text."
  },
  {
    "title": "plainFooterConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600536-plainfooterconfiguration",
    "html": "Return Value\n\nThe default configuration for a footer in a plain list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a footer in a table view or collection view list.\n\nFor an appearance consistent with system defaults, display your footer in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStylePlain\n\nUICollectionLayoutListAppearancePlain\n\nUICollectionLayoutListAppearanceSidebarPlain\n\nConfigure the background of your footer using one of the UIBackgroundConfiguration options below. Match the background of your footer to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistPlainHeaderFooterConfiguration\n\n\t\n\nUITableViewStylePlain, UICollectionLayoutListAppearancePlain, UICollectionLayoutListAppearanceSidebarPlain\n\nSee Also\nCreating header and footer configurations\n+ plainHeaderConfiguration\nCreates the default configuration you use to style a header in a plain list.\n+ groupedHeaderConfiguration\nCreates the default configuration you use to style a header in a grouped list.\n+ groupedFooterConfiguration\nCreates the default configuration you use to style a footer in a grouped list.\n+ prominentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style a prominent header in an inset grouped list.\n+ extraProminentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style an extra prominent header in an inset grouped list.\n+ sidebarHeaderConfiguration\nCreates the default configuration you use to style a header in a sidebar list."
  },
  {
    "title": "extraProminentInsetGroupedHeaderConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3752190-extraprominentinsetgroupedheader",
    "html": "Return Value\n\nThe default configuration for an extra prominent header in an inset grouped list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a header in a table view or collection view list.\n\nFor an appearance consistent with system defaults, display your header in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your header using one of the UIBackgroundConfiguration options below. Match the background of your header to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistGroupedHeaderFooterConfiguration\n\n\t\n\nUITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating header and footer configurations\n+ plainHeaderConfiguration\nCreates the default configuration you use to style a header in a plain list.\n+ plainFooterConfiguration\nCreates the default configuration you use to style a footer in a plain list.\n+ groupedHeaderConfiguration\nCreates the default configuration you use to style a header in a grouped list.\n+ groupedFooterConfiguration\nCreates the default configuration you use to style a footer in a grouped list.\n+ prominentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style a prominent header in an inset grouped list.\n+ sidebarHeaderConfiguration\nCreates the default configuration you use to style a header in a sidebar list."
  },
  {
    "title": "prominentInsetGroupedHeaderConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3752191-prominentinsetgroupedheaderconfi",
    "html": "Return Value\n\nThe default configuration for a prominent header in an inset grouped list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a header in a table view or collection view list.\n\nFor an appearance consistent with system defaults, display your header in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your header using one of the UIBackgroundConfiguration options below. Match the background of your header to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistGroupedHeaderFooterConfiguration\n\n\t\n\nUITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating header and footer configurations\n+ plainHeaderConfiguration\nCreates the default configuration you use to style a header in a plain list.\n+ plainFooterConfiguration\nCreates the default configuration you use to style a footer in a plain list.\n+ groupedHeaderConfiguration\nCreates the default configuration you use to style a header in a grouped list.\n+ groupedFooterConfiguration\nCreates the default configuration you use to style a footer in a grouped list.\n+ extraProminentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style an extra prominent header in an inset grouped list.\n+ sidebarHeaderConfiguration\nCreates the default configuration you use to style a header in a sidebar list."
  },
  {
    "title": "groupedFooterConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600531-groupedfooterconfiguration",
    "html": "Return Value\n\nThe default configuration for a footer in a grouped list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a footer in a table view or collection view list.\n\nFor an appearance consistent with system defaults, display your footer in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStyleGrouped\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearanceGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your footer using one of the UIBackgroundConfiguration options below. Match the background of your footer to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistGroupedHeaderFooterConfiguration\n\n\t\n\nUITableViewStyleGrouped, UITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating header and footer configurations\n+ plainHeaderConfiguration\nCreates the default configuration you use to style a header in a plain list.\n+ plainFooterConfiguration\nCreates the default configuration you use to style a footer in a plain list.\n+ groupedHeaderConfiguration\nCreates the default configuration you use to style a header in a grouped list.\n+ prominentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style a prominent header in an inset grouped list.\n+ extraProminentInsetGroupedHeaderConfiguration\nCreates the default configuration you use to style an extra prominent header in an inset grouped list.\n+ sidebarHeaderConfiguration\nCreates the default configuration you use to style a header in a sidebar list."
  },
  {
    "title": "UIInterfaceOrientationPortrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinterfaceorientation/uiinterfaceorientationportrait",
    "html": "See Also\nOrientations\nUIInterfaceOrientationUnknown\nThe orientation of the device is unknown.\nUIInterfaceOrientationPortraitUpsideDown\nThe device is in portrait mode but is upside down, with the device upright and the Home button at the top.\nUIInterfaceOrientationLandscapeLeft\nThe device is in landscape mode, with the device upright and the Home button on the left.\nUIInterfaceOrientationLandscapeRight\nThe device is in landscape mode, with the device upright and the Home button on the right."
  },
  {
    "title": "mediaURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619149-mediaurl",
    "html": "Discussion\n\nThe value for this key is an NSURL object."
  },
  {
    "title": "imageURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/2897358-imageurl",
    "html": "Discussion\n\nThe value of this key is a NSURL that you can use to retrieve the image file. The image in this file matches the image found in the originalImage key of the dictionary."
  },
  {
    "title": "livePhoto | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619119-livephoto",
    "html": "Discussion\n\nA Live Photo is a picture, that includes motion and sound from the moments just before and after its capture. On compatible devices, the Camera app captures all photos as Live Photos by default, but the imagePickerController(_:didFinishPicking:editingInfo:) method’s image parameter contains only the still image representation.\n\nTo obtain the motion and sound content of a live photo for display (using the PHLivePhotoView class), include the kUTTypeImage and kUTTypeLivePhoto identifiers in the allowed media types when configuring an image picker controller. When the user picks or captures a Live Photo, the editingInfo dictionary contains the livePhoto key, with a PHLivePhoto representation of the photo as the corresponding value."
  },
  {
    "title": "referenceURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619171-referenceurl",
    "html": "Deprecated\n\nUse PHPickerViewController instead.\n\nDiscussion\n\nAfter the user edits a picked item—such as by cropping an image or trimming a movie—the URL continues to point to the original version of the picked item.\n\nThe value for this key is an NSURL object."
  },
  {
    "title": "mediaType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619121-mediatype",
    "html": "Discussion\n\nThe value for this key is an NSString object containing a type code such as kUTTypeImage or kUTTypeMovie."
  },
  {
    "title": "cropRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619150-croprect",
    "html": "Discussion\n\nThe value for this key is an NSValue object containing a CGRect opaque type."
  },
  {
    "title": "editedImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619134-editedimage",
    "html": "Discussion\n\nThe value for this key is a UIImage object."
  },
  {
    "title": "UICollectionViewCell.DragState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/dragstate",
    "html": "Topics\nConstants\ncase none\nThe cell isn’t involved in a drag.\ncase lifting\nThe cell is being animated off of the surface of the collection view.\ncase dragging\nThe cell is being dragged.\nRelationships\nConforms To\nSendable\nSee Also\nManaging drag state changes\nfunc dragStateDidChange(UICollectionViewCell.DragState)\nCalled when the drag state of the cell changes."
  },
  {
    "title": "popoverVisible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624656-popovervisible",
    "html": "Discussion\n\nYou must present the popover to make it visible.\n\nSee Also\nGetting the popover attributes\npopoverArrowDirection\nThe direction of the popover’s arrow.\nDeprecated"
  },
  {
    "title": "instantiateViewControllerWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistoryboard/1616214-instantiateviewcontrollerwithide",
    "html": "Parameters\nidentifier\n\nAn identifier string that uniquely identifies the view controller in the storyboard file. At design time, put this same string in the Storyboard ID attribute of your view controller in Interface Builder. This identifier is not a property of the view controller object itself. The storyboard uses it to locate the appropriate data for your view controller.\n\nIf the specified identifier does not exist in the storyboard file, this method raises an exception.\n\nReturn Value\n\nThe view controller corresponding to the specified identifier string. If no view controller has the given identifier, this method throws an exception.\n\nDiscussion\n\nUse this method to create a view controller object to present programmatically. Each time you call this method, it creates a new instance of the view controller using the initWithCoder: method.\n\nSee Also\nInstantiating Storyboard View Controllers\n- instantiateViewControllerWithIdentifier:creator:\nCreates the specified view controller from the storyboard and initializes it using your custom initialization code.\nUIStoryboardViewControllerCreator\nA handler block that contains the custom initialization code for a view controller you instantiate from a storyboard."
  },
  {
    "title": "buttonSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750783-buttonsize",
    "html": "Discussion\n\nThe size indicates a system-defined size you prefer for this button. The exact size of the button may change regardless of this value.\n\nSee Also\nConfiguring layout\nUIButtonConfigurationSize\nA predefined size for button elements.\ncontentInsets\nThe distance from the button’s content area to its bounds.\n- setDefaultContentInsets\nRestores the default content insets."
  },
  {
    "title": "titleLineBreakMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/4133941-titlelinebreakmode",
    "html": "Discussion\n\nWord and character wrapping modes enable multiline text, while other modes restrict the text to a single line.\n\nThe default value is NSLineBreakByWordWrapping.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "subtitleLineBreakMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/4133940-subtitlelinebreakmode",
    "html": "Discussion\n\nWord and character wrapping modes enable multiline text, while other modes restrict the text to a single line.\n\nThe default value is NSLineBreakByWordWrapping.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title."
  },
  {
    "title": "setDefaultContentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867093-setdefaultcontentinsets",
    "html": "See Also\nConfiguring layout\nbuttonSize\nA size that requests a preferred size for the button.\nUIButtonConfigurationSize\nA predefined size for button elements.\ncontentInsets\nThe distance from the button’s content area to its bounds."
  },
  {
    "title": "statusBarFrameUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623119-statusbarframeuserinfokey",
    "html": "See Also\nDeprecated properties\nvar applicationIconBadgeNumber: Int\nThe number currently set as the badge of the app icon on the Home screen.\nDeprecated\nclass let statusBarOrientationUserInfoKey: String\nA key whose value is an NSNumber object that encapsulates a UIInterfaceOrientation value indicating the current orientation (see UIInterfaceOrientation). This key is used with didChangeStatusBarOrientationNotification and willChangeStatusBarOrientationNotification notifications.\nDeprecated\nvar currentUserNotificationSettings: UIUserNotificationSettings?\nReturns the user notification settings for the app.\nDeprecated\nvar isIgnoringInteractionEvents: Bool\nA Boolean value that indicates whether the receiver is ignoring events initiated by touches on the screen.\nDeprecated\nvar isNetworkActivityIndicatorVisible: Bool\nA Boolean value that turns an indicator of network activity on or off.\nDeprecated\nvar isStatusBarHidden: Bool\nA Boolean value that determines whether the status bar is hidden.\nDeprecated\nvar keyWindow: UIWindow?\nThe app's key window.\nDeprecated\nvar scheduledLocalNotifications: [UILocalNotification]?\nAll currently scheduled local notifications.\nDeprecated\nvar statusBarFrame: CGRect\nThe frame rectangle defining the area of the status bar.\nDeprecated\nvar statusBarOrientation: UIInterfaceOrientation\nThe current orientation of the app’s status bar.\nDeprecated\nvar statusBarOrientationAnimationDuration: TimeInterval\nThe animation duration in seconds for the status bar during a 90 degree orientation change.\nDeprecated\nvar statusBarStyle: UIStatusBarStyle\nThe current style of the status bar.\nDeprecated\nvar windows: [UIWindow]\nThe app’s visible and hidden windows.\nDeprecated"
  },
  {
    "title": "accompaniedSidebarCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3667731-accompaniedsidebarcellconfigurat",
    "html": "Return Value\n\nThe default configuration for a cell in an accompanied sidebar list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell in an accompanied sidebar collection view list, where the list is in the primary column of a split view controller, accompanied by another list in the split view controller’s supplementary column. When you apply this configuration to a cell, the cell displays one label, which resizes automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in an accompanied sidebar collection view list that you configure with one of the following enumeration cases:\n\nUICollectionLayoutListAppearanceSidebar\n\nUICollectionLayoutListAppearanceSidebarPlain\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistAccompaniedSidebarCellConfiguration\n\n\t\n\nUICollectionLayoutListAppearanceSidebar, UICollectionLayoutListAppearanceSidebarPlain\n\nSee Also\nCreating default cell configurations\n+ cellConfiguration\nCreates the default configuration you use to style a cell in a list.\n+ subtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains subtitle text.\n+ valueCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains side-by-side value text.\n+ sidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ sidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a sidebar list and contains subtitle text.\n+ accompaniedSidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in an accompanied sidebar list and contains subtitle text."
  },
  {
    "title": "UIApplicationDidChangeStatusBarFrameNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdidchangestatusbarframenotification",
    "html": "Discussion\n\nThe userInfo dictionary contains an NSValue object that encapsulates a CGRect structure expressing the location and size of the new status bar frame. Use UIApplicationStatusBarFrameUserInfoKey to access this value.\n\nSee Also\nDeprecated notifications\nUIApplicationWillChangeStatusBarFrameNotification\nPosted when the app is about to change the frame of the status bar.\nDeprecated\nUIApplicationWillChangeStatusBarOrientationNotification\nPosted when the app is about to change the orientation of its interface.\nDeprecated\nUIApplicationDidChangeStatusBarOrientationNotification\nPosted when the orientation of the app’s user interface changes.\nDeprecated"
  },
  {
    "title": "cellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600529-cellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell in a list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell. When you apply this configuration to a cell, the cell displays one label, which resizes automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStylePlain\n\nUITableViewStyleGrouped\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearancePlain\n\nUICollectionLayoutListAppearanceGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistPlainCellConfiguration\n\n\t\n\nUITableViewStylePlain, UICollectionLayoutListAppearancePlain\n\n\n\n\nlistGroupedCellConfiguration\n\n\t\n\nUITableViewStyleGrouped, UITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating default cell configurations\n+ subtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains subtitle text.\n+ valueCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains side-by-side value text.\n+ sidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ sidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a sidebar list and contains subtitle text.\n+ accompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list.\n+ accompaniedSidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in an accompanied sidebar list and contains subtitle text."
  },
  {
    "title": "subtitleCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600545-subtitlecellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell that’s in a list and contains subtitle text.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell in a list. When you apply this configuration to a cell, the cell displays one primary label and one subtitle label below the primary label. Both labels resize automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in a table view or collection view list that you configure with one of the following enumeration cases:\n\nUITableViewStylePlain\n\nUITableViewStyleGrouped\n\nUITableViewStyleInsetGrouped\n\nUICollectionLayoutListAppearancePlain\n\nUICollectionLayoutListAppearanceGrouped\n\nUICollectionLayoutListAppearanceInsetGrouped\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistPlainCellConfiguration\n\n\t\n\nUITableViewStylePlain, UICollectionLayoutListAppearancePlain\n\n\n\n\nlistGroupedCellConfiguration\n\n\t\n\nUITableViewStyleGrouped, UITableViewStyleInsetGrouped, UICollectionLayoutListAppearanceGrouped, UICollectionLayoutListAppearanceInsetGrouped\n\nSee Also\nCreating default cell configurations\n+ cellConfiguration\nCreates the default configuration you use to style a cell in a list.\n+ valueCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains side-by-side value text.\n+ sidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ sidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a sidebar list and contains subtitle text.\n+ accompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list.\n+ accompaniedSidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in an accompanied sidebar list and contains subtitle text."
  },
  {
    "title": "sidebarSubtitleCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600544-sidebarsubtitlecellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell that’s in a sidebar list and contains subtitle text.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell in a sidebar collection view list. When you apply this configuration to a cell, the cell displays one primary label and one subtitle label below the primary label. Both labels resize automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in a sidebar collection view list that you configure with one of the following enumeration cases:\n\nUICollectionLayoutListAppearanceSidebar\n\nUICollectionLayoutListAppearanceSidebarPlain\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistSidebarCellConfiguration\n\n\t\n\nUICollectionLayoutListAppearanceSidebar, UICollectionLayoutListAppearanceSidebarPlain\n\nSee Also\nCreating default cell configurations\n+ cellConfiguration\nCreates the default configuration you use to style a cell in a list.\n+ subtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains subtitle text.\n+ valueCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains side-by-side value text.\n+ sidebarCellConfiguration\nCreates the default configuration you use to style a cell in a sidebar list.\n+ accompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list.\n+ accompaniedSidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in an accompanied sidebar list and contains subtitle text."
  },
  {
    "title": "sidebarCellConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600542-sidebarcellconfiguration",
    "html": "Return Value\n\nThe default configuration for a cell in a sidebar list.\n\nDiscussion\n\nCreate this configuration to update the content and styling of a cell in a sidebar collection view list. When you apply this configuration to a cell, the cell displays one label, which resizes automatically based on the length of the text you provide and the device’s Dynamic Type and accessibility settings.\n\nFor an appearance consistent with system defaults, display your cell in a sidebar collection view list that you configure with one of the following enumeration cases:\n\nUICollectionLayoutListAppearanceSidebar\n\nUICollectionLayoutListAppearanceSidebarPlain\n\nConfigure the background of your cell using one of the UIBackgroundConfiguration options below. Match the background of your cell to the corresponding table view or collection view styles as follows:\n\nBackground configuration option\n\n\t\n\nMatching table view or collection view styles\n\n\n\n\nlistSidebarCellConfiguration\n\n\t\n\nUICollectionLayoutListAppearanceSidebar, UICollectionLayoutListAppearanceSidebarPlain\n\nSee Also\nCreating default cell configurations\n+ cellConfiguration\nCreates the default configuration you use to style a cell in a list.\n+ subtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains subtitle text.\n+ valueCellConfiguration\nCreates the default configuration you use to style a cell that’s in a list and contains side-by-side value text.\n+ sidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in a sidebar list and contains subtitle text.\n+ accompaniedSidebarCellConfiguration\nCreates the default configuration you use to style a cell in an accompanied sidebar list.\n+ accompaniedSidebarSubtitleCellConfiguration\nCreates the default configuration you use to style a cell that’s in an accompanied sidebar list and contains subtitle text."
  },
  {
    "title": "ignoringInteractionEvents | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/2097536-ignoringinteractionevents",
    "html": "Discussion\n\nThe value of this property is\n\nYES if the receiver is ignoring interaction events and if the nested beginIgnoringInteractionEvents and endIgnoringInteractionEvents calls are at least one level deep; otherwise, NO.\n\nSee Also\nDeprecated properties\napplicationIconBadgeNumber\nThe number currently set as the badge of the app icon on the Home screen.\nDeprecated\nUIApplicationStatusBarFrameUserInfoKey\nA key whose value is an NSValue object that encapsulates a CGRect structure expressing the location and size of the new status bar frame. This key is used with UIApplicationDidChangeStatusBarFrameNotification and UIApplicationWillChangeStatusBarFrameNotification notifications.\nDeprecated\nUIApplicationStatusBarOrientationUserInfoKey\nA key whose value is an NSNumber object that encapsulates a UIInterfaceOrientation value indicating the current orientation (see UIInterfaceOrientation). This key is used with UIApplicationDidChangeStatusBarOrientationNotification and UIApplicationWillChangeStatusBarOrientationNotification notifications.\nDeprecated\ncurrentUserNotificationSettings\nReturns the user notification settings for the app.\nDeprecated\nnetworkActivityIndicatorVisible\nA Boolean value that turns an indicator of network activity on or off.\nDeprecated\nproximitySensingEnabled\nA Boolean value that determines whether proximity sensing is enabled.\nDeprecated\nstatusBarHidden\nA Boolean value that determines whether the status bar is hidden.\nDeprecated\nkeyWindow\nThe app's key window.\nDeprecated\nscheduledLocalNotifications\nAll currently scheduled local notifications.\nDeprecated\nstatusBarFrame\nThe frame rectangle defining the area of the status bar.\nDeprecated\nstatusBarOrientation\nThe current orientation of the app’s status bar.\nDeprecated\nstatusBarOrientationAnimationDuration\nThe animation duration in seconds for the status bar during a 90 degree orientation change.\nDeprecated\nstatusBarStyle\nThe current style of the status bar.\nDeprecated\nwindows\nThe app’s visible and hidden windows.\nDeprecated"
  },
  {
    "title": "networkActivityIndicatorVisible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623102-networkactivityindicatorvisible",
    "html": "Discussion\n\nSpecify YES if the app should show network activity and NO if it should not. The default value is NO. A spinning indicator in the status bar shows network activity. The app may explicitly hide or show this indicator.\n\nSee Also\nDeprecated properties\napplicationIconBadgeNumber\nThe number currently set as the badge of the app icon on the Home screen.\nDeprecated\nUIApplicationStatusBarFrameUserInfoKey\nA key whose value is an NSValue object that encapsulates a CGRect structure expressing the location and size of the new status bar frame. This key is used with UIApplicationDidChangeStatusBarFrameNotification and UIApplicationWillChangeStatusBarFrameNotification notifications.\nDeprecated\nUIApplicationStatusBarOrientationUserInfoKey\nA key whose value is an NSNumber object that encapsulates a UIInterfaceOrientation value indicating the current orientation (see UIInterfaceOrientation). This key is used with UIApplicationDidChangeStatusBarOrientationNotification and UIApplicationWillChangeStatusBarOrientationNotification notifications.\nDeprecated\ncurrentUserNotificationSettings\nReturns the user notification settings for the app.\nDeprecated\nignoringInteractionEvents\nA Boolean value that indicates whether the receiver is ignoring events initiated by touches on the screen.\nDeprecated\nproximitySensingEnabled\nA Boolean value that determines whether proximity sensing is enabled.\nDeprecated\nstatusBarHidden\nA Boolean value that determines whether the status bar is hidden.\nDeprecated\nkeyWindow\nThe app's key window.\nDeprecated\nscheduledLocalNotifications\nAll currently scheduled local notifications.\nDeprecated\nstatusBarFrame\nThe frame rectangle defining the area of the status bar.\nDeprecated\nstatusBarOrientation\nThe current orientation of the app’s status bar.\nDeprecated\nstatusBarOrientationAnimationDuration\nThe animation duration in seconds for the status bar during a 90 degree orientation change.\nDeprecated\nstatusBarStyle\nThe current style of the status bar.\nDeprecated\nwindows\nThe app’s visible and hidden windows.\nDeprecated"
  },
  {
    "title": "proximitySensingEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1622984-proximitysensingenabled",
    "html": "Deprecated\n\nUse the proximityMonitoringEnabled and proximityState properties of the UIDevice class instead.\n\nDiscussion\n\nYES if proximity sensing is enabled; otherwise NO. Enabling proximity sensing tells iOS that it may need to blank the screen if the user's face is near it. Proximity sensing is disabled by default.\n\nSee Also\nDeprecated properties\napplicationIconBadgeNumber\nThe number currently set as the badge of the app icon on the Home screen.\nDeprecated\nUIApplicationStatusBarFrameUserInfoKey\nA key whose value is an NSValue object that encapsulates a CGRect structure expressing the location and size of the new status bar frame. This key is used with UIApplicationDidChangeStatusBarFrameNotification and UIApplicationWillChangeStatusBarFrameNotification notifications.\nDeprecated\nUIApplicationStatusBarOrientationUserInfoKey\nA key whose value is an NSNumber object that encapsulates a UIInterfaceOrientation value indicating the current orientation (see UIInterfaceOrientation). This key is used with UIApplicationDidChangeStatusBarOrientationNotification and UIApplicationWillChangeStatusBarOrientationNotification notifications.\nDeprecated\ncurrentUserNotificationSettings\nReturns the user notification settings for the app.\nDeprecated\nignoringInteractionEvents\nA Boolean value that indicates whether the receiver is ignoring events initiated by touches on the screen.\nDeprecated\nnetworkActivityIndicatorVisible\nA Boolean value that turns an indicator of network activity on or off.\nDeprecated\nstatusBarHidden\nA Boolean value that determines whether the status bar is hidden.\nDeprecated\nkeyWindow\nThe app's key window.\nDeprecated\nscheduledLocalNotifications\nAll currently scheduled local notifications.\nDeprecated\nstatusBarFrame\nThe frame rectangle defining the area of the status bar.\nDeprecated\nstatusBarOrientation\nThe current orientation of the app’s status bar.\nDeprecated\nstatusBarOrientationAnimationDuration\nThe animation duration in seconds for the status bar during a 90 degree orientation change.\nDeprecated\nstatusBarStyle\nThe current style of the status bar.\nDeprecated\nwindows\nThe app’s visible and hidden windows.\nDeprecated"
  },
  {
    "title": "UIWindowSceneActivationInteractionConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationinteractionconfigurationprovider",
    "html": "Parameters\ninteraction\n\nThe UIWindowSceneActivationInteraction requesting a configuration.\n\nlocation\n\nThe location in the view of the interaction requesting a configuration.\n\nReturn Value\n\nAn activation configuration you can use to request a window scene.\n\nSee Also\nCreating an activation interaction\n- initWithConfigurationProvider:errorHandler:\nCreates an activation interaction."
  },
  {
    "title": "statusBarHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1622982-statusbarhidden",
    "html": "Return Value\n\nYES means the status bar is hidden; NO means it's visible.\n\nDiscussion\n\nChanging the value of this property changes the visibility of the status bar immediately—that is, without animations.\n\nSee Also\nDeprecated properties\napplicationIconBadgeNumber\nThe number currently set as the badge of the app icon on the Home screen.\nDeprecated\nUIApplicationStatusBarFrameUserInfoKey\nA key whose value is an NSValue object that encapsulates a CGRect structure expressing the location and size of the new status bar frame. This key is used with UIApplicationDidChangeStatusBarFrameNotification and UIApplicationWillChangeStatusBarFrameNotification notifications.\nDeprecated\nUIApplicationStatusBarOrientationUserInfoKey\nA key whose value is an NSNumber object that encapsulates a UIInterfaceOrientation value indicating the current orientation (see UIInterfaceOrientation). This key is used with UIApplicationDidChangeStatusBarOrientationNotification and UIApplicationWillChangeStatusBarOrientationNotification notifications.\nDeprecated\ncurrentUserNotificationSettings\nReturns the user notification settings for the app.\nDeprecated\nignoringInteractionEvents\nA Boolean value that indicates whether the receiver is ignoring events initiated by touches on the screen.\nDeprecated\nnetworkActivityIndicatorVisible\nA Boolean value that turns an indicator of network activity on or off.\nDeprecated\nproximitySensingEnabled\nA Boolean value that determines whether proximity sensing is enabled.\nDeprecated\nkeyWindow\nThe app's key window.\nDeprecated\nscheduledLocalNotifications\nAll currently scheduled local notifications.\nDeprecated\nstatusBarFrame\nThe frame rectangle defining the area of the status bar.\nDeprecated\nstatusBarOrientation\nThe current orientation of the app’s status bar.\nDeprecated\nstatusBarOrientationAnimationDuration\nThe animation duration in seconds for the status bar during a 90 degree orientation change.\nDeprecated\nstatusBarStyle\nThe current style of the status bar.\nDeprecated\nwindows\nThe app’s visible and hidden windows.\nDeprecated\nRelated Documentation\n- setStatusBarHidden:animated:\nHides or shows the status bar, optionally animating the transition."
  },
  {
    "title": "initWithConfigurationProvider:errorHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationinteraction/3752232-initwithconfigurationprovider",
    "html": "Parameters\nconfigurationProvider\n\nThe closure the system calls when the user triggers the interaction. The closure should return a UIWindowSceneActivationConfiguration object.\n\nerrorHandler\n\nThe closure the system calls when the activation request fails.\n\nReturn Value\n\nA newly initialized activation interaction object.\n\nSee Also\nCreating an activation interaction\nUIWindowSceneActivationInteractionConfigurationProvider\nA type alias defining a closure that provides an activation configuration for the activation interaction."
  },
  {
    "title": "UIControl.State | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/state",
    "html": "Overview\n\nA control can have more than one state at a time. Controls can have different configurations according to their state. For example, a UIButton object can display one image when it’s in its normal state and a different image when it’s highlighted.\n\nTopics\nConstants\nstatic var normal: UIControl.State\nThe normal, or default, state of a control where the control is enabled but neither selected nor highlighted.\nstatic var highlighted: UIControl.State\nThe highlighted state of a control.\nstatic var disabled: UIControl.State\nThe disabled state of a control.\nstatic var selected: UIControl.State\nThe selected state of a control.\nstatic var focused: UIControl.State\nThe focused state of a control.\nstatic var application: UIControl.State\nAdditional control-state flags available for app use.\nstatic var reserved: UIControl.State\nControl-state flags reserved for internal framework use.\nInitializers\ninit(rawValue: UInt)\nCreates a control state with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nManaging state\nvar state: UIControl.State\nThe state of the control, specified as a bit mask value.\nvar isEnabled: Bool\nA Boolean value indicating whether the control is in the enabled state.\nvar isSelected: Bool\nA Boolean value indicating whether the control is in the selected state.\nvar isHighlighted: Bool\nA Boolean value indicating whether the control draws a highlight."
  },
  {
    "title": "grayButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750787-graybuttonconfiguration",
    "html": "Return Value\n\nA new configuration object.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "tintedButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750798-tintedbuttonconfiguration",
    "html": "Return Value\n\nA new configuration object.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "textProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600547-textproperties",
    "html": "See Also\nCustomizing appearance\nimageProperties\nProperties for configuring the image.\nsecondaryTextProperties\nProperties for configuring the secondary text.\nUIListContentImageProperties\nProperties that affect the list content configuration’s image.\nUIListContentTextProperties\nProperties that affect the list content configuration’s text."
  },
  {
    "title": "directionalLayoutMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600530-directionallayoutmargins",
    "html": "Discussion\n\nWhen you preserve superview layout margins on one or both axes, this value specifies the minimum margins. The inherited margins may be larger.\n\nBy default, the content view preserves the layout margins of its superview on both axes. You can customize this behavior by changing axesPreservingSuperviewLayoutMargins.\n\nSee Also\nCustomizing layout\naxesPreservingSuperviewLayoutMargins\nA Boolean value that detemines whether the content view preserves the layout margins that it inherits from its superview on the horizontal or vertical axes.\nprefersSideBySideTextAndSecondaryText\nA Boolean value that determines whether the configuration positions the text and secondary text side by side.\nimageToTextPadding\nThe padding between the image and text.\ntextToSecondaryTextHorizontalPadding\nThe minimum horizontal padding between the text and secondary text.\ntextToSecondaryTextVerticalPadding\nThe vertical padding between the text and secondary text."
  },
  {
    "title": "UIListContentTextProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontenttextproperties",
    "html": "Topics\nConfiguring text properties\nfont\nThe font for the text.\ncolor\nThe color of the text.\ncolorTransformer\nThe color transformer for resolving the text color.\n- resolvedColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nalignment\nThe alignment for the text.\nlineBreakMode\nThe line break mode to use for the text.\nnumberOfLines\nThe maximum number of lines for the text.\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nminimumScaleFactor\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the configuration tightens the text before truncating.\nadjustsFontForContentSizeCategory\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nUIListContentTextAlignment\nConstants that specify the visual alignment of the text.\ntransform\nThe transform to apply to the text.\nUIListContentTextTransform\nConstants that specify the transform to apply to the text.\nshowsExpansionTextWhenTruncated\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nCustomizing appearance\nimageProperties\nProperties for configuring the image.\ntextProperties\nProperties for configuring the primary text.\nsecondaryTextProperties\nProperties for configuring the secondary text.\nUIListContentImageProperties\nProperties that affect the list content configuration’s image."
  },
  {
    "title": "UIListContentImageProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentimageproperties",
    "html": "Topics\nConfiguring image properties\npreferredSymbolConfiguration\nThe symbol configuration to use.\ntintColor\nThe tint color to apply to the image view.\ntintColorTransformer\nThe color transformer for resolving the tint color.\n- resolvedTintColorForTintColor:\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\ncornerRadius\nThe preferred corner radius, using a continuous corner curve, for the image.\nmaximumSize\nThe maximum size for the image.\nreservedLayoutSize\nThe layout size that the system reserves for the image, and then centers the image within.\nUIListContentImageStandardDimension\nThe system standard layout dimension for reserved layout size.\naccessibilityIgnoresInvertColors\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nCustomizing appearance\nimageProperties\nProperties for configuring the image.\ntextProperties\nProperties for configuring the primary text.\nsecondaryTextProperties\nProperties for configuring the secondary text.\nUIListContentTextProperties\nProperties that affect the list content configuration’s text."
  },
  {
    "title": "secondaryTextProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600541-secondarytextproperties",
    "html": "See Also\nCustomizing appearance\nimageProperties\nProperties for configuring the image.\ntextProperties\nProperties for configuring the primary text.\nUIListContentImageProperties\nProperties that affect the list content configuration’s image.\nUIListContentTextProperties\nProperties that affect the list content configuration’s text."
  },
  {
    "title": "imageProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600534-imageproperties",
    "html": "See Also\nCustomizing appearance\ntextProperties\nProperties for configuring the primary text.\nsecondaryTextProperties\nProperties for configuring the secondary text.\nUIListContentImageProperties\nProperties that affect the list content configuration’s image.\nUIListContentTextProperties\nProperties that affect the list content configuration’s text."
  },
  {
    "title": "axesPreservingSuperviewLayoutMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600528-axespreservingsuperviewlayoutmar",
    "html": "Discussion\n\nBy default, the content view preserves the layout margins of its superview on UIAxisBoth axes.\n\nSee Also\nCustomizing layout\ndirectionalLayoutMargins\nThe margins between the content and the edges of the content view.\nprefersSideBySideTextAndSecondaryText\nA Boolean value that determines whether the configuration positions the text and secondary text side by side.\nimageToTextPadding\nThe padding between the image and text.\ntextToSecondaryTextHorizontalPadding\nThe minimum horizontal padding between the text and secondary text.\ntextToSecondaryTextVerticalPadding\nThe vertical padding between the text and secondary text."
  },
  {
    "title": "cornerStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750785-cornerstyle",
    "html": "Discussion\n\nThis property controls the behavior of the cornerRadius you set on the configuration background. The default corner style is UIButtonConfigurationCornerStyleDynamic.\n\nSee Also\nConfiguring the button background\nbackground\nThe configuration to customize the button background.\nUIButtonConfigurationCornerStyle\nSettings that determine the appearance of the background corner radius."
  },
  {
    "title": "systemFrame | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometry/3975946-systemframe",
    "html": "Discussion\n\nThis property represents the current frame of the scene in the system coordinate space, where an origin of (0, 0) corresponds to the top-left corner of the main display.\n\nSee Also\nAccessing scene geometry\ninterfaceOrientation\nThe current interface orientation for the scene."
  },
  {
    "title": "UIButtonConfigurationIndicator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationindicator",
    "html": "Overview\n\nUse these constants to set the value of the indicator property.\n\nTopics\nIndicator styles\nUIButtonConfigurationIndicatorAutomatic\nA constant that automatically determines an indicator style according to the button’s properties.\nUIButtonConfigurationIndicatorNone\nA constant that doesn’t show an indicator.\nUIButtonConfigurationIndicatorPopup\nA constant that shows a popup-style indicator.\nSee Also\nConfiguring the indicator\nindicator\nThe style of the indicator that appears on the button.\nindicatorColorTransformer\nThe color transformer for resolving the indicator color."
  },
  {
    "title": "automaticallyUpdateForSelection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867088-automaticallyupdateforselection",
    "html": "Discussion\n\nThe default value is YES for the plainButtonConfiguration, grayButtonConfiguration, and tintedButtonConfiguration configurations. Set this value to NO to customize the selection behavior."
  },
  {
    "title": "imagePadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750790-imagepadding",
    "html": "Discussion\n\nUse this property to adjust the distance from the title and subtitle. This doesn’t affect the distance to the button’s edge.\n\nSee Also\nConfiguring images\nimage\nThe foreground image the button displays.\nimagePlacement\nThe edge against which the button places the image.\nimageColorTransformer\nA block that transforms the image color when the button state changes.\npreferredSymbolConfigurationForImage\nA requested configuration object for the button symbol image."
  },
  {
    "title": "subtitleTextAttributesTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750797-subtitletextattributestransforme",
    "html": "See Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "titleTextAttributesTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750802-titletextattributestransformer",
    "html": "See Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "UIButtonConfigurationTitleAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationtitlealignment",
    "html": "Overview\n\nIf your button displays both title and subtitle, use this enumeration to configure how the text aligns.\n\nTopics\nTitle alignments\nUIButtonConfigurationTitleAlignmentAutomatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\nUIButtonConfigurationTitleAlignmentCenter\nAligns the title and subtitle on their horizontal centers.\nUIButtonConfigurationTitleAlignmentLeading\nAligns the title and subtitle on their leading edges.\nUIButtonConfigurationTitleAlignmentTrailing\nAligns the title and subtitle on their trailing edges.\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "initWithUserActivity: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752227-initwithuseractivity",
    "html": "Parameters\nuserActivity\n\nThe user activity used to request a scene.\n\nReturn Value\n\nA newly initialized activation configuration object."
  },
  {
    "title": "titleAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750800-titlealignment",
    "html": "Discussion\n\nThe title aligment can align the title and subtitle labels along the leading or trailing edges, or center them relative to each other.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "titlePadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750801-titlepadding",
    "html": "Discussion\n\nThe title padding adjusts the distance between the title and subtitle labels.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "contentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750784-contentinsets",
    "html": "Discussion\n\nA button has a default inset based on its styling. This property is an additional inset applied after that default inset.\n\nSee Also\nConfiguring layout\nbuttonSize\nA size that requests a preferred size for the button.\nUIButtonConfigurationSize\nA predefined size for button elements.\n- setDefaultContentInsets\nRestores the default content insets."
  },
  {
    "title": "userActivity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752230-useractivity",
    "html": "See Also\nGetting information about the activation configuration\noptions\nOptions for customizing the scene request.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\npreview\nAn optional targeted preview that the system uses to animate the transition to the new scene."
  },
  {
    "title": "options | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752228-options",
    "html": "Discussion\n\nThis property is optional. If you don’t specify options, the system requests a scene using the default options.\n\nSee Also\nGetting information about the activation configuration\nuserActivity\nThe user activity used to request a scene.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\npreview\nAn optional targeted preview that the system uses to animate the transition to the new scene."
  },
  {
    "title": "preview | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration/3752229-preview",
    "html": "See Also\nGetting information about the activation configuration\nuserActivity\nThe user activity used to request a scene.\noptions\nOptions for customizing the scene request.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene."
  },
  {
    "title": "placement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationrequestoptions/4173181-placement",
    "html": "Discussion\n\nProvide a scene placement to influence how the system positions the scene on activation. Set the value to nil to indicate that the system should determine the most appropriate placement.\n\nSee Also\nPositioning windows\nUIWindowScenePlacement\nThe placement of a window scene in the workspace.\nUIWindowSceneProminentPlacement\nA placement that indicates the system should present the window more prominently than others in the space.\nUIWindowSceneStandardPlacement\nA placement that indicates the system should present the window using the default style of the system in the space."
  },
  {
    "title": "guidedAccessRestrictionState(forIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1621153-guidedaccessrestrictionstate",
    "html": "Parameters\nrestrictionIdentifier\n\nThe string that uniquely identifies the guided access restriction.\n\nReturn Value\n\nThe current state of the guided access restriction. The initial state of all restrictions is UIAccessibility.GuidedAccessRestrictionState.allow.\n\nSee Also\nGuided Access\nstatic func requestGuidedAccessSession(enabled: Bool, completionHandler: (Bool) -> Void)\nTransitions the app to or from Single App mode asynchronously.\nstatic func configureForGuidedAccess(features: UIGuidedAccessAccessibilityFeature, enabled: Bool, completionHandler: (Bool, Error?) -> Void)\nEnables or disables the specified accessibility features while using Guided Access.\nenum UIAccessibility.GuidedAccessRestrictionState\nConstants that describe the state of a restriction, either allow or deny."
  },
  {
    "title": "preferredPresentationStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationrequestoptions/3750934-preferredpresentationstyle",
    "html": "Deprecated\n\nUse placement instead.\n\nDiscussion\n\nThe presentation style determines how the system displays the new window scene relative to other scenes in the workspace. The default style is UIWindowScenePresentationStyleAutomatic."
  },
  {
    "title": "NSShadowAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsshadowattributename",
    "html": "Discussion\n\nThe value of this attribute is an NSShadow object. The default value of this property is nil.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750799-title",
    "html": "Discussion\n\nThis property matches the string value of the attributedTitle property. To change the button title when the button state changes, use configurationUpdateHandler or updateConfiguration.\n\nSee Also\nConfiguring titles\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "borderedProminentButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867090-borderedprominentbuttonconfigura",
    "html": "Return Value\n\nA new configuration object.\n\nDiscussion\n\nThis style provides an alternative name for the filledButtonConfiguration style.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750796-subtitle",
    "html": "Discussion\n\nThis property matches the string value of the attributedSubtitle property. To change the button subtitle when the button state changes, use configurationUpdateHandler or updateConfiguration.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "borderedButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867089-borderedbuttonconfiguration",
    "html": "Return Value\n\nA new configuration object.\n\nDiscussion\n\nThis style provides an alternative name for the grayButtonConfiguration style.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "updatedConfigurationForButton: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750803-updatedconfigurationforbutton",
    "html": "Parameters\nbutton\n\nA button to use as a basis for the configuration.\n\nReturn Value\n\nAn updated configuration. This method preserves custom values set on the configuration, and updates default values based on the button state.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style."
  },
  {
    "title": "borderedTintedButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867091-borderedtintedbuttonconfiguratio",
    "html": "Return Value\n\nA new configuration object.\n\nDiscussion\n\nThis style provides an alternative name for the tintedButtonConfiguration style.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "attributedTitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750779-attributedtitle",
    "html": "Discussion\n\nThe configuration sets the title property to match the string value of this attributed string. To change the button title when the button state changes, use configurationUpdateHandler or updateConfiguration.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "filledButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750786-filledbuttonconfiguration",
    "html": "Return Value\n\nA new configuration object.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "borderlessButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867092-borderlessbuttonconfiguration",
    "html": "Return Value\n\nA new configuration object.\n\nDiscussion\n\nThis style provides an alternative name for the plainButtonConfiguration style.\n\nSee Also\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "UILineBreakModeCharacterWrap | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode/uilinebreakmodecharacterwrap",
    "html": "Deprecated\n\nUse NSLineBreakByCharWrapping instead.\n\nSee Also\nDeprecated constants\nUILineBreakModeWordWrap\nWrap or clip the string only at word boundaries.\nDeprecated\nUILineBreakModeClip\nClip the text when reaching the end of the drawing rectangle.\nDeprecated\nUILineBreakModeHeadTruncation\nTruncate text (as necessary) from the beginning of the line.\nDeprecated\nUILineBreakModeTailTruncation\nTruncate text (as necessary) from the end of the line.\nDeprecated\nUILineBreakModeMiddleTruncation\nTruncate text (as necessary) from the middle of the line.\nDeprecated"
  },
  {
    "title": "baseBackgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750781-basebackgroundcolor",
    "html": "Discussion\n\nThe button configuration may transform the base color before applying it to background elements.\n\nSee Also\nConfiguring button colors\nbaseForegroundColor\nThe untransformed color for foreground views."
  },
  {
    "title": "UIButtonConfigurationMacIdiomStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationmacidiomstyle",
    "html": "Overview\n\nIf you build your app with Mac Catalyst, you can use these styles to configure how your app displays a button when running on a Mac. To opt in to these styles, choose Optimize Interface for Mac in you project’s general settings.\n\nIf you’re configuring your button in Interface Builder, you can choose a style from the Mac Style pop-up menu in the Attributes inspector.\n\nTopics\nButton styles\nUIButtonConfigurationMacIdiomStyleAutomatic\nThe button has a style that matches other content in the button configuration.\nUIButtonConfigurationMacIdiomStyleBordered\nThe button has a bordered style.\nUIButtonConfigurationMacIdiomStyleBorderless\nThe button has a borderless style.\nUIButtonConfigurationMacIdiomStyleBorderlessTinted\nThe button has a tinted, borderless style.\nSee Also\nConfiguring the appearance on macOS\nmacIdiomStyle\nThe style to use when this button appears in macOS."
  },
  {
    "title": "indicatorColorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/4044240-indicatorcolortransformer",
    "html": "Discussion\n\nUse this color transformer to set a custom color for indicator. For example, the following code uses a grayscale color for the indicator instead of the default color.\n\nUIButtonConfiguration *config = UIButtonConfiguration.filledButtonConfiguration;\nconfig.indicatorColorTransformer = UIConfigurationColorTransformerGrayscale;\n\n\nSee Also\nConfiguring the indicator\nindicator\nThe style of the indicator that appears on the button.\nUIButtonConfigurationIndicator\nConstants that determine the style of the indicator that appears on a button."
  },
  {
    "title": "activityIndicatorColorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3867087-activityindicatorcolortransforme",
    "html": "See Also\nConfiguring the activity indicator\nshowsActivityIndicator\nA Boolean value that determines whether the button displays an activity indicator instead of an image."
  },
  {
    "title": "UIButtonRole | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonrole",
    "html": "Topics\nButton Roles\nUIButtonRoleNormal\nA button role for a default button style.\nUIButtonRolePrimary\nA button role that responds to a primary key press.\nUIButtonRoleCancel\nA button role that responds to a cancel action.\nUIButtonRoleDestructive\nA button role with a red background color.\nSee Also\nSpecifying the role\nrole\nThe role of the button."
  },
  {
    "title": "UIWindowSceneActivationActionConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationactionconfigurationprovider",
    "html": "Parameters\naction\n\nThe UIWindowSceneActivationAction requesting a configuration.\n\nReturn Value\n\nAn activation configuration you can use to request a window scene.\n\nSee Also\nCreating an activation action\n+ actionWithIdentifier:alternateAction:configurationProvider:\nCreates an activation action with the specified parameters."
  },
  {
    "title": "actionWithIdentifier:alternateAction:configurationProvider: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationaction/3752223-actionwithidentifier",
    "html": "Parameters\nidentifier\n\nThe unique identifier for the action. Specify nil to let this method create a unique identifier for you.\n\nalternateAction\n\nAn alternate action to perform if the platform doesn’t support multiple scenes or if requesting a scene fails.\n\nconfigurationProvider\n\nThe closure the system calls when the user selects the action. The closure should return a UIWindowSceneActivationConfiguration object.\n\nReturn Value\n\nA newly initialized activation action object.\n\nSee Also\nCreating an activation action\nUIWindowSceneActivationActionConfigurationProvider\nA type alias defining a closure that provides an activation configuration for the activation action."
  },
  {
    "title": "plainButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750793-plainbuttonconfiguration",
    "html": "Return Value\n\nA new configuration object.\n\nSee Also\nCreating configurations\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button."
  },
  {
    "title": "UIButtonConfigurationSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationsize",
    "html": "Overview\n\nYou can use this enumeration to choose a predefined size for elements in a button. The value you choose for button size can be effectively overridden by explicitly assigning values for configuration elements like padding, corner style, or title and subtitle font sizes.\n\nTopics\nButton sizes\nUIButtonConfigurationSizeLarge\nDisplays button elements at a large size.\nUIButtonConfigurationSizeMedium\nDisplays button elements at a standard size.\nUIButtonConfigurationSizeSmall\nDisplays button elements at a small size.\nUIButtonConfigurationSizeMini\nDisplays button elements at the smallest size.\nSee Also\nConfiguring layout\nbuttonSize\nA size that requests a preferred size for the button.\ncontentInsets\nThe distance from the button’s content area to its bounds.\n- setDefaultContentInsets\nRestores the default content insets."
  },
  {
    "title": "init | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesmac/4047542-init",
    "html": "See Also\nCreating a geometry preferences object\n- initWithSystemFrame:\nInitializes a new window scene geometry preferences object with the specified window frame."
  },
  {
    "title": "attributedSubtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750778-attributedsubtitle",
    "html": "Discussion\n\nThe configuration sets the subtitle property to match the string value of this attributed string. To change the button subtitle when the button state changes, use configurationUpdateHandler or updateConfiguration.\n\nSee Also\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle."
  },
  {
    "title": "initWithSystemFrame: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesmac/4047543-initwithsystemframe",
    "html": "See Also\nCreating a geometry preferences object\n- init\nInitializes a new window scene geometry preferences object."
  },
  {
    "title": "imageColorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750789-imagecolortransformer",
    "html": "Discussion\n\nUse this property to transform an image to, for example, a monochrome or tinted image.\n\nSee Also\nConfiguring images\nimage\nThe foreground image the button displays.\nimagePadding\nThe distance between the button’s image and text.\nimagePlacement\nThe edge against which the button places the image.\npreferredSymbolConfigurationForImage\nA requested configuration object for the button symbol image."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750788-image",
    "html": "Discussion\n\nA configuration contains one image. To change the image based on button state, use configurationUpdateHandler or updateConfiguration.\n\nSee Also\nConfiguring images\nimagePadding\nThe distance between the button’s image and text.\nimagePlacement\nThe edge against which the button places the image.\nimageColorTransformer\nA block that transforms the image color when the button state changes.\npreferredSymbolConfigurationForImage\nA requested configuration object for the button symbol image."
  },
  {
    "title": "preferredSymbolConfigurationForImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750794-preferredsymbolconfigurationfori",
    "html": "Discussion\n\nA symbol configuration defines details such as the point size, scale, text style, weight, and font of symbol image. The button uses these details to determine which variant of the image to use and how to scale or style the image.\n\nSee Also\nConfiguring images\nimage\nThe foreground image the button displays.\nimagePadding\nThe distance between the button’s image and text.\nimagePlacement\nThe edge against which the button places the image.\nimageColorTransformer\nA block that transforms the image color when the button state changes."
  },
  {
    "title": "imagePlacement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750791-imageplacement",
    "html": "Discussion\n\nUse this property to place the image along the top, leading, trailing, or bottom edge of the button.\n\nSee Also\nConfiguring images\nimage\nThe foreground image the button displays.\nimagePadding\nThe distance between the button’s image and text.\nimageColorTransformer\nA block that transforms the image color when the button state changes.\npreferredSymbolConfigurationForImage\nA requested configuration object for the button symbol image."
  },
  {
    "title": "UIWindowScenePresentationStyleProminent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenepresentationstyle/uiwindowscenepresentationstyleprominent",
    "html": "Discussion\n\nOn iPad, the system displays the window scene modally, centered and elevated above the existing workspace. You should dedicate the scene to specific content within your app, like a document or file, and include buttons to close the scene."
  },
  {
    "title": "beginBackgroundTaskWithName:expirationHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623051-beginbackgroundtaskwithname",
    "html": "Parameters\ntaskName\n\nThe name to display in the debugger when viewing the background task. If you specify nil for this parameter, the method generates a name based on the name of the calling function or method.\n\nhandler\n\nA handler to be called shortly before the app’s remaining background time reaches 0. Use this handler to clean up and mark the end of the background task. Failure to end the task explicitly will result in the termination of the app. The system calls the handler synchronously on the main thread, blocking the app’s suspension momentarily.\n\nReturn Value\n\nA unique identifier for the new background task. You must pass this value to the endBackgroundTask: method to mark the end of this task. This method returns UIBackgroundTaskInvalid if running in the background isn't possible.\n\nDiscussion\n\nThis method requests additional background execution time for your app. Call this method when leaving a task unfinished might be detrimental to your app’s user experience. For example, call this method before writing data to a file to prevent the system from suspending your app while the operation is in progress. For background tasks requiring more time, use Background Tasks.\n\nCall this method as early as possible before starting your task, preferably before your app actually enters the background. The method requests the task assertion for your app asynchronously. If you call this method shortly before your app is due to be suspended, there’s a chance that the system might suspend your app before that task assertion is granted. For example, don’t call this method at the very end of your applicationDidEnterBackground: method and expect your app to continue running. If the system is unable to grant the task assertion, it calls your expiration handler.\n\nEach call to this method must be balanced by a matching call to the endBackgroundTask: method. Apps running background tasks have a finite amount of time in which to run them. (You can find out the maximum background time available using the backgroundTimeRemaining property.) If you don't call endBackgroundTask: for each task before time expires, the system kills the app. If you provide a block object in the handler parameter, the system calls your handler before time expires to give you a chance to end the task.\n\nYou can call this method at any point in your app’s execution. You may also call this method multiple times to mark the beginning of several background tasks that run in parallel. However, each task must be ended separately. You identify a given task using the value returned by this method.\n\nThis method can be safely called on a non-main thread. To extend the execution time of an app extension, use the performExpiringActivityWithReason:usingBlock: method of NSProcessInfo instead.\n\nSee Also\nManaging background tasks\nbackgroundRefreshStatus\nIndicates whether the app can refresh content when running in the background.\nUIBackgroundRefreshStatus\nConstants that indicate whether background execution is enabled for the app.\nUIApplicationBackgroundRefreshStatusDidChangeNotification\nA notification that posts when the app’s status for downloading content in the background changes.\n- beginBackgroundTaskWithExpirationHandler:\nMarks the start of a task that should continue if the app enters the background.\n- endBackgroundTask:\nMarks the end of a specific long-running background task.\nUIBackgroundTaskIdentifier\nA unique token that identifies a request to run in the background.\nbackgroundTimeRemaining\nThe maximum amount of time remaining for the app to run in the background.\nRelated Documentation\nBackground Tasks\nRequest the system to launch your app in the background to run tasks."
  },
  {
    "title": "UIWindowScenePresentationStyleStandard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenepresentationstyle/uiwindowscenepresentationstylestandard",
    "html": "Discussion\n\nOn iPad, the system displays the window scene in Split View, side-by-side with the scene that originated the request for the new scene."
  },
  {
    "title": "beginBackgroundTaskWithExpirationHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623031-beginbackgroundtaskwithexpiratio",
    "html": "Parameters\nhandler\n\nA handler to be called shortly before the app’s remaining background time reaches 0. Use this handler to clean up and mark the end of the background task. Failure to end the task explicitly will result in the termination of the app. The system calls the handler synchronously on the main thread, blocking the app’s suspension momentarily.\n\nReturn Value\n\nA unique identifier for the new background task. You must pass this value to the endBackgroundTask: method to mark the end of this task. This method returns UIBackgroundTaskInvalid if running in the background isn't possible.\n\nDiscussion\n\nThis method requests additional background execution time for your app. Call this method when leaving a task unfinished might be detrimental to your app’s user experience. For example, call this method before writing data to a file to prevent the system from suspending your app while the operation is in progress. For background tasks requiring more time, use Background Tasks.\n\nCall this method as early as possible before starting your task, preferably before your app actually enters the background. The method requests the task assertion for your app asynchronously. If you call this method shortly before your app is due to be suspended, there’s a chance that the system might suspend your app before that task assertion is granted. For example, don’t call this method at the very end of your applicationDidEnterBackground: method and expect your app to continue running. If the system is unable to grant the task assertion, it calls your expiration handler.\n\nEach call to this method must be balanced by a matching call to the endBackgroundTask: method. Apps running background tasks have a finite amount of time in which to run them. (You can find out the maximum background time available using the backgroundTimeRemaining property.) If you don't call endBackgroundTask: for each task before time expires, the system kills the app. If you provide a block object in the handler parameter, the system calls your handler before time expires to give you a chance to end the task.\n\nYou can call this method at any point in your app’s execution. You may also call this method multiple times to mark the beginning of several background tasks that run in parallel. However, each task must be ended separately. You identify a given task using the value returned by this method.\n\nTo assist with debugging, this method generates a name for the task, based on the name of the calling method or function. If you want to specify a custom name, use the beginBackgroundTaskWithName:expirationHandler: method instead.\n\nThis method can be safely called on a non-main thread. To extend the execution time of an app extension, use the performExpiringActivityWithReason:usingBlock: method of NSProcessInfo instead.\n\nNote\n\nIf you're having trouble debugging your background task code, you might try using the beginBackgroundTaskWithName:expirationHandler: method instead of this one. That method provides the same behavior but lets you specify a debugger-visible name for your task.\n\nSee Also\nManaging background tasks\nbackgroundRefreshStatus\nIndicates whether the app can refresh content when running in the background.\nUIBackgroundRefreshStatus\nConstants that indicate whether background execution is enabled for the app.\nUIApplicationBackgroundRefreshStatusDidChangeNotification\nA notification that posts when the app’s status for downloading content in the background changes.\n- beginBackgroundTaskWithName:expirationHandler:\nMarks the start of a task with a custom name that should continue if the app enters the background.\n- endBackgroundTask:\nMarks the end of a specific long-running background task.\nUIBackgroundTaskIdentifier\nA unique token that identifies a request to run in the background.\nbackgroundTimeRemaining\nThe maximum amount of time remaining for the app to run in the background.\nRelated Documentation\nBackground Tasks\nRequest the system to launch your app in the background to run tasks."
  },
  {
    "title": "NSControlCharacterZeroAdvancementAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscontrolcharacterzeroadvancementaction",
    "html": "Discussion\n\nGlyphs with this action are filtered out from layout (notShownAttribute(forGlyphAt:) == YES for the glyph)."
  },
  {
    "title": "shouldInvalidateLayout(forBoundsChange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617781-shouldinvalidatelayout",
    "html": "Parameters\nnewBounds\n\nThe new bounds of the collection view.\n\nReturn Value\n\ntrue if the collection view requires a layout update or false if the layout does not need to change.\n\nDiscussion\n\nThe default implementation of this method returns false. Subclasses can override it and return an appropriate value based on whether changes in the bounds of the collection view require changes to the layout of cells and supplementary views.\n\nIf the bounds of the collection view change and this method returns true, the collection view invalidates the layout by calling the invalidateLayout(with:) method.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "layoutAttributesForInteractivelyMovingItem(at:withTargetPosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617788-layoutattributesforinteractively",
    "html": "Parameters\nindexPath\n\nThe index path of the item being moved.\n\nposition\n\nThe current position of the item in the collection view’s coordinate system.\n\nReturn Value\n\nThe layout attributes of the item while it is at the specified position.\n\nDiscussion\n\nWhen an item is moving because of user interactivity, the layout object uses this method to retrieve layout attributes to use for the item while it is at the specified position. The default implementation of this method returns a copy of the item’s existing attributes with two changes: the center point is set to the value in position and the zIndex value is set to NSIntegerMax so that the item floats above other items in the collection view.\n\nSubclasses can override this method and modify additional layout attributes as needed. If you override this method, call super first to retrieve the item’s existing attributes and then make your changes to the returned structure.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "NSTextAlignmentRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextalignment/nstextalignmentright",
    "html": "Discussion\n\nThe value of this enumeration case is 2 for binaries built for the arm64 architecture, and running in iOS, macOS, or Simulator. The value is also 2 for binaries built for the x86_64 architecture and running in Simulator for iOS. However, the value of this enumeration case is 1 for other binaries built for the x86_64 architecture, including apps translated using Rosetta. If you persist this value manually, make sure to convert it for the appropriate environment when you read it.\n\nFor more information about Rosetta, see About the Rosetta Translation Environment."
  },
  {
    "title": "UIImageSymbolScaleLarge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolscale/uiimagesymbolscalelarge",
    "html": "See Also\nSymbol image scales\nUIImageSymbolScaleDefault\nThe default scale variant that matches the system usage.\nUIImageSymbolScaleUnspecified\nAn unspecified scale.\nUIImageSymbolScaleSmall\nThe small variant of the symbol image.\nUIImageSymbolScaleMedium\nThe medium variant of the symbol image"
  },
  {
    "title": "UIImageSymbolWeightRegular | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightregular",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolScaleSmall | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolscale/uiimagesymbolscalesmall",
    "html": "See Also\nSymbol image scales\nUIImageSymbolScaleDefault\nThe default scale variant that matches the system usage.\nUIImageSymbolScaleUnspecified\nAn unspecified scale.\nUIImageSymbolScaleMedium\nThe medium variant of the symbol image\nUIImageSymbolScaleLarge\nThe large variant of the symbol image."
  },
  {
    "title": "UIImageSymbolWeightThin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightthin",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolScaleMedium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolscale/uiimagesymbolscalemedium",
    "html": "See Also\nSymbol image scales\nUIImageSymbolScaleDefault\nThe default scale variant that matches the system usage.\nUIImageSymbolScaleUnspecified\nAn unspecified scale.\nUIImageSymbolScaleSmall\nThe small variant of the symbol image.\nUIImageSymbolScaleLarge\nThe large variant of the symbol image."
  },
  {
    "title": "UIImageOrientationRightMirrored | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationrightmirrored",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears to be horizontally mirrored, then rotated 90° clockwise. (That is, to present the image in its intended orientation, you can rotate 90° counter-clockwise, then flip horizontally.)\n\nFigure 1 Correcting image data with rightMirrored orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationRightMirrored\nThe encoded image data is horizontally flipped and rotated 90° clockwise from the image's intended display orientation."
  },
  {
    "title": "UIApplicationBackgroundRefreshStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationbackgroundrefreshstatusdidchangenotification",
    "html": "Discussion\n\nThe system sends this notification when the backgroundRefreshStatus property of the app object changes. That property can change in response to the user disabling multitasking support for the app. The object of the notification is the UIApplication object. There is no userInfo dictionary.\n\nSee Also\nManaging background tasks\nbackgroundRefreshStatus\nIndicates whether the app can refresh content when running in the background.\nUIBackgroundRefreshStatus\nConstants that indicate whether background execution is enabled for the app.\n- beginBackgroundTaskWithName:expirationHandler:\nMarks the start of a task with a custom name that should continue if the app enters the background.\n- beginBackgroundTaskWithExpirationHandler:\nMarks the start of a task that should continue if the app enters the background.\n- endBackgroundTask:\nMarks the end of a specific long-running background task.\nUIBackgroundTaskIdentifier\nA unique token that identifies a request to run in the background.\nbackgroundTimeRemaining\nThe maximum amount of time remaining for the app to run in the background."
  },
  {
    "title": "initWithInterfaceOrientations: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesios/4047539-initwithinterfaceorientations",
    "html": "See Also\nCreating a geometry preferences object\n- init\nInitializes a new window scene geometry preferences object."
  },
  {
    "title": "NSTextSelectionNavigation.WritingDirection.rightToLeft | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/writingdirection/righttoleft",
    "html": "See Also\nWriting directions\ncase leftToRight\nThe value that defines the left to right writing direction."
  },
  {
    "title": "activateSceneSessionForRequest:errorHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/4173070-activatescenesessionforrequest",
    "html": "Parameters\nrequest\n\nThe activation request.\n\nerrorHandler\n\nA handler to call if the request fails.\n\nSee Also\nManaging a scene’s life cycle\n- requestSceneSessionDestruction:options:errorHandler:\nAsks the system to dismiss an existing scene and remove it from the app switcher.\n- requestSceneSessionRefresh:\nAsks the system to update any system UI associated with the specified scene.\nUISceneSessionActivationRequest\nA collection of properties that you use to request activation of a scene.\nUISceneActivationRequestOptions\nAn object that contains information you want the system to use when activating the session associated with a scene.\nUISceneDestructionRequestOptions\nAn object you pass to UIKit to permanently remove a scene and its associated session from your app.\nRelated Documentation\n- requestSceneSessionActivation:userActivity:options:errorHandler:\nAsks the system to activate an existing scene, or create a new scene and associate it with your app."
  },
  {
    "title": "UINSIntegerTraitDefinition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinsintegertraitdefinition",
    "html": "Topics\nType Properties\ndefaultValue\n\nRequired\n\nRelationships\nInherits From\nUITraitDefinition\nConforming Types\nUITraitAccessibilityContrast\nUITraitActiveAppearance\nUITraitDisplayGamut\nUITraitForceTouchCapability\nUITraitHorizontalSizeClass\nUITraitImageDynamicRange\nUITraitLayoutDirection\nUITraitLegibilityWeight\nUITraitSceneCaptureState\nUITraitToolbarItemPresentationSize\nUITraitUserInterfaceIdiom\nUITraitUserInterfaceLevel\nUITraitUserInterfaceStyle\nUITraitVerticalSizeClass\nSee Also\nCustom traits\nUITrait\nUITraitDefinition\nA type representing a trait in a trait collection.\nUIObjectTraitDefinition\nUICGFloatTraitDefinition"
  },
  {
    "title": "UIApplication.State | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/state",
    "html": "Topics\nConstants\ncase active\nThe app is running in the foreground and currently receiving events.\ncase inactive\nThe app is running in the foreground but isn’t receiving events.\ncase background\nThe app is running in the background.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the application state\nvar applicationState: UIApplication.State\nThe app’s current state, or that of its most active scene."
  },
  {
    "title": "registeredForRemoteNotifications | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1623069-registeredforremotenotifications",
    "html": "Discussion\n\nThis method reflects whether the remote registration process completed successfully—a process that begins when you call the registerForRemoteNotifications method. This method does not reflect whether remote notifications are actually available due to connectivity issues. The value returned by this method takes into account the user’s preferences for receiving remote notifications.\n\nSee Also\nRegistering for remote notifications\n- registerForRemoteNotifications\nRegisters to receive remote notifications through Apple Push Notification service.\n- unregisterForRemoteNotifications\nUnregisters for all remote notifications received through Apple Push Notification service."
  },
  {
    "title": "traitOverrides | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscene/4134902-traitoverrides",
    "html": "See Also\nOverriding trait values\nUITraitOverrides"
  },
  {
    "title": "sharedApplication | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1622975-sharedapplication",
    "html": "Return Value\n\nThe app instance is created in the UIApplicationMain function.\n\nDiscussion\n\nThe UIApplicationMain function creates the shared app instance at launch time."
  },
  {
    "title": "UISceneErrorCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneerrorcode",
    "html": "Topics\nError codes\nUISceneErrorCodeMultipleScenesNotSupported\nAn error that indicates multiple scenes aren’t supported.\nUISceneErrorCodeRequestDenied\nAn error that indicates the request was denied.\nUISceneErrorCodeGeometryRequestUnsupported\nAn error that indicates the geometry request is invalid or unsupported.\nUISceneErrorCodeGeometryRequestDenied\nAn error that indicates the geometry request is valid but the system denied the request.\nSee Also\nErrors\nUISceneErrorDomain\nThe domain for scene-related errors."
  },
  {
    "title": "UICGFloatTraitDefinition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicgfloattraitdefinition",
    "html": "Topics\nType Properties\ndefaultValue\n\nRequired\n\nRelationships\nInherits From\nUITraitDefinition\nConforming Types\nUITraitDisplayScale\nSee Also\nCustom traits\nUITrait\nUITraitDefinition\nA type representing a trait in a trait collection.\nUIObjectTraitDefinition\nUINSIntegerTraitDefinition"
  },
  {
    "title": "UIObjectTraitDefinition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiobjecttraitdefinition",
    "html": "Topics\nType Properties\ndefaultValue\n\nRequired\n\nRelationships\nInherits From\nUITraitDefinition\nConforming Types\nUITraitPreferredContentSizeCategory\nUITraitTypesettingLanguage\nSee Also\nCustom traits\nUITrait\nUITraitDefinition\nA type representing a trait in a trait collection.\nUICGFloatTraitDefinition\nUINSIntegerTraitDefinition"
  },
  {
    "title": "UISceneOpenExternalURLOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneopenexternalurloptions",
    "html": "Topics\nSpecifying the link options\nuniversalLinksOnly\nA Boolean value that indicates whether URLs must be universal links and have a configured app to open them.\nMeasuring ad taps\neventAttribution\nAn object you use to send tap event attribution data to the browser for Private Click Measurement.\nRelationships\nInherits From\nNSObject\nSee Also\nURL management\nUIOpenURLContext\nA system-provided object that contains the information you need to open a single URL."
  },
  {
    "title": "UIWindowSceneDismissalAnimationDecline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenedismissalanimation/uiwindowscenedismissalanimationdecline",
    "html": "Discussion\n\nUse this type of animation when the scene contains changes that you don't want to save. For example, a mail app might use this animation when discarding a draft email message or saving it for later.\n\nSee Also\nAnimation styles\nUIWindowSceneDismissalAnimationStandard\nThe standard dismissal animations.\nUIWindowSceneDismissalAnimationCommit\nAnimations to use when saving changes."
  },
  {
    "title": "UILineBreakModeWordWrap | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode/uilinebreakmodewordwrap",
    "html": "Deprecated\n\nUse NSLineBreakMode instead.\n\nDiscussion\n\nThis is the default wrapping option.\n\nSee Also\nDeprecated constants\nUILineBreakModeCharacterWrap\nWrap or clip the string at the closest character boundary.\nDeprecated\nUILineBreakModeClip\nClip the text when reaching the end of the drawing rectangle.\nDeprecated\nUILineBreakModeHeadTruncation\nTruncate text (as necessary) from the beginning of the line.\nDeprecated\nUILineBreakModeTailTruncation\nTruncate text (as necessary) from the end of the line.\nDeprecated\nUILineBreakModeMiddleTruncation\nTruncate text (as necessary) from the middle of the line.\nDeprecated"
  },
  {
    "title": "UILineBreakModeClip | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode/uilinebreakmodeclip",
    "html": "Deprecated\n\nUse NSLineBreakByClipping instead.\n\nDiscussion\n\nThis option could result in a partially rendered character at the end of a string.\n\nSee Also\nDeprecated constants\nUILineBreakModeWordWrap\nWrap or clip the string only at word boundaries.\nDeprecated\nUILineBreakModeCharacterWrap\nWrap or clip the string at the closest character boundary.\nDeprecated\nUILineBreakModeHeadTruncation\nTruncate text (as necessary) from the beginning of the line.\nDeprecated\nUILineBreakModeTailTruncation\nTruncate text (as necessary) from the end of the line.\nDeprecated\nUILineBreakModeMiddleTruncation\nTruncate text (as necessary) from the middle of the line.\nDeprecated"
  },
  {
    "title": "UILineBreakModeTailTruncation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode/uilinebreakmodetailtruncation",
    "html": "Deprecated\n\nUse NSLineBreakByTruncatingTail instead.\n\nDiscussion\n\nFor multiple lines of text, only text on the last line truncates.\n\nSee Also\nDeprecated constants\nUILineBreakModeWordWrap\nWrap or clip the string only at word boundaries.\nDeprecated\nUILineBreakModeCharacterWrap\nWrap or clip the string at the closest character boundary.\nDeprecated\nUILineBreakModeClip\nClip the text when reaching the end of the drawing rectangle.\nDeprecated\nUILineBreakModeHeadTruncation\nTruncate text (as necessary) from the beginning of the line.\nDeprecated\nUILineBreakModeMiddleTruncation\nTruncate text (as necessary) from the middle of the line.\nDeprecated"
  },
  {
    "title": "UICollectionLayoutListConfiguration.HeaderMode.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/none",
    "html": "See Also\nHeader modes\ncase supplementary\nA header mode that uses supplementary views to show headers.\ncase firstItemInSection\nA header mode that styles the first item in a section as a header."
  },
  {
    "title": "UILineBreakModeMiddleTruncation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode/uilinebreakmodemiddletruncation",
    "html": "Deprecated\n\nUse NSLineBreakByTruncatingMiddle instead.\n\nDiscussion\n\nFor multiple lines of text, text truncates only at the midpoint of the line.\n\nSee Also\nDeprecated constants\nUILineBreakModeWordWrap\nWrap or clip the string only at word boundaries.\nDeprecated\nUILineBreakModeCharacterWrap\nWrap or clip the string at the closest character boundary.\nDeprecated\nUILineBreakModeClip\nClip the text when reaching the end of the drawing rectangle.\nDeprecated\nUILineBreakModeHeadTruncation\nTruncate text (as necessary) from the beginning of the line.\nDeprecated\nUILineBreakModeTailTruncation\nTruncate text (as necessary) from the end of the line.\nDeprecated"
  },
  {
    "title": "tableView(_:sectionForSectionIndexTitle:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375818-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\ntitle\n\nThe title as displayed in the section index of tableView.\n\nindex\n\nAn index number identifying a section title in the array returned by sectionIndexTitles(for:).\n\nReturn Value\n\nAn index number identifying a section.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nConfiguring an index\nfunc sectionIndexTitles(for: UITableView) -> [String]?\nReturns the titles for the sections of a table view."
  },
  {
    "title": "NSWritingDirectionFormatType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nswritingdirectionformattype",
    "html": "Overview\n\nUse these constants as the values for the writingDirection key.\n\nYou can use the logical OR operator to combine these constants with NSWritingDirection.leftToRight or NSWritingDirection.rightToLeft when used with writingDirection to specify formatting controls defined by the Unicode Bidirectional Algorithm in Unicode Standard Annex #9.\n\nTopics\nConstants\ncase embedding\nText is embedded in text with another writing direction. For example, an English quotation in the middle of an Arabic sentence could be marked as being embedded left-to-right text.\ncase override\nEnables character types with inherent directionality to be overridden when required for special cases, such as for part numbers made of mixed English, digits, and Hebrew letters to be written from right to left.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying Text Attributes\nstruct NSAttributedString.Key\nAttributes that you can apply to text in an attributed string.\nstruct NSAttributedString.TextEffectStyle\nConstants for the text effect attribute key.\nenum NSAttributedString.SpellingState\nConstants for the spelling state attribute key.\nstruct NSUnderlineStyle\nConstants for the underline style and strikethrough style attribute keys.\nstruct InlinePresentationIntent\nA type that defines presentation intent for runs of characters for traits like emphasis, strikethrough, and code voice."
  },
  {
    "title": "baseForegroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750782-baseforegroundcolor",
    "html": "Discussion\n\nThe button configuration may transform the base color before applying it to foreground views.\n\nSee Also\nConfiguring button colors\nbaseBackgroundColor\nThe untransformed color for background views."
  },
  {
    "title": "backgroundImageForState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1624030-backgroundimageforstate",
    "html": "Parameters\nstate\n\nThe state that uses the background image. Possible values are described in UIControlState.\n\nReturn Value\n\nThe background image used for the specified state.\n\nSee Also\nManaging images and tint color\n- imageForState:\nReturns the image used for a button state.\n- setBackgroundImage:forState:\nSets the background image to use for the specified button state.\n- setImage:forState:\nSets the image to use for the specified state.\n- preferredSymbolConfigurationForImageInState:\nReturns the preferred symbol configuration for a button state.\n- setPreferredSymbolConfiguration:forImageInState:\nSets the preferred symbol configuration for a button state.\ntintColor\nThe tint color to apply to the button title and image."
  },
  {
    "title": "macIdiomStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750792-macidiomstyle",
    "html": "Discussion\n\nUse this property when building your app with Mac Catalyst. The value UIButtonConfigurationMacIdiomStyleAutomatic lets the system choose the appropriate style. Select a specific style to force the button to always use that style.\n\nSee Also\nConfiguring the appearance on macOS\nUIButtonConfigurationMacIdiomStyle\nThe button style your app uses when running in macOS."
  },
  {
    "title": "showsActivityIndicator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/3750795-showsactivityindicator",
    "html": "Discussion\n\nThe button respects the imagePlacement property when positioning the activity indicator.\n\nSee Also\nConfiguring the activity indicator\nactivityIndicatorColorTransformer\nThe color transformer for resolving the color of the activity indicator."
  },
  {
    "title": "interfaceOrientation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometry/4047536-interfaceorientation",
    "html": "See Also\nAccessing scene geometry\nsystemFrame\nThe current frame of the scene, in system coordinates."
  },
  {
    "title": "finalizeCollectionViewUpdates() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617787-finalizecollectionviewupdates",
    "html": "Discussion\n\nThe collection view calls this method as the last step before proceeding to animate any changes into place. This method is called within the animation block used to perform all of the insertion, deletion, and move animations so you can create additional animations using this method as needed. Otherwise, you can use it to perform any last minute tasks associated with managing your layout object’s state information.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "imageForState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1624026-imageforstate",
    "html": "Parameters\nstate\n\nThe state that uses the image. Possible values are described in UIControlState.\n\nReturn Value\n\nThe image used for the specified state.\n\nSee Also\nManaging images and tint color\n- backgroundImageForState:\nReturns the background image used for a button state.\n- setBackgroundImage:forState:\nSets the background image to use for the specified button state.\n- setImage:forState:\nSets the image to use for the specified state.\n- preferredSymbolConfigurationForImageInState:\nReturns the preferred symbol configuration for a button state.\n- setPreferredSymbolConfiguration:forImageInState:\nSets the preferred symbol configuration for a button state.\ntintColor\nThe tint color to apply to the button title and image."
  },
  {
    "title": "systemFrame | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesmac/4047544-systemframe",
    "html": "Discussion\n\nThis property represents the preferred frame of the scene in the system coordinate space, where an origin of (0, 0) corresponds to the top-left corner of the main display. The default value is CGRectNull, which indicates no preferred frame."
  },
  {
    "title": "targetContentOffset(forProposedContentOffset:withScrollingVelocity:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617729-targetcontentoffset",
    "html": "Parameters\nproposedContentOffset\n\nThe proposed point (in the collection view’s content view) at which to stop scrolling. This is the value at which scrolling would naturally stop if no adjustments were made. The point reflects the upper-left corner of the visible content.\n\nvelocity\n\nThe current scrolling velocity along both the horizontal and vertical axes. This value is measured in points per second.\n\nReturn Value\n\nThe content offset that you want to use instead. This value reflects the adjusted upper-left corner of the visible area. The default implementation of this method returns the value in the proposedContentOffset parameter.\n\nDiscussion\n\nIf you want the scrolling behavior to snap to specific boundaries, you can override this method and use it to change the point at which to stop. For example, you might use this method to always stop scrolling on a boundary between items, as opposed to stopping in the middle of an item.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change."
  },
  {
    "title": "backgroundFetchIntervalMinimum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1622976-backgroundfetchintervalminimum",
    "html": "See Also\nFetching content in the background\nclass let backgroundFetchIntervalNever: TimeInterval\nA fetch interval large enough to prevent fetch operations from occurring."
  },
  {
    "title": "UIShapeProvider.Resolved | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishapeprovider/resolved",
    "html": "See Also\nSupporting types\ntypealias UIShapeProvider.Context\nThe context for resolving a dynamic shape."
  },
  {
    "title": "indexPathsToDeleteForDecorationView(ofKind:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617730-indexpathstodeletefordecorationv",
    "html": "Parameters\nkind\n\nThe specific type of decoration view.\n\nReturn Value\n\nAn array of NSIndexPath objects indicating the decoration views you want to remove or an empty array if you do not want to remove any views of the given kind.\n\nDiscussion\n\nThe collection view calls this method whenever you delete cells or sections to the collection view. Implementing this method gives your layout object an opportunity to remove any decoration views that are no longer needed.\n\nThe collection view calls this method between its calls to prepare(forCollectionViewUpdates:) and finalizeCollectionViewUpdates().\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "invalidationContext(forPreferredLayoutAttributes:withOriginalAttributes:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617767-invalidationcontext",
    "html": "Parameters\npreferredAttributes\n\nThe layout attributes returned by the cell’s preferredLayoutAttributesFitting(_:) method.\n\noriginalAttributes\n\nThe attributes that the layout object originally suggested for the cell.\n\nReturn Value\n\nAn invalidation context that includes information about what changes need to be made to the layout.\n\nDiscussion\n\nThe default implementation of this method creates an instance of the class provided by the invalidationContextClass class method and returns it. If you want to use a custom invalidation context object with your layout, always override that method and return your custom class.\n\nSubclasses can override this method and use it to perform additional configuration of the invalidation context before returning it. In your custom implementation, call super so that the parent class can perform the basic configuration of the object.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "invalidationContext(forBoundsChange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617754-invalidationcontext",
    "html": "Parameters\nnewBounds\n\nThe new bounds for the collection view.\n\nReturn Value\n\nAn invalidation context that describes the changes that need to be made. Do not return nil.\n\nDiscussion\n\nThe default implementation of this method creates an instance of the class provided by the invalidationContextClass class method and returns it. If you want to use a custom invalidation context object with your layout, always override that method and return your custom class.\n\nYou can override this method if you want to create and configure your custom invalidation context in response to a bounds change. If you override this method, you must call super first to get the invalidation context object to return. After getting this object, set any custom properties and return it.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "NSFontAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsfontattributename",
    "html": "Discussion\n\nThe value of this attribute is a UIFont object. Use this attribute to change the font for a range of text. If you do not specify this attribute, the string uses a 12-point Helvetica(Neue) font by default.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSForegroundColorAttributeName\nThe color of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSForegroundColorAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsforegroundcolorattributename",
    "html": "Discussion\n\nIn macOS, the value of this attribute is an NSColor instance. In iOS, tvOS, watchOS, and Mac Catalyst, the value of this attribute is a UIColor instance. Use this attribute to specify the color of the text during rendering. If you don’t specify this attribute, the text renders in black.\n\nSee Also\nKeys\nNSAttachmentAttributeName\nThe attachment for the text.\nNSBackgroundColorAttributeName\nThe color of the background behind the text.\nNSBaselineOffsetAttributeName\nThe vertical offset for the position of the text.\nNSCursorAttributeName\nThe cursor object.\nNSExpansionAttributeName\nThe expansion factor of the text.\nDeprecated\nNSFontAttributeName\nThe font of the text.\nNSGlyphInfoAttributeName\nThe name of a glyph info object.\nNSKernAttributeName\nThe kerning of the text.\nNSLigatureAttributeName\nThe ligature of the text.\nNSLinkAttributeName\nThe link for the text.\nNSMarkdownSourcePositionAttributeName\nThe position in a Markdown source string corresponding to some attributed text.\nNSMarkedClauseSegmentAttributeName\nThe index of the marked clause segment.\nNSObliquenessAttributeName\nThe obliqueness of the text.\nDeprecated\nNSParagraphStyleAttributeName\nThe paragraph style of the text.\nNSShadowAttributeName\nThe shadow of the text.\nNSSpellingStateAttributeName\nThe spelling state of the text.\nNSStrikethroughColorAttributeName\nThe color of the strikethrough.\nNSStrikethroughStyleAttributeName\nThe strikethrough style of the text.\nNSStrokeColorAttributeName\nThe color of the stroke.\nNSStrokeWidthAttributeName\nThe width of the stroke.\nNSSuperscriptAttributeName\nThe superscript of the text.\nNSTextAlternativesAttributeName\nThe alternatives for the text.\nNSTextEffectAttributeName\nThe text effect.\nNSToolTipAttributeName\nThe tooltip text.\nNSUnderlineColorAttributeName\nThe color of the underline.\nNSUnderlineStyleAttributeName\nThe underline style of the text.\nNSVerticalGlyphFormAttributeName\nThe vertical glyph form of the text.\nDeprecated\nNSWritingDirectionAttributeName\nThe writing direction of the text."
  },
  {
    "title": "NSTextSelectionNavigation.LayoutOrientation.vertical | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/layoutorientation/vertical",
    "html": "See Also\nLayout orientations\ncase horizontal\nThe value that defines horizontal layout orientation."
  },
  {
    "title": "addSymbolEffect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/4210355-addsymboleffect",
    "html": "Parameters\nsymbolEffect\n\nThe symbol effect to add.\n\nSee Also\nConfiguring symbol effects\n- addSymbolEffect:options:\nAdds a symbol effect to the image view with the specified options and default animation.\n- addSymbolEffect:options:animated:\nAdds a symbol effect to the image view with the specified options and animation.\n- addSymbolEffect:options:animated:completion:\nAdds a symbol effect to the image view with the specified options, animation, and completion handler.\n- setSymbolImage:withContentTransition:\nSets a symbol image using the specified content-transition effect.\n- setSymbolImage:withContentTransition:options:\nSets a symbol image using the specified content-transition effect and options.\n- setSymbolImage:withContentTransition:options:completion:\nSets a symbol image using the specified content-transition effect, options, and completion handler.\n- removeSymbolEffectOfType:\nRemoves the symbol effect that matches the specified effect type.\n- removeSymbolEffectOfType:options:\nRemoves the symbol effect that matches the specified effect type, using the specified options.\n- removeSymbolEffectOfType:options:animated:\nRemoves the symbol effect that matches the specified effect type, using the specified options and animation setting.\n- removeSymbolEffectOfType:options:animated:completion:\nRemoves the symbol effect that matches the specified effect type, using the specified options, animation setting, and completion handler.\n- removeAllSymbolEffects\nRemoves all symbol effects from the image view.\n- removeAllSymbolEffectsWithOptions:\nRemoves all symbol effects from the image view, using the specified options.\n- removeAllSymbolEffectsWithOptions:animated:\nRemoves all symbol effects from the image view, using the specified options and animation setting.\nUISymbolEffectCompletion\nA completion handler for adding and removing symbol effects and transitions.\nUISymbolEffectCompletionContext\nInformation about a symbol effect’s addition or removal."
  },
  {
    "title": "stretchableImageWithLeftCapWidth:topCapHeight: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624145-stretchableimagewithleftcapwidth",
    "html": "Deprecated\n\nUse the resizableImageWithCapInsets: instead, specifying cap insets such that the interior is a 1x1 area.\n\nParameters\nleftCapWidth\n\nThe value to use for the left cap width. Specify 0 if you want the entire image to be horizontally stretchable. For a discussion of how a non-zero value affects the image, see the leftCapWidth property.\n\ntopCapHeight\n\nThe value to use for the top cap height. Specify 0 if you want the entire image to be vertically stretchable. For a discussion of how a non-zero value affects the image, see the topCapHeight property.\n\nReturn Value\n\nA new image object with the specified cap values.\n\nDiscussion\n\nDuring scaling or resizing of the image, areas covered by a cap are not scaled or resized. Instead, the 1-pixel wide area not covered by the cap in each direction is what is scaled or resized. This technique is often used to create variable-width buttons, which retain the same rounded corners but whose center region grows or shrinks as needed.\n\nYou use this method to add cap values to an image or to change the existing cap values of an image. In both cases, you get back a new image and the original image remains untouched.\n\nSee Also\nDeprecated\nleftCapWidth\nThe horizontal end-cap size.\nDeprecated\ntopCapHeight\nThe vertical end-cap size.\nDeprecated"
  },
  {
    "title": "NSTextSelectionNavigation.LayoutOrientation.horizontal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/layoutorientation/horizontal",
    "html": "See Also\nLayout orientations\ncase vertical\nThe value that defines vertical layout orientation."
  },
  {
    "title": "UIImageSymbolScaleUnspecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolscale/uiimagesymbolscaleunspecified",
    "html": "Discussion\n\nWhen you specify this value, the image inherits the scale value from its current environment.\n\nSee Also\nSymbol image scales\nUIImageSymbolScaleDefault\nThe default scale variant that matches the system usage.\nUIImageSymbolScaleSmall\nThe small variant of the symbol image.\nUIImageSymbolScaleMedium\nThe medium variant of the symbol image\nUIImageSymbolScaleLarge\nThe large variant of the symbol image."
  },
  {
    "title": "UIImageSymbolScaleDefault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolscale/uiimagesymbolscaledefault",
    "html": "Discussion\n\nUIKit chooses the same scale used for similar content in other parts of the system.\n\nSee Also\nSymbol image scales\nUIImageSymbolScaleUnspecified\nAn unspecified scale.\nUIImageSymbolScaleSmall\nThe small variant of the symbol image.\nUIImageSymbolScaleMedium\nThe medium variant of the symbol image\nUIImageSymbolScaleLarge\nThe large variant of the symbol image."
  },
  {
    "title": "UIImageSymbolWeightMedium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightmedium",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolWeightUnspecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightunspecified",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolWeightUltraLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightultralight",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolWeightSemibold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightsemibold",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolWeightBold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightbold",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageSymbolWeightHeavy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightheavy",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "deleteAllItems() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182898-deleteallitems",
    "html": "See Also\nRemoving items and sections\nfunc deleteItems(withIdentifiers: [Any])\nDeletes the items with the specified identifiers from the snapshot.\nfunc deleteSections(withIdentifiers: [Any])\nDeletes the sections with the specified identifiers from the snapshot."
  },
  {
    "title": "UIImageOrientationDown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationdown",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears rotated 180°.\n\nFigure 1 Correcting image data with down orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationDown\nThe encoded image data is rotated 180° from the image's intended display orientation."
  },
  {
    "title": "UIImageOrientationDownMirrored | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationdownmirrored",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears vertically flipped. (Alternatively, the image is rotated 180° and then flipped horizontally.)\n\nFigure 1 Correcting image data with downMirrored orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationDownMirrored\nThe encoded image data is vertically flipped from the image's intended display orientation."
  },
  {
    "title": "UIImageOrientationUpMirrored | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationupmirrored",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears horizontally mirrored.\n\nFigure 1 Correcting image data with upMirrored orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationUpMirrored\nThe encoded image data is horizontally flipped from the image's intended display orientation."
  },
  {
    "title": "layoutAttributesClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617774-layoutattributesclass",
    "html": "Return Value\n\nThe class to use for layout attributes objects.\n\nDiscussion\n\nIf you subclass UICollectionViewLayoutAttributes in order to manage additional layout attributes, you should override this method and return your custom subclass. The methods for creating layout attributes use this class when creating new layout attributes objects.\n\nThis method is intended for subclassers only and does not need to be called by your code.\n\nSee Also\nProviding layout attributes\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "reloadSections(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182917-reloadsections",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to reload in the snapshot.\n\nSee Also\nReloading data\nfunc reconfigureItems(withIdentifiers: [Any])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [Any]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems(withIdentifiers: [Any])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [Any]\nIdentifies the items reloaded by the changes to the snapshot.\nvar reloadedSectionIdentifiers: [Any]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "collectionJoinBehavior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneactivationrequestoptions/3623235-collectionjoinbehavior",
    "html": "Discussion\n\nA scene collection is a group of scenes that display together. In apps built with Mac Catalyst, you use this behavior to add windows to an NSWindowTabGroup.\n\nSee Also\nSpecifying collection join behavior\nUISceneCollectionJoinBehavior\nA set of behaviors that specify how a new scene joins a scene collection."
  },
  {
    "title": "UIWindowSceneDismissalAnimationCommit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenedismissalanimation/uiwindowscenedismissalanimationcommit",
    "html": "Discussion\n\nUse this type of animation when the scene contains changes that you want to save. For example, a mail app might use this animation when sending an email message displayed in a scene.\n\nSee Also\nAnimation styles\nUIWindowSceneDismissalAnimationStandard\nThe standard dismissal animations.\nUIWindowSceneDismissalAnimationDecline\nAnimations to use when declining changes."
  },
  {
    "title": "UIWindowSceneDismissalAnimationStandard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenedismissalanimation/uiwindowscenedismissalanimationstandard",
    "html": "Discussion\n\nUse this type of animation when you want the system to perform a standard dismissal animation. For example, you might use this animation to close a scene displaying a web page.\n\nSee Also\nAnimation styles\nUIWindowSceneDismissalAnimationCommit\nAnimations to use when saving changes.\nUIWindowSceneDismissalAnimationDecline\nAnimations to use when declining changes."
  },
  {
    "title": "NSTextSelectionNavigation.WritingDirection.leftToRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/writingdirection/lefttoright",
    "html": "See Also\nWriting directions\ncase rightToLeft\nThe value that defines the right to left writing direction."
  },
  {
    "title": "NSTextAlignmentCenter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextalignment/nstextalignmentcenter",
    "html": "Discussion\n\nThe value of this enumeration case is 1 for binaries built for the arm64 architecture, and running in iOS, macOS, or Simulator. The value is also 1 for binaries built for the x86_64 architecture and running in Simulator for iOS. However, the value of this enumeration case is 2 for other binaries built for the x86_64 architecture, including apps translated using Rosetta. If you persist this value manually, make sure to convert it for the appropriate environment when you read it.\n\nFor more information about Rosetta, see About the Rosetta Translation Environment."
  },
  {
    "title": "UICollectionViewDropProposal.Intent.insertIntoDestinationIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal/intent/insertintodestinationindexpath",
    "html": "Discussion\n\nUse this option when the drop target has nested content. Dropping items with this proposal causes them to be added to the drop target's children. For example, if the drop target is a folder, use this option to add the items to the contents of that folder."
  },
  {
    "title": "interfaceOrientations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesios/4047540-interfaceorientations",
    "html": "Discussion\n\nIf you specify this value, the system automatically chooses an orientation from the intersection of these preferred orientations and the supported orientations."
  },
  {
    "title": "init | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesios/4047538-init",
    "html": "See Also\nCreating a geometry preferences object\n- initWithInterfaceOrientations:\nInitializes a new window scene geometry preferences object with the specified interface orientations."
  },
  {
    "title": "UILineBreakModeHeadTruncation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode/uilinebreakmodeheadtruncation",
    "html": "Deprecated\n\nUse NSLineBreakByTruncatingHead instead.\n\nDiscussion\n\nFor multiple lines of text, only text on the first line truncates.\n\nSee Also\nDeprecated constants\nUILineBreakModeWordWrap\nWrap or clip the string only at word boundaries.\nDeprecated\nUILineBreakModeCharacterWrap\nWrap or clip the string at the closest character boundary.\nDeprecated\nUILineBreakModeClip\nClip the text when reaching the end of the drawing rectangle.\nDeprecated\nUILineBreakModeTailTruncation\nTruncate text (as necessary) from the end of the line.\nDeprecated\nUILineBreakModeMiddleTruncation\nTruncate text (as necessary) from the middle of the line.\nDeprecated"
  },
  {
    "title": "sectionIndexTitles(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375813-sectionindextitles",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nReturn Value\n\nAn array of strings that serve as the title of sections in the table view and appear in the index list on the right side of the table view. The table view must be in the plain style (UITableView.Style.plain). For example, for an alphabetized list, you might return an array of strings containing the letters of the alphabet ([”A”, “B”, “C”, ..., “Z”]).\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nConfiguring an index\nfunc tableView(UITableView, sectionForSectionIndexTitle: String, at: Int) -> Int\nReturns the index of the section having the specified title and section title index."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/3600929-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing header modes\nstatic func == (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are equal.\nstatic func != (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the header mode by feeding them into the hasher."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/3600925",
    "html": "See Also\nComparing header modes\nstatic func == (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the header mode by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UICollectionLayoutListConfiguration.HeaderMode.supplementary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/supplementary",
    "html": "Discussion\n\nChoose this header mode to use supplementary views with elementKindSectionHeader as the section header.\n\nBy default, lists that use the UICollectionLayoutListConfiguration.Appearance.plain and UICollectionLayoutListConfiguration.Appearance.sidebarPlain list appearances use pinned headers. You must use this header mode if you want to opt into this default pinning behavior.\n\nSee Also\nHeader modes\ncase none\nNo headers are shown.\ncase firstItemInSection\nA header mode that styles the first item in a section as a header."
  },
  {
    "title": "indexPathsToInsertForSupplementaryView(ofKind:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617770-indexpathstoinsertforsupplementa",
    "html": "Parameters\nkind\n\nThe specific type of supplementary view.\n\nReturn Value\n\nAn array of NSIndexPath objects indicating the location of the new supplementary views, or an empty array if you don’t want to add any supplementary views.\n\nDiscussion\n\nThe collection view calls this method whenever you add cells or sections to the collection view. Implementing this method gives your layout object an opportunity to add new supplementary views to complement the additions.\n\nThe collection view calls this method between its calls to prepare(forCollectionViewUpdates:) and finalizeCollectionViewUpdates().\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "layoutAttributesForSupplementaryView(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617792-layoutattributesforsupplementary",
    "html": "Parameters\nkind\n\nA string that identifies the type of the supplementary view.\n\nindexPath\n\nThe index path of the view.\n\nReturn Value\n\nA layout attributes object containing the information to apply to the supplementary view.\n\nDiscussion\n\nIf your layout object defines any supplementary views, you must override this method and use it to return layout information for those views.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "layoutAttributesForDecorationView(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617809-layoutattributesfordecorationvie",
    "html": "Parameters\ndecorationViewKind\n\nA string that identifies the type of the decoration view.\n\nindexPath\n\nThe index path of the decoration view.\n\nReturn Value\n\nA layout attributes object containing the information to apply to the decoration view.\n\nDiscussion\n\nIf your layout object defines any decoration views, you must override this method and use it to return layout information for those views.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "initialLayoutAttributesForAppearingItem(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617789-initiallayoutattributesforappear",
    "html": "Parameters\nitemIndexPath\n\nThe index path of the item being inserted. You can use this path to locate the item in the collection view’s data source.\n\nReturn Value\n\nA layout attributes object that describes the position at which to place the corresponding cell.\n\nDiscussion\n\nThis method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any items that are about to be inserted. Your implementation should return the layout information that describes the initial position and state of the item. The collection view uses this information as the starting point for any animations. (The end point of the animation is the item’s new location in the collection view.) If you return nil, the layout object uses the item’s final attributes for both the start and end points of the animation.\n\nThe default implementation of this method returns nil.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "targetIndexPath(forInteractivelyMovingItem:withPosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617778-targetindexpath",
    "html": "Parameters\npreviousIndexPath\n\nThe previous index path of the item. Use this value to identify the item.\n\nposition\n\nThe target point in the collection view’s bounds. Use this value to compute the new index path for the item.\n\nReturn Value\n\nThe index path corresponding to the specified location in the collection view.\n\nDiscussion\n\nDuring interactive movement of an item, this method maps points in the collection view’s bounds rectangle to index paths that correspond to the locations of those points. The default implementation of this method searches for an existing cell at the specified location and returns the index path of that cell. If there are multiple cells at the same location, the method returns the topmost cell—that is, the cell whose zIndex layout attribute value is greatest.\n\nYou can override this method as needed to change how the index path is determined. For example, you might return the index path of the cell that has the lowest zIndex value instead of the highest. If you override this method, you do not need to call super.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view."
  },
  {
    "title": "indexPathsToInsertForDecorationView(ofKind:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617750-indexpathstoinsertfordecorationv",
    "html": "Parameters\nkind\n\nThe specific type of decoration view.\n\nReturn Value\n\nAn array of NSIndexPath objects indicating the location of the new decoration views or an empty array if you do not want to add any decoration views.\n\nDiscussion\n\nThe collection view calls this method whenever you add cells or sections to the collection view. Implementing this method gives your layout object an opportunity to add new decoration views to complement the additions.\n\nThe collection view calls this method between its calls to prepare(forCollectionViewUpdates:) and finalizeCollectionViewUpdates().\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "initialLayoutAttributesForAppearingDecorationElement(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617726-initiallayoutattributesforappear",
    "html": "Parameters\nelementKind\n\nA string that identifies the type of decoration view.\n\nelementIndexPath\n\nThe index path of the item being inserted.\n\nReturn Value\n\nA layout attributes object that describes the position at which to place the corresponding decoration view.\n\nDiscussion\n\nThis method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any decoration views that are about to be inserted. Your implementation should return the layout information that describes the initial position and state of the view. The collection view uses this information as the starting point for any animations. (The end point of the animation is the view’s new location in the collection view.) If you return nil, the layout object uses the item’s final attributes for both the start and end points of the animation.\n\nThe default implementation of this method returns nil.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "indexPathsToDeleteForSupplementaryView(ofKind:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617807-indexpathstodeleteforsupplementa",
    "html": "Parameters\nkind\n\nThe specific type of supplementary view.\n\nReturn Value\n\nAn array of NSIndexPath objects indicating the supplementary views you want to remove or an empty array if you do not want to remove any views of the given kind.\n\nDiscussion\n\nThe collection view calls this method whenever you delete cells or sections to the collection view. Implementing this method gives your layout object an opportunity to remove any supplementary views that are no longer needed.\n\nThe collection view calls this method between its calls to prepare(forCollectionViewUpdates:) and finalizeCollectionViewUpdates().\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "initialLayoutAttributesForAppearingSupplementaryElement(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617737-initiallayoutattributesforappear",
    "html": "Parameters\nelementKind\n\nA string that identifies the type of supplementary view.\n\nelementIndexPath\n\nThe index path of the item being inserted.\n\nReturn Value\n\nA layout attributes object that describes the position at which to place the corresponding supplementary view.\n\nDiscussion\n\nThis method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any supplementary views that are about to be inserted. Your implementation should return the layout information that describes the initial position and state of the view. The collection view uses this information as the starting point for any animations. (The end point of the animation is the view’s new location in the collection view.) If you return nil, the layout object uses the item’s final attributes for both the start and end points of the animation.\n\nThe default implementation of this method returns nil.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "finalLayoutAttributesForDisappearingSupplementaryElement(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617742-finallayoutattributesfordisappea",
    "html": "Parameters\nelementKind\n\nA string that identifies the type of supplementary view.\n\nelementIndexPath\n\nThe index path of the view being deleted.\n\nReturn Value\n\nA layout attributes object that describes the position of the supplementary view to use as the end point for animating its removal.\n\nDiscussion\n\nThis method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any supplementary views that are about to be deleted. Your implementation should return the layout information that describes the final position and state of the view. The collection view uses this information as the end point for any animations. (The starting point of the animation is the view’s current location.) If you return nil, the layout object uses the same attributes for both the start and end points of the animation.\n\nThe default implementation of this method returns nil.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "finalLayoutAttributesForDisappearingItem(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617740-finallayoutattributesfordisappea",
    "html": "Parameters\nitemIndexPath\n\nThe index path of the item being deleted.\n\nReturn Value\n\nA layout attributes object that describes the position of the cell to use as the end point for animating its removal.\n\nDiscussion\n\nThis method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any items that are about to be deleted. Your implementation should return the layout information that describes the final position and state of the item. The collection view uses this information as the end point for any animations. (The starting point of the animation is the item’s current location.) If you return nil, the layout object uses the same attributes for both the start and end points of the animation.\n\nThe default implementation of this method returns nil.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "finalLayoutAttributesForDisappearingDecorationElement(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617762-finallayoutattributesfordisappea",
    "html": "Parameters\nelementKind\n\nA string that identifies the type of decoration view.\n\nelementIndexPath\n\nThe index path of the view being deleted.\n\nReturn Value\n\nA layout attributes object that describes the position of the decoration view to use as the end point for animating its removal.\n\nDiscussion\n\nThis method is called after the prepare(forCollectionViewUpdates:) method and before the finalizeCollectionViewUpdates() method for any decoration views that are about to be deleted. Your implementation should return the layout information that describes the final position and state of the view. The collection view uses this information as the end point for any animations. (The starting point of the animation is the view’s current location.) If you return nil, the layout object uses the same attributes for both the start and end points of the animation.\n\nThe default implementation of this method returns nil.\n\nSee Also\nResponding to collection view updates\nfunc prepare(forCollectionViewUpdates: [UICollectionViewUpdateItem])\nNotifies the layout object that the contents of the collection view are about to change.\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "invalidationContextClass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617790-invalidationcontextclass",
    "html": "Discussion\n\nIf you subclass UICollectionViewLayout and use a custom invalidation context object to improve the performance of your layout updates, override this method and return your UICollectionViewLayoutInvalidationContext subclass. When the collection view needs to invalidate your layout, it uses the class you provide to create an appropriate invalidation context object.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "collectionView(_:numberOfItemsInSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255132-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\nsection\n\nAn index number identifying a section in the collection view. This index value is 0-based.\n\nReturn Value\n\nThe number of items in the specified section. This method returns 0 if the section is empty.\n\nDiscussion\n\nIf you call this method with the index of a section that doesn’t exist in the collection view, the app throws an error.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nGetting item and section metrics\nfunc numberOfSections(in: UICollectionView) -> Int\nReturns the number of sections in the collection view."
  },
  {
    "title": "invalidationContext(forInteractivelyMovingItems:withTargetPosition:previousIndexPaths:previousPosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617757-invalidationcontext",
    "html": "Parameters\ntargetIndexPaths\n\nThe current locations of the items being moved.\n\ntargetPosition\n\nThe point in the collection view’s coordinate system that is the potential drop point for the items.\n\npreviousIndexPaths\n\nThe previous locations of the items being moved.\n\npreviousPosition\n\nThe previous point in the collection view’s coordinate system. This is the point that was previously used to determine the drop point for the items.\n\nReturn Value\n\nAn invalidation context that includes information about what changes need to be made to the layout.\n\nDiscussion\n\nThe layout object uses this method to retrieve invalidation contexts when an interactive move of one or more items is in progress. The default implementation creates an instance of the class provided by the invalidationContextClass class method, fills it with the provided information, and returns it. If you want to use a custom invalidation context object with your layout, always override that method and return your custom class.\n\nSubclasses can override this method and use it to perform additional configuration of the invalidation context before returning it. In your custom implementation, call super so that the parent class can perform the basic configuration of the object.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "userInteractionEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/1621063-userinteractionenabled",
    "html": "Discussion\n\nThis property is inherited from the UIView parent class. This class changes the default value of this property to NO.\n\nSee Also\nConfiguring the image view\nhighlighted\nA Boolean value that determines whether the image is highlighted.\ntintColor\nA color used to tint template images in the view hierarchy."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/1621060-highlighted",
    "html": "Discussion\n\nThis property determines whether the regular or highlighted images are used. When highlighted is set to YES, a non-animated image will use the highlightedImage property and an animated image will use the highlightedAnimationImages. If both of those properties are set to nil or if highlighted is set to NO, it will use the image and animationImages properties.\n\nSee Also\nConfiguring the image view\nuserInteractionEnabled\nA Boolean value that determines whether user events are ignored and removed from the event queue.\ntintColor\nA color used to tint template images in the view hierarchy."
  },
  {
    "title": "initWithImage:highlightedImage: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/1621064-initwithimage",
    "html": "Parameters\nimage\n\nThe initial image to display in the image view. You may specify an image object that contains an animated sequence of images.\n\nhighlightedImage\n\nThe image to display when the image view is highlighted. You may specify an image object that contains an animated sequence of images.\n\nReturn Value\n\nAn initialized image view object.\n\nDiscussion\n\nThe images you specify are used to configure the initial size of the image view itself. Use constraints and the image view’s content mode to adjust the image view’s final size onscreen. This method disables user interactions for the image view by setting the userInteractionEnabled property to NO.\n\nIf you specify an animated image whose duration is greater than 0, the image view automatically starts playing the animation.\n\nSee Also\nCreating an image view\n- initWithImage:\nReturns an image view initialized with the specified image."
  },
  {
    "title": "initWithImage: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/1621062-initwithimage",
    "html": "Parameters\nimage\n\nThe initial image to display in the image view. You may specify an image object that contains an animated sequence of images.\n\nReturn Value\n\nAn initialized image view object.\n\nDiscussion\n\nThe image you specified is used to configure the initial size of the image view itself. Use constraints and the image view’s content mode to adjust the image view’s final size onscreen. This method disables user interactions for the image view by setting the userInteractionEnabled property to NO.\n\nIf you specify an animated image whose duration is greater than 0, the image view automatically starts playing the animation.\n\nSee Also\nCreating an image view\n- initWithImage:highlightedImage:\nReturns an image view initialized with the specified regular and highlighted images."
  },
  {
    "title": "UIImageSymbolWeightBlack | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightblack",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight."
  },
  {
    "title": "animating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageview/2097534-animating",
    "html": "Return Value\n\nYES if the animation is running; otherwise, NO.\n\nSee Also\nAnimating a sequence of images\nanimationImages\nAn array of UIImage objects to use for an animation.\nhighlightedAnimationImages\nAn array of UIImage objects to use for an animation when the view is highlighted.\nanimationDuration\nThe amount of time it takes to go through one cycle of the images.\nanimationRepeatCount\nSpecifies the number of times to repeat the animation.\n- startAnimating\nStarts animating the images in the receiver.\n- stopAnimating\nStops animating the images in the receiver."
  },
  {
    "title": "UIImageRenderingModeAlwaysTemplate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagerenderingmode/uiimagerenderingmodealwaystemplate",
    "html": "See Also\nRendering modes\nUIImageRenderingModeAutomatic\nDraw the image using the context’s default rendering mode.\nUIImageRenderingModeAlwaysOriginal\nAlways draw the original image, without treating it as a template."
  },
  {
    "title": "UIImageOrientationUp | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationup",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears correctly \"right side up\". That is, this orientation is an identity value.\n\nFigure 1 The up orientation is the default, and requires no correction\n\nSee Also\nImage orientations\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationUp\nThe encoded image data matches the image's intended display orientation."
  },
  {
    "title": "UIImageRenderingModeAutomatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagerenderingmode/uiimagerenderingmodeautomatic",
    "html": "See Also\nRendering modes\nUIImageRenderingModeAlwaysOriginal\nAlways draw the original image, without treating it as a template.\nUIImageRenderingModeAlwaysTemplate\nAlways draw the image as a template image, ignoring its color information."
  },
  {
    "title": "UIFontWeightForImageSymbolWeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/3294237-uifontweightforimagesymbolweight",
    "html": "Parameters\nsymbolWeight\n\nThe symbol weight whose font weight you want.\n\nReturn Value\n\nThe UIFontWeight value that matches the specified symbol weight."
  },
  {
    "title": "UIImageSymbolWeightLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight/uiimagesymbolweightlight",
    "html": "See Also\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight."
  },
  {
    "title": "UIImageOrientationRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationright",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears to be rotated 90° counter-clockwise. (That is, to present the image in its intended orientation, you must rotate it 90° clockwise.)\n\nFigure 1 Correcting image data with right orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationRight\nThe encoded image data is rotated 90° clockwise from the image's intended display orientation."
  },
  {
    "title": "numberOfSections | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182915-numberofsections",
    "html": "See Also\nGetting item and section metrics\nvar numberOfItems: Int\nThe number of items in the snapshot.\nfunc numberOfItems(inSection: Any) -> Int\nReturns the number of items in the specified section of the snapshot."
  },
  {
    "title": "itemIdentifiersInSection(withIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182908-itemidentifiersinsection",
    "html": "Parameters\nsectionIdentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nAn array of identifiers of the items contained in the section.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [Any]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [Any]\nThe identifiers of all of the sections in the snapshot.\nfunc index(ofItemIdentifier: Any) -> Int\nReturns the index of the item in the snapshot with the specified identifier.\nfunc index(ofSectionIdentifier: Any) -> Int\nReturns the index of the section of the snapshot with the specified identifier.\nfunc sectionIdentifier(forSectionContainingItemIdentifier: Any) -> Any?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "numberOfItems(inSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182914-numberofitems",
    "html": "Parameters\nsectionIdentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nThe number of items in the specified section. This method returns 0 if the section is empty.\n\nDiscussion\n\nIf you call this method with the identifier of a section that doesn’t exist in the snapshot, the app throws an error.\n\nSee Also\nGetting item and section metrics\nvar numberOfItems: Int\nThe number of items in the snapshot.\nvar numberOfSections: Int\nThe number of sections in the snapshot."
  },
  {
    "title": "insertItems(withIdentifiers:afterItemWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182903-insertitems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to add to the snapshot.\n\nitemIdentifier\n\nThe identifier of the item after which to insert the new items.\n\nSee Also\nInserting items and sections\nfunc insertItems(withIdentifiers: [Any], beforeItemWithIdentifier: Any)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], afterSectionWithIdentifier: Any)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], beforeSectionWithIdentifier: Any)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "itemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182907-itemidentifiers",
    "html": "See Also\nIdentifying items and sections\nvar sectionIdentifiers: [Any]\nThe identifiers of all of the sections in the snapshot.\nfunc index(ofItemIdentifier: Any) -> Int\nReturns the index of the item in the snapshot with the specified identifier.\nfunc index(ofSectionIdentifier: Any) -> Int\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiersInSection(withIdentifier: Any) -> [Any]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(forSectionContainingItemIdentifier: Any) -> Any?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "reloadedItemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3857604-reloadeditemidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the items that the view reloads when you apply the snapshot to your data source.\n\nSee Also\nReloading data\nfunc reconfigureItems(withIdentifiers: [Any])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [Any]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems(withIdentifiers: [Any])\nReloads the data within the specified items in the snapshot.\nfunc reloadSections(withIdentifiers: [Any])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [Any]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "moveItem(withIdentifier:beforeItemWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182910-moveitem",
    "html": "Parameters\nfromIdentifier\n\nThe identifier of the item to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the item before which to move the specified item.\n\nSee Also\nReordering items and sections\nfunc moveItem(withIdentifier: Any, afterItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveSection(withIdentifier: Any, afterSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\nfunc moveSection(withIdentifier: Any, beforeSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "reloadItems(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182916-reloaditems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to reload in the snapshot.\n\nSee Also\nReloading data\nfunc reconfigureItems(withIdentifiers: [Any])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [Any]\nIdentifies the items reconfigured by the changes to the snapshot.\nvar reloadedItemIdentifiers: [Any]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections(withIdentifiers: [Any])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [Any]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "accessoryAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623249-accessoryaction",
    "html": "Deprecated\n\nInstead, use tableView:commitEditingStyle:forRowAtIndexPath: or tableView:accessoryButtonTappedForRowWithIndexPath: for handling taps on cells.\n\nDiscussion\n\nIf you specify a selector for the accessory action, a message is sent only if the accessory view is a detail disclosure button—that is, the cell's accessoryType property is assigned a value ofUITableViewCellAccessoryDetailDisclosureButton. If the value of this property is NULL, no action message is sent.\n\nThe accessory view is a UITableViewCell-defined control, framework control, or custom control on the right side of the cell. It is often used to display a new view related to the selected cell. If the accessory view inherits from UIControl, you may set a target and action through the addTarget:action:forControlEvents: method. See accessoryView for more information.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated"
  },
  {
    "title": "NSControlCharacterParagraphBreakAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscontrolcharacterparagraphbreakaction",
    "html": "Discussion\n\nThe value in firstLineHeadIndent is used for the following glyph."
  },
  {
    "title": "dequeueReusableCellWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614891-dequeuereusablecellwithidentifie",
    "html": "Parameters\nidentifier\n\nA string identifying the cell object to be reused. This parameter must not be nil.\n\nReturn Value\n\nA UITableViewCell object with the associated identifier, or nil if no such object exists in the reusable-cell queue.\n\nDiscussion\n\nFor performance reasons, a table view’s data source should generally reuse UITableViewCell objects when it assigns cells to rows in its tableView:cellForRowAtIndexPath: method. A table view maintains a queue or list of UITableViewCell objects that the data source has marked for reuse. Call this method from your data source object when asked to provide a new cell for the table view. This method dequeues an existing cell if one is available or creates a new one using the class or nib file you previously registered. If no cell is available for reuse and you didn’t register a class or nib file, this method returns nil.\n\nIf you registered a class for the specified identifier and a new cell must be created, this method initializes the cell by calling its initWithStyle:reuseIdentifier: method. For nib-based cells, this method loads the cell object from the provided nib file. If an existing cell was available for reuse, this method calls the cell’s prepareForReuse method instead.\n\nSee Also\nRecycling table view cells\n- registerNib:forCellReuseIdentifier:\nRegisters a nib object that contains a cell with the table view under a specified identifier.\n- registerClass:forCellReuseIdentifier:\nRegisters a class to use in creating new table cells.\n- dequeueReusableCellWithIdentifier:forIndexPath:\nReturns a reusable table-view cell object for the specified reuse identifier and adds it to the table."
  },
  {
    "title": "UITableViewCell.SeparatorStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/separatorstyle",
    "html": "Overview\n\nYou use these constants to set the value of the separatorStyle property defined by UITableView.\n\nTopics\nConstants\ncase none\nThe separator cell has no distinct style.\ncase singleLine\nThe separator cell has a single line running across its width.\ncase singleLineEtched\nThe separator cell has double lines running across its width, giving it an etched look.\nDeprecated\nRelationships\nConforms To\nSendable\nSee Also\nManaging content indentation\nvar indentationLevel: Int\nThe indentation level of the cell’s content.\nvar indentationWidth: CGFloat\nThe width for each level of indentation of a cell’s content.\nvar shouldIndentWhileEditing: Bool\nA Boolean value that controls whether the cell background is indented when the table view is in editing mode.\nvar separatorInset: UIEdgeInsets\nThe inset values for the separator line drawn beneath the cell."
  },
  {
    "title": "UITableViewCell.FocusStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/focusstyle",
    "html": "Overview\n\nYou use these constants to set the value of the focusStyle property.\n\nTopics\nConstants\ncase `default`\nThe cell alters its appearance in a standard, system-defined way when it becomes focused.\ncase custom\nThe cell doesn’t alter its appearance automatically when it becomes focused.\nRelationships\nConforms To\nSendable\nSee Also\nManaging focus\nvar focusStyle: UITableViewCell.FocusStyle\nThe appearance of the cell when focused."
  },
  {
    "title": "text | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623237-text",
    "html": "Deprecated\n\nUse the textLabel and detailTextLabel properties instead.\n\nDiscussion\n\nThe default is nil (no text).\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "selectedTextColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623251-selectedtextcolor",
    "html": "Deprecated\n\nInstead, set the highlightedTextColor property of the UILabel objects assigned to the textLabel and detailTextLabel properties.\n\nDiscussion\n\nIf the value of property is nil (the default), the color of text in a selected cell is white.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623213-image",
    "html": "Deprecated\n\nInstead, use the imageView property to get UIImageView object and then get or set the encapsulated image.\n\nDiscussion\n\nThe default value of the property is nil (no image). Images are positioned to the left of the title.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "editAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623206-editaction",
    "html": "Deprecated\n\nInstead, use tableView:commitEditingStyle:forRowAtIndexPath: or tableView:accessoryButtonTappedForRowWithIndexPath: for handling taps on cells.\n\nDiscussion\n\nWhen the cell's table is in editing mode, the cell displays a green insert control or a red delete control to the left of it. (The selectedBackgroundView constant applied to the cell via the editingStyle property determines which control is used.) Typically, the associated UITableView object sets the editing action for all cells; you can use this property to alter the editing action for individual cells. If the value of this property is NULL, no action message is sent.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "textColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623235-textcolor",
    "html": "Deprecated\n\nInstead, set the text color attribute of the UILabel objects assigned to the textLabel and detailTextLabel properties.\n\nDiscussion\n\nIf the value of property is nil (the default), the color of text is black.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "numberOfSections(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255155-numberofsections",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nReturn Value\n\nThe number of sections in tableView.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nProviding the number of rows and sections\nfunc tableView(UITableView, numberOfRowsInSection: Int) -> Int\nReturns the number of rows in the specified section of the table view."
  },
  {
    "title": "font | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623236-font",
    "html": "Deprecated\n\nInstead, set the fonts of the UILabel objects assigned to the textLabel and detailTextLabel properties.\n\nDiscussion\n\nIf the value of this property is nil (the default), UITableViewCell uses a standard font optimized for the device.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "textAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623284-textalignment",
    "html": "Deprecated\n\nInstead, set the text alignment of the UILabel objects assigned to the textLabel and detailTextLabel properties.\n\nDiscussion\n\nIf the value of the property is nil (the default), the title is left-aligned (UITextAlignmentLeft). See the descriptions of the UITextAlignment constants for alternative text alignments.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "hidesAccessoryWhenEditing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623230-hidesaccessorywhenediting",
    "html": "Deprecated\n\nUse the editingAccessoryType and editingAccessoryView properties instead.\n\nDiscussion\n\nThe default value is YES.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "selectedImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623215-selectedimage",
    "html": "Deprecated\n\nInstead, use the imageView property to obtain the UIImageView object and then get or set its highlightedImage property.\n\nDiscussion\n\nThe default value of this property is nil (no image).\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "tableView(_:cellForRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255157-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nindexPath\n\nAn index path locating a row in tableView.\n\nReturn Value\n\nA cell object that the table view can use for the specified row.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nProviding cells, headers, and footers\nfunc tableView(UITableView, titleForHeaderInSection: Int) -> String?\nReturns the title of the header of the specified section of the table view.\nfunc tableView(UITableView, titleForFooterInSection: Int) -> String?\nReturns the title of the footer of the specified section of the table view."
  },
  {
    "title": "tableView(_:titleForHeaderInSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375820-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nsection\n\nAn index number identifying a section of tableView.\n\nReturn Value\n\nA string to use as the title of the section header.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nProviding cells, headers, and footers\nfunc tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell\nReturns a cell to insert in a particular location of the table view.\nfunc tableView(UITableView, titleForFooterInSection: Int) -> String?\nReturns the title of the footer of the specified section of the table view."
  },
  {
    "title": "tableView(_:commit:forRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375816-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting the insertion or deletion.\n\neditingStyle\n\nThe cell editing style corresponding to an insertion or deletion requested for the row specified by indexPath. Possible editing styles are UITableViewCell.EditingStyle.insert or UITableViewCell.EditingStyle.delete.\n\nindexPath\n\nAn index path locating the row in tableView.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nInserting or deleting table rows\nfunc tableView(UITableView, canEditRowAt: IndexPath) -> Bool\nDetermines whether the specified row is editable."
  },
  {
    "title": "tableView(_:titleForFooterInSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375819-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nsection\n\nAn index number identifying a section of tableView.\n\nReturn Value\n\nA string to use as the title of the section footer.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nProviding cells, headers, and footers\nfunc tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell\nReturns a cell to insert in a particular location of the table view.\nfunc tableView(UITableView, titleForHeaderInSection: Int) -> String?\nReturns the title of the header of the specified section of the table view."
  },
  {
    "title": "tableView(_:canMoveRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375815-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nindexPath\n\nAn index path locating a row in tableView.\n\nReturn Value\n\ntrue if the row can be moved; otherwise false.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nReordering table rows\nfunc tableView(UITableView, moveRowAt: IndexPath, to: IndexPath)\nMoves a row at the specified location in the table view to another location."
  },
  {
    "title": "tableView(_:canEditRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375814-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nindexPath\n\nAn index path locating a row in tableView.\n\nReturn Value\n\ntrue if the row indicated by indexPath is editable; otherwise, false.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nInserting or deleting table rows\nfunc tableView(UITableView, commit: UITableViewCell.EditingStyle, forRowAt: IndexPath)\nCommits the insertion or deletion of a specified row."
  },
  {
    "title": "tableView(_:moveRowAt:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375817-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this action.\n\nsourceIndexPath\n\nAn index path locating the row to be moved in tableView.\n\ndestinationIndexPath\n\nAn index path locating the row in tableView that is the destination of the move.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nReordering table rows\nfunc tableView(UITableView, canMoveRowAt: IndexPath) -> Bool\nDetermines whether the specified row can move to another location in the table view."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicornercurve/4278161-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible\nSee Also\nDescribing a corner style\nvar description: String\nA textual representation of this instance."
  },
  {
    "title": "UICornerCurve.continuous | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicornercurve/continuous",
    "html": "See Also\nChoosing a corner style\ncase automatic\nSelects the corner style automatically.\ncase circular\nAlways uses a circular corner style."
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicornercurve/4278162-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible\nSee Also\nDescribing a corner style\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging."
  },
  {
    "title": "UICornerCurve.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicornercurve/automatic",
    "html": "See Also\nChoosing a corner style\ncase circular\nAlways uses a circular corner style.\ncase continuous\nAlways uses a continuous corner style."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/3600926",
    "html": "See Also\nComparing header modes\nstatic func != (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the header mode by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UICornerCurve.circular | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicornercurve/circular",
    "html": "See Also\nChoosing a corner style\ncase automatic\nSelects the corner style automatically.\ncase continuous\nAlways uses a continuous corner style."
  },
  {
    "title": "shouldInvalidateLayout(forPreferredLayoutAttributes:withOriginalAttributes:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617746-shouldinvalidatelayout",
    "html": "Parameters\npreferredAttributes\n\nThe layout attributes returned by the cell’s preferredLayoutAttributesFitting(_:) method.\n\noriginalAttributes\n\nThe attributes that the layout object originally suggested for the cell.\n\nReturn Value\n\ntrue if the layout should be invalidated or false if it should not.\n\nDiscussion\n\nWhen a collection view includes self-sizing cells, the cells are given the opportunity to modify their own layout attributes before those attributes are applied. A self-sizing cell might do this to specify a different cell size than the one the layout object provides. When the cell provides a different set of attributes, the collection view calls this method to determine if the cell’s change requires a larger layout refresh.\n\nIf you are implementing a custom layout, you can override this method and use it to determine if your layout should be invalidated based on the specified attributes. The default implementation of this method returns false.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths:previousIndexPaths:movementCancelled:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617755-invalidationcontextforendinginte",
    "html": "Parameters\nindexPaths\n\nThe final locations of the items. For cancelled interactions, these index paths correspond to the original index paths of the items.\n\npreviousIndexPaths\n\nThe previous locations of the items. This parameter contains the last set of index paths reported by the collection view during the movement sequence.\n\nmovementCancelled\n\nA Boolean value indicating whether the interactive movement ended successfully or was cancelled.\n\nReturn Value\n\nAn invalidation context that includes information about what changes need to be made to the layout.\n\nDiscussion\n\nThe layout object uses this method to retrieve invalidation contexts when an interactive move of one or more items ends, either because the move was successful or because it was cancelled by the user. The default implementation creates an instance of the class provided by the invalidationContextClass class method, fills it with the provided information, and returns it. If you want to use a custom invalidation context object with your layout, always override that method and return your custom class.\n\nSubclasses can override this method and use it to perform additional configuration of the invalidation context before returning it. In your custom implementation, call super so that the parent class can perform the basic configuration of the object.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout."
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4278168-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible\nSee Also\nDescribing a resolved shape\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging."
  },
  {
    "title": "inset(by:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4278170-inset",
    "html": "Discussion\n\nYou can use negative values to add inner padding to a shape.\n\nIf it isn’t possible to inset this shape (for example, if it’s a custom path), this method doesn’t have any effect. For some shapes like rounded rectangles, this method can also modify the corner radii of the shape to ensure the resulting corners are concentric.\n\nSee Also\nCreating a resolved shape by applying insets\nfunc inset(by: CGFloat) -> UIShape.Resolved\nCreates a new modified shape by applying the provided inset to this shape."
  },
  {
    "title": "difference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600740-difference",
    "html": "See Also\nAccessing a transaction's information\nvar sectionIdentifier: SectionIdentifierType\nThe identifier of the section for the transaction.\nvar initialSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot before the transaction occured.\nvar finalSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot after the transaction occured."
  },
  {
    "title": "sectionIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600743-sectionidentifier",
    "html": "See Also\nAccessing a transaction's information\nvar initialSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot before the transaction occured.\nvar finalSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot after the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final section snapshots."
  },
  {
    "title": "collectionView(_:viewForSupplementaryElementOfKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255133-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\nkind\n\nThe kind of supplementary view to provide. The value of this string is defined by the layout object that supports the supplementary view.\n\nindexPath\n\nThe index path that specifies the location of the new supplementary view.\n\nReturn Value\n\nA configured supplementary view object.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nGetting views for items\nfunc collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell\nReturns the cell that corresponds to the item at the specified index path in the collection view."
  },
  {
    "title": "willExpandItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/sectionsnapshothandlers/3600963-willexpanditem",
    "html": "See Also\nExpanding and collapsing items\nvar shouldCollapseItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is collapsable.\nvar shouldExpandItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is expandable.\nvar willCollapseItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for collapsing an item.\nvar snapshotForExpandingParent: ((ItemIdentifierType, NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)?\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "snapshotForExpandingParent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/sectionsnapshothandlers/3600961-snapshotforexpandingparent",
    "html": "Discussion\n\nUse the snapshotForExpandingParent handler to customize the snapshot that returns when a particular parent item is expanded.\n\n// Allow every item to be collapsed\ndataSource.sectionSnapshotHandlers.shouldCollapseItem = { item in return true }\n\n\ndataSource.sectionSnapshotHandlers.snapshotForExpandingParent = {\n    parent, existingSnapshot -> NSDiffableDataSourceSectionSnapshot<String> in\n    \n    // Return child snapshot for the parent, or just existingSnapshot\n}\n\n\nSee Also\nExpanding and collapsing items\nvar shouldCollapseItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is collapsable.\nvar shouldExpandItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is expandable.\nvar willCollapseItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for collapsing an item.\nvar willExpandItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for expanding an item."
  },
  {
    "title": "appendItems(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182895-appenditems",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers specifying the items to add to the snapshot.\n\nSee Also\nCreating a snapshot\nfunc appendSections(withIdentifiers: [Any])\nAdds the sections with the specified identifiers to the snapshot.\nfunc appendItems(withIdentifiers: [Any], intoSectionWithIdentifier: Any)\nAdds the items with the specified identifiers to the specified section of the snapshot."
  },
  {
    "title": "numberOfItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182913-numberofitems",
    "html": "See Also\nGetting item and section metrics\nvar numberOfSections: Int\nThe number of sections in the snapshot.\nfunc numberOfItems(inSection: Any) -> Int\nReturns the number of items in the specified section of the snapshot."
  },
  {
    "title": "index(ofItemIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182901-index",
    "html": "Parameters\nitemIdentifier\n\nThe identifier of the item in the snapshot.\n\nReturn Value\n\nThe index of the item in the snapshot, or NSNotFound if the item with the specified identifier doesn't exist in the snapshot. This index value is 0-based.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [Any]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [Any]\nThe identifiers of all of the sections in the snapshot.\nfunc index(ofSectionIdentifier: Any) -> Int\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiersInSection(withIdentifier: Any) -> [Any]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(forSectionContainingItemIdentifier: Any) -> Any?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "sectionIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182919-sectionidentifiers",
    "html": "See Also\nIdentifying items and sections\nvar itemIdentifiers: [Any]\nThe identifiers of all of the items in the snapshot.\nfunc index(ofItemIdentifier: Any) -> Int\nReturns the index of the item in the snapshot with the specified identifier.\nfunc index(ofSectionIdentifier: Any) -> Int\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiersInSection(withIdentifier: Any) -> [Any]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(forSectionContainingItemIdentifier: Any) -> Any?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "index(ofSectionIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182902-index",
    "html": "Parameters\nsectionIdentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nThe index of the section of the snapshot, or NSNotFound if the section with the specified identifier doesn't exist in the snapshot. This index value is 0-based.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [Any]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [Any]\nThe identifiers of all of the sections in the snapshot.\nfunc index(ofItemIdentifier: Any) -> Int\nReturns the index of the item in the snapshot with the specified identifier.\nfunc itemIdentifiersInSection(withIdentifier: Any) -> [Any]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(forSectionContainingItemIdentifier: Any) -> Any?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "sectionIdentifier(forSectionContainingItemIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182918-sectionidentifier",
    "html": "Parameters\nitemIdentifier\n\nThe identifier of the item contained in the section of the snapshot.\n\nReturn Value\n\nThe identifier of the section containing the specified item, or nil if the specified item doesn't exist in any section of the snapshot.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [Any]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [Any]\nThe identifiers of all of the sections in the snapshot.\nfunc index(ofItemIdentifier: Any) -> Int\nReturns the index of the item in the snapshot with the specified identifier.\nfunc index(ofSectionIdentifier: Any) -> Int\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiersInSection(withIdentifier: Any) -> [Any]\nReturns the identifiers of all of the items in the specified section of the snapshot."
  },
  {
    "title": "insertSections(withIdentifiers:beforeSectionWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182906-insertsections",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to add to the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section before which to insert the new sections.\n\nSee Also\nInserting items and sections\nfunc insertItems(withIdentifiers: [Any], afterItemWithIdentifier: Any)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertItems(withIdentifiers: [Any], beforeItemWithIdentifier: Any)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], afterSectionWithIdentifier: Any)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot."
  },
  {
    "title": "insertItems(withIdentifiers:beforeItemWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182904-insertitems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to add to the snapshot.\n\nitemIdentifier\n\nThe identifier of the item before which to insert the new items.\n\nSee Also\nInserting items and sections\nfunc insertItems(withIdentifiers: [Any], afterItemWithIdentifier: Any)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], afterSectionWithIdentifier: Any)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], beforeSectionWithIdentifier: Any)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "moveItem(withIdentifier:afterItemWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182909-moveitem",
    "html": "Parameters\nfromIdentifier\n\nThe identifier of the item to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the item after which to move the specified item.\n\nSee Also\nReordering items and sections\nfunc moveItem(withIdentifier: Any, beforeItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(withIdentifier: Any, afterSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\nfunc moveSection(withIdentifier: Any, beforeSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "reconfiguredItemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3857603-reconfigureditemidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the items that the view reconfigures when you apply the snapshot to your data source.\n\nSee Also\nReloading data\nfunc reconfigureItems(withIdentifiers: [Any])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nfunc reloadItems(withIdentifiers: [Any])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [Any]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections(withIdentifiers: [Any])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [Any]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "deleteItems(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182899-deleteitems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to delete from the snapshot.\n\nSee Also\nRemoving items and sections\nfunc deleteAllItems()\nDeletes all of the items from the snapshot.\nfunc deleteSections(withIdentifiers: [Any])\nDeletes the sections with the specified identifiers from the snapshot."
  },
  {
    "title": "deleteSections(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182900-deletesections",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to delete from the snapshot.\n\nSee Also\nRemoving items and sections\nfunc deleteAllItems()\nDeletes all of the items from the snapshot.\nfunc deleteItems(withIdentifiers: [Any])\nDeletes the items with the specified identifiers from the snapshot."
  },
  {
    "title": "insertSections(withIdentifiers:afterSectionWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182905-insertsections",
    "html": "Parameters\nsectionIdentifiers\n\nThe array of identifiers corresponding to the sections to add to the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section after which to insert the new sections.\n\nSee Also\nInserting items and sections\nfunc insertItems(withIdentifiers: [Any], afterItemWithIdentifier: Any)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertItems(withIdentifiers: [Any], beforeItemWithIdentifier: Any)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], beforeSectionWithIdentifier: Any)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "reconfigureItems(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3801890-reconfigureitems",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers corresponding to the items to update data for in the snapshot.\n\nDiscussion\n\nTo update the contents of existing (including prefetched) cells without replacing them with new cells, use this method instead of reloadItems(withIdentifiers:). For optimal performance, choose to reconfigure items instead of reloading items unless you have an explicit need to replace the existing cell with a new cell.\n\nYour cell provider must dequeue the same type of cell for the provided index path, and must return the same existing cell for a given index path. Because this method reconfigures existing cells, the collection view or table view doesn’t call prepareForReuse for each cell dequeued. If you need to return a different type of cell for an index path, use reloadItems(withIdentifiers:) instead.\n\nIf your cells are self-sizing, the collection view or table view resizes your cells after reconfiguring them.\n\nSet the animatingDifferences parameter to tell the collection view or table view whether to animate any size or layout changes that are a result of reconfiguration when you apply the snapshot to your data source. To avoid animations when setting specific properties, use performWithoutAnimation(_:) in your cell configuration logic.\n\nIf your collection view or table view uses a diffable data source, use this method. If your collection view uses a custom implementation of UICollectionViewDataSource, use reconfigureItems(at:) instead. If your table view uses a custom implementation of UITableViewDataSource, use reconfigureRows(at:) instead.\n\nSee Also\nReloading data\nvar reconfiguredItemIdentifiers: [Any]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems(withIdentifiers: [Any])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [Any]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections(withIdentifiers: [Any])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [Any]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "reloadedSectionIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3857605-reloadedsectionidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the sections that the view reloads when you apply the snapshot to your data source.\n\nSee Also\nReloading data\nfunc reconfigureItems(withIdentifiers: [Any])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [Any]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems(withIdentifiers: [Any])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [Any]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections(withIdentifiers: [Any])\nReloads the data within the specified sections of the snapshot."
  },
  {
    "title": "invalidateLayout() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617728-invalidatelayout",
    "html": "Discussion\n\nYou can call this method at any time to update the layout information. This method invalidates the layout of the collection view itself and returns right away. Thus, you can call this method multiple times from the same block of code without triggering multiple layout updates. The actual layout update occurs during the next view layout update cycle.\n\nIf you override this method, you must call super at some point in your implementation.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout(with: UICollectionViewLayoutInvalidationContext)\nInvalidates the current layout using the information in the provided context object.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "UIContextualAction.Style.normal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/style/normal",
    "html": "See Also\nStyles\ncase destructive\nAn action that deletes data or performs some type of destructive task."
  },
  {
    "title": "target | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623272-target",
    "html": "Deprecated\n\nInstead, use tableView:commitEditingStyle:forRowAtIndexPath: or tableView:accessoryButtonTappedForRowWithIndexPath: for handling taps on cells.\n\nDiscussion\n\nThe target object receives action messages when the user taps a cell’s insert button, delete button, or accessory view. The default value is nil, which tells the application to go up the responder chain to find a target. Note that the target is a weak reference.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\n- initWithFrame:reuseIdentifier:\nInitializes and returns a table cell object.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated"
  },
  {
    "title": "destructive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/style/1614917-destructive",
    "html": "See Also\nStyles\ncase `default`\nApply the default style to the button.\nDeprecated\ncase normal\nApply a style that reflects standard non-destructive actions.\nDeprecated"
  },
  {
    "title": "UIContextualAction.Style.destructive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/style/destructive",
    "html": "See Also\nStyles\ncase normal\nA normal action."
  },
  {
    "title": "UITableViewRowAction.Style.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/style/default",
    "html": "See Also\nStyles\nstatic var destructive: UITableViewRowAction.Style\nEqual to the default style.\nDeprecated\ncase normal\nApply a style that reflects standard non-destructive actions.\nDeprecated"
  },
  {
    "title": "tableView(_:numberOfRowsInSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255158-tableview",
    "html": "Parameters\ntableView\n\nThe table view object requesting this information.\n\nsection\n\nAn index number identifying a section in the table view.\n\nReturn Value\n\nThe number of rows in section.\n\nRelationships\nFrom Protocol\nUITableViewDataSource\nSee Also\nProviding the number of rows and sections\nfunc numberOfSections(in: UITableView) -> Int\nReturns the number of sections in the table view."
  },
  {
    "title": "UITableViewRowAction.Style.normal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/style/normal",
    "html": "See Also\nStyles\ncase `default`\nApply the default style to the button.\nDeprecated\nstatic var destructive: UITableViewRowAction.Style\nEqual to the default style.\nDeprecated"
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/3600928-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing header modes\nstatic func == (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are equal.\nstatic func != (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "isAbsolute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199060-isabsolute",
    "html": "See Also\nGetting the dimension type\nvar isEstimated: Bool\nA Boolean value that indicates whether the dimension is expressed as an estimated value.\nvar isFractionalHeight: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s height.\nvar isFractionalWidth: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s width.\nvar isUniformAcrossSiblings: Bool\nA Boolean value that indicates whether the dimension grows to match the dimension of its largest sibling."
  },
  {
    "title": "UICollectionLayoutListConfiguration.FooterMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/footermode",
    "html": "Topics\nFooter modes\ncase none\nNo footers are shown.\ncase supplementary\nA footer mode that uses supplementary views to show footers.\nComparing footer modes\nstatic func == (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are equal.\nstatic func != (UICollectionLayoutListConfiguration.FooterMode, UICollectionLayoutListConfiguration.FooterMode) -> Bool\nAn operator for checking whether two footer modes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the footer mode by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nSee Also\nConfiguring headers and footers\nvar headerMode: UICollectionLayoutListConfiguration.HeaderMode\nThe type of header to use for the list.\nvar footerMode: UICollectionLayoutListConfiguration.FooterMode\nThe type of footer to use for the list.\nenum UICollectionLayoutListConfiguration.HeaderMode\nConstants that describe the list’s header mode.\nvar headerTopPadding: CGFloat?\nThe amount of padding above each section header."
  },
  {
    "title": "items | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600305-items",
    "html": "See Also\nAccessing items\nvar rootItems: [Any]\nThe identifiers of the items at the top level of the section snapshot’s hierarchy.\nvar visibleItems: [Any]\nThe identifiers of the currently visible items in the section snapshot."
  },
  {
    "title": "UICollectionLayoutListConfiguration.HeaderMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode",
    "html": "Topics\nHeader modes\ncase none\nNo headers are shown.\ncase supplementary\nA header mode that uses supplementary views to show headers.\ncase firstItemInSection\nA header mode that styles the first item in a section as a header.\nComparing header modes\nstatic func == (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are equal.\nstatic func != (UICollectionLayoutListConfiguration.HeaderMode, UICollectionLayoutListConfiguration.HeaderMode) -> Bool\nAn operator for checking whether two header modes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the header mode by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nSee Also\nConfiguring headers and footers\nvar headerMode: UICollectionLayoutListConfiguration.HeaderMode\nThe type of header to use for the list.\nvar footerMode: UICollectionLayoutListConfiguration.FooterMode\nThe type of footer to use for the list.\nenum UICollectionLayoutListConfiguration.FooterMode\nConstants that describe the list’s footer mode.\nvar headerTopPadding: CGFloat?\nThe amount of padding above each section header."
  },
  {
    "title": "ofParentItem(_:includingParentItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600311-ofparentitem",
    "html": "See Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\nfunc ofParentItem(Any) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, excluding the parent item.\nfunc appendItems([Any])\nAdds the specified items to the section snapshot.\nfunc appendItems([Any], intoParentItem: Any?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "UIListSeparatorConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistseparatorconfiguration",
    "html": "Overview\n\nTo specify list separator appearance for a section, set a default sectionwide separatorConfiguration on your UICollectionLayoutListConfiguration when you create your list.\n\nvar listConfig = UICollectionLayoutListConfiguration(appearance: .plain)\nlistConfig.separatorConfiguration.color = .tertiarySystemFill\nlet layout = UICollectionViewCompositionalLayout.list(using: listConfig)\n\n\nTo override list separator appearance on a per-item basis, use the itemSeparatorHandler property.\n\nvar listConfig = UICollectionLayoutListConfiguration(appearance: .plain)\nlistConfig.separatorConfiguration.color = .tertiarySystemFill\n\n\nlet indexPathToHide = IndexPath()\n \nlistConfig.itemSeparatorHandler = { (indexPath, sectionSeparatorConfiguration) in    \n    var configuration = sectionSeparatorConfiguration\n    if indexPath == indexPathToHide {\n        configuration.bottomSeparatorVisibility = .hidden    \n    }    \n    return configuration\n}\n\n\nlet layout = UICollectionViewCompositionalLayout.list(using: listConfig)\n\n\nTopics\nCreating a list separator configuration\ninit(listAppearance: UICollectionLayoutListConfiguration.Appearance)\nCreates a list separator configuration with default values according to the specified list appearance.\nControlling separator visibility\nvar topSeparatorVisibility: UIListSeparatorConfiguration.Visibility\nThe visibility of the top separator for the item the configuration applies to.\nvar bottomSeparatorVisibility: UIListSeparatorConfiguration.Visibility\nThe visibility of the bottom separator for the item the configuration applies to.\nenum UIListSeparatorConfiguration.Visibility\nConstants that define the visibility of list separators.\nConfiguring separator insets\nvar topSeparatorInsets: NSDirectionalEdgeInsets\nInsets to apply to the top separator of the item the configuration applies to.\nvar bottomSeparatorInsets: NSDirectionalEdgeInsets\nInsets to apply to the bottom separator of the item the configuration applies to.\nstatic let automaticInsets: NSDirectionalEdgeInsets\nA constant that specifies a placeholder size for separator insets.\nConfiguring separator appearance\nvar color: UIColor\nThe color to use for the separators of the item the configuration applies to.\nvar multipleSelectionColor: UIColor\nThe color to use for the separators of the item the configuration applies to when the item is in a multiple-selection group.\nvar visualEffect: UIVisualEffect?\nThe visual effect to use for the separators of the item the configuration applies to.\ncomparing list separator configurations\nstatic func == (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are equal.\nstatic func != (UIListSeparatorConfiguration, UIListSeparatorConfiguration) -> Bool\nAn operator for checking whether two list separator configurations are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list separator configuration by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nDescribing list separator configuration\nvar description: String\nA textual representation of this instance.\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging.\nvar customMirror: Mirror\nThe custom mirror for this instance.\nRelationships\nConforms To\nCustomDebugStringConvertible\nCustomReflectable\nCustomStringConvertible\nHashable\nSee Also\nConfiguring separators\nvar showsSeparators: Bool\nA Boolean value that determines whether the list shows separators between cells.\nvar separatorConfiguration: UIListSeparatorConfiguration\nThe section's preferred configuration for list separators.\nvar itemSeparatorHandler: UICollectionLayoutListConfiguration.ItemSeparatorHandler?\nThe closure that provides granular control over the list separator appearance of each item.\ntypealias UICollectionLayoutListConfiguration.ItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/3600915-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing list appearances\nstatic func == (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are equal.\nstatic func != (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list appearance type by feeding them into the hasher."
  },
  {
    "title": "appearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600932-appearance",
    "html": "See Also\nConfiguring appearance\nvar backgroundColor: UIColor?\nThe background color of the list.\nenum UICollectionLayoutListConfiguration.Appearance\nConstants that describe the appearance of the list."
  },
  {
    "title": "boundingRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4224546-boundingrect",
    "html": "See Also\nAccessing the resolved shape’s attributes\nlet shape: UIShape\nThe abstract shape that produces this resolved shape.\nvar path: UIBezierPath\nThe Bézier path representing this shape."
  },
  {
    "title": "backgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600933-backgroundcolor",
    "html": "Discussion\n\nThe default vaue is nil, which means that the configuration uses the system background color for the specified appearance.\n\nSee Also\nConfiguring appearance\nvar appearance: UICollectionLayoutListConfiguration.Appearance\nThe overall appearance of the list.\nenum UICollectionLayoutListConfiguration.Appearance\nConstants that describe the appearance of the list."
  },
  {
    "title": "verticalGroup(with:repeatingSubitem:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/4044352-verticalgroup",
    "html": "Deprecated\n\nUse vertical(layoutSize:repeatingSubitem:count:) instead.\n\nSee Also\nDeprecated\nclass func horizontal(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a horizontal line up to the number specified by count.\nclass func horizontalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the horizontal axis.\nclass func vertical(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a vertical line up to the number specified by count."
  },
  {
    "title": "prepareForTransition(to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617791-preparefortransition",
    "html": "Parameters\nnewLayout\n\nThe layout object to be installed in the collection view at the end of the transition. You might use this object to provide different starting attributes depending on the final layout object.\n\nDiscussion\n\nPrior to performing a layout transition, the collection view calls this method so that your layout object can perform any initial calculations needed to generate layout attributes.\n\nSee Also\nTransitioning between layouts\nfunc prepareForTransition(from: UICollectionViewLayout)\nTells the layout object to prepare to be installed as the layout for the collection view.\nfunc finalizeLayoutTransition()\nTells the layout object to perform any final steps before the transition animations occur."
  },
  {
    "title": "finalizeAnimatedBoundsChange() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617745-finalizeanimatedboundschange",
    "html": "Discussion\n\nThe collection view calls this method after creating the animations for changing the view’s bounds or after the animated insertion or deletion of items. This method is the layout object’s opportunity to do any cleanup related to those operations.\n\nYou can also use this method to perform additional animations. Any animations you create are added to the animation block used to handle the insertions, deletions, and bounds changes.\n\nSee Also\nCoordinating animated changes\nfunc prepare(forAnimatedBoundsChange: CGRect)\nPrepares the layout object for animated changes to the view’s bounds or the insertion or deletion of items."
  },
  {
    "title": "prepareForTransition(from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617802-preparefortransition",
    "html": "Parameters\noldLayout\n\nThe layout object installed in the collection view at the beginning of the transition. You might use this object to provide different ending attributes based on the starting layout object.\n\nDiscussion\n\nPrior to performing a layout transition, the collection view calls this method so that your layout object can perform any initial calculations needed to generate layout attributes.\n\nSee Also\nTransitioning between layouts\nfunc prepareForTransition(to: UICollectionViewLayout)\nTells the layout object that it is about to be removed as the layout for the collection view.\nfunc finalizeLayoutTransition()\nTells the layout object to perform any final steps before the transition animations occur."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4278166",
    "html": "See Also\nComparing resolved shapes\nstatic func != (UIShape.Resolved, UIShape.Resolved) -> Bool\nAn operator for checking whether two resolved shapes are unequal."
  },
  {
    "title": "inset(by:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4278169-inset",
    "html": "Discussion\n\nYou can use negative values to add inner padding to a shape.\n\nIf it isn’t possible to inset this shape (for example, if it’s a custom path), this method doesn’t have any effect. For some shapes like rounded rectangles, this method can also modify the corner radii of the shape to ensure the resulting corners are concentric.\n\nSee Also\nCreating a resolved shape by applying insets\nfunc inset(by: UIEdgeInsets) -> UIShape.Resolved\nCreates a new modified shape by applying the provided insets to this shape."
  },
  {
    "title": "finalSnapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600746-finalsnapshot",
    "html": "See Also\nAccessing a transaction's information\nvar sectionTransactions: [NSDiffableDataSourceSectionTransaction<SectionIdentifierType, ItemIdentifierType>]\nAn array of section transactions for the transaction.\nvar initialSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot before the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final snapshots."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4278165",
    "html": "See Also\nComparing resolved shapes\nstatic func == (UIShape.Resolved, UIShape.Resolved) -> Bool\nAn operator for checking whether two resolved shapes are equal."
  },
  {
    "title": "path | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4224547-path",
    "html": "See Also\nAccessing the resolved shape’s attributes\nlet shape: UIShape\nThe abstract shape that produces this resolved shape.\nvar boundingRect: CGRect\nThe bounding rectangle that frames the shape."
  },
  {
    "title": "contentShape | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolutioncontext/4224544-contentshape",
    "html": "Discussion\n\nFor example, if this shape applies an effect to a button, the contentShape might represent the bounding shape of that button’s background. You typically size a dynamic shape relative to the bounding rectangle of the contentShape."
  },
  {
    "title": "finalSnapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600741-finalsnapshot",
    "html": "See Also\nAccessing a transaction's information\nvar sectionIdentifier: SectionIdentifierType\nThe identifier of the section for the transaction.\nvar initialSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot before the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final section snapshots."
  },
  {
    "title": "numberOfSections(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255140-numberofsections",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\nReturn Value\n\nThe number of sections in the collection view. This method returns 0 if the collection view is empty.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nGetting item and section metrics\nfunc collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int\nReturns the number of items in the specified section."
  },
  {
    "title": "collectionView(_:moveItemAt:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3375798-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view notifying you of the move.\n\nsourceIndexPath\n\nThe item’s original index path.\n\ndestinationIndexPath\n\nThe new index path of the item.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nReordering items\nfunc collectionView(UICollectionView, canMoveItemAt: IndexPath) -> Bool\nReturns a Boolean value indicating whether the collection view can move the specified item to another location in the view."
  },
  {
    "title": "canReorderItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/reorderinghandlers/3600953-canreorderitem",
    "html": "See Also\nReordering items\nvar willReorder: ((NSDiffableDataSourceTransaction<SectionIdentifierType, ItemIdentifierType>) -> Void)?\nThe handler that prepares the diffable data source for reordering its items.\nvar didReorder: ((NSDiffableDataSourceTransaction<SectionIdentifierType, ItemIdentifierType>) -> Void)?\nThe handler that processes a reordering transaction."
  },
  {
    "title": "collectionView(_:cellForItemAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255131-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\nindexPath\n\nThe index path that specifies the location of the item.\n\nReturn Value\n\nA configured cell object.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nGetting views for items\nfunc collectionView(UICollectionView, viewForSupplementaryElementOfKind: String, at: IndexPath) -> UICollectionReusableView\nReturns a supplementary view for the specified element kind to display in the collection view."
  },
  {
    "title": "willCollapseItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/sectionsnapshothandlers/3600962-willcollapseitem",
    "html": "See Also\nExpanding and collapsing items\nvar shouldCollapseItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is collapsable.\nvar shouldExpandItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is expandable.\nvar willExpandItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for expanding an item.\nvar snapshotForExpandingParent: ((ItemIdentifierType, NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)?\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "trailingSwipeActionsConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3650483-trailingswipeactionsconfiguratio",
    "html": "See Also\nCustomizing Swipe Actions\nvar leadingSwipeActionsConfigurationProvider: UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider?\nThe closure that provides the set of actions to display when swiping on the leading edge of the cell.\ntypealias UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider\nA closure that configures the swipe actions for a cell."
  },
  {
    "title": "difference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600745-difference",
    "html": "See Also\nAccessing a transaction's information\nvar sectionTransactions: [NSDiffableDataSourceSectionTransaction<SectionIdentifierType, ItemIdentifierType>]\nAn array of section transactions for the transaction.\nvar initialSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot before the transaction occured.\nvar finalSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot after the transaction occured."
  },
  {
    "title": "shouldExpandItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/sectionsnapshothandlers/3600960-shouldexpanditem",
    "html": "See Also\nExpanding and collapsing items\nvar shouldCollapseItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is collapsable.\nvar willCollapseItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for collapsing an item.\nvar willExpandItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for expanding an item.\nvar snapshotForExpandingParent: ((ItemIdentifierType, NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)?\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "shouldCollapseItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/sectionsnapshothandlers/3600959-shouldcollapseitem",
    "html": "See Also\nExpanding and collapsing items\nvar shouldExpandItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is expandable.\nvar willCollapseItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for collapsing an item.\nvar willExpandItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for expanding an item.\nvar snapshotForExpandingParent: ((ItemIdentifierType, NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)?\nThe handler that provides the section snapshot for expanding the parent item."
  },
  {
    "title": "leadingSwipeActionsConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3650482-leadingswipeactionsconfiguration",
    "html": "See Also\nCustomizing Swipe Actions\nvar trailingSwipeActionsConfigurationProvider: UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider?\nThe closure that provides the set of actions to display when swiping on the trailing edge of the cell.\ntypealias UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider\nA closure that configures the swipe actions for a cell."
  },
  {
    "title": "UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/swipeactionsconfigurationprovider",
    "html": "See Also\nCustomizing Swipe Actions\nvar leadingSwipeActionsConfigurationProvider: UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider?\nThe closure that provides the set of actions to display when swiping on the leading edge of the cell.\nvar trailingSwipeActionsConfigurationProvider: UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider?\nThe closure that provides the set of actions to display when swiping on the trailing edge of the cell."
  },
  {
    "title": "headerTopPadding | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3751731-headertoppadding",
    "html": "Discussion\n\nThe default value is nil, which indicates automatic padding.\n\nSee Also\nConfiguring headers and footers\nvar headerMode: UICollectionLayoutListConfiguration.HeaderMode\nThe type of header to use for the list.\nvar footerMode: UICollectionLayoutListConfiguration.FooterMode\nThe type of footer to use for the list.\nenum UICollectionLayoutListConfiguration.HeaderMode\nConstants that describe the list’s header mode.\nenum UICollectionLayoutListConfiguration.FooterMode\nConstants that describe the list’s footer mode."
  },
  {
    "title": "UIShapeProvider.Context | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishapeprovider/context",
    "html": "See Also\nSupporting types\ntypealias UIShapeProvider.Resolved\nA shape that has completely resolved based on a context."
  },
  {
    "title": "appendItems(withIdentifiers:intoSectionWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182896-appenditems",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers specifying the items to add to the snapshot.\n\nsectionIdentifier\n\nThe section to which to add the items.\n\nSee Also\nCreating a snapshot\nfunc appendSections(withIdentifiers: [Any])\nAdds the sections with the specified identifiers to the snapshot.\nfunc appendItems(withIdentifiers: [Any])\nAdds the items with the specified identifiers to the last section of the snapshot."
  },
  {
    "title": "resolve(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishapeprovider/4284532-resolve",
    "html": "Required"
  },
  {
    "title": "appendSections(withIdentifiers:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182897-appendsections",
    "html": "Parameters\nsectionIdentifiers\n\nAn array of identifiers specifying the sections to add to the snapshot.\n\nSee Also\nCreating a snapshot\nfunc appendItems(withIdentifiers: [Any], intoSectionWithIdentifier: Any)\nAdds the items with the specified identifiers to the specified section of the snapshot.\nfunc appendItems(withIdentifiers: [Any])\nAdds the items with the specified identifiers to the last section of the snapshot."
  },
  {
    "title": "moveSection(withIdentifier:afterSectionWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182911-movesection",
    "html": "Parameters\nfromSectionIdentifier\n\nThe identifier of the section to move in the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section after which to move the specified section.\n\nSee Also\nReordering items and sections\nfunc moveItem(withIdentifier: Any, afterItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveItem(withIdentifier: Any, beforeItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(withIdentifier: Any, beforeSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "moveSection(withIdentifier:beforeSectionWithIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference/3182912-movesection",
    "html": "Parameters\nfromSectionIdentifier\n\nThe identifier of the section to move in the snapshot.\n\ntoSectionIdentifier\n\nThe identifier of the section before which to move the specified section.\n\nSee Also\nReordering items and sections\nfunc moveItem(withIdentifier: Any, afterItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveItem(withIdentifier: Any, beforeItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(withIdentifier: Any, afterSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately after the specified section."
  },
  {
    "title": "fractionalWidth(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199059-fractionalwidth",
    "html": "See Also\nCreating a dimension\nclass func absolute(CGFloat) -> Self\nCreates a dimension with an absolute point value.\nclass func estimated(CGFloat) -> Self\nCreates a dimension with an estimated point value.\nclass func fractionalHeight(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the height of the containing group.\nclass func uniformAcrossSiblings(estimate: CGFloat) -> Self\nCreates a dimension in which each item receives as much room as it requires and grows to match the dimension of its largest sibling."
  },
  {
    "title": "isFractionalWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199063-isfractionalwidth",
    "html": "See Also\nGetting the dimension type\nvar isAbsolute: Bool\nA Boolean value that indicates whether the dimension is expressed as an absolute value.\nvar isEstimated: Bool\nA Boolean value that indicates whether the dimension is expressed as an estimated value.\nvar isFractionalHeight: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s height.\nvar isUniformAcrossSiblings: Bool\nA Boolean value that indicates whether the dimension grows to match the dimension of its largest sibling."
  },
  {
    "title": "insertItems(_:beforeItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600299-insertitems",
    "html": "See Also\nInserting items\nfunc insertItems([Any], afterItem: Any)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, afterItem: Any) -> Any\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, beforeItem: Any)\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "isVisible(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600303-isvisible",
    "html": "See Also\nGetting item metrics\nfunc index(ofItem: Any) -> Int\nFinds the index of the specified item in the section snapshot.\nfunc level(ofItem: Any) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(ofChildItem: Any) -> Any?\nFinds the parent item of the specified item in the section snapshot.\nfunc containsItem(Any) -> Bool\nIndicates whether the section snapshot contains the specified item."
  },
  {
    "title": "insert(_:afterItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600300-insert",
    "html": "See Also\nInserting items\nfunc insertItems([Any], afterItem: Any)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insertItems([Any], beforeItem: Any)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, beforeItem: Any)\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "footerMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600934-footermode",
    "html": "Discussion\n\nThe default value is UICollectionLayoutListConfiguration.FooterMode.none.\n\nSee Also\nConfiguring headers and footers\nvar headerMode: UICollectionLayoutListConfiguration.HeaderMode\nThe type of header to use for the list.\nenum UICollectionLayoutListConfiguration.HeaderMode\nConstants that describe the list’s header mode.\nenum UICollectionLayoutListConfiguration.FooterMode\nConstants that describe the list’s footer mode.\nvar headerTopPadding: CGFloat?\nThe amount of padding above each section header."
  },
  {
    "title": "UICollectionLayoutListConfiguration.ItemSeparatorHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/itemseparatorhandler",
    "html": "Parameters\nindexPath\n\nThe IndexPath of the cell to configure separators for.\n\nsectionSeparatorConfiguration\n\nThe list section’s separator configuration for the cell at indexPath. This configuration contains the values for separator visibility and insets according to the current state of the item.\n\nReturn Value\n\nThe configuration to use for the separators at indexPath.\n\nSee Also\nConfiguring separators\nvar showsSeparators: Bool\nA Boolean value that determines whether the list shows separators between cells.\nvar separatorConfiguration: UIListSeparatorConfiguration\nThe section's preferred configuration for list separators.\nstruct UIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nvar itemSeparatorHandler: UICollectionLayoutListConfiguration.ItemSeparatorHandler?\nThe closure that provides granular control over the list separator appearance of each item."
  },
  {
    "title": "headerMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3600935-headermode",
    "html": "Discussion\n\nThe default value is UICollectionLayoutListConfiguration.HeaderMode.none.\n\nSee Also\nConfiguring headers and footers\nvar footerMode: UICollectionLayoutListConfiguration.FooterMode\nThe type of footer to use for the list.\nenum UICollectionLayoutListConfiguration.HeaderMode\nConstants that describe the list’s header mode.\nenum UICollectionLayoutListConfiguration.FooterMode\nConstants that describe the list’s footer mode.\nvar headerTopPadding: CGFloat?\nThe amount of padding above each section header."
  },
  {
    "title": "showsSeparators | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3603386-showsseparators",
    "html": "See Also\nConfiguring separators\nvar separatorConfiguration: UIListSeparatorConfiguration\nThe section's preferred configuration for list separators.\nstruct UIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nvar itemSeparatorHandler: UICollectionLayoutListConfiguration.ItemSeparatorHandler?\nThe closure that provides granular control over the list separator appearance of each item.\ntypealias UICollectionLayoutListConfiguration.ItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "separatorConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3727738-separatorconfiguration",
    "html": "Discussion\n\nThis configuration only takes effect if showsSeparators is true.\n\nFor more granular control over list separator appearance, use itemSeparatorHandler.\n\nSee Also\nConfiguring separators\nvar showsSeparators: Bool\nA Boolean value that determines whether the list shows separators between cells.\nstruct UIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nvar itemSeparatorHandler: UICollectionLayoutListConfiguration.ItemSeparatorHandler?\nThe closure that provides granular control over the list separator appearance of each item.\ntypealias UICollectionLayoutListConfiguration.ItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "itemSeparatorHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/3727737-itemseparatorhandler",
    "html": "Discussion\n\nThe list section treats the configuration that returns from this closure as the final separator configuration for the item at the input index path.\n\nSee Also\nConfiguring separators\nvar showsSeparators: Bool\nA Boolean value that determines whether the list shows separators between cells.\nvar separatorConfiguration: UIListSeparatorConfiguration\nThe section's preferred configuration for list separators.\nstruct UIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\ntypealias UICollectionLayoutListConfiguration.ItemSeparatorHandler\nA closure that provides granular control over list separator appearance."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/3600911",
    "html": "See Also\nComparing list appearances\nstatic func == (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list appearance type by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/3600914-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing list appearances\nstatic func == (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are equal.\nstatic func != (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/3600912",
    "html": "See Also\nComparing list appearances\nstatic func != (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list appearance type by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "finalizeLayoutTransition() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617794-finalizelayouttransition",
    "html": "Discussion\n\nThe collection view calls this method after it has gathered all of the layout attributes needed to perform a transition from one layout to another. You can use this method to clean up any data structures or caches created by your implementations of the prepareForTransition(from:) or prepareForTransition(to:) methods.\n\nSee Also\nTransitioning between layouts\nfunc prepareForTransition(from: UICollectionViewLayout)\nTells the layout object to prepare to be installed as the layout for the collection view.\nfunc prepareForTransition(to: UICollectionViewLayout)\nTells the layout object that it is about to be removed as the layout for the collection view."
  },
  {
    "title": "ofParentItem(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600310-ofparentitem",
    "html": "See Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\nfunc ofParentItem(Any, includingParentItem: Bool) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, including the parent item.\nfunc appendItems([Any])\nAdds the specified items to the section snapshot.\nfunc appendItems([Any], intoParentItem: Any?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "vertical(layoutSize:repeatingSubitem:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3975796-vertical",
    "html": "Parameters\nlayoutSize\n\nThe group’s size.\n\nsubitem\n\nThe subitem to repeat. It’s your responsibility to ensure that the group’s layoutSize can fit count repetitions of this item.\n\ncount\n\nThe number of times to repeat the subitem.\n\nSee Also\nCreating a vertical group\nclass func vertical(layoutSize: NSCollectionLayoutSize, subitems: [NSCollectionLayoutItem]) -> Self\nCreates a group of the specified size, containing an array of items arranged in a vertical line."
  },
  {
    "title": "horizontal(layoutSize:subitems:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213855-horizontal",
    "html": "Parameters\nlayoutSize\n\nThe group’s size.\n\nsubitems\n\nThe subitems to include.\n\nSee Also\nCreating a horizontal group\nclass func horizontal(layoutSize: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group that repeats the specified subitem a certain number of times along the horizontal axis."
  },
  {
    "title": "vertical(layoutSize:subitems:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213860-vertical",
    "html": "Parameters\nlayoutSize\n\nThe group’s size.\n\nsubitems\n\nThe subitems to include.\n\nSee Also\nCreating a vertical group\nclass func vertical(layoutSize: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group that repeats the specified subitem a certain number of times along the vertical axis."
  },
  {
    "title": "prepare(forAnimatedBoundsChange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617761-prepare",
    "html": "Parameters\noldBounds\n\nThe current bounds of the collection view.\n\nDiscussion\n\nThe collection view calls this method before performing any animated changes to the view’s bounds or before the animated insertion or deletion of items. This method is the layout object’s opportunity to perform any calculations needed to prepare for those animated changes. Specifically, you might use this method to calculate the initial or final positions of inserted or deleted items so that you can return those values when asked for them.\n\nYou can also use this method to perform additional animations. Any animations you create are added to the animation block used to handle the insertions, deletions, and bounds changes.\n\nSee Also\nCoordinating animated changes\nfunc finalizeAnimatedBoundsChange()\nCleans up after any animated changes to the view’s bounds or after the insertion or deletion of items."
  },
  {
    "title": "dateSelection(_:canSelectDate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledatedelegate/3972035-dateselection",
    "html": "Parameters\nselection\n\nAn object that tracks a date that a user selects from a calendar view.\n\ndateComponents\n\nDate components that represent a date to select.\n\nReturn Value\n\nA Boolean value that indicates whether the calendar view can select the date you provide.\n\nDiscussion\n\nThe calendar view displays nonselectable dates as disabled."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4278167-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible\nSee Also\nDescribing a resolved shape\nvar description: String\nA textual representation of this instance."
  },
  {
    "title": "shape | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved/4224548-shape",
    "html": "See Also\nAccessing the resolved shape’s attributes\nvar boundingRect: CGRect\nThe bounding rectangle that frames the shape.\nvar path: UIBezierPath\nThe Bézier path representing this shape."
  },
  {
    "title": "collectionView(_:canMoveItemAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3375796-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\nindexPath\n\nThe index path of the item that the collection view is trying to move.\n\nReturn Value\n\ntrue if the item is allowed to move, or false if it is not.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nReordering items\nfunc collectionView(UICollectionView, moveItemAt: IndexPath, to: IndexPath)\nMoves the specified item to its new location in the collection view."
  },
  {
    "title": "indexTitles(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3375800-indextitles",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\nReturn Value\n\nAn array of strings to use for the title of each index entry. For example, you might return an array of strings containing the letters of the alphabet ([\"A\", \"B\", \"C\", ..., \"Z\"]).\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nConfiguring an index\nfunc collectionView(UICollectionView, indexPathForIndexTitle: String, at: Int) -> IndexPath\nReturns the index path of the item that corresponds to the specified index title in the collection view."
  },
  {
    "title": "sectionTransactions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600748-sectiontransactions",
    "html": "See Also\nAccessing a transaction's information\nvar initialSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot before the transaction occured.\nvar finalSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot after the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final snapshots."
  },
  {
    "title": "willReorder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/reorderinghandlers/3600956-willreorder",
    "html": "See Also\nReordering items\nvar canReorderItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether you can reorder a particular item.\nvar didReorder: ((NSDiffableDataSourceTransaction<SectionIdentifierType, ItemIdentifierType>) -> Void)?\nThe handler that processes a reordering transaction."
  },
  {
    "title": "collectionView(_:indexPathForIndexTitle:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3375797-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view requesting this information.\n\ntitle\n\nThe title of the index item. This string corresponds to one of the strings you returned in your indexTitles(for:) method.\n\nindex\n\nThe index into the array returned by the indexTitles(for:) method that corresponds to the index title.\n\nReturn Value\n\nThe index path for the collection view item that should appear when the user selects the index.\n\nRelationships\nFrom Protocol\nUICollectionViewDataSource\nSee Also\nConfiguring an index\nfunc indexTitles(for: UICollectionView) -> [String]?\nReturns the titles for the index items to display for the collection view."
  },
  {
    "title": "initialSnapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction/3600747-initialsnapshot",
    "html": "See Also\nAccessing a transaction's information\nvar sectionTransactions: [NSDiffableDataSourceSectionTransaction<SectionIdentifierType, ItemIdentifierType>]\nAn array of section transactions for the transaction.\nvar finalSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot after the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final snapshots."
  },
  {
    "title": "initialSnapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction/3600742-initialsnapshot",
    "html": "See Also\nAccessing a transaction's information\nvar sectionIdentifier: SectionIdentifierType\nThe identifier of the section for the transaction.\nvar finalSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot after the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final section snapshots."
  },
  {
    "title": "supplementaryItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3199079-supplementaryitems",
    "html": "See Also\nGetting the group's items\nvar subitems: [NSCollectionLayoutItem]\nAn array of the items contained in the group."
  },
  {
    "title": "init(layoutSize:supplementaryItems:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3213872-init",
    "html": "See Also\nCreating an item\ninit(layoutSize: NSCollectionLayoutSize)\nCreates an item of the specified size."
  },
  {
    "title": "detail(displayed:options:actionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3917550-detail",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the detail accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.always.\n\noptions\n\nConfiguration options for the detail accessory. See UICellAccessory.DetailOptions for possible configuration options.\n\nactionHandler\n\nAn optional closure that the system calls when a user interacts with the detail accessory.\n\nReturn Value\n\nA configured detail cell accessory. The accessory displays as the system information button. This accessory appears on the trailing edge of the cell.\n\nSee Also\nCreating a detail accessory\nstruct UICellAccessory.DetailOptions\nConfiguration options for a detail accessory."
  },
  {
    "title": "init(section:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199211-init",
    "html": "See Also\nCreating a layout\ninit(section: NSCollectionLayoutSection, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a single section and an additional configuration.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider)\nCreates a compositional layout object with a section provider to supply the layout's sections.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a section provider and an additional configuration."
  },
  {
    "title": "init(layoutSize:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3213871-init",
    "html": "See Also\nCreating an item\ninit(layoutSize: NSCollectionLayoutSize, supplementaryItems: [NSCollectionLayoutSupplementaryItem])\nCreates an item of the specified size with an array of supplementary items to attach to the item."
  },
  {
    "title": "init(section:configuration:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199212-init",
    "html": "See Also\nCreating a layout\ninit(section: NSCollectionLayoutSection)\nCreates a compositional layout object with a single section.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider)\nCreates a compositional layout object with a section provider to supply the layout's sections.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a section provider and an additional configuration."
  },
  {
    "title": "init(sectionProvider:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199214-init",
    "html": "See Also\nCreating a layout\ninit(section: NSCollectionLayoutSection)\nCreates a compositional layout object with a single section.\ninit(section: NSCollectionLayoutSection, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a single section and an additional configuration.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a section provider and an additional configuration."
  },
  {
    "title": "flipsHorizontallyInOppositeLayoutDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/2891099-flipshorizontallyinoppositelayou",
    "html": "Discussion\n\nThe language you use during development naturally affects the decisions you make when configuring your layout object. When you develop using a left-to-right language, your layout information automatically matches the collection view's natural coordinate system. However, when the user's language has a right-to-left orientation, the layout information you provide is still based on the collection view's natural coordinate system. This discrepancy can cause layout issues for languages using the opposite orientation. When this property is set to true, the collection view automatically flips the orientation of its horizontal coordinate system to match the leading edge of the current language. (The developmentLayoutDirection property specifies the layout direction used to design the layout.) Flipping the horizontal coordinate system effectively flips your existing layout information, which should result in a better looking layout.\n\nThe default value of this property is false.\n\nSee Also\nSupporting right-to-left layouts\nvar developmentLayoutDirection: UIUserInterfaceLayoutDirection\nThe direction of the language you used when designing your custom layout."
  },
  {
    "title": "didReorder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/reorderinghandlers/3600954-didreorder",
    "html": "Discussion\n\nThe system calls the didReorder handler after a reordering transaction (NSDiffableDataSourceTransaction) occurs, so you can update your data backing store with information about the changes.\n\n// Allow every item to be reordered\ndataSource.reorderingHandlers.canReorderItem = { item in return true }\n\n\n// Option 1: Update the backing store from a CollectionDifference\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    if let updatedBackingStore = self.backingStore.applying(transaction.difference) {\n        self.backingStore = updatedBackingStore\n    }\n}\n\n\n// Option 2: Update the backing store from the final item identifiers\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    self.backingStore = transaction.finalSnapshot.itemIdentifiers\n}\n\n\nSee Also\nReordering items\nvar canReorderItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether you can reorder a particular item.\nvar willReorder: ((NSDiffableDataSourceTransaction<SectionIdentifierType, ItemIdentifierType>) -> Void)?\nThe handler that prepares the diffable data source for reordering its items."
  },
  {
    "title": "isUniformAcrossSiblings | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/4173071-isuniformacrosssiblings",
    "html": "See Also\nGetting the dimension type\nvar isAbsolute: Bool\nA Boolean value that indicates whether the dimension is expressed as an absolute value.\nvar isEstimated: Bool\nA Boolean value that indicates whether the dimension is expressed as an estimated value.\nvar isFractionalHeight: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s height.\nvar isFractionalWidth: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s width."
  },
  {
    "title": "isFractionalHeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199062-isfractionalheight",
    "html": "See Also\nGetting the dimension type\nvar isAbsolute: Bool\nA Boolean value that indicates whether the dimension is expressed as an absolute value.\nvar isEstimated: Bool\nA Boolean value that indicates whether the dimension is expressed as an estimated value.\nvar isFractionalWidth: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s width.\nvar isUniformAcrossSiblings: Bool\nA Boolean value that indicates whether the dimension grows to match the dimension of its largest sibling."
  },
  {
    "title": "absolute(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199055-absolute",
    "html": "See Also\nCreating a dimension\nclass func estimated(CGFloat) -> Self\nCreates a dimension with an estimated point value.\nclass func fractionalHeight(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the height of the containing group.\nclass func fractionalWidth(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the width of the containing group.\nclass func uniformAcrossSiblings(estimate: CGFloat) -> Self\nCreates a dimension in which each item receives as much room as it requires and grows to match the dimension of its largest sibling."
  },
  {
    "title": "fractionalHeight(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199058-fractionalheight",
    "html": "See Also\nCreating a dimension\nclass func absolute(CGFloat) -> Self\nCreates a dimension with an absolute point value.\nclass func estimated(CGFloat) -> Self\nCreates a dimension with an estimated point value.\nclass func fractionalWidth(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the width of the containing group.\nclass func uniformAcrossSiblings(estimate: CGFloat) -> Self\nCreates a dimension in which each item receives as much room as it requires and grows to match the dimension of its largest sibling."
  },
  {
    "title": "uniformAcrossSiblings(estimate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/4173072-uniformacrosssiblings",
    "html": "Discussion\n\nUse the uniformAcrossSiblings(estimate:) dimension to ensure that self-sizing items have a consistent size across their group. This dimension provides an alternative to using the estimated(_:) dimension, which might not result in a uniform layout for items that vary in size.\n\nItems with this dimension receive at least as much room as they require, and they increase in size to match the dimension of the largest self-sizing sibling in their parent group. The parent group’s dimension needs to be estimated(_:) on the axis where items specify this dimension so the group can grow to fit the items.\n\nFor example, items using this dimension in a horizontal NSCollectionLayoutGroup all have a height equal to the tallest item in that group. That group’s heightDimension is estimated(_:) to allow for it to grow to fit the tallest item. The following code shows an example of this layout.\n\n// Item width: To lay out 3 items horizontally, use 1/3 of the width of the group.\n// Item height: To achieve a consistent height for the items, use `uniformAcrossSiblings(estimate:)`.\nlet itemCount = 3\nlet itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0 / CGFloat(itemCount)),\n                                      heightDimension: .uniformAcrossSiblings(estimate: 50))\nlet item = NSCollectionLayoutItem(layoutSize: itemSize)\n\n\n// Group width: To use the entire horizontal width of the section, use the full fractional width.\n// Group height: To allow the group's height to grow for the items, use `estimated(_:)`.\nlet groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                       heightDimension: .estimated(50))\nlet group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize,\n                                               repeatingSubitem: item,\n                                               count: itemCount)\n\n\nlet section = NSCollectionLayoutSection(group: group)\n\n\nImportant\n\nIf you use a uniformAcrossSiblings(estimate:) dimension on the outermost group in a section, the size of the largest item in that group applies across the entire section, including nested groups.\n\nOnly use this dimension in layouts where the number of items is relatively small. To compute the size for this type of dimension, the layout needs to retrieve attributes for all siblings in the parent group, so the performance is linear to the number of items in the group.\n\nRelated sessions from WWDC23\n\nSession 10055: What’s new in UIKit\n\nSee Also\nCreating a dimension\nclass func absolute(CGFloat) -> Self\nCreates a dimension with an absolute point value.\nclass func estimated(CGFloat) -> Self\nCreates a dimension with an estimated point value.\nclass func fractionalHeight(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the height of the containing group.\nclass func fractionalWidth(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the width of the containing group."
  },
  {
    "title": "isEstimated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199061-isestimated",
    "html": "See Also\nGetting the dimension type\nvar isAbsolute: Bool\nA Boolean value that indicates whether the dimension is expressed as an absolute value.\nvar isFractionalHeight: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s height.\nvar isFractionalWidth: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s width.\nvar isUniformAcrossSiblings: Bool\nA Boolean value that indicates whether the dimension grows to match the dimension of its largest sibling."
  },
  {
    "title": "visualDescription() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600313-visualdescription",
    "html": "Discussion\n\nAn asterisk (*) represents a visible item, a plus sign (+) represents an expanded item, and a minus sign (-) represents a collapsed item."
  },
  {
    "title": "isExpanded(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600302-isexpanded",
    "html": "Discussion\n\nThis expansion state persists along with the section snapshot.\n\nSee Also\nExpanding and collapsing items\nfunc expandItems([Any])\nExpands the specified items in the section snapshot.\nfunc collapseItems([Any])\nCollapses the specified items in the section snapshot.\nfunc expandedItems() -> [Any]\nThe identifiers of all expanded items in the section snapshot."
  },
  {
    "title": "expandItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600294-expanditems",
    "html": "See Also\nExpanding and collapsing items\nfunc isExpanded(Any) -> Bool\nIndicates whether the item with the specified identifier is in an expanded state.\nfunc collapseItems([Any])\nCollapses the specified items in the section snapshot.\nfunc expandedItems() -> [Any]\nThe identifiers of all expanded items in the section snapshot."
  },
  {
    "title": "deleteAllItems() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600292-deleteallitems",
    "html": "See Also\nRemoving items\nfunc deleteItems([Any])\nDeletes the items with the specified identifiers, and any of their child items, from the section snapshot."
  },
  {
    "title": "insert(_:beforeItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600301-insert",
    "html": "See Also\nInserting items\nfunc insertItems([Any], afterItem: Any)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, afterItem: Any) -> Any\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insertItems([Any], beforeItem: Any)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "deleteItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600293-deleteitems",
    "html": "See Also\nRemoving items\nfunc deleteAllItems()\nDeletes all of the items from the section snapshot."
  },
  {
    "title": "insertItems(_:afterItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600298-insertitems",
    "html": "See Also\nInserting items\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, afterItem: Any) -> Any\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insertItems([Any], beforeItem: Any)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, beforeItem: Any)\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "appendItems(_:intoParentItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600289-appenditems",
    "html": "Parameters\nitems\n\nThe identifiers of the items to append to the parent item in the section snapshot.\n\nparentItem\n\nThe parent item to append the items to.\n\nSee Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\nfunc ofParentItem(Any) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, excluding the parent item.\nfunc ofParentItem(Any, includingParentItem: Bool) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, including the parent item.\nfunc appendItems([Any])\nAdds the specified items to the section snapshot."
  },
  {
    "title": "level(ofItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600306-level",
    "html": "See Also\nGetting item metrics\nfunc index(ofItem: Any) -> Int\nFinds the index of the specified item in the section snapshot.\nfunc parent(ofChildItem: Any) -> Any?\nFinds the parent item of the specified item in the section snapshot.\nfunc containsItem(Any) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(Any) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "index(ofItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600296-index",
    "html": "See Also\nGetting item metrics\nfunc level(ofItem: Any) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(ofChildItem: Any) -> Any?\nFinds the parent item of the specified item in the section snapshot.\nfunc containsItem(Any) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(Any) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "UICellAccessory.CheckmarkOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/checkmarkoptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?)\nCreates a checkmark accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nSee Also\nCreating a checkmark accessory\nstatic func checkmark(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.CheckmarkOptions) -> UICellAccessory\nCreates a checkmark system accessory with the specified display state and configuration options."
  },
  {
    "title": "appendItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600288-appenditems",
    "html": "See Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\nfunc ofParentItem(Any) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, excluding the parent item.\nfunc ofParentItem(Any, includingParentItem: Bool) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, including the parent item.\nfunc appendItems([Any], intoParentItem: Any?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "visibleItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600312-visibleitems",
    "html": "See Also\nAccessing items\nvar items: [Any]\nThe identifiers of all items in the section snapshot.\nvar rootItems: [Any]\nThe identifiers of the items at the top level of the section snapshot’s hierarchy."
  },
  {
    "title": "UICellAccessory.MultiselectOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/multiselectoptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?, backgroundColor: UIColor?)\nCreates a multiselect accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar backgroundColor: UIColor?\nThe background color to apply to the accessory.\nSee Also\nCreating a multiselect accessory\nstatic func multiselect(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.MultiselectOptions) -> UICellAccessory\nCreates a multiselect system accessory with the specified display state and configuration options."
  },
  {
    "title": "delete(displayed:options:actionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600869-delete",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the delete accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.whenEditing.\n\noptions\n\nConfiguration options for the delete accessory. See UICellAccessory.DeleteOptions for possible configuration options.\n\nactionHandler\n\nAn optional closure that the system calls when a user interacts with the delete accessory.\n\nReturn Value\n\nA configured delete cell accessory. This accessory is a minus sign inside of a circle with the default system red color. This accessory appears on the leading edge of the cell.\n\nSee Also\nCreating a delete accessory\nstruct UICellAccessory.DeleteOptions\nConfiguration options for a delete accessory."
  },
  {
    "title": "init(sectionProvider:configuration:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3199215-init",
    "html": "See Also\nCreating a layout\ninit(section: NSCollectionLayoutSection)\nCreates a compositional layout object with a single section.\ninit(section: NSCollectionLayoutSection, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a single section and an additional configuration.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider)\nCreates a compositional layout object with a section provider to supply the layout's sections."
  },
  {
    "title": "init(edges:absoluteOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213814-init",
    "html": "See Also\nCreating an anchor\ninit(edges: NSDirectionalRectEdge)\nCreates an anchor with the specified edges to attach to.\ninit(edges: NSDirectionalRectEdge, fractionalOffset: CGPoint)\nCreates an anchor with the specified edges to attach to, offset by the provided fractional value."
  },
  {
    "title": "init(layoutSize:elementKind:alignment:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3213819-init",
    "html": "See Also\nCreating a boundary supplementary item\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, alignment: NSRectAlignment, absoluteOffset: CGPoint)\nCreates a boundary supplementary item of the specified size and element kind, with an alignment relative to a section or layout at an absolute offset."
  },
  {
    "title": "horizontalGroup(with:repeatingSubitem:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/4044351-horizontalgroup",
    "html": "Deprecated\n\nUse horizontal(layoutSize:repeatingSubitem:count:) instead.\n\nSee Also\nDeprecated\nclass func horizontal(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a horizontal line up to the number specified by count.\nclass func vertical(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a vertical line up to the number specified by count.\nclass func verticalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the vertical axis."
  },
  {
    "title": "itemAnchor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3199113-itemanchor",
    "html": "See Also\nGetting the anchors\nvar containerAnchor: NSCollectionLayoutAnchor\nThe anchor between the supplementary item and the container it's attached to."
  },
  {
    "title": "estimated(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension/3199057-estimated",
    "html": "Discussion\n\nThe final size of the dimension is determined when the content is rendered.\n\nSee Also\nCreating a dimension\nclass func absolute(CGFloat) -> Self\nCreates a dimension with an absolute point value.\nclass func fractionalHeight(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the height of the containing group.\nclass func fractionalWidth(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the width of the containing group.\nclass func uniformAcrossSiblings(estimate: CGFloat) -> Self\nCreates a dimension in which each item receives as much room as it requires and grows to match the dimension of its largest sibling."
  },
  {
    "title": "vertical(layoutSize:subitem:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213859-vertical",
    "html": "Deprecated\n\nUse vertical(layoutSize:repeatingSubitem:count:) instead.\n\nDiscussion\n\nWhen you set a value for the interItemSpacing property after using this initializer, the group keeps the same number of items and automatically resizes them to add the extra specified spacing between them.\n\nSee Also\nDeprecated\nclass func horizontal(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a horizontal line up to the number specified by count.\nclass func horizontalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the horizontal axis.\nclass func verticalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the vertical axis."
  },
  {
    "title": "bottom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199065-bottom",
    "html": "See Also\nGetting the edge spacing\nvar leading: NSCollectionLayoutSpacing?\nThe leading edge spacing value.\nvar top: NSCollectionLayoutSpacing?\nThe top edge spacing value.\nvar trailing: NSCollectionLayoutSpacing?\nThe trailing edge spacing value."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600297-init",
    "html": "See Also\nCreating a section snapshot\nfunc ofParentItem(Any) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, excluding the parent item.\nfunc ofParentItem(Any, includingParentItem: Bool) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, including the parent item.\nfunc appendItems([Any])\nAdds the specified items to the section snapshot.\nfunc appendItems([Any], intoParentItem: Any?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "subitems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213857-subitems",
    "html": "See Also\nGetting the group's items\nvar supplementaryItems: [NSCollectionLayoutSupplementaryItem]\nAn array of the supplementary items that are anchored to the group."
  },
  {
    "title": "isFixed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199105-isfixed",
    "html": "See Also\nGetting the spacing type\nvar isFlexible: Bool\nA Boolean value that indicates whether the space is flexible."
  },
  {
    "title": "init(currentLayout:nextLayout:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622189-init",
    "html": "Parameters\ncurrentLayout\n\nThe layout object currently in use by the collection view.\n\nnewLayout\n\nThe new layout object that is being installed into the collection view.\n\nReturn Value\n\nAn initialized transition layout object or nil if the object could not be created.\n\nDiscussion\n\nThis method initializes the transition layout object and saves references to the current and new layout objects so that you can access them later. If you subclass and implement your own initialization method, you must call this method to initialize the superclass.\n\nSee Also\nInitializing the transition layout object\ninit?(coder: NSCoder)\nCreates a transition layout object from data in an unarchiver."
  },
  {
    "title": "isFlexible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199106-isflexible",
    "html": "See Also\nGetting the spacing type\nvar isFixed: Bool\nA Boolean value that indicates whether the space is fixed to a specific number of points."
  },
  {
    "title": "drawInRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624092-drawinrect",
    "html": "Parameters\nrect\n\nThe rectangle (in the coordinate system of the graphics context) in which to draw the image.\n\nDiscussion\n\nThis method draws the entire image in the current graphics context, respecting the image’s orientation setting. In the default coordinate system, images are situated down and to the right of the origin of the specified rectangle. This method respects any transforms applied to the current graphics context, however.\n\nThis method draws the image at full opacity using the kCGBlendModeNormal blend mode.\n\nSee Also\nDrawing images\n- drawAtPoint:\nDraws the image at the specified point in the current context.\n- drawAtPoint:blendMode:alpha:\nDraws the entire image at the specified point using the custom compositing options.\n- drawInRect:blendMode:alpha:\nDraws the entire image in the specified rectangle using the specified compositing options.\n- drawAsPatternInRect:\nDraws a tiled Quartz pattern using the receiver’s contents as the tile pattern."
  },
  {
    "title": "previouslyFocusedIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewfocusupdatecontext/1618077-previouslyfocusedindexpath",
    "html": "Discussion\n\nThis property contains an index path only when the view receiving focus belongs to a cell of the collection view. If focus was previously in a view outside of the collection view and its cells, this property is nil. This property is also nil when the collection view receives focus for the first time.\n\nSee Also\nLocating focusable items in the collection view\nvar nextFocusedIndexPath: IndexPath?\nThe index path of the collection view cell that’s receiving the focus."
  },
  {
    "title": "fixed(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199103-fixed",
    "html": "See Also\nCreating spacing\nclass func flexible(CGFloat) -> Self\nCreates a space equivalent to or greater than the specified number of points, depending on the available space."
  },
  {
    "title": "flexible(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing/3199104-flexible",
    "html": "See Also\nCreating spacing\nclass func fixed(CGFloat) -> Self\nCreates a space equivalent to the specified number of points."
  },
  {
    "title": "edgeSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3199085-edgespacing",
    "html": "Discussion\n\nUse this property to adjust the position of the item in relation to its container and other items. For example, you can use this property to apply extra space to the trailing edge of each item. Edge spacing is applied before applying contentInsets.\n\nThe following diagram shows the result of applying 2 points of trailing edge spacing to the items in a group:\n\nSee Also\nConfiguring spacing and insets\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space added around the content of the item to adjust its final size after its position is computed."
  },
  {
    "title": "UICellAccessory.DetailOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/detailoptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?)\nCreates a detail accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nSee Also\nCreating a detail accessory\nstatic func detail(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.DetailOptions, actionHandler: UICellAccessory.ActionHandler?) -> UICellAccessory\nCreates a detail system accessory with the specified display state, configuration options, and optional action handler."
  },
  {
    "title": "accessoryType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600866-accessorytype",
    "html": "See Also\nChecking the accessory's type\nenum UICellAccessory.AccessoryType\nConstants that describe the type of the cell accessory."
  },
  {
    "title": "heightDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsize/3213886-heightdimension",
    "html": "See Also\nGetting the width and height\nvar widthDimension: NSCollectionLayoutDimension\nThe width dimension of an item in a collection view layout."
  },
  {
    "title": "expandedItems() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600295-expandeditems",
    "html": "See Also\nExpanding and collapsing items\nfunc isExpanded(Any) -> Bool\nIndicates whether the item with the specified identifier is in an expanded state.\nfunc expandItems([Any])\nExpands the specified items in the section snapshot.\nfunc collapseItems([Any])\nCollapses the specified items in the section snapshot."
  },
  {
    "title": "contentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199046-contentinsets",
    "html": "Required\n\nDiscussion\n\nIf the value of a content inset is less than 1.0, the content inset is fractional. For example, a top content inset of 20.0 adds 20 points of space between the top of the layout and the top of its container. A top content inset of 0.2 adds space equal to 20% of the container's height between the top of the layout and the top of its container.\n\nSee Also\nGetting content insets\nvar effectiveContentInsets: NSDirectionalEdgeInsets\nThe amount of space added around the content of the container to adjust its final size after item content insets are applied.\n\nRequired"
  },
  {
    "title": "collapseItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600290-collapseitems",
    "html": "See Also\nExpanding and collapsing items\nfunc isExpanded(Any) -> Bool\nIndicates whether the item with the specified identifier is in an expanded state.\nfunc expandItems([Any])\nExpands the specified items in the section snapshot.\nfunc expandedItems() -> [Any]\nThe identifiers of all expanded items in the section snapshot."
  },
  {
    "title": "effectiveContentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199048-effectivecontentinsets",
    "html": "Required\n\nSee Also\nGetting content insets\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space added around the content of the container to adjust its final size.\n\nRequired"
  },
  {
    "title": "widthDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsize/3213888-widthdimension",
    "html": "See Also\nGetting the width and height\nvar heightDimension: NSCollectionLayoutDimension\nThe height dimension of an item in a collection view layout."
  },
  {
    "title": "contentSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199047-contentsize",
    "html": "Required\n\nSee Also\nGetting content size\nvar effectiveContentSize: CGSize\nThe size of the container after content insets are applied.\n\nRequired"
  },
  {
    "title": "effectiveContentSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer/3199049-effectivecontentsize",
    "html": "Required\n\nSee Also\nGetting content size\nvar contentSize: CGSize\nThe size of the container before content insets are applied.\n\nRequired"
  },
  {
    "title": "rootItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600309-rootitems",
    "html": "See Also\nAccessing items\nvar items: [Any]\nThe identifiers of all items in the section snapshot.\nvar visibleItems: [Any]\nThe identifiers of the currently visible items in the section snapshot."
  },
  {
    "title": "parent(ofChildItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600307-parent",
    "html": "See Also\nGetting item metrics\nfunc index(ofItem: Any) -> Int\nFinds the index of the specified item in the section snapshot.\nfunc level(ofItem: Any) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc containsItem(Any) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(Any) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "invalidatedSupplementaryIndexPaths | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617777-invalidatedsupplementaryindexpat",
    "html": "Discussion\n\nThe keys in this dictionary are the element kind strings of the invalid supplementary views. The value for each key is an array of NSIndexPath objects indicating which specific supplementary views have layout changes.\n\nSee Also\nInvalidating Specific Items\nfunc invalidateItems(at: [IndexPath])\nAdds the cells at the specified index paths to the list of invalid items.\nfunc invalidateSupplementaryElements(ofKind: String, at: [IndexPath])\nAdds the supplementary views at the specified index paths to the list of invalid items.\nfunc invalidateDecorationElements(ofKind: String, at: [IndexPath])\nAdds the decoration views at the specified index paths to the list of invalid items.\nvar invalidatedItemIndexPaths: [IndexPath]?\nAn array of index paths representing the cells that were invalidated.\nvar invalidatedDecorationIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the decoration views that were invalidated."
  },
  {
    "title": "containsItem(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference/3600291-containsitem",
    "html": "See Also\nGetting item metrics\nfunc index(ofItem: Any) -> Int\nFinds the index of the specified item in the section snapshot.\nfunc level(ofItem: Any) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(ofChildItem: Any) -> Any?\nFinds the parent item of the specified item in the section snapshot.\nfunc isVisible(Any) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "multiDateSelection(_:didDeselectDate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidatedelegate/3972027-multidateselection",
    "html": "Required\n\nParameters\nselection\n\nAn object that tracks multiple dates that a user selects from a calendar view.\n\ndateComponents\n\nDate components that represent a date the user deselected.\n\nSee Also\nChanging selected dates\nfunc multiDateSelection(UICalendarSelectionMultiDate, didSelectDate: DateComponents)\nInforms the delegate that a user selected a date represented by date components.\n\nRequired"
  },
  {
    "title": "multiDateSelection(_:didSelectDate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidatedelegate/3972028-multidateselection",
    "html": "Required\n\nParameters\nselection\n\nAn object that tracks one or more dates that a user selects from a calendar view.\n\ndateComponents\n\nDate components that represent a date the user selected.\n\nSee Also\nChanging selected dates\nfunc multiDateSelection(UICalendarSelectionMultiDate, didDeselectDate: DateComponents)\nInforms the delegate that a user deselected a date represented by date components.\n\nRequired"
  },
  {
    "title": "multiDateSelection(_:canDeselectDate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidatedelegate/3972025-multidateselection",
    "html": "Parameters\nselection\n\nAn object that tracks one or more dates that a user selects from a calendar view.\n\ndateComponents\n\nDate components that represent a date to deselect.\n\nReturn Value\n\nA Boolean value that indicates whether the calendar view can deselect the date you provide.\n\nSee Also\nGetting selectable dates\nfunc multiDateSelection(UICalendarSelectionMultiDate, canSelectDate: DateComponents) -> Bool\nReturns whether a user can select a date represented by date components in the calendar view."
  },
  {
    "title": "multiDateSelection(_:canSelectDate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidatedelegate/3972026-multidateselection",
    "html": "Parameters\nselection\n\nAn object that tracks multiple dates that a user selects from a calendar view.\n\ndateComponents\n\nDate components that represent a date to select.\n\nReturn Value\n\nA Boolean value that indicates whether the calendar view can select the date you provide.\n\nDiscussion\n\nThe calendar view displays non-selectable dates as disabled.\n\nSee Also\nGetting selectable dates\nfunc multiDateSelection(UICalendarSelectionMultiDate, canDeselectDate: DateComponents) -> Bool\nReturns whether a user can deselect a date represented by date components in the calendar view."
  },
  {
    "title": "dateSelection(_:didSelectDate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledatedelegate/3972036-dateselection",
    "html": "Required\n\nParameters\nselection\n\nAn object that tracks a date that a user selects from a calendar view.\n\ndateComponents\n\nDate components that represent a date the user selected, or nil if the user deselected a date."
  },
  {
    "title": "UIContentInsetsReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentinsetsreference",
    "html": "Topics\nConstants\ncase automatic\nContent insets use the system default reference point.\ncase none\nContent insets don’t have a reference point in relation to other insets.\ncase safeArea\nContent insets use a reference point in relation to the safe area.\ncase layoutMargins\nContent insets use a reference point in relation to the layout margins.\ncase readableContent\nContent insets use a reference point in relation to the readable content guide.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring section spacing\nvar interGroupSpacing: CGFloat\nThe amount of space between the groups in the section.\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space between the content of the section and its boundaries.\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nvar supplementaryContentInsetsReference: UIContentInsetsReference\nThe reference boundary for content insets on boundary supplementary items."
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingproperties",
    "html": "Topics\nSpecifying the bounce behavior\nvar bounce: UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce\nA value that specifies whether the orthogonal scrolling section bounces past the edge of content and back again.\nenum UICollectionLayoutSectionOrthogonalScrollingProperties.Bounce\nConstants that specify whether the orthogonal scrolling section bounces past the edge of content and back again.\nSpecifying the rate of deceleration\nvar decelerationRate: UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nA value that specifies the rate of deceleration in the orthogonal scrolling section after the scrolling pan gesture ends.\nstruct UICollectionLayoutSectionOrthogonalScrollingProperties.DecelerationRate\nConstants that specify the rate of deceleration in the orthogonal scrolling section after the scrolling pan gesture ends.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSpecifying scrolling behavior\nvar orthogonalScrollingBehavior: UICollectionLayoutSectionOrthogonalScrollingBehavior\nThe section’s scrolling behavior in relation to the main layout axis.\nvar orthogonalScrollingProperties: UICollectionLayoutSectionOrthogonalScrollingProperties\nThe section’s orthogonal scrolling properties."
  },
  {
    "title": "zIndex | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdecorationitem/3199053-zindex",
    "html": "Discussion\n\nThe default value of this property is 0, which means the decoration item appears below all other items in the section."
  },
  {
    "title": "extendsBoundary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199040-extendsboundary",
    "html": "Discussion\n\nThe default value of this property is true.\n\nSee Also\nSpecifying position\nvar offset: CGPoint\nThe floating-point value of the boundary supplementary item’s offset from the section or layout it’s attached to.\nvar alignment: NSRectAlignment\nThe alignment of the boundary supplementary item relative to the section or layout it’s attached to."
  },
  {
    "title": "alignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199039-alignment",
    "html": "See Also\nSpecifying position\nvar offset: CGPoint\nThe floating-point value of the boundary supplementary item’s offset from the section or layout it’s attached to.\nvar extendsBoundary: Bool\nA Boolean value that indicates whether a boundary supplementary item extends the content area of the section or layout it’s attached to."
  },
  {
    "title": "init(layoutSize:elementKind:alignment:absoluteOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3213820-init",
    "html": "See Also\nCreating a boundary supplementary item\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, alignment: NSRectAlignment)\nCreates a boundary supplementary item of the specified size and element kind, with an alignment relative to a section or layout."
  },
  {
    "title": "offset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199043-offset",
    "html": "See Also\nSpecifying position\nvar alignment: NSRectAlignment\nThe alignment of the boundary supplementary item relative to the section or layout it’s attached to.\nvar extendsBoundary: Bool\nA Boolean value that indicates whether a boundary supplementary item extends the content area of the section or layout it’s attached to."
  },
  {
    "title": "invalidateFlowLayoutDelegateMetrics | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutinvalidationcontext/1617721-invalidateflowlayoutdelegatemetr",
    "html": "Discussion\n\nThe default value of this property is false. Set this property to true if you’re invalidating the layout because of changes to the size of any items.\n\nWhen this property is set to true, the flow layout object recomputes the size of its items and views, querying the delegate object as needed for that information.\n\nSee Also\nSpecifying what to invalidate\nvar invalidateFlowLayoutAttributes: Bool\nA Boolean indicating whether to recompute the layout attributes for items and views in the layout."
  },
  {
    "title": "init(frame:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem/3213863-init",
    "html": "See Also\nCreating a custom item\ninit(frame: CGRect, zIndex: Int)\nCreates a custom item with the specified frame and vertical stacking order in relation to other items in the group."
  },
  {
    "title": "invalidateFlowLayoutAttributes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutinvalidationcontext/1617707-invalidateflowlayoutattributes",
    "html": "Discussion\n\nThe default value of this property is false. Set this property to true if there are changes to the position of items on the screen. For example, the flow layout object sets this property to true when the collection view’s bounds change in a way that affects the number of items in a column or row.\n\nWhen this property is set to true, the flow layout object recomputes the layout attributes for its items and views. If the invalidateFlowLayoutDelegateMetrics property is set to false it recomputes this information without asking for new size information.\n\nSee Also\nSpecifying what to invalidate\nvar invalidateFlowLayoutDelegateMetrics: Bool\nA Boolean indicating whether to recompute the size of items and views in the layout."
  },
  {
    "title": "init(layoutSize:elementKind:containerAnchor:itemAnchor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3213900-init",
    "html": "See Also\nCreating a supplementary item\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, containerAnchor: NSCollectionLayoutAnchor)\nCreates a supplementary item of the specified size and element kind, with an anchor relative to a container."
  },
  {
    "title": "init(frame:zIndex:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem/3213864-init",
    "html": "See Also\nCreating a custom item\ninit(frame: CGRect)\nCreates a custom item with the specified frame."
  },
  {
    "title": "init(layoutSize:elementKind:containerAnchor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3213899-init",
    "html": "See Also\nCreating a supplementary item\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, containerAnchor: NSCollectionLayoutAnchor, itemAnchor: NSCollectionLayoutAnchor)\nCreates a supplementary item of the specified size and element kind, an anchor relative to a container, and an anchor relative to an item."
  },
  {
    "title": "init(edges:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3199034-init",
    "html": "See Also\nCreating an anchor\ninit(edges: NSDirectionalRectEdge, absoluteOffset: CGPoint)\nCreates an anchor with the specified edges to attach to, offset by the provided absolute value.\ninit(edges: NSDirectionalRectEdge, fractionalOffset: CGPoint)\nCreates an anchor with the specified edges to attach to, offset by the provided fractional value."
  },
  {
    "title": "init(edges:fractionalOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213815-init",
    "html": "See Also\nCreating an anchor\ninit(edges: NSDirectionalRectEdge)\nCreates an anchor with the specified edges to attach to.\ninit(edges: NSDirectionalRectEdge, absoluteOffset: CGPoint)\nCreates an anchor with the specified edges to attach to, offset by the provided absolute value."
  },
  {
    "title": "isFractionalOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213812-isfractionaloffset",
    "html": "See Also\nGetting the offset\nvar offset: CGPoint\nThe floating-point value of the anchor's offset from the item it's attached to.\nvar isAbsoluteOffset: Bool\nA Boolean value that indicates whether the anchor's offset is expressed as an absolute value."
  },
  {
    "title": "containerAnchor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem/3199109-containeranchor",
    "html": "See Also\nGetting the anchors\nvar itemAnchor: NSCollectionLayoutAnchor?\nThe anchor between the supplementary item and the item it's attached to."
  },
  {
    "title": "offset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3199037-offset",
    "html": "See Also\nGetting the offset\nvar isAbsoluteOffset: Bool\nA Boolean value that indicates whether the anchor's offset is expressed as an absolute value.\nvar isFractionalOffset: Bool\nA Boolean value that indicates whether the anchor's offset is expressed as a fraction of its supplementary item's dimension."
  },
  {
    "title": "horizontal(layoutSize:repeatingSubitem:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3975795-horizontal",
    "html": "Parameters\nlayoutSize\n\nThe group’s size.\n\nsubitem\n\nThe subitem to repeat. It’s your responsibility to ensure that the group’s layoutSize can fit count repetitions of this item.\n\ncount\n\nThe number of times to repeat the subitem.\n\nSee Also\nCreating a horizontal group\nclass func horizontal(layoutSize: NSCollectionLayoutSize, subitems: [NSCollectionLayoutItem]) -> Self\nCreates a group of the specified size, containing an array of items arranged in a horizontal line."
  },
  {
    "title": "scrollDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3199222-scrolldirection",
    "html": "Discussion\n\nThe default value of this property is UICollectionView.ScrollDirection.vertical."
  },
  {
    "title": "interSectionSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3199221-intersectionspacing",
    "html": "Discussion\n\nThe default value of this property is 0.0.\n\nSee Also\nConfiguring spacing\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets."
  },
  {
    "title": "contentInsetsReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration/3600435-contentinsetsreference",
    "html": "Discussion\n\nThe default value of this property is UIContentInsetsReference.safeArea.\n\nSee Also\nConfiguring spacing\nvar interSectionSpacing: CGFloat\nThe amount of space between the sections in the layout.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets."
  },
  {
    "title": "trailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199071-trailing",
    "html": "See Also\nGetting the edge spacing\nvar leading: NSCollectionLayoutSpacing?\nThe leading edge spacing value.\nvar top: NSCollectionLayoutSpacing?\nThe top edge spacing value.\nvar bottom: NSCollectionLayoutSpacing?\nThe bottom edge spacing value."
  },
  {
    "title": "top | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199070-top",
    "html": "See Also\nGetting the edge spacing\nvar leading: NSCollectionLayoutSpacing?\nThe leading edge spacing value.\nvar trailing: NSCollectionLayoutSpacing?\nThe trailing edge spacing value.\nvar bottom: NSCollectionLayoutSpacing?\nThe bottom edge spacing value."
  },
  {
    "title": "leading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing/3199069-leading",
    "html": "See Also\nGetting the edge spacing\nvar top: NSCollectionLayoutSpacing?\nThe top edge spacing value.\nvar trailing: NSCollectionLayoutSpacing?\nThe trailing edge spacing value.\nvar bottom: NSCollectionLayoutSpacing?\nThe bottom edge spacing value."
  },
  {
    "title": "preferredFontForTextStyle: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619030-preferredfontfortextstyle",
    "html": "Parameters\nstyle\n\nThe text style for which to return a font. See UIFontTextStyle for recognized values.\n\nReturn Value\n\nThe system font associated with the specified text style.\n\nDiscussion\n\nTo create a styled font based on a custom font, use a UIFontMetrics object.\n\nBecause fonts are immutable, any element that adjusts for an updated content size category does not modify the font itself. Instead, the element replaces the assigned font with a new instance based on the original settings.\n\nSee Also\nCreating Fonts\nScaling Fonts Automatically\nScale text in your interface automatically using Dynamic Type.\nCreating Self-Sizing Table View Cells\nCreate table view cells that support Dynamic Type and use system spacing constraints to adjust the spacing surrounding text labels.\n+ preferredFontForTextStyle:compatibleWithTraitCollection:\nReturns an instance of the system font for the appropriate text style and traits.\nUIFontTextStyle\nConstants that describe the preferred styles for fonts.\n+ fontWithName:size:\nCreates and returns a font object for the specified font name and size.\n+ fontWithDescriptor:size:\nReturns a font that matches the specified font descriptor.\n- fontWithSize:\nReturns a font object that is the same as the font, but has the specified size."
  },
  {
    "title": "value(forAnimatedKey:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622193-value",
    "html": "Parameters\nkey\n\nA key whose value you set using the updateValue(_:forAnimatedKey:) method.\n\nReturn Value\n\nThe last value set for the key.\n\nDiscussion\n\nUse this method to retrieve floating-point values that are useful when laying out the contents of your collection view. The key you specify is a string that you define and that has some meaning to your implementation. At points during an interactive transition, you can assign new values to that key using the updateValue(_:forAnimatedKey:) method.\n\nSee Also\nUpdating the transition information\nvar transitionProgress: CGFloat\nThe completion percentage of the transition.\nfunc updateValue(CGFloat, forAnimatedKey: String)\nSets the value for an animatable key."
  },
  {
    "title": "invalidateLayout(with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617771-invalidatelayout",
    "html": "Parameters\ncontext\n\nThe context object indicating which parts of the layout to refresh.\n\nDiscussion\n\nThe default implementation of this method optimizes the layout process using the base properties of the UICollectionViewLayoutInvalidationContext class. If you define a custom context object for your layout, override this method and apply any custom properties of the context object to your layout computations.\n\nIf you override this method, you must call super at some point in your implementation.\n\nSee Also\nInvalidating the layout\nfunc invalidateLayout()\nInvalidates the current layout and triggers a layout update.\nclass var invalidationContextClass: AnyClass\nReturns the class to use when creating an invalidation context for the layout.\nfunc shouldInvalidateLayout(forBoundsChange: CGRect) -> Bool\nAsks the layout object if the new bounds require a layout update.\nfunc invalidationContext(forBoundsChange: CGRect) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that defines the portions of the layout that should change when a bounds change occurs.\nfunc shouldInvalidateLayout(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> Bool\nAsks the layout object if changes to a self-sizing cell require a layout update.\nfunc invalidationContext(forPreferredLayoutAttributes: UICollectionViewLayoutAttributes, withOriginalAttributes: UICollectionViewLayoutAttributes) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the portions of the layout that should change in response to dynamic cell changes.\nfunc invalidationContext(forInteractivelyMovingItems: [IndexPath], withTargetPosition: CGPoint, previousIndexPaths: [IndexPath], previousPosition: CGPoint) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that are being interactively moved in the layout.\nfunc invalidationContextForEndingInteractiveMovementOfItems(toFinalIndexPaths: [IndexPath], previousIndexPaths: [IndexPath], movementCancelled: Bool) -> UICollectionViewLayoutInvalidationContext\nRetrieves a context object that identifies the items that were moved"
  },
  {
    "title": "UICellAccessory.Placement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/placement",
    "html": "Topics\nSpecifying accessory placement\ncase leading(displayed: UICellAccessory.DisplayedState, at: UICellAccessory.Placement.Position)\nThe accessory appears on the leading edge of the cell.\ncase trailing(displayed: UICellAccessory.DisplayedState, at: UICellAccessory.Placement.Position)\nThe accessory appears on the trailing edge of the cell.\nSpecifying position\nstatic func position(after: UICellAccessory) -> UICellAccessory.Placement.Position\nProvides a position after the accessory that matches the specified type, or at the end if there’s no matching type.\nstatic func position(before: UICellAccessory) -> UICellAccessory.Placement.Position\nProvides a position before the accessory that matches the specified type, or at the beginning if there’s no matching type.\ntypealias UICellAccessory.Placement.Position\nThe index position of the cell accessory in relation to the other accessories in the specified array.\nSee Also\nCustomizing appearance and placement\nenum UICellAccessory.LayoutDimension\nConstants that describe the layout dimension for the accessory.\nenum UICellAccessory.DisplayedState\nConstants that describe the cell-editing states that the accessory appears in."
  },
  {
    "title": "UICellAccessory.DisplayedState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/displayedstate",
    "html": "Topics\nStates\ncase always\nThe accessory always displays.\ncase whenEditing\nThe accessory displays only when the cell is in editing mode.\ncase whenNotEditing\nThe accessory displays only when the cell isn’t in editing mode.\nComparing displayed states\nstatic func == (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are equal.\nstatic func != (UICellAccessory.DisplayedState, UICellAccessory.DisplayedState) -> Bool\nAn operator for checking whether two cell accessory display states are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory display state by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nSee Also\nCustomizing appearance and placement\nenum UICellAccessory.LayoutDimension\nConstants that describe the layout dimension for the accessory.\nenum UICellAccessory.Placement\nConstants that describe the placement of the accessory within the cell."
  },
  {
    "title": "UICellAccessory.AccessoryType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/accessorytype",
    "html": "Topics\nAccessories\ncase disclosureIndicator\nThe disclosure indicator accessory type.\ncase outlineDisclosure\nThe outline disclosure accessory type.\ncase popUpMenu\nThe popup menu accessory type.\ncase checkmark\nThe checkmark accessory type.\ncase delete\nThe delete control accessory type.\ncase insert\nThe insert control accessory type.\ncase reorder\nThe reorder control accessory type.\ncase multiselect\nThe multiselect control accessory type.\ncase label\nThe label accessory type.\ncase detail\nThe detail accessory type.\ncase customView(UIView)\nThe custom accessory type.\nComparing accessory types\nstatic func == (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are equal.\nstatic func != (UICellAccessory.AccessoryType, UICellAccessory.AccessoryType) -> Bool\nAn operator for checking whether two cell accessory types are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the cell accessory type by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nRelationships\nConforms To\nHashable\nSee Also\nChecking the accessory's type\nlet accessoryType: UICellAccessory.AccessoryType\nThe type of the cell accessory."
  },
  {
    "title": "UICellAccessory.LayoutDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/layoutdimension",
    "html": "Topics\nConstants\ncase actual\nThe accessory layout uses its actual dimension.\ncase standard\nThe accessory layout uses the system standard layout dimension for accessories.\ncase custom(CGFloat)\nThe accessory layout uses the specified custom value.\nSee Also\nCustomizing appearance and placement\nenum UICellAccessory.Placement\nConstants that describe the placement of the accessory within the cell.\nenum UICellAccessory.DisplayedState\nConstants that describe the cell-editing states that the accessory appears in."
  },
  {
    "title": "UICellAccessory.CustomViewConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/customviewconfiguration",
    "html": "Topics\nCreating configuration options\ninit(customView: UIView, placement: UICellAccessory.Placement, isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?, maintainsFixedSize: Bool?)\nCreates a custom accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nlet customView: UIView\nThe custom view to display for the accessory.\nlet placement: UICellAccessory.Placement\nThe placement for the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar maintainsFixedSize: Bool\nA Boolean value that determines whether to preserve the frame size of the custom view.\nSee Also\nCreating a custom accessory\nstatic func customView(configuration: UICellAccessory.CustomViewConfiguration) -> UICellAccessory\nCreates a custom view accessory."
  },
  {
    "title": "customView(configuration:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600868-customview",
    "html": "Parameters\nconfiguration\n\nThe configuration for the custom accessory.\n\nReturn Value\n\nA configured custom cell accessory.\n\nSee Also\nCreating a custom accessory\nstruct UICellAccessory.CustomViewConfiguration\nConfiguration options for a custom accessory."
  },
  {
    "title": "UICellAccessory.LabelOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/labeloptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?, font: UIFont?, adjustsFontForContentSizeCategory: Bool?)\nCreates a label accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar font: UIFont\nThe font for the label.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the label automatically adjusts its font according to the content size category.\nSee Also\nCreating a label accessory\nstatic func label(text: String, displayed: UICellAccessory.DisplayedState, options: UICellAccessory.LabelOptions) -> UICellAccessory\nCreates a label system accessory with the specified text, display state, and configuration options."
  },
  {
    "title": "label(text:displayed:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600872-label",
    "html": "Parameters\ntext\n\nThe text for the label to display.\n\ndisplayed\n\nThe cell-editing states that the label accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.always.\n\noptions\n\nConfiguration options for the label. See UICellAccessory.LabelOptions for possible configuration options.\n\nReturn Value\n\nA configured label cell accessory. This accessory appears on the trailing edge of the cell.\n\nDiscussion\n\nUse this cell accessory to display a short string of text, like a small number showing the count for the associated item.\n\nSee Also\nCreating a label accessory\nstruct UICellAccessory.LabelOptions\nConfiguration options for a label accessory."
  },
  {
    "title": "UICellAccessory.ReorderOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/reorderoptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?, showsVerticalSeparator: Bool?)\nCreates a reorder accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar showsVerticalSeparator: Bool\nA Boolean value that determines whether a vertical separator displays before the accessory when it appears after another accessory.\nSee Also\nCreating a reorder accessory\nstatic func reorder(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.ReorderOptions) -> UICellAccessory\nCreates a reorder system accessory with the specified display state and configuration options."
  },
  {
    "title": "multiselect(displayed:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600873-multiselect",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the multiselect accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.whenEditing.\n\noptions\n\nConfiguration options for the multiselect accessory. See UICellAccessory.MultiselectOptions for possible configuration options.\n\nReturn Value\n\nA configured multiselect cell accessory that changes apperance according to the cell’s selection state. The accessory displays as an empty circle for an unselected cell and as a filled circle with a checkmark for a selected cell. This accessory appears on the leading edge of the cell.\n\nSee Also\nCreating a multiselect accessory\nstruct UICellAccessory.MultiselectOptions\nConfiguration options for a multiselect accessory."
  },
  {
    "title": "reorder(displayed:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600875-reorder",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the reorder accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.whenEditing.\n\noptions\n\nConfiguration options for the reorder accessory. See UICellAccessory.ReorderOptions for possible configuration options.\n\nReturn Value\n\nA configured reorder cell accessory. This accessory is three horizontal lines with the default system gray color. This accessory appears on the trailing edge of the cell.\n\nDiscussion\n\nIf your collection view supports interactive reordering of its cells, a user can drag the cell by its reorder accessory to change the order of the cell in the collection view.\n\nSee Also\nCreating a reorder accessory\nstruct UICellAccessory.ReorderOptions\nConfiguration options for a reorder accessory."
  },
  {
    "title": "insert(displayed:options:actionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600871-insert",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the insert accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.whenEditing.\n\noptions\n\nConfiguration options for the insert accessory. See UICellAccessory.InsertOptions for possible configuration options.\n\nactionHandler\n\nAn optional closure that the system calls when a user interacts with the insert accessory.\n\nReturn Value\n\nA configured insert cell accessory. This accessory is a plus sign inside of a circle with the default system green color. This accessory appears on the leading edge of the cell.\n\nSee Also\nCreating an insert accessory\nstruct UICellAccessory.InsertOptions\nConfiguration options for an insert accessory."
  },
  {
    "title": "popUpMenu(_:displayed:options:selectedElementDidChangeHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/4024653-popupmenu",
    "html": "Parameters\nmenu\n\nThe menu to display when a user taps the popup menu accessory.\n\ndisplayed\n\nThe cell-editing states that the popup menu accessory appears in. This parameter has a default value of UICellAccessory.DisplayedState.always.\n\noptions\n\nConfiguration options for the popup menu accessory. See UICellAccessory.PopUpMenuOptions for possible configuration options.\n\nselectedElementDidChangeHandler\n\nAn optional closure that the system calls when a user selects an element in the menu.\n\nReturn Value\n\nA configured popup menu cell accessory that appears as a pair of chevrons that point upward and downward. This accessory indicates that tapping anywhere in the cell presents a popup menu. This accessory appears on the trailing edge of the cell.\n\nSee Also\nCreating a popup menu accessory\ntypealias UICellAccessory.MenuSelectedElementDidChangeHandler\nA closure type that defines a handler to perform when a user selects an element in the menu.\nstruct UICellAccessory.PopUpMenuOptions\nConfiguration options for a popup menu accessory."
  },
  {
    "title": "outlineDisclosure(displayed:options:actionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600874-outlinedisclosure",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the outline disclosure appears in. This parameter has a default value of UICellAccessory.DisplayedState.always.\n\noptions\n\nConfiguration options for the outline disclosure. See UICellAccessory.OutlineDisclosureOptions for possible configuration options.\n\nactionHandler\n\nAn optional closure that the system calls when a user interacts with the outline disclosure.\n\nReturn Value\n\nA configured outline disclosure cell accessory. This accessory is a rotating chevron for use in outlines. In iOS and for headers in Mac Catalyst, this accessory appears on the trailing edge. For cells in Mac Catalyst, this accessory appears on the leading edge.\n\nDiscussion\n\nUse this cell accessory to indicate that an item can expand and collapse, and to enable the user to toggle between the expanded and collapsed states.\n\nSee Also\nCreating an outline disclosure\nstruct UICellAccessory.OutlineDisclosureOptions\nConfiguration options for an outline disclosure."
  },
  {
    "title": "UICellAccessory.OutlineDisclosureOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/outlinedisclosureoptions",
    "html": "Topics\nCreating configuration options\ninit(style: UICellAccessory.OutlineDisclosureOptions.Style?, isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?)\nCreates an outline disclosure options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nvar style: UICellAccessory.OutlineDisclosureOptions.Style\nThe style of the outline disclosure accessory.\nenum UICellAccessory.OutlineDisclosureOptions.Style\nConstants that describe the style of the outline disclosure accessory.\nSee Also\nCreating an outline disclosure\nstatic func outlineDisclosure(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.OutlineDisclosureOptions, actionHandler: UICellAccessory.ActionHandler?) -> UICellAccessory\nCreates an outline disclosure system accessory with the specified display state, configuration options, and optional action handler."
  },
  {
    "title": "UICellAccessory.DisclosureIndicatorOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/disclosureindicatoroptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?)\nCreates a disclosure indicator options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nSee Also\nCreating a disclosure indicator\nstatic func disclosureIndicator(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.DisclosureIndicatorOptions) -> UICellAccessory\nCreates a disclosure indicator system accessory with the specified display state and configuration options."
  },
  {
    "title": "disclosureIndicator(displayed:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600870-disclosureindicator",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the disclosure indicator appears in. This parameter has a default value of UICellAccessory.DisplayedState.always.\n\noptions\n\nConfiguration options for the disclosure indicator. See UICellAccessory.DisclosureIndicatorOptions for possible configuration options.\n\nReturn Value\n\nA configured disclosure indicator cell accessory. This accessory is a disclosure chevron that points in the trailing direction. This accessory appears on the trailing edge of the cell.\n\nDiscussion\n\nUse this cell accessory to indicate that users can tap on the cell to disclose additional content.\n\nSee Also\nCreating a disclosure indicator\nstruct UICellAccessory.DisclosureIndicatorOptions\nConfiguration options for a disclosure indicator."
  },
  {
    "title": "invalidateEverything | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617793-invalidateeverything",
    "html": "Discussion\n\nYou do not set this property yourself. The collection view sets it in response to specific types of layout invalidation scenarios. For example, the collection view sets it to true when you change the current layout object, change the data source of the collection view, or call the reloadData() method and subsequently request a layout invalidation context.\n\nIf this property is set to true, the layout object should recompute all of its layout-related data.\n\nSee Also\nInvalidating the Collection View Data\nvar invalidateDataSourceCounts: Bool\nA Boolean that indicates whether the layout should ask for new section and item counts."
  },
  {
    "title": "UICellAccessory.Placement.Position | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/placement/position",
    "html": "See Also\nSpecifying position\nstatic func position(after: UICellAccessory) -> UICellAccessory.Placement.Position\nProvides a position after the accessory that matches the specified type, or at the end if there’s no matching type.\nstatic func position(before: UICellAccessory) -> UICellAccessory.Placement.Position\nProvides a position before the accessory that matches the specified type, or at the beginning if there’s no matching type."
  },
  {
    "title": "prepare(forCollectionViewUpdates:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617784-prepare",
    "html": "Parameters\nupdateItems\n\nAn array of UICollectionViewUpdateItem objects that identify the changes being made.\n\nDiscussion\n\nWhen items are inserted or deleted, the collection view notifies its layout object so that it can adjust the layout as needed. The first step in that process is to call this method to let the layout object know what changes to expect. After that, additional calls are made to gather layout information for inserted, deleted, and moved items that are going to be animated around the collection view.\n\nSee Also\nResponding to collection view updates\nfunc finalizeCollectionViewUpdates()\nPerforms any additional animations or clean up needed during a collection view update.\nfunc indexPathsToInsertForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths for the supplementary views you want to add to the layout.\nfunc indexPathsToInsertForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to add.\nfunc initialLayoutAttributesForAppearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for an item being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a supplementary view being inserted into the collection view.\nfunc initialLayoutAttributesForAppearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the starting layout information for a decoration view being inserted into the collection view.\nfunc indexPathsToDeleteForSupplementaryView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the supplementary views to remove.\nfunc indexPathsToDeleteForDecorationView(ofKind: String) -> [IndexPath]\nRetrieves an array of index paths representing the decoration views to remove.\nfunc finalLayoutAttributesForDisappearingItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for an item that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingSupplementaryElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a supplementary view that is about to be removed from the collection view.\nfunc finalLayoutAttributesForDisappearingDecorationElement(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the final layout information for a decoration view that is about to be removed from the collection view.\nfunc targetIndexPath(forInteractivelyMovingItem: IndexPath, withPosition: CGPoint) -> IndexPath\nRetrieves the index path to for an item when it is at the specified location in the collection view’s bounds."
  },
  {
    "title": "contentSizeAdjustment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617763-contentsizeadjustment",
    "html": "Discussion\n\nUse this property to update the size of the collection view’s content area. The default value of this property is CGSizeZero. Changing the value causes the collection view to add the specified height and width values to its contentSize property. Thus, positive values grow the content area and negative values shrink it.\n\nSee Also\nInvalidating the Content Area\nvar contentOffsetAdjustment: CGPoint\nThe delta value to be applied to the collection view’s content offset."
  },
  {
    "title": "invalidateItems(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617795-invalidateitems",
    "html": "Parameters\nindexPaths\n\nAn array of NSIndexPath objects. Each index path represents a cell whose layout needs to be recomputed.\n\nDiscussion\n\nCall this method to identify the specific cells of your layout that require updates. The cells you specify are added to the array in the invalidatedItemIndexPaths property.\n\nSee Also\nInvalidating Specific Items\nfunc invalidateSupplementaryElements(ofKind: String, at: [IndexPath])\nAdds the supplementary views at the specified index paths to the list of invalid items.\nfunc invalidateDecorationElements(ofKind: String, at: [IndexPath])\nAdds the decoration views at the specified index paths to the list of invalid items.\nvar invalidatedItemIndexPaths: [IndexPath]?\nAn array of index paths representing the cells that were invalidated.\nvar invalidatedSupplementaryIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the supplementary views that were invalidated.\nvar invalidatedDecorationIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the decoration views that were invalidated."
  },
  {
    "title": "indexPathBeforeUpdate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/1617772-indexpathbeforeupdate",
    "html": "See Also\nAccessing the item changes\nvar indexPathAfterUpdate: IndexPath?\nThe index path of the item after the update.\nvar updateAction: UICollectionViewUpdateItem.Action\nThe action being performed on the item.\nenum UICollectionViewUpdateItem.Action\nConstants indicating the type of action being performed on an item."
  },
  {
    "title": "previousIndexPathsForInteractivelyMovingItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617800-previousindexpathsforinteractive",
    "html": "Discussion\n\nThis property is filled when an interactive move is in progress or has just ended. Use this property together with the targetIndexPathsForInteractivelyMovingItems property to determine what changes you need to make to the affected items. For most other updates, the value of this property is nil.\n\nSee Also\nInvalidating the Order of Items\nvar targetIndexPathsForInteractivelyMovingItems: [IndexPath]?\nAn array of index paths representing the new location of moving items in the collection view.\nvar interactiveMovementTarget: CGPoint\nThe current point used to determine the placement of moving items."
  },
  {
    "title": "invalidatedItemIndexPaths | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617723-invalidateditemindexpaths",
    "html": "Discussion\n\nThe array contains zero or more NSIndexPath objects, each of which represents a cell whose layout changed.\n\nSee Also\nInvalidating Specific Items\nfunc invalidateItems(at: [IndexPath])\nAdds the cells at the specified index paths to the list of invalid items.\nfunc invalidateSupplementaryElements(ofKind: String, at: [IndexPath])\nAdds the supplementary views at the specified index paths to the list of invalid items.\nfunc invalidateDecorationElements(ofKind: String, at: [IndexPath])\nAdds the decoration views at the specified index paths to the list of invalid items.\nvar invalidatedSupplementaryIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the supplementary views that were invalidated.\nvar invalidatedDecorationIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the decoration views that were invalidated."
  },
  {
    "title": "invalidateSupplementaryElements(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617747-invalidatesupplementaryelements",
    "html": "Parameters\nelementKind\n\nA string that identifies the type of the supplementary views. This parameter must not be nil.\n\nindexPaths\n\nAn array of NSIndexPath objects. Each index path represents a supplementary view of the given kind whose layout needs to be recomputed.\n\nDiscussion\n\nCall this method to identify the specific supplementary views of your layout that require updates. The views you specify are added to the dictionary in the invalidatedSupplementaryIndexPaths property. All of the views you specify should be of the type that you specified in the elementKind parameter. If you call this method two or more times with the same value for the elementKind parameter, this method merges the new index paths with the ones previously specified.\n\nSee Also\nInvalidating Specific Items\nfunc invalidateItems(at: [IndexPath])\nAdds the cells at the specified index paths to the list of invalid items.\nfunc invalidateDecorationElements(ofKind: String, at: [IndexPath])\nAdds the decoration views at the specified index paths to the list of invalid items.\nvar invalidatedItemIndexPaths: [IndexPath]?\nAn array of index paths representing the cells that were invalidated.\nvar invalidatedSupplementaryIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the supplementary views that were invalidated.\nvar invalidatedDecorationIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the decoration views that were invalidated."
  },
  {
    "title": "invalidatedDecorationIndexPaths | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617805-invalidateddecorationindexpaths",
    "html": "Discussion\n\nThe keys in this dictionary are the element kind strings of the invalid decoration views. The value for each key is an array of NSIndexPath objects indicating which specific decoration views have layout changes.\n\nSee Also\nInvalidating Specific Items\nfunc invalidateItems(at: [IndexPath])\nAdds the cells at the specified index paths to the list of invalid items.\nfunc invalidateSupplementaryElements(ofKind: String, at: [IndexPath])\nAdds the supplementary views at the specified index paths to the list of invalid items.\nfunc invalidateDecorationElements(ofKind: String, at: [IndexPath])\nAdds the decoration views at the specified index paths to the list of invalid items.\nvar invalidatedItemIndexPaths: [IndexPath]?\nAn array of index paths representing the cells that were invalidated.\nvar invalidatedSupplementaryIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the supplementary views that were invalidated."
  },
  {
    "title": "traitCollection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment/3199074-traitcollection",
    "html": "Required"
  },
  {
    "title": "container | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment/3199073-container",
    "html": "Required"
  },
  {
    "title": "supplementaryContentInsetsReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3967511-supplementarycontentinsetsrefere",
    "html": "Discussion\n\nThis property represents the reference boundary to use when defining contentInsets on NSCollectionLayoutBoundarySupplementaryItem objects.\n\nThe default value of this property is UIContentInsetsReference.automatic, which means any insets specified on a NSCollectionLayoutBoundarySupplementaryItem follow the layout configuration’s contentInsetsReference.\n\nSee Also\nConfiguring section spacing\nvar interGroupSpacing: CGFloat\nThe amount of space between the groups in the section.\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space between the content of the section and its boundaries.\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets."
  },
  {
    "title": "interGroupSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199093-intergroupspacing",
    "html": "See Also\nConfiguring section spacing\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space between the content of the section and its boundaries.\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nvar supplementaryContentInsetsReference: UIContentInsetsReference\nThe reference boundary for content insets on boundary supplementary items.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets."
  },
  {
    "title": "UICollectionLayoutListConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration",
    "html": "Overview\n\nUse this configuration to create a list section for a compositional layout (UICollectionViewCompositionalLayout), or a layout containing only list sections. The following example shows how to create a compositional layout that contains only list sections by applying the same configuration to each section in the list layout:\n\nlet configuration = UICollectionLayoutListConfiguration(appearance: .sidebar)\nlet layout = UICollectionViewCompositionalLayout.list(using: configuration)\n\n\nTo implement different list configurations for different sections, use a compositional layout’s section provider to create each section with its own list configuration.\n\nlet layout = UICollectionViewCompositionalLayout() { sectionIndex, layoutEnvironment in\n    \n    var configuration = UICollectionLayoutListConfiguration(appearance: .insetGrouped)\n    configuration.headerMode = sectionIndex == 0 ? .supplementary : .none\n    \n    let section = NSCollectionLayoutSection.list(using: configuration,\n                                                 layoutEnvironment: layoutEnvironment)\n    \n    return section\n}\n\n\nTopics\nCreating a list layout configuration\ninit(appearance: UICollectionLayoutListConfiguration.Appearance)\nCreates a list layout configuration with the specified appearance.\nConfiguring appearance\nvar appearance: UICollectionLayoutListConfiguration.Appearance\nThe overall appearance of the list.\nvar backgroundColor: UIColor?\nThe background color of the list.\nenum UICollectionLayoutListConfiguration.Appearance\nConstants that describe the appearance of the list.\nConfiguring separators\nvar showsSeparators: Bool\nA Boolean value that determines whether the list shows separators between cells.\nvar separatorConfiguration: UIListSeparatorConfiguration\nThe section's preferred configuration for list separators.\nstruct UIListSeparatorConfiguration\nA configuration that controls the list separator appearance in a list section.\nvar itemSeparatorHandler: UICollectionLayoutListConfiguration.ItemSeparatorHandler?\nThe closure that provides granular control over the list separator appearance of each item.\ntypealias UICollectionLayoutListConfiguration.ItemSeparatorHandler\nA closure that provides granular control over list separator appearance.\nConfiguring headers and footers\nvar headerMode: UICollectionLayoutListConfiguration.HeaderMode\nThe type of header to use for the list.\nvar footerMode: UICollectionLayoutListConfiguration.FooterMode\nThe type of footer to use for the list.\nenum UICollectionLayoutListConfiguration.HeaderMode\nConstants that describe the list’s header mode.\nenum UICollectionLayoutListConfiguration.FooterMode\nConstants that describe the list’s footer mode.\nvar headerTopPadding: CGFloat?\nThe amount of padding above each section header.\nCustomizing Swipe Actions\nvar leadingSwipeActionsConfigurationProvider: UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider?\nThe closure that provides the set of actions to display when swiping on the leading edge of the cell.\nvar trailingSwipeActionsConfigurationProvider: UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider?\nThe closure that provides the set of actions to display when swiping on the trailing edge of the cell.\ntypealias UICollectionLayoutListConfiguration.SwipeActionsConfigurationProvider\nA closure that configures the swipe actions for a cell.\nSee Also\nCreating a list layout\nstatic func list(using: UICollectionLayoutListConfiguration) -> UICollectionViewCompositionalLayout\nCreates a compositional layout that contains only list sections of the specified configuration.\nRelated Documentation\nstatic func list(using: UICollectionLayoutListConfiguration, layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection\nCreates a list section with the specified list configuration and layout environment."
  },
  {
    "title": "init(group:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3213881-init",
    "html": "See Also\nCreating a section\nstatic func list(using: UICollectionLayoutListConfiguration, layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection\nCreates a list section with the specified list configuration and layout environment.\nclass func orthogonalLayoutSectionForMediaItems() -> NSCollectionLayoutSection\nCreates an orthogonally scrolling section with system default spacing."
  },
  {
    "title": "supplementariesFollowContentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199095-supplementariesfollowcontentinse",
    "html": "Deprecated\n\nUse supplementaryContentInsetsReference instead.\n\nDiscussion\n\nThe default value of this property is true."
  },
  {
    "title": "contentInsetsReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3600434-contentinsetsreference",
    "html": "Discussion\n\nThis property represents the reference point to use when defining contentInsets.\n\nThe default value of this property is UIContentInsetsReference.automatic, which means the section follows the layout configuration’s contentInsetsReference.\n\nSee Also\nConfiguring section spacing\nvar interGroupSpacing: CGFloat\nThe amount of space between the groups in the section.\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space between the content of the section and its boundaries.\nvar supplementaryContentInsetsReference: UIContentInsetsReference\nThe reference boundary for content insets on boundary supplementary items.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets."
  },
  {
    "title": "contentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199090-contentinsets",
    "html": "See Also\nConfiguring section spacing\nvar interGroupSpacing: CGFloat\nThe amount of space between the groups in the section.\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nvar supplementaryContentInsetsReference: UIContentInsetsReference\nThe reference boundary for content insets on boundary supplementary items.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets."
  },
  {
    "title": "listOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/1533519-listoptions",
    "html": "Return Value\n\nThe list options mask value of the receiver.\n\nSee Also\nGetting list options\nvar isOrdered: Bool\nstruct NSTextList.Options\nValues that available options for text list items."
  },
  {
    "title": "orthogonalScrollingProperties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/4134809-orthogonalscrollingproperties",
    "html": "Discussion\n\nSet this value to specify bouncing behavior and deceleration rate for an orthogonally scrolling section.\n\nSee Also\nSpecifying scrolling behavior\nvar orthogonalScrollingBehavior: UICollectionLayoutSectionOrthogonalScrollingBehavior\nThe section’s scrolling behavior in relation to the main layout axis.\nclass UICollectionLayoutSectionOrthogonalScrollingProperties\nAn object that specifies properties for a layout section that scrolls orthogonally in relation to the main layout axis."
  },
  {
    "title": "isAbsoluteOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor/3213811-isabsoluteoffset",
    "html": "See Also\nGetting the offset\nvar offset: CGPoint\nThe floating-point value of the anchor's offset from the item it's attached to.\nvar isFractionalOffset: Bool\nA Boolean value that indicates whether the anchor's offset is expressed as a fraction of its supplementary item's dimension."
  },
  {
    "title": "UIFontDescriptorCascadeListAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorcascadelistattribute",
    "html": "Discussion\n\nThe value is an NSArray instance, where each member of the array is a subdescriptor. The default value is the system default cascading list for the user’s locale."
  },
  {
    "title": "UIFontDescriptorTextStyleAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptortextstyleattribute",
    "html": "Discussion\n\nThe value is an NSString object that contains the specified text style."
  },
  {
    "title": "UIFontPickerViewController.Configuration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontpickerviewcontroller/configuration",
    "html": "Topics\nCustomizing the font picker’s appearance\nvar displayUsingSystemFont: Bool\nA Boolean value that determines whether to use the system font for all font names in the font picker.\nFiltering available fonts\nvar includeFaces: Bool\nA Boolean value that determines whether the font picker should allow the user to select from font faces, or just font families.\nvar filteredTraits: UIFontDescriptor.SymbolicTraits\nA predicate to filter fonts based on their traits, like bold, italic, or monospace.\nvar filteredLanguagesPredicate: NSPredicate?\nA predicate to filter fonts based on the languages they support.\nclass func filterPredicate(forFilteredLanguages: [String]) -> NSPredicate?\nCreates a font picker filter based on language support.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nConfiguring a font picker to display in iOS\ninit(configuration: UIFontPickerViewController.Configuration)\nCreates a controller for a font picker view.\nvar configuration: UIFontPickerViewController.Configuration\nSettings for fonts the font picker should offer to the user and how to display those fonts."
  },
  {
    "title": "dynamicAnimatorDidPause(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimatordelegate/1621193-dynamicanimatordidpause",
    "html": "Parameters\nanimator\n\nThe dynamic animator that paused its animation.\n\nSee Also\nResponding to animation pausing and resumption\nfunc dynamicAnimatorWillResume(UIDynamicAnimator)\nCalled when a dynamic animator is about to resume the animations for its behaviors’ associated dynamic items."
  },
  {
    "title": "movingToParentViewController | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2097561-movingtoparentviewcontroller",
    "html": "See Also\nResponding to view-related events\n- viewWillAppear:\nNotifies the view controller that its view is about to be added to a view hierarchy.\n- viewIsAppearing:\nNotifies the view controller that the system is adding the view controller’s view to a view hierarchy.\n- viewDidAppear:\nNotifies the view controller that its view was added to a view hierarchy.\n- viewWillDisappear:\nNotifies the view controller that its view is about to be removed from a view hierarchy.\n- viewDidDisappear:\nNotifies the view controller that its view was removed from a view hierarchy.\nbeingDismissed\nA Boolean value indicating whether the view controller is dismissing.\nbeingPresented\nA Boolean value indicating whether the view controller is presenting.\nmovingFromParentViewController\nA Boolean value indicating whether the view controller is moving from a parent view controller."
  },
  {
    "title": "beingPresented | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2097564-beingpresented",
    "html": "See Also\nResponding to view-related events\n- viewWillAppear:\nNotifies the view controller that its view is about to be added to a view hierarchy.\n- viewIsAppearing:\nNotifies the view controller that the system is adding the view controller’s view to a view hierarchy.\n- viewDidAppear:\nNotifies the view controller that its view was added to a view hierarchy.\n- viewWillDisappear:\nNotifies the view controller that its view is about to be removed from a view hierarchy.\n- viewDidDisappear:\nNotifies the view controller that its view was removed from a view hierarchy.\nbeingDismissed\nA Boolean value indicating whether the view controller is dismissing.\nmovingFromParentViewController\nA Boolean value indicating whether the view controller is moving from a parent view controller.\nmovingToParentViewController\nA Boolean value indicating whether the view controller is moving to a parent view controller."
  },
  {
    "title": "UIFontFeatureTypeIdentifierKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontfeaturetypeidentifierkey",
    "html": "Deprecated\n\nUse type instead.\n\nSee Also\nDeprecated\nUIFontFeatureSelectorIdentifierKey\nA key for identifying the font feature selector."
  },
  {
    "title": "targetIndexPathsForInteractivelyMovingItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617780-targetindexpathsforinteractively",
    "html": "Discussion\n\nThis property is filled when an interactive move is in progress or has just ended. Use this property together with the previousIndexPathsForInteractivelyMovingItems property to determine what changes you need to make to the affected items. For most other updates, the value of this property is nil.\n\nSee Also\nInvalidating the Order of Items\nvar previousIndexPathsForInteractivelyMovingItems: [IndexPath]?\nAn array of index paths representing the previous location of moving items in the collection view.\nvar interactiveMovementTarget: CGPoint\nThe current point used to determine the placement of moving items."
  },
  {
    "title": "layoutAttributesForItem(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617797-layoutattributesforitem",
    "html": "Parameters\nindexPath\n\nThe index path of the item.\n\nReturn Value\n\nA layout attributes object containing the information to apply to the item’s cell.\n\nDiscussion\n\nSubclasses must override this method and use it to return layout information for items in the collection view. You use this method to provide layout information only for items that have a corresponding cell. Do not use it for supplementary views or decoration views.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "collectionViewContentSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617796-collectionviewcontentsize",
    "html": "Return Value\n\nThe width and height of the collection view’s contents.\n\nDiscussion\n\nSubclasses must override this property and use it to return the width and height of the collection view’s content. These values represent the width and height of all the content, not just the content that is currently visible. The collection view uses this information to configure its own content size for scrolling purposes.\n\nThe default implementation of this method returns CGSizeZero.\n\nSee Also\nGetting the collection view information\nvar collectionView: UICollectionView?\nThe collection view object currently using this layout object."
  },
  {
    "title": "interactiveMovementTarget | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617808-interactivemovementtarget",
    "html": "Discussion\n\nThis property is filled when an interactive move is in progress or has just ended. The value represents the point that was used to determine the new index paths in the targetIndexPathsForInteractivelyMovingItems property. You can use this point as needed to calculate the position of items in your layout.\n\nSee Also\nInvalidating the Order of Items\nvar previousIndexPathsForInteractivelyMovingItems: [IndexPath]?\nAn array of index paths representing the previous location of moving items in the collection view.\nvar targetIndexPathsForInteractivelyMovingItems: [IndexPath]?\nAn array of index paths representing the new location of moving items in the collection view."
  },
  {
    "title": "layoutAttributesForElements(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617769-layoutattributesforelements",
    "html": "Parameters\nrect\n\nThe rectangle (specified in the collection view’s coordinate system) containing the target views.\n\nReturn Value\n\nAn array of UICollectionViewLayoutAttributes objects representing the layout information for the cells and views. The default implementation returns nil.\n\nDiscussion\n\nSubclasses must override this method and use it to return layout information for all items whose view intersects the specified rectangle. Your implementation should return attributes for all visual elements, including cells, supplementary views, and decoration views.\n\nWhen creating the layout attributes, always create an attributes object that represents the correct element type (cell, supplementary, or decoration). The collection view differentiates between attributes for each type and uses that information to make decisions about which views to create and how to manage them.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "nextFocusedIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewfocusupdatecontext/1618011-nextfocusedindexpath",
    "html": "Discussion\n\nThis property contains the index path only when the view receiving focus belongs to a cell of the collection view. If focus is moving to a view outside of the collection view and its cells, this property is nil.\n\nSee Also\nLocating focusable items in the collection view\nvar previouslyFocusedIndexPath: IndexPath?\nThe index path of the collection view cell that previously had the focus."
  },
  {
    "title": "prepare() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617752-prepare",
    "html": "Discussion\n\nLayout updates occur the first time the collection view presents its content and whenever the layout is invalidated explicitly or implicitly because of a change to the view. During each layout update, the collection view calls this method first to give your layout object a chance to prepare for the upcoming layout operation.\n\nThe default implementation of this method does nothing. Subclasses can override it and use it to set up data structures or perform any initial computations needed to perform the layout later.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint) -> CGPoint\nRetrieves the content offset to use after an animated layout update or change.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622192-init",
    "html": "See Also\nInitializing the transition layout object\ninit(currentLayout: UICollectionViewLayout, nextLayout: UICollectionViewLayout)\nInitializes and returns a transition layout object."
  },
  {
    "title": "imageWithTintColor:renderingMode: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3327301-imagewithtintcolor",
    "html": "Parameters\ncolor\n\nThe tint color to apply to the image.\n\nrenderingMode\n\nThe rendering mode to assign to the returned image.\n\nReturn Value\n\nA new version of the image that incorporates the specified tint color.\n\nDiscussion\n\nFor bitmap images, this method draws the background tint color followed by the image contents using the kCGBlendModeDestinationIn mode. For symbol images, this method returns an image that always uses the specified tint color.\n\nSee Also\nTinting the image\n- imageWithTintColor:\nReturns a new version of the current image with the specified tint color."
  },
  {
    "title": "updateValue(_:forAnimatedKey:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622194-updatevalue",
    "html": "Parameters\nvalue\n\nThe value you want to store for the specified key.\n\nkey\n\nA key that you define for your custom transition layout.\n\nDiscussion\n\nUse this method to store a floating-point value with a specific key that you define for your transition layout object. The name of the key should be one that has meaning to your layout object. For example, if you track the position of the user’s finger over time, you might define the keys \"PositionX” and \"PositionY” to track those changes. Each time you update the value of a key, the layout object records the change along with a timestamp value. When the layout is finalized or canceled, those values can then be used to determine the speed with which to perform the remaining animations.\n\nFor any keys you set using this method, you should get that value as part of the normal process of generating layout attribute information. Getting the value using the value(forAnimatedKey:) method (as opposed to getting the value from a class variable) means that when the collection view performs its final animations, your layout methods provide the correct values.\n\nSee Also\nUpdating the transition information\nvar transitionProgress: CGFloat\nThe completion percentage of the transition.\nfunc value(forAnimatedKey: String) -> CGFloat\nReturns the most recently set value for the specified key."
  },
  {
    "title": "nextLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622188-nextlayout",
    "html": "Discussion\n\nThis object provides the layout attributes representing the new position of items in the collection view. If the transition completes as expected, the collection view animates its items to the positions provided by this object.\n\nSee Also\nAccessing the layout objects\nvar currentLayout: UICollectionViewLayout\nThe collection view’s current layout object."
  },
  {
    "title": "systemFontOfSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/1619042-systemfontofsize",
    "html": "Parameters\nfontSize\n\nThe size (in points) to which the font is scaled. This value must be greater than 0.0.\n\nReturn Value\n\nA font object of the specified size.\n\nDiscussion\n\nInstead of using this method to get a font, it’s often more appropriate to use preferredFontForTextStyle: because that method respects the user’s selected content size category.\n\nSee Also\nCreating System Fonts\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "drawInRect:blendMode:alpha: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624101-drawinrect",
    "html": "Parameters\nrect\n\nThe rectangle (in the coordinate system of the graphics context) in which to draw the image.\n\nblendMode\n\nThe blend mode to use when compositing the image.\n\nalpha\n\nThe desired opacity of the image, specified as a value between 0.0 and 1.0. A value of 0.0 renders the image totally transparent while 1.0 renders it fully opaque. Values larger than 1.0 are interpreted as 1.0.\n\nDiscussion\n\nThis method scales the image as needed to make it fit in the specified rectangle. This method draws the image in the current graphics context, respecting the image’s orientation setting. In the default coordinate system, images are situated down and to the right of the origin of the specified rectangle. This method respects any transforms applied to the current graphics context, however.\n\nSee Also\nDrawing images\n- drawAtPoint:\nDraws the image at the specified point in the current context.\n- drawAtPoint:blendMode:alpha:\nDraws the entire image at the specified point using the custom compositing options.\n- drawInRect:\nDraws the entire image in the specified rectangle, scaling it as necessary to fit.\n- drawAsPatternInRect:\nDraws a tiled Quartz pattern using the receiver’s contents as the tile pattern."
  },
  {
    "title": "UIFontDescriptorVisibleNameAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorvisiblenameattribute",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the font’s visible name."
  },
  {
    "title": "UICellAccessory.MenuSelectedElementDidChangeHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/menuselectedelementdidchangehandler",
    "html": "See Also\nCreating a popup menu accessory\nstatic func popUpMenu(UIMenu, displayed: UICellAccessory.DisplayedState, options: UICellAccessory.PopUpMenuOptions, selectedElementDidChangeHandler: UICellAccessory.MenuSelectedElementDidChangeHandler?) -> UICellAccessory\nCreates a popup menu system accessory with the specified menu, display state, configuration options, and optional selection handler.\nstruct UICellAccessory.PopUpMenuOptions\nConfiguration options for a popup menu accessory."
  },
  {
    "title": "UICellAccessory.PopUpMenuOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/popupmenuoptions",
    "html": "Topics\nCreating configuration options\ninit(isHidden: Bool?, reservedLayoutWidth: UICellAccessory.LayoutDimension?, tintColor: UIColor?)\nCreates a popup menu accessory options structure.\nAccessing configuration options\nvar isHidden: Bool\nA Boolean value that determines whether the cell hides the accessory.\nvar reservedLayoutWidth: UICellAccessory.LayoutDimension\nThe layout width that the system reserves for the accessory, and then centers the accessory within.\nvar tintColor: UIColor?\nThe tint color to apply to the accessory.\nSee Also\nCreating a popup menu accessory\nstatic func popUpMenu(UIMenu, displayed: UICellAccessory.DisplayedState, options: UICellAccessory.PopUpMenuOptions, selectedElementDidChangeHandler: UICellAccessory.MenuSelectedElementDidChangeHandler?) -> UICellAccessory\nCreates a popup menu system accessory with the specified menu, display state, configuration options, and optional selection handler.\ntypealias UICellAccessory.MenuSelectedElementDidChangeHandler\nA closure type that defines a handler to perform when a user selects an element in the menu."
  },
  {
    "title": "checkmark(displayed:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory/3600867-checkmark",
    "html": "Parameters\ndisplayed\n\nThe cell-editing states that the checkmark appears in. This parameter has a default value of UICellAccessory.DisplayedState.always.\n\noptions\n\nConfiguration options for the checkmark. See UICellAccessory.CheckmarkOptions for possible configuration options.\n\nReturn Value\n\nA configured checkmark cell accessory. This accessory is a checkmark with the default system green color. This accessory appears on the trailing edge of the cell.\n\nSee Also\nCreating a checkmark accessory\nstruct UICellAccessory.CheckmarkOptions\nConfiguration options for a checkmark accessory."
  },
  {
    "title": "invalidateDataSourceCounts | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617760-invalidatedatasourcecounts",
    "html": "Discussion\n\nYou do not set this property yourself. The collection view sets it in response to specific types of layout invalidation scenarios. For example, the collection view sets it to true when you insert or delete items or call the collection view’s reloadData() method.\n\nIf this property is set to true, the layout object should query its delegate for the number of sections and items and update its layout based on the new number of items.\n\nSee Also\nInvalidating the Collection View Data\nvar invalidateEverything: Bool\nA Boolean that indicates that all layout data should be marked as invalid."
  },
  {
    "title": "contentOffsetAdjustment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext/1617731-contentoffsetadjustment",
    "html": "Discussion\n\nUse this property to update the content offset of the collection view. The default value of this property is CGPointZero. Changing the value causes the collection view to add the specified x and y values to its contentOffset property. Thus, positive values increase the content offset and negative values decrease it.\n\nSee Also\nInvalidating the Content Area\nvar contentSizeAdjustment: CGSize\nThe delta value to be applied to the collection view’s content size."
  },
  {
    "title": "UICollectionViewUpdateItem.Action | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/action",
    "html": "Topics\nConstants\ncase none\ncase insert\ncase delete\ncase reload\ncase move\nRelationships\nConforms To\nSendable\nSee Also\nAccessing the item changes\nvar indexPathBeforeUpdate: IndexPath?\nThe index path of the item before the update.\nvar indexPathAfterUpdate: IndexPath?\nThe index path of the item after the update.\nvar updateAction: UICollectionViewUpdateItem.Action\nThe action being performed on the item."
  },
  {
    "title": "updateAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/1617748-updateaction",
    "html": "Discussion\n\nFor a list of relevant action types, see UICollectionViewUpdateItem.Action.\n\nSee Also\nAccessing the item changes\nvar indexPathBeforeUpdate: IndexPath?\nThe index path of the item before the update.\nvar indexPathAfterUpdate: IndexPath?\nThe index path of the item after the update.\nenum UICollectionViewUpdateItem.Action\nConstants indicating the type of action being performed on an item."
  },
  {
    "title": "indexPathAfterUpdate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem/1617765-indexpathafterupdate",
    "html": "See Also\nAccessing the item changes\nvar indexPathBeforeUpdate: IndexPath?\nThe index path of the item before the update.\nvar updateAction: UICollectionViewUpdateItem.Action\nThe action being performed on the item.\nenum UICollectionViewUpdateItem.Action\nConstants indicating the type of action being performed on an item."
  },
  {
    "title": "UIAccessibilityNavigationStyle.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitynavigationstyle/automatic",
    "html": "Discussion\n\nThis is the default value."
  },
  {
    "title": "UIFontDescriptorSystemDesignSerif | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesignserif",
    "html": "Discussion\n\nUsing this constant with fontDescriptorWithDesign: returns New York.\n\nSee Also\nTypeface designs\nUIFontDescriptorSystemDesignDefault\nThe default typeface for an app’s user interface.\nUIFontDescriptorSystemDesignRounded\nThe rounded variant of the default typeface.\nUIFontDescriptorSystemDesignMonospaced\nThe monospace variant of the default typeface."
  },
  {
    "title": "UIFontDescriptorSizeAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorsizeattribute",
    "html": "Discussion\n\nThe value is an optional NSNumber object that contains a float value. This float value specifies the font size."
  },
  {
    "title": "UIFontDescriptorSystemDesignDefault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesigndefault",
    "html": "Discussion\n\nThe returned typeface depends on the system. In iOS, using this constant with fontDescriptorWithDesign: returns SF Pro, while in watchOS that returns SF Compact.\n\nSee Also\nTypeface designs\nUIFontDescriptorSystemDesignRounded\nThe rounded variant of the default typeface.\nUIFontDescriptorSystemDesignMonospaced\nThe monospace variant of the default typeface.\nUIFontDescriptorSystemDesignSerif\nThe serif variant of the default typeface."
  },
  {
    "title": "UIFontDescriptorTraitsAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptortraitsattribute",
    "html": "Discussion\n\nThe value is an NSDictionary instance that fully describes the font traits. The font supplies the default value."
  },
  {
    "title": "presentViewController:animated:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621380-presentviewcontroller",
    "html": "Parameters\nviewControllerToPresent\n\nThe view controller to display over the current view controller’s content.\n\nflag\n\nPass YES to animate the presentation; otherwise, pass NO.\n\ncompletion\n\nThe block to execute after the presentation finishes. This block has no return value and takes no parameters. You may specify nil for this parameter.\n\nDiscussion\n\nIn a horizontally regular environment, the view controller is presented in the style specified by the modalPresentationStyle property. In a horizontally compact environment, the view controller is presented full screen by default. If you associate an adaptive delegate with the presentation controller associated with the object in viewControllerToPresent, you can modify the presentation style dynamically.\n\nThe object on which you call this method may not always be the one that handles the presentation. Each presentation style has different rules governing its behavior. For example, a full-screen presentation must be made by a view controller that itself covers the entire screen. If the current view controller is unable to fulfill a request, it forwards the request up the view controller hierarchy to its nearest parent, which can then handle or forward the request.\n\nBefore displaying the view controller, this method resizes the presented view controller's view based on the presentation style. For most presentation styles, the resulting view is then animated onscreen using the transition style in the modalTransitionStyle property of the presented view controller. For custom presentations, the view is animated onscreen using the presented view controller’s transitioning delegate. For current context presentations, the view may be animated onscreen using the current view controller’s transition style.\n\nThe completion handler is called after the viewDidAppear: method is called on the presented view controller.\n\nSee Also\nPresenting a view controller\n- showViewController:sender:\nPresents a view controller in a primary context.\n- showDetailViewController:sender:\nPresents a view controller in a secondary (or detail) context.\n- dismissViewControllerAnimated:completion:\nDismisses the view controller that was presented modally by the view controller.\nmodalPresentationStyle\nThe presentation style for modal view controllers.\nUIModalPresentationStyle\nModal presentation styles available when presenting view controllers.\nmodalTransitionStyle\nThe transition style to use when presenting the view controller.\nUIModalTransitionStyle\nTransition styles available when presenting view controllers.\nmodalInPresentation\nA Boolean value indicating whether the view controller enforces a modal behavior.\ndefinesPresentationContext\nA Boolean value that indicates whether this view controller's view is covered when the view controller or one of its descendants presents a view controller.\nprovidesPresentationContextTransitionStyle\nA Boolean value that indicates whether the view controller specifies the transition style for view controllers it presents.\ndisablesAutomaticKeyboardDismissal\nReturns a Boolean indicating whether the current input view is dismissed automatically when changing controls.\nUIViewControllerShowDetailTargetDidChangeNotification\nPosted when a split view controller is expanded or collapsed.\nRelated Documentation\npresentedViewController\nThe view controller that is presented by this view controller, or one of its ancestors in the view controller hierarchy.\npresentingViewController\nThe view controller that presented this view controller."
  },
  {
    "title": "dynamicAnimatorWillResume(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimatordelegate/1621188-dynamicanimatorwillresume",
    "html": "Parameters\nanimator\n\nThe dynamic animator that is about to resume animation.\n\nSee Also\nResponding to animation pausing and resumption\nfunc dynamicAnimatorDidPause(UIDynamicAnimator)\nCalled when a dynamic animator pauses the animations for its behaviors’ associated dynamic items."
  },
  {
    "title": "beingDismissed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2097562-beingdismissed",
    "html": "See Also\nResponding to view-related events\n- viewWillAppear:\nNotifies the view controller that its view is about to be added to a view hierarchy.\n- viewIsAppearing:\nNotifies the view controller that the system is adding the view controller’s view to a view hierarchy.\n- viewDidAppear:\nNotifies the view controller that its view was added to a view hierarchy.\n- viewWillDisappear:\nNotifies the view controller that its view is about to be removed from a view hierarchy.\n- viewDidDisappear:\nNotifies the view controller that its view was removed from a view hierarchy.\nbeingPresented\nA Boolean value indicating whether the view controller is presenting.\nmovingFromParentViewController\nA Boolean value indicating whether the view controller is moving from a parent view controller.\nmovingToParentViewController\nA Boolean value indicating whether the view controller is moving to a parent view controller."
  },
  {
    "title": "UIFontDescriptorSystemDesignMonospaced | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesignmonospaced",
    "html": "Discussion\n\nUsing this constant with fontDescriptorWithDesign: returns SF Mono.\n\nSee Also\nTypeface designs\nUIFontDescriptorSystemDesignDefault\nThe default typeface for an app’s user interface.\nUIFontDescriptorSystemDesignRounded\nThe rounded variant of the default typeface.\nUIFontDescriptorSystemDesignSerif\nThe serif variant of the default typeface."
  },
  {
    "title": "movingFromParentViewController | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2097565-movingfromparentviewcontroller",
    "html": "See Also\nResponding to view-related events\n- viewWillAppear:\nNotifies the view controller that its view is about to be added to a view hierarchy.\n- viewIsAppearing:\nNotifies the view controller that the system is adding the view controller’s view to a view hierarchy.\n- viewDidAppear:\nNotifies the view controller that its view was added to a view hierarchy.\n- viewWillDisappear:\nNotifies the view controller that its view is about to be removed from a view hierarchy.\n- viewDidDisappear:\nNotifies the view controller that its view was removed from a view hierarchy.\nbeingDismissed\nA Boolean value indicating whether the view controller is dismissing.\nbeingPresented\nA Boolean value indicating whether the view controller is presenting.\nmovingToParentViewController\nA Boolean value indicating whether the view controller is moving to a parent view controller."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextalignment/1624537-init",
    "html": "Parameters\nctTextAlignment\n\nThe Core Text alignment constant to convert.\n\nReturn Value\n\nThe UIKit text alignment that corresponds to the value specified in ctTextAlignment.\n\nDiscussion\n\nUse this function when you need to map between the Core Text and UIKit constants for text alignment.\n\nSee Also\nText manipulations\ninit(NSTextAlignment)\nConverts a UIKit text alignment constant value to the matching constant value that Core Text uses."
  },
  {
    "title": "UIFontDescriptorFeatureSettingsAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorfeaturesettingsattribute",
    "html": "Discussion\n\nThe value is an array of dictionaries that represents nondefault font feature settings. Each dictionary contains a type and selector key."
  },
  {
    "title": "UIFontWeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontweight",
    "html": "Discussion\n\nUse system-defined constants as interchangeable values for UIFontWeightTrait. Each constant corresponds to a different value that indicates the weight of a font. Use these constants to specify the weight parameter in systemFontOfSize:weight:. When providing a weight that doesn’t precisely match a font face in the family, the system locates a face that most closely matches the request.\n\nNote\n\nFont familyNames don’t include all system-defined font constants.\n\nTopics\nUsing system-defined font weights\nUIFontWeightUltraLight\nThe ultra-light font weight.\nUIFontWeightThin\nThe thin font weight.\nUIFontWeightLight\nThe light font weight.\nUIFontWeightRegular\nThe regular font weight.\nUIFontWeightMedium\nThe medium font weight.\nUIFontWeightSemibold\nThe semibold font weight.\nUIFontWeightBold\nThe bold font weight.\nUIFontWeightHeavy\nThe heavy font weight.\nUIFontWeightBlack\nThe black font weight.\nBalancing the appearance of symbols and text\nUIImageSymbolWeightForFontWeight\nThe corresponding symbol weight for the provided font weight.\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\n+ systemFontOfSize:weight:width:\nUIFontWidth\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "UIFontDescriptorSystemDesignRounded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesignrounded",
    "html": "Discussion\n\nThe returned typeface depends on the system. iOS returns SF Pro Rounded, while watchOS returns SF Compact Rounded.\n\nSee Also\nTypeface designs\nUIFontDescriptorSystemDesignDefault\nThe default typeface for an app’s user interface.\nUIFontDescriptorSystemDesignMonospaced\nThe monospace variant of the default typeface.\nUIFontDescriptorSystemDesignSerif\nThe serif variant of the default typeface."
  },
  {
    "title": "UIFontWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontwidth",
    "html": "Topics\nType Properties\nUIFontWidthCompressed\nUIFontWidthCondensed\nUIFontWidthExpanded\nUIFontWidthStandard\nSee Also\nCreating System Fonts\n+ systemFontOfSize:\nReturns the font object for standard interface items in the specified size.\n+ systemFontOfSize:weight:\nReturns the font object for standard interface items in the specified size and weight.\nUIFontWeight\nConstants that represent standard typeface styles.\n+ systemFontOfSize:weight:width:\n+ boldSystemFontOfSize:\nReturns the font object for standard interface items in boldface type in the specified size.\n+ italicSystemFontOfSize:\nReturns the font object for standard interface items in italic type in the specified size.\n+ monospacedSystemFontOfSize:weight:\nReturns the fixed-width font for standard interface text in the specified size.\n+ monospacedDigitSystemFontOfSize:weight:\nReturns the standard system font with all digits of consistent width."
  },
  {
    "title": "UIFontDescriptorTraitKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptortraitkey",
    "html": "Discussion\n\nUse these keys to fetch values from the dictionary associated with the UIFontDescriptorTraitsAttribute key.\n\nTopics\nFont traits\nUIFontSlantTrait\nThe relative slant angle of the font.\nUIFontSymbolicTrait\nThe symbolic font traits.\nUIFontWeightTrait\nThe numerical value that corresponds to a font face.\nUIFontWidthTrait\nThe inter-glyph spacing of the font."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/coretext/cttextalignment/1624536-init",
    "html": "Parameters\nnsTextAlignment\n\nThe UIKit text alignment constant you want to convert.\n\nReturn Value\n\nThe Core Text alignment that corresponds to the value specified in nsTextAlignment.\n\nDiscussion\n\nUse this function when you need to map between the UIKit and Core Text constants for text alignment.\n\nSee Also\nText manipulations\ninit(CTTextAlignment)\nConverts a Core Text alignment constant value to the matching constant value in UIKit."
  },
  {
    "title": "UISearchBar.Style.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/style/default",
    "html": "Discussion\n\nDefaults to UISearchBar.Style.prominent."
  },
  {
    "title": "currentLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622190-currentlayout",
    "html": "Discussion\n\nThis object provides the layout attributes representing the initial position of items in the collection view. If you ultimately cancel the transition, the collection view animates its items back to the positions provided by this object.\n\nSee Also\nAccessing the layout objects\nvar nextLayout: UICollectionViewLayout\nThe collection view’s new layout object."
  },
  {
    "title": "drawAtPoint: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624132-drawatpoint",
    "html": "Parameters\npoint\n\nThe point at which to draw the top-left corner of the image.\n\nDiscussion\n\nThis method draws the entire image in the current graphics context, respecting the image’s orientation setting. In the default coordinate system, images are situated down and to the right of the specified point. This method respects any transforms applied to the current graphics context, however.\n\nThis method draws the image at full opacity using the kCGBlendModeNormal blend mode.\n\nSee Also\nDrawing images\n- drawAtPoint:blendMode:alpha:\nDraws the entire image at the specified point using the custom compositing options.\n- drawInRect:\nDraws the entire image in the specified rectangle, scaling it as necessary to fit.\n- drawInRect:blendMode:alpha:\nDraws the entire image in the specified rectangle using the specified compositing options.\n- drawAsPatternInRect:\nDraws a tiled Quartz pattern using the receiver’s contents as the tile pattern."
  },
  {
    "title": "drawAtPoint:blendMode:alpha: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624095-drawatpoint",
    "html": "Parameters\npoint\n\nThe point at which to draw the top-left corner of the image.\n\nblendMode\n\nThe blend mode to use when compositing the image.\n\nalpha\n\nThe desired opacity of the image, specified as a value between 0.0 and 1.0. A value of 0.0 renders the image totally transparent while 1.0 renders it fully opaque. Values larger than 1.0 are interpreted as 1.0.\n\nDiscussion\n\nThis method draws the entire image in the current graphics context, respecting the image’s orientation setting. In the default coordinate system, images are situated down and to the right of the specified point. This method respects any transforms applied to the current graphics context, however.\n\nSee Also\nDrawing images\n- drawAtPoint:\nDraws the image at the specified point in the current context.\n- drawInRect:\nDraws the entire image in the specified rectangle, scaling it as necessary to fit.\n- drawInRect:blendMode:alpha:\nDraws the entire image in the specified rectangle using the specified compositing options.\n- drawAsPatternInRect:\nDraws a tiled Quartz pattern using the receiver’s contents as the tile pattern."
  },
  {
    "title": "init(image:style:target:action:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617163-init",
    "html": "Parameters\nimage\n\nThe item’s image. If nil, an image doesn’t appear.\n\nThe images displayed on the bar derive from this image. If this image is too large to fit on the bar, it’s scaled to fit. Typically, the size of a toolbar and navigation bar image is 20 x 20 points. The system uses the alpha values in the source image to create the images, ignoring opaque values.\n\nstyle\n\nThe style of the item. For possible values, see UIBarButtonItem.Style.\n\ntarget\n\nThe object that receives the action message.\n\naction\n\nThe action to send to target when a person selects this item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating items of a specific style\ninit(title: String?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified title, style, target, and action.\ninit(image: UIImage?, landscapeImagePhone: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified images, style, target, and action.\nRelated Documentation\ninit(barButtonSystemItem: UIBarButtonItem.SystemItem, target: Any?, action: Selector?)\nCreates an item using the specified system item, target, and action."
  },
  {
    "title": "init(title:style:target:action:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617148-init",
    "html": "Parameters\ntitle\n\nThe item’s title. If nil, a title doesn’t appear.\n\nstyle\n\nThe style of the item. For possible values, see UIBarButtonItem.Style.\n\ntarget\n\nThe object that receives the action message.\n\naction\n\nThe action to send to target when a person selects this item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating items of a specific style\ninit(image: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified image, style, target, and action.\ninit(image: UIImage?, landscapeImagePhone: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified images, style, target, and action.\nRelated Documentation\ninit(barButtonSystemItem: UIBarButtonItem.SystemItem, target: Any?, action: Selector?)\nCreates an item using the specified system item, target, and action."
  },
  {
    "title": "drawAsPatternInRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624144-drawaspatterninrect",
    "html": "Parameters\nrect\n\nThe rectangle (in the coordinate system of the graphics context) in which to draw the image.\n\nDiscussion\n\nThis method uses a Quartz pattern to tile the image in the specified rectangle. The image is tiled with no gaps and the fill color is ignored. In the default coordinate system, the image tiles are situated down and to the right of the origin of the specified rectangle. This method respects any transforms applied to the current graphics context, however.\n\nSee Also\nDrawing images\n- drawAtPoint:\nDraws the image at the specified point in the current context.\n- drawAtPoint:blendMode:alpha:\nDraws the entire image at the specified point using the custom compositing options.\n- drawInRect:\nDraws the entire image in the specified rectangle, scaling it as necessary to fit.\n- drawInRect:blendMode:alpha:\nDraws the entire image in the specified rectangle using the specified compositing options."
  },
  {
    "title": "UIFontDescriptorCharacterSetAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorcharactersetattribute",
    "html": "Discussion\n\nThe value is an NSCharacterSet instance that represents the set of Unicode characters that the font covers. The font supplies the default value."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipreviewactionitem/1621352-title",
    "html": "Required\n\nDiscussion\n\nThe system displays the title as an option within a quick action sheet, below a peek and visible when the user swipes upward on the peek."
  },
  {
    "title": "startingItemNumber | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/1528597-startingitemnumber",
    "html": "Parameters\nitemNum\n\nThe item number.\n\nDiscussion\n\nThe default value is 1. This value will be used only for ordered lists, and ignored in other cases."
  },
  {
    "title": "NSTextList.MarkerFormat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/markerformat",
    "html": "Overview\n\nSelect a marker symbol to apply to your list elements in your text list, then set it in markerFormat. Or, specify a marker symbol when you create a text list with init(markerFormat:options:) or init(markerFormat:options:startingItemNumber:).\n\nTopics\nSelecting a marker format\nstatic let box: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let check: NSTextList.MarkerFormat\nThe value that represents a checkmark-shaped marker that you can apply to a text list item.\nstatic let circle: NSTextList.MarkerFormat\nThe value that represents a circle-shaped marker that you can apply to a text list item.\nstatic let decimal: NSTextList.MarkerFormat\nThe value that represents a decimal annotation marker that you can apply to a text list item.\nstatic let diamond: NSTextList.MarkerFormat\nThe value that represents a diamond-shaped marker that you can apply to a text list item.\nstatic let disc: NSTextList.MarkerFormat\nThe value that represents a disc-shaped marker that you can apply to a text list item.\nstatic let hyphen: NSTextList.MarkerFormat\nThe value that represents a hyphen-shaped marker that you can apply to a text list item.\nstatic let lowercaseAlpha: NSTextList.MarkerFormat\nThe value that represents a lowercase localized alphabetical marker you that can apply to a text list item.\nstatic let lowercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents a lowercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let lowercaseLatin: NSTextList.MarkerFormat\nThe value that represents a lowercase Latin alphabetical marker that you can apply to a text list item.\nstatic let lowercaseRoman: NSTextList.MarkerFormat\nThe value that represents a lowercase Roman numeral marker that you can apply to a text list item.\nstatic let octal: NSTextList.MarkerFormat\nThe value that represents an octal (base 8) numerical marker that you can apply to a text list item.\nstatic let square: NSTextList.MarkerFormat\nThe value that represents a square-shaped marker that you can apply to a text list item.\nstatic let uppercaseAlpha: NSTextList.MarkerFormat\nThe value that represents an uppercase localized alphabetical marker that you can apply to a text list item.\nstatic let uppercaseHexadecimal: NSTextList.MarkerFormat\nThe value that represents an uppercase hexadecimal (base 16) numerical marker that you can apply to a text list item.\nstatic let uppercaseLatin: NSTextList.MarkerFormat\nThe value that represents an uppercase Latin alphabetical marker that you can apply to a text list item.\nstatic let uppercaseRoman: NSTextList.MarkerFormat\nThe value that represents an uppercase Roman numeral marker that you can apply to a text list item.\nInitializing a marker format\ninit(String)\nCreates a new marker that you can apply to an item in a text list with the raw value you provide.\ninit(rawValue: String)\nCreates a new marker that you can apply to an item in a text list using the string you provide.\nRelationships\nConforms To\nEquatable\nHashable\nRawRepresentable\nSendable\nSee Also\nWorking with markers\nvar markerFormat: NSTextList.MarkerFormat\nReturns the marker format string used by the receiver.\nfunc marker(forItemNumber: Int) -> String\nReturns the computed value for a specific ordinal position in the list."
  },
  {
    "title": "NSTextList.Options | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/options",
    "html": "Topics\nOptions\nstatic var prependEnclosingMarker: NSTextList.Options\nSpecifies that a nested list should include the marker for its enclosing superlist before its own marker.\nInitializers\ninit(rawValue: UInt)\nReturns a new set of text list options using the raw value you specify.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nGetting list options\nvar isOrdered: Bool\nvar listOptions: NSTextList.Options\nReturns the list options mask value of the receiver."
  },
  {
    "title": "isOrdered | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/4018407-isordered",
    "html": "See Also\nGetting list options\nvar listOptions: NSTextList.Options\nReturns the list options mask value of the receiver.\nstruct NSTextList.Options\nValues that available options for text list items."
  },
  {
    "title": "UIFontDescriptorFixedAdvanceAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorfixedadvanceattribute",
    "html": "Discussion\n\nThe value is an NSNumber instance that contains a float value. This float value overrides the glyph advancement that the font specifies. The default value is 0.0."
  },
  {
    "title": "adjustsLetterSpacingToFitWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1620535-adjustsletterspacingtofitwidth",
    "html": "Deprecated\n\nHand tune instead by using NSKernAttributeName to affect tracking.\n\nDiscussion\n\nWhen this property is YES, the label may alter the letter spacing of the text to make that text fit better within the label’s bounds. The label applies letter spacing to the text regardless of the current line break mode. The default value of this property is NO.\n\nIf this property’s value is YES, the label to ignore values value returned by the tighteningFactorForTruncation method of any NSParagraphStyle objects associated with the label text.\n\nImportant\n\nIf this property’s value is YES, it’s a programmer error to set the lineBreakMode property to a value that causes text to wrap to another line.\n\nSee Also\nSizing the label’s text\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the label reduces the text’s font size to fit the title string into the label’s bounding rectangle.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the label tightens text before truncating.\nbaselineAdjustment\nAn option that controls whether the text’s baseline remains fixed when text needs to shrink to fit in the label.\nminimumScaleFactor\nThe minimum scale factor for the label’s text.\nnumberOfLines\nThe maximum number of lines for rendering text.\nsizingRule\nThe typographic bounds-sizing behavior that handles text with fonts that contain oversize characters.\n\nRequired\n\nminimumFontSize\nThe size of the smallest permissible font when drawing the label’s text.\nDeprecated"
  },
  {
    "title": "UIFontDescriptorFamilyAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorfamilyattribute",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the font family."
  },
  {
    "title": "UIFontDescriptorMatrixAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptormatrixattribute",
    "html": "Discussion\n\nThe value is a CGAffineTransform instance that specifies the font’s transformation matrix. The default value is the identity matrix.\n\nBecause the system applies the matrix to the text matrix at rendering time, translation isn’t available. The rendering engine determines the translation independently."
  },
  {
    "title": "UIFontDescriptorFaceAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorfaceattribute",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the font face."
  },
  {
    "title": "UIFontDescriptorNameAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptornameattribute",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the PostScript name of the font."
  },
  {
    "title": "availableMediaTypesForSourceType: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619169-availablemediatypesforsourcetype",
    "html": "Parameters\nsourceType\n\nThe source to use to pick an image.\n\nReturn Value\n\nAn array whose elements identify the available media types for the specified source type.\n\nDiscussion\n\nSome iOS devices support video recording. Use this method, along with the isSourceTypeAvailable: method, to determine if video recording is available on a device. The availability of video recording is indicated by the presence of the kUTTypeMovie media type for the UIImagePickerControllerSourceTypeCamera source type.\n\nSee Also\nSetting the picker source\n+ isSourceTypeAvailable:\nQueries whether the device supports picking media using the specified source type.\nsourceType\nThe type of picker interface to be displayed by the controller.\nUIImagePickerControllerSourceType\nConstants that describe the source to use when picking an image or when determining available media types.\nRelated Documentation\nCamera Programming Topics for iOS"
  },
  {
    "title": "dismissViewControllerAnimated:completion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621505-dismissviewcontrolleranimated",
    "html": "Parameters\nflag\n\nPass YES to animate the transition.\n\ncompletion\n\nThe block to execute after the view controller is dismissed. This block has no return value and takes no parameters. You may specify nil for this parameter.\n\nDiscussion\n\nThe presenting view controller is responsible for dismissing the view controller it presented. If you call this method on the presented view controller itself, UIKit asks the presenting view controller to handle the dismissal.\n\nIf you present several view controllers in succession, thus building a stack of presented view controllers, calling this method on a view controller lower in the stack dismisses its immediate child view controller and all view controllers above that child on the stack. When this happens, only the top-most view is dismissed in an animated fashion; any intermediate view controllers are simply removed from the stack. The top-most view is dismissed using its modal transition style, which may differ from the styles used by other view controllers lower in the stack.\n\nIf you want to retain a reference to the view controller's presented view controller, get the value in the presentedViewController property before calling this method.\n\nThe completion handler is called after the viewDidDisappear: method is called on the presented view controller.\n\nSee Also\nPresenting a view controller\n- showViewController:sender:\nPresents a view controller in a primary context.\n- showDetailViewController:sender:\nPresents a view controller in a secondary (or detail) context.\n- presentViewController:animated:completion:\nPresents a view controller modally.\nmodalPresentationStyle\nThe presentation style for modal view controllers.\nUIModalPresentationStyle\nModal presentation styles available when presenting view controllers.\nmodalTransitionStyle\nThe transition style to use when presenting the view controller.\nUIModalTransitionStyle\nTransition styles available when presenting view controllers.\nmodalInPresentation\nA Boolean value indicating whether the view controller enforces a modal behavior.\ndefinesPresentationContext\nA Boolean value that indicates whether this view controller's view is covered when the view controller or one of its descendants presents a view controller.\nprovidesPresentationContextTransitionStyle\nA Boolean value that indicates whether the view controller specifies the transition style for view controllers it presents.\ndisablesAutomaticKeyboardDismissal\nReturns a Boolean indicating whether the current input view is dismissed automatically when changing controls.\nUIViewControllerShowDetailTargetDidChangeNotification\nPosted when a split view controller is expanded or collapsed."
  },
  {
    "title": "viewControllerForUnwindSegueAction:fromViewController:withSender: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621448-viewcontrollerforunwindsegueacti",
    "html": "Deprecated\n\nOverride the allowedChildViewControllersForUnwindingFromSource: method instead.\n\nParameters\naction\n\nThe action that triggered the unwind action.\n\nfromViewController\n\nThe view controller that is the source of the unwinding action.\n\nsender\n\nThe object that initiated the action.\n\nReturn Value\n\nThe view controller that wants to handle the unwind action.\n\nDiscussion\n\nA custom container view controller should override this method and use it to search its children for a view controller to handle the unwind action. It does this by invoking the canPerformUnwindSegueAction:fromViewController:withSender: method on each child. If a view controller wants to handle the action, your method should return it. If none of the container's children want to handle the unwind action, invoke the super’s implementation and return the result of that method.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "startsMediaSession | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1620173-startsmediasession",
    "html": "Discussion\n\nUse this trait to silence the audio output of an assistive app, such as VoiceOver, during a media session that you don't want to interrupt. For example, you might use this trait to silence VoiceOver speech while the user is recording audio."
  },
  {
    "title": "supportsZoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/4162001-supportszoom",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that supports zoom functionality, like letting a person perform expand and pinch gestures to zoom in and out. If you assign this trait to an element, you also need to implement accessibilityZoomIn(at:) and accessibilityZoomOut(at:).\n\nFor example, the following code shows how to assign this trait to a custom view that allows zooming in to an image:\n\nclass ViewController: UIViewController {\n    let zoomView = ZoomingImageView(frame: .zero)\n    let imageView = UIImageView(image: UIImage(named: \"tree\"))\n\n\n    override func viewDidLoad() {\n        super.viewDidLoad()\n\n\n        zoomView.isAccessibilityElement = true\n        zoomView.accessibilityLabel = \"Zooming Image View\"\n        zoomView.accessibilityTraits = [.image, .supportsZoom]\n\n\n        zoomView.addSubview(imageView)\n        view.addSubview(zoomView)\n    }\n}\n\n\nThis custom view implements the required methods to modify the zoom scale and post an announcement about the new zoom scale.\n\nclass ZoomingImageView: UIScrollView {\n    override func accessibilityZoomIn(at point: CGPoint) -> Bool {\n        zoomScale += 1.0\n\n\n        let zoomQuantity = \"\\(Int(zoomScale)) x zoom\"\n        UIAccessibility.post(notification: .announcement, argument: zoomQuantity)\n        return true\n    }\n\n\n    override func accessibilityZoomOut(at point: CGPoint) -> Bool {\n        zoomScale -= 1.0\n\n\n        let zoomQuantity = \"\\(Int(zoomScale)) x zoom\"\n        UIAccessibility.post(notification: .announcement, argument: zoomQuantity)\n        return true\n    }\n}\n\n\nRelated sessions from WWDC23\n\nSession 10036: Build accessible apps with SwiftUI and UIKit"
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/2993329-init",
    "html": "Discussion\n\nThe raw value maps to one of the UIAccessibilityTraits enumeration constants.\n\nRelationships\nFrom Protocol\nOptionSet"
  },
  {
    "title": "summaryElement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1620185-summaryelement",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that provides a summary of current conditions, settings, or state, such as the current temperature in the Weather app."
  },
  {
    "title": "UIAccessibilityTraits.ArrayLiteralElement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/arrayliteralelement",
    "html": "See Also\nCustom array types\ntypealias UIAccessibilityTraits.Element\nThe element type of the option set."
  },
  {
    "title": "UIAccessibilityTraits.Element | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/element",
    "html": "See Also\nCustom array types\ntypealias UIAccessibilityTraits.ArrayLiteralElement\nThe type of the elements of an array literal."
  },
  {
    "title": "tabBar | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1648592-tabbar",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that represents an ordered list of tabs.\n\nIf an accessibility element has this trait, return false for isAccessibilityElement."
  },
  {
    "title": "toggleButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/4200074-togglebutton",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that represents a button that toggles a value on, off, or mixed status. VoiceOver will describe the options offered by the toggle button.\n\nNote\n\nIf you want VoiceOver to describe the toggle as a switch button, combine the toggle trait with a button trait."
  },
  {
    "title": "scopeBarBackgroundImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624317-scopebarbackgroundimage",
    "html": "Discussion\n\nImages that are 1 point wide or stretchable images are stretched, otherwise the image is tiled.\n\nSee Also\nCustomizing the scope bar appearance\nfunc scopeBarButtonBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the background image for the scope bar button in a given state.\nfunc setScopeBarButtonBackgroundImage(UIImage?, for: UIControl.State)\nSets the background image for the scope bar button in a given state.\nfunc scopeBarButtonDividerImage(forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State) -> UIImage?\nReturns the divider image to use for a given combination of left and right segment states.\nfunc setScopeBarButtonDividerImage(UIImage?, forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State)\nSets the divider image to use for a given combination of left and right segment states.\nfunc scopeBarButtonTitleTextAttributes(for: UIControl.State) -> [NSAttributedString.Key : Any]?\nReturns the text attributes for the search bar’s button’s title string for a given state.\nfunc setScopeBarButtonTitleTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)\nSets the text attributes for the search bar’ button’s title string for a given state.\nRelated Documentation\nvar backgroundImage: UIImage?\nThe background image for the search bar."
  },
  {
    "title": "silentOnTouch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/directtouchoptions/4162000-silentontouch",
    "html": "Discussion\n\nYou may want a user interface element that, when a person interacts with it, provides audio feedback that would conflict with VoiceOver. In a music creation app, for example, you can designate the keyboard as “silent on touch,” so that VoiceOver doesn’t compete with the keyboard sounds."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1620174-image",
    "html": "Discussion\n\nYou can combine this trait with the button or link traits."
  },
  {
    "title": "adjustsFontForContentSizeCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601014-adjustsfontforcontentsizecategor",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "popoverContentSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipopovercontroller/1624667-popovercontentsize",
    "html": "Discussion\n\nThis property represents the size of the content view that is managed by the view controller in the contentViewController property. The initial value of this property is set to value in the view controller’s contentSizeForViewInPopover property. Changing the value of this property overrides the default value of the current view controller. The overridden value persists until you assign a new content view controller to the receiver. Thus, if you want to keep your overridden value, you must reassign it after changing the content view controller.\n\nWhen changing the value of this property, the width value you specify must be at least 320 points and no more than 600 points. There are no restrictions on the height value. However, both the width and height values you specify may be adjusted to ensure the popup fits on screen and is not covered by the keyboard. If you change the value of this property while the popover is visible, the size change is animated.\n\nSee Also\nConfiguring the popover content\ncontentViewController\nThe view controller responsible for the content portion of the popover.\nDeprecated\n- setContentViewController:animated:\nSets the view controller responsible for the content portion of the popover.\nDeprecated\n- setPopoverContentSize:animated:\nChanges the size of the popover’s content view.\nDeprecated\npassthroughViews\nAn array of views that the user can interact with while the popover is visible.\nDeprecated"
  },
  {
    "title": "clipsToBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1807321-clipstobounds",
    "html": "Overview\n\nUILabel inherits this property from the UIView parent class. This class changes the default value of this property to YES.\n\nSee Also\nAccessing additional attributes\nuserInteractionEnabled\nA Boolean value that determines whether the system ignores and removes user events for this label from the event queue.\nRelated Documentation\nclipsToBounds\nA Boolean value that determines whether subviews are confined to the bounds of the view."
  },
  {
    "title": "userInteractionEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1620543-userinteractionenabled",
    "html": "Discussion\n\nUILabel inherits this property from the UIView parent class. This class changes the default value of this property to NO.\n\nSee Also\nAccessing additional attributes\nclipsToBounds\nA Boolean value that determines whether subviews are confined to the bounds of the view.\nRelated Documentation\nuserInteractionEnabled\nA Boolean value that determines whether user events are ignored and removed from the event queue."
  },
  {
    "title": "drawTextInRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1620527-drawtextinrect",
    "html": "Parameters\nrect\n\nThe rectangle in which to draw the text.\n\nDiscussion\n\nDon’t call this method directly. Override this method if you want to modify the default drawing behavior for the label’s text.\n\nBy the time the system calls this method, the current graphics context is already configured with the default environment and text color for drawing. In your overridden method, you can configure the current context further and then invoke super to do the actual drawing, or you can do the drawing yourself. If you do render the text yourself, don’t invoke super.\n\nSee Also\nDrawing and positioning overrides\n- textRectForBounds:limitedToNumberOfLines:\nReturns the drawing rectangle for the label’s text."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1620526-highlighted",
    "html": "Discussion\n\nSetting this property causes the label to redraw with the appropriate highlight state. A subclass implementing a text button might set this property to YES when the user presses the button and set it to NO at other times. In order for the label to draw the highlight, the highlightedTextColor property must contain a non-nil value.\n\nThe default value of this property is NO.\n\nSee Also\nManaging highlight values\nhighlightedTextColor\nThe highlight color for the label’s text."
  },
  {
    "title": "textRectForBounds:limitedToNumberOfLines: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1620545-textrectforbounds",
    "html": "Parameters\nbounds\n\nThe bounding rectangle of the label.\n\nnumberOfLines\n\nThe maximum number of lines to use for the label. The value 0 indicates the label has no maximum number of lines and the rectangle should encompass all of the text.\n\nReturn Value\n\nThe computed drawing rectangle for the label’s text.\n\nDiscussion\n\nOverride this method in subclasses that require changes in the label’s bounding rectangle to occur before the system performs other text layout calculations. Use the value in the numberOfLines parameter to limit the height of the returned rectangle to the specified number of lines of text.\n\nThe system may call this method if there was a prior call to the sizeToFit or sizeThatFits: method. Note that labels in UITableViewCell objects have sizes based on cell dimensions, and not on a requested size.\n\nSee Also\nDrawing and positioning overrides\n- drawTextInRect:\nDraws the label’s text, or its shadow, in the specified rectangle."
  },
  {
    "title": "init(markerFormat:options:startingItemNumber:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/4018406-init",
    "html": "Parameters\nmarkerFormat\n\nOne of the possible NSTextList.MarkerFormat formats.\n\noptions\n\nOne or more of the possible NSTextList.Options options.\n\nstartingItemNumber\n\nAn integer that represents the stating item number.\n\nSee Also\nCreating a text list\ninit?(coder: NSCoder)\nInitializes and returns a newly allocated text list item.\ninit(markerFormat: NSTextList.MarkerFormat, options: Int)\nReturns an initialized text list."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/4018405-init",
    "html": "Parameters\ncoder\n\nAn instance of NSCoder.\n\nSee Also\nCreating a text list\ninit(markerFormat: NSTextList.MarkerFormat, options: Int)\nReturns an initialized text list.\ninit(markerFormat: NSTextList.MarkerFormat, options: NSTextList.Options, startingItemNumber: Int)\nReturns a new text list with the format, options, and starting item number you provide."
  },
  {
    "title": "markerFormat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/1533865-markerformat",
    "html": "Return Value\n\nThe marker format string used by the receiver.\n\nSee Also\nWorking with markers\nstruct NSTextList.MarkerFormat\nConstants that describe marker symbols you can apply to list elements in text lists.\nfunc marker(forItemNumber: Int) -> String\nReturns the computed value for a specific ordinal position in the list.\nRelated Documentation\ninit(markerFormat: NSTextList.MarkerFormat, options: Int)\nReturns an initialized text list."
  },
  {
    "title": "UITextInputCurrentInputModeDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextinputcurrentinputmodedidchangenotification",
    "html": "Discussion\n\nThe posting object is a UITextInputMode instance."
  },
  {
    "title": "init(markerFormat:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/1526123-init",
    "html": "Parameters\nformat\n\nThe marker format for the text list.\n\nmask\n\nThe marker options for the text list. Values for mask are listed in Constants.\n\nReturn Value\n\nAn initialized text list.\n\nDiscussion\n\nThe marker format is specified as a constant string, except for a numbering specifier, which takes the form {keyword}. The currently supported values for keyword include:\n\nbox\n\ncheck\n\ncircle\n\ndiamond\n\ndisc\n\nhyphen\n\nsquare\n\nlower-hexadecimal\n\nupper-hexadecimal\n\noctal\n\nlower-alpha or lower-latin\n\nupper-alpha or upper-latin\n\nlower-roman\n\nupper-roman\n\ndecimal\n\nThus, for example, @\"({decimal})\" would specify the format for a list numbered (1), (2), (3), and so on, and @\"{upper-roman}\" would specify the format for a list numbered I, II, III, IV, and so on. (All of these keywords are included in the Cascading Style Sheets level 3 specification.)\n\nSee Also\nCreating a text list\ninit?(coder: NSCoder)\nInitializes and returns a newly allocated text list item.\ninit(markerFormat: NSTextList.MarkerFormat, options: NSTextList.Options, startingItemNumber: Int)\nReturns a new text list with the format, options, and starting item number you provide.\nRelated Documentation\nvar markerFormat: NSTextList.MarkerFormat\nReturns the marker format string used by the receiver.\nvar listOptions: NSTextList.Options\nReturns the list options mask value of the receiver."
  },
  {
    "title": "marker(forItemNumber:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist/1532739-marker",
    "html": "Parameters\nitemNum\n\nThe ordinal position in the list whose computed marker value is desired.\n\nReturn Value\n\nThe computed maker value for itemNum.\n\nSee Also\nWorking with markers\nvar markerFormat: NSTextList.MarkerFormat\nReturns the marker format string used by the receiver.\nstruct NSTextList.MarkerFormat\nConstants that describe marker symbols you can apply to list elements in text lists."
  },
  {
    "title": "UITabBarItemAppearance.Style.compactInline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/style/compactinline",
    "html": "See Also\nItem layout\ncase stacked\nA vertically stacked icon and title.\ncase inline\nA side-by-side layout of the icon and title, suitable for use in regular-width environments."
  },
  {
    "title": "UITableView.SelfSizingInvalidation.enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/selfsizinginvalidation/enabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize() on a self-sizing cell or its contentView causes the cell to resize if necessary."
  },
  {
    "title": "navigationBar | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/availability/2874068-navigationbar",
    "html": "Discussion\n\nThe system enables this action as soon as the user makes a valid selection, as determined by the supportedContentTypes and supportsMultipleItems properties.\n\nNote\n\nIn Mac apps built with Mac Catalyst, the system shows navigationBar actions as menu actions."
  },
  {
    "title": "containerTraitCollection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetentresolutioncontext/3975908-containertraitcollection",
    "html": "Required\n\nDiscussion\n\nThe value of this property is the same as the window’s traitCollection, and doesn’t include overrides from the sheet’s overrideTraitCollection.\n\nSee Also\nAccessing the properties of the context\nvar maximumDetentValue: CGFloat\nThe maximum value of a detent.\n\nRequired"
  },
  {
    "title": "init(title:image:primaryAction:menu:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600776-init",
    "html": "Parameters\ntitle\n\nThe item’s title.\n\nimage\n\nThe item’s image.\n\nThe images displayed on the bar derive from this image. If this image is too large to fit on the bar, it’s scaled to fit. Typically, the size of a toolbar and navigation bar image is 20 x 20 points. The system uses the alpha values in the source image to create the images, ignoring opaque values.\n\nprimaryAction\n\nA UIAction to associate with the item, which the item uses to configure its title and image. If you specify primaryAction, it takes precedence over title and image.\n\nmenu\n\nThe menu to present. The context menu displays in response to a person tapping the item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating items\ninit(title: String?, image: UIImage?, target: AnyObject?, action: Selector?, menu: UIMenu?)\nCreates a plain-style item using the specified title, image, target, action, and context menu.\ninit()\nInitializes the item to its default state.\ninit?(coder: NSCoder)\nCreates an item from data in an unarchiver."
  },
  {
    "title": "init(title:image:target:action:menu:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4063655-init",
    "html": "Parameters\ntitle\n\nThe item’s title. If nil, a title doesn’t appear.\n\nimage\n\nThe item’s image. If nil, an image doesn’t appear.\n\nThe images displayed on the bar derive from this image. If this image is too large to fit on the bar, it’s scaled to fit. Typically, the size of a toolbar and navigation bar image is 20 x 20 points. The system uses the alpha values in the source image to create the images, ignoring opaque values.\n\ntarget\n\nThe object that receives the action message.\n\naction\n\nThe action to send to target when a person selects this item.\n\nmenu\n\nThe menu to present. The context menu displays in response to a person tapping the item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating items\ninit(title: String?, image: UIImage?, primaryAction: UIAction?, menu: UIMenu?)\nCreates a plain-style item using the specified title, image, primary action, and context menu.\ninit()\nInitializes the item to its default state.\ninit?(coder: NSCoder)\nCreates an item from data in an unarchiver."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617111-init",
    "html": "Parameters\ncoder\n\nAn unarchiver object.\n\nSee Also\nCreating items\ninit(title: String?, image: UIImage?, primaryAction: UIAction?, menu: UIMenu?)\nCreates a plain-style item using the specified title, image, primary action, and context menu.\ninit(title: String?, image: UIImage?, target: AnyObject?, action: Selector?, menu: UIMenu?)\nCreates a plain-style item using the specified title, image, target, action, and context menu.\ninit()\nInitializes the item to its default state."
  },
  {
    "title": "didRotateFromInterfaceOrientation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621492-didrotatefrominterfaceorientatio",
    "html": "Deprecated\n\nUse viewWillTransitionToSize:withTransitionCoordinator: to make interface-based adjustments.\n\nParameters\nfromInterfaceOrientation\n\nThe old orientation of the user interface. For possible values, see UIInterfaceOrientation.\n\nDiscussion\n\nSubclasses may override this method to perform additional actions immediately after the rotation. For example, you might use this method to reenable view interactions, start media playback again, or turn on expensive drawing or live updates. By the time this method is called, the interfaceOrientation property is already set to the new orientation. Your implementation of this method must call super at some point during its execution.\n\nThis method is called regardless of whether your code performs one-step or two-step rotations.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "UIImagePickerController.QualityType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/qualitytype",
    "html": "Overview\n\nThe constants in this enumeration are for use as values of the videoQuality property.\n\nThe video quality setting applies to transcoding as well as to recording. Specifically, if the video quality setting is lower than the video quality of an existing movie, displaying that movie in the picker results in transcoding the movie to the lower quality.\n\nTopics\nConstants\ncase typeHigh\nIf recording, specifies that you want to use the highest-quality video recording supported for the active camera on the device.\ncase type640x480\nIf recording, specifies that you want to use VGA-quality video recording (pixel dimensions of 640x480).\ncase typeMedium\nIf recording, specifies that you want to use medium-quality video recording.\ncase typeLow\nIf recording, specifies that you want to use low-quality video recording.\ncase typeIFrame1280x720\nIf recording, specifies that you want to use 1280x720 iFrame format.\ncase typeIFrame960x540\nIf recording, specifies that you want to use 960x540 iFrame format.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the video capture options\nvar videoQuality: UIImagePickerController.QualityType\nThe video recording and transcoding quality.\nvar videoMaximumDuration: TimeInterval\nThe maximum duration, in seconds, for a video recording."
  },
  {
    "title": "registerForPreviewingWithDelegate:sourceView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621463-registerforpreviewingwithdelegat",
    "html": "Deprecated\n\nUse UIContextMenuInteraction instead.\n\nParameters\ndelegate\n\nThe delegate object mediates the presentation of views from the preview (peek) view controller and the commit (pop) view controller. In practice, these two are typically the same view controller. The delegate performs this mediation through your implementation of the methods of the UIViewControllerPreviewingDelegate protocol.\n\nsourceView\n\nThe view, in the view hierarchy of the receiver of this method call, that invokes a preview when pressed by the user.\n\nWhen lightly pressed, the source view remains visually sharp while surrounding content blurs. When pressed more deeply, the system calls the previewingContext:viewControllerForLocation: method in your delegate object, which presents the preview (peek) view from another view controller.\n\nReturn Value\n\nA context object for managing the preview. This object conforms to the UIViewControllerPreviewing protocol.\n\nDiscussion\n\nA preview, or peek in end-user terminology, provides additional content related to the view the user pressed (that is, related to the sourceView view).\n\nCalling this method does three things:\n\nRegisters the previewing view controller (the one that receives this method call) to participate with 3D Touch preview and commit\n\nDesignates the source view, from the receiver’s view hierarchy, as the view to respond to a forceful touch\n\nDesignates a delegate object for mediating the presentation of the preview (peek) and commit (pop) views as a user requests them in turn by pressing more deeply\n\nYou can designate more than one source view for a single registered view controller, but you cannot designate a single view as a source view more than once.\n\nThe lifetime of this method’s returned context object is managed by the system. If you need to explicitly unregister a view controller, pass its context object to the unregisterForPreviewingWithContext: method. If you do not unregister a view controller, the system automatically unregisters it when the view controller is deallocated.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "didAnimateFirstHalfOfRotationToInterfaceOrientation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621496-didanimatefirsthalfofrotationtoi",
    "html": "Deprecated\n\nUse viewWillTransitionToSize:withTransitionCoordinator: to make interface-based adjustments.\n\nParameters\ntoInterfaceOrientation\n\nThe state of the app's user interface orientation after the rotation. The possible values are described in the UIInterfaceOrientation enum.\n\nDiscussion\n\nThis method is called during two-step rotation animations only. Subclasses can override this method and use it to adjust their views between the first and second half of the animations. This method is called outside of any animation transactions and while any header or footer views are offscreen.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621393-automaticallyforwardappearancean",
    "html": "Deprecated\n\nManually forward calls to the viewWillTransitionToSize:withTransitionCoordinator: method as needed.\n\nReturn Value\n\nA Boolean value that indicates whether appearance and rotation methods are forwarded.\n\nDiscussion\n\nThis method is called to determine whether to automatically forward containment callbacks to the child view controllers.\n\nThe default implementation returns YES. Subclasses of the UIViewController class that implement containment logic may override this method to control how these methods are forwarded. If you override this method and return NO, you are responsible for forwarding the following methods to child view controllers at the appropriate times:\n\nviewWillAppear:\n\nviewDidAppear:\n\nviewWillDisappear:\n\nviewDidDisappear:\n\nwillRotateToInterfaceOrientation:duration:\n\nwillAnimateRotationToInterfaceOrientation:duration:\n\ndidRotateFromInterfaceOrientation:\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "init(image:landscapeImagePhone:style:target:action:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617118-init",
    "html": "Parameters\nimage\n\nThe item’s image. If nil, an image doesn’t appear.\n\nlandscapeImagePhone\n\nThe image to use for the item in landscape bars in the UIUserInterfaceIdiom.phone idiom.\n\nstyle\n\nThe style of the item. For possible values, see UIBarButtonItem.Style.\n\ntarget\n\nThe object that receives the action message.\n\naction\n\nThe action to send to target when a person selects this item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating items of a specific style\ninit(title: String?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified title, style, target, and action.\ninit(image: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified image, style, target, and action."
  },
  {
    "title": "allowsImageEditing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619115-allowsimageediting",
    "html": "Deprecated\n\nUse allowsEditing instead.\n\nDiscussion\n\nIf you allow the user to edit images, the delegate may receive a dictionary with information about the edits that were made.\n\nThis property is set to NO by default.\n\nSee Also\nConfiguring the picker\nmediaTypes\nAn array that indicates the media types to access by the media picker controller.\nallowsEditing\nA Boolean value that indicates whether the user is allowed to edit a selected still image or movie."
  },
  {
    "title": "selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1620197-selected",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that represents a selected UI element, such as a selected table row or a selected segment in a segmented control."
  },
  {
    "title": "allowsDirectInteraction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1620172-allowsdirectinteraction",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that represents an object that users interact with directly, such as a view that represents a piano keyboard."
  },
  {
    "title": "updatesFrequently | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits/1620187-updatesfrequently",
    "html": "Discussion\n\nUse this trait to characterize an accessibility element that updates its label or value too frequently to send update notifications. Include this trait when you want an assistive app to avoid handling continual notifications and, instead, poll for changes when it needs updated information. For example, you might use this trait to characterize the readout of a stopwatch."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/detent/identifier/3804474-init",
    "html": "See Also\nCreating a detent identifier\ninit(String)\nCreates a detent identifier."
  },
  {
    "title": "UITableViewDiffableDataSourceReferenceCellProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereferencecellprovider",
    "html": "Parameters\ntableView\n\nThe table view to configure this cell for.\n\nindexPath\n\nThe index path that specifies the location of the cell in the table view.\n\nitemIdentifier\n\nThe identifier of the item for this cell.\n\nReturn Value\n\nA non-nil configured cell object. The cell provider must return a valid cell object to the table view.\n\nSee Also\nCreating a diffable data source\ninit(tableView: UITableView, cellProvider: UITableViewDiffableDataSourceReferenceCellProvider)\nCreates a diffable data source with the specified cell provider, and connects it to the specified table view."
  },
  {
    "title": "allowsDefaultTighteningForTruncation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601017-allowsdefaulttighteningfortrunca",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "applySnapshot(usingReloadData:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3801895-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the table view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the table view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "adjustsFontSizeToFitWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601015-adjustsfontsizetofitwidth",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "segueForUnwindingToViewController:fromViewController:identifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621500-segueforunwindingtoviewcontrolle",
    "html": "Deprecated\n\nUse unwindForSegue:towardsViewController: instead.\n\nParameters\ntoViewController\n\nThe target view controller.\n\nfromViewController\n\nThe view controller initiating the unwind action.\n\nidentifier\n\nAn identifier for the segue.\n\nReturn Value\n\nA segue object for managing the transitions between the two view controllers.\n\nDiscussion\n\nIf you implement a custom container view controller that also uses segue unwinding, you must override this method. In your custom implementation, instantiate and return a segue object that performs whatever animation and other steps that are necessary to unwind the view controllers.\n\nYou do not need to override this method for view controllers that are not containers.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "viewDidUnload | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621383-viewdidunload",
    "html": "Deprecated\n\nViews are no longer purged under low-memory conditions and so this method is never called.\n\nDiscussion\n\nIn iOS 5 and earlier, when a low-memory condition occurred and the current view controller's views were not needed, the system could opt to call this method after the view controller's view had been released. This method was your chance to perform any final cleanup. If your view controller stored separate references to the view or its subviews, you could use this method to release those references. You could also use this method to remove references to any objects that you created to support the view but that are no longer needed now that the view is gone. You would not use this method to release user data or any other information that cannot be easily recreated.\n\nIn iOS 6 and later, clearing references to views and other objects in your view controller is unnecessary.\n\nAt the time this method is called, the view property is nil.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "willAnimateFirstHalfOfRotationToInterfaceOrientation:duration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621469-willanimatefirsthalfofrotationto",
    "html": "Deprecated\n\nUse viewWillTransitionToSize:withTransitionCoordinator: to make interface-based adjustments.\n\nParameters\ntoInterfaceOrientation\n\nThe state of the app's user interface orientation before the rotation. The possible values are described in UIInterfaceOrientation.\n\nduration\n\nThe duration of the first half of the pending rotation, measured in seconds.\n\nDiscussion\n\nThe default implementation of this method does nothing.\n\nThis method is called from within the animation block used to rotate the view and slide the header and footer views out. You can override this method and use it to configure additional animations that should occur during the first half of the view rotation. For example, you could use it to adjust the zoom level of your content, change the scroller position, or modify other animatable properties of your view.\n\nAt the time this method is called, the interfaceOrientation property is still set to the old orientation.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "shouldAutorotateToInterfaceOrientation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621459-shouldautorotatetointerfaceorien",
    "html": "Deprecated\n\nOverride the supportedInterfaceOrientations and preferredInterfaceOrientationForPresentation methods instead.\n\nParameters\ninterfaceOrientation\n\nThe orientation of the app's user interface after the rotation. The possible values are described in UIInterfaceOrientation.\n\nReturn Value\n\nYES if the view controller auto-rotates its view to the specified orientation; otherwise, NO.\n\nDiscussion\n\nBy default, this method returns YES for the UIInterfaceOrientationPortrait orientation only. If your view controller supports additional orientations, override this method and return YES for all orientations it supports.\n\nYour implementation of this method should simply return YES or NO based on the value in the interfaceOrientation parameter. Do not attempt to get the value of the interfaceOrientation property or check the orientation value reported by the UIDevice class. Your view controller is either capable of supporting a given orientation or it is not.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "willAnimateRotationToInterfaceOrientation:duration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621458-willanimaterotationtointerfaceor",
    "html": "Deprecated\n\nUse viewWillTransitionToSize:withTransitionCoordinator: to make interface-based adjustments.\n\nParameters\ninterfaceOrientation\n\nThe new orientation for the user interface. The possible values are described in UIInterfaceOrientation.\n\nduration\n\nThe duration of the pending rotation, measured in seconds.\n\nDiscussion\n\nThis method is called from within the animation block used to rotate the view. You can override this method and use it to configure additional animations that should occur during the view rotation. For example, you could use it to adjust the zoom level of your content, change the scroller position, or modify other animatable properties of your view.\n\nNote\n\nThe animations used to slide the header and footer views in and out of position are performed in separate animation blocks.\n\nBy the time this method is called, the interfaceOrientation property is already set to the new orientation, and the bounds of the view have been changed. Thus, you can perform any additional layout required by your views in this method.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621509-willanimatesecondhalfofrotationf",
    "html": "Deprecated\n\nUse viewWillTransitionToSize:withTransitionCoordinator: to make interface-based adjustments.\n\nParameters\nfromInterfaceOrientation\n\nThe state of the app's user interface orientation before the rotation. The possible values are described in the UIInterfaceOrientation enum.\n\nduration\n\nThe duration of the second half of the pending rotation, measured in seconds.\n\nDiscussion\n\nThe default implementation of this method does nothing.\n\nThis method is called from inside the animation block used to finish the view rotation and slide the header and footer views back into position. You can override this method and use it to configure additional animations that should occur during the second half of the view rotation. For example, you could use it to adjust the zoom level of your content, change the scroller position, or modify other animatable properties of your view.\n\nAt the time this method is invoked, the interfaceOrientation property is set to the new orientation.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "viewWillUnload | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621427-viewwillunload",
    "html": "Deprecated\n\nViews are no longer purged under low-memory conditions and so this method is never called.\n\nDiscussion\n\nIn iOS 5 and earlier, when a low-memory condition occurred and the current view controller's views were not needed, the system could opt to remove those views from memory. This method was called prior to releasing the actual views so you could perform any cleanup prior to the view being deallocated. For example, you could use this method to remove views as observers of notifications or record the state of the views so it can be reestablished when the views are reloaded.\n\nIn iOS 6 and later, clearing references to views is no longer necessary. As a result, any other cleanup related to those views, such as removing them as observers, is also not necessary.\n\nAt the time this method is called, the view property is still valid (it has not yet been set to nil).\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "modalInPopover | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1619312-modalinpopover",
    "html": "Discussion\n\nThe default value of this property is NO. Setting it to YES causes an owning popover controller to disallow interactions outside this view controller while it is displayed. You can use this behavior to ensure that the popover is not dismissed by taps outside the popover controller.\n\nSee Also\nDeprecated properties\nshouldAutorotate\nA Boolean value that indicates whether the view controller’s contents should autorotate.\nDeprecated\npreviewActionItems\nThe quick actions displayed when a user swipes upward on a 3D Touch preview.\nDeprecated\nautomaticallyAdjustsScrollViewInsets\nA Boolean value that indicates whether the view controller should automatically adjust its scroll view insets.\nDeprecated\nbottomLayoutGuide\nIndicates the lowest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\ncontentSizeForViewInPopover\nThe size of the view controller's view while displayed in a popover.\nDeprecated\ninterfaceOrientation\nConvenience property that provides the current orientation of the interface, meaningful only if the view controller is taking up the full screen.\nDeprecated\nmodalViewController\nThe controller for the active presented view'that is, the view that is temporarily displayed on top of the view managed by the receiver.\nDeprecated\nsearchDisplayController\nThe search display controller associated with the view controller.\nDeprecated\ntopLayoutGuide\nIndicates the highest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\nwantsFullScreenLayout\nA Boolean value indicating whether the view should underlap the status bar.\nDeprecated"
  },
  {
    "title": "willRotateToInterfaceOrientation:duration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621376-willrotatetointerfaceorientation",
    "html": "Deprecated\n\nUse viewWillTransitionToSize:withTransitionCoordinator: to make interface-based adjustments.\n\nParameters\ntoInterfaceOrientation\n\nThe new orientation for the user interface. The possible values are described in UIInterfaceOrientation.\n\nduration\n\nThe duration of the pending rotation, measured in seconds.\n\nDiscussion\n\nSubclasses may override this method to perform additional actions immediately prior to the rotation. For example, you might use this method to disable view interactions, stop media playback, or temporarily turn off expensive drawing or live updates. You might also use it to swap the current view for one that reflects the new interface orientation. When this method is called, the interfaceOrientation property still contains the view's original orientation. Your implementation of this method must call super at some point during its execution.\n\nThis method is called regardless of whether your code performs one-step or two-step rotations.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated"
  },
  {
    "title": "wantsFullScreenLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621390-wantsfullscreenlayout",
    "html": "Deprecated\n\nUse edgesForExtendedLayout and extendedLayoutIncludesOpaqueBars instead.\n\nDiscussion\n\nWhen a view controller presents its view, it normally shrinks that view so that its frame does not overlap the device’s status bar. Setting this property to YES causes the view controller to size its view so that it fills the entire screen, including the area under the status bar. (Of course, for this to happen, the window hosting the view controller must itself be sized to fill the entire screen, including the area underneath the status bar.) You would typically set this property to YES in cases where you have a translucent status bar and want your view's content to be visible behind that view.\n\nIf this property is YES, the view is not resized in a way that would cause it to underlap a tab bar but is resized to underlap translucent toolbars. Regardless of the value of this property, navigation controllers always allow views to underlap translucent navigation bars.\n\nThe default value of this property is NO, which causes the view to be laid out so it does not underlap the status bar.\n\nSee Also\nDeprecated properties\nshouldAutorotate\nA Boolean value that indicates whether the view controller’s contents should autorotate.\nDeprecated\npreviewActionItems\nThe quick actions displayed when a user swipes upward on a 3D Touch preview.\nDeprecated\nautomaticallyAdjustsScrollViewInsets\nA Boolean value that indicates whether the view controller should automatically adjust its scroll view insets.\nDeprecated\nbottomLayoutGuide\nIndicates the lowest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\ncontentSizeForViewInPopover\nThe size of the view controller's view while displayed in a popover.\nDeprecated\ninterfaceOrientation\nConvenience property that provides the current orientation of the interface, meaningful only if the view controller is taking up the full screen.\nDeprecated\nmodalInPopover\nA Boolean value indicating whether the view controller should be presented modally by a popover.\nDeprecated\nmodalViewController\nThe controller for the active presented view'that is, the view that is temporarily displayed on top of the view managed by the receiver.\nDeprecated\nsearchDisplayController\nThe search display controller associated with the view controller.\nDeprecated\ntopLayoutGuide\nIndicates the highest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated"
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621403-initwithcoder",
    "html": "Parameters\ncoder\n\nAn unarchiver object.\n\nSee Also\nCreating a view controller\n- initWithNibName:bundle:\nCreates a view controller with the nib file in the specified bundle."
  },
  {
    "title": "viewLoaded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/2097563-viewloaded",
    "html": "Discussion\n\nThe value of this property is YES when the view is in memory or NO when it is not. Accessing this property does not attempt to load the view if it is not currently in memory.\n\nSee Also\nManaging the view\nview\nThe view that the controller manages.\nviewIfLoaded\nThe view controller’s view, or nil if the view isn’t yet loaded.\n- loadView\nCreates the view that the controller manages.\n- viewDidLoad\nCalled after the controller's view is loaded into memory.\n- loadViewIfNeeded\nLoads the view controller’s view if it’s not loaded yet.\ntitle\nA localized string that represents the view this controller manages.\npreferredContentSize\nThe preferred size for the view controller’s view."
  },
  {
    "title": "initWithNibName:bundle: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621359-initwithnibname",
    "html": "Parameters\nnibNameOrNil\n\nThe name of the nib file to associate with the view controller. The nib file name should not contain any leading path information. If you specify nil, the nibName property is set to nil.\n\nnibBundleOrNil\n\nThe bundle in which to search for the nib file. This method looks for the nib file in the bundle's language-specific project directories first, followed by the Resources directory.\n\nReturn Value\n\nA newly initialized UIViewController object.\n\nDiscussion\n\nThis is the designated initializer for this class. When using a storyboard to define your view controller and its associated views, you never initialize your view controller class directly. Instead, view controllers are instantiated by the storyboard either automatically when a segue is triggered or programmatically when your app calls the instantiateViewControllerWithIdentifier: method of a storyboard object. When instantiating a view controller from a storyboard, iOS initializes the new view controller by calling its initWithCoder: method instead of this method and sets the nibName property to a nib file stored inside the storyboard.\n\nThe nib file you specify is not loaded right away. It is loaded the first time the view controller's view is accessed. If you want to perform additional initialization after the nib file is loaded, override the viewDidLoad method and perform your tasks there.\n\nIf you specify nil for the nibName parameter and you do not override the loadView method, the view controller searches for a nib file as described in the nibName property.\n\nFor more information about how a view controller loads its view, see View Controller Programming Guide for iOS.\n\nSee Also\nCreating a view controller\n- initWithCoder:\nCreates a view controller with data in an unarchiver.\nRelated Documentation\nView Controller Catalog for iOS\n- loadView\nCreates the view that the controller manages.\nView Controller Programming Guide for iOS\nnibBundle\nThe view controller's nib bundle if it exists.\nnibName\nThe name of the view controller's nib file, if one was specified.\nstoryboard\nThe storyboard from which the view controller originated."
  },
  {
    "title": "maximumDetentValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetentresolutioncontext/3975909-maximumdetentvalue",
    "html": "Required\n\nSee Also\nAccessing the properties of the context\nvar containerTraitCollection: UITraitCollection\nThe trait collection of the sheet’s container view.\n\nRequired"
  },
  {
    "title": "UITabBarItemAppearance.Style.inline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/style/inline",
    "html": "See Also\nItem layout\ncase stacked\nA vertically stacked icon and title.\ncase compactInline\nA side-by-side layout of the icon and title, suitable for use in compact-width environments."
  },
  {
    "title": "UITableView.SelfSizingInvalidation.disabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/selfsizinginvalidation/disabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, no sizing updates occur after calling invalidateIntrinsicContentSize() on a self-sizing cell or its contentView."
  },
  {
    "title": "UITableView.SeparatorInsetReference.fromCellEdges | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/separatorinsetreference/fromcelledges",
    "html": "Discussion\n\nWhen this style is active, setting the left and right insets to 0.0 would result in a separator to extend from the entire distance between the left and right edges of the cell. Setting the insets to other values would inset the separator by the specified amount."
  },
  {
    "title": "init(style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198062-init",
    "html": "Parameters\nstyle\n\nThe layout style for the appearance attributes. UIKit uses this value to configure the default appearance attributes. For a list of possible values, see UITabBarItemAppearance.Style.\n\nReturn Value\n\nA new appearance object containing appropriate default values for the specified layout style.\n\nSee Also\nCreating a tab bar item appearance object\ninit()\nCreates an appearance object with default values for a stacked tab bar item.\ninit(coder: NSCoder)\nCreates an appearance object from data in an unarchiver."
  },
  {
    "title": "UIBarButtonItem.SystemItem.pageCurl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/systemitem/pagecurl",
    "html": "Deprecated\n\nUIBarButtonItem.SystemItem.pageCurl isn’t recommended for apps that run in iOS 7 and later.\n\nDiscussion\n\nThis bar button image can be used only for bar button items placed on toolbars."
  },
  {
    "title": "UIBarButtonItem.SystemItem.flexibleSpace | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/systemitem/flexiblespace",
    "html": "Discussion\n\nThe space is distributed equally between the other items. Other item properties are ignored when this value is set."
  },
  {
    "title": "UIBarButtonItem.SystemItem.fixedSpace | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/systemitem/fixedspace",
    "html": "Discussion\n\nOnly the width property is used when this value is set."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617166-init",
    "html": "See Also\nCreating items\ninit(title: String?, image: UIImage?, primaryAction: UIAction?, menu: UIMenu?)\nCreates a plain-style item using the specified title, image, primary action, and context menu.\ninit(title: String?, image: UIImage?, target: AnyObject?, action: Selector?, menu: UIMenu?)\nCreates a plain-style item using the specified title, image, target, action, and context menu.\ninit?(coder: NSCoder)\nCreates an item from data in an unarchiver."
  },
  {
    "title": "UIImagePickerController.SourceType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/sourcetype",
    "html": "Overview\n\nA given source may not be available on a given device because the source is not physically present or because it cannot currently be accessed.\n\nTopics\nConstants\ncase camera\nSpecifies the device’s built-in camera as the source for the image picker controller.\ncase photoLibrary\nSpecifies the device’s photo library as the source for the image picker controller.\nDeprecated\ncase savedPhotosAlbum\nSpecifies the device’s Camera Roll album as the source for the image picker controller.\nDeprecated\nRelationships\nConforms To\nSendable\nSee Also\nSetting the picker source\nclass func availableMediaTypes(for: UIImagePickerController.SourceType) -> [String]?\nRetrieves the available media types for the specified source type.\nclass func isSourceTypeAvailable(UIImagePickerController.SourceType) -> Bool\nQueries whether the device supports picking media using the specified source type.\nvar sourceType: UIImagePickerController.SourceType\nThe type of picker interface to be displayed by the controller."
  },
  {
    "title": "UIImagePickerControllerInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontrollerinfokey",
    "html": "Topics\nConstants\nUIImagePickerControllerCropRect\nThe cropping rectangle that was applied to the original image.\nUIImagePickerControllerEditedImage\nAn image edited by the user.\nUIImagePickerControllerImageURL\nThe URL of the image file.\nUIImagePickerControllerLivePhoto\nThe Live Photo representation of the selected or captured photo.\nUIImagePickerControllerMediaMetadata\nMetadata for a newly-captured photograph.\nUIImagePickerControllerMediaType\nThe media type selected by the user.\nUIImagePickerControllerMediaURL\nThe filesystem URL for the movie.\nUIImagePickerControllerOriginalImage\nThe original, uncropped image selected by the user.\nUIImagePickerControllerPHAsset\nA Photos asset for the image.\nDeprecated\nUIImagePickerControllerReferenceURL\nThe Assets Library URL for the original version of the picked item.\nDeprecated"
  },
  {
    "title": "UIBarButtonItem.Style.plain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/style/plain",
    "html": "Discussion\n\nThis item style is the default."
  },
  {
    "title": "UIImagePickerController.CameraDevice | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/cameradevice",
    "html": "Overview\n\nThe constants in this enumeration are for use as values of the cameraDevice property.\n\nTopics\nConstants\ncase rear\nSpecifies the camera on the rear of the device.\ncase front\nSpecifies the camera on the front of the device.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the camera to use\nclass func isCameraDeviceAvailable(UIImagePickerController.CameraDevice) -> Bool\nQueries whether the specified camera is available.\nvar cameraDevice: UIImagePickerController.CameraDevice\nThe camera used by the image picker controller."
  },
  {
    "title": "availableCaptureModesForCameraDevice: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/1619127-availablecapturemodesforcamerade",
    "html": "Parameters\ncameraDevice\n\nA UIImagePickerControllerCameraDevice constant indicating the camera you want to interrogate.\n\nReturn Value\n\nAn array of NSNumber objects indicating the capture modes supported by cameraDevice.\n\nDiscussion\n\nSee UIImagePickerControllerCameraCaptureMode for possible values.\n\nSee Also\nConfiguring the camera capture mode\ncameraCaptureMode\nThe capture mode used by the camera.\nUIImagePickerControllerCameraCaptureMode\nConstants that specify the category of media for the camera to capture."
  },
  {
    "title": "init(systemItem:primaryAction:menu:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600775-init",
    "html": "Parameters\nsystemItem\n\nThe system item to use as the first item on the bar. For possible values, see UIBarButtonItem.SystemItem.\n\nprimaryAction\n\nA UIAction to associate with the item. The system item doesn’t use the action to configure its title and image.\n\nmenu\n\nThe menu to present. The context menu displays in response to a person tapping the item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating system items\ninit(barButtonSystemItem: UIBarButtonItem.SystemItem, target: Any?, action: Selector?)\nCreates an item using the specified system item, target, and action.\nenum UIBarButtonItem.SystemItem\nConstants that define system-supplied images for bar button items."
  },
  {
    "title": "init(barButtonSystemItem:target:action:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617153-init",
    "html": "Parameters\nsystemItem\n\nThe system item to use as the first item on the bar. For possible values, see UIBarButtonItem.SystemItem.\n\ntarget\n\nThe object that receives the action message.\n\naction\n\nThe action to send to target when a person selects this item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nSee Also\nCreating system items\ninit(systemItem: UIBarButtonItem.SystemItem, primaryAction: UIAction?, menu: UIMenu?)\nCreates an item using the specified system item, primary action, and context menu.\nenum UIBarButtonItem.SystemItem\nConstants that define system-supplied images for bar button items.\nRelated Documentation\ninit(image: UIImage?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified image, style, target, and action.\ninit(title: String?, style: UIBarButtonItem.Style, target: Any?, action: Selector?)\nCreates an item using the specified title, style, target, and action.\nUIKit User Interface Catalog"
  },
  {
    "title": "overrideTraitCollectionForChildViewController: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621486-overridetraitcollectionforchildv",
    "html": "Parameters\nchildViewController\n\nThe view controller who’s trait collection is to be returned.\n\nReturn Value\n\nThe trait collection for the designated view controller.\n\nDiscussion\n\nUse this method to retrieve the trait collection for a child view controller. You can then modify the trait collection for the designated child view controller and set it using the setOverrideTraitCollection:forChildViewController: method.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "snapshot(forSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3600515-snapshot",
    "html": "See Also\nUpdating section data\nfunc applySnapshot(NSDiffableDataSourceSectionSnapshotReference, toSection: Any, animatingDifferences: Bool)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSectionSnapshotReference, toSection: Any, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes and executing a completion handler."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600994",
    "html": "See Also\nComparing image properties\nstatic func != (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool\nAn operator for checking whether two image properties structures are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the image properties structure by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "transform | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3650332-transform",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UICollectionLayoutListConfiguration.Appearance.plain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/plain",
    "html": "See Also\nList appearances\ncase grouped\nThe grouped list appearance.\ncase insetGrouped\nThe inset grouped list appearance.\ncase sidebar\nThe sidebar list appearance.\ncase sidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3656317-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible\nSee Also\nDescribing text properties\nvar description: String\nA textual representation of this instance.\nvar customMirror: Mirror\nThe custom mirror for this instance."
  },
  {
    "title": "setScopeBarButtonBackgroundImage(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624290-setscopebarbuttonbackgroundimage",
    "html": "Parameters\nbackgroundImage\n\nThe background image for the scope bar button in state.\n\nstate\n\nA control state.\n\nDiscussion\n\nFor more details, see scopeBarButtonBackgroundImage(for:).\n\nSee Also\nCustomizing the scope bar appearance\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar.\nfunc scopeBarButtonBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the background image for the scope bar button in a given state.\nfunc scopeBarButtonDividerImage(forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State) -> UIImage?\nReturns the divider image to use for a given combination of left and right segment states.\nfunc setScopeBarButtonDividerImage(UIImage?, forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State)\nSets the divider image to use for a given combination of left and right segment states.\nfunc scopeBarButtonTitleTextAttributes(for: UIControl.State) -> [NSAttributedString.Key : Any]?\nReturns the text attributes for the search bar’s button’s title string for a given state.\nfunc setScopeBarButtonTitleTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)\nSets the text attributes for the search bar’ button’s title string for a given state."
  },
  {
    "title": "applySnapshot(usingReloadData:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3801896-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\ncompletion\n\nA closure to execute when the reload completes. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the table view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the table view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "scopeBarButtonDividerImage(forLeftSegmentState:rightSegmentState:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624313-scopebarbuttondividerimage",
    "html": "Parameters\nleftState\n\nThe state of the left segment for which to provide the divider image.\n\nThe state may be normal or selected.\n\nrightState\n\nThe state of the right segment for which to provide the divider image.\n\nThe state may be normal or selected.\n\nReturn Value\n\nThe divider image to use for the combination of leftState and rightState.\n\nDiscussion\n\nFor more details, see setScopeBarButtonDividerImage(_:forLeftSegmentState:rightSegmentState:)\n\nSee Also\nCustomizing the scope bar appearance\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar.\nfunc scopeBarButtonBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the background image for the scope bar button in a given state.\nfunc setScopeBarButtonBackgroundImage(UIImage?, for: UIControl.State)\nSets the background image for the scope bar button in a given state.\nfunc setScopeBarButtonDividerImage(UIImage?, forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State)\nSets the divider image to use for a given combination of left and right segment states.\nfunc scopeBarButtonTitleTextAttributes(for: UIControl.State) -> [NSAttributedString.Key : Any]?\nReturns the text attributes for the search bar’s button’s title string for a given state.\nfunc setScopeBarButtonTitleTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)\nSets the text attributes for the search bar’ button’s title string for a given state."
  },
  {
    "title": "setScopeBarButtonTitleTextAttributes(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624277-setscopebarbuttontitletextattrib",
    "html": "Parameters\nattributes\n\nA dictionary containing key-value pairs specifying the text attributes to use for state.\n\nYou may specify the font, text color, text shadow color, and text shadow offset, using the keys found in NSString UIKit Additions Reference.\n\nstate\n\nA control state.\n\nSee Also\nCustomizing the scope bar appearance\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar.\nfunc scopeBarButtonBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the background image for the scope bar button in a given state.\nfunc setScopeBarButtonBackgroundImage(UIImage?, for: UIControl.State)\nSets the background image for the scope bar button in a given state.\nfunc scopeBarButtonDividerImage(forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State) -> UIImage?\nReturns the divider image to use for a given combination of left and right segment states.\nfunc setScopeBarButtonDividerImage(UIImage?, forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State)\nSets the divider image to use for a given combination of left and right segment states.\nfunc scopeBarButtonTitleTextAttributes(for: UIControl.State) -> [NSAttributedString.Key : Any]?\nReturns the text attributes for the search bar’s button’s title string for a given state."
  },
  {
    "title": "isLookToDictateEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/4230967-islooktodictateenabled",
    "html": "See Also\nManaging dictation\nprotocol UILookToDictateCapable"
  },
  {
    "title": "setScopeBarButtonDividerImage(_:forLeftSegmentState:rightSegmentState:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624308-setscopebarbuttondividerimage",
    "html": "Parameters\ndividerImage\n\nThe divider image to use for the combination of leftState and rightState.\n\nleftState\n\nThe state of the left segment for which to set the divider image.\n\nThe state may be normal or selected.\n\nrightState\n\nThe state of the right segment for which to set the divider image.\n\nThe state may be normal or selected.\n\nDiscussion\n\nTo customize the segmented control appearance you need to provide divider images to go between two unselected segments (leftSegmentState:UIControlStateNormal rightSegmentState:UIControlStateNormal), selected on the left and unselected on the right (leftSegmentState:UIControlStateSelected rightSegmentState:UIControlStateNormal), and unselected on the left and selected on the right (leftSegmentState:UIControlStateNormal rightSegmentState:UIControlStateSelected).\n\nSee Also\nCustomizing the scope bar appearance\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar.\nfunc scopeBarButtonBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the background image for the scope bar button in a given state.\nfunc setScopeBarButtonBackgroundImage(UIImage?, for: UIControl.State)\nSets the background image for the scope bar button in a given state.\nfunc scopeBarButtonDividerImage(forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State) -> UIImage?\nReturns the divider image to use for a given combination of left and right segment states.\nfunc scopeBarButtonTitleTextAttributes(for: UIControl.State) -> [NSAttributedString.Key : Any]?\nReturns the text attributes for the search bar’s button’s title string for a given state.\nfunc setScopeBarButtonTitleTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)\nSets the text attributes for the search bar’ button’s title string for a given state."
  },
  {
    "title": "UILookToDictateCapable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilooktodictatecapable",
    "html": "Topics\nInstance Properties\nvar isLookToDictateEnabled: Bool\n\nRequired\n\nRelationships\nInherits From\nNSObjectProtocol\nConforming Types\nUISearchBar\nSee Also\nManaging dictation\nvar isLookToDictateEnabled: Bool"
  },
  {
    "title": "scopeBarButtonTitleTextAttributes(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624309-scopebarbuttontitletextattribute",
    "html": "Parameters\nstate\n\nA control state.\n\nReturn Value\n\nThe text attributes for the search bar’ button’s title string for state.\n\nThe attributes may specify the font, text color, text shadow color, and text shadow offset, using the keys found in NSString UIKit Additions Reference.\n\nSee Also\nCustomizing the scope bar appearance\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar.\nfunc scopeBarButtonBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the background image for the scope bar button in a given state.\nfunc setScopeBarButtonBackgroundImage(UIImage?, for: UIControl.State)\nSets the background image for the scope bar button in a given state.\nfunc scopeBarButtonDividerImage(forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State) -> UIImage?\nReturns the divider image to use for a given combination of left and right segment states.\nfunc setScopeBarButtonDividerImage(UIImage?, forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State)\nSets the divider image to use for a given combination of left and right segment states.\nfunc setScopeBarButtonTitleTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)\nSets the text attributes for the search bar’ button’s title string for a given state."
  },
  {
    "title": "UIBarStyle.blackTranslucent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarstyle/blacktranslucent",
    "html": "Deprecated\n\nUse UIBarStyle.black and set the isTranslucent property to true instead.\n\nSee Also\nBar styles\ncase `default`\nThe default style normally associated with the given view.\ncase black\nA black background with light content.\nstatic var blackOpaque: UIBarStyle\nA deprecated opaque style.\nDeprecated"
  },
  {
    "title": "blackOpaque | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarstyle/1623397-blackopaque",
    "html": "Deprecated\n\nUse UIBarStyle.black instead.\n\nSee Also\nBar styles\ncase `default`\nThe default style normally associated with the given view.\ncase black\nA black background with light content.\ncase blackTranslucent\nA deprecated translucent style.\nDeprecated"
  },
  {
    "title": "scopeBarButtonBackgroundImage(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624311-scopebarbuttonbackgroundimage",
    "html": "Parameters\nstate\n\nA control state.\n\nReturn Value\n\nThe background image for the scope bar button in state.\n\nDiscussion\n\nIf the background image is an image returned from stretchableImage(withLeftCapWidth:topCapHeight:) (UIImage), the cap widths are calculated from that information, otherwise, the cap width is calculated by subtracting one from the image’s width then dividing by 2. The cap widths are used as the margins for text placement. To adjust the margin use the margin adjustment methods.\n\nSee Also\nCustomizing the scope bar appearance\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar.\nfunc setScopeBarButtonBackgroundImage(UIImage?, for: UIControl.State)\nSets the background image for the scope bar button in a given state.\nfunc scopeBarButtonDividerImage(forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State) -> UIImage?\nReturns the divider image to use for a given combination of left and right segment states.\nfunc setScopeBarButtonDividerImage(UIImage?, forLeftSegmentState: UIControl.State, rightSegmentState: UIControl.State)\nSets the divider image to use for a given combination of left and right segment states.\nfunc scopeBarButtonTitleTextAttributes(for: UIControl.State) -> [NSAttributedString.Key : Any]?\nReturns the text attributes for the search bar’s button’s title string for a given state.\nfunc setScopeBarButtonTitleTextAttributes([NSAttributedString.Key : Any]?, for: UIControl.State)\nSets the text attributes for the search bar’ button’s title string for a given state."
  },
  {
    "title": "itemIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3182934-itemidentifier",
    "html": "Parameters\nindexPath\n\nThe index path of the item in the table view.\n\nReturn Value\n\nThe item’s identifier, or nil if no item is found at the provided index path.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\nfunc indexPath(forItemIdentifier: Any) -> IndexPath?\nReturns an index path for the item with the specified identifier in the table view."
  },
  {
    "title": "applySnapshot(_:animatingDifferences:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3182930-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\nanimatingDifferences\n\nIf true, the system animates the updates to the table view. If false, the system doesn’t animate the updates to the table view.\n\nDiscussion\n\nThe diffable data source computes the difference between the table view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the table view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "indexPath(forItemIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3182932-indexpath",
    "html": "Parameters\nidentifier\n\nThe identifier of the item in the table view.\n\nReturn Value\n\nThe item’s index path, or nil if no item is found with the provided item identifier.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\nfunc itemIdentifier(for: IndexPath) -> Any?\nReturns an identifier for the item at the specified index path in the table view."
  },
  {
    "title": "snapshot() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3182935-snapshot",
    "html": "See Also\nUpdating data\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "sectionIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3801898-sectionidentifier",
    "html": "See Also\nIdentifying sections\nfunc index(forSectionIdentifier: Any) -> Int\nReturns an index for the section with the identifier you specify in the table view."
  },
  {
    "title": "applySnapshot(_:animatingDifferences:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3356326-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\nanimatingDifferences\n\nIf true, the system animates the updates to the table view. If false, the system doesn’t animate the updates to the table view.\n\ncompletion\n\nA closure to execute when the animations are complete. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe diffable data source computes the difference between the table view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the table view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "minimumScaleFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601023-minimumscalefactor",
    "html": "Discussion\n\nThis value applies when adjustsFontSizeToFitWidth is true.\n\nSee Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176541-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible"
  },
  {
    "title": "numberOfLines | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601024-numberoflines",
    "html": "Discussion\n\nA value of 0 indicates that the number of lines is limitless.\n\nSee Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "resolvedColor() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3606570-resolvedcolor",
    "html": "Discussion\n\nThe resulting color depends on color and colorTransformer.\n\nSee Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "alignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601016-alignment",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "lineBreakMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601022-linebreakmode",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UICellConfigurationState.DragState.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/none",
    "html": "See Also\nDrag states\ncase lifting\nA user interaction is lifting the cell, but it isn’t yet part of an active drag session.\ncase dragging\nThe cell is part of an active drag session."
  },
  {
    "title": "UITableView.SelfSizingInvalidation.enabledIncludingConstraints | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/selfsizinginvalidation/enabledincludingconstraints",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize() on a self-sizing cell or its contentView causes the cell to resize if necessary. Additionally, any Auto Layout change within the contentView of a self-sizing cell automatically calls invalidateIntrinsicContentSize()."
  },
  {
    "title": "UITableView.SeparatorInsetReference.fromAutomaticInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/separatorinsetreference/fromautomaticinsets",
    "html": "Discussion\n\nWhen using this style, the values in the separatorInset property are interpreted as offsets from the default insets provided by the table view. The table view normally uses its layout margins as the default cell inset value. However, these insets may be modified by other factors, such as the when the cellLayoutMarginsFollowReadableWidth property is set to true."
  },
  {
    "title": "UITableView.ScrollPosition.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/scrollposition/none",
    "html": "Discussion\n\nIf the row is already fully visible, no scrolling occurs. For example, if the row is above the visible area, the behavior is identical to that specified by UITableView.ScrollPosition.top. This is the default."
  },
  {
    "title": "UITabBarItemAppearance.Style.stacked | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/style/stacked",
    "html": "See Also\nItem layout\ncase inline\nA side-by-side layout of the icon and title, suitable for use in regular-width environments.\ncase compactInline\nA side-by-side layout of the icon and title, suitable for use in compact-width environments."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176545-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable"
  },
  {
    "title": "standardDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3601001-standarddimension",
    "html": "Discussion\n\nSetting the reservedLayoutSize width or height to this constant results in using the system standard value for a symbol image for that dimension, even when the image is not a symbol image.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600997-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing image properties\nstatic func == (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool\nAn operator for checking whether two image properties structures are equal.\nstatic func != (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool\nAn operator for checking whether two image properties structures are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the image properties structure by feeding them into the hasher."
  },
  {
    "title": "reorderingHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3600513-reorderinghandlers",
    "html": "Discussion\n\nProvide reordering handlers to support the reordering of items in your collection view.\n\nThe system calls the didReorderHandler handler after a reordering transaction (NSDiffableDataSourceTransaction) occurs, so you can update your data backing store with information about the changes.\n\n// Allow every item to be reordered\ndataSource.reorderingHandlers.canReorderItem = { item in return true }\n\n\n// Option 1: Update the backing store from a CollectionDifference\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    if let updatedBackingStore = self.backingStore.applying(transaction.difference) {\n        self.backingStore = updatedBackingStore\n    }\n}\n\n\n// Option 2: Update the backing store from the final item identifiers\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    self.backingStore = transaction.finalSnapshot.itemIdentifiers\n}\n"
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3656315-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible\nSee Also\nDescribing image properties\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging.\nvar customMirror: Mirror\nThe custom mirror for this instance."
  },
  {
    "title": "showsExpansionTextWhenTruncated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3969197-showsexpansiontextwhentruncated",
    "html": "Discussion\n\nThe default value is true.\n\nSee Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601005",
    "html": "See Also\nComparing text properties\nstatic func != (UIListContentConfiguration.TextProperties, UIListContentConfiguration.TextProperties) -> Bool\nAn operator used to check whether two text properties structures are not equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the text properties structure by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601004",
    "html": "See Also\nComparing text properties\nstatic func == (UIListContentConfiguration.TextProperties, UIListContentConfiguration.TextProperties) -> Bool\nAn operator used to check whether two text properties structures are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the text properties structure by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601020-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing text properties\nstatic func == (UIListContentConfiguration.TextProperties, UIListContentConfiguration.TextProperties) -> Bool\nAn operator used to check whether two text properties structures are equal.\nstatic func != (UIListContentConfiguration.TextProperties, UIListContentConfiguration.TextProperties) -> Bool\nAn operator used to check whether two text properties structures are not equal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UICollectionViewDiffableDataSourceReferenceSupplementaryViewProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereferencesupplementaryviewprovider",
    "html": "Parameters\ncollectionView\n\nThe collection view to configure this supplementary view for.\n\nkind\n\nThe kind of supplementary view to provide. The layout object that supports the supplementary view defines the value of this string.\n\nindexPath\n\nThe index path that specifies the location of the supplementary view in the collection view.\n\nReturn Value\n\nA non-nil configured supplementary view object. The supplementary view provider must return a valid view object to the collection view.\n\nSee Also\nCreating supplementary views\nvar supplementaryViewProvider: UICollectionViewDiffableDataSourceReferenceSupplementaryViewProvider?\nThe closure that configures and returns the collection view’s supplementary views, such as headers and footers, from the diffable data source."
  },
  {
    "title": "init(collectionView:cellProvider:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3182923-init",
    "html": "Parameters\ncollectionView\n\nThe initialized collection view object to connect to the diffable data source.\n\ncellProvider\n\nA closure that creates and returns each of the cells for the collection view from the data the diffable data source provides.\n\nDiscussion\n\nTo connect a diffable data source to a collection view, you create the diffable data source using this initializer, passing in the collection view you want to associate with that data source. You also pass in a cell provider, where you configure each of your cells to determine how to display your data in the UI.\n\nself.dataSource = [[UICollectionViewDiffableDataSource alloc] initWithCollectionView:self.collectionView cellProvider:^UICollectionViewCell *(UICollectionView *collectionView, NSIndexPath *indexPath, id item) {\n    // configure and return cell\n}];\n\n\nSee Also\nCreating a diffable data source\ntypealias UICollectionViewDiffableDataSourceReferenceCellProvider\nA closure that configures and returns a cell for a collection view from its diffable data source."
  },
  {
    "title": "customMirror | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3656316-custommirror",
    "html": "Relationships\nFrom Protocol\nCustomReflectable\nSee Also\nDescribing text properties\nvar description: String\nA textual representation of this instance.\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging."
  },
  {
    "title": "UITabBar.ItemPositioning.fill | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbar/itempositioning/fill",
    "html": "Discussion\n\nWhen the UITabBar.ItemPositioning.automatic option is selected, the tab bar uses this behavior in horizontally compact environments."
  },
  {
    "title": "UITableView.Style.insetGrouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/style/insetgrouped",
    "html": "See Also\nStyles\ncase plain\nA plain table view.\ncase grouped\nA table view where sections have distinct groups of rows."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/3600880",
    "html": "See Also\nComparing drag states\nstatic func == (UICellConfigurationState.DragState, UICellConfigurationState.DragState) -> Bool\nAn operator for checking whether two drag states are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the drag state by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dropstate/3600890-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing drop states\nstatic func == (UICellConfigurationState.DropState, UICellConfigurationState.DropState) -> Bool\nAn operator for checking whether two drop states are equal.\nstatic func != (UICellConfigurationState.DropState, UICellConfigurationState.DropState) -> Bool\nAn operator for checking whether two drop states are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "contentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600431-contentconfiguration",
    "html": "Discussion\n\nUsing a content configuration, you can set the cell’s content and styling for a variety of different cell states.\n\nSetting a content configuration replaces the existing contentView of the cell with a new content view instance from the configuration, or directly applies the configuration to the existing content view if the configuration is compatible with the existing content view type.\n\nThe default value is nil. After you set a content configuration to this property, setting this property back to nil replaces the current content view with a new, empty content view.\n\nSee Also\nManaging the content\nautomaticallyUpdatesContentConfiguration\nA Boolean value that determines whether the cell automatically updates its content configuration when its state changes.\ncontentView\nThe main view that you add your cell’s custom content to."
  },
  {
    "title": "configuration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3750768-configuration",
    "html": "Discussion\n\nSetting a configuration opts the button into a configuration system based on UIButtonConfiguration. This configuration supports several options and behaviors unavailable with other configuration methods. Features include subtitle labels, extended control over background appearance, ways to transform the button configuration when the button changes state, and integration with macOS when building with Mac Catalyst.\n\nWhen using a configuration, the button ignores deprecated methods and properties of UIButton. You can combine most other methods and properties of UIButton with a configuration. If you have existing code to configure a button, you can set this property to take advantage of additional configuration features.\n\nIf the configuration is nil, other supported properties and methods of UIButton, such as setTitle:forState: , control the apearance of the button.\n\nSee Also\nManaging the appearance with a configuration object\nautomaticallyUpdatesConfiguration\nA Boolean value that determines whether the button configuration changes when button’s state changes.\n- setNeedsUpdateConfiguration\nRequests the system update the button configuration.\n- updateConfiguration\nUpdates button configuration in response to button state change.\nconfigurationUpdateHandler\nA closure that executes when the button state changes.\nUIButtonConfigurationUpdateHandler\nA closure to update the configuration of a button."
  },
  {
    "title": "backgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600429-backgroundconfiguration",
    "html": "Discussion\n\nUsing a background configuration, you can obtain system default background styling for a variety of different cell states. Create a background configuration with one of the default system styles, customize the configuration to match your cell’s style as needed, and assign the configuration to this property.\n\nUIBackgroundConfiguration *backgroundConfig = [UIBackgroundConfiguration listPlainCellConfiguration];\n\n\n// Set a nil background color to use the view's tint color.\n[backgroundConfig setBackgroundColor:nil];\n\n\n[cell setBackgroundConfiguration:backgroundConfig];\n\n\nA background configuration is mutually exclusive with background views, so you must use one approach or the other. Setting a non-nil value for this property resets the following APIs to nil:\n\nbackgroundColor\n\nbackgroundView\n\nselectedBackgroundView\n\nSee Also\nConfiguring the background\n- defaultBackgroundConfiguration\nRetrieves a background configuration with system default values.\nautomaticallyUpdatesBackgroundConfiguration\nA Boolean value that determines whether the cell automatically updates its background configuration when its state changes.\nbackgroundView\nThe view that displays behind the cell’s other content.\nselectedBackgroundView\nThe view that displays just above the background view for a selected cell."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dropstate/3600888",
    "html": "See Also\nComparing drop states\nstatic func == (UICellConfigurationState.DropState, UICellConfigurationState.DropState) -> Bool\nAn operator for checking whether two drop states are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the drop state by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/detent/identifier/3804473-init",
    "html": "See Also\nCreating a detent identifier\ninit(rawValue: String)\nCreates a detent identifier with the specified raw value."
  },
  {
    "title": "index(forSectionIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3801897-index",
    "html": "See Also\nIdentifying sections\nfunc sectionIdentifier(for: Int) -> Any?\nReturns an identifier for the section at the index you specify in the table view."
  },
  {
    "title": "UICellConfigurationState.DropState.notTargeted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dropstate/nottargeted",
    "html": "See Also\nDrop states\ncase none\nThe system hasn’t associated the cell with a drag session.\ncase targeted\nThe cell is the drop target for a drag session."
  },
  {
    "title": "UICellConfigurationState.DropState.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dropstate/none",
    "html": "See Also\nDrop states\ncase notTargeted\nA drag session is active and can perform a drop in the cell’s container, but the cell itself isn’t the drop target.\ncase targeted\nThe cell is the drop target for a drag session."
  },
  {
    "title": "defaultRowAnimation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasourcereference/3182931-defaultrowanimation",
    "html": "Discussion\n\nThe default value of this property is UITableView.RowAnimation.automatic.\n\nIf you set the value of this property, the new value becomes the default row animation for the next update that uses applySnapshot(_:animatingDifferences:) or applySnapshot(_:animatingDifferences:completion:).\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the table view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "font | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601019-font",
    "html": "See Also\nConfiguring text properties\nvar color: UIColor\nThe color of the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "colorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3606569-colortransformer",
    "html": "Discussion\n\nIf the value is nil, the configuration uses color without any transformations.\n\nSee Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar color: UIColor\nThe color of the text.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "color | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601018-color",
    "html": "See Also\nConfiguring text properties\nvar font: UIFont\nThe font for the text.\nvar colorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the text color.\nfunc resolvedColor() -> UIColor\nGenerates the resolved color for the specified color, using the text color and color transformer.\nvar alignment: UIListContentConfiguration.TextProperties.TextAlignment\nThe alignment for the text.\nvar lineBreakMode: NSLineBreakMode\nThe line break mode to use for the text.\nvar numberOfLines: Int\nThe maximum number of lines for the text.\nvar adjustsFontSizeToFitWidth: Bool\nA Boolean value that determines whether the configuration automatically adjusts the font size of the text when necessary to fit in the available width.\nvar minimumScaleFactor: CGFloat\nThe smallest multiplier for the font size that the configuration uses to make the text fit.\nvar allowsDefaultTighteningForTruncation: Bool\nA Boolean value that determines whether the configuration tightens the text before truncating.\nvar adjustsFontForContentSizeCategory: Bool\nA Boolean value that determines whether the configuration automatically updates the font when the content size category changes.\nenum UIListContentConfiguration.TextProperties.TextAlignment\nConstants that specify the visual alignment of the text.\nvar transform: UIListContentConfiguration.TextProperties.TextTransform\nThe transform to apply to the text.\nenum UIListContentConfiguration.TextProperties.TextTransform\nConstants that specify the transform to apply to the text.\nvar showsExpansionTextWhenTruncated: Bool\nA Boolean value that determines whether the full text displays when the pointer hovers over the truncated text."
  },
  {
    "title": "UIBarStyle.black | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarstyle/black",
    "html": "See Also\nBar styles\ncase `default`\nThe default style normally associated with the given view.\nstatic var blackOpaque: UIBarStyle\nA deprecated opaque style.\nDeprecated\ncase blackTranslucent\nA deprecated translucent style.\nDeprecated"
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176542-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible"
  },
  {
    "title": "customMirror | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176540-custommirror",
    "html": "Relationships\nFrom Protocol\nCustomReflectable"
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/buttonproperties/4176516-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable"
  },
  {
    "title": "indexPath(forItemIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3182922-indexpath",
    "html": "Parameters\nidentifier\n\nThe identifier of the item in the collection view.\n\nReturn Value\n\nThe item's index path, or nil if no item is found with the provided item identifier.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\nfunc itemIdentifier(for: IndexPath) -> Any?\nReturns an identifier for the item at the specified index path in the collection view."
  },
  {
    "title": "index(forSectionIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3801893-index",
    "html": "See Also\nIdentifying sections\nfunc sectionIdentifier(for: Int) -> Any?\nReturns an identifier for the section at the index you specify in the collection view."
  },
  {
    "title": "applySnapshot(_:animatingDifferences:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3182921-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nanimatingDifferences\n\nIf true, the system animates the updates to the collection view. If false, the system doesn’t animate the updates to the collection view.\n\nDiscussion\n\nThe diffable data source computes the difference between the collection view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the collection view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "snapshot() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3182925-snapshot",
    "html": "Return Value\n\nA snapshot containing section and item identifiers in the order that they appear in the UI.\n\nSee Also\nUpdating data\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "applySnapshot(usingReloadData:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3801891-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the collection view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the collection view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "applySnapshot(usingReloadData:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3801892-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\ncompletion\n\nA closure to execute when the reload completes. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the collection view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the collection view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes."
  },
  {
    "title": "applySnapshot(_:animatingDifferences:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3356324-applysnapshot",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nanimatingDifferences\n\nIf true, the system animates the updates to the collection view. If false, the system doesn’t animate the updates to the collection view.\n\ncompletion\n\nA closure to execute when the animations are complete. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe diffable data source computes the difference between the collection view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshotReference\nReturns a representation of the current state of the data in the collection view.\nfunc applySnapshot(NSDiffableDataSourceSnapshotReference, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshot(usingReloadData: NSDiffableDataSourceSnapshotReference, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "applySnapshot(_:toSection:animatingDifferences:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3600511-applysnapshot",
    "html": "See Also\nUpdating section data\nfunc snapshot(forSection: Any) -> NSDiffableDataSourceSectionSnapshotReference\nReturns a representation of the current state of the data in the specified section of the collection view.\nfunc applySnapshot(NSDiffableDataSourceSectionSnapshotReference, toSection: Any, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes and executing a completion handler."
  },
  {
    "title": "applySnapshot(_:toSection:animatingDifferences:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3600512-applysnapshot",
    "html": "See Also\nUpdating section data\nfunc snapshot(forSection: Any) -> NSDiffableDataSourceSectionSnapshotReference\nReturns a representation of the current state of the data in the specified section of the collection view.\nfunc applySnapshot(NSDiffableDataSourceSectionSnapshotReference, toSection: Any, animatingDifferences: Bool)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes."
  },
  {
    "title": "sectionSnapshotHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3600514-sectionsnapshothandlers",
    "html": "Discussion\n\nProvide section snapshot handlers to support the expanding or collapsing of items in your collection view.\n\nUse the snapshotForExpandingParentItemHandler handler to customize the snapshot that returns when a particular parent item is expanded.\n\n// Allow every item to be collapsed\ndataSource.sectionSnapshotHandlers.shouldCollapseItem = { item in return true }\n\n\ndataSource.sectionSnapshotHandlers.snapshotForExpandingParent = {\n    parent, currentChildSnapshot -> NSDiffableDataSourceSectionSnapshot<String> in\n    \n    // Return child snapshot for the parent, or just currentChildSnapshot\n}\n"
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600996-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing image properties\nstatic func == (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool\nAn operator for checking whether two image properties structures are equal.\nstatic func != (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool\nAn operator for checking whether two image properties structures are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "customMirror | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3656313-custommirror",
    "html": "Relationships\nFrom Protocol\nCustomReflectable\nSee Also\nDescribing image properties\nvar description: String\nA textual representation of this instance.\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3656314-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible\nSee Also\nDescribing image properties\nvar description: String\nA textual representation of this instance.\nvar customMirror: Mirror\nThe custom mirror for this instance."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600993",
    "html": "See Also\nComparing image properties\nstatic func == (UIListContentConfiguration.ImageProperties, UIListContentConfiguration.ImageProperties) -> Bool\nAn operator for checking whether two image properties structures are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the image properties structure by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "accessibilityIgnoresInvertColors | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3668008-accessibilityignoresinvertcolors",
    "html": "Discussion\n\nIf the value of this property is true, the image doesn’t invert its colors when the user turns on Invert Colors. The default value is false.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size."
  },
  {
    "title": "resolvedTintColor(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3606567-resolvedtintcolor",
    "html": "Discussion\n\nThe resulting color depends on tintColor and tintColorTransformer.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/3600884-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing drag states\nstatic func == (UICellConfigurationState.DragState, UICellConfigurationState.DragState) -> Bool\nAn operator for checking whether two drag states are equal.\nstatic func != (UICellConfigurationState.DragState, UICellConfigurationState.DragState) -> Bool\nAn operator for checking whether two drag states are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the drag state by feeding them into the hasher."
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3656318-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible\nSee Also\nDescribing text properties\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging.\nvar customMirror: Mirror\nThe custom mirror for this instance."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/textproperties/3601021-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing text properties\nstatic func == (UIListContentConfiguration.TextProperties, UIListContentConfiguration.TextProperties) -> Bool\nAn operator used to check whether two text properties structures are equal.\nstatic func != (UIListContentConfiguration.TextProperties, UIListContentConfiguration.TextProperties) -> Bool\nAn operator used to check whether two text properties structures are not equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the text properties structure by feeding them into the hasher."
  },
  {
    "title": "configurationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcell/3600430-configurationstate",
    "html": "Discussion\n\nTo add your own custom state, see UIConfigurationStateCustomKey.\n\nSee Also\nManaging the state\n- setNeedsUpdateConfiguration\nInforms the cell to update its configuration for its current state.\n- updateConfigurationUsingState:\nUpdates the cell’s configuration using the current state.\nconfigurationUpdateHandler\nA block for handling updates to the cell’s configuration using the current state.\nUICollectionViewCellConfigurationUpdateHandler\nThe type of block for handling updates to the cell’s configuration using the current state.\nselected\nThe selection state of the cell.\nhighlighted\nThe highlight state of the cell."
  },
  {
    "title": "secondaryText | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/3600540-secondarytext",
    "html": "See Also\nCustomizing content\nimage\nThe image to display.\ntext\nThe primary text.\nattributedText\nAn attributed variant of the primary text.\nsecondaryAttributedText\nAn attributed variant of the secondary text."
  },
  {
    "title": "UICollectionLayoutListConfiguration.Appearance.grouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/grouped",
    "html": "See Also\nList appearances\ncase plain\nThe plain list appearance.\ncase insetGrouped\nThe inset grouped list appearance.\ncase sidebar\nThe sidebar list appearance.\ncase sidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176533-tintcolor",
    "html": "Discussion\n\nSetting the value to nil makes the image view use its inherited tint color."
  },
  {
    "title": "UICellConfigurationState.DropState.targeted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dropstate/targeted",
    "html": "See Also\nDrop states\ncase none\nThe system hasn’t associated the cell with a drag session.\ncase notTargeted\nA drag session is active and can perform a drop in the cell’s container, but the cell itself isn’t the drop target."
  },
  {
    "title": "supplementaryViewProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3182926-supplementaryviewprovider",
    "html": "See Also\nCreating supplementary views\ntypealias UICollectionViewDiffableDataSourceReferenceSupplementaryViewProvider\nA closure that configures and returns a collection view’s supplementary view, such as a header or footer, from a diffable data source."
  },
  {
    "title": "UICollectionViewDiffableDataSourceReferenceCellProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereferencecellprovider",
    "html": "Parameters\ncollectionView\n\nThe collection view to configure this cell for.\n\nindexPath\n\nThe index path that specifies the location of the cell in the collection view.\n\nidentifier\n\nThe identifier of the item for this cell.\n\nReturn Value\n\nA non-nil configured cell object. The cell provider must return a valid cell object to the collection view.\n\nSee Also\nCreating a diffable data source\ninit(collectionView: UICollectionView, cellProvider: UICollectionViewDiffableDataSourceReferenceCellProvider)\nCreates a diffable data source with the specified cell provider, and connects it to the specified collection view."
  },
  {
    "title": "titleShadowColorForState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1624009-titleshadowcolorforstate",
    "html": "Parameters\nstate\n\nThe state that uses the title shadow color. The possible values are described in UIControlState.\n\nReturn Value\n\nThe color of the title’s shadow for the specified state.\n\nSee Also\nManaging the title\ntitleLabel\nA view that displays the value of the currentTitle property for a button.\n- titleForState:\nReturns the title associated with the specified state.\n- setTitle:forState:\nSets the title to use for the specified state.\n- attributedTitleForState:\nReturns the styled title associated with the specified state.\n- setAttributedTitle:forState:\nSets the styled title to use for the specified state.\n- titleColorForState:\nReturns the title color used for a state.\n- setTitleColor:forState:\nSets the color of the title to use for the specified state.\n- setTitleShadowColor:forState:\nSets the color of the title shadow to use for the specified state."
  },
  {
    "title": "buttonWithType: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1624028-buttonwithtype",
    "html": "Parameters\nbuttonType\n\nThe button type. See UIButtonType for the possible values.\n\nReturn Value\n\nA newly created button.\n\nDiscussion\n\nThis method is a convenience constructor for creating button objects with specific configurations.\n\nWhen creating a custom button — a button with the type UIButtonTypeCustom — the frame of the button is set to (0, 0, 0, 0) initially. Before adding the button to your interface, you should update the frame to a more appropriate value.\n\nSee Also\nCreating buttons of a specific type\n+ buttonWithType:primaryAction:\nCreates a new button with the specified type, registers the primary action event, and sets the title and image to the action’s title and image.\nUIButtonType\nSpecifies the style of a button.\nRelated Documentation\nUIKit Catalog: Creating and Customizing Views and Controls\nCustomize your app’s user interface with views and controls."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/3600881",
    "html": "See Also\nComparing drag states\nstatic func != (UICellConfigurationState.DragState, UICellConfigurationState.DragState) -> Bool\nAn operator for checking whether two drag states are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the drag state by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "setStatusBarHidden:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/1622942-setstatusbarhidden",
    "html": "Deprecated\n\nUse the setStatusBarHidden:withAnimation: method instead.\n\nParameters\nhidden\n\nYES if the status bar should be hidden, NO if it should be visible. The default value is NO.\n\nanimated\n\nYES if the transition to or from a hidden state should be animated, NO otherwise.\n\nDiscussion\n\nThe animation fades the status bar out or in at the top of the interface, depending on the value of hidden.\n\nSee Also\nDeprecated methods\n- requestSceneSessionActivation:userActivity:options:errorHandler:\nAsks the system to activate an existing scene, or create a new scene and associate it with your app.\nDeprecated\n- beginIgnoringInteractionEvents\nTells the receiver to suspend the handling of touch-related events.\nDeprecated\n- endIgnoringInteractionEvents\nTells the receiver to resume the handling of touch-related events.\nDeprecated\n- setMinimumBackgroundFetchInterval:\nSpecifies the minimum amount of time that must elapse between background fetch operations.\nDeprecated\n- scheduleLocalNotification:\nSchedules a local notification for delivery at its encapsulated date and time.\nDeprecated\n- presentLocalNotificationNow:\nPresents a local notification immediately.\nDeprecated\n- cancelLocalNotification:\nCancels the delivery of the specified scheduled local notification.\nDeprecated\n- cancelAllLocalNotifications\nCancels the delivery of all scheduled local notifications.\nDeprecated\n- setKeepAliveTimeout:handler:\nConfigures a periodic handler for VoIP apps in older versions of iOS.\nDeprecated\nUIMinimumKeepAliveTimeout\nThe minimum amount of time (measured in seconds) an app may run a critical background task in the background.\nDeprecated\n- clearKeepAliveTimeout\nRemoves a previously installed periodic handler block.\nDeprecated\n- setStatusBarHidden:withAnimation:\nHides or shows the status bar, optionally animating the transition.\nDeprecated\n- setStatusBarStyle:animated:\nSets the style of the status bar, optionally animating the transition to the new style.\nDeprecated\n- setStatusBarOrientation:animated:\nSets the app's status bar to the specified orientation, optionally animating the transition.\nDeprecated\n- registerUserNotificationSettings:\nRegisters your preferred options for notifying the user.\nDeprecated\n- registerForRemoteNotificationTypes:\nRegister to receive remote notifications of the specified types via Apple Push Notification service.\nDeprecated\n- enabledRemoteNotificationTypes\nReturns the types of notifications the app accepts.\nDeprecated\nUIRemoteNotificationType\nConstants indicating the types of notifications the app may display to the user.\nDeprecated\n- openURL:\nAttempts to open the resource at the specified URL.\nDeprecated\n- setNewsstandIconImage:\nSets the icon of a Newsstand app to an image depicting the current issue of a publication.\nDeprecated\nRelated Documentation\nstatusBarHidden\nA Boolean value that determines whether the status bar is hidden."
  },
  {
    "title": "UICellConfigurationState.DragState.dragging | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/dragging",
    "html": "See Also\nDrag states\ncase none\nThe system hasn’t associated the cell with a drag session.\ncase lifting\nA user interaction is lifting the cell, but it isn’t yet part of an active drag session."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/3543892-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing Tint Modes\nvar hashValue: Int\nThe hashed value of the tint mode.\nstatic func == (UIPointerEffect.TintMode, UIPointerEffect.TintMode) -> Bool\nA Boolean that indicates whether the two tint modes are equal.\nstatic func != (UIPointerEffect.TintMode, UIPointerEffect.TintMode) -> Bool\nA Boolean that indicates whether the two tint modes are not equal."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/3543891",
    "html": "See Also\nComparing Tint Modes\nvar hashValue: Int\nThe hashed value of the tint mode.\nfunc hash(into: inout Hasher)\nHashes the essential components of the tint mode by feeding them into the given hash function.\nstatic func != (UIPointerEffect.TintMode, UIPointerEffect.TintMode) -> Bool\nA Boolean that indicates whether the two tint modes are not equal."
  },
  {
    "title": "UICellConfigurationState.DragState.lifting | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/lifting",
    "html": "See Also\nDrag states\ncase none\nThe system hasn’t associated the cell with a drag session.\ncase dragging\nThe cell is part of an active drag session."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/3543890",
    "html": "See Also\nComparing Tint Modes\nvar hashValue: Int\nThe hashed value of the tint mode.\nfunc hash(into: inout Hasher)\nHashes the essential components of the tint mode by feeding them into the given hash function.\nstatic func == (UIPointerEffect.TintMode, UIPointerEffect.TintMode) -> Bool\nA Boolean that indicates whether the two tint modes are equal."
  },
  {
    "title": "UIPointerEffect.TintMode.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/none",
    "html": "See Also\nTint Modes\ncase overlay\nThe view has a tint overlay.\ncase underlay\nThe view has a tint underlay."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/3543893-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing Tint Modes\nfunc hash(into: inout Hasher)\nHashes the essential components of the tint mode by feeding them into the given hash function.\nstatic func == (UIPointerEffect.TintMode, UIPointerEffect.TintMode) -> Bool\nA Boolean that indicates whether the two tint modes are equal.\nstatic func != (UIPointerEffect.TintMode, UIPointerEffect.TintMode) -> Bool\nA Boolean that indicates whether the two tint modes are not equal."
  },
  {
    "title": "UIPointerEffect.TintMode.underlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/underlay",
    "html": "See Also\nTint Modes\ncase none\nThe view has no tint applied.\ncase overlay\nThe view has a tint overlay."
  },
  {
    "title": "UIContextMenuInteractionCommitStyle.dismiss | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextmenuinteractioncommitstyle/dismiss",
    "html": "See Also\nInteraction Styles\ncase pop\nAn interaction that uses animations."
  },
  {
    "title": "UIContextMenuInteractionCommitStyle.pop | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextmenuinteractioncommitstyle/pop",
    "html": "See Also\nInteraction Styles\ncase dismiss\nAn interaction with no animations."
  },
  {
    "title": "numberOfLines | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176548-numberoflines",
    "html": "Discussion\n\nA value of 0 indicates an unlimited number of lines."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176544-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable"
  },
  {
    "title": "customMirror | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/buttonproperties/4176512-custommirror",
    "html": "Relationships\nFrom Protocol\nCustomReflectable"
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/buttonproperties/4176514-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible"
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/buttonproperties/4176513-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible"
  },
  {
    "title": "UIWindowSceneActivationInteraction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationinteraction",
    "html": "Overview\n\nCreate a UIWindowSceneActivationInteraction object when you want to facilitate requesting scene activation when the user pinches open on a view. You initialize the interaction with a closure that the system executes when the user triggers the interaction. The closure should return a UIWindowSceneActivationConfiguration object. You also provide an error-handler closure that the system executes if the scene activation request fails.\n\nTo request scene activation from an interaction with a UICollectionView cell, use the collectionView:sceneActivationConfigurationForItemAtIndexPath:point: method.\n\nTopics\nCreating an activation interaction\n- initWithConfigurationProvider:errorHandler:\nCreates an activation interaction.\nUIWindowSceneActivationInteractionConfigurationProvider\nA type alias defining a closure that provides an activation configuration for the activation interaction.\nRelationships\nInherits From\nNSObject\nConforms To\nUIInteraction\nSee Also\nSupporting types\nUIWindowSceneActivationAction\nA menu element that requests a window scene.\nUIWindowSceneActivationConfiguration\nAn object that provides configuration options for a window scene request.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\nUIWindowSceneDestructionRequestOptions\nAn object that contains information to use when removing a window scene from your app.\nUIWindowSceneDismissalAnimation\nConstants that indicate the types of animations available for dismissing a scene’s windows.\nUIWindowSceneDragInteraction\nAn interaction you add to a view that enables pan gestures to change the containing window scene’s position.\nUIWindowSceneResizingRestrictions\nBeta\nUIWindowScenePresentationStyle\nThe placement of a window scene relative to other scenes in the workspace.\nDeprecated"
  },
  {
    "title": "minimumScaleFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/textproperties/4176547-minimumscalefactor",
    "html": "Discussion\n\nIf you set adjustsFontSizeToFitWidth to true, this property defines the smallest multiplier the view uses to fit the text."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/buttonproperties/4176515-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable"
  },
  {
    "title": "itemIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3182924-itemidentifier",
    "html": "Parameters\nindexPath\n\nThe index path of the item in the collection view.\n\nReturn Value\n\nThe item's identifier, or nil if no item is found at the provided index path.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an item identifier from its corresponding index path with no significant overhead.\n\nSee Also\nIdentifying items\nfunc indexPath(forItemIdentifier: Any) -> IndexPath?\nReturns an index path for the item with the specified identifier in the collection view."
  },
  {
    "title": "isEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/buttonproperties/4176517-isenabled",
    "html": "Discussion\n\nThe default value is true."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3727730",
    "html": "See Also\nComparing errors\nstatic func != (UIAccessibility.GuidedAccessError, UIAccessibility.GuidedAccessError) -> Bool\nAn operator for checking whether two errors are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the error by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the error."
  },
  {
    "title": "sectionIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasourcereference/3801894-sectionidentifier",
    "html": "See Also\nIdentifying sections\nfunc index(forSectionIdentifier: Any) -> Int\nReturns an index for the section with the identifier you specify in the collection view."
  },
  {
    "title": "reservedLayoutSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3601000-reservedlayoutsize",
    "html": "Discussion\n\nUse this property to ensure:\n\nConsistent horizontal alignment for images across adjacent content views, even when the images vary in width.\n\nConsistent height for content views, even when the images vary in height.\n\nThe reserved layout size only affects the amount of space for the image, and its positioning within that space. It doesn’t affect the size of the image.\n\nThe default value is CGSizeZero. A width or height of zero means that the system uses the default behavior for that dimension:\n\nThe system centers symbol images inside a predefined reserved layout size that scales with the content size category.\n\nNonsymbol images use a reserved layout size equal to the actual size of the displayed image.\n\nAt Accessibility Dynamic Type sizes, content views ignore the reserved layout width. Content views ignore the reserved layout height when using the special Accessibility Dynamic Type layout where text wraps around the image.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "cornerRadius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600995-cornerradius",
    "html": "Discussion\n\nIf the image is too small to fit the requested radius, the system adjusts the corner curve and radius.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "maximumSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600998-maximumsize",
    "html": "Discussion\n\nThe default value is CGSizeZero. A width or height of zero means that the system doesn’t constrain the size for that dimension.\n\nIf the image exceeds this size on either dimension, the system reduces the size proportionately, maintaining the aspect ratio.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "UICollectionLayoutListConfiguration.Appearance.sidebarPlain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/sidebarplain",
    "html": "See Also\nList appearances\ncase plain\nThe plain list appearance.\ncase grouped\nThe grouped list appearance.\ncase insetGrouped\nThe inset grouped list appearance.\ncase sidebar\nThe sidebar list appearance."
  },
  {
    "title": "preferredSymbolConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3600999-preferredsymbolconfiguration",
    "html": "See Also\nConfiguring image properties\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "tintColorTransformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3606568-tintcolortransformer",
    "html": "Discussion\n\nIf the value is nil, the configuration uses tintColor without any transformations.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColor: UIColor?\nThe tint color to apply to the image view.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilistcontentconfiguration/imageproperties/3601002-tintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which means that the image view uses its inherited tint color.\n\nSee Also\nConfiguring image properties\nvar preferredSymbolConfiguration: UIImage.SymbolConfiguration?\nThe symbol configuration to use.\nvar tintColorTransformer: UIConfigurationColorTransformer?\nThe color transformer for resolving the tint color.\nfunc resolvedTintColor(for: UIColor) -> UIColor\nGenerates the resolved tint color for the specified tint color, using the tint color and color transformer.\nvar cornerRadius: CGFloat\nThe preferred corner radius, using a continuous corner curve, for the image.\nvar maximumSize: CGSize\nThe maximum size for the image.\nvar reservedLayoutSize: CGSize\nThe layout size that the system reserves for the image, and then centers the image within.\nstatic let standardDimension: CGFloat\nThe system standard layout dimension for reserved layout size.\nvar accessibilityIgnoresInvertColors: Bool\nA Boolean value that determines whether the image inverts its colors when the user turns on the Invert Colors accessibility setting."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellconfigurationstate/dragstate/3600883-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing drag states\nstatic func == (UICellConfigurationState.DragState, UICellConfigurationState.DragState) -> Bool\nAn operator for checking whether two drag states are equal.\nstatic func != (UICellConfigurationState.DragState, UICellConfigurationState.DragState) -> Bool\nAn operator for checking whether two drag states are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "attributedName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2865780-attributedname",
    "html": "See Also\nIdentifying the rotor\nvar name: String\nThe name of the rotor."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176529-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable"
  },
  {
    "title": "maximumSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176531-maximumsize",
    "html": "Discussion\n\nThe default value is CGSizeZero. Setting a width or height of zero makes the size unconstrained on that dimension. If the image exceeds maximumSize size on either dimension, the view reduces its size proportionately, maintaining aspect ratio."
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176528-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible"
  },
  {
    "title": "customMirror | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176526-custommirror",
    "html": "Relationships\nFrom Protocol\nCustomReflectable"
  },
  {
    "title": "cornerRadius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176525-cornerradius",
    "html": "Discussion\n\nThe default value is 0. If the image is too small to fit the requested radius, the view adjusts the corner curve and radius to fit."
  },
  {
    "title": "titleColorForState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1624017-titlecolorforstate",
    "html": "Parameters\nstate\n\nThe state that uses the title color. The possible values are described in UIControlState.\n\nReturn Value\n\nThe color of the title for the specified state.\n\nSee Also\nManaging the title\ntitleLabel\nA view that displays the value of the currentTitle property for a button.\n- titleForState:\nReturns the title associated with the specified state.\n- setTitle:forState:\nSets the title to use for the specified state.\n- attributedTitleForState:\nReturns the styled title associated with the specified state.\n- setAttributedTitle:forState:\nSets the styled title to use for the specified state.\n- setTitleColor:forState:\nSets the color of the title to use for the specified state.\n- titleShadowColorForState:\nReturns the shadow color of the title used for a state.\n- setTitleShadowColor:forState:\nSets the color of the title shadow to use for the specified state."
  },
  {
    "title": "attributedTitleForState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1623991-attributedtitleforstate",
    "html": "Parameters\nstate\n\nThe state that uses the styled title. The possible values are described in UIControlState.\n\nReturn Value\n\nThe title for the specified state. If no attributed title has been set for the specific state, this method returns the attributed title associated with the UIControlStateNormal state. If no attributed title has been set for UIControlStateNormal, returns nil.\n\nSee Also\nManaging the title\ntitleLabel\nA view that displays the value of the currentTitle property for a button.\n- titleForState:\nReturns the title associated with the specified state.\n- setTitle:forState:\nSets the title to use for the specified state.\n- setAttributedTitle:forState:\nSets the styled title to use for the specified state.\n- titleColorForState:\nReturns the title color used for a state.\n- setTitleColor:forState:\nSets the color of the title to use for the specified state.\n- titleShadowColorForState:\nReturns the shadow color of the title used for a state.\n- setTitleShadowColor:forState:\nSets the color of the title shadow to use for the specified state."
  },
  {
    "title": "titleForState: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/1624022-titleforstate",
    "html": "Parameters\nstate\n\nThe state that uses the title. The possible values are described in UIControlState.\n\nReturn Value\n\nThe title for the specified state. If no title has been set for the specific state, this method returns the title associated with the UIControlStateNormal state.\n\nSee Also\nManaging the title\ntitleLabel\nA view that displays the value of the currentTitle property for a button.\n- setTitle:forState:\nSets the title to use for the specified state.\n- attributedTitleForState:\nReturns the styled title associated with the specified state.\n- setAttributedTitle:forState:\nSets the styled title to use for the specified state.\n- titleColorForState:\nReturns the title color used for a state.\n- setTitleColor:forState:\nSets the color of the title to use for the specified state.\n- titleShadowColorForState:\nReturns the shadow color of the title used for a state.\n- setTitleShadowColor:forState:\nSets the color of the title shadow to use for the specified state."
  },
  {
    "title": "UIButtonConfigurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfigurationupdatehandler",
    "html": "Parameters\nbutton\n\nThe button to update.\n\nSee Also\nManaging the appearance with a configuration object\nconfiguration\nThe configuration for the button’s appearance.\nautomaticallyUpdatesConfiguration\nA Boolean value that determines whether the button configuration changes when button’s state changes.\n- setNeedsUpdateConfiguration\nRequests the system update the button configuration.\n- updateConfiguration\nUpdates button configuration in response to button state change.\nconfigurationUpdateHandler\nA closure that executes when the button state changes."
  },
  {
    "title": "currentItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotorsearchpredicate/1649821-currentitem",
    "html": "See Also\nConfiguring search parameters\nvar searchDirection: UIAccessibilityCustomRotor.Direction\nThe direction in which to search.\nenum UIAccessibilityCustomRotor.Direction\nConstants that indicate the search direction."
  },
  {
    "title": "UIButtonConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration",
    "html": "Overview\n\nYou can configure and update a button with a UIButtonConfiguration. A button configuration contains all the customization options available with other methods, such as setTitle:forState:, and can serve as a replacement for those methods. Alternatively, you can use a configuration in combination with these other methods and adopt new button behaviors and appearance without rewriting your customized UIButton code.\n\nTopics\nCreating configurations\n+ plainButtonConfiguration\nCreates a configuration for a button with a transparent background.\n+ grayButtonConfiguration\nCreates a configuration for a button with a gray background.\n+ tintedButtonConfiguration\nCreates a configuration for a button with a tinted background color.\n+ filledButtonConfiguration\nCreates a configuration for a button with a background filled with the button’s tint color.\n+ borderlessButtonConfiguration\nCreates a configuration for a button that has a borderless style.\n+ borderedButtonConfiguration\nCreates a configuration for a button that has a bordered style.\n+ borderedTintedButtonConfiguration\nCreates a configuration for a button that has a tinted, bordered style.\n+ borderedProminentButtonConfiguration\nCreates a configuration for a button that has a prominent, bordered style.\n- updatedConfigurationForButton:\nReturns a copy of the configuration, updated for the given button.\nConfiguring titles\ntitle\nThe text of the title label the button displays.\nsubtitle\nThe text the subtitle label of the button displays.\nattributedTitle\nThe text and style attributes for the button’s title label.\nattributedSubtitle\nThe text and style attributes for the button’s subtitle label.\ntitleTextAttributesTransformer\nA block to update the attributed title when the button state changes.\nsubtitleTextAttributesTransformer\nA block to update the attributed subtitle when the button state changes.\nUIConfigurationTextAttributesTransformer\nDefines a text transformation that can affect the visual appearance of a string.\ntitlePadding\nThe distance between the title and subtitle labels.\ntitleAlignment\nThe text alignment the button uses to lay out the title and subtitle.\nUIButtonConfigurationTitleAlignment\nSpecifies how to align a button’s title and subtitle.\ntitleLineBreakMode\nThe line break mode the button uses to lay out the button’s title.\nsubtitleLineBreakMode\nThe line break mode the button uses to lay out the button’s subtitle.\nConfiguring images\nimage\nThe foreground image the button displays.\nimagePadding\nThe distance between the button’s image and text.\nimagePlacement\nThe edge against which the button places the image.\nimageColorTransformer\nA block that transforms the image color when the button state changes.\npreferredSymbolConfigurationForImage\nA requested configuration object for the button symbol image.\nConfiguring layout\nbuttonSize\nA size that requests a preferred size for the button.\nUIButtonConfigurationSize\nA predefined size for button elements.\ncontentInsets\nThe distance from the button’s content area to its bounds.\n- setDefaultContentInsets\nRestores the default content insets.\nConfiguring button colors\nbaseBackgroundColor\nThe untransformed color for background views.\nbaseForegroundColor\nThe untransformed color for foreground views.\nConfiguring the button background\nbackground\nThe configuration to customize the button background.\ncornerStyle\nThe button style that controls the display behavior of the background corner radius.\nUIButtonConfigurationCornerStyle\nSettings that determine the appearance of the background corner radius.\nConfiguring the indicator\nindicator\nThe style of the indicator that appears on the button.\nUIButtonConfigurationIndicator\nConstants that determine the style of the indicator that appears on a button.\nindicatorColorTransformer\nThe color transformer for resolving the indicator color.\nConfiguring the activity indicator\nshowsActivityIndicator\nA Boolean value that determines whether the button displays an activity indicator instead of an image.\nactivityIndicatorColorTransformer\nThe color transformer for resolving the color of the activity indicator.\nConfiguring selection behavior\nautomaticallyUpdateForSelection\nA Boolean value that determines whether the style automatically updates when the button is in a selected state.\nConfiguring the appearance on macOS\nmacIdiomStyle\nThe style to use when this button appears in macOS.\nUIButtonConfigurationMacIdiomStyle\nThe button style your app uses when running in macOS.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nCreating buttons from a configuration object\n+ buttonWithConfiguration:primaryAction:\nCreates a new button with the specified configuration and registers the primary action event."
  },
  {
    "title": "init(name:view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890958-init",
    "html": "See Also\nInitializing the descriptor\ninit(attributedName: NSAttributedString, point: CGPoint, in: UIView)\nInitializes a new accessibility location descriptor using an attributed string and a specified point in a view.\ninit(name: String, point: CGPoint, in: UIView)\nInitializes a new accessibility location descriptor with a specified point in a view."
  },
  {
    "title": "init(attributedName:point:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890955-init",
    "html": "See Also\nInitializing the descriptor\ninit(name: String, point: CGPoint, in: UIView)\nInitializes a new accessibility location descriptor with a specified point in a view.\ninit(name: String, view: UIView)\nInitializes a new accessibility location descriptor with a specified view’s activation point."
  },
  {
    "title": "attributedName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890960-attributedname",
    "html": "See Also\nGetting the descriptor information\nvar name: String\nReturns the plaintext string representation of the name for the accessibility location descriptor.\nvar point: CGPoint\nReturns the geometric point of interest for the accessibility location descriptor within its associated view and in the coordinate space of the view.\nvar view: UIView?\nReturns the view associated with the accessibility location descriptor."
  },
  {
    "title": "initWithFrame:primaryAction: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3600349-initwithframe",
    "html": "Parameters\nframe\n\nThe frame rectangle for the view, measured in points.\n\nprimaryAction\n\nThe action to perform when the button is selected. The button registers this action for the UIControlEventPrimaryActionTriggered control event and sets the title and image properties to the action’s title and image.\n\nSee Also\nCreating buttons\n- initWithFrame:\nCreates a new button with the specified frame.\n- initWithCoder:\nCreates a new button with data in an unarchiver."
  },
  {
    "title": "buttonWithConfiguration:primaryAction: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3750767-buttonwithconfiguration",
    "html": "Parameters\nconfiguration\n\nThe button configuration.\n\nprimaryAction\n\nThe action to perform for the UIControlEventPrimaryActionTriggered control event.\n\nReturn Value\n\nA new button.\n\nDiscussion\n\nIf the primary action contains a title or an image, this method copies them to the configuration and the button displays them.\n\nSee Also\nCreating buttons from a configuration object\nUIButtonConfiguration\nA configuration that specifies the appearance and behavior of a button and its contents."
  },
  {
    "title": "UIButton.ButtonType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/buttontype",
    "html": "Topics\nConstants\ncase custom\nNo button style.\ncase system\nA system style button, such as those shown in navigation bars and toolbars.\ncase detailDisclosure\nA detail disclosure button.\ncase infoLight\nAn information button that has a light background.\ncase infoDark\nAn information button that has a dark background.\ncase contactAdd\nA contact add button.\ncase plain\nA standard system button without a blurred background view.\ncase close\nA close button to dismiss panels and views.\nstatic var roundedRect: UIButton.ButtonType\nA rounded-rectangle style button.\nRelationships\nConforms To\nSendable\nSee Also\nCreating buttons of a specific type\ninit(type: UIButton.ButtonType)\nCreates and returns a new button of the specified type.\ninit(type: UIButton.ButtonType, primaryAction: UIAction?)\nCreates a new button with the specified type, registers the primary action event, and sets the title and image to the action’s title and image."
  },
  {
    "title": "systemButtonWithImage:target:action: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3295916-systembuttonwithimage",
    "html": "Parameters\nimage\n\nThe image for a system button.\n\ntarget\n\nThe object that receives the action message.\n\naction\n\nThe action to send to target when this item is selected.\n\nDiscussion\n\nThis method is a convenience constructor for creating a UIButtonTypeSystem type button objects with a specific target and action.\n\nSee Also\nCreating system buttons\n+ systemButtonWithPrimaryAction:\nCreates and returns a system type button, registers the primary action event, and sets the title and image to the action’s title and image."
  },
  {
    "title": "buttonWithType:primaryAction: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3600346-buttonwithtype",
    "html": "Parameters\nbuttonType\n\nThe type of button.\n\nprimaryAction\n\nThe action to perform when the button is selected. The button registers this action for the UIControlEventPrimaryActionTriggered control event and sets the title and image properties to the action’s title and image.\n\nSee Also\nCreating buttons of a specific type\n+ buttonWithType:\nCreates and returns a new button of the specified type.\nUIButtonType\nSpecifies the style of a button."
  },
  {
    "title": "systemButtonWithPrimaryAction: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3600350-systembuttonwithprimaryaction",
    "html": "Parameters\nprimaryAction\n\nThe action to perform when the button is selected. The button registers this action for the UIControlEventPrimaryActionTriggered control event and sets the title and image properties to the action’s title and image.\n\nSee Also\nCreating system buttons\n+ systemButtonWithImage:target:action:\nCreates and returns a system type button with specified image, target, and action."
  },
  {
    "title": "view | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890961-view",
    "html": "See Also\nGetting the descriptor information\nvar name: String\nReturns the plaintext string representation of the name for the accessibility location descriptor.\nvar attributedName: NSAttributedString\nReturns the attributed string representation of the name for the accessibility location descriptor.\nvar point: CGPoint\nReturns the geometric point of interest for the accessibility location descriptor within its associated view and in the coordinate space of the view."
  },
  {
    "title": "point | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890956-point",
    "html": "See Also\nGetting the descriptor information\nvar name: String\nReturns the plaintext string representation of the name for the accessibility location descriptor.\nvar attributedName: NSAttributedString\nReturns the attributed string representation of the name for the accessibility location descriptor.\nvar view: UIView?\nReturns the view associated with the accessibility location descriptor."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/3784592",
    "html": "Parameters\nlhs\n\nThe first title alignment to compare.\n\nrhs\n\nThe second title alignment to compare.\n\nReturn Value\n\nA Boolean value set to true if the two title alignments are equal.\n\nSee Also\nComparisons\nstatic func != (UIButton.Configuration.TitleAlignment, UIButton.Configuration.TitleAlignment) -> Bool\nIndicates whether two title alignments are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the title alignment by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the title alignment."
  },
  {
    "title": "UIPointerEffect.TintMode.overlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffect/tintmode/overlay",
    "html": "See Also\nTint Modes\ncase none\nThe view has no tint applied.\ncase underlay\nThe view has a tint underlay."
  },
  {
    "title": "UIWindowScenePresentationStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenepresentationstyle",
    "html": "Topics\nConstants\nUIWindowScenePresentationStyleAutomatic\nThe system determines the most appropriate style.\nUIWindowScenePresentationStyleProminent\nPresents prominently above others in the current space.\nUIWindowScenePresentationStyleStandard\nThe default style of the system.\nSee Also\nSupporting types\nUIWindowSceneActivationAction\nA menu element that requests a window scene.\nUIWindowSceneActivationConfiguration\nAn object that provides configuration options for a window scene request.\nUIWindowSceneActivationInteraction\nAn interaction that facilitates activating a window scene when a user pinches out on the interaction’s view.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\nUIWindowSceneDestructionRequestOptions\nAn object that contains information to use when removing a window scene from your app.\nUIWindowSceneDismissalAnimation\nConstants that indicate the types of animations available for dismissing a scene’s windows.\nUIWindowSceneDragInteraction\nAn interaction you add to a view that enables pan gestures to change the containing window scene’s position.\nUIWindowSceneResizingRestrictions\nBeta"
  },
  {
    "title": "UIWindowSceneActivationConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration",
    "html": "Overview\n\nUse a UIWindowSceneActivationConfiguration object to request a new window scene from the system. An activation configuration requires a NSUserActivity object that represents the scene’s content. You can specify a preferred presentation style for the new scene by including an optional UIWindowSceneActivationRequestOptions object. The system automatically animates the transition to the new scene, but you can customize the transition by providing an optional targeted preview.\n\nTo request scene activation from a view interaction, use an instance of this class with UIWindowSceneActivationInteraction. To request scene activation from a context menu, use an instance of this class with UIWindowSceneActivationAction.\n\nTopics\nCreating an activation configuration\n- initWithUserActivity:\nCreates an activation configuration.\nGetting information about the activation configuration\nuserActivity\nThe user activity used to request a scene.\noptions\nOptions for customizing the scene request.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\npreview\nAn optional targeted preview that the system uses to animate the transition to the new scene.\nRelationships\nInherits From\nNSObject\nSee Also\nSupporting types\nUIWindowSceneActivationAction\nA menu element that requests a window scene.\nUIWindowSceneActivationInteraction\nAn interaction that facilitates activating a window scene when a user pinches out on the interaction’s view.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\nUIWindowSceneDestructionRequestOptions\nAn object that contains information to use when removing a window scene from your app.\nUIWindowSceneDismissalAnimation\nConstants that indicate the types of animations available for dismissing a scene’s windows.\nUIWindowSceneDragInteraction\nAn interaction you add to a view that enables pan gestures to change the containing window scene’s position.\nUIWindowSceneResizingRestrictions\nBeta\nUIWindowScenePresentationStyle\nThe placement of a window scene relative to other scenes in the workspace.\nDeprecated"
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/3784595-hash",
    "html": "Parameters\nhasher\n\nThe hash function to use when combining the components of the title alignment.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.TitleAlignment, UIButton.Configuration.TitleAlignment) -> Bool\nIndicates whether two title alignments are equal.\nstatic func != (UIButton.Configuration.TitleAlignment, UIButton.Configuration.TitleAlignment) -> Bool\nIndicates whether two title alignments are unequal.\nvar hashValue: Int\nThe hashed value of the title alignment."
  },
  {
    "title": "UIWindowSceneActivationRequestOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationrequestoptions",
    "html": "Overview\n\nCreate a UIWindowSceneActivationRequestOptions object before you activate a scene using the activateSceneSessionForRequest:errorHandler: method of UIApplication. Use this object to specify the preferred presentation style of the new scene.\n\nTopics\nPositioning windows\nplacement\nThe placement you prefer when the system activates the window scene.\nUIWindowScenePlacement\nThe placement of a window scene in the workspace.\nUIWindowSceneProminentPlacement\nA placement that indicates the system should present the window more prominently than others in the space.\nUIWindowSceneStandardPlacement\nA placement that indicates the system should present the window using the default style of the system in the space.\nDeprecated\npreferredPresentationStyle\nThe presentation style of the window scene.\nDeprecated\nRelationships\nInherits From\nUISceneActivationRequestOptions\nSee Also\nSupporting types\nUIWindowSceneActivationAction\nA menu element that requests a window scene.\nUIWindowSceneActivationConfiguration\nAn object that provides configuration options for a window scene request.\nUIWindowSceneActivationInteraction\nAn interaction that facilitates activating a window scene when a user pinches out on the interaction’s view.\nUIWindowSceneDestructionRequestOptions\nAn object that contains information to use when removing a window scene from your app.\nUIWindowSceneDismissalAnimation\nConstants that indicate the types of animations available for dismissing a scene’s windows.\nUIWindowSceneDragInteraction\nAn interaction you add to a view that enables pan gestures to change the containing window scene’s position.\nUIWindowSceneResizingRestrictions\nBeta\nUIWindowScenePresentationStyle\nThe placement of a window scene relative to other scenes in the workspace.\nDeprecated"
  },
  {
    "title": "callAsFunction(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiconfigurationtextattributestransformer/3784631-callasfunction",
    "html": "Parameters\ninput\n\nThe current attributes container for a string.\n\nReturn Value\n\nA new, transformed attributes container.\n\nDiscussion\n\nUsing this syntax, you can call the text attributes transformer type as if it were a closure:\n\nvar container = AttributeContainer()\ncontainer.backgroundColor = UIColor.blue\nlet transformer = UIConfigurationTextAttributesTransformer { incoming in\n    var outgoing = incoming\n    outgoing.backgroundColor = incoming.backgroundColor?.withAlphaComponent(0.6)\n    return outgoing\n}\nlet transformed = transformer.callAsFunction(container)\n\n\n"
  },
  {
    "title": "searchTextPositionAdjustment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624297-searchtextpositionadjustment",
    "html": "See Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/3784580-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.MacIdiomStyle, UIButton.Configuration.MacIdiomStyle) -> Bool\nIndicates whether two button styles are equal.\nstatic func != (UIButton.Configuration.MacIdiomStyle, UIButton.Configuration.MacIdiomStyle) -> Bool\nIndicates whether two button styles are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the button style by feeding them into the given hash function."
  },
  {
    "title": "errorUserInfo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3089214-erroruserinfo",
    "html": "See Also\nGetting error information\nstatic var errorDomain: String\nThe Guided Access error domain.\nvar userInfo: [String : Any]\nThe user info dictionary.\nvar errorCode: Int\nAn integer value for the error.\nvar code: Code\nA code that indicates the cause of the error.\nvar localizedDescription: String\nA localized description of the error."
  },
  {
    "title": "UIPointerEffectTintModeOverlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffecttintmode/uipointereffecttintmodeoverlay",
    "html": "See Also\nTint modes\nUIPointerEffectTintModeNone\nThe view has no tint applied.\nUIPointerEffectTintModeUnderlay\nThe view has a tint underlay."
  },
  {
    "title": "visual | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/modifier/3801888-visual",
    "html": "See Also\nNavigation modifier characteristics\nstatic var extend: NSTextSelectionNavigation.Modifier\nThe value that indicates the framework extends the selection by not moving the initial location while in a drag selection.\nstatic var multiple: NSTextSelectionNavigation.Modifier\nThe value that indicates the framework extends the selection visually inside the rectangular area defined by the anchor and dragged positions."
  },
  {
    "title": "searchFieldBackgroundImage(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624288-searchfieldbackgroundimage",
    "html": "Parameters\nstate\n\nA control state.\n\nValid states are normal and disabled.\n\nReturn Value\n\nThe search text field image to use for state.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "inputAccessoryView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624279-inputaccessoryview",
    "html": "Discussion\n\nThe default value is nil. When non-nil, this property represents a custom input accessory view that will be placed onto the search bar’s system-supplied keyboard.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/4044359-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.Indicator, UIButton.Configuration.Indicator) -> Bool\nIndicates whether two indicators are equal.\nstatic func != (UIButton.Configuration.Indicator, UIButton.Configuration.Indicator) -> Bool\nIndicates whether two indicators are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the indicator by feeding them into the hasher."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/4044355",
    "html": "See Also\nComparisons\nstatic func != (UIButton.Configuration.Indicator, UIButton.Configuration.Indicator) -> Bool\nIndicates whether two indicators are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the indicator by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "setSearchFieldBackgroundImage(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624307-setsearchfieldbackgroundimage",
    "html": "Parameters\nbackgroundImage\n\nThe search text field image to use for state.\n\nstate\n\nA control state.\n\nValid states are normal and disabled.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "searchFieldBackgroundPositionAdjustment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624320-searchfieldbackgroundpositionadj",
    "html": "See Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "setShowsScope(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/3152925-setshowsscope",
    "html": "Parameters\nshow\n\nA Boolean value that indicates whether the scope bar is shown.\n\nanimate\n\nA Boolean value that indicates whether the scope bar animates when it appears and disappears.\n\nDiscussion\n\nIf the search bar is owned by a UISearchController, then calling this method implicitly sets the search controller’s automaticallyShowsScopeBar property to false.\n\nSee Also\nConfiguring scope bar buttons\nvar scopeButtonTitles: [String]?\nAn array of strings indicating the titles of the scope buttons.\nvar selectedScopeButtonIndex: Int\nThe index of the selected scope button.\nvar showsScopeBar: Bool\nSpecifies whether the scope bar is displayed."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/1649745-name",
    "html": "See Also\nIdentifying the rotor\nvar attributedName: NSAttributedString\nThe name of the rotor as an attributed string."
  },
  {
    "title": "UIAccessibilityCustomRotor.SystemRotorType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/systemrotortype",
    "html": "Topics\nConstants\ncase none\nNo specific type.\ncase link\nA link.\ncase visitedLink\nA visited link.\ncase heading\nAny heading-level text.\ncase headingLevel1\nA first-level heading.\ncase headingLevel2\nA second-level heading.\ncase headingLevel3\nA third-level heading.\ncase headingLevel4\nA fourth-level heading.\ncase headingLevel5\nA fifth-level heading.\ncase headingLevel6\nA sixth-level heading.\ncase boldText\nAny bold text.\ncase italicText\nAny italicized text.\ncase underlineText\nAny underlined text.\ncase misspelledWord\nA misspelled word.\ncase image\nAn image.\ncase textField\nA text field.\ncase table\nA table of information.\ncase list\nA list of items.\ncase landmark\nA landmark.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the rotor type\nvar systemRotorType: UIAccessibilityCustomRotor.SystemRotorType\nThe type of content that the rotor searches."
  },
  {
    "title": "systemRotorType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2865918-systemrotortype",
    "html": "See Also\nGetting the rotor type\nenum UIAccessibilityCustomRotor.SystemRotorType\nConstants that indicate the type of content that the rotor represents."
  },
  {
    "title": "UIAccessibilityCustomRotor.Direction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/direction",
    "html": "Topics\nConstants\ncase previous\nThe previous search item.\ncase next\nThe next search item.\nRelationships\nConforms To\nSendable\nSee Also\nNavigating to the next item\nvar itemSearchBlock: UIAccessibilityCustomRotor.Search\nThe block for retrieving the next or previous rotor.\ntypealias UIAccessibilityCustomRotor.Search\nThe block type for retrieving the next or previous rotor."
  },
  {
    "title": "UIAccessibilityCustomRotor.Search | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/search",
    "html": "See Also\nNavigating to the next item\nvar itemSearchBlock: UIAccessibilityCustomRotor.Search\nThe block for retrieving the next or previous rotor.\nenum UIAccessibilityCustomRotor.Direction\nConstants that indicate the search direction."
  },
  {
    "title": "itemSearchBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/1649800-itemsearchblock",
    "html": "Discussion\n\nYour implementation of the block facilitates navigation from the current rotor to the next or previous rotor.\n\nSee Also\nNavigating to the next item\ntypealias UIAccessibilityCustomRotor.Search\nThe block type for retrieving the next or previous rotor.\nenum UIAccessibilityCustomRotor.Direction\nConstants that indicate the search direction."
  },
  {
    "title": "init(name:itemSearch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/1649751-init",
    "html": "Parameters\nname\n\nThe name of the rotor.\n\nitemSearchBlock\n\nThe block that provides the next or previous rotor.\n\nReturn Value\n\nAn initialized rotor object.\n\nSee Also\nCreating a rotor object\ninit(attributedName: NSAttributedString, itemSearch: UIAccessibilityCustomRotor.Search)\nCreates a rotor with the specified name and search block.\ninit(systemType: UIAccessibilityCustomRotor.SystemRotorType, itemSearch: UIAccessibilityCustomRotor.Search)\nCreates a rotor for the specified type of item."
  },
  {
    "title": "init(systemType:itemSearch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2866006-init",
    "html": "Parameters\ntype\n\nThe type of content navigated by the rotor. For a list of possible values, see UIAccessibilityCustomRotor.SystemRotorType.\n\nitemSearchBlock\n\nThe block that provides the next or previous rotor for the given type.\n\nReturn Value\n\nAn initialized rotor object.\n\nSee Also\nCreating a rotor object\ninit(attributedName: NSAttributedString, itemSearch: UIAccessibilityCustomRotor.Search)\nCreates a rotor with the specified name and search block.\ninit(name: String, itemSearch: UIAccessibilityCustomRotor.Search)\nCreates a rotor with the specified name and search block."
  },
  {
    "title": "NSTextSelectionNavigation.Destination.document | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/destination/document",
    "html": "See Also\nSelection destinations\ncase character\nThe selection moves to the next extended grapheme cluster boundary.\ncase word\nThe selection moves to the next word boundary ignoring punctuation, whitespace, and format characters preceding the next word.\ncase line\nThe selection moves to the next line boundary.\ncase sentence\nThe selection moves to the next sentence boundary, ignoring punctuation, whitespace, and format characters preceding the next sentence.\ncase paragraph\nThe selection moves to the next paragraph boundary, ignoring the end of line elastic characters and paragraph separators.\ncase container\nThe selection moves to the next container or page boundary after boundary of the current container, ignoring the end of line elastic characters."
  },
  {
    "title": "init(attributedName:itemSearch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotor/2866000-init",
    "html": "Parameters\nattributedName\n\nThe name of the rotor.\n\nitemSearchBlock\n\nThe block that provides the next or previous rotor.\n\nReturn Value\n\nAn initialized rotor object.\n\nSee Also\nCreating a rotor object\ninit(name: String, itemSearch: UIAccessibilityCustomRotor.Search)\nCreates a rotor with the specified name and search block.\ninit(systemType: UIAccessibilityCustomRotor.SystemRotorType, itemSearch: UIAccessibilityCustomRotor.Search)\nCreates a rotor for the specified type of item."
  },
  {
    "title": "UIButton.Configuration.TitleAlignment.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/automatic",
    "html": "See Also\nTitle alignments\ncase center\nAligns the title and subtitle on their horizontal centers.\ncase leading\nAligns the title and subtitle on their leading edges.\ncase trailing\nAligns the title and subtitle on their trailing edges."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/alignment/4176506-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable"
  },
  {
    "title": "NSTextSelectionNavigation.Destination.paragraph | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/destination/paragraph",
    "html": "See Also\nSelection destinations\ncase character\nThe selection moves to the next extended grapheme cluster boundary.\ncase word\nThe selection moves to the next word boundary ignoring punctuation, whitespace, and format characters preceding the next word.\ncase line\nThe selection moves to the next line boundary.\ncase sentence\nThe selection moves to the next sentence boundary, ignoring punctuation, whitespace, and format characters preceding the next sentence.\ncase container\nThe selection moves to the next container or page boundary after boundary of the current container, ignoring the end of line elastic characters.\ncase document\nThe selection moves to the document boundary."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3727733-hashvalue",
    "html": "See Also\nComparing errors\nstatic func == (UIAccessibility.GuidedAccessError, UIAccessibility.GuidedAccessError) -> Bool\nAn operator for checking whether two errors are equal.\nstatic func != (UIAccessibility.GuidedAccessError, UIAccessibility.GuidedAccessError) -> Bool\nAn operator for checking whether two errors are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the error by feeding them into the given hash function."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176530-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable"
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/imageproperties/4176527-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible"
  },
  {
    "title": "UIPointerEffectTintModeUnderlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffecttintmode/uipointereffecttintmodeunderlay",
    "html": "See Also\nTint modes\nUIPointerEffectTintModeNone\nThe view has no tint applied.\nUIPointerEffectTintModeOverlay\nThe view has a tint overlay."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontentunavailableconfiguration/alignment/4176507-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable"
  },
  {
    "title": "searchDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotorsearchpredicate/1649916-searchdirection",
    "html": "See Also\nConfiguring search parameters\nvar currentItem: UIAccessibilityCustomRotorItemResult\nThe current element of the search.\nenum UIAccessibilityCustomRotor.Direction\nConstants that indicate the search direction."
  },
  {
    "title": "UIPointerEffectTintModeNone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipointereffecttintmode/uipointereffecttintmodenone",
    "html": "See Also\nTint modes\nUIPointerEffectTintModeOverlay\nThe view has a tint overlay.\nUIPointerEffectTintModeUnderlay\nThe view has a tint underlay."
  },
  {
    "title": "init(name:point:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890962-init",
    "html": "See Also\nInitializing the descriptor\ninit(attributedName: NSAttributedString, point: CGPoint, in: UIView)\nInitializes a new accessibility location descriptor using an attributed string and a specified point in a view.\ninit(name: String, view: UIView)\nInitializes a new accessibility location descriptor with a specified view’s activation point."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitylocationdescriptor/2890959-name",
    "html": "See Also\nGetting the descriptor information\nvar attributedName: NSAttributedString\nReturns the attributed string representation of the name for the accessibility location descriptor.\nvar point: CGPoint\nReturns the geometric point of interest for the accessibility location descriptor within its associated view and in the coordinate space of the view.\nvar view: UIView?\nReturns the view associated with the accessibility location descriptor."
  },
  {
    "title": "string(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624504-string",
    "html": "Parameters\npoint\n\nA Core Graphics structure representing a point.\n\nReturn Value\n\nA string that corresponds to point. See cgPoint(for:) for a discussion of the string format.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "UIButton.Configuration.CornerStyle.dynamic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/dynamic",
    "html": "See Also\nCorner styles\ncase fixed\nA style that uses the background corner radius without modification.\ncase capsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\ncase large\nA style that ignores the background corner radius and uses a large system-defined corner radius.\ncase medium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\ncase small\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/3600347-initwithcoder",
    "html": "Parameters\ncoder\n\nAn unarchiver object.\n\nSee Also\nCreating buttons\n- initWithFrame:\nCreates a new button with the specified frame.\n- initWithFrame:primaryAction:\nCreates a new button with the specified frame, registers the primary action event, and sets the title and image to the action’s title and image."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/3784591",
    "html": "Parameters\nlhs\n\nThe first title alignment to compare.\n\nrhs\n\nThe second title alignment to compare.\n\nReturn Value\n\nA Boolean value set to true if the two title alignments are not equal.\n\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.TitleAlignment, UIButton.Configuration.TitleAlignment) -> Bool\nIndicates whether two title alignments are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the title alignment by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the title alignment."
  },
  {
    "title": "string(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624476-string",
    "html": "Parameters\nvector\n\nA Core Graphics structure representing a two-dimensional vector.\n\nReturn Value\n\nA string that corresponds to vector. See cgVector(for:) for a discussion of the string format.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "targetElement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult/1649842-targetelement",
    "html": "See Also\nGetting information about the target element\nvar targetRange: UITextRange?\nThe text range (if any) of the target element."
  },
  {
    "title": "accessibilityRowCount() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865811-accessibilityrowcount",
    "html": "Required\n\nReturn Value\n\nThe number of rows.\n\nSee Also\nProviding the table dimensions\nfunc accessibilityColumnCount() -> Int\nReturns the total number of columns in the table.\n\nRequired"
  },
  {
    "title": "localizedDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3089216-localizeddescription",
    "html": "See Also\nGetting error information\nstatic var errorDomain: String\nThe Guided Access error domain.\nvar errorUserInfo: [String : Any]\nThe error user info dictionary.\nvar userInfo: [String : Any]\nThe user info dictionary.\nvar errorCode: Int\nAn integer value for the error.\nvar code: Code\nA code that indicates the cause of the error."
  },
  {
    "title": "errorCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3089211-errorcode",
    "html": "See Also\nGetting error information\nstatic var errorDomain: String\nThe Guided Access error domain.\nvar errorUserInfo: [String : Any]\nThe error user info dictionary.\nvar userInfo: [String : Any]\nThe user info dictionary.\nvar code: Code\nA code that indicates the cause of the error.\nvar localizedDescription: String\nA localized description of the error."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3089210",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nDiscussion\n\nInequality is the inverse of equality. For any values a and b, a != b implies that a == b is false.\n\nThis is the default implementation of the not-equal-to operator (!=) for any type that conforms to Equatable.\n\nSee Also\nComparing errors\nstatic func == (UIAccessibility.GuidedAccessError, UIAccessibility.GuidedAccessError) -> Bool\nAn operator for checking whether two errors are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the error by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the error."
  },
  {
    "title": "code | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3727731-code",
    "html": "See Also\nGetting error information\nstatic var errorDomain: String\nThe Guided Access error domain.\nvar errorUserInfo: [String : Any]\nThe error user info dictionary.\nvar userInfo: [String : Any]\nThe user info dictionary.\nvar errorCode: Int\nAn integer value for the error.\nvar localizedDescription: String\nA localized description of the error."
  },
  {
    "title": "userInfo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3727735-userinfo",
    "html": "See Also\nGetting error information\nstatic var errorDomain: String\nThe Guided Access error domain.\nvar errorUserInfo: [String : Any]\nThe error user info dictionary.\nvar errorCode: Int\nAn integer value for the error.\nvar code: Code\nA code that indicates the cause of the error.\nvar localizedDescription: String\nA localized description of the error."
  },
  {
    "title": "accessibilityRowRange() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatablecell/2865803-accessibilityrowrange",
    "html": "Required\n\nReturn Value\n\nThe visible range of rows.\n\nDiscussion\n\nSet the location of the range to the first row containing the cell. Use the length of the range to specify the number of rows that the cell spans. If you do not implement this method, the system assumes an initial index of NSNotFound and a length of 0.\n\nSee Also\nGetting the rows and columns\nfunc accessibilityColumnRange() -> NSRange\nReturns the columns spanned by the cell.\n\nRequired"
  },
  {
    "title": "UIWindowSceneGeometry | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometry",
    "html": "Topics\nAccessing scene geometry\nsystemFrame\nThe current frame of the scene, in system coordinates.\ninterfaceOrientation\nThe current interface orientation for the scene.\nInstance Properties\nmaximumSize\nBeta\nminimumSize\nBeta\nresizingRestrictions\nBeta\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nWorking with window geometry\neffectiveGeometry\nThe current values for the window scene’s geometry in system space.\n- requestGeometryUpdateWithPreferences:errorHandler:\nRequests an update to the window scene’s geometry using the specified geometry preferences object.\nUIWindowSceneGeometryPreferences\nAn abstract superclass for representing window scene geometry preferences.\nUIWindowSceneGeometryPreferencesIOS\nAn object that represents the geometry preferences for a window scene in an iOS app.\nUIWindowSceneGeometryPreferencesMac\nAn object that represents the geometry preferences for a window scene in an app built with Mac Catalyst.\nUIProposedSceneSizeNoPreference\nBeta"
  },
  {
    "title": "indicator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibuttonconfiguration/4044239-indicator",
    "html": "Discussion\n\nUse this property to control the style of the indicator that appears on the trailing edge of the button. For example, the following code disables the indicator by setting this style to UIButtonConfigurationIndicatorNone.\n\nUIButtonConfiguration *config = UIButtonConfiguration.filledButtonConfiguration;\nconfig.indicator = UIButtonConfigurationIndicatorNone;\n\n\nSee Also\nConfiguring the indicator\nUIButtonConfigurationIndicator\nConstants that determine the style of the indicator that appears on a button.\nindicatorColorTransformer\nThe color transformer for resolving the indicator color."
  },
  {
    "title": "errorDomain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3089212-errordomain",
    "html": "See Also\nGetting error information\nvar errorUserInfo: [String : Any]\nThe error user info dictionary.\nvar userInfo: [String : Any]\nThe user info dictionary.\nvar errorCode: Int\nAn integer value for the error.\nvar code: Code\nA code that indicates the cause of the error.\nvar localizedDescription: String\nA localized description of the error."
  },
  {
    "title": "targetRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult/1649803-targetrange",
    "html": "See Also\nGetting information about the target element\nvar targetElement: NSObjectProtocol?\nThe target element of the rotor."
  },
  {
    "title": "UIWindowSceneActivationAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneactivationaction",
    "html": "Overview\n\nCreate a UIWindowSceneActivationAction object to facilitate activating a new window scene from a menu item. You initialize the action with a closure that the system executes when a user selects the item. The closure should return a UIWindowSceneActivationConfiguration object. You can specify an alternate action to display on iPhone and apps that don’t support multiple windows.\n\nTopics\nCreating an activation action\n+ actionWithIdentifier:alternateAction:configurationProvider:\nCreates an activation action with the specified parameters.\nUIWindowSceneActivationActionConfigurationProvider\nA type alias defining a closure that provides an activation configuration for the activation action.\nGetting information about the activation action\ntitle\nThe action’s title.\nRelationships\nInherits From\nUIAction\nSee Also\nSupporting types\nUIWindowSceneActivationConfiguration\nAn object that provides configuration options for a window scene request.\nUIWindowSceneActivationInteraction\nAn interaction that facilitates activating a window scene when a user pinches out on the interaction’s view.\nUIWindowSceneActivationRequestOptions\nAn object that contains information you want the system to use when activating a new window scene.\nUIWindowSceneDestructionRequestOptions\nAn object that contains information to use when removing a window scene from your app.\nUIWindowSceneDismissalAnimation\nConstants that indicate the types of animations available for dismissing a scene’s windows.\nUIWindowSceneDragInteraction\nAn interaction you add to a view that enables pan gestures to change the containing window scene’s position.\nUIWindowSceneResizingRestrictions\nBeta\nUIWindowScenePresentationStyle\nThe placement of a window scene relative to other scenes in the workspace.\nDeprecated"
  },
  {
    "title": "UIWindowSceneGeometryPreferencesMac | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesmac",
    "html": "Overview\n\nUse this class to express macOS-specific geometry preferences when you call requestGeometryUpdateWithPreferences:errorHandler:.\n\nTopics\nCreating a geometry preferences object\n- initWithSystemFrame:\nInitializes a new window scene geometry preferences object with the specified window frame.\n- init\nInitializes a new window scene geometry preferences object.\nAccessing geometry information\nsystemFrame\nThe preferred frame of the scene, in system coordinates.\nRelationships\nInherits From\nUIWindowSceneGeometryPreferences\nSee Also\nWorking with window geometry\neffectiveGeometry\nThe current values for the window scene’s geometry in system space.\n- requestGeometryUpdateWithPreferences:errorHandler:\nRequests an update to the window scene’s geometry using the specified geometry preferences object.\nUIWindowSceneGeometry\nAn object that provides geometry information about the window scene.\nUIWindowSceneGeometryPreferences\nAn abstract superclass for representing window scene geometry preferences.\nUIWindowSceneGeometryPreferencesIOS\nAn object that represents the geometry preferences for a window scene in an iOS app.\nUIProposedSceneSizeNoPreference\nBeta"
  },
  {
    "title": "UISceneActivationRequestOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisceneactivationrequestoptions",
    "html": "Overview\n\nCreate a UISceneActivationRequestOptions object before you activate or create a scene using the activateSceneSessionForRequest:errorHandler: method of UIApplication. Use this object to specify which of your app’s existing scenes originated the request for the new scene.\n\nTopics\nSpecifying the originator of the request\nrequestingScene\nThe scene object that requested the activation of a different scene.\nSpecifying collection join behavior\ncollectionJoinBehavior\nThe behavior that specifies how a new scene joins a scene collection.\nUISceneCollectionJoinBehavior\nA set of behaviors that specify how a new scene joins a scene collection.\nRelationships\nInherits From\nNSObject\nSee Also\nManaging a scene’s life cycle\n- activateSceneSessionForRequest:errorHandler:\nAsks the system to activate an existing scene or create a new scene and associate it with your app.\n- requestSceneSessionDestruction:options:errorHandler:\nAsks the system to dismiss an existing scene and remove it from the app switcher.\n- requestSceneSessionRefresh:\nAsks the system to update any system UI associated with the specified scene.\nUISceneSessionActivationRequest\nA collection of properties that you use to request activation of a scene.\nUISceneDestructionRequestOptions\nAn object you pass to UIKit to permanently remove a scene and its associated session from your app."
  },
  {
    "title": "requestGeometryUpdateWithPreferences:errorHandler: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscene/3975944-requestgeometryupdatewithprefere",
    "html": "Parameters\ngeometryPreferences\n\nThe geometry information to use for the request.\n\nerrorHandler\n\nAn optional closure to call when an error occurs. The system may call the error handler asynchronously.\n\nDiscussion\n\nUse this method to explicitly request geometry changes to the window scene. The following code shows an example of requesting the window scene to rotate to a landscape orientation in iOS.\n\n// In a view controller, get the window scene.\nguard let windowScene = view.window?.windowScene else { return }\n\n\n// Request the window scene to rotate to any landscape orientation.\nwindowScene.requestGeometryUpdate(.iOS(interfaceOrientations: .landscape)) { error in\n    // Handle denial of request.\n}\n\n\nSee Also\nWorking with window geometry\neffectiveGeometry\nThe current values for the window scene’s geometry in system space.\nUIWindowSceneGeometry\nAn object that provides geometry information about the window scene.\nUIWindowSceneGeometryPreferences\nAn abstract superclass for representing window scene geometry preferences.\nUIWindowSceneGeometryPreferencesIOS\nAn object that represents the geometry preferences for a window scene in an iOS app.\nUIWindowSceneGeometryPreferencesMac\nAn object that represents the geometry preferences for a window scene in an app built with Mac Catalyst.\nUIProposedSceneSizeNoPreference\nBeta"
  },
  {
    "title": "UIButton.Configuration.MacIdiomStyle.borderlessTinted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/borderlesstinted",
    "html": "See Also\nButton styles\ncase automatic\nThe button has a style that matches other content in the button configuration.\ncase bordered\nThe button has a bordered style.\ncase borderless\nThe button has a borderless style."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/3784573",
    "html": "Parameters\nlhs\n\nThe first button style to compare.\n\nrhs\n\nThe second button style to compare.\n\nReturn Value\n\nA Boolean value set to true if the two button styles are not equal.\n\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.MacIdiomStyle, UIButton.Configuration.MacIdiomStyle) -> Bool\nIndicates whether two button styles are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the button style by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the button style."
  },
  {
    "title": "UIButton.Configuration.MacIdiomStyle.bordered | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/bordered",
    "html": "See Also\nButton styles\ncase automatic\nThe button has a style that matches other content in the button configuration.\ncase borderless\nThe button has a borderless style.\ncase borderlessTinted\nThe button has a tinted, borderless style."
  },
  {
    "title": "UIButton.Configuration.MacIdiomStyle.borderless | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/borderless",
    "html": "See Also\nButton styles\ncase automatic\nThe button has a style that matches other content in the button configuration.\ncase bordered\nThe button has a bordered style.\ncase borderlessTinted\nThe button has a tinted, borderless style."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/3784579-hash",
    "html": "Parameters\nhasher\n\nThe hash function to use when comparing the components of the button style.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.MacIdiomStyle, UIButton.Configuration.MacIdiomStyle) -> Bool\nIndicates whether two button styles are equal.\nstatic func != (UIButton.Configuration.MacIdiomStyle, UIButton.Configuration.MacIdiomStyle) -> Bool\nIndicates whether two button styles are unequal.\nvar hashValue: Int\nThe hashed value of the button style."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/3784568-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.CornerStyle, UIButton.Configuration.CornerStyle) -> Bool\nIndicates whether two corner styles are equal.\nstatic func != (UIButton.Configuration.CornerStyle, UIButton.Configuration.CornerStyle) -> Bool\nIndicates whether two corner styles are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the corner style by feeding them into the given hash function."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/3784567-hash",
    "html": "Parameters\nhasher\n\nThe hash function to use when combining the components of the corner style.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.CornerStyle, UIButton.Configuration.CornerStyle) -> Bool\nIndicates whether two corner styles are equal.\nstatic func != (UIButton.Configuration.CornerStyle, UIButton.Configuration.CornerStyle) -> Bool\nIndicates whether two corner styles are unequal.\nvar hashValue: Int\nThe hashed value of the corner style."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/3784563",
    "html": "Parameters\na\n\nThe first corner style to compare.\n\nb\n\nThe second corner style to compare.\n\nReturn Value\n\nA Boolean value set to true if the two styles are equal.\n\nSee Also\nComparisons\nstatic func != (UIButton.Configuration.CornerStyle, UIButton.Configuration.CornerStyle) -> Bool\nIndicates whether two corner styles are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the corner style by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the corner style."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/3784562",
    "html": "Parameters\nlhs\n\nThe first corner style to compare.\n\nrhs\n\nThe second corner style to compare.\n\nReturn Value\n\nA Boolean value set to true if the two styles are not equal.\n\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.CornerStyle, UIButton.Configuration.CornerStyle) -> Bool\nIndicates whether two corner styles are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the corner style by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the corner style."
  },
  {
    "title": "UIButton.Configuration.CornerStyle.small | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/small",
    "html": "See Also\nCorner styles\ncase dynamic\nA style that adjusts the background corner radius for dynamic type.\ncase fixed\nA style that uses the background corner radius without modification.\ncase capsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\ncase large\nA style that ignores the background corner radius and uses a large system-defined corner radius.\ncase medium\nA style that ignores the background corner radius and uses a medium system-defined corner radius."
  },
  {
    "title": "UIButton.Configuration.CornerStyle.medium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/medium",
    "html": "See Also\nCorner styles\ncase dynamic\nA style that adjusts the background corner radius for dynamic type.\ncase fixed\nA style that uses the background corner radius without modification.\ncase capsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\ncase large\nA style that ignores the background corner radius and uses a large system-defined corner radius.\ncase small\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "UIButton.Configuration.CornerStyle.capsule | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/capsule",
    "html": "See Also\nCorner styles\ncase dynamic\nA style that adjusts the background corner radius for dynamic type.\ncase fixed\nA style that uses the background corner radius without modification.\ncase large\nA style that ignores the background corner radius and uses a large system-defined corner radius.\ncase medium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\ncase small\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "UIButton.Configuration.CornerStyle.large | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/large",
    "html": "See Also\nCorner styles\ncase dynamic\nA style that adjusts the background corner radius for dynamic type.\ncase fixed\nA style that uses the background corner radius without modification.\ncase capsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\ncase medium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\ncase small\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/4044358-hash",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.Indicator, UIButton.Configuration.Indicator) -> Bool\nIndicates whether two indicators are equal.\nstatic func != (UIButton.Configuration.Indicator, UIButton.Configuration.Indicator) -> Bool\nIndicates whether two indicators are unequal.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/4044354",
    "html": "See Also\nComparisons\nstatic func == (UIButton.Configuration.Indicator, UIButton.Configuration.Indicator) -> Bool\nIndicates whether two indicators are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the indicator by feeding them into the hasher.\nvar hashValue: Int\nThe hash value."
  },
  {
    "title": "UIButton.Configuration.Indicator.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/automatic",
    "html": "Discussion\n\nWith this behavior, the system automatically shows an indicator if the button shows a menu and has single-selection behavior (when its isContextMenuInteractionEnabled, showsMenuAsPrimaryAction, and changesSelectionAsPrimaryAction properties are true).\n\nSee Also\nIndicator styles\ncase none\nA constant that doesn’t show an indicator.\ncase popup\nA constant that shows a popup-style indicator."
  },
  {
    "title": "UIButton.Configuration.Indicator.popup | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/popup",
    "html": "See Also\nIndicator styles\ncase automatic\nA constant that automatically determines an indicator style according to the button’s properties.\ncase none\nA constant that doesn’t show an indicator."
  },
  {
    "title": "UIButton.Configuration.TitleAlignment.center | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/center",
    "html": "See Also\nTitle alignments\ncase automatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\ncase leading\nAligns the title and subtitle on their leading edges.\ncase trailing\nAligns the title and subtitle on their trailing edges."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/guidedaccesserror/3727732-hash",
    "html": "See Also\nComparing errors\nstatic func == (UIAccessibility.GuidedAccessError, UIAccessibility.GuidedAccessError) -> Bool\nAn operator for checking whether two errors are equal.\nstatic func != (UIAccessibility.GuidedAccessError, UIAccessibility.GuidedAccessError) -> Bool\nAn operator for checking whether two errors are unequal.\nvar hashValue: Int\nThe hashed value of the error."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/modifier/3825589-init",
    "html": "Parameters\nrawValue\n\nAn unsigned integer."
  },
  {
    "title": "NSTextSelectionNavigation.Direction.backward | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/direction/backward",
    "html": "See Also\nNavigation directions\ncase forward\nThe value that represents a logical forward selection based on the flow of text stored in the document.\ncase left\nThe value that represents a selection in the left direction along the current line.\ncase right\nThe value that represents a selection in the right direction along the current line.\ncase up\nThe value that represents a selection in the up direction, above the current line.\ncase down\nThe value that represents a selection in the down direction, below the current line."
  },
  {
    "title": "UIButton.Configuration.Size.medium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/medium",
    "html": "See Also\nButton sizes\ncase large\nDisplays button elements at a large size.\ncase small\nDisplays button elements at a small size.\ncase mini\nDisplays button elements at the smallest size."
  },
  {
    "title": "NSTextSelectionNavigation.Destination.character | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/destination/character",
    "html": "Discussion\n\nWhen the movement direction isn’t along the line (for example up and down for a horizontal line), it moves to the adjacent line using the anchor point instead of resolving to the logical direction. This could result in a location inside a cluster depending on the specific characteristics of a given script.  For example, certain Indic scripts combine characters in specific ways depending on usage and position to form composite characters. The framework returns a location consistent with the rules of the script and the direction of movement.\n\nSee Also\nSelection destinations\ncase word\nThe selection moves to the next word boundary ignoring punctuation, whitespace, and format characters preceding the next word.\ncase line\nThe selection moves to the next line boundary.\ncase sentence\nThe selection moves to the next sentence boundary, ignoring punctuation, whitespace, and format characters preceding the next sentence.\ncase paragraph\nThe selection moves to the next paragraph boundary, ignoring the end of line elastic characters and paragraph separators.\ncase container\nThe selection moves to the next container or page boundary after boundary of the current container, ignoring the end of line elastic characters.\ncase document\nThe selection moves to the document boundary."
  },
  {
    "title": "columnTerminators | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstexttab/optionkey/1528979-columnterminators",
    "html": "Discussion\n\nThe character set is used to determine the terminating character for a tab column. The tab and newline characters are implied even if they don’t exist in the character set. This attribute is optional."
  },
  {
    "title": "pickerView(_:accessibilityAttributedHintForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/2866017-pickerview",
    "html": "Parameters\npickerView\n\nThe picker view object.\n\ncomponent\n\nThe component in the picker view that requires a hint.\n\nReturn Value\n\nThe localized attributed string that describes the results of performing an action on the specified component.\n\nDiscussion\n\nImplement this optional method to ensure that the accessibility element representing the picker view provides an appropriate hint for each component. Your attributed string may include the accessibilitySpeechLanguage attribute, which lets you use different language synthesizers for different parts of the string. The system prefers this method over the pickerView(_:accessibilityHintForComponent:) method.\n\nFor in-depth information on how to create an appropriate hint, see Guidelines for Creating Hints.\n\nSee Also\nProviding descriptive information\nfunc pickerView(UIPickerView, accessibilityLabelForComponent: Int) -> String?\nReturns a string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityAttributedLabelForComponent: Int) -> NSAttributedString?\nReturns an attributed string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityHintForComponent: Int) -> String?\nReturns a string that describes the result of performing an action on the component.\nfunc pickerView(UIPickerView, accessibilityUserInputLabelsForComponent: Int) -> [String]\nfunc pickerView(UIPickerView, accessibilityAttributedUserInputLabelsForComponent: Int) -> [NSAttributedString]"
  },
  {
    "title": "UIButton.Configuration.Size.large | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/large",
    "html": "See Also\nButton sizes\ncase medium\nDisplays button elements at a standard size.\ncase small\nDisplays button elements at a small size.\ncase mini\nDisplays button elements at the smallest size."
  },
  {
    "title": "UIButton.Configuration.CornerStyle.fixed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/cornerstyle/fixed",
    "html": "See Also\nCorner styles\ncase dynamic\nA style that adjusts the background corner radius for dynamic type.\ncase capsule\nA style that ignores the background corner radius and uses a corner radius that generates a capsule.\ncase large\nA style that ignores the background corner radius and uses a large system-defined corner radius.\ncase medium\nA style that ignores the background corner radius and uses a medium system-defined corner radius.\ncase small\nA style that ignores the background corner radius and uses a small system-defined corner radius."
  },
  {
    "title": "accessibilityScrollStatus(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewaccessibilitydelegate/1621055-accessibilityscrollstatus",
    "html": "Parameters\nscrollView\n\nThe scroll view containing the content.\n\nReturn Value\n\nA custom status string for the current offset.\n\nDiscussion\n\nFor example, in a user interface that scrolls through the books in a bookcase, you could return “Books 10 through 20”. By default, VoiceOver announces “Page X of Y” while scrolling.\n\nUse the accessibilityAttributedScrollStatus(for:) method if portions of your string should be spoken in a different language.\n\nSee Also\nProviding descriptive information\nfunc accessibilityAttributedScrollStatus(for: UIScrollView) -> NSAttributedString?\nReturns an attributed string describing the content at the current offset in the scroll view."
  },
  {
    "title": "accessibilityAttributedScrollStatus(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewaccessibilitydelegate/2865789-accessibilityattributedscrollsta",
    "html": "Parameters\nscrollView\n\nThe scroll view containing the content.\n\nReturn Value\n\nAn attributed string describing the content.\n\nDiscussion\n\nYour implementation of this method returns a description of the content that’s currently visible in the scroll view. Use this method (instead of the accessibilityScrollStatus(for:) method) when you want to include attributes that specify which language to use when speaking the text. For more information, see accessibilitySpeechLanguage.\n\nSee Also\nProviding descriptive information\nfunc accessibilityScrollStatus(for: UIScrollView) -> String?\nReturns a string describing the content at the current offset in the scroll view."
  },
  {
    "title": "pickerView(_:accessibilityAttributedLabelForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/2865955-pickerview",
    "html": "Parameters\npickerView\n\nThe picker view object.\n\ncomponent\n\nThe component in the picker view that requires a label.\n\nReturn Value\n\nThe attributed string that identifies the picker view component\n\nDiscussion\n\nUse this method to provide descriptive information for the components of a picker view. Your attributed string may include the accessibilitySpeechLanguage attribute, which lets you use different language synthesizers for different parts of the string. The system prefers this method over the pickerView(_:accessibilityLabelForComponent:) method. For in-depth information on how to create an appropriate descriptive string, see Crafting Useful Labels and Hints.\n\nSee Also\nProviding descriptive information\nfunc pickerView(UIPickerView, accessibilityLabelForComponent: Int) -> String?\nReturns a string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityHintForComponent: Int) -> String?\nReturns a string that describes the result of performing an action on the component.\nfunc pickerView(UIPickerView, accessibilityAttributedHintForComponent: Int) -> NSAttributedString?\nReturns an attributed string that describes the result of performing an action on the specified component.\nfunc pickerView(UIPickerView, accessibilityUserInputLabelsForComponent: Int) -> [String]\nfunc pickerView(UIPickerView, accessibilityAttributedUserInputLabelsForComponent: Int) -> [NSAttributedString]"
  },
  {
    "title": "pickerView(_:accessibilityAttributedUserInputLabelsForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/3197990-pickerview",
    "html": "See Also\nProviding descriptive information\nfunc pickerView(UIPickerView, accessibilityLabelForComponent: Int) -> String?\nReturns a string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityAttributedLabelForComponent: Int) -> NSAttributedString?\nReturns an attributed string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityHintForComponent: Int) -> String?\nReturns a string that describes the result of performing an action on the component.\nfunc pickerView(UIPickerView, accessibilityAttributedHintForComponent: Int) -> NSAttributedString?\nReturns an attributed string that describes the result of performing an action on the specified component.\nfunc pickerView(UIPickerView, accessibilityUserInputLabelsForComponent: Int) -> [String]"
  },
  {
    "title": "accessibilityColumnCount() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865809-accessibilitycolumncount",
    "html": "Required\n\nReturn Value\n\nThe number of columns.\n\nSee Also\nProviding the table dimensions\nfunc accessibilityRowCount() -> Int\nReturns the total number of rows in the table.\n\nRequired"
  },
  {
    "title": "accessibilityHeaderElements(forColumn:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865805-accessibilityheaderelements",
    "html": "Parameters\ncolumn\n\nThe index of the column containing the header.\n\nReturn Value\n\nThe accessibility elements for the specified column header.\n\nSee Also\nProviding header elements\nfunc accessibilityHeaderElements(forRow: Int) -> [UIAccessibilityContainerDataTableCell]?\nReturns the accessibility element for the specified row header."
  },
  {
    "title": "accessibilityHeaderElements(forRow:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865808-accessibilityheaderelements",
    "html": "Parameters\nrow\n\nThe index of the row containing the header.\n\nReturn Value\n\nThe accessibility elements for the specified row header.\n\nSee Also\nProviding header elements\nfunc accessibilityHeaderElements(forColumn: Int) -> [UIAccessibilityContainerDataTableCell]?\nReturns the accessibility element for the specified column header."
  },
  {
    "title": "accessibilityDataTableCellElement(forRow:column:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatable/2865804-accessibilitydatatablecellelemen",
    "html": "Required\n\nParameters\nrow\n\nThe row of the cell.\n\ncolumn\n\nThe column of the cell.\n\nReturn Value\n\nThe accessibility element for the cell."
  },
  {
    "title": "accessibilityColumnRange() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainerdatatablecell/2865807-accessibilitycolumnrange",
    "html": "Required\n\nReturn Value\n\nThe column or columns that the cell spans.\n\nDiscussion\n\nSet the location of the range to the first column containing the cell. Use the length of the range to specify the number of columns that the cell spans. If you do not implement this method, the system assumes an initial index of NSNotFound and a length of 0.\n\nSee Also\nGetting the rows and columns\nfunc accessibilityRowRange() -> NSRange\nReturns the visible range of rows.\n\nRequired"
  },
  {
    "title": "UIContextMenuConfiguration.ElementOrder.priority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextmenuconfiguration/elementorder/priority",
    "html": "Discussion\n\nThis ordering strategy displays the first menu element in the UIMenu closest to the location of the user interaction."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiconfigurationtextattributestransformer/3784632-init",
    "html": "Parameters\ntransform\n\nA closure that defines the text transformation."
  },
  {
    "title": "transform | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiconfigurationtextattributestransformer/3784633-transform",
    "html": "Discussion\n\nThis closure accepts a container with the current text attributes and returns a container with the new text attributes."
  },
  {
    "title": "offset(from:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801847-offset",
    "html": "Required\n\nParameters\nfrom\n\nThe starting location.\n\nto\n\nThe ending location.\n\nSee Also\nFinding specific content in the selection\nfunc location(NSTextLocation, offsetBy: Int) -> NSTextLocation?\nReturns a new location using the location and offset you specify.\n\nRequired\n\nfunc lineFragmentRange(for: CGPoint, inContainerAt: NSTextLocation) -> NSTextRange?\nReturns the range of the line fragment that contains the point you specify.\n\nRequired\n\nfunc textRange(for: NSTextSelection.Granularity, enclosing: NSTextLocation) -> NSTextRange?\nReturns a text range that corresponds to selection granularity of the enclosing location.\n\nRequired"
  },
  {
    "title": "NSTextSelectionNavigation.WritingDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/writingdirection",
    "html": "Topics\nWriting directions\ncase leftToRight\nThe value that defines the left to right writing direction.\ncase rightToLeft\nThe value that defines the right to left writing direction.\nRelationships\nConforms To\nSendable\nSee Also\nChanging the characteristics of the selection\nfunc baseWritingDirection(at: NSTextLocation) -> NSTextSelectionNavigation.WritingDirection\nReturns the base writing direction at the location you specify.\n\nRequired\n\nfunc textLayoutOrientation(at: NSTextLocation) -> NSTextSelectionNavigation.LayoutOrientation\nReturns the layout orientation at the location you specify.\nenum NSTextSelectionNavigation.LayoutOrientation\nValues that describe the possible layout orientations."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/3784596-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.TitleAlignment, UIButton.Configuration.TitleAlignment) -> Bool\nIndicates whether two title alignments are equal.\nstatic func != (UIButton.Configuration.TitleAlignment, UIButton.Configuration.TitleAlignment) -> Bool\nIndicates whether two title alignments are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the title alignment by feeding them into the given hash function."
  },
  {
    "title": "headSegmentExtended | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmentoptions/3824750-headsegmentextended",
    "html": "See Also\nGetting segment options\nstatic var middleFragmentsExcluded: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to enumerate segments in only the first and last line fragments.\nstatic var rangeNotRequired: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework enumerate text segment rectangles, but avoids preparing a range object.\nstatic var tailSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var upstreamAffinity: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to the place the segment based on the upstream affinity for an empty range."
  },
  {
    "title": "init(targetElement:targetRange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycustomrotoritemresult/1649911-init",
    "html": "Parameters\ntargetElement\n\nThe target element of the rotor.\n\ntargetRange\n\nThe text range for an element that contains text, such as a text view.\n\nReturn Value\n\nAn initialized rotor item result."
  },
  {
    "title": "UIAccessibilityContainerType.semanticGroup | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainertype/semanticgroup",
    "html": "Discussion\n\nAssistive technologies might query the accessibility properties set on the container, such as the accessibilityLabel, in order to output appropriate information about the semantic group to the user."
  },
  {
    "title": "UIAccessibilityContainerType.dataTable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontainertype/datatable",
    "html": "Discussion\n\nTo use this container type, you must also implement the UIAccessibilityContainerDataTable protocol."
  },
  {
    "title": "UIWindowSceneGeometryPreferencesIOS | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenegeometrypreferencesios",
    "html": "Overview\n\nUse this class to express iOS-specific geometry preferences when you call requestGeometryUpdateWithPreferences:errorHandler:.\n\nTopics\nCreating a geometry preferences object\n- initWithInterfaceOrientations:\nInitializes a new window scene geometry preferences object with the specified interface orientations.\n- init\nInitializes a new window scene geometry preferences object.\nRequesting preferred interface orientations\ninterfaceOrientations\nThe preferred interface orientations for the scene.\nRelationships\nInherits From\nUIWindowSceneGeometryPreferences\nSee Also\nWorking with window geometry\neffectiveGeometry\nThe current values for the window scene’s geometry in system space.\n- requestGeometryUpdateWithPreferences:errorHandler:\nRequests an update to the window scene’s geometry using the specified geometry preferences object.\nUIWindowSceneGeometry\nAn object that provides geometry information about the window scene.\nUIWindowSceneGeometryPreferences\nAn abstract superclass for representing window scene geometry preferences.\nUIWindowSceneGeometryPreferencesMac\nAn object that represents the geometry preferences for a window scene in an app built with Mac Catalyst.\nUIProposedSceneSizeNoPreference\nBeta"
  },
  {
    "title": "UIButton.Configuration.Indicator.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/indicator/none",
    "html": "See Also\nIndicator styles\ncase automatic\nA constant that automatically determines an indicator style according to the button’s properties.\ncase popup\nA constant that shows a popup-style indicator."
  },
  {
    "title": "fullScreen | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscene/3930381-fullscreen",
    "html": "See Also\nDetermining window behaviors\nwindowingBehaviors\nAn object that specifies the behaviors of the window.\nUISceneWindowingBehaviors\nAn object with properties that determine the behavior of a window."
  },
  {
    "title": "UIWindowSceneDismissalAnimation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenedismissalanimation",
    "html": "Topics\nAnimation styles\nUIWindowSceneDismissalAnimationStandard\nThe standard dismissal animations.\nUIWindowSceneDismissalAnimationCommit\nAnimations to use when saving changes.\nUIWindowSceneDismissalAnimationDecline\nAnimations to use when declining changes.\nSee Also\nConfiguring the dismissal animation\nwindowDismissalAnimation\nThe animations to use when dismissing the scene's windows."
  },
  {
    "title": "UIAccessibilityVoiceOverStatusChanged | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilityvoiceoverstatuschanged",
    "html": "Deprecated\n\nUse voiceOverStatusDidChangeNotification instead.\n\nDiscussion\n\nThis notification doesn't include a parameter.\n\nUse this notification to customize your application’s user interface (UI) for VoiceOver users. For example, if you display a UI element that briefly overlays other parts of your UI, you can make the display persistent for VoiceOver users, but allow it to disappear as designed for users who are not using VoiceOver. You can also use the isVoiceOverRunning function to determine whether VoiceOver is currently running.\n\nObserve this notification using the default notification center.\n\nSee Also\nVoiceOver\nstatic var announcement: UIAccessibility.Notification\nA notification that an app posts when it needs to convey an announcement to the assistive app.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops.\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement."
  },
  {
    "title": "layoutOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/deprecated_symbols/1807703-layoutoptions",
    "html": "Overview\n\nThis property is part of the NSGlyphStorage protocol, for use by the glyph generator. It enables the glyph generator to ask which options the layout manager requests.\n\nSee Also\nProperties\nvar hyphenationFactor: CGFloat\nThe threshold controlling when hyphenation is done.\nDeprecated\nattributedString\nThe text storage object from which the NSGlyphGenerator object procures characters for glyph generation.\nvar usesScreenFonts: Bool\nA Boolean that controls using screen fonts to calculate layout and display text.\nDeprecated"
  },
  {
    "title": "newsstandContentAvailability | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiremotenotificationtype/1622977-newsstandcontentavailability",
    "html": "Deprecated\n\nRegister for user notification settings using the registerUserNotificationSettings(_:) method instead"
  },
  {
    "title": "cgPoint(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624477-cgpoint",
    "html": "Parameters\nstring\n\nA string whose contents are of the form “{x,y}”, where x is the x coordinate and y is the y coordinate. The x and y values can represent integer or float values. An example of a valid string is @”{3.0,2.5}”. The string is not localized, so items are always separated with a comma.\n\nReturn Value\n\nA Core Graphics structure that represents a point. If the string is not well-formed, the function returns CGPointZero.\n\nDiscussion\n\nIn general, you should use this function only to convert strings that were previously created using the string(for:) function.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "string(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624497-string",
    "html": "Parameters\ntransform\n\nA Core Graphics affine transform structure.\n\nReturn Value\n\nA string that corresponds to transform. See cgAffineTransform(for:) for a discussion of the string format.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "imageWithTintColor: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3327300-imagewithtintcolor",
    "html": "Parameters\ncolor\n\nThe tint color to apply to the image.\n\nReturn Value\n\nA new version of the image that incorporates the specified tint color.\n\nDiscussion\n\nFor bitmap images, this method draws the background tint color followed by the image contents using the kCGBlendModeDestinationIn mode. For symbol images, this method returns an image that always uses the specified tint color.\n\nThe new image uses the same rendering mode as the original image.\n\nSee Also\nTinting the image\n- imageWithTintColor:renderingMode:\nReturns a new version of the image with a tint color that uses the specified rendering mode."
  },
  {
    "title": "UITextAttributeTextShadowColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextattributetextshadowcolor",
    "html": "Deprecated\n\nInstead, use NSShadowAttributeName with an NSShadow object as the value.\n\nDiscussion\n\nThe corresponding value is an instance of UIColor.\n\nSee Also\nStrings\nNSStringDrawingContext\nAn object that manages metrics for drawing attributed strings.\nNSStringDrawingOptions\nConstants that specify the rendering options for drawing a string.\nUIBaselineAdjustment\nVertical adjustment options.\nUILineBreakMode\nOptions for wrapping and truncating text.\nDeprecated\nUITextAlignment\nOptions for aligning text horizontally.\nDeprecated\nUITextAttributeFont\nThe key to the font in a text attributes dictionary.\nDeprecated\nUITextAttributeTextColor\nThe key to the text color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowOffset\nThe key to the offset for the text shadow in a text attributes dictionary.\nDeprecated"
  },
  {
    "title": "UILineBreakMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilinebreakmode",
    "html": "Deprecated\n\nUse NSLineBreakMode instead.\n\nOverview\n\nFor methods that draw at a specified point (as opposed to those that draw in a rectangular region), these options specify the clipping behavior that UIKit applies to the string.\n\nTopics\nDeprecated constants\nUILineBreakModeWordWrap\nWrap or clip the string only at word boundaries.\nUILineBreakModeCharacterWrap\nWrap or clip the string at the closest character boundary.\nUILineBreakModeClip\nClip the text when reaching the end of the drawing rectangle.\nUILineBreakModeHeadTruncation\nTruncate text (as necessary) from the beginning of the line.\nUILineBreakModeTailTruncation\nTruncate text (as necessary) from the end of the line.\nUILineBreakModeMiddleTruncation\nTruncate text (as necessary) from the middle of the line.\nSee Also\nStrings\nNSStringDrawingContext\nAn object that manages metrics for drawing attributed strings.\nNSStringDrawingOptions\nConstants that specify the rendering options for drawing a string.\nUIBaselineAdjustment\nVertical adjustment options.\nUITextAlignment\nOptions for aligning text horizontally.\nDeprecated\nUITextAttributeFont\nThe key to the font in a text attributes dictionary.\nDeprecated\nUITextAttributeTextColor\nThe key to the text color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowColor\nThe key to the text shadow color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowOffset\nThe key to the offset for the text shadow in a text attributes dictionary.\nDeprecated"
  },
  {
    "title": "UITextAlignmentCenter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextalignment/uitextalignmentcenter",
    "html": "Deprecated\n\nUse NSTextAlignmentCenter instead.\n\nSee Also\nDeprecated constants\nUITextAlignmentLeft\nAlign text along the left edge.\nDeprecated\nUITextAlignmentRight\nAlign text along the right edge.\nDeprecated"
  },
  {
    "title": "configurationWithScale: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294244-configurationwithscale",
    "html": "Parameters\nscale\n\nThe symbol image scale variant to select. Use this parameter to make the image appear bigger or smaller than surrounding content. For a list of possible values, see UIImageSymbolScale.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "NSUnderlineStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsunderlinestyle",
    "html": "Overview\n\nUse these constants to specify the underlineStyle and strikethroughStyle attributes of an attributed string.\n\nTopics\nConstants\nstatic var single: NSUnderlineStyle\nDraw a single line.\nstatic var thick: NSUnderlineStyle\nDraw a thick line.\nstatic var double: NSUnderlineStyle\nDraw a double line.\nstatic var patternDot: NSUnderlineStyle\nDraw a line of dots.\nstatic var patternDash: NSUnderlineStyle\nDraw a line of dashes.\nstatic var patternDashDot: NSUnderlineStyle\nDraw a line of alternating dashes and dots.\nstatic var patternDashDotDot: NSUnderlineStyle\nDraw a line of alternating dashes and two dots.\nstatic var byWord: NSUnderlineStyle\nDraw the line only beneath or through words, not whitespace.\nInitializers\ninit(rawValue: Int)\nCreates an underline style with the specified raw value.\ninit(Text.LineStyle)\nRelationships\nConforms To\nHashable\nOptionSet\nSendable\nSee Also\nSpecifying Text Attributes\nstruct NSAttributedString.Key\nAttributes that you can apply to text in an attributed string.\nstruct NSAttributedString.TextEffectStyle\nConstants for the text effect attribute key.\nenum NSAttributedString.SpellingState\nConstants for the spelling state attribute key.\nenum NSWritingDirectionFormatType\nConstants for the writing direction attribute key.\nstruct InlinePresentationIntent\nA type that defines presentation intent for runs of characters for traits like emphasis, strikethrough, and code voice."
  },
  {
    "title": "UIButton.Configuration.TitleAlignment.trailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/trailing",
    "html": "See Also\nTitle alignments\ncase automatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\ncase center\nAligns the title and subtitle on their horizontal centers.\ncase leading\nAligns the title and subtitle on their leading edges."
  },
  {
    "title": "UIButton.Configuration.MacIdiomStyle.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/macidiomstyle/automatic",
    "html": "See Also\nButton styles\ncase bordered\nThe button has a bordered style.\ncase borderless\nThe button has a borderless style.\ncase borderlessTinted\nThe button has a tinted, borderless style."
  },
  {
    "title": "extend | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/modifier/3801886-extend",
    "html": "See Also\nNavigation modifier characteristics\nstatic var multiple: NSTextSelectionNavigation.Modifier\nThe value that indicates the framework extends the selection visually inside the rectangular area defined by the anchor and dragged positions.\nstatic var visual: NSTextSelectionNavigation.Modifier\nThe value that indicates the framework extends the selection visually inside the rectangular area defined by the anchor and drag positions."
  },
  {
    "title": "multiple | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/modifier/3801887-multiple",
    "html": "Discussion\n\nThis produces an NSTextSelection per line.\n\nSee Also\nNavigation modifier characteristics\nstatic var extend: NSTextSelectionNavigation.Modifier\nThe value that indicates the framework extends the selection by not moving the initial location while in a drag selection.\nstatic var visual: NSTextSelectionNavigation.Modifier\nThe value that indicates the framework extends the selection visually inside the rectangular area defined by the anchor and drag positions."
  },
  {
    "title": "NSTextSelectionNavigation.Destination.sentence | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/destination/sentence",
    "html": "See Also\nSelection destinations\ncase character\nThe selection moves to the next extended grapheme cluster boundary.\ncase word\nThe selection moves to the next word boundary ignoring punctuation, whitespace, and format characters preceding the next word.\ncase line\nThe selection moves to the next line boundary.\ncase paragraph\nThe selection moves to the next paragraph boundary, ignoring the end of line elastic characters and paragraph separators.\ncase container\nThe selection moves to the next container or page boundary after boundary of the current container, ignoring the end of line elastic characters.\ncase document\nThe selection moves to the document boundary."
  },
  {
    "title": "NSTextSelectionNavigation.Destination.container | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/destination/container",
    "html": "See Also\nSelection destinations\ncase character\nThe selection moves to the next extended grapheme cluster boundary.\ncase word\nThe selection moves to the next word boundary ignoring punctuation, whitespace, and format characters preceding the next word.\ncase line\nThe selection moves to the next line boundary.\ncase sentence\nThe selection moves to the next sentence boundary, ignoring punctuation, whitespace, and format characters preceding the next sentence.\ncase paragraph\nThe selection moves to the next paragraph boundary, ignoring the end of line elastic characters and paragraph separators.\ncase document\nThe selection moves to the document boundary."
  },
  {
    "title": "NSTextSelectionNavigation.Direction.left | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/direction/left",
    "html": "See Also\nNavigation directions\ncase forward\nThe value that represents a logical forward selection based on the flow of text stored in the document.\ncase backward\nThe value that represents a backward selection based on the flow of text stored in the document.\ncase right\nThe value that represents a selection in the right direction along the current line.\ncase up\nThe value that represents a selection in the up direction, above the current line.\ncase down\nThe value that represents a selection in the down direction, below the current line."
  },
  {
    "title": "NSTextSelectionNavigation.Direction.down | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/direction/down",
    "html": "See Also\nNavigation directions\ncase forward\nThe value that represents a logical forward selection based on the flow of text stored in the document.\ncase backward\nThe value that represents a backward selection based on the flow of text stored in the document.\ncase left\nThe value that represents a selection in the left direction along the current line.\ncase right\nThe value that represents a selection in the right direction along the current line.\ncase up\nThe value that represents a selection in the up direction, above the current line."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/3784584-hash",
    "html": "Parameters\nhasher\n\nThe hash function to use when combining the components of the button size.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.Size, UIButton.Configuration.Size) -> Bool\nIndicates whether two button sizes are equal.\nstatic func != (UIButton.Configuration.Size, UIButton.Configuration.Size) -> Bool\nIndicates whether two button sizes are unequal.\nvar hashValue: Int\nThe hashed value of the button size."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/3784583",
    "html": "Parameters\nlhs\n\nThe first button size to compare.\n\nrhs\n\nThe second button size to compare.\n\nReturn Value\n\nA Boolean value set to true if the two button sizes are equal.\n\nSee Also\nComparisons\nstatic func != (UIButton.Configuration.Size, UIButton.Configuration.Size) -> Bool\nIndicates whether two button sizes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the button size by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the button size."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/3784582",
    "html": "Parameters\nlhs\n\nThe first button size to compare.\n\nrhs\n\nThe second button size to compare.\n\nReturn Value\n\nA Boolean value set to true if the two button sizes are not equal.\n\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.Size, UIButton.Configuration.Size) -> Bool\nIndicates whether two button sizes are equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the button size by feeding them into the given hash function.\nvar hashValue: Int\nThe hashed value of the button size."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/3784585-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparisons\nstatic func == (UIButton.Configuration.Size, UIButton.Configuration.Size) -> Bool\nIndicates whether two button sizes are equal.\nstatic func != (UIButton.Configuration.Size, UIButton.Configuration.Size) -> Bool\nIndicates whether two button sizes are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the button size by feeding them into the given hash function."
  },
  {
    "title": "NSTextSelectionNavigation.Direction.forward | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/direction/forward",
    "html": "See Also\nNavigation directions\ncase backward\nThe value that represents a backward selection based on the flow of text stored in the document.\ncase left\nThe value that represents a selection in the left direction along the current line.\ncase right\nThe value that represents a selection in the right direction along the current line.\ncase up\nThe value that represents a selection in the up direction, above the current line.\ncase down\nThe value that represents a selection in the down direction, below the current line."
  },
  {
    "title": "NSTextSelectionNavigation.Direction.up | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/direction/up",
    "html": "See Also\nNavigation directions\ncase forward\nThe value that represents a logical forward selection based on the flow of text stored in the document.\ncase backward\nThe value that represents a backward selection based on the flow of text stored in the document.\ncase left\nThe value that represents a selection in the left direction along the current line.\ncase right\nThe value that represents a selection in the right direction along the current line.\ncase down\nThe value that represents a selection in the down direction, below the current line."
  },
  {
    "title": "pixelsPerInch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagereader/configuration/4213106-pixelsperinch",
    "html": "Discussion\n\nThe default value is 0 which indicates a 1.0 scale.\n\nSee Also\nConfiguration properties\nvar prefersHighDynamicRange: Bool\nA Boolean value that indicates whether the image reader should decode the image as HDR when the type is capable of decoding in either SDR or HDR.\nvar preparesImagesForDisplay: Bool\nA Boolean value that indicates whether the image reader prepares the image for display.\nvar preferredThumbnailSize: CGSize\nThe thumbnail size in pixels that the image reader makes the image."
  },
  {
    "title": "UIButton.Configuration.Size.mini | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/mini",
    "html": "See Also\nButton sizes\ncase large\nDisplays button elements at a large size.\ncase medium\nDisplays button elements at a standard size.\ncase small\nDisplays button elements at a small size."
  },
  {
    "title": "standard() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneplacement/4176658-standard",
    "html": "Return Value\n\nA placement that indicates the system should present the window using the default style of the system in the space.\n\nSee Also\nPositioning windows\nstatic func prominent() -> Self\nCreates a placement that indicates the system should present the window more prominently than others in the space.\nAvailable when Self is UIWindowSceneProminentPlacement."
  },
  {
    "title": "pickerView(_:accessibilityLabelForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/1621052-pickerview",
    "html": "Parameters\npickerView\n\nThe picker view object.\n\ncomponent\n\nThe component in the picker view that requires a label.\n\nReturn Value\n\nA succinct label, in a localized string, that identifies the picker view component.\n\nDiscussion\n\nImplement this optional method to ensure that the accessibility element representing the picker view provides an appropriate label for each component. The system prefers the pickerView(_:accessibilityAttributedLabelForComponent:) method over this one. For in-depth information on how to create an appropriate label, see Crafting Useful Labels and Hints.\n\nSee Also\nProviding descriptive information\nfunc pickerView(UIPickerView, accessibilityAttributedLabelForComponent: Int) -> NSAttributedString?\nReturns an attributed string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityHintForComponent: Int) -> String?\nReturns a string that describes the result of performing an action on the component.\nfunc pickerView(UIPickerView, accessibilityAttributedHintForComponent: Int) -> NSAttributedString?\nReturns an attributed string that describes the result of performing an action on the specified component.\nfunc pickerView(UIPickerView, accessibilityUserInputLabelsForComponent: Int) -> [String]\nfunc pickerView(UIPickerView, accessibilityAttributedUserInputLabelsForComponent: Int) -> [NSAttributedString]"
  },
  {
    "title": "UIButton.Configuration.Size.small | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/size/small",
    "html": "See Also\nButton sizes\ncase large\nDisplays button elements at a large size.\ncase medium\nDisplays button elements at a standard size.\ncase mini\nDisplays button elements at the smallest size."
  },
  {
    "title": "pickerView(_:accessibilityUserInputLabelsForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/3197991-pickerview",
    "html": "See Also\nProviding descriptive information\nfunc pickerView(UIPickerView, accessibilityLabelForComponent: Int) -> String?\nReturns a string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityAttributedLabelForComponent: Int) -> NSAttributedString?\nReturns an attributed string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityHintForComponent: Int) -> String?\nReturns a string that describes the result of performing an action on the component.\nfunc pickerView(UIPickerView, accessibilityAttributedHintForComponent: Int) -> NSAttributedString?\nReturns an attributed string that describes the result of performing an action on the specified component.\nfunc pickerView(UIPickerView, accessibilityAttributedUserInputLabelsForComponent: Int) -> [NSAttributedString]"
  },
  {
    "title": "pickerView(_:accessibilityHintForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewaccessibilitydelegate/1621056-pickerview",
    "html": "Parameters\npickerView\n\nThe picker view object.\n\ncomponent\n\nThe component in the picker view that requires a hint.\n\nReturn Value\n\nThe localized string that describes the results of performing an action on the specified component.\n\nDiscussion\n\nImplement this optional method to ensure that the accessibility element representing the picker view provides an appropriate hint for each component. The system prefers the pickerView(_:accessibilityAttributedHintForComponent:) method over this one. For in-depth information on how to create an appropriate hint, see Guidelines for Creating Hints.\n\nSee Also\nProviding descriptive information\nfunc pickerView(UIPickerView, accessibilityLabelForComponent: Int) -> String?\nReturns a string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityAttributedLabelForComponent: Int) -> NSAttributedString?\nReturns an attributed string that identifies the picker view component.\nfunc pickerView(UIPickerView, accessibilityAttributedHintForComponent: Int) -> NSAttributedString?\nReturns an attributed string that describes the result of performing an action on the specified component.\nfunc pickerView(UIPickerView, accessibilityUserInputLabelsForComponent: Int) -> [String]\nfunc pickerView(UIPickerView, accessibilityAttributedUserInputLabelsForComponent: Int) -> [NSAttributedString]"
  },
  {
    "title": "UIContextMenuConfiguration.ElementOrder.fixed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextmenuconfiguration/elementorder/fixed",
    "html": "Discussion\n\nThis ordering strategy displays the menu elements in the order they appear in the children array of the UIMenu."
  },
  {
    "title": "textStorage(_:didProcessEditing:range:changeInLength:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1534375-textstorage",
    "html": "Parameters\ntextStorage\n\nThe text storage object processing edits.\n\neditedMask\n\nThe types of edits done: editedAttributes, editedCharacters, or both.\n\neditedRange\n\nThe range in the original string (before the edit).\n\ndelta\n\nThe length delta for the editing changes.\n\nDiscussion\n\nSent inside processEditing() right before notifying layout managers. Delegates can change the attributes.\n\nThe delegate can verify the final state of the text storage object; it can’t change the text storage object’s characters without leaving it in an inconsistent state, but if necessary it can change attributes. Note that even in this case it’s possible to put a text storage object into an inconsistent state—for example, by changing the font of a range to one that doesn’t support the characters in that range, such as using a Latin font for Kanji text.\n\nSee Also\nProcessing edit actions\nfunc textStorage(NSTextStorage, willProcessEditing: NSTextStorage.EditActions, range: NSRange, changeInLength: Int)\nThe method the framework calls when a text storage object is about to process edits."
  },
  {
    "title": "textStorage(_:willProcessEditing:range:changeInLength:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1534795-textstorage",
    "html": "Parameters\ntextStorage\n\nThe text storage object processing edits.\n\neditedMask\n\nThe types of edits to do: editedAttributes, editedCharacters, or both.\n\neditedRange\n\nThe range in the original string (before the edit).\n\ndelta\n\nThe length delta for the editing changes.\n\nDiscussion\n\nSent inside processEditing() right before fixing attributes. Delegates can change the characters or attributes.\n\nThe delegate can verify the changed state of the text storage object and make changes to the text storage object’s characters or attributes to enforce whatever constraints it establishes. Programmatic changes don’t cause the object to send this message.\n\nSee Also\nProcessing edit actions\nfunc textStorage(NSTextStorage, didProcessEditing: NSTextStorage.EditActions, range: NSRange, changeInLength: Int)\nThe method the framework calls when a text storage object has finished processing edits.\nRelated Documentation\nCocoa Scripting Guide\nText System Storage Layer Overview"
  },
  {
    "title": "controlCharacter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/glyphproperty/1403023-controlcharacter",
    "html": "Discussion\n\nControl character such as tab, attachment, and so on, that has associated special behavior.\n\nSee Also\nGlyph properties\nstatic var null: NSLayoutManager.GlyphProperty\nThe null glyph, which the layout manager ignores.\nstatic var elastic: NSLayoutManager.GlyphProperty\nA glyph with a changeable width, such as a white space character.\nstatic var nonBaseCharacter: NSLayoutManager.GlyphProperty\nA glyph that combines several properties."
  },
  {
    "title": "NSTextLayoutManager.SegmentType.selection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmenttype/selection",
    "html": "Discussion\n\nThis segment type extends the last segment in a line fragment to the trailing edge if continuing to the next line.\n\nSee Also\nKinds of text selection segments\ncase highlight\nThe segment behavior suitable for highlighting.\ncase standard\nThe standard segment, matching the typographic bounds of the range."
  },
  {
    "title": "null | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/glyphproperty/1402918-null",
    "html": "See Also\nGlyph properties\nstatic var controlCharacter: NSLayoutManager.GlyphProperty\nA glyph representing a control character.\nstatic var elastic: NSLayoutManager.GlyphProperty\nA glyph with a changeable width, such as a white space character.\nstatic var nonBaseCharacter: NSLayoutManager.GlyphProperty\nA glyph that combines several properties."
  },
  {
    "title": "configurationPreferringMonochrome | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3967519-configurationpreferringmonochrom",
    "html": "Return Value\n\nA symbol configuration that acquires the monochrome variant of a symbol.\n\nSee Also\nCreating a color configuration\n+ configurationWithHierarchicalColor:\nCreates a color configuration with a color scheme that originates from one color.\n+ configurationWithPaletteColors:\nCreates a color configuration with a color scheme from a palette of multiple colors.\n+ configurationPreferringMulticolor\nCreates a color configuration that specifies that the symbol image uses its multicolor variant, if one exists."
  },
  {
    "title": "cgVector(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624513-cgvector",
    "html": "Parameters\nstring\n\nA string whose contents are of the form “{dx, dy}”, where dx is the x-coordinate of the vector and dy is the y-coordinate. The dx and dy values can be integer or float values. An example of a valid string is @”{3.0,2.5}”. The string is not localized, so items are always separated with a comma.\n\nReturn Value\n\nA Core Graphics structure that represents a two-dimensional vector. If the string is not well-formed, the function returns a vector whose dx and dy values are 0.\n\nDiscussion\n\nIn general, you should use this function only to convert strings that were previously created using the string(for:) function.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "cgRect(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624508-cgrect",
    "html": "Parameters\nstring\n\nA string whose contents are of the form “{{x,y},{w, h}}”, where x is the x coordinate, y is the y coordinate, w is the width, and h is the height. These components can represent integer or float values. An example of a valid string is @”{{3,2},{4,5}}”. The string is not localized, so items are always separated with a comma.\n\nReturn Value\n\nA Core Graphics structure that represents a rectangle. If the string is not well-formed, the function returns CGRectZero.\n\nDiscussion\n\nIn general, you should use this function only to convert strings that were previously created using the string(for:) function.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "string(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624514-string",
    "html": "Parameters\nsize\n\nA Core Graphics structure representing a size.\n\nReturn Value\n\nA string that corresponds to size. See cgSize(for:) for a discussion of the string format.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "configurationWithPointSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294241-configurationwithpointsize",
    "html": "Parameters\npointSize\n\nThe system font point size to use for the configuration.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "cgSize(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624484-cgsize",
    "html": "Parameters\nstring\n\nA string whose contents are of the form “{w, h}”, where w is the width and h is the height. The w and h values can be integer or float values. An example of a valid string is @”{3.0,2.5}”. The string is not localized, so items are always separated with a comma.\n\nReturn Value\n\nA Core Graphics structure that represents a size. If the string is not well-formed, the function returns CGSizeZero.\n\nDiscussion\n\nIn general, you should use this function only to convert strings that were previously created using the string(for:) function.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "glyph(at:isValidIndex:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/1403120-glyph",
    "html": "Deprecated\n\nUse cgGlyph(at:isValidIndex:) instead.\n\nParameters\nglyphIndex\n\nThe index of the glyph to be returned.\n\nisValidIndex\n\nIf not NULL, on output, true if the requested index is in range; otherwise false.\n\nReturn Value\n\nThe glyph at the requested index, or NSNullGlyph if the requested index is out of the range {0, numberOfGlyphs}.\n\nDiscussion\n\nIf noncontiguous layout is not enabled, this method causes generation of all glyphs up to and including glyphIndex.\n\nSee Also\nMethods\nfunc showCGGlyphs(UnsafePointer<CGGlyph>, positions: UnsafePointer<CGPoint>, count: Int, font: UIFont, matrix: CGAffineTransform, attributes: [NSAttributedString.Key : Any], in: CGContext)\nRenders the glyphs at the specified positions, using the specified attributes.\nDeprecated\nfunc invalidateGlyphs(onLayoutInvalidationForGlyphRange: NSRange)\nSpecifies explicitly when portions of the glyph stream depend on layout.\nDeprecated\nfunc invalidateLayout(forCharacterRange: NSRange, isSoft: Bool, actualCharacterRange: NSRangePointer?)\nInvalidates the layout information for the glyphs mapped to the given range of characters.\nDeprecated\nfunc textStorage(NSTextStorage, edited: Int, range: NSRange, changeInLength: Int, invalidatedRange: NSRange)\nInvalidates glyph and layout information for a portion of the text in the given text storage object.\nDeprecated\nfunc insertGlyph(NSGlyph, atGlyphIndex: Int, characterIndex: Int)\nInserts a single glyph into the glyph stream at the given index and maps it to the character at the given character index.\nDeprecated\nfunc insertGlyphs(UnsafePointer<NSGlyph>, length: Int, forStartingGlyphAt: Int, characterIndex: Int)\nInserts the given glyphs into the glyph cache at the given index and maps them to characters beginning at the given character index.\nDeprecated\nfunc glyph(at: Int) -> CGGlyph\nReturns the glyph at the specified index.\nDeprecated\nfunc replaceGlyph(at: Int, withGlyph: NSGlyph)\nReplaces the glyph at the given index with a new glyph.\nDeprecated\nfunc getGlyphs(UnsafeMutablePointer<NSGlyph>?, range: NSRange) -> Int\nFills the passed-in buffer with a sequence of glyphs.\nDeprecated\nfunc getGlyphs(in: NSRange, glyphs: UnsafeMutablePointer<NSGlyph>?, characterIndexes: UnsafeMutablePointer<Int>?, glyphInscriptions: UnsafeMutablePointer<NSGlyphInscription>?, elasticBits: UnsafeMutablePointer<ObjCBool>?) -> Int\nReturns the glyphs and information needed to perform layout for the given glyph range.\nDeprecated\nfunc getGlyphs(in: NSRange, glyphs: UnsafeMutablePointer<NSGlyph>?, characterIndexes: UnsafeMutablePointer<Int>?, glyphInscriptions: UnsafeMutablePointer<NSGlyphInscription>?, elasticBits: UnsafeMutablePointer<ObjCBool>?, bidiLevels: UnsafeMutablePointer<UInt8>?) -> Int\nReturns the glyphs and information needed to perform layout for the given glyph range.\nDeprecated\nfunc deleteGlyphs(in: NSRange)\nDeletes the glyphs in the given range from the receiver’s glyph store.\nDeprecated\nfunc setCharacterIndex(Int, forGlyphAt: Int)\nSets the index of the character corresponding to the glyph at the given glyph index.\nDeprecated\nfunc intAttribute(Int, forGlyphAt: Int) -> Int\nReturns the value of the attribute identified by the given attribute tag for the glyph at the given index.\nDeprecated\nfunc setIntAttribute(Int, value: Int, forGlyphAt: Int)\nSets a custom attribute value for a given glyph.\nDeprecated\nfunc setLocations(NSPointArray, startingGlyphIndexes: UnsafeMutablePointer<Int>, count: Int, forGlyphRange: NSRange)\nSets locations for many glyph ranges at once.\nDeprecated\nfunc rectArray(forCharacterRange: NSRange, withinSelectedCharacterRange: NSRange, in: NSTextContainer, rectCount: UnsafeMutablePointer<Int>) -> NSRectArray?\nReturns an array of rectangles and, by reference, the number of such rectangles, that define the region in the given container enclosing the given character range.\nDeprecated\nfunc rectArray(forGlyphRange: NSRange, withinSelectedGlyphRange: NSRange, in: NSTextContainer, rectCount: UnsafeMutablePointer<Int>) -> NSRectArray?\nReturns an array of rectangles and, by reference, the number of such rectangles, that define the region in the given container enclosing the given glyph range.\nDeprecated\nfunc substituteFont(for: NSFont) -> NSFont\nReplaces the specified font with a suitable screen font if one is available.\nDeprecated"
  },
  {
    "title": "cgAffineTransform(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624505-cgaffinetransform",
    "html": "Parameters\nstring\n\nA string whose contents are of the form “{a, b, c, d, tx, ty}”, where a, b, c, d, tx, and ty are the floating-point component values of the CGAffineTransform data structure. An example of a valid string is @”{1,0,0,1,2.5,3.0}”. The string is not localized, so items are always separated with a comma. For information about the position of each value in the transform array, see CGAffineTransform.\n\nReturn Value\n\nA Core Graphics affine transform structure. If the string is not well-formed, the function returns the identity transform.\n\nDiscussion\n\nIn general, you should use this function only to convert strings that were previously created using the string(for:) function.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGRect) -> String\nReturns a string formatted to contain the data from a rectangle.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "showCGGlyphs(_:positions:count:font:matrix:attributes:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/1403247-showcgglyphs",
    "html": "Deprecated\n\nUse showCGGlyphs(_:positions:count:font:textMatrix:attributes:in:) instead.\n\nParameters\nglyphs\n\nThe glyphs to draw; may contain embedded NULL bytes.\n\npositions\n\nThe positions at which to draw the glyphs in the user space coordinate system.\n\nglyphCount\n\nThe number of glyphs.\n\nfont\n\nThe font applied to the graphics state. This value can be different from the NSFontAttributeName value in the attributes argument because of various font substitutions that the system automatically executes.\n\ntextMatrix\n\nThe affine transform mapping the text space coordinate system to the user space coordinate system. The tx and ty components of textMatrix are ignored since Quartz overrides them with the glyph positions.\n\nattributes\n\nA dictionary of glyph attributes. See Glyph Attributes for supported keys and values.\n\ngraphicsContext\n\nIf non-nil, graphicsContext is already configured according to the text attributes arguments: font, textMatrix, and attributes.\n\nDiscussion\n\nNSLayoutManager invokes this primitive method unless an override implementation of the deprecated showPackedGlyphs:length:glyphRange:atPoint:font:color:printingAdjustment: method exists and this method is not overridden.\n\nSee Also\nMethods\nfunc invalidateGlyphs(onLayoutInvalidationForGlyphRange: NSRange)\nSpecifies explicitly when portions of the glyph stream depend on layout.\nDeprecated\nfunc invalidateLayout(forCharacterRange: NSRange, isSoft: Bool, actualCharacterRange: NSRangePointer?)\nInvalidates the layout information for the glyphs mapped to the given range of characters.\nDeprecated\nfunc textStorage(NSTextStorage, edited: Int, range: NSRange, changeInLength: Int, invalidatedRange: NSRange)\nInvalidates glyph and layout information for a portion of the text in the given text storage object.\nDeprecated\nfunc insertGlyph(NSGlyph, atGlyphIndex: Int, characterIndex: Int)\nInserts a single glyph into the glyph stream at the given index and maps it to the character at the given character index.\nDeprecated\nfunc insertGlyphs(UnsafePointer<NSGlyph>, length: Int, forStartingGlyphAt: Int, characterIndex: Int)\nInserts the given glyphs into the glyph cache at the given index and maps them to characters beginning at the given character index.\nDeprecated\nfunc glyph(at: Int) -> CGGlyph\nReturns the glyph at the specified index.\nDeprecated\nfunc glyph(at: Int, isValidIndex: UnsafeMutablePointer<ObjCBool>?) -> CGGlyph\nReturns the glyph at a specified index, and optionally returns a flag indicating whether the requested index is valid.\nDeprecated\nfunc replaceGlyph(at: Int, withGlyph: NSGlyph)\nReplaces the glyph at the given index with a new glyph.\nDeprecated\nfunc getGlyphs(UnsafeMutablePointer<NSGlyph>?, range: NSRange) -> Int\nFills the passed-in buffer with a sequence of glyphs.\nDeprecated\nfunc getGlyphs(in: NSRange, glyphs: UnsafeMutablePointer<NSGlyph>?, characterIndexes: UnsafeMutablePointer<Int>?, glyphInscriptions: UnsafeMutablePointer<NSGlyphInscription>?, elasticBits: UnsafeMutablePointer<ObjCBool>?) -> Int\nReturns the glyphs and information needed to perform layout for the given glyph range.\nDeprecated\nfunc getGlyphs(in: NSRange, glyphs: UnsafeMutablePointer<NSGlyph>?, characterIndexes: UnsafeMutablePointer<Int>?, glyphInscriptions: UnsafeMutablePointer<NSGlyphInscription>?, elasticBits: UnsafeMutablePointer<ObjCBool>?, bidiLevels: UnsafeMutablePointer<UInt8>?) -> Int\nReturns the glyphs and information needed to perform layout for the given glyph range.\nDeprecated\nfunc deleteGlyphs(in: NSRange)\nDeletes the glyphs in the given range from the receiver’s glyph store.\nDeprecated\nfunc setCharacterIndex(Int, forGlyphAt: Int)\nSets the index of the character corresponding to the glyph at the given glyph index.\nDeprecated\nfunc intAttribute(Int, forGlyphAt: Int) -> Int\nReturns the value of the attribute identified by the given attribute tag for the glyph at the given index.\nDeprecated\nfunc setIntAttribute(Int, value: Int, forGlyphAt: Int)\nSets a custom attribute value for a given glyph.\nDeprecated\nfunc setLocations(NSPointArray, startingGlyphIndexes: UnsafeMutablePointer<Int>, count: Int, forGlyphRange: NSRange)\nSets locations for many glyph ranges at once.\nDeprecated\nfunc rectArray(forCharacterRange: NSRange, withinSelectedCharacterRange: NSRange, in: NSTextContainer, rectCount: UnsafeMutablePointer<Int>) -> NSRectArray?\nReturns an array of rectangles and, by reference, the number of such rectangles, that define the region in the given container enclosing the given character range.\nDeprecated\nfunc rectArray(forGlyphRange: NSRange, withinSelectedGlyphRange: NSRange, in: NSTextContainer, rectCount: UnsafeMutablePointer<Int>) -> NSRectArray?\nReturns an array of rectangles and, by reference, the number of such rectangles, that define the region in the given container enclosing the given glyph range.\nDeprecated\nfunc substituteFont(for: NSFont) -> NSFont\nReplaces the specified font with a suitable screen font if one is available.\nDeprecated"
  },
  {
    "title": "UITextAttributeTextShadowOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextattributetextshadowoffset",
    "html": "Deprecated\n\nInstead, use NSShadowAttributeName with an NSShadow object as the value.\n\nDiscussion\n\nThe corresponding value is an instance of NSValue wrapping a UIOffset struct.\n\nSee Also\nStrings\nNSStringDrawingContext\nAn object that manages metrics for drawing attributed strings.\nNSStringDrawingOptions\nConstants that specify the rendering options for drawing a string.\nUIBaselineAdjustment\nVertical adjustment options.\nUILineBreakMode\nOptions for wrapping and truncating text.\nDeprecated\nUITextAlignment\nOptions for aligning text horizontally.\nDeprecated\nUITextAttributeFont\nThe key to the font in a text attributes dictionary.\nDeprecated\nUITextAttributeTextColor\nThe key to the text color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowColor\nThe key to the text shadow color in a text attributes dictionary.\nDeprecated"
  },
  {
    "title": "UITextAlignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextalignment",
    "html": "Deprecated\n\nUse NSTextAlignment instead.\n\nTopics\nDeprecated constants\nUITextAlignmentLeft\nAlign text along the left edge.\nUITextAlignmentCenter\nAlign text equally along both sides of the center line.\nUITextAlignmentRight\nAlign text along the right edge.\nSee Also\nStrings\nNSStringDrawingContext\nAn object that manages metrics for drawing attributed strings.\nNSStringDrawingOptions\nConstants that specify the rendering options for drawing a string.\nUIBaselineAdjustment\nVertical adjustment options.\nUILineBreakMode\nOptions for wrapping and truncating text.\nDeprecated\nUITextAttributeFont\nThe key to the font in a text attributes dictionary.\nDeprecated\nUITextAttributeTextColor\nThe key to the text color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowColor\nThe key to the text shadow color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowOffset\nThe key to the offset for the text shadow in a text attributes dictionary.\nDeprecated"
  },
  {
    "title": "UITextAlignmentRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextalignment/uitextalignmentright",
    "html": "Deprecated\n\nUse NSTextAlignmentRight instead.\n\nSee Also\nDeprecated constants\nUITextAlignmentLeft\nAlign text along the left edge.\nDeprecated\nUITextAlignmentCenter\nAlign text equally along both sides of the center line.\nDeprecated"
  },
  {
    "title": "badge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiremotenotificationtype/1623067-badge",
    "html": "Deprecated\n\nRegister for user notification settings using the registerUserNotificationSettings(_:) method instead"
  },
  {
    "title": "glyph(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/1403083-glyph",
    "html": "Deprecated\n\nUse cgGlyph(at:) instead.\n\nParameters\nglyphIndex\n\nThe index of a glyph in the receiver. This value must not exceed the bounds of the receiver’s glyph array.\n\nReturn Value\n\nThe glyph at glyphIndex.\n\nDiscussion\n\nRaises an NSRangeException if glyphIndex is out of bounds.\n\nPerforms glyph generation if needed. To avoid an exception with glyph(at:) you must first check the glyph index against the number of glyphs, which requires generating all glyphs. Another method, glyph(at:isValidIndex:), generates glyphs only up to the one requested, so using it can be more efficient.\n\nSee Also\nMethods\nfunc showCGGlyphs(UnsafePointer<CGGlyph>, positions: UnsafePointer<CGPoint>, count: Int, font: UIFont, matrix: CGAffineTransform, attributes: [NSAttributedString.Key : Any], in: CGContext)\nRenders the glyphs at the specified positions, using the specified attributes.\nDeprecated\nfunc invalidateGlyphs(onLayoutInvalidationForGlyphRange: NSRange)\nSpecifies explicitly when portions of the glyph stream depend on layout.\nDeprecated\nfunc invalidateLayout(forCharacterRange: NSRange, isSoft: Bool, actualCharacterRange: NSRangePointer?)\nInvalidates the layout information for the glyphs mapped to the given range of characters.\nDeprecated\nfunc textStorage(NSTextStorage, edited: Int, range: NSRange, changeInLength: Int, invalidatedRange: NSRange)\nInvalidates glyph and layout information for a portion of the text in the given text storage object.\nDeprecated\nfunc insertGlyph(NSGlyph, atGlyphIndex: Int, characterIndex: Int)\nInserts a single glyph into the glyph stream at the given index and maps it to the character at the given character index.\nDeprecated\nfunc insertGlyphs(UnsafePointer<NSGlyph>, length: Int, forStartingGlyphAt: Int, characterIndex: Int)\nInserts the given glyphs into the glyph cache at the given index and maps them to characters beginning at the given character index.\nDeprecated\nfunc glyph(at: Int, isValidIndex: UnsafeMutablePointer<ObjCBool>?) -> CGGlyph\nReturns the glyph at a specified index, and optionally returns a flag indicating whether the requested index is valid.\nDeprecated\nfunc replaceGlyph(at: Int, withGlyph: NSGlyph)\nReplaces the glyph at the given index with a new glyph.\nDeprecated\nfunc getGlyphs(UnsafeMutablePointer<NSGlyph>?, range: NSRange) -> Int\nFills the passed-in buffer with a sequence of glyphs.\nDeprecated\nfunc getGlyphs(in: NSRange, glyphs: UnsafeMutablePointer<NSGlyph>?, characterIndexes: UnsafeMutablePointer<Int>?, glyphInscriptions: UnsafeMutablePointer<NSGlyphInscription>?, elasticBits: UnsafeMutablePointer<ObjCBool>?) -> Int\nReturns the glyphs and information needed to perform layout for the given glyph range.\nDeprecated\nfunc getGlyphs(in: NSRange, glyphs: UnsafeMutablePointer<NSGlyph>?, characterIndexes: UnsafeMutablePointer<Int>?, glyphInscriptions: UnsafeMutablePointer<NSGlyphInscription>?, elasticBits: UnsafeMutablePointer<ObjCBool>?, bidiLevels: UnsafeMutablePointer<UInt8>?) -> Int\nReturns the glyphs and information needed to perform layout for the given glyph range.\nDeprecated\nfunc deleteGlyphs(in: NSRange)\nDeletes the glyphs in the given range from the receiver’s glyph store.\nDeprecated\nfunc setCharacterIndex(Int, forGlyphAt: Int)\nSets the index of the character corresponding to the glyph at the given glyph index.\nDeprecated\nfunc intAttribute(Int, forGlyphAt: Int) -> Int\nReturns the value of the attribute identified by the given attribute tag for the glyph at the given index.\nDeprecated\nfunc setIntAttribute(Int, value: Int, forGlyphAt: Int)\nSets a custom attribute value for a given glyph.\nDeprecated\nfunc setLocations(NSPointArray, startingGlyphIndexes: UnsafeMutablePointer<Int>, count: Int, forGlyphRange: NSRange)\nSets locations for many glyph ranges at once.\nDeprecated\nfunc rectArray(forCharacterRange: NSRange, withinSelectedCharacterRange: NSRange, in: NSTextContainer, rectCount: UnsafeMutablePointer<Int>) -> NSRectArray?\nReturns an array of rectangles and, by reference, the number of such rectangles, that define the region in the given container enclosing the given character range.\nDeprecated\nfunc rectArray(forGlyphRange: NSRange, withinSelectedGlyphRange: NSRange, in: NSTextContainer, rectCount: UnsafeMutablePointer<Int>) -> NSRectArray?\nReturns an array of rectangles and, by reference, the number of such rectangles, that define the region in the given container enclosing the given glyph range.\nDeprecated\nfunc substituteFont(for: NSFont) -> NSFont\nReplaces the specified font with a suitable screen font if one is available.\nDeprecated"
  },
  {
    "title": "textStorageDidProcessEditing: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1808521-textstoragedidprocessediting",
    "html": "Parameters\naNotification\n\nA notification named didProcessEditingNotification.\n\nOverview\n\nThe delegate can verify the final state of the text storage object; it can’t change the text storage object’s characters without leaving it in an inconsistent state, but if necessary it can change attributes. Note that even in this case it’s possible to put a text storage object into an inconsistent state—for example, by changing the font of a range to one that doesn’t support the characters in that range (such as using a Latin font for Kanji text).\n\nSee Also\nDeprecated\ntextStorageWillProcessEditing:\nSent when a text storage is about to process edits."
  },
  {
    "title": "textStorageWillProcessEditing: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstoragedelegate/1808519-textstoragewillprocessediting",
    "html": "Parameters\naNotification\n\nA notification named willProcessEditingNotification.\n\nOverview\n\nThe delegate can verify the changed state of the text storage object and make changes to the text storage object’s characters or attributes to enforce whatever constraints it establishes. Programmatic changes don’t result in this message being sent.\n\nSee Also\nDeprecated\ntextStorageDidProcessEditing:\nSent when a text storage has finished processing edits."
  },
  {
    "title": "UIButton.Configuration.TitleAlignment.leading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibutton/configuration/titlealignment/leading",
    "html": "See Also\nTitle alignments\ncase automatic\nAligns the title and subtitle based on other elements in the button configuration, like an image or activity indicator.\ncase center\nAligns the title and subtitle on their horizontal centers.\ncase trailing\nAligns the title and subtitle on their trailing edges."
  },
  {
    "title": "NSTextSelectionNavigation.Direction.right | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/direction/right",
    "html": "See Also\nNavigation directions\ncase forward\nThe value that represents a logical forward selection based on the flow of text stored in the document.\ncase backward\nThe value that represents a backward selection based on the flow of text stored in the document.\ncase left\nThe value that represents a selection in the left direction along the current line.\ncase up\nThe value that represents a selection in the up direction, above the current line.\ncase down\nThe value that represents a selection in the down direction, below the current line."
  },
  {
    "title": "NSTextSelectionNavigation.Destination.line | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/destination/line",
    "html": "Discussion\n\nThe boundary of a line can be logical, based on the line separator characters, as well as visual using soft line wrapping.\n\nSee Also\nSelection destinations\ncase character\nThe selection moves to the next extended grapheme cluster boundary.\ncase word\nThe selection moves to the next word boundary ignoring punctuation, whitespace, and format characters preceding the next word.\ncase sentence\nThe selection moves to the next sentence boundary, ignoring punctuation, whitespace, and format characters preceding the next sentence.\ncase paragraph\nThe selection moves to the next paragraph boundary, ignoring the end of line elastic characters and paragraph separators.\ncase container\nThe selection moves to the next container or page boundary after boundary of the current container, ignoring the end of line elastic characters.\ncase document\nThe selection moves to the document boundary."
  },
  {
    "title": "prefersHighDynamicRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagereader/configuration/4213108-prefershighdynamicrange",
    "html": "Discussion\n\nThis property doesn’t affect images that only decode in either SDR or HDR. The default value depends on the system capabilities.\n\nSee Also\nConfiguration properties\nvar preparesImagesForDisplay: Bool\nA Boolean value that indicates whether the image reader prepares the image for display.\nvar preferredThumbnailSize: CGSize\nThe thumbnail size in pixels that the image reader makes the image.\nvar pixelsPerInch: Double\nThe integral scale that the image reader applies to the image.\nRelated Documentation\nApplying Apple HDR effect to your photos\nYou can decode and apply Apple’s HDR gain map to your own images."
  },
  {
    "title": "configurationWithoutWeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294251-configurationwithoutweight",
    "html": "Return Value\n\nA new symbol configuration object without the specified information.\n\nDiscussion\n\nThis method sets the weight value in the new object to UIImageSymbolWeightUnspecified.\n\nSee Also\nRemoving configuration attributes\n- configurationWithoutPointSizeAndWeight\nReturns a copy of the current symbol configuration object without point-size and weight information.\n- configurationWithoutScale\nReturns a copy of the current symbol configuration object without scale information.\n- configurationWithoutTextStyle\nReturns a copy of the current symbol configuration object without font text style information."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagereader/configuration/4213104",
    "html": "Parameters\na\n\nA value to compare.\n\nb\n\nAnother value to compare.\n\nReturn Value\n\ntrue if the two values are equal; otherwise, false.\n\nRelationships\nFrom Protocol\nEquatable\nSee Also\nComparing values\nstatic func != (UIImageReader.Configuration, UIImageReader.Configuration) -> Bool\nReturns a Boolean value that indicates whether two values aren’t equal."
  },
  {
    "title": "lineFragmentRange(for:inContainerAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801845-linefragmentrange",
    "html": "Required\n\nParameters\npoint\n\nThe starting point that contains the line fragment, in the coordinate system of location.\n\nlocation\n\nThe location of the line fragment.\n\nReturn Value\n\nAn NSTextRange that describes the location of the line fragment, or nil if the range isn’t found.\n\nSee Also\nFinding specific content in the selection\nfunc location(NSTextLocation, offsetBy: Int) -> NSTextLocation?\nReturns a new location using the location and offset you specify.\n\nRequired\n\nfunc offset(from: NSTextLocation, to: NSTextLocation) -> Int\nReturns the offset between the two locations you specify.\n\nRequired\n\nfunc textRange(for: NSTextSelection.Granularity, enclosing: NSTextLocation) -> NSTextRange?\nReturns a text range that corresponds to selection granularity of the enclosing location.\n\nRequired"
  },
  {
    "title": "baseWritingDirection(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801839-basewritingdirection",
    "html": "Required\n\nParameters\nlocation\n\nThe location where you want to examine the text’s writing direction.\n\nReturn Value\n\nThe NSWritingDirection.\n\nSee Also\nChanging the characteristics of the selection\nenum NSTextSelectionNavigation.WritingDirection\nValues that describe the writing direction inside a text selection.\nfunc textLayoutOrientation(at: NSTextLocation) -> NSTextSelectionNavigation.LayoutOrientation\nReturns the layout orientation at the location you specify.\nenum NSTextSelectionNavigation.LayoutOrientation\nValues that describe the possible layout orientations."
  },
  {
    "title": "textRange(for:enclosing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801848-textrange",
    "html": "Required\n\nParameters\nselectionGranularity\n\nOne of the possible NSTextSelection.Granularity options.\n\nlocation\n\nA location that encloses the text range of interest.\n\nReturn Value\n\nReturns the text range of the section, or nil when documentRange.isEmpty true.\n\nSee Also\nFinding specific content in the selection\nfunc location(NSTextLocation, offsetBy: Int) -> NSTextLocation?\nReturns a new location using the location and offset you specify.\n\nRequired\n\nfunc lineFragmentRange(for: CGPoint, inContainerAt: NSTextLocation) -> NSTextRange?\nReturns the range of the line fragment that contains the point you specify.\n\nRequired\n\nfunc offset(from: NSTextLocation, to: NSTextLocation) -> Int\nReturns the offset between the two locations you specify.\n\nRequired"
  },
  {
    "title": "enumerateCaretOffsetsInLineFragment(at:using:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801841-enumeratecaretoffsetsinlinefragm",
    "html": "Required\n\nParameters\nlocation\n\nThe NSTextLocation to start from.\n\nblock\n\nThe closure to invoke once for each logical caret edge in the line fragment, in left-to-right visual order. End the enumeration early by returning false.\n\nDiscussion\n\nThe caretOffset is in the coordinate system for the text container. When leadingEdge is true, it indicates that caretOffset is at the logical edge preceding the character. For left-to-right characters, the caret is on the left, and on the right for right-to-left characters.\n\nSee Also\nEnumerating components of the selection\nfunc enumerateContainerBoundaries(from: NSTextLocation, reverse: Bool, using: (NSTextLocation, UnsafeMutablePointer<ObjCBool>) -> Void)\nEnumerates all the container boundaries starting from the location you specify.\nfunc enumerateSubstrings(from: NSTextLocation, options: NSString.EnumerationOptions, using: (String?, NSTextRange, NSTextRange?, UnsafeMutablePointer<ObjCBool>) -> Void)\nEnumerates the textual segment boundaries starting at the location you specify.\n\nRequired"
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmentoptions/3825586-init",
    "html": "Parameters\nrawValue\n\nAn unsigned integer that represents a specific segment option."
  },
  {
    "title": "upstreamAffinity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmentoptions/3824753-upstreamaffinity",
    "html": "See Also\nGetting segment options\nstatic var headSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var middleFragmentsExcluded: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to enumerate segments in only the first and last line fragments.\nstatic var rangeNotRequired: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework enumerate text segment rectangles, but avoids preparing a range object.\nstatic var tailSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge."
  },
  {
    "title": "rangeNotRequired | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmentoptions/3810029-rangenotrequired",
    "html": "See Also\nGetting segment options\nstatic var headSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var middleFragmentsExcluded: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to enumerate segments in only the first and last line fragments.\nstatic var tailSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var upstreamAffinity: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to the place the segment based on the upstream affinity for an empty range."
  },
  {
    "title": "textLayoutManager(_:renderingAttributesForLink:at:defaultAttributes:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate/3824749-textlayoutmanager",
    "html": "Parameters\ntextLayoutManager\n\nThe NSTextLayoutManager.\n\nlink\n\nThe link.\n\nlocation\n\nThe NSTextLocation of the link.\n\nrenderingAttributes\n\nA dictionary of attributes whose keys are NSAttributedString.Key values.\n\nReturn Value\n\nA dictionary of attributes.\n\nSee Also\nResponding to layout changes\nfunc textLayoutManager(NSTextLayoutManager, shouldBreakLineBefore: NSTextLocation, hyphenating: Bool) -> Bool\nThe method the framework calls to determine the soft line break point.\nfunc textLayoutManager(NSTextLayoutManager, textLayoutFragmentFor: NSTextLocation, in: NSTextElement) -> NSTextLayoutFragment\nThe method the framework calls to give the delegate an opportunity to return a custom text layout fragment."
  },
  {
    "title": "textLayoutManager(_:textLayoutFragmentFor:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate/3810024-textlayoutmanager",
    "html": "Parameters\ntextLayoutManager\n\nThe text layout manager.\n\nlocation\n\nThe NSTextLocation of the link in the text element.\n\ntextElement\n\nThe NSTextElement that the method could return a custom NSTextLayoutFragment from.\n\nReturn Value\n\nAn NSTextLayoutFragment.\n\nDiscussion\n\nUse this to provide an NSTextLayoutFragment specialized for an NSTextElement subclass targeted for the rendering surface.\n\nSee Also\nResponding to layout changes\nfunc textLayoutManager(NSTextLayoutManager, renderingAttributesForLink: Any, at: NSTextLocation, defaultAttributes: [NSAttributedString.Key : Any]) -> [NSAttributedString.Key : Any]?\nThe method the framework calls to return a dictionary of attributes for rendering a link attribute name.\nfunc textLayoutManager(NSTextLayoutManager, shouldBreakLineBefore: NSTextLocation, hyphenating: Bool) -> Bool\nThe method the framework calls to determine the soft line break point."
  },
  {
    "title": "NSTextLayoutManager.SegmentType.highlight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmenttype/highlight",
    "html": "See Also\nKinds of text selection segments\ncase selection\nThe segment behavior suitable for selection rendering.\ncase standard\nThe standard segment, matching the typographic bounds of the range."
  },
  {
    "title": "NSTextLayoutManager.SegmentType.standard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmenttype/standard",
    "html": "See Also\nKinds of text selection segments\ncase highlight\nThe segment behavior suitable for highlighting.\ncase selection\nThe segment behavior suitable for selection rendering."
  },
  {
    "title": "performEditingTransaction(for:using:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstorageobserving/3852588-performeditingtransaction",
    "html": "Required\n\nSee Also\nManaging the editing process\nfunc processEditing(for: NSTextStorage, edited: NSTextStorage.EditActions, range: NSRange, changeInLength: Int, invalidatedRange: NSRange)\n\nRequired"
  },
  {
    "title": "processEditing(for:edited:range:changeInLength:invalidatedRange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstorageobserving/3810050-processediting",
    "html": "Required\n\nSee Also\nManaging the editing process\nfunc performEditingTransaction(for: NSTextStorage, using: () -> Void)\n\nRequired"
  },
  {
    "title": "baselineOffsetFromBottom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3294221-baselineoffsetfrombottom",
    "html": "Discussion\n\nPositive values place the baseline up inside the image, and negative values place the baseline below the bottom of the image. When the value of this property is 0.0, the baseline position is equal to the bottom of the image.\n\nSee Also\nManaging the baseline\nhasBaseline\nA Boolean value that indicates whether the image has a defined baseline offset."
  },
  {
    "title": "hasBaseline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3294224-hasbaseline",
    "html": "See Also\nManaging the baseline\nbaselineOffsetFromBottom\nThe position of the baseline relative to the bottom of the image."
  },
  {
    "title": "configurationWithTextStyle: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294245-configurationwithtextstyle",
    "html": "Parameters\ntextStyle\n\nA system text style that determines the initial appearance of your symbol image. For a list of possible values, see UIFontTextStyle.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nDiscussion\n\nSymbol images pick up the font styling information associated with the specified text style, causing them to match any text that uses the same style. Like it does for the text, UIKit scales the image to match the current Dynamic Type setting.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "configurationWithPointSize:weight:scale: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294243-configurationwithpointsize",
    "html": "Parameters\npointSize\n\nThe system font point size to use for the configuration.\n\nweight\n\nThe symbol image weight variant to select. Use this parameter to match the weight of the symbol image to your other content. For a list of possible values, see UIImageSymbolWeight.\n\nscale\n\nThe symbol image scale variant to select. Use this parameter to make the image appear bigger or smaller than text that uses the same point size. For a list of possible values, see UIImageSymbolScale.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "configurationWithPointSize:weight: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294242-configurationwithpointsize",
    "html": "Parameters\npointSize\n\nThe system font point size to use for the configuration.\n\nweight\n\nThe symbol image weight variant to select. Specify a value that is comparable to the font weight of any matching text. For a list of possible values, see UIImageSymbolWeight.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "configurationWithTextStyle:scale: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294246-configurationwithtextstyle",
    "html": "Parameters\ntextStyle\n\nThe system text styles that support Dynamic Type. For a list of possible values, see UIFontTextStyle.\n\nscale\n\nThe symbol image scale variant to select. Use this parameter to make the image appear bigger or smaller than text that uses the same text style. For a list of possible values, see UIImageSymbolScale.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nDiscussion\n\nSymbol images pick up the font styling information associated with the specified text style, causing them to match any text that uses the same style. Like it does for the text, UIKit scales the image to match the current Dynamic Type setting.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "configurationWithFont: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294239-configurationwithfont",
    "html": "Parameters\nfont\n\nThe font from which to derive the configuration attributes.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "configurationWithWeight: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294247-configurationwithweight",
    "html": "Parameters\nweight\n\nThe symbol image weight variant to select. Specify a value that is comparable to the font weight of any matching text. For a list of possible values, see UIImageSymbolWeight.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "configurationWithHierarchicalColor: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3810053-configurationwithhierarchicalcol",
    "html": "Parameters\nhierarchicalColor\n\nThe colors to apply to the symbol.\n\nDiscussion\n\nWhen you create an image with this configuration, the system generates a color scheme according to the color you specify, creating secondary and tertiary colors by reducing the intensity of the base color. Typically, the system generates the secondary and tertiary colors by reducing the opacity of the primary color, but it may perform additional color adjustments.\n\nThe system renders all layers in your symbol with the primary, secondary, and tertiary colors according to the symbol layer hierarchy.\n\nFor this color configuration to have an effect, your symbol image must have the following:\n\nIts renderingMode set to UIImageRenderingModeAlwaysTemplate or UIImageRenderingModeAutomatic.\n\nHierarchical layer annotations. If your symbol doesn’t have hierarchical layer annotations, the resulting image is a monochrome (template) symbol image.\n\nThis color configuration can’t combine with palette color configurations that you create with configurationWithPaletteColors:. If you attempt to combine this configuration with a palette color configuration, the last configuration that you specify takes precedence, overwriting the previous color configuration.\n\nSee Also\nCreating a color configuration\n+ configurationWithPaletteColors:\nCreates a color configuration with a color scheme from a palette of multiple colors.\n+ configurationPreferringMulticolor\nCreates a color configuration that specifies that the symbol image uses its multicolor variant, if one exists.\n+ configurationPreferringMonochrome\nCreates a color configuration that specifies that the symbol image uses its monochrome variant."
  },
  {
    "title": "string(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/foundation/nscoder/1624474-string",
    "html": "Parameters\nrect\n\nA Core Graphics structure representing a rectangle.\n\nReturn Value\n\nA string that corresponds to rect. See cgRect(for:) for a discussion of the string format.\n\nSee Also\nRepresenting Geometric Types as Strings\nclass func cgAffineTransform(for: String) -> CGAffineTransform\nReturns a Core Graphics affine transform structure corresponding to the data in a given string.\nclass func cgPoint(for: String) -> CGPoint\nReturns a Core Graphics point structure corresponding to the data in a given string.\nclass func cgRect(for: String) -> CGRect\nReturns a Core Graphics rectangle structure corresponding to the data in a given string.\nclass func cgSize(for: String) -> CGSize\nReturns a Core Graphics size structure corresponding to the data in a given string.\nclass func cgVector(for: String) -> CGVector\nReturns a Core Graphics vector corresponding to the data in a given string.\nclass func nsDirectionalEdgeInsets(for: String) -> NSDirectionalEdgeInsets\nReturns a directional edge insets structure based on data in the specified string.\nclass func uiEdgeInsets(for: String) -> UIEdgeInsets\nReturns a UIKit edge insets structure based on the data in the specified string.\nclass func uiOffset(for: String) -> UIOffset\nReturns a UIKit offset structure corresponding to the data in a given string.\nclass func string(for: CGVector) -> String\nReturns a string formatted to contain the data from a vector data structure.\nclass func string(for: CGAffineTransform) -> String\nReturns a string formatted to contain the data from an affine transform.\nclass func string(for: CGPoint) -> String\nReturns a string formatted to contain the data from a point.\nclass func string(for: CGSize) -> String\nReturns a string formatted to contain the data from a size data structure.\nclass func string(for: NSDirectionalEdgeInsets) -> String\nReturns a string formatted to contain the data from a directional edge insets structure.\nclass func string(for: UIEdgeInsets) -> String\nReturns a string formatted to contain the data from an edge insets structure.\nclass func string(for: UIOffset) -> String\nReturns a string formatted to contain the data from an offset structure."
  },
  {
    "title": "sound | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiremotenotificationtype/1622926-sound",
    "html": "Deprecated\n\nRegister for user notification settings using the registerUserNotificationSettings(_:) method instead"
  },
  {
    "title": "alert | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiremotenotificationtype/1623004-alert",
    "html": "Deprecated\n\nRegister for user notification settings using the registerUserNotificationSettings(_:) method instead"
  },
  {
    "title": "textContentStorage(_:textParagraphWith:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextcontentstoragedelegate/3809940-textcontentstorage",
    "html": "Parameters\ntextContentManager\n\nThe object’s content manager.\n\nrange\n\nThe NSRange that describes the extent of the string.\n\nReturn Value\n\nA new NSTextParagraph, or nil.\n\nDiscussion\n\nWhen non-nil, textContentStorage uses the text paragraph instead of creating the standard NSTextParagraph with the attributed substring in range. The attributed string for a custom text paragraph must have a length of range.length."
  },
  {
    "title": "attributedString | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/deprecated_symbols/1807628-attributedstring",
    "html": "Overview\n\nThis property is part of the NSGlyphStorage protocol, for use by the glyph generator. For NSLayoutManager the attributed string is equivalent to the text storage.\n\nSee Also\nProperties\nvar hyphenationFactor: CGFloat\nThe threshold controlling when hyphenation is done.\nDeprecated\nlayoutOptions\nThe layout manager’s current layout options.\nvar usesScreenFonts: Bool\nA Boolean that controls using screen fonts to calculate layout and display text.\nDeprecated"
  },
  {
    "title": "hyphenationFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/1403134-hyphenationfactor",
    "html": "Deprecated\n\nUse usesDefaultHyphenation instead.\n\nDiscussion\n\nWhenever (width of the real contents of the line) / (the line fragment width) is below factor, hyphenation is attempted when laying out the line. Hyphenation slows down text layout and increases memory usage, so it should be used sparingly.\n\nSee Also\nProperties\nattributedString\nThe text storage object from which the NSGlyphGenerator object procures characters for glyph generation.\nlayoutOptions\nThe layout manager’s current layout options.\nvar usesScreenFonts: Bool\nA Boolean that controls using screen fonts to calculate layout and display text.\nDeprecated"
  },
  {
    "title": "UITextAttributeTextColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextattributetextcolor",
    "html": "Deprecated\n\nUse NSForegroundColorAttributeName instead.\n\nDiscussion\n\nThe corresponding value is an instance of UIColor.\n\nSee Also\nStrings\nNSStringDrawingContext\nAn object that manages metrics for drawing attributed strings.\nNSStringDrawingOptions\nConstants that specify the rendering options for drawing a string.\nUIBaselineAdjustment\nVertical adjustment options.\nUILineBreakMode\nOptions for wrapping and truncating text.\nDeprecated\nUITextAlignment\nOptions for aligning text horizontally.\nDeprecated\nUITextAttributeFont\nThe key to the font in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowColor\nThe key to the text shadow color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowOffset\nThe key to the offset for the text shadow in a text attributes dictionary.\nDeprecated"
  },
  {
    "title": "UITextAttributeFont | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextattributefont",
    "html": "Deprecated\n\nUse NSFontAttributeName instead.\n\nDiscussion\n\nThe corresponding value is an instance of UIFont.\n\nUse a font with size 0.0 to get the default font size for the current context.\n\nSee Also\nStrings\nNSStringDrawingContext\nAn object that manages metrics for drawing attributed strings.\nNSStringDrawingOptions\nConstants that specify the rendering options for drawing a string.\nUIBaselineAdjustment\nVertical adjustment options.\nUILineBreakMode\nOptions for wrapping and truncating text.\nDeprecated\nUITextAlignment\nOptions for aligning text horizontally.\nDeprecated\nUITextAttributeTextColor\nThe key to the text color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowColor\nThe key to the text shadow color in a text attributes dictionary.\nDeprecated\nUITextAttributeTextShadowOffset\nThe key to the offset for the text shadow in a text attributes dictionary.\nDeprecated"
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenestandardplacement/4176668",
    "html": "Parameters\na\n\nA placement to compare.\n\nb\n\nAnother placement to compare.\n\nReturn Value\n\ntrue if a is equal to b; otherwise, false.\n\nSee Also\nComparing placements\nstatic func != (UIWindowSceneStandardPlacement, UIWindowSceneStandardPlacement) -> Bool\nAn operator for checking whether two placements aren’t equal.\nvar hashValue: Int\nThe hash value of the placement option.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenestandardplacement/4176669-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparing placements\nstatic func == (UIWindowSceneStandardPlacement, UIWindowSceneStandardPlacement) -> Bool\nAn operator for checking whether two placements are equal.\nstatic func != (UIWindowSceneStandardPlacement, UIWindowSceneStandardPlacement) -> Bool\nAn operator for checking whether two placements aren’t equal.\nvar hashValue: Int\nThe hash value of the placement option."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenestandardplacement/4176670-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing placements\nstatic func == (UIWindowSceneStandardPlacement, UIWindowSceneStandardPlacement) -> Bool\nAn operator for checking whether two placements are equal.\nstatic func != (UIWindowSceneStandardPlacement, UIWindowSceneStandardPlacement) -> Bool\nAn operator for checking whether two placements aren’t equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenestandardplacement/4176671-init",
    "html": "See Also\nCreating a placement\nstatic func standard() -> UIWindowSceneStandardPlacement\nCreates a placement that indicates the system should present the window using the default style of the system in the space."
  },
  {
    "title": "textContentManager(_:shouldEnumerate:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextcontentmanagerdelegate/3852566-textcontentmanager",
    "html": "Parameters\ntextContentManager\n\nThe content manager.\n\ntextElement\n\nThe NSTextElement to evaluate.\n\noptions\n\nOne of the available NSTextElementProviderEnumerationOptions options.\n\nReturn Value\n\nA Boolean value that informs the framework to skip this textElement in the enumeration. Returning false indicates textElement to be skipped; otherwise the element is included in the enumeration."
  },
  {
    "title": "textViewportLayoutControllerDidLayout(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824777-textviewportlayoutcontrollerdidl",
    "html": "Parameters\ntextViewportLayoutController\n\nThe NSTextViewportLayoutController.\n\nDiscussion\n\nLayout information on textViewportLayoutController is up-to-date at the point of this call.\n\nSee Also\nResponding to changes in the viewport\nfunc textViewportLayoutController(NSTextViewportLayoutController, configureRenderingSurfaceFor: NSTextLayoutFragment)\nThe method the framework calls when the layout controller lays out a text layout fragment in the UI.\n\nRequired\n\nfunc textViewportLayoutControllerWillLayout(NSTextViewportLayoutController)\nThe method the framework calls before the text viewport layout controller starts its layout process.\nfunc viewportBounds(for: NSTextViewportLayoutController) -> CGRect\nReturns the current viewport, which is the view visible bounds plus the overdraw area.\n\nRequired"
  },
  {
    "title": "textViewportLayoutControllerWillLayout(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824778-textviewportlayoutcontrollerwill",
    "html": "Parameters\ntextViewportLayoutController\n\nThe NSTextViewportLayoutController.\n\nSee Also\nResponding to changes in the viewport\nfunc textViewportLayoutController(NSTextViewportLayoutController, configureRenderingSurfaceFor: NSTextLayoutFragment)\nThe method the framework calls when the layout controller lays out a text layout fragment in the UI.\n\nRequired\n\nfunc textViewportLayoutControllerDidLayout(NSTextViewportLayoutController)\nThe method the framework calls when the text viewport layout controller finishes its layout process.\nfunc viewportBounds(for: NSTextViewportLayoutController) -> CGRect\nReturns the current viewport, which is the view visible bounds plus the overdraw area.\n\nRequired"
  },
  {
    "title": "configurationWithoutPointSizeAndWeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294248-configurationwithoutpointsizeand",
    "html": "Return Value\n\nA new symbol configuration object without the specified information.\n\nDiscussion\n\nThis method sets the weight value in the new object to UIImageSymbolWeightUnspecified and removes the point-size information.\n\nSee Also\nRemoving configuration attributes\n- configurationWithoutScale\nReturns a copy of the current symbol configuration object without scale information.\n- configurationWithoutTextStyle\nReturns a copy of the current symbol configuration object without font text style information.\n- configurationWithoutWeight\nReturns a copy of the current symbol configuration object without weight information."
  },
  {
    "title": "ensuresLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/enumerationoptions/3809979-ensureslayout",
    "html": "See Also\nLayout fragment characteristics\nstatic var ensuresExtraLineFragment: NSTextLayoutFragment.EnumerationOptions\nSynthesize the extra line fragment when necessary.\nstatic var estimatesSize: NSTextLayoutFragment.EnumerationOptions\nWhen enumerating, tell the layout fragments to estimate their size.\nstatic var reverse: NSTextLayoutFragment.EnumerationOptions\nCauses the enumeration to start from the last element."
  },
  {
    "title": "ensuresExtraLineFragment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/enumerationoptions/3809978-ensuresextralinefragment",
    "html": "See Also\nLayout fragment characteristics\nstatic var ensuresLayout: NSTextLayoutFragment.EnumerationOptions\nWhen enumerating, tell the layout fragments to layout their contents.\nstatic var estimatesSize: NSTextLayoutFragment.EnumerationOptions\nWhen enumerating, tell the layout fragments to estimate their size.\nstatic var reverse: NSTextLayoutFragment.EnumerationOptions\nCauses the enumeration to start from the last element."
  },
  {
    "title": "configurationWithoutScale | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294249-configurationwithoutscale",
    "html": "Return Value\n\nA new symbol configuration object without the specified information.\n\nDiscussion\n\nThis method sets the scale value in the new object to UIImageSymbolScaleUnspecified.\n\nSee Also\nRemoving configuration attributes\n- configurationWithoutPointSizeAndWeight\nReturns a copy of the current symbol configuration object without point-size and weight information.\n- configurationWithoutTextStyle\nReturns a copy of the current symbol configuration object without font text style information.\n- configurationWithoutWeight\nReturns a copy of the current symbol configuration object without weight information."
  },
  {
    "title": "UIImageOrientationLeft | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationleft",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears to be rotated 90° clockwise. (That is, to present the image in its intended orientation, you must rotate 90° counter-clockwise.)\n\nFigure 1 Correcting image data with left orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationLeftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationLeft\nThe encoded image data is rotated 90° clockwise from the image's intended display orientation."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagereader/configuration/4213103",
    "html": "Parameters\nlhs\n\nThe first value to compare.\n\nrhs\n\nThe second value to compare.\n\nReturn Value\n\ntrue if the two values aren’t equal; otherwise, false.\n\nSee Also\nComparing values\nstatic func == (UIImageReader.Configuration, UIImageReader.Configuration) -> Bool\nReturns a Boolean value that indicates whether two values are equal."
  },
  {
    "title": "UIImage.ResizingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/resizingmode",
    "html": "Topics\nConstants\ncase tile\nThe image is tiled when it is resized. In other words, the interior region of the original image will be repeated to fill in the interior region of the newly resized image.\ncase stretch\nThe image is stretched when it is resized. In other words, the interior region of the original image will be scaled to fill in the interior region of the newly resized imaged.\nRelationships\nConforms To\nSendable\nSee Also\nAccessing image attributes\nvar imageOrientation: UIImage.Orientation\nThe orientation of the receiver’s image.\nenum UIImage.Orientation\nConstants that specify the intended display orientation for an image.\nvar flipsForRightToLeftLayoutDirection: Bool\nA Boolean value that indicates whether the image flips in a right-to-left layout.\nvar resizingMode: UIImage.ResizingMode\nThe resizing mode of the image.\nvar duration: TimeInterval\nThe time interval for displaying an animated image.\nvar capInsets: UIEdgeInsets\nThe end-cap insets.\nvar alignmentRectInsets: UIEdgeInsets\nThe alignment metadata for positioning the image during layout.\nvar isSymbolImage: Bool\nA Boolean value that indicates whether the image is a symbol."
  },
  {
    "title": "symbolImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3294232-symbolimage",
    "html": "Discussion\n\nSymbol images are vector-based images that you use for your app's iconography. The value of this property is YES if the image is either a system-provided symbol image or a custom symbol image that you supplied in your asset catalog. The value is NO for all other image types.\n\nSee Also\nAccessing image attributes\nimageOrientation\nThe orientation of the receiver’s image.\nUIImageOrientation\nConstants that specify the intended display orientation for an image.\nflipsForRightToLeftLayoutDirection\nA Boolean value that indicates whether the image flips in a right-to-left layout.\nresizingMode\nThe resizing mode of the image.\nUIImageResizingMode\nConstants that specify the possible resizing modes for an image.\nduration\nThe time interval for displaying an animated image.\ncapInsets\nThe end-cap insets.\nalignmentRectInsets\nThe alignment metadata for positioning the image during layout."
  },
  {
    "title": "configurationByApplyingConfiguration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageconfiguration/3294236-configurationbyapplyingconfigura",
    "html": "Parameters\notherConfiguration\n\nThe configuration attributes to apply over the current attributes. Values in this object take precedence over values in the image's current configuration object.\n\nReturn Value\n\nA configuration object with the specified image configuration attributes and merged traits.\n\nDiscussion\n\nThis method merges the traits from otherConfiguration with the current object's trait collection, giving precedence to traits in otherConfiguration unless the trait is unspecified. For image-specific traits, this method replaces the current image attributes with the attributes in otherConfiguration.\n\nSee Also\nModifying a configuration object\n- configurationWithTraitCollection:\nReturns a new configuration object that merges the current traits with the traits from the specified trait collection."
  },
  {
    "title": "configurationWithTraitCollection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageconfiguration/3295946-configurationwithtraitcollection",
    "html": "Parameters\ntraitCollection\n\nThe traits to insert or apply to the configuration object. The trait values in this parameter take precedence over the ones in the current configuration object, unless you left the trait with an unspecified value.\n\nReturn Value\n\nA configuration object with the merged set of traits.\n\nDiscussion\n\nUse this method to augment or change the traits in the current configuration object. This method prefers the values from traitCollection over the values in the current configuration object. If the value of the trait is unspecified in both collections, it remains unspecified in the new collection.\n\nSee Also\nModifying a configuration object\n- configurationByApplyingConfiguration:\nReturns a configuration object that applies the specified configuration values on top of the current object’s values."
  },
  {
    "title": "NSTextSelection.Granularity.sentence | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/granularity/sentence",
    "html": "See Also\nDegrees of granularity\ncase character\nA value that represents selection by character.\ncase word\nA value that represents selection by word.\ncase paragraph\nA value that represents selection by paragraph.\ncase line\nA value that represents selection by line."
  },
  {
    "title": "jpegData(compressionQuality:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624115-jpegdata",
    "html": "Parameters\ncompressionQuality\n\nThe quality of the resulting JPEG image, expressed as a value from 0.0 to 1.0. The value 0.0 represents the maximum compression (or lowest quality) while the value 1.0 represents the least compression (or best quality).\n\nReturn Value\n\nA data object containing the JPEG data, or nil if there’s a problem generating the data. This function may return nil if the image has no data or if the underlying CGImageRef contains data in an unsupported bitmap format.\n\nDiscussion\n\nIf the image object’s underlying image data has been purged, calling this function forces that data to be reloaded into memory.\n\nSee Also\nExporting standard bitmap formats\nfunc pngData() -> Data?\nReturns a data object that contains the specified image in PNG format."
  },
  {
    "title": "systemImageNamed:variableValue:withConfiguration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3951381-systemimagenamed",
    "html": "Parameters\nname\n\nThe name of the system symbol image.\n\nvalue\n\nThe value the system uses to customize the image content, between 0 and 1.\n\nconfiguration\n\nThe image configuration the system applies to the image.\n\nReturn Value\n\nThe object containing the image variant that matches the specified configuration data, or nil if no suitable image was found.\n\nDiscussion\n\nUse this method to retrieve system-defined symbol images. To retrieve a custom symbol image you store in an asset catalog, use the init(named:in:variableValue:configuration:) method instead.\n\nThis method checks the system caches for an image with the specified name and returns the variant of that image that’s best suited for the configuration you specify. If a matching image object isn’t in the cache, this method creates the image from the system symbol image.\n\nThe system may purge cached image data at any time to free up memory. Purging occurs only for unused images that are in the cache.\n\nTo look up the names of system symbol images, download the SF Symbols app from Apple Design Resources.\n\nSee Also\nLoading and caching images\nProviding images for different appearances\nSupply image resources appropriate for light and dark appearances and for high-contrast environments.\nConfiguring and displaying symbol images in your UI\nCreate scalable images that integrate with your app’s text, and adjust the appearance of those images dynamically.\nCreating custom symbol images for your app\nCreate, organize, and annotate symbol images using SF Symbols.\n+ imageNamed:inBundle:compatibleWithTraitCollection:\nCreates an image object using the named image asset that’s compatible with the specified trait collection.\n+ imageNamed:inBundle:withConfiguration:\nCreates an image by using the named image asset that’s compatible with the configuration you specify.\n+ imageNamed:inBundle:variableValue:withConfiguration:\nCreates an image by using the name, configuration, and variable value you specify.\n+ imageNamed:\nCreates an image object from the specified named asset.\n+ systemImageNamed:withConfiguration:\nCreates an image object that contains a system symbol image with the specified configuration.\n+ systemImageNamed:compatibleWithTraitCollection:\nCreates an image object that contains a system symbol image appropriate for the specified traits.\n+ systemImageNamed:\nCreates an image object that contains a system symbol image.\nBuilding High-Performance Lists and Collection Views\nImprove the performance of lists and collections in your app with prefetching and image preparation."
  },
  {
    "title": "enumerateSubstrings(from:options:using:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801843-enumeratesubstrings",
    "html": "Required\n\nParameters\nlocation\n\nThe location where the enumeration starts.\n\nopts\n\nOne or more of the available NSString.EnumerationOptions.\n\nblock\n\nA closure to invoke to evaluate the substrings; end the enumeration early by returning false.\n\nDiscussion\n\nSee Also\nEnumerating components of the selection\nfunc enumerateCaretOffsetsInLineFragment(at: NSTextLocation, using: (CGFloat, NSTextLocation, Bool, UnsafeMutablePointer<ObjCBool>) -> Void)\nEnumerates all the insertion point caret offsets from left to right in visual order.\n\nRequired\n\nfunc enumerateContainerBoundaries(from: NSTextLocation, reverse: Bool, using: (NSTextLocation, UnsafeMutablePointer<ObjCBool>) -> Void)\nEnumerates all the container boundaries starting from the location you specify."
  },
  {
    "title": "elastic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/glyphproperty/1403209-elastic",
    "html": "See Also\nGlyph properties\nstatic var null: NSLayoutManager.GlyphProperty\nThe null glyph, which the layout manager ignores.\nstatic var controlCharacter: NSLayoutManager.GlyphProperty\nA glyph representing a control character.\nstatic var nonBaseCharacter: NSLayoutManager.GlyphProperty\nA glyph that combines several properties."
  },
  {
    "title": "NSTextSelectionNavigation.LayoutOrientation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectionnavigation/layoutorientation",
    "html": "Topics\nLayout orientations\ncase horizontal\nThe value that defines horizontal layout orientation.\ncase vertical\nThe value that defines vertical layout orientation.\nRelationships\nConforms To\nSendable\nSee Also\nChanging the characteristics of the selection\nfunc baseWritingDirection(at: NSTextLocation) -> NSTextSelectionNavigation.WritingDirection\nReturns the base writing direction at the location you specify.\n\nRequired\n\nenum NSTextSelectionNavigation.WritingDirection\nValues that describe the writing direction inside a text selection.\nfunc textLayoutOrientation(at: NSTextLocation) -> NSTextSelectionNavigation.LayoutOrientation\nReturns the layout orientation at the location you specify."
  },
  {
    "title": "textLayoutOrientation(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3852580-textlayoutorientation",
    "html": "Parameters\nlocation\n\nThe location where you want to examine the text’s layout orientation.\n\nReturn Value\n\nReturns an NSTextSelectionNavigation.LayoutOrientation that describes the orientation of the layout.\n\nSee Also\nChanging the characteristics of the selection\nfunc baseWritingDirection(at: NSTextLocation) -> NSTextSelectionNavigation.WritingDirection\nReturns the base writing direction at the location you specify.\n\nRequired\n\nenum NSTextSelectionNavigation.WritingDirection\nValues that describe the writing direction inside a text selection.\nenum NSTextSelectionNavigation.LayoutOrientation\nValues that describe the possible layout orientations."
  },
  {
    "title": "documentRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801840-documentrange",
    "html": "Required"
  },
  {
    "title": "nonBaseCharacter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/glyphproperty/1403108-nonbasecharacter",
    "html": "Discussion\n\nA glyph of this type typically represents characters in the Unicode Mn class.\n\nSee Also\nGlyph properties\nstatic var null: NSLayoutManager.GlyphProperty\nThe null glyph, which the layout manager ignores.\nstatic var controlCharacter: NSLayoutManager.GlyphProperty\nA glyph representing a control character.\nstatic var elastic: NSLayoutManager.GlyphProperty\nA glyph with a changeable width, such as a white space character."
  },
  {
    "title": "enumerateContainerBoundaries(from:reverse:using:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselectiondatasource/3801842-enumeratecontainerboundaries",
    "html": "Parameters\nlocation\n\nThe location where the enumeration starts.\n\nisBackward\n\nA Boolean value that indicates the enumeration starts at the end of the container.\n\nblock\n\nAA closure to invoke to evaluate the container boundaries; end the enumeration early by returning false.\n\nDiscussion\n\nThis is an optional method you implement to enumerate the text up to the container or page boundary when the text selection data provider supports this layout functionality.\n\nSee Also\nEnumerating components of the selection\nfunc enumerateCaretOffsetsInLineFragment(at: NSTextLocation, using: (CGFloat, NSTextLocation, Bool, UnsafeMutablePointer<ObjCBool>) -> Void)\nEnumerates all the insertion point caret offsets from left to right in visual order.\n\nRequired\n\nfunc enumerateSubstrings(from: NSTextLocation, options: NSString.EnumerationOptions, using: (String?, NSTextRange, NSTextRange?, UnsafeMutablePointer<ObjCBool>) -> Void)\nEnumerates the textual segment boundaries starting at the location you specify.\n\nRequired"
  },
  {
    "title": "tailSegmentExtended | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmentoptions/3824752-tailsegmentextended",
    "html": "See Also\nGetting segment options\nstatic var headSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var middleFragmentsExcluded: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to enumerate segments in only the first and last line fragments.\nstatic var rangeNotRequired: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework enumerate text segment rectangles, but avoids preparing a range object.\nstatic var upstreamAffinity: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to the place the segment based on the upstream affinity for an empty range."
  },
  {
    "title": "UIImageDynamicRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagedynamicrange",
    "html": "Topics\nEnumeration Cases\nUIImageDynamicRangeConstrainedHigh\nUIImageDynamicRangeHigh\nUIImageDynamicRangeStandard\nUIImageDynamicRangeUnspecified\nSee Also\nSpecifying the dynamic range\nimageDynamicRange\npreferredImageDynamicRange"
  },
  {
    "title": "middleFragmentsExcluded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanager/segmentoptions/3824751-middlefragmentsexcluded",
    "html": "See Also\nGetting segment options\nstatic var headSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var rangeNotRequired: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework enumerate text segment rectangles, but avoids preparing a range object.\nstatic var tailSegmentExtended: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to extend the segment to the tail edge.\nstatic var upstreamAffinity: NSTextLayoutManager.SegmentOptions\nReturns the value that causes the framework to the place the segment based on the upstream affinity for an empty range."
  },
  {
    "title": "textLayoutManager(_:shouldBreakLineBefore:hyphenating:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutmanagerdelegate/3810021-textlayoutmanager",
    "html": "Parameters\ntextLayoutManager\n\nThe text layout manager.\n\nlocation\n\nThe location of the proposed line break.\n\nhyphenating\n\nA Boolean value that indicates the current hyphenation mode.\n\nReturn Value\n\nA Boolean value that indicates if the framework should break the line at the current location.\n\nDiscussion\n\nWhen hyphenating is false, NSTextLayoutManager tries to find the next line break opportunity before location. When hyphenating is true, it’s an auto-hyphenation point.\n\nSee Also\nResponding to layout changes\nfunc textLayoutManager(NSTextLayoutManager, renderingAttributesForLink: Any, at: NSTextLocation, defaultAttributes: [NSAttributedString.Key : Any]) -> [NSAttributedString.Key : Any]?\nThe method the framework calls to return a dictionary of attributes for rendering a link attribute name.\nfunc textLayoutManager(NSTextLayoutManager, textLayoutFragmentFor: NSTextLocation, in: NSTextElement) -> NSTextLayoutFragment\nThe method the framework calls to give the delegate an opportunity to return a custom text layout fragment."
  },
  {
    "title": "textStorage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextstorageobserving/3810051-textstorage",
    "html": "Required"
  },
  {
    "title": "UIImageHEICRepresentation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/4210341-uiimageheicrepresentation",
    "html": "See Also\nSpecifying the dynamic range\nisHighDynamicRange\n- imageRestrictedToStandardDynamicRange\nUIImageDynamicRange"
  },
  {
    "title": "configurationWithPaletteColors: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3810054-configurationwithpalettecolors",
    "html": "Parameters\npaletteColors\n\nThe colors to apply to the symbol.\n\nDiscussion\n\nWhen you create an image with this configuration, the system applies each color to the corresponding layer in the symbol layer hierarchy.\n\nIf the symbol has only two nonconsecutive layers (primary and tertiary), specifying two colors applies the second color to the tertiary layer. Specifying three colors ignores the second color and applies the third color to the tertiary layer.\n\nFor this color configuration to have an effect, your symbol image must have the following:\n\nIts renderingMode set to UIImageRenderingModeAlwaysTemplate or UIImageRenderingModeAutomatic.\n\nHierarchical layer annotations. If your symbol doesn’t have hierarchical layer annotations, the resulting image is a monochrome (template) symbol image.\n\nThis color configuration can’t combine with hierarchical color configurations that you create with configurationWithHierarchicalColor:. If you attempt to combine this configuration with a hierarchical color configuration, the last configuration that you specify takes precedence, overwriting the previous color configuration.\n\nSee Also\nCreating a color configuration\n+ configurationWithHierarchicalColor:\nCreates a color configuration with a color scheme that originates from one color.\n+ configurationPreferringMulticolor\nCreates a color configuration that specifies that the symbol image uses its multicolor variant, if one exists.\n+ configurationPreferringMonochrome\nCreates a color configuration that specifies that the symbol image uses its monochrome variant."
  },
  {
    "title": "UIImageSymbolWeight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolweight",
    "html": "Overview\n\nThe definition of a symbol image includes multiple scale and weight variants. The weight variants offer a way to progressively thicken some or all of the image's lines. Weights do not correspond to a specific line thickness.\n\nTopics\nSymbol image weights\nUIImageSymbolWeightUnspecified\nAn unspecified symbol image weight.\nUIImageSymbolWeightUltraLight\nAn ultralight weight.\nUIImageSymbolWeightThin\nA thin weight\nUIImageSymbolWeightLight\nA light weight.\nUIImageSymbolWeightRegular\nA regular weight.\nUIImageSymbolWeightMedium\nA medium weight.\nUIImageSymbolWeightSemibold\nA semibold weight.\nUIImageSymbolWeightBold\nA bold weight.\nUIImageSymbolWeightHeavy\nA heavy weight.\nUIImageSymbolWeightBlack\nAn ultra-heavy weight.\nGetting the font weight\nUIFontWeightForImageSymbolWeight\nReturns the font weight for the specified symbol weight.\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use."
  },
  {
    "title": "configurationPreferringMulticolor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3810052-configurationpreferringmulticolo",
    "html": "Return Value\n\nA symbol configuration that acquires the multicolor variant of a symbol.\n\nDiscussion\n\nUse this method to acquire the multicolor variant of a symbol, if one exists. This method is the primary approach to retrieving multicolor symbols.\n\nFor this color configuration to have an effect, your symbol image must have the following:\n\nIts renderingMode set to UIImageRenderingModeAlwaysTemplate or UIImageRenderingModeAutomatic.\n\nMulticolor annotations. If your symbol doesn’t have multicolor annotations, the resulting image is a monochrome (template) symbol image. If you combine this configuration with a hierarchical or palette color configuration using configurationByApplyingConfiguration:, the resulting symbol uses the multicolor variant, if one exists, and defaults to the hierarchical or palette variant otherwise.\n\nSee Also\nCreating a color configuration\n+ configurationWithHierarchicalColor:\nCreates a color configuration with a color scheme that originates from one color.\n+ configurationWithPaletteColors:\nCreates a color configuration with a color scheme from a palette of multiple colors.\n+ configurationPreferringMonochrome\nCreates a color configuration that specifies that the symbol image uses its monochrome variant."
  },
  {
    "title": "configurationWithFont:scale: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294240-configurationwithfont",
    "html": "Parameters\nfont\n\nThe font from which to derive the configuration attributes.\n\nscale\n\nThe symbol image scale variant to select. Use this parameter to make the image appear bigger or smaller than text that uses the same font. For a list of possible values, see UIImageSymbolScale.\n\nReturn Value\n\nA new symbol configuration object with the specified information.\n\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\nUIImageSymbolScale\nConstants that indicate which scale variant of a symbol image to use.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "UIImageSymbolScale | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolscale",
    "html": "Overview\n\nThe definition of a symbol image includes multiple scale and weight variants. Scale variants offer a way to define the size of the image relative to layout guides in the symbol image's definition file. The system chooses the appropriate size variant based on the available space and configuration options.\n\nTopics\nSymbol image scales\nUIImageSymbolScaleDefault\nThe default scale variant that matches the system usage.\nUIImageSymbolScaleUnspecified\nAn unspecified scale.\nUIImageSymbolScaleSmall\nThe small variant of the symbol image.\nUIImageSymbolScaleMedium\nThe medium variant of the symbol image\nUIImageSymbolScaleLarge\nThe large variant of the symbol image.\nSee Also\nCreating a symbol configuration\n+ configurationWithPointSize:\nCreates a configuration object with the specified point-size information.\n+ configurationWithPointSize:weight:\nCreates a configuration object with the specified point-size and weight information.\n+ configurationWithPointSize:weight:scale:\nCreates a configuration object with the specified point-size, weight, and scale information.\n+ configurationWithScale:\nCreates a configuration object with the specified scale information.\n+ configurationWithTextStyle:\nCreates a configuration object with the specified font text style information.\n+ configurationWithTextStyle:scale:\nCreates a configuration object with the specified font text style and scale information.\n+ configurationWithWeight:\nCreates a configuration object with the specified weight information.\n+ configurationWithFont:\nCreates a configuration object with the specified font information.\n+ configurationWithFont:scale:\nCreates a configuration object with the specified font and scale information.\nUIImageSymbolWeight\nConstants that indicate which weight variant of a symbol image to use."
  },
  {
    "title": "UICollectionView.CellRegistration.Handler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/cellregistration/handler",
    "html": "See Also\nCreating a cell registration\ninit(handler: UICollectionView.CellRegistration<Cell, Item>.Handler)\nCreates a cell registration with the specified registration handler.\ninit(cellNib: UINib, handler: UICollectionView.CellRegistration<Cell, Item>.Handler)\nCreates a cell registration with the specified registration handler and nib file."
  },
  {
    "title": "layoutManager(_:shouldBreakLineByWordBeforeCharacterAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403051-layoutmanager",
    "html": "Parameters\nlayoutManager\n\nThe layout manager doing the layout.\n\ncharIndex\n\nIndex of the character delimiting the break point search.\n\nReturn Value\n\ntrue if the current line break point is acceptable; false if the layout manager should find the next break point opportunity before charIndex.\n\nSee Also\nHandling line fragments\nfunc layoutManager(NSLayoutManager, shouldBreakLineByHyphenatingBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified character.\nfunc layoutManager(NSLayoutManager, lineSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add to the end of a line.\nfunc layoutManager(NSLayoutManager, paragraphSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the end of a paragraph.\nfunc layoutManager(NSLayoutManager, paragraphSpacingBeforeGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the beginning of a paragraph.\nfunc layoutManager(NSLayoutManager, boundingBoxForControlGlyphAt: Int, for: NSTextContainer, proposedLineFragment: CGRect, glyphPosition: CGPoint, characterIndex: Int) -> CGRect\nReturns the bounding rectangle for the specified control glyph with the specified parameters.\nfunc layoutManager(NSLayoutManager, shouldSetLineFragmentRect: UnsafeMutablePointer<CGRect>, lineFragmentUsedRect: UnsafeMutablePointer<CGRect>, baselineOffset: UnsafeMutablePointer<CGFloat>, in: NSTextContainer, forGlyphRange: NSRange) -> Bool\nCustomizes the line fragment geometry before committing it to the layout cache."
  },
  {
    "title": "layoutManager(_:paragraphSpacingAfterGlyphAt:withProposedLineFragmentRect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403076-layoutmanager",
    "html": "Parameters\nlayoutManager\n\nThe layout manager doing the layout.\n\nglyphIndex\n\nThe index of the glyph at the end of the line.\n\nrect\n\nThe proposed line fragment rectangle for the current line.\n\nReturn Value\n\nThe paragraph spacing after the current line.\n\nDiscussion\n\nThis message is sent while each line is laid out to enable the layout manager delegate to customize the shape of line.\n\nSee Also\nHandling line fragments\nfunc layoutManager(NSLayoutManager, shouldBreakLineByHyphenatingBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified character.\nfunc layoutManager(NSLayoutManager, shouldBreakLineByWordBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified word.\nfunc layoutManager(NSLayoutManager, lineSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add to the end of a line.\nfunc layoutManager(NSLayoutManager, paragraphSpacingBeforeGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the beginning of a paragraph.\nfunc layoutManager(NSLayoutManager, boundingBoxForControlGlyphAt: Int, for: NSTextContainer, proposedLineFragment: CGRect, glyphPosition: CGPoint, characterIndex: Int) -> CGRect\nReturns the bounding rectangle for the specified control glyph with the specified parameters.\nfunc layoutManager(NSLayoutManager, shouldSetLineFragmentRect: UnsafeMutablePointer<CGRect>, lineFragmentUsedRect: UnsafeMutablePointer<CGRect>, baselineOffset: UnsafeMutablePointer<CGFloat>, in: NSTextContainer, forGlyphRange: NSRange) -> Bool\nCustomizes the line fragment geometry before committing it to the layout cache."
  },
  {
    "title": "collectionView(_:layout:sizeForItemAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617708-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view object displaying the flow layout.\n\ncollectionViewLayout\n\nThe layout object requesting the information.\n\nindexPath\n\nThe index path of the item.\n\nReturn Value\n\nThe width and height of the specified item. Both values must be greater than 0.\n\nDiscussion\n\nIf you do not implement this method, the flow layout uses the values in its itemSize property to set the size of items instead. Your implementation of this method can return a fixed set of sizes or dynamically adjust the sizes based on the cell’s content.\n\nThe flow layout does not crop a cell’s bounds to make it fit into the grid. Therefore, the values you return must allow for the item to be displayed fully in the collection view. For example, in a vertically scrolling grid, the width of a single item must not exceed the width of the collection view (minus any section insets) itself. However, in the scrolling direction, items can be larger than the collection view because the remaining content can always be scrolled into view."
  },
  {
    "title": "UIImage.Orientation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/orientation",
    "html": "Overview\n\nOrientation values are commonly found in image metadata, and specifying image orientation correctly can be important both for displaying the image and for certain kinds of image processing.\n\nThe UIImage class automatically handles the transform necessary to present an image in the correct display orientation according to its orientation metadata, so an image object's imageOrientation property simply indicates which transform was applied.\n\nFor example, an iOS device camera always encodes pixel data in the camera sensor's native landscape orientation, along with metadata indicating the camera orientation. When UIImage loads a photo shot in portrait orientation, it automatically applies a 90° rotation before displaying the image data, and the image's imageOrientation value of UIImage.Orientation.right indicates that this rotation has been applied.\n\nFigure 1 UIImage rotates an image with right orientation for correct display\n\nNote\n\nSome frameworks describe image orientation using the CGImagePropertyOrientation type (or the raw TIFF/Exif numeric values that type defines symbols for). However, the underlying numeric values of that type are incompatible with UIImage.Orientation. For conversion help, see the CGImagePropertyOrientation overview.\n\nTopics\nImage orientations\ncase up\nThe original pixel data matches the image's intended display orientation.\ncase down\nThe image has been rotated 180° from the orientation of its original pixel data.\ncase left\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\ncase right\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\ncase upMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\ncase downMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\ncase leftMirrored\nThe image has been rotated 90° clockwise and flipped horizontally from the orientation of its original pixel data.\ncase rightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelationships\nConforms To\nSendable\nSee Also\nAccessing image attributes\nvar imageOrientation: UIImage.Orientation\nThe orientation of the receiver’s image.\nvar flipsForRightToLeftLayoutDirection: Bool\nA Boolean value that indicates whether the image flips in a right-to-left layout.\nvar resizingMode: UIImage.ResizingMode\nThe resizing mode of the image.\nenum UIImage.ResizingMode\nConstants that specify the possible resizing modes for an image.\nvar duration: TimeInterval\nThe time interval for displaying an animated image.\nvar capInsets: UIEdgeInsets\nThe end-cap insets.\nvar alignmentRectInsets: UIEdgeInsets\nThe alignment metadata for positioning the image during layout.\nvar isSymbolImage: Bool\nA Boolean value that indicates whether the image is a symbol.\nRelated Documentation\nenum CGImagePropertyOrientation\nA value describing the intended display orientation for an image."
  },
  {
    "title": "NSTextSelection.Granularity.line | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/granularity/line",
    "html": "See Also\nDegrees of granularity\ncase character\nA value that represents selection by character.\ncase word\nA value that represents selection by word.\ncase paragraph\nA value that represents selection by paragraph.\ncase sentence\nA value that represents selection by sentence."
  },
  {
    "title": "NSTextSelection.Granularity.paragraph | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/granularity/paragraph",
    "html": "See Also\nDegrees of granularity\ncase character\nA value that represents selection by character.\ncase word\nA value that represents selection by word.\ncase line\nA value that represents selection by line.\ncase sentence\nA value that represents selection by sentence."
  },
  {
    "title": "strokedCheckmarkImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3343562-strokedcheckmarkimage",
    "html": "See Also\nGetting standard system images\naddImage\nThe standard image for indicating the addition of content.\nremoveImage\nThe standard image for indicating the removal of content.\nactionsImage\nThe standard image for indicating user-initiated actions.\ncheckmarkImage\nThe standard image for a checkmark on a filled-circle background."
  },
  {
    "title": "CGImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624159-cgimage",
    "html": "Discussion\n\nIf the image data has been purged because of memory constraints, invoking this method forces that data to be loaded back into memory. Reloading the image data may incur a performance penalty.\n\nIf the UIImage object was initialized using a CIImage object, the value of the property is NULL.\n\nSee Also\nGetting the image data\nCGImage\nThe underlying Quartz image data.\nCIImage\nThe underlying Core Image data.\nimages\nThe complete array of image objects that compose the animation of an animated object.\nimageAsset\nThe image asset (if any) for the image."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenestandardplacement/4176667",
    "html": "Parameters\nlhs\n\nA placement to compare.\n\nrhs\n\nAnother placement to compare.\n\nReturn Value\n\ntrue if lhs isn’t equal to rhs; otherwise, false.\n\nSee Also\nComparing placements\nstatic func == (UIWindowSceneStandardPlacement, UIWindowSceneStandardPlacement) -> Bool\nAn operator for checking whether two placements are equal.\nvar hashValue: Int\nThe hash value of the placement option.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "standard() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowscenestandardplacement/4176672-standard",
    "html": "Return Value\n\nA placement that indicates the system should present the window using the default style of the system in the space.\n\nSee Also\nCreating a placement\ninit()\nCreates a placement that indicates the system should present the window using the default style of the system in the space."
  },
  {
    "title": "prominent() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneprominentplacement/4176665-prominent",
    "html": "Return Value\n\nA placement that indicates the system should present the window more prominently than others in the space.\n\nSee Also\nCreating a placement\ninit()\nCreates a placement that indicates the system should present the window more prominently than others in the space."
  },
  {
    "title": "NSTextLayoutFragment.State.calculatedUsageBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/state/calculatedusagebounds",
    "html": "See Also\nConstants that describe layout bounds\ncase estimatedUsageBounds\nThe text layout manager hasn’t performed a full layout yet for the region covered by this layout fragment and is returning an estimated bounds.\ncase layoutAvailable\nMeasurements for the text line fragments and layout fragment are available.\ncase none\nNo layout information is available."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneprominentplacement/4176661",
    "html": "Parameters\na\n\nA placement to compare.\n\nb\n\nAnother placement to compare.\n\nReturn Value\n\ntrue if a is equal to b; otherwise, false.\n\nSee Also\nComparing placements\nstatic func != (UIWindowSceneProminentPlacement, UIWindowSceneProminentPlacement) -> Bool\nAn operator for checking whether two placements aren’t equal.\nvar hashValue: Int\nThe hash value of the placement option.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneprominentplacement/4176660",
    "html": "Parameters\nlhs\n\nA placement to compare.\n\nrhs\n\nAnother placement to compare.\n\nReturn Value\n\ntrue if lhs isn’t equal to rhs; otherwise, false.\n\nSee Also\nComparing placements\nstatic func == (UIWindowSceneProminentPlacement, UIWindowSceneProminentPlacement) -> Bool\nAn operator for checking whether two placements are equal.\nvar hashValue: Int\nThe hash value of the placement option.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneprominentplacement/4176662-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparing placements\nstatic func == (UIWindowSceneProminentPlacement, UIWindowSceneProminentPlacement) -> Bool\nAn operator for checking whether two placements are equal.\nstatic func != (UIWindowSceneProminentPlacement, UIWindowSceneProminentPlacement) -> Bool\nAn operator for checking whether two placements aren’t equal.\nvar hashValue: Int\nThe hash value of the placement option."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneprominentplacement/4176663-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing placements\nstatic func == (UIWindowSceneProminentPlacement, UIWindowSceneProminentPlacement) -> Bool\nAn operator for checking whether two placements are equal.\nstatic func != (UIWindowSceneProminentPlacement, UIWindowSceneProminentPlacement) -> Bool\nAn operator for checking whether two placements aren’t equal.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "NSTextLayoutFragment.State.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/state/none",
    "html": "See Also\nConstants that describe layout bounds\ncase calculatedUsageBounds\nThe layout fragment measurements are available without text line fragments.\ncase estimatedUsageBounds\nThe text layout manager hasn’t performed a full layout yet for the region covered by this layout fragment and is returning an estimated bounds.\ncase layoutAvailable\nMeasurements for the text line fragments and layout fragment are available."
  },
  {
    "title": "NSTextLayoutFragment.State.estimatedUsageBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/state/estimatedusagebounds",
    "html": "See Also\nConstants that describe layout bounds\ncase calculatedUsageBounds\nThe layout fragment measurements are available without text line fragments.\ncase layoutAvailable\nMeasurements for the text line fragments and layout fragment are available.\ncase none\nNo layout information is available."
  },
  {
    "title": "NSTextSelection.Affinity.upstream | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/affinity/upstream",
    "html": "See Also\nAffinities\ncase downstream\nThe value that defines the visual location of the text cursor between the head of line that contains the selection location."
  },
  {
    "title": "NSTextSelection.Affinity.downstream | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/affinity/downstream",
    "html": "See Also\nAffinities\ncase upstream\nThe value that defines the visual location of the text cursor to the tail of the previous line."
  },
  {
    "title": "textContentManager(_:textElementAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextcontentmanagerdelegate/3809932-textcontentmanager",
    "html": "Parameters\ntextContentManager\n\nThe content manager.\n\nlocation\n\nThe location of the element.\n\nReturn Value\n\nAn NSTextElement.\n\nDiscussion\n\nWhen non-nil, textContentManager uses the text element you specify instead of creating one based on its standard mapping logic."
  },
  {
    "title": "NSTextLayoutFragment.State.layoutAvailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/state/layoutavailable",
    "html": "See Also\nConstants that describe layout bounds\ncase calculatedUsageBounds\nThe layout fragment measurements are available without text line fragments.\ncase estimatedUsageBounds\nThe text layout manager hasn’t performed a full layout yet for the region covered by this layout fragment and is returning an estimated bounds.\ncase none\nNo layout information is available."
  },
  {
    "title": "textViewportLayoutController(_:configureRenderingSurfaceFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextviewportlayoutcontrollerdelegate/3824776-textviewportlayoutcontroller",
    "html": "Required\n\nParameters\ntextViewportLayoutController\n\nThe NSTextViewportLayoutController associated with this text layout fragment.\n\ntextLayoutFragment\n\nAn NSTextLayoutFragment.\n\nDiscussion\n\nThe delegate presents the text layout fragment in the UI, for example, in a sublayer or a subview. Layout information such as viewportBounds on textViewportLayoutController isn’t up to date at the point of this call.\n\nSee Also\nResponding to changes in the viewport\nfunc textViewportLayoutControllerDidLayout(NSTextViewportLayoutController)\nThe method the framework calls when the text viewport layout controller finishes its layout process.\nfunc textViewportLayoutControllerWillLayout(NSTextViewportLayoutController)\nThe method the framework calls before the text viewport layout controller starts its layout process.\nfunc viewportBounds(for: NSTextViewportLayoutController) -> CGRect\nReturns the current viewport, which is the view visible bounds plus the overdraw area.\n\nRequired"
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextcontentmanager/enumerationoptions/3852637-init",
    "html": "Parameters\nrawValue\n\nAn unsigned Integer that represents one of the enumeration options."
  },
  {
    "title": "reverse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/enumerationoptions/3809982-reverse",
    "html": "See Also\nLayout fragment characteristics\nstatic var ensuresExtraLineFragment: NSTextLayoutFragment.EnumerationOptions\nSynthesize the extra line fragment when necessary.\nstatic var ensuresLayout: NSTextLayoutFragment.EnumerationOptions\nWhen enumerating, tell the layout fragments to layout their contents.\nstatic var estimatesSize: NSTextLayoutFragment.EnumerationOptions\nWhen enumerating, tell the layout fragments to estimate their size."
  },
  {
    "title": "estimatesSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/enumerationoptions/3809980-estimatessize",
    "html": "See Also\nLayout fragment characteristics\nstatic var ensuresExtraLineFragment: NSTextLayoutFragment.EnumerationOptions\nSynthesize the extra line fragment when necessary.\nstatic var ensuresLayout: NSTextLayoutFragment.EnumerationOptions\nWhen enumerating, tell the layout fragments to layout their contents.\nstatic var reverse: NSTextLayoutFragment.EnumerationOptions\nCauses the enumeration to start from the last element."
  },
  {
    "title": "UITitlebarSeparatorStyle.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebarseparatorstyle/automatic",
    "html": "See Also\nStyles\ncase line\nA style indicating that the title bar separator is a line.\ncase none\nA style indicating that there’s no title bar separator.\ncase shadow\nA style indicating that the title bar separator is a shadow."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlayoutfragment/enumerationoptions/3825585-init",
    "html": "Parameters\nrawValue\n\nAn unsigned integer that represents one of the text layout enumeration options."
  },
  {
    "title": "UITitlebarSeparatorStyle.line | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebarseparatorstyle/line",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the type of separator.\ncase none\nA style indicating that there’s no title bar separator.\ncase shadow\nA style indicating that the title bar separator is a shadow."
  },
  {
    "title": "UIImage.RenderingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/renderingmode",
    "html": "Overview\n\nThe rendering mode controls how UIKit uses color information to display an image. See Providing images for different appearances for creating tintable images with template mode.\n\nTopics\nRendering modes\ncase automatic\nDraw the image using the context’s default rendering mode.\ncase alwaysOriginal\nAlways draw the original image, without treating it as a template.\ncase alwaysTemplate\nAlways draw the image as a template image, ignoring its color information.\nRelationships\nConforms To\nSendable\nSee Also\nGetting rendering information\nvar renderingMode: UIImage.RenderingMode\nA setting that determines how the app renders an image.\nvar imageRendererFormat: UIGraphicsImageRendererFormat\nThe preferred image renderer format for the image."
  },
  {
    "title": "preparesImagesForDisplay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagereader/configuration/4213109-preparesimagesfordisplay",
    "html": "Discussion\n\nThe default value is false.\n\nSee Also\nConfiguration properties\nvar prefersHighDynamicRange: Bool\nA Boolean value that indicates whether the image reader should decode the image as HDR when the type is capable of decoding in either SDR or HDR.\nvar preferredThumbnailSize: CGSize\nThe thumbnail size in pixels that the image reader makes the image.\nvar pixelsPerInch: Double\nThe integral scale that the image reader applies to the image."
  },
  {
    "title": "isEqualToConfiguration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagesymbolconfiguration/3294252-isequaltoconfiguration",
    "html": "Parameters\notherConfiguration\n\nThe other configuration object. Specify nil to compare the current configuration object to the configuration object in the unspecifiedConfiguration property.\n\nReturn Value\n\nYES if the trait collections and image configuration values of both objects match; otherwise, NO."
  },
  {
    "title": "UIImageOrientationLeftMirrored | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimageorientation/uiimageorientationleftmirrored",
    "html": "Discussion\n\nIf an image is encoded with this orientation, then displayed by software unaware of orientation metadata, the image appears to be horizontally mirrored, then rotated 90° counter-clockwise. (That is, to present the image in its intended orientation, you can rotate it 90° clockwise, then flip horizontally.)\n\nFigure 1 Correcting image data with leftMirrored orientation for display\n\nSee Also\nImage orientations\nUIImageOrientationUp\nThe original pixel data matches the image's intended display orientation.\nUIImageOrientationDown\nThe image has been rotated 180° from the orientation of its original pixel data.\nUIImageOrientationLeft\nThe image has been rotated 90° counterclockwise from the orientation of its original pixel data.\nUIImageOrientationRight\nThe image has been rotated 90° clockwise from the orientation of its original pixel data.\nUIImageOrientationUpMirrored\nThe image has been horizontally flipped from the orientation of its original pixel data.\nUIImageOrientationDownMirrored\nThe image has been vertically flipped from the orientation of its original pixel data.\nUIImageOrientationRightMirrored\nThe image has been rotated 90° counterclockwise and flipped horizontally from the orientation of its original pixel data.\nRelated Documentation\nkCGImagePropertyOrientationLeftMirrored\nThe encoded image data is horizontally flipped and rotated 90° counter-clockwise from the image's intended display orientation."
  },
  {
    "title": "pngData() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624096-pngdata",
    "html": "Parameters\nimage\n\nThe original image data.\n\nReturn Value\n\nA data object containing the PNG data, or nil if there was a problem generating the data. This function may return nil if the image has no data or if the underlying CGImageRef contains data in an unsupported bitmap format.\n\nDiscussion\n\nIf the image object’s underlying image data has been purged, calling this function forces that data to be reloaded into memory.\n\nSee Also\nExporting standard bitmap formats\nfunc jpegData(compressionQuality: CGFloat) -> Data?\nReturns a data object that contains the image in JPEG format."
  },
  {
    "title": "prominent() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneplacement/4176657-prominent",
    "html": "Return Value\n\nA placement that indicates the system should present the window more prominently than others in the space.\n\nSee Also\nPositioning windows\nstatic func standard() -> Self\nCreates a placement that indicates the system should present the window using the default style of the system in the space.\nAvailable when Self is UIWindowSceneStandardPlacement."
  },
  {
    "title": "preferredThumbnailSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagereader/configuration/4213107-preferredthumbnailsize",
    "html": "Discussion\n\nThe default value is CGSizeZero.\n\nSee Also\nConfiguration properties\nvar prefersHighDynamicRange: Bool\nA Boolean value that indicates whether the image reader should decode the image as HDR when the type is capable of decoding in either SDR or HDR.\nvar preparesImagesForDisplay: Bool\nA Boolean value that indicates whether the image reader prepares the image for display.\nvar pixelsPerInch: Double\nThe integral scale that the image reader applies to the image."
  },
  {
    "title": "systemImageNamed:compatibleWithTraitCollection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3295943-systemimagenamed",
    "html": "Parameters\nname\n\nThe name of the system symbol image.\n\ntraitCollection\n\nThe traits associated with the intended environment for the image. Use this parameter to ensure that the correct variant of the image is loaded. If you specify nil, this method uses the traits associated with the main screen.\n\nReturn Value\n\nThe object containing the image variant that matches the specified trait collection, or nil if no suitable image was found.\n\nDiscussion\n\nUse this method to retrieve system-defined symbol images. To retrieve a custom symbol image you store in an asset catalog, use the imageNamed:inBundle:compatibleWithTraitCollection: method instead.\n\nThis method checks the system caches for an image with the name you specify and returns the variant of that image that’s best suited for traits.\n\nIf a matching image object isn’t in the cache, this method creates the image from the system symbol image. The system may purge cached image data at any time to free up memory. Purging occurs only for unused images that are in the cache.\n\nTo look up the names of system symbol images, download the SF Symbols app from Apple Design Resources.\n\nSee Also\nLoading and caching images\nProviding images for different appearances\nSupply image resources appropriate for light and dark appearances and for high-contrast environments.\nConfiguring and displaying symbol images in your UI\nCreate scalable images that integrate with your app’s text, and adjust the appearance of those images dynamically.\nCreating custom symbol images for your app\nCreate, organize, and annotate symbol images using SF Symbols.\n+ imageNamed:inBundle:compatibleWithTraitCollection:\nCreates an image object using the named image asset that’s compatible with the specified trait collection.\n+ imageNamed:inBundle:withConfiguration:\nCreates an image by using the named image asset that’s compatible with the configuration you specify.\n+ imageNamed:inBundle:variableValue:withConfiguration:\nCreates an image by using the name, configuration, and variable value you specify.\n+ imageNamed:\nCreates an image object from the specified named asset.\n+ systemImageNamed:withConfiguration:\nCreates an image object that contains a system symbol image with the specified configuration.\n+ systemImageNamed:variableValue:withConfiguration:\nCreates an image object that contains a system symbol image with the configuration and variable value you specify.\n+ systemImageNamed:\nCreates an image object that contains a system symbol image.\nBuilding High-Performance Lists and Collection Views\nImprove the performance of lists and collections in your app with prefetching and image preparation."
  },
  {
    "title": "systemImageNamed:withConfiguration: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3294234-systemimagenamed",
    "html": "Parameters\nname\n\nThe name of the system symbol image.\n\nconfiguration\n\nThe image configuration the system applies to the image.\n\nReturn Value\n\nThe object containing the image variant that matches the specified configuration data, or nil if no suitable image was found.\n\nDiscussion\n\nUse this method to retrieve system-defined symbol images. To retrieve a custom symbol image you store in an asset catalog, use the imageNamed:inBundle:withConfiguration: method instead.\n\nThis method checks the system caches for an image with the specified name and returns the variant of that image that’s best suited for the configuration you specify. If a matching image object isn’t in the cache, this method creates the image from the system symbol image.\n\nThe system may purge cached image data at any time to free up memory. Purging occurs only for unused images that are in the cache.\n\nTo look up the names of system symbol images, download the SF Symbols app from Apple Design Resources.\n\nSee Also\nLoading and caching images\nProviding images for different appearances\nSupply image resources appropriate for light and dark appearances and for high-contrast environments.\nConfiguring and displaying symbol images in your UI\nCreate scalable images that integrate with your app’s text, and adjust the appearance of those images dynamically.\nCreating custom symbol images for your app\nCreate, organize, and annotate symbol images using SF Symbols.\n+ imageNamed:inBundle:compatibleWithTraitCollection:\nCreates an image object using the named image asset that’s compatible with the specified trait collection.\n+ imageNamed:inBundle:withConfiguration:\nCreates an image by using the named image asset that’s compatible with the configuration you specify.\n+ imageNamed:inBundle:variableValue:withConfiguration:\nCreates an image by using the name, configuration, and variable value you specify.\n+ imageNamed:\nCreates an image object from the specified named asset.\n+ systemImageNamed:variableValue:withConfiguration:\nCreates an image object that contains a system symbol image with the configuration and variable value you specify.\n+ systemImageNamed:compatibleWithTraitCollection:\nCreates an image object that contains a system symbol image appropriate for the specified traits.\n+ systemImageNamed:\nCreates an image object that contains a system symbol image.\nBuilding High-Performance Lists and Collection Views\nImprove the performance of lists and collections in your app with prefetching and image preparation."
  },
  {
    "title": "minimumLineSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617717-minimumlinespacing",
    "html": "Discussion\n\nIf the delegate object does not implement the collectionView(_:layout:minimumLineSpacingForSectionAt:) method, the flow layout uses the value in this property to set the spacing between lines in a section.\n\nFor a vertically scrolling grid, this value represents the minimum spacing between successive rows. For a horizontally scrolling grid, this value represents the minimum spacing between successive columns. This spacing is not applied to the space between the header and the first line or between the last line and the footer.\n\nThe default value of this property is 10.0.\n\nSee Also\nConfiguring item spacing\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar itemSize: CGSize\nThe default size to use for cells.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "estimatedItemSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617709-estimateditemsize",
    "html": "Discussion\n\nProviding an estimated cell size can improve the performance of the collection view when the cells adjust their size dynamically. The estimated value lets the collection view defer some calculations to determine the actual size of its content. Cells that aren’t onscreen are assumed to be the estimated height.\n\nThe default value of this property is CGSizeZero. Setting it to any other value, like automaticSize, causes the collection view to query each cell for its actual size using the cell’s preferredLayoutAttributesFitting(_:) method.\n\nIf all of your cells are the same size, use the itemSize property, instead of this property, to specify the cell size instead.\n\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar itemSize: CGSize\nThe default size to use for cells.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "UITitlebarSeparatorStyle.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebarseparatorstyle/none",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the type of separator.\ncase line\nA style indicating that the title bar separator is a line.\ncase shadow\nA style indicating that the title bar separator is a shadow."
  },
  {
    "title": "UITitlebarSeparatorStyle.shadow | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebarseparatorstyle/shadow",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the type of separator.\ncase line\nA style indicating that the title bar separator is a line.\ncase none\nA style indicating that there’s no title bar separator."
  },
  {
    "title": "layoutManagerDidInvalidateLayout(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402993-layoutmanagerdidinvalidatelayout",
    "html": "Parameters\nsender\n\nThe layout manager that invalidated layout.\n\nDiscussion\n\nThis method is invoked only when layout was complete and then became invalidated for some reason. Delegates can use this information to show an indicator of background layout or to enable a button that forces immediate layout of text.\n\nSee Also\nInvalidating glyphs and layout\nfunc layoutManager(NSLayoutManager, shouldGenerateGlyphs: UnsafePointer<CGGlyph>, properties: UnsafePointer<NSLayoutManager.GlyphProperty>, characterIndexes: UnsafePointer<Int>, font: UIFont, forGlyphRange: NSRange) -> Int\nEnables customization of the initial glyph generation process.\nfunc layoutManager(NSLayoutManager, shouldUse: NSLayoutManager.ControlCharacterAction, forControlCharacterAt: Int) -> NSLayoutManager.ControlCharacterAction\nReturns the control character action for the control character at the specified character index.\nstruct NSLayoutManager.ControlCharacterAction\nConstants that describe actions for control characters.\nRelated Documentation\nText Layout Programming Guide"
  },
  {
    "title": "horizontalTab | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/controlcharacteraction/1403233-horizontaltab",
    "html": "See Also\nActions\nstatic var containerBreak: NSLayoutManager.ControlCharacterAction\nAn action that triggers a break in layout for the current container.\nstatic var lineBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a line break.\nstatic var paragraphBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a paragraph break.\nstatic var whitespace: NSLayoutManager.ControlCharacterAction\nAn action that adds whitespace.\nstatic var zeroAdvancement: NSLayoutManager.ControlCharacterAction\nAn action that removes the glyph from layout."
  },
  {
    "title": "lineBreak | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/controlcharacteraction/1403126-linebreak",
    "html": "See Also\nActions\nstatic var containerBreak: NSLayoutManager.ControlCharacterAction\nAn action that triggers a break in layout for the current container.\nstatic var horizontalTab: NSLayoutManager.ControlCharacterAction\nAn action that inserts a horizontal tab.\nstatic var paragraphBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a paragraph break.\nstatic var whitespace: NSLayoutManager.ControlCharacterAction\nAn action that adds whitespace.\nstatic var zeroAdvancement: NSLayoutManager.ControlCharacterAction\nAn action that removes the glyph from layout."
  },
  {
    "title": "paragraphBreak | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/controlcharacteraction/1403231-paragraphbreak",
    "html": "Discussion\n\nThe value in firstLineHeadIndent is used for the following glyph.\n\nSee Also\nActions\nstatic var containerBreak: NSLayoutManager.ControlCharacterAction\nAn action that triggers a break in layout for the current container.\nstatic var horizontalTab: NSLayoutManager.ControlCharacterAction\nAn action that inserts a horizontal tab.\nstatic var lineBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a line break.\nstatic var whitespace: NSLayoutManager.ControlCharacterAction\nAn action that adds whitespace.\nstatic var zeroAdvancement: NSLayoutManager.ControlCharacterAction\nAn action that removes the glyph from layout."
  },
  {
    "title": "layoutManager(_:shouldBreakLineByHyphenatingBeforeCharacterAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403128-layoutmanager",
    "html": "Parameters\nlayoutManager\n\nThe layout manager doing the layout.\n\ncharIndex\n\nIndex of the character delimiting the hyphenation point search.\n\nReturn Value\n\ntrue if the current hyphenation point is acceptable; false if the layout manager should find the next hyphenation opportunity before charIndex.\n\nSee Also\nHandling line fragments\nfunc layoutManager(NSLayoutManager, shouldBreakLineByWordBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified word.\nfunc layoutManager(NSLayoutManager, lineSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add to the end of a line.\nfunc layoutManager(NSLayoutManager, paragraphSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the end of a paragraph.\nfunc layoutManager(NSLayoutManager, paragraphSpacingBeforeGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the beginning of a paragraph.\nfunc layoutManager(NSLayoutManager, boundingBoxForControlGlyphAt: Int, for: NSTextContainer, proposedLineFragment: CGRect, glyphPosition: CGPoint, characterIndex: Int) -> CGRect\nReturns the bounding rectangle for the specified control glyph with the specified parameters.\nfunc layoutManager(NSLayoutManager, shouldSetLineFragmentRect: UnsafeMutablePointer<CGRect>, lineFragmentUsedRect: UnsafeMutablePointer<CGRect>, baselineOffset: UnsafeMutablePointer<CGFloat>, in: NSTextContainer, forGlyphRange: NSRange) -> Bool\nCustomizes the line fragment geometry before committing it to the layout cache."
  },
  {
    "title": "layoutManager(_:lineSpacingAfterGlyphAt:withProposedLineFragmentRect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402948-layoutmanager",
    "html": "Parameters\nlayoutManager\n\nThe layout manager doing the layout.\n\nglyphIndex\n\nThe index of the glyph at the end of the line.\n\nrect\n\nThe proposed line fragment rectangle for the current line.\n\nReturn Value\n\nThe line spacing after the current line.\n\nDiscussion\n\nThis message is sent while each line is laid out to enable the layout manager delegate to customize the shape of line.\n\nSee Also\nHandling line fragments\nfunc layoutManager(NSLayoutManager, shouldBreakLineByHyphenatingBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified character.\nfunc layoutManager(NSLayoutManager, shouldBreakLineByWordBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified word.\nfunc layoutManager(NSLayoutManager, paragraphSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the end of a paragraph.\nfunc layoutManager(NSLayoutManager, paragraphSpacingBeforeGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the beginning of a paragraph.\nfunc layoutManager(NSLayoutManager, boundingBoxForControlGlyphAt: Int, for: NSTextContainer, proposedLineFragment: CGRect, glyphPosition: CGPoint, characterIndex: Int) -> CGRect\nReturns the bounding rectangle for the specified control glyph with the specified parameters.\nfunc layoutManager(NSLayoutManager, shouldSetLineFragmentRect: UnsafeMutablePointer<CGRect>, lineFragmentUsedRect: UnsafeMutablePointer<CGRect>, baselineOffset: UnsafeMutablePointer<CGFloat>, in: NSTextContainer, forGlyphRange: NSRange) -> Bool\nCustomizes the line fragment geometry before committing it to the layout cache."
  },
  {
    "title": "Control Characters | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1619233-control_characters",
    "html": "Deprecated\n\nUse NSLayoutManager.ControlCharacterAction instead.\n\nTopics\nConstants\nvar NSControlCharacterContainerBreakAction: Int\nA character that causes a break in layout.\nvar NSControlCharacterHorizontalTabAction: Int\nAn action that inserts a horizontal tab.\nvar NSControlCharacterLineBreakAction: Int\nAn action that causes a line break.\nvar NSControlCharacterParagraphBreakAction: Int\nAn action that causes a paragraph break.\nvar NSControlCharacterWhitespaceAction: Int\nAn action that programmatically changes the white space around the glyph.\nvar NSControlCharacterZeroAdvancementAction: Int\nAn action that removes the glyph from layout."
  },
  {
    "title": "layoutManager(_:paragraphSpacingBeforeGlyphAt:withProposedLineFragmentRect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403177-layoutmanager",
    "html": "Parameters\nlayoutManager\n\nThe layout manager doing the layout.\n\nglyphIndex\n\nThe index of the glyph at the beginning of the line.\n\nrect\n\nThe proposed line fragment rectangle for the current line.\n\nReturn Value\n\nThe paragraph spacing before the current line.\n\nDiscussion\n\nThis message is sent while each line is laid out to enable the layout manager delegate to customize the shape of line.\n\nSee Also\nHandling line fragments\nfunc layoutManager(NSLayoutManager, shouldBreakLineByHyphenatingBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified character.\nfunc layoutManager(NSLayoutManager, shouldBreakLineByWordBeforeCharacterAt: Int) -> Bool\nAsks the delegate whether to break the line at the specified word.\nfunc layoutManager(NSLayoutManager, lineSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add to the end of a line.\nfunc layoutManager(NSLayoutManager, paragraphSpacingAfterGlyphAt: Int, withProposedLineFragmentRect: CGRect) -> CGFloat\nReturns the amount of space to add at the end of a paragraph.\nfunc layoutManager(NSLayoutManager, boundingBoxForControlGlyphAt: Int, for: NSTextContainer, proposedLineFragment: CGRect, glyphPosition: CGPoint, characterIndex: Int) -> CGRect\nReturns the bounding rectangle for the specified control glyph with the specified parameters.\nfunc layoutManager(NSLayoutManager, shouldSetLineFragmentRect: UnsafeMutablePointer<CGRect>, lineFragmentUsedRect: UnsafeMutablePointer<CGRect>, baselineOffset: UnsafeMutablePointer<CGFloat>, in: NSTextContainer, forGlyphRange: NSRange) -> Bool\nCustomizes the line fragment geometry before committing it to the layout cache."
  },
  {
    "title": "collectionView(_:layout:minimumLineSpacingForSectionAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617705-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view object displaying the flow layout.\n\ncollectionViewLayout\n\nThe layout object requesting the information.\n\nsection\n\nThe index number of the section whose line spacing is needed.\n\nReturn Value\n\nThe minimum space (measured in points) to apply between successive lines in a section.\n\nDiscussion\n\nIf you do not implement this method, the flow layout uses the value in its minimumLineSpacing property to set the space between lines instead. Your implementation of this method can return a fixed value or return different spacing values for each section.\n\nFor a vertically scrolling grid, this value represents the minimum spacing between successive rows. For a horizontally scrolling grid, this value represents the minimum spacing between successive columns. This spacing is not applied to the space between the header and the first line or between the last line and the footer.\n\nSee Also\nGetting the section spacing\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, insetForSectionAt: Int) -> UIEdgeInsets\nAsks the delegate for the margins to apply to content in the specified section.\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt: Int) -> CGFloat\nAsks the delegate for the spacing between successive items in the rows or columns of a section."
  },
  {
    "title": "layoutManager(_:didCompleteLayoutFor:atEnd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1402926-layoutmanager",
    "html": "Parameters\naLayoutManager\n\nThe layout manager doing the layout.\n\naTextContainer\n\nThe text container in which layout is complete. If nil, if there aren’t enough containers to hold all the text; the delegate can use this information as a cue to add another text container.\n\nflag\n\nIf true, aLayoutManager is finished laying out its text—this also means that aTextContainer is the final text container used by the layout manager. Delegates can use this information to show an indicator or background or to enable or disable a button that forces immediate layout of text.\n\nDiscussion\n\nThis message is sent whenever a text container has been filled. This method can be useful for paginating.\n\nSee Also\nResponding to text container layout\nfunc layoutManager(NSLayoutManager, textContainer: NSTextContainer, didChangeGeometryFrom: CGSize)\nInforms the delegate when the layout manager invalidates layout due to a change in the geometry of the specified text container."
  },
  {
    "title": "collectionView(_:layout:referenceSizeForFooterInSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617713-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view object displaying the flow layout.\n\ncollectionViewLayout\n\nThe layout object requesting the information.\n\nsection\n\nThe index of the section whose footer size is being requested.\n\nReturn Value\n\nThe size of the footer. If you return a value of size (0, 0), no footer is added.\n\nDiscussion\n\nIf you do not implement this method, the flow layout uses the value in its footerReferenceSize property to set the size of the footer.\n\nDuring layout, only the size that corresponds to the appropriate scrolling direction is used. For example, for the vertical scrolling direction, the layout object uses the height value specified by this property. (In that instance, the width of the footer would be set to the width of the collection view.) If the size in the appropriate scrolling dimension is 0, no footer is added.\n\nSee Also\nGetting the header and footer sizes\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, referenceSizeForHeaderInSection: Int) -> CGSize\nAsks the delegate for the size of the header view in the specified section."
  },
  {
    "title": "targetContentOffset(forProposedContentOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617724-targetcontentoffset",
    "html": "Parameters\nproposedContentOffset\n\nThe proposed point (in the coordinate space of the collection view’s content view) for the upper-left corner of the visible content. This represents the point that the collection view has calculated as the most likely value to use at the end of the animation.\n\nReturn Value\n\nThe content offset that you want to use instead. The default implementation of this method returns the value in the proposedContentOffset parameter.\n\nDiscussion\n\nDuring layout updates, or when transitioning between layouts, the collection view calls this method to give you the opportunity to change the proposed content offset to use at the end of the animation. You might override this method if the animations or transition might cause items to be positioned in a way that is not optimal for your design.\n\nThe collection view calls this method after calling the prepare() and collectionViewContentSize methods.\n\nSee Also\nProviding layout attributes\nclass var layoutAttributesClass: AnyClass\nThe class to use when creating layout attributes objects.\nfunc prepare()\nTells the layout object to update the current layout.\nfunc layoutAttributesForElements(in: CGRect) -> [UICollectionViewLayoutAttributes]?\nRetrieves the layout attributes for all of the cells and views in the specified rectangle.\nfunc layoutAttributesForItem(at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves layout information for an item at the specified index path with a corresponding cell.\nfunc layoutAttributesForInteractivelyMovingItem(at: IndexPath, withTargetPosition: CGPoint) -> UICollectionViewLayoutAttributes\nRetrieves the layout attributes of an item when it is being moved interactively by the user.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified supplementary view.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nRetrieves the layout attributes for the specified decoration view.\nfunc targetContentOffset(forProposedContentOffset: CGPoint, withScrollingVelocity: CGPoint) -> CGPoint\nRetrieves the point at which to stop scrolling."
  },
  {
    "title": "collectionView(_:layout:referenceSizeForHeaderInSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617702-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view object displaying the flow layout.\n\ncollectionViewLayout\n\nThe layout object requesting the information.\n\nsection\n\nThe index of the section whose header size is being requested.\n\nReturn Value\n\nThe size of the header. If you return a value of size (0, 0), no header is added.\n\nDiscussion\n\nIf you do not implement this method, the flow layout uses the value in its headerReferenceSize property to set the size of the header.\n\nDuring layout, only the size that corresponds to the appropriate scrolling direction is used. For example, for the vertical scrolling direction, the layout object uses the height value returned by your method. (In that instance, the width of the header would be set to the width of the collection view.) If the size in the appropriate scrolling dimension is 0, no header is added.\n\nSee Also\nGetting the header and footer sizes\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, referenceSizeForFooterInSection: Int) -> CGSize\nAsks the delegate for the size of the footer view in the specified section."
  },
  {
    "title": "UICollectionView.SelfSizingInvalidation.disabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/selfsizinginvalidation/disabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, no sizing updates occur after calling invalidateIntrinsicContentSize() on a self-sizing cell or its contentView."
  },
  {
    "title": "checkmarkImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3343561-checkmarkimage",
    "html": "See Also\nGetting standard system images\naddImage\nThe standard image for indicating the addition of content.\nremoveImage\nThe standard image for indicating the removal of content.\nactionsImage\nThe standard image for indicating user-initiated actions.\nstrokedCheckmarkImage\nThe standard image for a checkmark on a tinted circle with a white-stroked border."
  },
  {
    "title": "UICollectionView.SelfSizingInvalidation.enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/selfsizinginvalidation/enabled",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize() on a self-sizing cell or its contentView causes the cell to resize if necessary."
  },
  {
    "title": "NSTextSelection.Granularity.character | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/granularity/character",
    "html": "See Also\nDegrees of granularity\ncase word\nA value that represents selection by word.\ncase paragraph\nA value that represents selection by paragraph.\ncase line\nA value that represents selection by line.\ncase sentence\nA value that represents selection by sentence."
  },
  {
    "title": "NSTextSelection.Granularity.word | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextselection/granularity/word",
    "html": "See Also\nDegrees of granularity\ncase character\nA value that represents selection by character.\ncase paragraph\nA value that represents selection by paragraph.\ncase line\nA value that represents selection by line.\ncase sentence\nA value that represents selection by sentence."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwindowsceneprominentplacement/4176664-init",
    "html": "See Also\nCreating a placement\nstatic func prominent() -> UIWindowSceneProminentPlacement\nCreates a placement that indicates the system should present the window more prominently than others in the space."
  },
  {
    "title": "setNeedsUpdateConfiguration() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600598-setneedsupdateconfiguration",
    "html": "Discussion\n\nYou call this method when you need the view to update its configuration according to the current configuration state. The system calls this method automatically when the view’s configurationState changes, as well as in other circumstances that may require an update. The system might combine multiple requests into a single update.\n\nIf you add custom states to the view’s configuration state, make sure to call this method every time those custom states change.\n\nSee Also\nManaging the state\nvar configurationState: UIViewConfigurationState\nThe current configuration state of the view.\nfunc updateConfiguration(using: UIViewConfigurationState)\nUpdates the view’s configuration using the current state.\nvar configurationUpdateHandler: UITableViewHeaderFooterView.ConfigurationUpdateHandler?\nA block for handling updates to the view’s configuration using the current state.\ntypealias UITableViewHeaderFooterView.ConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "automaticallyUpdatesContentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600593-automaticallyupdatescontentconfi",
    "html": "Discussion\n\nWhen this value is true, the cell automatically calls updated(for:) on its contentConfiguration when the view’s configurationState changes, and applies the updated configuration back to the view. The default value is true.\n\nIf you override updateConfiguration(using:) to manually update and customize the content configuration, disable automatic updates by setting this property to false.\n\nSee Also\nManaging the content\nfunc defaultContentConfiguration() -> UIListContentConfiguration\nRetrieves a default list content configuration for the view’s style.\nvar contentConfiguration: (UIContentConfiguration)?\nThe current content configuration of the view.\nvar contentView: UIView\nThe content view of the header or footer."
  },
  {
    "title": "init(style:title:handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/2902340-init",
    "html": "Parameters\nstyle\n\nThe style information to apply to the action button.\n\ntitle\n\nThe title of the action button.\n\nhandler\n\nThe handler to execute when the user selects the action.\n\nReturn Value\n\nAn initialized contextual action object."
  },
  {
    "title": "init(handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/cellregistration/3600940-init",
    "html": "See Also\nCreating a cell registration\ninit(cellNib: UINib, handler: UICollectionView.CellRegistration<Cell, Item>.Handler)\nCreates a cell registration with the specified registration handler and nib file.\ntypealias UICollectionView.CellRegistration.Handler\nA closure that handles the cell registration and configuration."
  },
  {
    "title": "bottom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition/1618043-bottom",
    "html": "Discussion\n\nThis option is mutually exclusive with the top and centeredVertically options."
  },
  {
    "title": "UITableViewCell.CellStyle.subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/cellstyle/subtitle",
    "html": "See Also\nCell styles\ncase `default`\nA simple style for a cell with a text label (black and left-aligned) and an optional image view.\ncase value1\nA style for a cell with a label on the left side of the cell with left-aligned and black text; on the right side is a label that has smaller blue text and is right-aligned.\ncase value2\nA style for a cell with a label on the left side of the cell with text that’s right-aligned and blue; on the right side of the cell is another label with smaller text that’s left-aligned and black."
  },
  {
    "title": "pageScrolled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/notification/1620190-pagescrolled",
    "html": "Discussion\n\nThis notification includes a parameter that is an NSString object that contains a description of the new scroll position. An assistive app outputs the description string in the parameter.\n\nUse this notification to provide custom information about the contents of the screen after a user performs a VoiceOver scroll gesture. For example, a tab-based app might provide a string like Tab 3 of 5, or an app that displays information in pages might provide a string like Page 19 of 27.\n\nWhen an assistive app repeatedly receives the same scroll position string, it indicates to users that scrolling can't continue due to a border or boundary.\n\nPost this notification after the accessibilityScroll(_:) method using the post(notification:argument:) function.\n\nSee Also\nNotifications\nstatic var announcement: UIAccessibility.Notification\nA notification that an app posts when it needs to convey an announcement to the assistive app.\nstatic var layoutChanged: UIAccessibility.Notification\nA notification that an app posts when the layout of a screen changes.\nstatic var screenChanged: UIAccessibility.Notification\nA notification that an app posts when a new view appears that occupies a major portion of the screen.\nstatic var pauseAssistiveTechnology: UIAccessibility.Notification\nA notification that pauses an assistive app's operations temporarily.\nstatic var resumeAssistiveTechnology: UIAccessibility.Notification\nA notification that resumes an assistive app's operations temporarily.\nstruct UIAccessibility.AssistiveTechnologyIdentifier\nIdentifiers for assistive apps."
  },
  {
    "title": "UICollectionView.SupplementaryRegistration.Handler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/supplementaryregistration/handler",
    "html": "See Also\nCreating a supplementary registration\ninit(elementKind: String, handler: UICollectionView.SupplementaryRegistration<Supplementary>.Handler)\nCreates a supplementary registration for the specified element kind with a registration handler.\ninit(supplementaryNib: UINib, elementKind: String, handler: UICollectionView.SupplementaryRegistration<Supplementary>.Handler)\nCreates a supplementary registration for the specified element kind with a registration handler and nib file."
  },
  {
    "title": "init(elementKind:handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/supplementaryregistration/3600943-init",
    "html": "See Also\nCreating a supplementary registration\ninit(supplementaryNib: UINib, elementKind: String, handler: UICollectionView.SupplementaryRegistration<Supplementary>.Handler)\nCreates a supplementary registration for the specified element kind with a registration handler and nib file.\ntypealias UICollectionView.SupplementaryRegistration.Handler\nA closure that handles the supplementary view registration and configuration."
  },
  {
    "title": "UITableViewCell.SeparatorStyle.singleLineEtched | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/separatorstyle/singlelineetched",
    "html": "Discussion\n\nThis style is currently only supported for grouped-style table views."
  },
  {
    "title": "init(supplementaryNib:elementKind:handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/supplementaryregistration/3600944-init",
    "html": "See Also\nCreating a supplementary registration\ninit(elementKind: String, handler: UICollectionView.SupplementaryRegistration<Supplementary>.Handler)\nCreates a supplementary registration for the specified element kind with a registration handler.\ntypealias UICollectionView.SupplementaryRegistration.Handler\nA closure that handles the supplementary view registration and configuration."
  },
  {
    "title": "alphaShift | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeymodifierflags/1621103-alphashift",
    "html": "See Also\nModifier flags\nstatic var shift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Shift key.\nstatic var control: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Control key.\nstatic var alternate: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Option key.\nstatic var command: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Command key.\nstatic var numericPad: UIKeyModifierFlags\nA modifier flag that indicates the user pressed a key located on the numeric keypad."
  },
  {
    "title": "shift | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeymodifierflags/1621098-shift",
    "html": "See Also\nModifier flags\nstatic var alphaShift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Caps Lock key.\nstatic var control: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Control key.\nstatic var alternate: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Option key.\nstatic var command: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Command key.\nstatic var numericPad: UIKeyModifierFlags\nA modifier flag that indicates the user pressed a key located on the numeric keypad."
  },
  {
    "title": "command | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeymodifierflags/1621085-command",
    "html": "See Also\nModifier flags\nstatic var alphaShift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Caps Lock key.\nstatic var shift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Shift key.\nstatic var control: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Control key.\nstatic var alternate: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Option key.\nstatic var numericPad: UIKeyModifierFlags\nA modifier flag that indicates the user pressed a key located on the numeric keypad."
  },
  {
    "title": "control | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeymodifierflags/1621121-control",
    "html": "See Also\nModifier flags\nstatic var alphaShift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Caps Lock key.\nstatic var shift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Shift key.\nstatic var alternate: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Option key.\nstatic var command: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Command key.\nstatic var numericPad: UIKeyModifierFlags\nA modifier flag that indicates the user pressed a key located on the numeric keypad."
  },
  {
    "title": "numericPad | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeymodifierflags/1621132-numericpad",
    "html": "See Also\nModifier flags\nstatic var alphaShift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Caps Lock key.\nstatic var shift: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Shift key.\nstatic var control: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Control key.\nstatic var alternate: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Option key.\nstatic var command: UIKeyModifierFlags\nA modifier flag that indicates the user pressed the Command key."
  },
  {
    "title": "UICollectionViewFlowLayout.SectionInsetReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/sectioninsetreference",
    "html": "Topics\nConstants\ncase fromContentInset\nSection insets are defined in relation to the collection view’s content inset.\ncase fromLayoutMargins\nSection insets are defined in relation to the margins of the layout.\ncase fromSafeArea\nSection insets are defined in relation to the safe area of the layout.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar itemSize: CGSize\nThe default size to use for cells.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to."
  },
  {
    "title": "sectionInsetReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/2921645-sectioninsetreference",
    "html": "Discussion\n\nThe default value of this property is UICollectionViewFlowLayout.SectionInsetReference.fromContentInset.\n\nThe minimum value of this property is always the collection view's contentInset. For example, if the value of this property is UICollectionViewFlowLayout.SectionInsetReference.fromSafeArea, but the adjusted content inset is greater than the combination of the safe area and section insets, then the section's content is aligned with the content inset instead.\n\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar itemSize: CGSize\nThe default size to use for cells.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "sectionInset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617714-sectioninset",
    "html": "Discussion\n\nIf the delegate object does not implement the collectionView(_:layout:insetForSectionAt:) method, the flow layout uses the value in this property to set the margins for each section.\n\nSection insets reflect the spacing at the outer edges of the section. The margins affect the initial position of the header view, the minimum space on either side of each line of items, and the distance from the last line to the footer view. The margin insets do not affect the size of the header and footer views in the non scrolling direction.\n\nThe default edge insets are all set to 0.\n\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar itemSize: CGSize\nThe default size to use for cells.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "automaticSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1779556-automaticsize",
    "html": "Discussion\n\nSet this constant as the value for the estimatedItemSize property to enable self-sizing cells for your collection view. This is a non-zero, placeholder value that tells the collection view to query each cell for its actual size using the cell’s preferredLayoutAttributesFitting(_:) method.\n\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar itemSize: CGSize\nThe default size to use for cells.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "minimumInteritemSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617706-minimuminteritemspacing",
    "html": "Discussion\n\nIf the delegate object does not implement the collectionView(_:layout:minimumInteritemSpacingForSectionAt:) method, the flow layout uses the value in this property to set the spacing between items in the same line.\n\nFor a vertically scrolling grid, this value represents the minimum spacing between items in the same row. For a horizontally scrolling grid, this value represents the minimum spacing between items in the same column. This spacing is used to compute how many items can fit in a single line, but after the number of items is determined, the actual spacing may possibly be adjusted upward.\n\nThe default value of this property is 10.0.\n\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar itemSize: CGSize\nThe default size to use for cells.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "itemSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617711-itemsize",
    "html": "Discussion\n\nIf the delegate does not implement the collectionView(_:layout:sizeForItemAt:) method, the flow layout uses the value in this property to set the size of each cell. This results in cells that all have the same size.\n\nThe default size value is (50.0, 50.0).\n\nSee Also\nConfiguring item spacing\nvar minimumLineSpacing: CGFloat\nThe minimum spacing to use between lines of items in the grid.\nvar minimumInteritemSpacing: CGFloat\nThe minimum spacing to use between items in the same row.\nvar estimatedItemSize: CGSize\nThe estimated size of cells in the collection view.\nclass let automaticSize: CGSize\nA placeholder size for self-sizing cells.\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section.\nvar sectionInsetReference: UICollectionViewFlowLayout.SectionInsetReference\nThe boundary that section insets are defined in relation to.\nenum UICollectionViewFlowLayout.SectionInsetReference\nConstants that describe the reference point of the section insets."
  },
  {
    "title": "scrollDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617720-scrolldirection",
    "html": "Discussion\n\nThe grid layout scrolls along one axis only, either horizontally or vertically. For the non scrolling axis, the width of the collection view in that dimension serves as starting width of the content.\n\nThe default value of this property is UICollectionView.ScrollDirection.vertical.\n\nSee Also\nConfiguring the scroll direction\nenum UICollectionView.ScrollDirection\nConstants that indicate the direction of scrolling for the layout."
  },
  {
    "title": "UIContextualAction.Handler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/handler",
    "html": "Parameters\naction\n\nThe object containing information about the selected action.\n\nsourceView\n\nThe view in which the action was displayed.\n\ncompletionHandler\n\nThe handler block for you to execute after you have performed the action. This block has no return value and takes the following parameter:\n\nactionPerformed\n\nA Boolean value indicating whether you performed the action. Specify true if you performed the action or false if you were unable to perform the action for some reason.\n\nSee Also\nGetting the configuration details\nvar handler: UIContextualAction.Handler\nThe handler block to execute when the user selects the action.\nvar style: UIContextualAction.Style\nThe style that applies to the action button.\nenum UIContextualAction.Style\nConstants indicating the style information that applies to the action button."
  },
  {
    "title": "UIBlurEffect.Style.systemMaterialLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemmateriallight",
    "html": "See Also\nLight styles\ncase systemUltraThinMaterialLight\nA blur effect that creates the appearance of an ultra-thin material and is always light.\ncase systemThinMaterialLight\nA blur effect that creates the appearance of a thin material and is always light.\ncase systemThickMaterialLight\nA blur effect that creates the appearance of a material that’s thicker than normal and is always light.\ncase systemChromeMaterialLight\nA blur effect that creates the appearance of the system chrome and is always light."
  },
  {
    "title": "UIBlurEffect.Style.prominent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/prominent",
    "html": "See Also\nAdditional styles\ncase extraLight\nThe area of the view is lighter than the underlying view.\ncase light\nThe area of the view is the same approximate lightness of the underlying view.\ncase dark\nThe area of the view is darker than the underlying view.\ncase extraDark\nThe area of the view is even more dark than the underlying view.\ncase regular\nA regular blur style that adapts to the user interface style."
  },
  {
    "title": "UIBlurEffect.Style.systemThinMaterialLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemthinmateriallight",
    "html": "See Also\nLight styles\ncase systemUltraThinMaterialLight\nA blur effect that creates the appearance of an ultra-thin material and is always light.\ncase systemMaterialLight\nA blur effect that creates the appearance of a material with normal thickness and is always light.\ncase systemThickMaterialLight\nA blur effect that creates the appearance of a material that’s thicker than normal and is always light.\ncase systemChromeMaterialLight\nA blur effect that creates the appearance of the system chrome and is always light."
  },
  {
    "title": "UITitlebarToolbarStyle.expanded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebartoolbarstyle/expanded",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the toolbar’s appearance and location.\ncase preference\nA style indicating that the toolbar appears below the window title with toolbar items centered in the toolbar.\ncase unified\nA style indicating that the toolbar appears inline with the window title.\ncase unifiedCompact\nA style indicating that the toolbar appears inline with the window title and with reduced margins to allow more focus on the window’s contents."
  },
  {
    "title": "UITitlebarToolbarStyle.unifiedCompact | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebartoolbarstyle/unifiedcompact",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the toolbar’s appearance and location.\ncase expanded\nA style indicating that the toolbar appears below the window title.\ncase preference\nA style indicating that the toolbar appears below the window title with toolbar items centered in the toolbar.\ncase unified\nA style indicating that the toolbar appears inline with the window title."
  },
  {
    "title": "NSControlCharacterWhitespaceAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscontrolcharacterwhitespaceaction",
    "html": "Discussion\n\nThe width for a glyph with this action is determined by the delegate method layoutManager(_:boundingBoxForControlGlyphAt:for:proposedLineFragment:glyphPosition:characterIndex:) if the method is implemented; otherwise, same as NSControlCharacterZeroAdvancementAction."
  },
  {
    "title": "containerBreak | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/controlcharacteraction/1403148-containerbreak",
    "html": "See Also\nActions\nstatic var horizontalTab: NSLayoutManager.ControlCharacterAction\nAn action that inserts a horizontal tab.\nstatic var lineBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a line break.\nstatic var paragraphBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a paragraph break.\nstatic var whitespace: NSLayoutManager.ControlCharacterAction\nAn action that adds whitespace.\nstatic var zeroAdvancement: NSLayoutManager.ControlCharacterAction\nAn action that removes the glyph from layout."
  },
  {
    "title": "UITitlebarToolbarStyle.preference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebartoolbarstyle/preference",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the toolbar’s appearance and location.\ncase expanded\nA style indicating that the toolbar appears below the window title.\ncase unified\nA style indicating that the toolbar appears inline with the window title.\ncase unifiedCompact\nA style indicating that the toolbar appears inline with the window title and with reduced margins to allow more focus on the window’s contents."
  },
  {
    "title": "UITitlebarToolbarStyle.unified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebartoolbarstyle/unified",
    "html": "See Also\nStyles\ncase automatic\nA style indicating that the system determines the toolbar’s appearance and location.\ncase expanded\nA style indicating that the toolbar appears below the window title.\ncase preference\nA style indicating that the toolbar appears below the window title with toolbar items centered in the toolbar.\ncase unifiedCompact\nA style indicating that the toolbar appears inline with the window title and with reduced margins to allow more focus on the window’s contents."
  },
  {
    "title": "zeroAdvancement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/controlcharacteraction/1403185-zeroadvancement",
    "html": "Discussion\n\nGlyphs with this action are filtered out from layout (notShownAttribute(forGlyphAt:) == YES for the glyph).\n\nSee Also\nActions\nstatic var containerBreak: NSLayoutManager.ControlCharacterAction\nAn action that triggers a break in layout for the current container.\nstatic var horizontalTab: NSLayoutManager.ControlCharacterAction\nAn action that inserts a horizontal tab.\nstatic var lineBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a line break.\nstatic var paragraphBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a paragraph break.\nstatic var whitespace: NSLayoutManager.ControlCharacterAction\nAn action that adds whitespace."
  },
  {
    "title": "UITitlebarToolbarStyle.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uititlebartoolbarstyle/automatic",
    "html": "See Also\nStyles\ncase expanded\nA style indicating that the toolbar appears below the window title.\ncase preference\nA style indicating that the toolbar appears below the window title with toolbar items centered in the toolbar.\ncase unified\nA style indicating that the toolbar appears inline with the window title.\ncase unifiedCompact\nA style indicating that the toolbar appears inline with the window title and with reduced margins to allow more focus on the window’s contents."
  },
  {
    "title": "NSLayoutManager.ControlCharacterAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanager/controlcharacteraction",
    "html": "Overview\n\nThese constants layoutManager(_:shouldUse:forControlCharacterAt:) delegate method uses.\n\nTopics\nActions\nstatic var containerBreak: NSLayoutManager.ControlCharacterAction\nAn action that triggers a break in layout for the current container.\nstatic var horizontalTab: NSLayoutManager.ControlCharacterAction\nAn action that inserts a horizontal tab.\nstatic var lineBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a line break.\nstatic var paragraphBreak: NSLayoutManager.ControlCharacterAction\nAn action that causes a paragraph break.\nstatic var whitespace: NSLayoutManager.ControlCharacterAction\nAn action that adds whitespace.\nstatic var zeroAdvancement: NSLayoutManager.ControlCharacterAction\nAn action that removes the glyph from layout.\nInitializers\ninit(rawValue: Int)\nCreates a new control character action with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nInvalidating glyphs and layout\nfunc layoutManagerDidInvalidateLayout(NSLayoutManager)\nInforms the delegate when the specified layout manager invalidates layout information (not glyph information).\nfunc layoutManager(NSLayoutManager, shouldGenerateGlyphs: UnsafePointer<CGGlyph>, properties: UnsafePointer<NSLayoutManager.GlyphProperty>, characterIndexes: UnsafePointer<Int>, font: UIFont, forGlyphRange: NSRange) -> Int\nEnables customization of the initial glyph generation process.\nfunc layoutManager(NSLayoutManager, shouldUse: NSLayoutManager.ControlCharacterAction, forControlCharacterAt: Int) -> NSLayoutManager.ControlCharacterAction\nReturns the control character action for the control character at the specified character index."
  },
  {
    "title": "collectionView(_:layout:insetForSectionAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617718-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view object displaying the flow layout.\n\ncollectionViewLayout\n\nThe layout object requesting the information.\n\nsection\n\nThe index number of the section whose insets are needed.\n\nReturn Value\n\nThe margins to apply to items in the section.\n\nDiscussion\n\nIf you do not implement this method, the flow layout uses the value in its sectionInset property to set the margins instead. Your implementation of this method can return a fixed set of margin sizes or return different margin sizes for each section.\n\nSection insets are margins applied only to the items in the section. They represent the distance between the header view and the first line of items and between the last line of items and the footer view. They also indicate the spacing on either side of a single line of items. They do not affect the size of the headers or footers themselves.\n\nSee Also\nGetting the section spacing\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, minimumLineSpacingForSectionAt: Int) -> CGFloat\nAsks the delegate for the spacing between successive rows or columns of a section.\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt: Int) -> CGFloat\nAsks the delegate for the spacing between successive items in the rows or columns of a section."
  },
  {
    "title": "layoutManager(_:textContainer:didChangeGeometryFrom:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutmanagerdelegate/1403049-layoutmanager",
    "html": "Parameters\nlayoutManager\n\nThe layout manager invalidating layout.\n\ntextContainer\n\nThe text container that changed geometry.\n\noldSize\n\nThe size of the text container before it changed geometry.\n\nDiscussion\n\nThe delegate can react to the geometry change and perform adjustments such as recreating an exclusion path.\n\nSee Also\nResponding to text container layout\nfunc layoutManager(NSLayoutManager, didCompleteLayoutFor: NSTextContainer?, atEnd: Bool)\nInforms the delegate when the layout manager finishes laying out text in the specified text container."
  },
  {
    "title": "collectionView(_:layout:minimumInteritemSpacingForSectionAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdelegateflowlayout/1617696-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view object displaying the flow layout.\n\ncollectionViewLayout\n\nThe layout object requesting the information.\n\nsection\n\nThe index number of the section whose inter-item spacing is needed.\n\nReturn Value\n\nThe minimum space (measured in points) to apply between successive items in the lines of a section.\n\nDiscussion\n\nIf you do not implement this method, the flow layout uses the value in its minimumInteritemSpacing property to set the space between items instead. Your implementation of this method can return a fixed value or return different spacing values for each section.\n\nFor a vertically scrolling grid, this value represents the minimum spacing between items in the same row. For a horizontally scrolling grid, this value represents the minimum spacing between items in the same column. This spacing is used to compute how many items can fit in a single line, but after the number of items is determined, the actual spacing may possibly be adjusted upward.\n\nSee Also\nGetting the section spacing\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, insetForSectionAt: Int) -> UIEdgeInsets\nAsks the delegate for the margins to apply to content in the specified section.\nfunc collectionView(UICollectionView, layout: UICollectionViewLayout, minimumLineSpacingForSectionAt: Int) -> CGFloat\nAsks the delegate for the spacing between successive rows or columns of a section."
  },
  {
    "title": "register(_:forDecorationViewOfKind:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617732-register",
    "html": "Parameters\nnib\n\nThe nib object containing the cell definition. The nib file must contain only one top-level object and that object must be of the type UICollectionReusableView.\n\ndecorationViewKind\n\nThe element kind of the decoration view. You can use this string to distinguish between decoration views with different purposes in the layout. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nThis method gives the layout object a chance to register a decoration view for use in the collection view. Decoration views provide visual adornments to a section or to the entire collection view but are not otherwise tied to the data provided by the collection view’s data source.\n\nYou do not need to create decoration views explicitly. After registering one, it is up to the layout object to decide when a decoration view is needed and return the corresponding layout attributes from its layoutAttributesForElements(in:) method. For layout attributes that specify a decoration view, the collection view creates (or reuses) a view and displays it automatically based on the registered information.\n\nIf you previously registered a class or nib file with the same kind string, the class you specify in the viewClass parameter replaces the old entry. You may specify nil for viewClass if you want to unregister the decoration view.\n\nSee Also\nRegistering decoration views\nfunc register(AnyClass?, forDecorationViewOfKind: String)\nRegisters a class for use in creating decoration views for a collection view."
  },
  {
    "title": "UICollectionView.SelfSizingInvalidation.enabledIncludingConstraints | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/selfsizinginvalidation/enabledincludingconstraints",
    "html": "Discussion\n\nIf you use this self-sizing invalidation mode, calling invalidateIntrinsicContentSize() on a self-sizing cell or its contentView causes the cell to resize if necessary. Additionally, any Auto Layout change within the contentView of a self-sizing cell automatically calls invalidateIntrinsicContentSize()."
  },
  {
    "title": "UIBlurEffect.Style.systemUltraThinMaterialLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemultrathinmateriallight",
    "html": "See Also\nLight styles\ncase systemThinMaterialLight\nA blur effect that creates the appearance of a thin material and is always light.\ncase systemMaterialLight\nA blur effect that creates the appearance of a material with normal thickness and is always light.\ncase systemThickMaterialLight\nA blur effect that creates the appearance of a material that’s thicker than normal and is always light.\ncase systemChromeMaterialLight\nA blur effect that creates the appearance of the system chrome and is always light."
  },
  {
    "title": "transitionProgress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout/1622191-transitionprogress",
    "html": "Discussion\n\nDuring the transition, you should set the value of this property periodically and call invalidateLayout() to force the collection view to update item positions. If you are driving the transition with a gesture recognizer, you would likely set this property from the handler method of your gesture recognizer.\n\nSee Also\nUpdating the transition information\nfunc updateValue(CGFloat, forAnimatedKey: String)\nSets the value for an animatable key.\nfunc value(forAnimatedKey: String) -> CGFloat\nReturns the most recently set value for the specified key."
  },
  {
    "title": "UIBlurEffect.Style.systemThickMaterialLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemthickmateriallight",
    "html": "See Also\nLight styles\ncase systemUltraThinMaterialLight\nA blur effect that creates the appearance of an ultra-thin material and is always light.\ncase systemThinMaterialLight\nA blur effect that creates the appearance of a thin material and is always light.\ncase systemMaterialLight\nA blur effect that creates the appearance of a material with normal thickness and is always light.\ncase systemChromeMaterialLight\nA blur effect that creates the appearance of the system chrome and is always light."
  },
  {
    "title": "previewParametersProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropplaceholder/2921668-previewparametersprovider",
    "html": "Discussion\n\nSpecify a custom block when you want to provide a custom preview for your placeholder cell. If you don’t specify a block, the table view uses a default preview for the cell."
  },
  {
    "title": "UITableViewCell.AccessoryType.checkmark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/accessorytype/checkmark",
    "html": "Discussion\n\nChoose this option to display a checkmark image. This type of accessory view doesn’t track touches.\n\nTo hide or show a check mark for a row, toggle the accessoryType property of the cell between the UITableViewCell.AccessoryType.none and UITableViewCell.AccessoryType.checkmark values. For example, if you use a checkmark to indicate one selected row from a group of rows, use your delegate’s tableView(_:didSelectRowAt:) method to update the accessory views of the affected rows.\n\nSee Also\nAccessory views\ncase none\nNo accessory view.\ncase disclosureIndicator\nA chevron-shaped control for presenting new content.\ncase detailDisclosureButton\nAn information button and a disclosure (chevron) control.\ncase detailButton\nAn information button."
  },
  {
    "title": "automaticallyUpdatesBackgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3600592-automaticallyupdatesbackgroundco",
    "html": "Discussion\n\nWhen this value is true, the cell automatically calls updated(for:) on its backgroundConfiguration when the view’s configurationState changes, and applies the updated configuration back to the view. The default value is true.\n\nIf you override updateConfiguration(using:) to manually update and customize the background configuration, disable automatic updates by setting this property to false.\n\nSee Also\nConfiguring the background\nfunc defaultBackgroundConfiguration() -> UIBackgroundConfiguration\nRetrieves a background configuration with system default values.\nvar backgroundConfiguration: UIBackgroundConfiguration?\nThe current background configuration of the view.\nvar backgroundView: UIView?\nThe background view of the header or footer."
  },
  {
    "title": "tableView(_:prefetchRowsAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdatasourceprefetching/1771764-tableview",
    "html": "Required\n\nParameters\ntableView\n\nThe table view issuing the prefetch request.\n\nindexPaths\n\nThe index paths that specify the locations of the items for which the data is to be prefetched. The index paths are sorted in ascending order based on their priority. The first index path corresponds to the row closest to the visibile area, and the last index path corresponds to the row furthest from the visible area.\n\nDiscussion\n\nThe table view calls this method on the main dispatch queue as the user scrolls, providing the index paths for cells it is likely to display in the near future. Use your implementation of this method to start any expensive data loading operations. Always load your data asynchronously and forward the results to your table's data source object. Table views do not call this method for cells they require immediately, so your data source object must also be able to fetch the data itself.\n\nFor information about how to create an asynchronous data loading task, see Concurrency Programming Guide.\n\nSee Also\nFetching the row data\nfunc tableView(UITableView, cancelPrefetchingForRowsAt: [IndexPath])\nCancels a previously triggered data prefetch request."
  },
  {
    "title": "configurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3751737-configurationupdatehandler",
    "html": "Discussion\n\nA configuration update handler provides an alternative approach to overriding updateConfiguration(using:) in a subclass. Set a configuration update handler to update the header footer view’s configuration using the new state in response to a configuration state change.\n\nSetting the value of this property calls setNeedsUpdateConfiguration(). The system calls this handler after calling updateConfiguration(using:).\n\nSee Also\nManaging the state\nvar configurationState: UIViewConfigurationState\nThe current configuration state of the view.\nfunc setNeedsUpdateConfiguration()\nInforms the view to update its configuration for its current state.\nfunc updateConfiguration(using: UIViewConfigurationState)\nUpdates the view’s configuration using the current state.\ntypealias UITableViewHeaderFooterView.ConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "right | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition/1618084-right",
    "html": "Discussion\n\nThis option is mutually exclusive with the left and centeredHorizontally options."
  },
  {
    "title": "UITableViewHeaderFooterView.ConfigurationUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/configurationupdatehandler",
    "html": "Parameters\nheaderFooterView\n\nThe header footer view to configure.\n\nstate\n\nThe new state to use for updating the header footer view’s configuration.\n\nSee Also\nManaging the state\nvar configurationState: UIViewConfigurationState\nThe current configuration state of the view.\nfunc setNeedsUpdateConfiguration()\nInforms the view to update its configuration for its current state.\nfunc updateConfiguration(using: UIViewConfigurationState)\nUpdates the view’s configuration using the current state.\nvar configurationUpdateHandler: UITableViewHeaderFooterView.ConfigurationUpdateHandler?\nA block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "resumeAssistiveTechnology | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/notification/1620181-resumeassistivetechnology",
    "html": "Discussion\n\nWhen posting the notification, specify the assistive app to resume as the parameter. You must post this notification to balance out the previous posting of a pauseAssistiveTechnology notification. Post this notification using the post(notification:argument:) function.\n\nSee Also\nNotifications\nstatic var announcement: UIAccessibility.Notification\nA notification that an app posts when it needs to convey an announcement to the assistive app.\nstatic var layoutChanged: UIAccessibility.Notification\nA notification that an app posts when the layout of a screen changes.\nstatic var screenChanged: UIAccessibility.Notification\nA notification that an app posts when a new view appears that occupies a major portion of the screen.\nstatic var pageScrolled: UIAccessibility.Notification\nA notification that an app posts when a scroll action completes.\nstatic var pauseAssistiveTechnology: UIAccessibility.Notification\nA notification that pauses an assistive app's operations temporarily.\nstruct UIAccessibility.AssistiveTechnologyIdentifier\nIdentifiers for assistive apps."
  },
  {
    "title": "centeredHorizontally | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition/1618069-centeredhorizontally",
    "html": "Discussion\n\nThis option is mutually exclusive with the left and right options."
  },
  {
    "title": "top | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition/1618085-top",
    "html": "Discussion\n\nThis option is mutually exclusive with the centeredVertically and bottom options."
  },
  {
    "title": "announcement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/notification/1620176-announcement",
    "html": "Discussion\n\nThis notification includes a parameter that is an NSString object that contains the announcement. An assistive app outputs the announcement string in the parameter.\n\nUse this notification to provide accessibility information about events that don't update the app's UI, or that update the UI only briefly.\n\nPost this notification using the post(notification:argument:) function.\n\nSee Also\nNotifications\nstatic var layoutChanged: UIAccessibility.Notification\nA notification that an app posts when the layout of a screen changes.\nstatic var screenChanged: UIAccessibility.Notification\nA notification that an app posts when a new view appears that occupies a major portion of the screen.\nstatic var pageScrolled: UIAccessibility.Notification\nA notification that an app posts when a scroll action completes.\nstatic var pauseAssistiveTechnology: UIAccessibility.Notification\nA notification that pauses an assistive app's operations temporarily.\nstatic var resumeAssistiveTechnology: UIAccessibility.Notification\nA notification that resumes an assistive app's operations temporarily.\nstruct UIAccessibility.AssistiveTechnologyIdentifier\nIdentifiers for assistive apps."
  },
  {
    "title": "UITableViewCell.CellStyle.value2 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/cellstyle/value2",
    "html": "See Also\nCell styles\ncase `default`\nA simple style for a cell with a text label (black and left-aligned) and an optional image view.\ncase value1\nA style for a cell with a label on the left side of the cell with left-aligned and black text; on the right side is a label that has smaller blue text and is right-aligned.\ncase subtitle\nA style for a cell with a left-aligned label across the top and a left-aligned label below it in smaller gray text."
  },
  {
    "title": "initWithFrame:reuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/1623218-initwithframe",
    "html": "Deprecated\n\nUse initWithStyle:reuseIdentifier: instead.\n\nParameters\nframe\n\nThe frame rectangle of the cell. Because the table view automatically positions the cell and makes it the optimal size, you can pass in CGRectZero in most cases. However, if you have a custom cell with multiple subviews, each with its own autoresizing mask, you must specify a non-zero frame rectangle; this allows the table view to position the subviews automatically as the cell changes size.\n\nreuseIdentifier\n\nA string used to identify the cell object if it is to be reused for drawing multiple rows of a table view. Pass nil if the cell object is not to be reused.\n\nReturn Value\n\nAn initialized UITableViewCell object or nil if the object could not be created.\n\nDiscussion\n\nThis method is the designated initializer for the class. The reuse identifier is associated with those cells (rows) of a table view that have the same general configuration, minus cell content. In its implementation of tableView:cellForRowAtIndexPath:, the table view's delegate calls the UITableView method dequeueReusableCellWithIdentifier:, passing in a reuse identifier, to obtain the cell object to use as the basis for the current row.\n\nSee Also\nDeprecated\ntextLabel\nThe label to use for the main textual content of the table cell.\nDeprecated\ndetailTextLabel\nThe secondary label of the table cell, if one exists.\nDeprecated\nimageView\nThe image view of the table cell.\nDeprecated\ntext\nThe text of the cell.\nDeprecated\nfont\nThe font of the title.\nDeprecated\ntextAlignment\nA constant that specifies the alignment of text in the cell.\nDeprecated\ntextColor\nThe color of the title text.\nDeprecated\nselectedTextColor\nThe color of the title text when the cell is selected.\nDeprecated\nlineBreakMode\nThe mode for wrapping and truncating text in the cell.\nDeprecated\nimage\nThe image to use as content for the cell.\nDeprecated\nselectedImage\nThe image to use a cell content when the cell is selected.\nDeprecated\nhidesAccessoryWhenEditing\nA Boolean value that determines whether the accessory view is hidden when the cell is being edited.\nDeprecated\ntarget\nThe target object to receive action messages.\nDeprecated\neditAction\nThe selector defining the action message to invoke when users tap the insert or delete button.\nDeprecated\naccessoryAction\nThe selector defining the action message to invoke when users tap the accessory view.\nDeprecated\nRelated Documentation\nreuseIdentifier\nA string for identifying a reusable cell."
  },
  {
    "title": "UITableViewCell.AccessoryType.disclosureIndicator | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/accessorytype/disclosureindicator",
    "html": "Discussion\n\nChoose this type when you want taps in the accessory view to display new content. Connect the accessory view itself to a push segue to display that content.\n\nThe table view doesn’t call the delegate’s tableView(_:accessoryButtonTappedForRowWith:) method in response to touch events in this accessory view.\n\nSee Also\nAccessory views\ncase none\nNo accessory view.\ncase detailDisclosureButton\nAn information button and a disclosure (chevron) control.\ncase checkmark\nA checkmark image.\ncase detailButton\nAn information button."
  },
  {
    "title": "UITableViewCell.AccessoryType.detailButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/accessorytype/detailbutton",
    "html": "Discussion\n\nChoose this option to display a button that, when tapped, displays information about the row. Use your delegate’s tableView(_:accessoryButtonTappedForRowWith:) method to respond to taps in the button.\n\nSee Also\nAccessory views\ncase none\nNo accessory view.\ncase disclosureIndicator\nA chevron-shaped control for presenting new content.\ncase detailDisclosureButton\nAn information button and a disclosure (chevron) control.\ncase checkmark\nA checkmark image."
  },
  {
    "title": "UITableViewCell.SelectionStyle.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/selectionstyle/default",
    "html": "Discussion\n\nThis style is the default."
  },
  {
    "title": "UITableViewCell.SelectionStyle.gray | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/selectionstyle/gray",
    "html": "Discussion\n\nUse UITableViewCell.SelectionStyle.default instead."
  },
  {
    "title": "UITableViewCell.FocusStyle.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/focusstyle/default",
    "html": "Discussion\n\nThis focus style is the default."
  },
  {
    "title": "UITableViewCell.SeparatorStyle.singleLine | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/separatorstyle/singleline",
    "html": "Discussion\n\nThis is the default value."
  },
  {
    "title": "UITableViewCell.EditingStyle.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/editingstyle/none",
    "html": "Discussion\n\nThis is the default value."
  },
  {
    "title": "sectionHeadersPinToVisibleBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617699-sectionheaderspintovisiblebounds",
    "html": "Discussion\n\nWhen this property is true, section header views scroll with content until they reach the top of the screen, at which point they are pinned to the upper bounds of the collection view. Each new header view that scrolls to the top of the screen pushes the previously pinned header view offscreen.\n\nThe default value of this property is false.\n\nSee Also\nPinning headers and footers\nvar sectionFootersPinToVisibleBounds: Bool\nA Boolean value that indicates whether footers pin to the bottom of the collection view bounds during scrolling."
  },
  {
    "title": "footerReferenceSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617703-footerreferencesize",
    "html": "Discussion\n\nIf the delegate does not implement the collectionView(_:layout:referenceSizeForFooterInSection:) method, the flow layout object uses the default footer sizes set for this property.\n\nDuring layout, only the size that corresponds to the appropriate scrolling direction is used. For example, for the vertical scrolling direction, the layout object uses the height value specified by this property. (In that instance, the width of the footer would be set to the width of the collection view.) If the size in the appropriate scrolling dimension is 0, no footer is added.\n\nThe default size values are (0, 0).\n\nSee Also\nConfiguring headers and footers\nvar headerReferenceSize: CGSize\nThe default sizes to use for section headers.\nFlow layout supplementary views\nConstants that specify the types of supplementary views that can be presented using a flow layout.\nRelated Documentation\nvar sectionInset: UIEdgeInsets\nThe margins used to lay out content in a section."
  },
  {
    "title": "sectionFootersPinToVisibleBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617701-sectionfooterspintovisiblebounds",
    "html": "Discussion\n\nWhen this property is true, section footer views scroll with content until they reach the bottom of the screen, at which point they are pinned to the lower bounds of the collection view. Each new footer view that scrolls to the bottom of the screen pushes the previously pinned footer view offscreen.\n\nThe default value of this property is false.\n\nSee Also\nPinning headers and footers\nvar sectionHeadersPinToVisibleBounds: Bool\nA Boolean value that indicates whether headers pin to the top of the collection view bounds during scrolling."
  },
  {
    "title": "Flow layout supplementary views | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/flow_layout_supplementary_views",
    "html": "Topics\nConstants\nclass let elementKindSectionHeader: String\nA supplementary view that identifies the header for a given section.\nclass let elementKindSectionFooter: String\nA supplementary view that identifies the footer for a given section.\nSee Also\nConfiguring headers and footers\nvar headerReferenceSize: CGSize\nThe default sizes to use for section headers.\nvar footerReferenceSize: CGSize\nThe default sizes to use for section footers."
  },
  {
    "title": "headerReferenceSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayout/1617710-headerreferencesize",
    "html": "Discussion\n\nIf the delegate does not implement the collectionView(_:layout:referenceSizeForHeaderInSection:) method, the flow layout object uses the default header sizes set in this property.\n\nDuring layout, only the size that corresponds to the appropriate scrolling direction is used. For example, for the vertical scrolling direction, the layout object uses the height value returned by your method. (In that instance, the width of the header would be set to the width of the collection view.) If the size in the appropriate scrolling dimension is 0, no header is added.\n\nThe default size values are (0, 0).\n\nSee Also\nConfiguring headers and footers\nvar footerReferenceSize: CGSize\nThe default sizes to use for section footers.\nFlow layout supplementary views\nConstants that specify the types of supplementary views that can be presented using a flow layout."
  },
  {
    "title": "sortedArray(from:collationStringSelector:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620382-sortedarray",
    "html": "Parameters\narray\n\nAn array containing the model objects for a section.\n\nselector\n\nThe selector of a method implemented by the objects in array that returns the string to use for sorting the objects. The method represented by the selector must take no arguments and return an NSString object. For example, you might specify the selector for a name property of the object.\n\nReturn Value\n\nA new array containing the sorted items from the original array parameter.\n\nDiscussion\n\nThe table-view controller creates the array of objects for a section (array) as part of iterating through its model objects with calls to the section(for:collationStringSelector:) method. This method should be called on each local section array.\n\nSee Also\nPreparing the sections and section indexes\nfunc section(for: Any, collationStringSelector: Selector) -> Int\nReturns an integer identifying the section in which a model object belongs."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/2902342-title",
    "html": "See Also\nConfiguring the appearance\nvar backgroundColor: UIColor!\nThe background color of the action button.\nvar image: UIImage?\nThe image to display in the action button."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/2902337-image",
    "html": "See Also\nConfiguring the appearance\nvar title: String?\nThe title displayed on the action button.\nvar backgroundColor: UIColor!\nThe background color of the action button."
  },
  {
    "title": "UIBlurEffect.Style.systemChromeMaterialLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemchromemateriallight",
    "html": "See Also\nLight styles\ncase systemUltraThinMaterialLight\nA blur effect that creates the appearance of an ultra-thin material and is always light.\ncase systemThinMaterialLight\nA blur effect that creates the appearance of a thin material and is always light.\ncase systemMaterialLight\nA blur effect that creates the appearance of a material with normal thickness and is always light.\ncase systemThickMaterialLight\nA blur effect that creates the appearance of a material that’s thicker than normal and is always light."
  },
  {
    "title": "actions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration/2902360-actions",
    "html": "Discussion\n\nThe first object in this array corresponds to the default action, which is the action that’s performed in response to a full swipe.\n\nSee Also\nGetting the swipe action information\nvar performsFirstActionWithFullSwipe: Bool\nA Boolean value indicating whether a full swipe automatically performs the first action."
  },
  {
    "title": "UIBlurEffect.Style.systemMaterial | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemmaterial",
    "html": "See Also\nAdaptable styles\ncase systemUltraThinMaterial\nAn adaptable blur effect that creates the appearance of an ultra-thin material.\ncase systemThinMaterial\nAn adaptable blur effect that creates the appearance of a thin material.\ncase systemThickMaterial\nAn adaptable blur effect that creates the appearance of a material that’s thicker than normal.\ncase systemChromeMaterial\nAn adaptable blur effect that creates the appearance of the system chrome."
  },
  {
    "title": "UIBlurEffect.Style.systemThickMaterial | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemthickmaterial",
    "html": "See Also\nAdaptable styles\ncase systemUltraThinMaterial\nAn adaptable blur effect that creates the appearance of an ultra-thin material.\ncase systemThinMaterial\nAn adaptable blur effect that creates the appearance of a thin material.\ncase systemMaterial\nAn adaptable blur effect that creates the appearance of a material with normal thickness.\ncase systemChromeMaterial\nAn adaptable blur effect that creates the appearance of the system chrome."
  },
  {
    "title": "dragItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext/2897407-dragitem",
    "html": "Required"
  },
  {
    "title": "init(tableView:cellProvider:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255153-init",
    "html": "Parameters\ntableView\n\nThe initialized table view object to connect to the diffable data source.\n\ncellProvider\n\nA closure that creates and returns each of the cells for the table view from the data the diffable data source provides.\n\nSee Also\nCreating a diffable data source\ntypealias UITableViewDiffableDataSource.CellProvider\nA closure that configures and returns a cell for a table view from its diffable data source."
  },
  {
    "title": "UITableViewDiffableDataSource.CellProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/cellprovider",
    "html": "Parameters\ntableView\n\nThe table view to configure this cell for.\n\nindexPath\n\nThe index path that specifies the location of the cell in the table view.\n\nitemIdentifier\n\nThe identifier of the item for this cell.\n\nReturn Value\n\nA non-nil configured cell object. The cell provider must return a valid cell object to the table view.\n\nSee Also\nCreating a diffable data source\ninit(tableView: UITableView, cellProvider: UITableViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.CellProvider)\nCreates a diffable data source with the specified cell provider, and connects it to the specified table view."
  },
  {
    "title": "deletePlaceholder() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext/2897343-deleteplaceholder",
    "html": "Required\n\nReturn Value\n\ntrue if the placeholder cell was removed, or false if the cell was no longer in the table view.\n\nDiscussion\n\nCall this method on your app’s main thread to remove a placeholder cell without swapping in a new cell. You might call this method if the user chooses to undo the insertion of a cell or if the contents of the table view changed."
  },
  {
    "title": "itemIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255154-itemidentifier",
    "html": "Parameters\nindexPath\n\nThe index path of the item in the table view.\n\nReturn Value\n\nThe item’s identifier, or nil if no item is found at the provided index path.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\nfunc indexPath(for: ItemIdentifierType) -> IndexPath?\nReturns an index path for the item with the specified identifier in the table view."
  },
  {
    "title": "indexPath(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255151-indexpath",
    "html": "Parameters\nitemIdentifier\n\nThe identifier of the item in the table view.\n\nReturn Value\n\nThe item’s index path, or nil if no item is found with the provided item identifier.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\nfunc itemIdentifier(for: IndexPath) -> ItemIdentifierType?\nReturns an identifier for the item at the specified index path in the table view."
  },
  {
    "title": "init(insertionIndexPath:reuseIdentifier:rowHeight:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewplaceholder/2921666-init",
    "html": "Parameters\ninsertionIndexPath\n\nThe index path at which to insert the placeholder cell.\n\nreuseIdentifier\n\nThe reuse identifier to use when dequeueing the cell. A cell with the specified identifier must be registered with the table prior to inserting the placeholder cell. You can register cells in your storyboard file or programmatically.\n\nrowHeight\n\nThe initial height of the cell. Specify automaticDimension if your table uses estimated row heights and the placeholder cell is self-sizing.\n\nReturn Value\n\nA new placeholder cell object."
  },
  {
    "title": "init(reuseIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624918-init",
    "html": "Parameters\nreuseIdentifier\n\nA string used to identify the header or footer view if it’s to be reused by multiple sections. Pass nil if the view isn’t to be reused. You should use the same reuse identifier for all header or footer views of the same form.\n\nReturn Value\n\nAn initialized UITableViewHeaderFooterView object or nil if the object could not be created.\n\nDiscussion\n\nOnce set, you can’t change the reuse identifier for the returned view object.\n\nSee Also\nCreating the view\ninit?(coder: NSCoder)\nCreates a header-footer view from data in an unarchiver."
  },
  {
    "title": "reuseIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624909-reuseidentifier",
    "html": "Discussion\n\nYou assign a reuse identifier to a header or footer view at creation time. Once assigned, the table view uses that reuse identifier to gather your views when they’re scrolled offscreen and queue them for later reuse. You can retrieve header or footer views by passing the same reuse identifier to the dequeueReusableHeaderFooterView(withIdentifier:) method of the table view.\n\nSee Also\nManaging view reuse\nfunc prepareForReuse()\nPrepares a reusable header or footer view for reuse by the table."
  },
  {
    "title": "prepareForReuse() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624916-prepareforreuse",
    "html": "Discussion\n\nIf your header or footer view is reusable — that is, it has a reuse identifier — the table view calls this method just before returning the view from its dequeueReusableHeaderFooterView(withIdentifier:) method. Subclasses can override this method and use it to reset attributes of the view to their default values. For performance reasons, you should only reset attributes that aren’t related to content.\n\nIf the view doesn’t have a reuse identifier, this method is never called.\n\nSee Also\nManaging view reuse\nvar reuseIdentifier: String?\nA string used to identify a reusable header or footer."
  },
  {
    "title": "backgroundConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3601060-backgroundconfiguration",
    "html": "Discussion\n\nUsing a background configuration, you can obtain system default background styling for a variety of different view states. Create a background configuration with one of the default system styles, customize the configuration to match your view’s style as necessary, and assign the configuration to this property.\n\nvar backgroundConfig = UIBackgroundConfiguration.listPlainHeaderFooter()\nbackgroundConfig.backgroundColor = .systemGray\nheader.backgroundConfiguration = backgroundConfig\n\n\nA background configuration is mutually exclusive with background views, so you must use one approach or the other. Setting a non-nil value for this property resets the following APIs to nil:\n\nbackgroundColor\n\nbackgroundView\n\nSee Also\nConfiguring the background\nfunc defaultBackgroundConfiguration() -> UIBackgroundConfiguration\nRetrieves a background configuration with system default values.\nvar automaticallyUpdatesBackgroundConfiguration: Bool\nA Boolean value that determines whether the view automatically updates its background configuration when its state changes.\nvar backgroundView: UIView?\nThe background view of the header or footer."
  },
  {
    "title": "defaultBackgroundConfiguration() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/4013363-defaultbackgroundconfiguration",
    "html": "Return Value\n\nA default background configuration. The system determines default values for the configuration according to the section where the view appears.\n\nSee Also\nConfiguring the background\nvar backgroundConfiguration: UIBackgroundConfiguration?\nThe current background configuration of the view.\nvar automaticallyUpdatesBackgroundConfiguration: Bool\nA Boolean value that determines whether the view automatically updates its background configuration when its state changes.\nvar backgroundView: UIView?\nThe background view of the header or footer."
  },
  {
    "title": "tableView(_:cancelPrefetchingForRowsAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdatasourceprefetching/1771765-tableview",
    "html": "Parameters\ntableView\n\nThe table view issuing the cancellation of the prefetch request.\n\nindexPaths\n\nThe index paths of the items for which the data is no longer required.\n\nDiscussion\n\nThe table view calls this method on the main queue to cancel prefetch requests for cells that are no longer needed. Use this method to cancel operations initiated by a previous call to tableView(_:prefetchRowsAt:).\n\nFor information about how to cancel an asynchronous data loading task, see Concurrency Programming Guide.\n\nSee Also\nFetching the row data\nfunc tableView(UITableView, prefetchRowsAt: [IndexPath])\nInstructs your prefetch data source object to begin preparing data for the cells at the supplied index paths.\n\nRequired"
  },
  {
    "title": "contentConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3601062-contentconfiguration",
    "html": "Discussion\n\nUsing a content configuration, you can set the view’s content and styling for a variety of different view states. You can get the default configuration using defaultContentConfiguration(), assign your content to the configuration, customize any other properties, and assign it to the view as the current contentConfiguration.\n\nSetting a content configuration replaces the existing contentView of the view with a new content view instance from the configuration, or directly applies the configuration to the existing content view if the configuration is compatible with the existing content view type.\n\nThe default value is nil. After you set a content configuration to this property, setting this property back to nil replaces the current content view with a new, empty content view.\n\nSee Also\nManaging the content\nfunc defaultContentConfiguration() -> UIListContentConfiguration\nRetrieves a default list content configuration for the view’s style.\nvar automaticallyUpdatesContentConfiguration: Bool\nA Boolean value that determines whether the view automatically updates its content configuration when its state changes.\nvar contentView: UIView\nThe content view of the header or footer."
  },
  {
    "title": "defaultContentConfiguration() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3601063-defaultcontentconfiguration",
    "html": "Return Value\n\nA default list content configuration. The system determines default values for the configuration according to the section where the view appears.\n\nDiscussion\n\nThe default content configuration has preconfigured default styling, but doesn’t contain any content. After you get the default configuration, you assign your content to it, customize any other properties, and assign it to the view as the current contentConfiguration.\n\nSee Also\nManaging the content\nvar contentConfiguration: (UIContentConfiguration)?\nThe current content configuration of the view.\nvar automaticallyUpdatesContentConfiguration: Bool\nA Boolean value that determines whether the view automatically updates its content configuration when its state changes.\nvar contentView: UIView\nThe content view of the header or footer."
  },
  {
    "title": "updateConfiguration(using:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3601064-updateconfiguration",
    "html": "Discussion\n\nAvoid calling this method directly. Instead, use setNeedsUpdateConfiguration() to request an update.\n\nOverride this method in a subclass to update the view’s configuration using the provided state.\n\nSee Also\nManaging the state\nvar configurationState: UIViewConfigurationState\nThe current configuration state of the view.\nfunc setNeedsUpdateConfiguration()\nInforms the view to update its configuration for its current state.\nvar configurationUpdateHandler: UITableViewHeaderFooterView.ConfigurationUpdateHandler?\nA block for handling updates to the view’s configuration using the current state.\ntypealias UITableViewHeaderFooterView.ConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "textLabel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624912-textlabel",
    "html": "Deprecated\n\nUse a content configuration to manage the view’s text instead. Use defaultContentConfiguration() to get a default list content configuration, set your primary text to the text property of the configuration, and apply the configuration by setting it to the contentConfiguration property of the view.\n\nDiscussion\n\nAccessing the value in this property causes the view to create a default label for displaying a detail text string. If you are managing the content of the view yourself by adding subviews to the contentView property, you should not access this property.\n\nThe label sizes to fit the content view area in the best way possible according to the size of the string. Its size also adjusts depending on whether there is a detail text label present.\n\nThis property is mutually exclusive with a content configuration. Setting a non-nil value for contentConfiguration resets this property to nil.\n\nSee Also\nDeprecated\nvar detailTextLabel: UILabel?\nA detail text label for the view.\nDeprecated"
  },
  {
    "title": "detailTextLabel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624910-detailtextlabel",
    "html": "Deprecated\n\nUse a content configuration to manage the view’s text instead. Use defaultContentConfiguration() to get a default list content configuration, set your secondary text to the secondaryText property of the configuration, and apply the configuration by setting it to the contentConfiguration property of the view.\n\nDiscussion\n\nThis property is only for tables configured with UITableView.Style.grouped.\n\nAccessing the value in this property causes the view to create a default label for displaying a detail text string. If you are managing the content of the view yourself by adding subviews to the contentView property, you should not access this property.\n\nThe label sizes to fit the content view area in the best way possible according to the size of the string. Its size also adjusts depending on whether there is a primary text label present.\n\nThis property is mutually exclusive with a content configuration. Setting a non-nil value for contentConfiguration resets this property to nil.\n\nSee Also\nDeprecated\nvar textLabel: UILabel?\nA primary text label for the view.\nDeprecated"
  },
  {
    "title": "left | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition/1618039-left",
    "html": "Discussion\n\nThis option is mutually exclusive with the centeredHorizontally and right options."
  },
  {
    "title": "init(cellNib:handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/cellregistration/3600939-init",
    "html": "See Also\nCreating a cell registration\ninit(handler: UICollectionView.CellRegistration<Cell, Item>.Handler)\nCreates a cell registration with the specified registration handler.\ntypealias UICollectionView.CellRegistration.Handler\nA closure that handles the cell registration and configuration."
  },
  {
    "title": "pauseAssistiveTechnology | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/notification/1620192-pauseassistivetechnology",
    "html": "Discussion\n\nWhen posting the notification, specify the assistive app to pause as the parameter. For example, you might want to pause scanning in Switch Control while your app is playing an animation. You must balance this notification by posting a resumeAssistiveTechnology notification to resume the assistive app's operations. Post this notification using the post(notification:argument:) function.\n\nSee Also\nNotifications\nstatic var announcement: UIAccessibility.Notification\nA notification that an app posts when it needs to convey an announcement to the assistive app.\nstatic var layoutChanged: UIAccessibility.Notification\nA notification that an app posts when the layout of a screen changes.\nstatic var screenChanged: UIAccessibility.Notification\nA notification that an app posts when a new view appears that occupies a major portion of the screen.\nstatic var pageScrolled: UIAccessibility.Notification\nA notification that an app posts when a scroll action completes.\nstatic var resumeAssistiveTechnology: UIAccessibility.Notification\nA notification that resumes an assistive app's operations temporarily.\nstruct UIAccessibility.AssistiveTechnologyIdentifier\nIdentifiers for assistive apps."
  },
  {
    "title": "screenChanged | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/notification/1620198-screenchanged",
    "html": "Discussion\n\nPost this notification using the post(notification:argument:) function. Optionally, include a parameter that contains the accessibility element for VoiceOver to move to after processing the notification.\n\nSee Also\nNotifications\nstatic var announcement: UIAccessibility.Notification\nA notification that an app posts when it needs to convey an announcement to the assistive app.\nstatic var layoutChanged: UIAccessibility.Notification\nA notification that an app posts when the layout of a screen changes.\nstatic var pageScrolled: UIAccessibility.Notification\nA notification that an app posts when a scroll action completes.\nstatic var pauseAssistiveTechnology: UIAccessibility.Notification\nA notification that pauses an assistive app's operations temporarily.\nstatic var resumeAssistiveTechnology: UIAccessibility.Notification\nA notification that resumes an assistive app's operations temporarily.\nstruct UIAccessibility.AssistiveTechnologyIdentifier\nIdentifiers for assistive apps."
  },
  {
    "title": "centeredVertically | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionview/scrollposition/1618054-centeredvertically",
    "html": "Discussion\n\nThis option is mutually exclusive with the top and bottom options."
  },
  {
    "title": "UITableViewCell.CellStyle.value1 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/cellstyle/value1",
    "html": "See Also\nCell styles\ncase `default`\nA simple style for a cell with a text label (black and left-aligned) and an optional image view.\ncase value2\nA style for a cell with a label on the left side of the cell with text that’s right-aligned and blue; on the right side of the cell is another label with smaller text that’s left-aligned and black.\ncase subtitle\nA style for a cell with a left-aligned label across the top and a left-aligned label below it in smaller gray text."
  },
  {
    "title": "UITableViewCell.CellStyle.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/cellstyle/default",
    "html": "See Also\nCell styles\ncase value1\nA style for a cell with a label on the left side of the cell with left-aligned and black text; on the right side is a label that has smaller blue text and is right-aligned.\ncase value2\nA style for a cell with a label on the left side of the cell with text that’s right-aligned and blue; on the right side of the cell is another label with smaller text that’s left-aligned and black.\ncase subtitle\nA style for a cell with a left-aligned label across the top and a left-aligned label below it in smaller gray text."
  },
  {
    "title": "UITableViewCell.AccessoryType.detailDisclosureButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/accessorytype/detaildisclosurebutton",
    "html": "Discussion\n\nChoose this type when you want both an information button and a disclosure control. Connect the disclosure control to a push segue to display new content. Use the delegate’s tableView(_:accessoryButtonTappedForRowWith:)method to respond to touch events in the detail button.\n\nSee Also\nAccessory views\ncase none\nNo accessory view.\ncase disclosureIndicator\nA chevron-shaped control for presenting new content.\ncase checkmark\nA checkmark image.\ncase detailButton\nAn information button."
  },
  {
    "title": "UITableViewCell.SelectionStyle.blue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/selectionstyle/blue",
    "html": "Discussion\n\nIn iOS 7, the selection color is no longer blue. Use UITableViewCell.SelectionStyle.default instead."
  },
  {
    "title": "UITableViewCell.AccessoryType.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/accessorytype/none",
    "html": "Discussion\n\nThis is the default value.\n\nSee Also\nAccessory views\ncase disclosureIndicator\nA chevron-shaped control for presenting new content.\ncase detailDisclosureButton\nAn information button and a disclosure (chevron) control.\ncase checkmark\nA checkmark image.\ncase detailButton\nAn information button."
  },
  {
    "title": "UITableViewCell.FocusStyle.custom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewcell/focusstyle/custom",
    "html": "Discussion\n\nSpecifying this style allows you to create your own custom appearance for the cell. It’s recommended that you create custom-looking cells by subclassing UITableViewCell and overriding didUpdateFocus(in:with:)."
  },
  {
    "title": "dragItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropitem/2897402-dragitem",
    "html": "Required\n\nDiscussion\n\nUse this property to get the data associated with the item being dragged."
  },
  {
    "title": "init(operation:intent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropproposal/2897298-init",
    "html": "Parameters\noperation\n\nThe type of operation that you want to perform. Use this parameter to specify whether you want to move the original item to this new location, move a copy of the content, or prevent the content from being inserted at this location. For a list of possible values, see UIDropOperation.\n\nintent\n\nThe option for how to incorporate the content into the table view. You can insert the content between items or add it to an existing item.\n\nReturn Value\n\nAn initialized drop proposal."
  },
  {
    "title": "sectionIndexTitles | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620383-sectionindextitles",
    "html": "Discussion\n\nThis property contains the localized list of section-index titles sorted according to the specified ordering (for example, A through Z in US English). In its implementation of sectionIndexTitles(for:), the data source can call this method on the indexed-collation object and pass back the result.\n\nSee Also\nProviding section index data to the table view\nvar sectionTitles: [String]\nReturns the list of section titles for the table view.\nfunc section(forSectionIndexTitle: Int) -> Int\nReturns the section that the table view should scroll to for the given index title."
  },
  {
    "title": "section(for:collationStringSelector:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620378-section",
    "html": "Parameters\nobject\n\nA model object of the application that is part of the data model for the table view.\n\nselector\n\nThe selector of a method of object that returns the string to use for sorting. The method represented by the selection must take no arguments and return an NSString object. For example, you might specify the selector for a name property of the object.\n\nReturn Value\n\nAn integer that identifies the section in which the model object belongs. The numbers returned indicate a sequential ordering.\n\nDiscussion\n\nThe table-view controller should iterate through all model objects for the table view and call this method for each object. If the application provides a Localizable.strings file for the current language preference, the indexed-collation object localizes each string returned by the method identified by selector. It uses this localized name when collating titles. The controller should use the returned integer to identify a local “section” array in which it should insert object.\n\nSee Also\nPreparing the sections and section indexes\nfunc sortedArray(from: [Any], collationStringSelector: Selector) -> [Any]\nSorts the objects within a section by their localized titles."
  },
  {
    "title": "backgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/2902335-backgroundcolor",
    "html": "Discussion\n\nThe default value of this property is determined by the value of the style property, which determines the default appearance of the button. Assigning a new color to this property changes the background to the color that you specify.\n\nSee Also\nConfiguring the appearance\nvar title: String?\nThe title displayed on the action button.\nvar image: UIImage?\nThe image to display in the action button."
  },
  {
    "title": "style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/2902334-style",
    "html": "See Also\nGetting the configuration details\nvar handler: UIContextualAction.Handler\nThe handler block to execute when the user selects the action.\ntypealias UIContextualAction.Handler\nThe handler block to call in response to the selection of an action.\nenum UIContextualAction.Style\nConstants indicating the style information that applies to the action button."
  },
  {
    "title": "UIContextualAction.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/style",
    "html": "Topics\nStyles\ncase normal\nA normal action.\ncase destructive\nAn action that deletes data or performs some type of destructive task.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the configuration details\nvar handler: UIContextualAction.Handler\nThe handler block to execute when the user selects the action.\ntypealias UIContextualAction.Handler\nThe handler block to call in response to the selection of an action.\nvar style: UIContextualAction.Style\nThe style that applies to the action button."
  },
  {
    "title": "style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614887-style",
    "html": "Discussion\n\nThe value of this property is set at creation time and can’t be changed later.\n\nSee Also\nConfiguring the action’s appearance\nenum UITableViewRowAction.Style\nConstants that specify the appearance of action buttons.\nDeprecated\nvar title: String?\nThe title of the action button.\nDeprecated\nvar backgroundColor: UIColor?\nThe background color of the action button.\nDeprecated\nvar backgroundEffect: UIVisualEffect?\nThe visual effect to apply to the button.\nDeprecated"
  },
  {
    "title": "UIBlurEffect.Style.systemChromeMaterialDark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemchromematerialdark",
    "html": "See Also\nDark styles\ncase systemUltraThinMaterialDark\nA blur effect that creates the appearance of an ultra-thin material and is always dark.\ncase systemThinMaterialDark\nA blur effect that creates the appearance of a thin material and is always dark.\ncase systemMaterialDark\nA blur effect that creates the appearance of a material with normal thickness and is always dark.\ncase systemThickMaterialDark\nA blur effect that creates the appearance of a material that’s thicker than normal and is always dark."
  },
  {
    "title": "UIBlurEffect.Style.regular | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/regular",
    "html": "See Also\nAdditional styles\ncase extraLight\nThe area of the view is lighter than the underlying view.\ncase light\nThe area of the view is the same approximate lightness of the underlying view.\ncase dark\nThe area of the view is darker than the underlying view.\ncase extraDark\nThe area of the view is even more dark than the underlying view.\ncase prominent\nA blur style for making content more prominent that adapts to the user interface style."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614993-title",
    "html": "See Also\nConfiguring the action’s appearance\nvar style: UITableViewRowAction.Style\nThe style applied to the action button.\nDeprecated\nenum UITableViewRowAction.Style\nConstants that specify the appearance of action buttons.\nDeprecated\nvar backgroundColor: UIColor?\nThe background color of the action button.\nDeprecated\nvar backgroundEffect: UIVisualEffect?\nThe visual effect to apply to the button.\nDeprecated"
  },
  {
    "title": "UIBlurEffect.Style.extraLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/extralight",
    "html": "See Also\nAdditional styles\ncase light\nThe area of the view is the same approximate lightness of the underlying view.\ncase dark\nThe area of the view is darker than the underlying view.\ncase extraDark\nThe area of the view is even more dark than the underlying view.\ncase regular\nA regular blur style that adapts to the user interface style.\ncase prominent\nA blur style for making content more prominent that adapts to the user interface style."
  },
  {
    "title": "UIBlurEffect.Style.systemThinMaterialDark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemthinmaterialdark",
    "html": "See Also\nDark styles\ncase systemUltraThinMaterialDark\nA blur effect that creates the appearance of an ultra-thin material and is always dark.\ncase systemMaterialDark\nA blur effect that creates the appearance of a material with normal thickness and is always dark.\ncase systemThickMaterialDark\nA blur effect that creates the appearance of a material that’s thicker than normal and is always dark.\ncase systemChromeMaterialDark\nA blur effect that creates the appearance of the system chrome and is always dark."
  },
  {
    "title": "UIBlurEffect.Style.dark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/dark",
    "html": "See Also\nAdditional styles\ncase extraLight\nThe area of the view is lighter than the underlying view.\ncase light\nThe area of the view is the same approximate lightness of the underlying view.\ncase extraDark\nThe area of the view is even more dark than the underlying view.\ncase regular\nA regular blur style that adapts to the user interface style.\ncase prominent\nA blur style for making content more prominent that adapts to the user interface style."
  },
  {
    "title": "UIBlurEffect.Style.systemUltraThinMaterialDark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemultrathinmaterialdark",
    "html": "See Also\nDark styles\ncase systemThinMaterialDark\nA blur effect that creates the appearance of a thin material and is always dark.\ncase systemMaterialDark\nA blur effect that creates the appearance of a material with normal thickness and is always dark.\ncase systemThickMaterialDark\nA blur effect that creates the appearance of a material that’s thicker than normal and is always dark.\ncase systemChromeMaterialDark\nA blur effect that creates the appearance of the system chrome and is always dark."
  },
  {
    "title": "UIBlurEffect.Style.systemChromeMaterial | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemchromematerial",
    "html": "See Also\nAdaptable styles\ncase systemUltraThinMaterial\nAn adaptable blur effect that creates the appearance of an ultra-thin material.\ncase systemThinMaterial\nAn adaptable blur effect that creates the appearance of a thin material.\ncase systemMaterial\nAn adaptable blur effect that creates the appearance of a material with normal thickness.\ncase systemThickMaterial\nAn adaptable blur effect that creates the appearance of a material that’s thicker than normal."
  },
  {
    "title": "UIBlurEffect.Style.systemThickMaterialDark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemthickmaterialdark",
    "html": "See Also\nDark styles\ncase systemUltraThinMaterialDark\nA blur effect that creates the appearance of an ultra-thin material and is always dark.\ncase systemThinMaterialDark\nA blur effect that creates the appearance of a thin material and is always dark.\ncase systemMaterialDark\nA blur effect that creates the appearance of a material with normal thickness and is always dark.\ncase systemChromeMaterialDark\nA blur effect that creates the appearance of the system chrome and is always dark."
  },
  {
    "title": "UIBlurEffect.Style.systemMaterialDark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemmaterialdark",
    "html": "See Also\nDark styles\ncase systemUltraThinMaterialDark\nA blur effect that creates the appearance of an ultra-thin material and is always dark.\ncase systemThinMaterialDark\nA blur effect that creates the appearance of a thin material and is always dark.\ncase systemThickMaterialDark\nA blur effect that creates the appearance of a material that’s thicker than normal and is always dark.\ncase systemChromeMaterialDark\nA blur effect that creates the appearance of the system chrome and is always dark."
  },
  {
    "title": "UITableViewRowAction.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/style",
    "html": "Topics\nStyles\ncase `default`\nApply the default style to the button.\nstatic var destructive: UITableViewRowAction.Style\nEqual to the default style.\ncase normal\nApply a style that reflects standard non-destructive actions.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the action’s appearance\nvar style: UITableViewRowAction.Style\nThe style applied to the action button.\nDeprecated\nvar title: String?\nThe title of the action button.\nDeprecated\nvar backgroundColor: UIColor?\nThe background color of the action button.\nDeprecated\nvar backgroundEffect: UIVisualEffect?\nThe visual effect to apply to the button.\nDeprecated"
  },
  {
    "title": "Protocol implementations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/protocol_implementations",
    "html": "Overview\n\nThe diffable data source type conforms to several protocols, including UITableViewDataSource and Hashable. This page lists the diffable data source type’s implementations of those protocol requirements.\n\nTopics\nProviding the number of rows and sections\nfunc tableView(UITableView, numberOfRowsInSection: Int) -> Int\nReturns the number of rows in the specified section of the table view.\nfunc numberOfSections(in: UITableView) -> Int\nReturns the number of sections in the table view.\nProviding cells, headers, and footers\nfunc tableView(UITableView, cellForRowAt: IndexPath) -> UITableViewCell\nReturns a cell to insert in a particular location of the table view.\nfunc tableView(UITableView, titleForHeaderInSection: Int) -> String?\nReturns the title of the header of the specified section of the table view.\nfunc tableView(UITableView, titleForFooterInSection: Int) -> String?\nReturns the title of the footer of the specified section of the table view.\nInserting or deleting table rows\nfunc tableView(UITableView, commit: UITableViewCell.EditingStyle, forRowAt: IndexPath)\nCommits the insertion or deletion of a specified row.\nfunc tableView(UITableView, canEditRowAt: IndexPath) -> Bool\nDetermines whether the specified row is editable.\nReordering table rows\nfunc tableView(UITableView, canMoveRowAt: IndexPath) -> Bool\nDetermines whether the specified row can move to another location in the table view.\nfunc tableView(UITableView, moveRowAt: IndexPath, to: IndexPath)\nMoves a row at the specified location in the table view to another location.\nConfiguring an index\nfunc sectionIndexTitles(for: UITableView) -> [String]?\nReturns the titles for the sections of a table view.\nfunc tableView(UITableView, sectionForSectionIndexTitle: String, at: Int) -> Int\nReturns the index of the section having the specified title and section title index.\nDebugging a diffable data source\nfunc description() -> String\nReturns a string with a description of the diffable data source."
  },
  {
    "title": "applySnapshotUsingReloadData(_:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3804476-applysnapshotusingreloaddata",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\ncompletion\n\nA closure to execute when the reload completes. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the table view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the table view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "defaultRowAnimation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255148-defaultrowanimation",
    "html": "Discussion\n\nThe default value of this property is UITableView.RowAnimation.automatic.\n\nIf you set the value of this property, the new value becomes the default row animation for the next update that uses apply(_:animatingDifferences:completion:).\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the table view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "snapshot() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3255156-snapshot",
    "html": "Return Value\n\nA snapshot containing section and item identifiers in the order that they appear in the UI.\n\nSee Also\nUpdating data\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "applySnapshotUsingReloadData(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3804475-applysnapshotusingreloaddata",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the table view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the table view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "apply(_:animatingDifferences:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3795630-apply",
    "html": "See Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the table view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "apply(_:animatingDifferences:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3375811-apply",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the table view.\n\nanimatingDifferences\n\nIf true, the system animates the updates to the table view. If false, the system doesn’t animate the updates to the table view.\n\ncompletion\n\nA closure to execute when the animations are complete. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe diffable data source computes the difference between the table view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the table view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler.\nvar defaultRowAnimation: UITableView.RowAnimation\nThe default type of animation to use when inserting or deleting rows."
  },
  {
    "title": "sectionIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3804478-sectionidentifier",
    "html": "See Also\nIdentifying sections\nfunc index(for: SectionIdentifierType) -> Int?\nReturns an index for the section with the identifier you specify in the table view."
  },
  {
    "title": "index(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdiffabledatasource/3804477-index",
    "html": "See Also\nIdentifying sections\nfunc sectionIdentifier(for: Int) -> SectionIdentifierType?\nReturns an identifier for the section at the index you specify in the table view."
  },
  {
    "title": "configurationState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/3601061-configurationstate",
    "html": "Discussion\n\nTo add your own custom state, see UIConfigurationStateCustomKey.\n\nSee Also\nManaging the state\nfunc setNeedsUpdateConfiguration()\nInforms the view to update its configuration for its current state.\nfunc updateConfiguration(using: UIViewConfigurationState)\nUpdates the view’s configuration using the current state.\nvar configurationUpdateHandler: UITableViewHeaderFooterView.ConfigurationUpdateHandler?\nA block for handling updates to the view’s configuration using the current state.\ntypealias UITableViewHeaderFooterView.ConfigurationUpdateHandler\nThe type of block for handling updates to the view’s configuration using the current state."
  },
  {
    "title": "UIBlurEffect.Style.systemThinMaterial | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemthinmaterial",
    "html": "See Also\nAdaptable styles\ncase systemUltraThinMaterial\nAn adaptable blur effect that creates the appearance of an ultra-thin material.\ncase systemMaterial\nAn adaptable blur effect that creates the appearance of a material with normal thickness.\ncase systemThickMaterial\nAn adaptable blur effect that creates the appearance of a material that’s thicker than normal.\ncase systemChromeMaterial\nAn adaptable blur effect that creates the appearance of the system chrome."
  },
  {
    "title": "externalObjects | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinib/optionskey/1618146-externalobjects",
    "html": "Discussion\n\nThe value for this key is an NSDictionary object. The keys of the dictionary are the names of any proxy objects in the nib file, and the value for each key is the actual object to use in place of the proxy."
  },
  {
    "title": "cellUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewplaceholder/2921671-cellupdatehandler",
    "html": "Discussion\n\nSpecify a block that configures or updates the appearance of your placeholder cell. The table view calls this block when the placeholder cell becomes visible, and at other appropriate times."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624917-init",
    "html": "See Also\nCreating the view\ninit(reuseIdentifier: String?)\nInitializes a header-footer view with the specified reuse identifier."
  },
  {
    "title": "webView(_:didFailLoadWithError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617970-webview",
    "html": "Parameters\nwebView\n\nThe web view that failed to load a frame.\n\nerror\n\nThe error that occurred during loading.\n\nSee Also\nLoading Content\nfunc webView(UIWebView, shouldStartLoadWith: URLRequest, navigationType: UIWebView.NavigationType) -> Bool\nSent before a web view begins loading a frame.\nDeprecated\nfunc webViewDidStartLoad(UIWebView)\nSent after a web view starts loading a frame.\nDeprecated\nfunc webViewDidFinishLoad(UIWebView)\nSent after a web view finishes loading a frame.\nDeprecated"
  },
  {
    "title": "UIBlurEffect.Style.systemUltraThinMaterial | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/systemultrathinmaterial",
    "html": "See Also\nAdaptable styles\ncase systemThinMaterial\nAn adaptable blur effect that creates the appearance of a thin material.\ncase systemMaterial\nAn adaptable blur effect that creates the appearance of a material with normal thickness.\ncase systemThickMaterial\nAn adaptable blur effect that creates the appearance of a material that’s thicker than normal.\ncase systemChromeMaterial\nAn adaptable blur effect that creates the appearance of the system chrome."
  },
  {
    "title": "intent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropproposal/2897495-intent",
    "html": "See Also\nGetting the proposed drop location\nenum UITableViewDropProposal.Intent\nConstants indicating how you intend to handle a drop.\nenum UIDropOperation\nOperation types that determine how a drag and drop activity resolves when the user drops a drag item."
  },
  {
    "title": "UITableViewDropProposal.Intent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropproposal/intent",
    "html": "Topics\nConstants\ncase unspecified\nNo drop proposal was specified.\ncase insertAtDestinationIndexPath\nInsert the dropped content at the specified index path.\ncase insertIntoDestinationIndexPath\nIncorporate the dropped content into the row at the specified index path.\ncase automatic\nIncorporate the content in an appropriate way based on the drop location.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the proposed drop location\nvar intent: UITableViewDropProposal.Intent\nThe option to use when incorporating dropped items into your content.\nenum UIDropOperation\nOperation types that determine how a drag and drop activity resolves when the user drops a drag item."
  },
  {
    "title": "previewSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropitem/2897464-previewsize",
    "html": "Required\n\nDiscussion\n\nYou might use this property when configuring animations. If the item doesn’t have an associated preview, this property is set to CGSizeZero.\n\nSee Also\nGetting the item information\nvar sourceIndexPath: IndexPath?\nThe index path of the item in the table view, if any.\n\nRequired"
  },
  {
    "title": "drop(_:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2921667-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe drag item containing the data to drop.\n\nplaceholder\n\nThe object that contains information about the type of placeholder cell to insert, and where to insert it.\n\nReturn Value\n\nThe context object that you use to replace or remove the placeholder cell later. Store a reference to this object so that you can call its methods later.\n\nDiscussion\n\nUse this method to insert a temporary placeholder cell (instead of a cell backed by actual data) into the table view. When calling this method, do not update your data source object to account for the placeholder. The table view manages the placeholder until you explicitly remove it using the returned context object.\n\nTypically, you use this method when you must load data asynchronously for a cell. Instead of updating your data source, you insert a placeholder cell. When the data is finally available, update your data source object and call the commitInsertion(dataSourceUpdates:) method of the returned context object to swap out the placeholder cell for an actual cell. You can also remove a placeholder cell that is no longer needed by calling the deletePlaceholder() method.\n\nAt some point after calling this method, the table view executes the cellUpdateHandler block in the provided placeholder object. Use that block to configure the contents of the placeholder cell.\n\nSee Also\nAnimating rows to their destination\nfunc drop(UIDragItem, toRowAt: IndexPath) -> UIDragAnimating\nAnimates the item to the specified index path in the table view.\n\nRequired\n\nfunc drop(UIDragItem, intoRowAt: IndexPath, rect: CGRect) -> UIDragAnimating\n\nRequired\n\nfunc drop(UIDragItem, to: UIDragPreviewTarget) -> UIDragAnimating\nAnimates the item to an arbitrary location in your view hierarchy.\n\nRequired"
  },
  {
    "title": "drop(_:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897290-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe item that you want to drop.\n\ntarget\n\nThe location at which to drop the item, specified as a point in a view. You can also use the UIDragPreviewTarget object to specify a final transform to apply to the content.\n\nDiscussion\n\nUse this method to animate drops to any view in your app. For example, you might use this method to drop items onto a tab bar or toolbar that is part of your interface.\n\nSee Also\nAnimating rows to their destination\nfunc drop(UIDragItem, toRowAt: IndexPath) -> UIDragAnimating\nAnimates the item to the specified index path in the table view.\n\nRequired\n\nfunc drop(UIDragItem, intoRowAt: IndexPath, rect: CGRect) -> UIDragAnimating\n\nRequired\n\nfunc drop(UIDragItem, to: UITableViewDropPlaceholder) -> UITableViewDropPlaceholderContext\nAnimates the item to the specified location and inserts a placeholder cell at that location.\n\nRequired"
  },
  {
    "title": "proposal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897451-proposal",
    "html": "Required\n\nDiscussion\n\nIf your drag delegate implements the tableView(_:dropSessionDidUpdate:withDestinationIndexPath:) method, this object contains the information that you provided when making your drop proposal for the given location.\n\nSee Also\nGetting the session information\nvar session: UIDropSession\nThe drop session containing information about the transaction.\n\nRequired"
  },
  {
    "title": "modalViewController | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621479-modalviewcontroller",
    "html": "Deprecated\n\nUse presentedViewController instead.\n\nSee Also\nDeprecated properties\nshouldAutorotate\nA Boolean value that indicates whether the view controller’s contents should autorotate.\nDeprecated\npreviewActionItems\nThe quick actions displayed when a user swipes upward on a 3D Touch preview.\nDeprecated\nautomaticallyAdjustsScrollViewInsets\nA Boolean value that indicates whether the view controller should automatically adjust its scroll view insets.\nDeprecated\nbottomLayoutGuide\nIndicates the lowest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\ncontentSizeForViewInPopover\nThe size of the view controller's view while displayed in a popover.\nDeprecated\ninterfaceOrientation\nConvenience property that provides the current orientation of the interface, meaningful only if the view controller is taking up the full screen.\nDeprecated\nmodalInPopover\nA Boolean value indicating whether the view controller should be presented modally by a popover.\nDeprecated\nsearchDisplayController\nThe search display controller associated with the view controller.\nDeprecated\ntopLayoutGuide\nIndicates the highest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\nwantsFullScreenLayout\nA Boolean value indicating whether the view should underlap the status bar.\nDeprecated"
  },
  {
    "title": "previouslyFocusedIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewfocusupdatecontext/1614930-previouslyfocusedindexpath",
    "html": "Discussion\n\nThis property returns the index path only when the previouslyFocusedView is located within a cell of the table view. Otherwise, it returns nil. This can happen if focus is moving into the table view, because the previouslyFocusedView isn’t associated with an index path in this table view.\n\nWhen focus is moving from one table view to another, each table view delegate is called with previouslyFocusedIndexPath and nextFocusedIndexPath configured for its specific table view.\n\nSee Also\nLocating focusable items in a table view\nvar nextFocusedIndexPath: IndexPath?\nReturns the index path of the cell containing the context’s next focused view."
  },
  {
    "title": "handler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontextualaction/2902341-handler",
    "html": "See Also\nGetting the configuration details\ntypealias UIContextualAction.Handler\nThe handler block to call in response to the selection of an action.\nvar style: UIContextualAction.Style\nThe style that applies to the action button.\nenum UIContextualAction.Style\nConstants indicating the style information that applies to the action button."
  },
  {
    "title": "init(style:title:handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614893-init",
    "html": "Parameters\nstyle\n\nThe style characteristics to apply to the button. You use this value to apply default appearance characteristics to the button. These characteristics impart information about what the button does. For example, use this to indicate an action is destructive to the underlying data. For a list of possible style values, see UITableViewRowAction.Style.\n\ntitle\n\nThe string to display in the button. Specify a string localized for the user’s current language.\n\nhandler\n\nThe block to execute when the user taps the button associated with this action. UIKit makes a copy of the block you provide. When the user selects the action represented by this object, UIKit executes your handler block on the app’s main thread. This parameter must not be nil. This block has no return value and takes the following parameters:\n\naction\n\nThe action object representing the action that the user selected.\n\nindexPath\n\nThe table row that the user acted on.\n\nReturn Value\n\nA new table row action object that you can return from your table view’s delegate method.\n\nDiscussion\n\nThe style and handler block you specify can’t be changed later. You can change the title of the action button. You can also configure other appearance-related properties of the button using the properties of this class.\n\nYou can assign the same row action object to multiple rows of your table."
  },
  {
    "title": "init(actions:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration/2902363-init",
    "html": "Parameters\nactions\n\nThe swipe actions to display. The first item in the array represents the outermost action. For example, when the user swipes from right-to-left, the first action is rightmost. The first action is also the default action.\n\nReturn Value\n\nA newly initialized swipe action configuration object."
  },
  {
    "title": "UIBlurEffect.Style.extraDark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/extradark",
    "html": "See Also\nAdditional styles\ncase extraLight\nThe area of the view is lighter than the underlying view.\ncase light\nThe area of the view is the same approximate lightness of the underlying view.\ncase dark\nThe area of the view is darker than the underlying view.\ncase regular\nA regular blur style that adapts to the user interface style.\ncase prominent\nA blur style for making content more prominent that adapts to the user interface style."
  },
  {
    "title": "performsFirstActionWithFullSwipe | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiswipeactionsconfiguration/2902361-performsfirstactionwithfullswipe",
    "html": "Discussion\n\nWhen this property is set to true, a full swipe in the row performs the first action listed in the actions property. The default value of this property is true.\n\nSee Also\nGetting the swipe action information\nvar actions: [UIContextualAction]\nThe swipe actions."
  },
  {
    "title": "UIBlurEffect.Style.light | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiblureffect/style/light",
    "html": "See Also\nAdditional styles\ncase extraLight\nThe area of the view is lighter than the underlying view.\ncase dark\nThe area of the view is darker than the underlying view.\ncase extraDark\nThe area of the view is even more dark than the underlying view.\ncase regular\nA regular blur style that adapts to the user interface style.\ncase prominent\nA blur style for making content more prominent that adapts to the user interface style."
  },
  {
    "title": "backgroundView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624913-backgroundview",
    "html": "Discussion\n\nThe view in this property appears behind the view in the contentView property and displays static background content behind the header or footer. For example, you might assign an image view to this property and use it to display a custom background image.\n\nA background configuration is mutually exclusive with background views, so you must use one approach or the other. Setting a non-nil value for this property resets backgroundConfiguration to nil.\n\nSee Also\nConfiguring the background\nfunc defaultBackgroundConfiguration() -> UIBackgroundConfiguration\nRetrieves a background configuration with system default values.\nvar backgroundConfiguration: UIBackgroundConfiguration?\nThe current background configuration of the view.\nvar automaticallyUpdatesBackgroundConfiguration: Bool\nA Boolean value that determines whether the view automatically updates its background configuration when its state changes."
  },
  {
    "title": "backgroundEffect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614990-backgroundeffect",
    "html": "Discussion\n\nAssigning a visual effect object to this property adds that effect to the background of the action button.\n\nSee Also\nConfiguring the action’s appearance\nvar style: UITableViewRowAction.Style\nThe style applied to the action button.\nDeprecated\nenum UITableViewRowAction.Style\nConstants that specify the appearance of action buttons.\nDeprecated\nvar title: String?\nThe title of the action button.\nDeprecated\nvar backgroundColor: UIColor?\nThe background color of the action button.\nDeprecated"
  },
  {
    "title": "backgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewrowaction/1614995-backgroundcolor",
    "html": "Discussion\n\nUse this property to specify the background color for your button. If you don’t specify a value for this property, UIKit assigns a default color based on the value in the style property.\n\nSee Also\nConfiguring the action’s appearance\nvar style: UITableViewRowAction.Style\nThe style applied to the action button.\nDeprecated\nenum UITableViewRowAction.Style\nConstants that specify the appearance of action buttons.\nDeprecated\nvar title: String?\nThe title of the action button.\nDeprecated\nvar backgroundEffect: UIVisualEffect?\nThe visual effect to apply to the button.\nDeprecated"
  },
  {
    "title": "contentView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewheaderfooterview/1624914-contentview",
    "html": "Discussion\n\nTo create your header or footer content, you add subviews to the view in this property. Your custom subviews represent the main content of your header or footer. Be sure to configure all subviews.\n\nSee Also\nManaging the content\nfunc defaultContentConfiguration() -> UIListContentConfiguration\nRetrieves a default list content configuration for the view’s style.\nvar contentConfiguration: (UIContentConfiguration)?\nThe current content configuration of the view.\nvar automaticallyUpdatesContentConfiguration: Bool\nA Boolean value that determines whether the view automatically updates its content configuration when its state changes."
  },
  {
    "title": "rect(cornerRadius:cornerCurve:maskedCorners:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4278173-rect",
    "html": "See Also\nCreating a hover shape\nstatic var rect: UIShape\nCreates a rectangular shape.\nstatic var capsule: UIShape\nCreates a capsule shape, a rounded rectangle with a corner radius equal to half the length of the rectangle’s smallest edge.\nstatic var circle: UIShape\nCreates a circular shape, with a radius equal to half the length of the frame rectangle’s smallest edge.\nstatic func fixedRect(CGRect, cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a fixed rectangular shape that uses the provided rectangle as its shape, regardless of the frame that contains it.\nenum UICornerCurve\nThe corner curve to apply to a view."
  },
  {
    "title": "fixedRect(_:cornerRadius:cornerCurve:maskedCorners:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4284527-fixedrect",
    "html": "See Also\nCreating a hover shape\nstatic var rect: UIShape\nCreates a rectangular shape.\nstatic var capsule: UIShape\nCreates a capsule shape, a rounded rectangle with a corner radius equal to half the length of the rectangle’s smallest edge.\nstatic var circle: UIShape\nCreates a circular shape, with a radius equal to half the length of the frame rectangle’s smallest edge.\nstatic func rect(cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a rectangular shape with rounded corners, using the provided corner radius, corner curve, and rectangle corners.\nenum UICornerCurve\nThe corner curve to apply to a view."
  },
  {
    "title": "layout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/layout/3853131-layout",
    "html": "Discussion\n\nUse this invalidation type to call setNeedsLayout() when a change in property value should cause an update to the layout of the containing view’s subviews.\n\nSee Also\nCreating the invalidation structure\ninit()\nCreates a layout invalidation structure."
  },
  {
    "title": "pickerView(_:titleForRow:forComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614384-pickerview",
    "html": "Parameters\npickerView\n\nAn object representing the picker view requesting the data.\n\nrow\n\nA zero-indexed number identifying a row of component. Rows are numbered top-to-bottom.\n\ncomponent\n\nA zero-indexed number identifying a component of pickerView. Components are numbered left-to-right.\n\nReturn Value\n\nThe string to use as the title of the indicated component row.\n\nDiscussion\n\nIf you implement both this method and the pickerView(_:attributedTitleForRow:forComponent:) method, the picker view prefers the pickerView(_:attributedTitleForRow:forComponent:) method. However, if that method returns nil, the picker view falls back to using the string returned by this method.\n\nSee Also\nSetting the content of component rows\nfunc pickerView(UIPickerView, attributedTitleForRow: Int, forComponent: Int) -> NSAttributedString?\nCalled by the picker view when it needs the styled title to use for a given row in a given component.\nfunc pickerView(UIPickerView, viewForRow: Int, forComponent: Int, reusing: UIView?) -> UIView\nCalled by the picker view when it needs the view to use for a given row in a given component."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uihoverhighlighteffect/4224532-init",
    "html": "See Also\nCreating a highlight hover effect\nstatic var highlight: UIHoverHighlightEffect\nProvides a convenience initializer to create an effect that applies a highlight to the view on hover."
  },
  {
    "title": "invalidate(view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/display/3853123-invalidate",
    "html": "Parameters\nview\n\nThe view that requires invalidating.\n\nRelationships\nFrom Protocol\nUIViewInvalidating"
  },
  {
    "title": "normal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/decelerationrate/1619415-normal",
    "html": "See Also\nDeceleration rates\nstatic let fast: UIScrollView.DecelerationRate\nA fast deceleration rate for a scroll view."
  },
  {
    "title": "UIScrollView.ContentInsetAdjustmentBehavior.scrollableAxes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/contentinsetadjustmentbehavior/scrollableaxes",
    "html": "Discussion\n\nThe top and bottom insets include the safe area inset values when the vertical content size is greater than the height of the scroll view itself. The top and bottom insets are also adjusted when the alwaysBounceVertical property is true. Similarly, the left and right insets include the safe area insets when the horizontal content size is greater than the width of the scroll view."
  },
  {
    "title": "UIScrollView.ContentInsetAdjustmentBehavior.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/contentinsetadjustmentbehavior/automatic",
    "html": "Discussion\n\nContent is always adjusted vertically when the scroll view is the content view of a view controller that is currently displayed by a navigation or tab bar controller. If the scroll view is horizontally scrollable, the horizontal content offset is also adjusted when there are nonzero safe area insets."
  },
  {
    "title": "webViewDidFinishLoad(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617969-webviewdidfinishload",
    "html": "Parameters\nwebView\n\nThe web view has finished loading.\n\nSee Also\nLoading Content\nfunc webView(UIWebView, shouldStartLoadWith: URLRequest, navigationType: UIWebView.NavigationType) -> Bool\nSent before a web view begins loading a frame.\nDeprecated\nfunc webViewDidStartLoad(UIWebView)\nSent after a web view starts loading a frame.\nDeprecated\nfunc webView(UIWebView, didFailLoadWithError: Error)\nSent if a web view failed to load a frame.\nDeprecated"
  },
  {
    "title": "webViewDidStartLoad(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617947-webviewdidstartload",
    "html": "Parameters\nwebView\n\nThe web view that has begun loading a new frame.\n\nSee Also\nLoading Content\nfunc webView(UIWebView, shouldStartLoadWith: URLRequest, navigationType: UIWebView.NavigationType) -> Bool\nSent before a web view begins loading a frame.\nDeprecated\nfunc webViewDidFinishLoad(UIWebView)\nSent after a web view finishes loading a frame.\nDeprecated\nfunc webView(UIWebView, didFailLoadWithError: Error)\nSent if a web view failed to load a frame.\nDeprecated"
  },
  {
    "title": "webView(_:shouldStartLoadWith:navigationType:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiwebviewdelegate/1617945-webview",
    "html": "Parameters\nwebView\n\nThe web view that is about to load a new frame.\n\nrequest\n\nThe content location.\n\nnavigationType\n\nThe type of user action that started the load request.\n\nReturn Value\n\ntrue if the web view should begin loading content; otherwise, false .\n\nSee Also\nLoading Content\nfunc webViewDidStartLoad(UIWebView)\nSent after a web view starts loading a frame.\nDeprecated\nfunc webViewDidFinishLoad(UIWebView)\nSent after a web view finishes loading a frame.\nDeprecated\nfunc webView(UIWebView, didFailLoadWithError: Error)\nSent if a web view failed to load a frame.\nDeprecated"
  },
  {
    "title": "UIDatePickerStyle.compact | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatepickerstyle/compact",
    "html": "Discussion\n\nYou can’t use this style with the UIDatePicker.Mode.countDownTimer mode.\n\nSee Also\nStyles\ncase automatic\nA style indicating that the system picks the concrete style based on the current platform and date picker mode.\ncase inline\nA style indicating that the date pickers displays as an inline, editable field.\ncase wheels\nA style indicating that the date picker displays as a wheel picker."
  },
  {
    "title": "UIDatePickerStyle.inline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatepickerstyle/inline",
    "html": "Discussion\n\nUse this style when you want to let users edit the date picker value without having to tap the label shown in the UIDatePickerStyle.compact style.\n\nYou can’t use this style with the UIDatePicker.Mode.countDownTimer mode.\n\nSee Also\nStyles\ncase automatic\nA style indicating that the system picks the concrete style based on the current platform and date picker mode.\ncase compact\nA style indicating that the date picker displays as a label that when tapped displays a calendar-style editor.\ncase wheels\nA style indicating that the date picker displays as a wheel picker."
  },
  {
    "title": "UIDatePickerStyle.wheels | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatepickerstyle/wheels",
    "html": "Discussion\n\nEditing the date picker value occurs inline when using this style.\n\nSee Also\nStyles\ncase automatic\nA style indicating that the system picks the concrete style based on the current platform and date picker mode.\ncase compact\nA style indicating that the date picker displays as a label that when tapped displays a calendar-style editor.\ncase inline\nA style indicating that the date pickers displays as an inline, editable field."
  },
  {
    "title": "scrollViewDidChangeAdjustedContentInset(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/2902256-scrollviewdidchangeadjustedconte",
    "html": "Parameters\nscrollView\n\nThe scroll-view object whose insets changed."
  },
  {
    "title": "scrollViewDidEndScrollingAnimation(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619379-scrollviewdidendscrollinganimati",
    "html": "Parameters\nscrollView\n\nThe scroll-view object that’s performing the scrolling animation.\n\nDiscussion\n\nThe scroll view calls this method at the end of its implementations of the setContentOffset(_:animated:) and scrollRectToVisible(_:animated:) methods, but only if animations are requested."
  },
  {
    "title": "scrollViewDidZoom(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619409-scrollviewdidzoom",
    "html": "Parameters\nscrollView\n\nThe scroll-view object whose zoom factor changed.\n\nSee Also\nManaging zooming\nfunc viewForZooming(in: UIScrollView) -> UIView?\nAsks the delegate for the view to scale when zooming is about to occur in the scroll view.\nfunc scrollViewWillBeginZooming(UIScrollView, with: UIView?)\nTells the delegate that zooming of the content in the scroll view is about to commence.\nfunc scrollViewDidEndZooming(UIScrollView, with: UIView?, atScale: CGFloat)\nTells the delegate when zooming of the content in the scroll view completed."
  },
  {
    "title": "scrollViewWillBeginZooming(_:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619396-scrollviewwillbeginzooming",
    "html": "Parameters\nscrollView\n\nThe scroll-view object displaying the content view.\n\nview\n\nThe view object whose content is about to be zoomed.\n\nDiscussion\n\nThis method is called at the beginning of zoom gestures and in cases where a change in zoom level is to be animated. You can use this method to store state information or perform any additional actions prior to zooming the view’s content.\n\nSee Also\nManaging zooming\nfunc viewForZooming(in: UIScrollView) -> UIView?\nAsks the delegate for the view to scale when zooming is about to occur in the scroll view.\nfunc scrollViewDidEndZooming(UIScrollView, with: UIView?, atScale: CGFloat)\nTells the delegate when zooming of the content in the scroll view completed.\nfunc scrollViewDidZoom(UIScrollView)\nTells the delegate that the scroll view’s zoom factor changed."
  },
  {
    "title": "scrollViewWillBeginDecelerating(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619386-scrollviewwillbegindecelerating",
    "html": "Parameters\nscrollView\n\nThe scroll-view object that’s decelerating the scrolling of the content view.\n\nDiscussion\n\nThe scroll view calls this method as the user’s finger touches up as it’s moving during a scrolling operation; the scroll view continues to move a short distance afterwards. The isDecelerating property of UIScrollView controls deceleration.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "scrollViewDidEndDragging(_:willDecelerate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619436-scrollviewdidenddragging",
    "html": "Parameters\nscrollView\n\nThe scroll-view object that finished scrolling the content view.\n\ndecelerate\n\ntrue if the scrolling movement will continue, but decelerate, after a touch-up gesture during a dragging operation. If the value is false, scrolling stops immediately upon touch-up.\n\nDiscussion\n\nThe scroll view sends this message when the user’s finger touches up after dragging content. The isDecelerating property of UIScrollView controls deceleration.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "scrollViewWillEndDragging(_:withVelocity:targetContentOffset:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619385-scrollviewwillenddragging",
    "html": "Parameters\nscrollView\n\nThe scroll-view object where the user ended the touch.\n\nvelocity\n\nThe velocity of the scroll view (in points per millisecond) at the moment the touch was released.\n\ntargetContentOffset\n\nThe expected offset when the scrolling action decelerates to a stop.\n\nDiscussion\n\nYour application can change the value of the targetContentOffset parameter to adjust where the scrollview finishes its scrolling animation.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "scrollViewWillBeginDragging(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619394-scrollviewwillbegindragging",
    "html": "Parameters\nscrollView\n\nThe scroll-view object that’s about to scroll the content view.\n\nDiscussion\n\nThe delegate might not receive this message until dragging has occurred over a small distance.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "scrollViewDidScroll(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619392-scrollviewdidscroll",
    "html": "Parameters\nscrollView\n\nThe scroll-view object in which the scrolling occurred.\n\nDiscussion\n\nThe delegate typically implements this method to obtain the change in content offset from scrollView and draw the affected portion of the content view.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "destinationIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897496-destinationindexpath",
    "html": "Required"
  },
  {
    "title": "sourceIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropitem/2897479-sourceindexpath",
    "html": "Required\n\nDiscussion\n\nIf the item originated from the table view, this property contains the item’s original index path.\n\nSee Also\nGetting the item information\nvar previewSize: CGSize\nThe size of the drag item’s preview.\n\nRequired"
  },
  {
    "title": "drop(_:intoRowAt:rect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2909061-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe dragged item that you want to animate into position.\n\nindexPath\n\nThe index path in the table view at which to incorporate the item.\n\nrect\n\nThe destination rectangle to use for the animation. Specify the rectangle in the coordinate system of the cell at the specified indexPath. UIKit animates the drag item to the specified rectangle.\n\nDiscussion\n\nUse this method to animate drops where you incorporate the dragged items into another item of your table view. For example, when incorporating items into a folder, you would use this method to animate the items in a way that makes it look like they were placed into the folder.\n\nSee Also\nAnimating rows to their destination\nfunc drop(UIDragItem, toRowAt: IndexPath) -> UIDragAnimating\nAnimates the item to the specified index path in the table view.\n\nRequired\n\nfunc drop(UIDragItem, to: UIDragPreviewTarget) -> UIDragAnimating\nAnimates the item to an arbitrary location in your view hierarchy.\n\nRequired\n\nfunc drop(UIDragItem, to: UITableViewDropPlaceholder) -> UITableViewDropPlaceholderContext\nAnimates the item to the specified location and inserts a placeholder cell at that location.\n\nRequired"
  },
  {
    "title": "sectionTitles | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620379-sectiontitles",
    "html": "Discussion\n\nThis property contains the localized list of section titles sorted according to the specified ordering (for example, A through Z in US English). In its implementation of tableView(_:titleForHeaderInSection:), the data source can call this method on the indexed-collation object, passing in the section index and returning the result.\n\nSee Also\nProviding section index data to the table view\nvar sectionIndexTitles: [String]\nReturns the list of section-index titles for the table view.\nfunc section(forSectionIndexTitle: Int) -> Int\nReturns the section that the table view should scroll to for the given index title."
  },
  {
    "title": "items | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897439-items",
    "html": "Required"
  },
  {
    "title": "current() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620384-current",
    "html": "Return Value\n\nA UILocalizedIndexedCollation object or nil if there was a problem creating the object."
  },
  {
    "title": "section(forSectionIndexTitle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalizedindexedcollation/1620380-section",
    "html": "Parameters\nindexTitleIndex\n\nAn integer identifying a section-index title by its position in the array of such titles.\n\nReturn Value\n\nAn integer identifying the table-view section associated with indexTitleIndex.\n\nDiscussion\n\nThis method allows the table view to map between a given item in the section index and a given section even when there isn't a one-to-one mapping. In its implementation of tableView(_:sectionForSectionIndexTitle:at:), the data source can call this method on the indexed-collation object specifying as an argument the passed-in index integer; it then returns the result to the table view.\n\nSee Also\nProviding section index data to the table view\nvar sectionTitles: [String]\nReturns the list of section titles for the table view.\nvar sectionIndexTitles: [String]\nReturns the list of section-index titles for the table view."
  },
  {
    "title": "session | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897324-session",
    "html": "Required\n\nSee Also\nGetting the session information\nvar proposal: UITableViewDropProposal\nThe proposal for how to incorporate the dropped items.\n\nRequired"
  },
  {
    "title": "nextFocusedIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewfocusupdatecontext/1614919-nextfocusedindexpath",
    "html": "Discussion\n\nThis property returns the index path only when the nextFocusedView is located within a cell of the table view. Otherwise, it returns nil. This can happen if focus is moving out of the table view, because the nextFocusedView isn’t associated with an index path in this table view.\n\nWhen focus is moving from one table view to another, each table view delegate is called with previouslyFocusedIndexPath and nextFocusedIndexPath configured for its specific table view.\n\nSee Also\nLocating focusable items in a table view\nvar previouslyFocusedIndexPath: IndexPath?\nReturns the index path of the cell containing the context’s previously focused view."
  },
  {
    "title": "searchBarTextDidEndEditing(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624301-searchbartextdidendediting",
    "html": "Parameters\nsearchBar\n\nThe search bar that is being edited.\n\nDiscussion\n\nTypically, you implement this method to perform the text-based search.\n\nSee Also\nManaging the search text\nfunc searchBar(UISearchBar, textDidChange: String)\nTells the delegate that the user changed the search text.\nfunc searchBar(UISearchBar, shouldChangeTextIn: NSRange, replacementText: String) -> Bool\nAsk the delegate if text in a specified range should be replaced with given text.\nfunc searchBarShouldBeginEditing(UISearchBar) -> Bool\nAsks the delegate if editing should begin in the specified search bar.\nfunc searchBarTextDidBeginEditing(UISearchBar)\nTells the delegate when the user begins editing the search text.\nfunc searchBarShouldEndEditing(UISearchBar) -> Bool\nAsks the delegate if editing should stop in the specified search bar."
  },
  {
    "title": "UIDatePickerStyle.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatepickerstyle/automatic",
    "html": "See Also\nStyles\ncase compact\nA style indicating that the date picker displays as a label that when tapped displays a calendar-style editor.\ncase inline\nA style indicating that the date pickers displays as an inline, editable field.\ncase wheels\nA style indicating that the date picker displays as a wheel picker."
  },
  {
    "title": "description | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4278172-description",
    "html": "Relationships\nFrom Protocol\nCustomStringConvertible\nSee Also\nDescribing a hover shape\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging."
  },
  {
    "title": "pickerView(_:widthForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614378-pickerview",
    "html": "Parameters\npickerView\n\nThe picker view requesting this information.\n\ncomponent\n\nA zero-indexed number identifying a component of the picker view. Components are numbered left-to-right.\n\nReturn Value\n\nA float value indicating the width of the row in points.\n\nSee Also\nSetting the dimensions of the picker view\nfunc pickerView(UIPickerView, rowHeightForComponent: Int) -> CGFloat\nCalled by the picker view when it needs the row height to use for drawing row content."
  },
  {
    "title": "circle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224550-circle",
    "html": "See Also\nCreating a hover shape\nstatic var rect: UIShape\nCreates a rectangular shape.\nstatic var capsule: UIShape\nCreates a capsule shape, a rounded rectangle with a corner radius equal to half the length of the rectangle’s smallest edge.\nstatic func rect(cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a rectangular shape with rounded corners, using the provided corner radius, corner curve, and rectangle corners.\nstatic func fixedRect(CGRect, cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a fixed rectangular shape that uses the provided rectangle as its shape, regardless of the frame that contains it.\nenum UICornerCurve\nThe corner curve to apply to a view."
  },
  {
    "title": "debugDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4278171-debugdescription",
    "html": "Relationships\nFrom Protocol\nCustomDebugStringConvertible\nSee Also\nDescribing a hover shape\nvar description: String\nA textual representation of this instance."
  },
  {
    "title": "UIScrollView.IndicatorStyle.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/indicatorstyle/default",
    "html": "Discussion\n\nThis style is good against any content background."
  },
  {
    "title": "automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uihoverautomaticeffect/4224524-automatic",
    "html": "See Also\nCreating an automatic hover effect\ninit()\nCreates a system-default hover effect that automatically selects the appropriate effect based on the view to which it applies."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uihoverautomaticeffect/4224525-init",
    "html": "See Also\nCreating an automatic hover effect\nstatic var automatic: UIHoverAutomaticEffect\nProvides a convenience initializer to create a system-default hover effect that automatically selects the appropriate effect based on the view to which it applies."
  },
  {
    "title": "scrollViewDidScrollToTop(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619382-scrollviewdidscrolltotop",
    "html": "Parameters\nscrollView\n\nThe scroll-view object that perform the scrolling operation.\n\nDiscussion\n\nThe scroll view sends this message when it finishes scrolling to the top of the content. It might call it immediately if the top of the content is already shown. For the scroll-to-top gesture (a tap on the status bar) to be effective, the scrollsToTop property of the UIScrollView must be set to true.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "highlight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uihoverhighlighteffect/4224531-highlight",
    "html": "See Also\nCreating a highlight hover effect\ninit()\nCreates an effect that applies a highlight to the view on hover."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/intrinsiccontentsize/3853125-init",
    "html": "See Also\nCreating the invalidation structure\nstatic var intrinsicContentSize: UIView.Invalidations.IntrinsicContentSize\nA change that invalidates a view’s intrinsic size."
  },
  {
    "title": "pickerView(_:didSelectRow:inComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614371-pickerview",
    "html": "Parameters\npickerView\n\nAn object representing the picker view requesting the data.\n\nrow\n\nA zero-indexed number identifying a row of component. Rows are numbered top-to-bottom.\n\ncomponent\n\nA zero-indexed number identifying a component of pickerView. Components are numbered left-to-right.\n\nDiscussion\n\nTo determine what value the user selected, the delegate uses the row index to access the value at the corresponding position in the array used to construct the component."
  },
  {
    "title": "invalidate(view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/intrinsiccontentsize/3853127-invalidate",
    "html": "Parameters\nview\n\nThe view that requires invalidating.\n\nRelationships\nFrom Protocol\nUIViewInvalidating"
  },
  {
    "title": "numberOfComponents(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdatasource/1614377-numberofcomponents",
    "html": "Required\n\nParameters\npickerView\n\nThe picker view requesting the data.\n\nReturn Value\n\nThe number of components (or “columns”) that the picker view should display.\n\nSee Also\nProviding counts for the picker view\nfunc pickerView(UIPickerView, numberOfRowsInComponent: Int) -> Int\nAsks the data source for the number of rows for a specified component.\n\nRequired"
  },
  {
    "title": "barTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitoolbar/1618002-bartintcolor",
    "html": "Discussion\n\nThis color is made translucent by default unless you set the isTranslucent property to false.\n\nSee Also\nChanging the background\nfunc backgroundImage(forToolbarPosition: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image to use for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, forToolbarPosition: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics."
  },
  {
    "title": "fast | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/decelerationrate/1619416-fast",
    "html": "See Also\nDeceleration rates\nstatic let normal: UIScrollView.DecelerationRate\nThe default deceleration rate for a scroll view."
  },
  {
    "title": "sourceIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropitem/2897392-sourceindexpath",
    "html": "Required\n\nDiscussion\n\nIf the item originated from the collection view, this property contains the item's original index path.\n\nSee Also\nGetting the Item Information\nvar previewSize: CGSize\nThe size of the drag item's preview.\n\nRequired"
  },
  {
    "title": "scrollViewDidEndDecelerating(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619417-scrollviewdidenddecelerating",
    "html": "Parameters\nscrollView\n\nThe scroll-view object that’s decelerating the scrolling of the content view.\n\nDiscussion\n\nThe scroll view calls this method when the scrolling movement comes to a halt. The isDecelerating property of UIScrollView controls deceleration.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewShouldScrollToTop(UIScrollView) -> Bool\nAsks the delegate if the scroll view should scroll to the top of the content.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement."
  },
  {
    "title": "UICollectionLayoutListConfiguration.HeaderMode.firstItemInSection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/headermode/firstiteminsection",
    "html": "Discussion\n\nChoose this header mode when you’re using hierarchical data sources if you want to be able to expand and collapse the header.\n\nWhen you use this header mode, a UICollectionViewListCell object that appears as the first item in the section automatically uses a header appearance. When you configure your data source, make sure to account for the fact that the first item in the section (at index 0) represents the header, and the actual items in the section start at index 1.\n\nBy default, lists that use the UICollectionLayoutListConfiguration.Appearance.plain and UICollectionLayoutListConfiguration.Appearance.sidebarPlain list appearances use pinned headers. If you want to opt into this default pinning behavior, use the UICollectionLayoutListConfiguration.HeaderMode.supplementary header mode instead.\n\nSee Also\nHeader modes\ncase none\nNo headers are shown.\ncase supplementary\nA header mode that uses supplementary views to show headers."
  },
  {
    "title": "configuration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/configuration/3853113-configuration",
    "html": "Discussion\n\nUse this invalidation type to call setNeedsUpdateConfiguration() when a change in property value should cause the containing view to update the configuration.\n\nNote\n\nYou only use this invalidation type on UIView subclasses that support a configuration pattern, using setNeedsUpdateConfiguration() and updateConfiguration() pattern. For example, use this type on UIButton, UICollectionViewCell, UITableViewCell, or UITableViewHeaderFooterView. This type has no effect on UIView subclasses that don’t use a configuration pattern.\n\nSee Also\nCreating the invalidation structure\ninit()\nCreates a configuration invalidation structure."
  },
  {
    "title": "searchBar(_:shouldChangeTextIn:replacementText:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624328-searchbar",
    "html": "Parameters\nsearchBar\n\nThe search bar that is being edited.\n\nrange\n\nThe range of the text to be changed.\n\ntext\n\nThe text to replace existing text in range.\n\nReturn Value\n\ntrue if text in range should be replaced by text, otherwise, false.\n\nSee Also\nManaging the search text\nfunc searchBar(UISearchBar, textDidChange: String)\nTells the delegate that the user changed the search text.\nfunc searchBarShouldBeginEditing(UISearchBar) -> Bool\nAsks the delegate if editing should begin in the specified search bar.\nfunc searchBarTextDidBeginEditing(UISearchBar)\nTells the delegate when the user begins editing the search text.\nfunc searchBarShouldEndEditing(UISearchBar) -> Bool\nAsks the delegate if editing should stop in the specified search bar.\nfunc searchBarTextDidEndEditing(UISearchBar)\nTells the delegate that the user finished editing the search text."
  },
  {
    "title": "searchBarShouldBeginEditing(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624306-searchbarshouldbeginediting",
    "html": "Parameters\nsearchBar\n\nThe search bar that is being edited.\n\nReturn Value\n\ntrue if an editing session should be initiated, otherwise, false.\n\nSee Also\nManaging the search text\nfunc searchBar(UISearchBar, textDidChange: String)\nTells the delegate that the user changed the search text.\nfunc searchBar(UISearchBar, shouldChangeTextIn: NSRange, replacementText: String) -> Bool\nAsk the delegate if text in a specified range should be replaced with given text.\nfunc searchBarTextDidBeginEditing(UISearchBar)\nTells the delegate when the user begins editing the search text.\nfunc searchBarShouldEndEditing(UISearchBar) -> Bool\nAsks the delegate if editing should stop in the specified search bar.\nfunc searchBarTextDidEndEditing(UISearchBar)\nTells the delegate that the user finished editing the search text."
  },
  {
    "title": "UIPageControl.Direction.leftToRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipagecontrol/direction/lefttoright",
    "html": "See Also\nDirections\ncase natural\nA direction that infers the lay out from the system’s locale.\ncase rightToLeft\nA direction that lays out the page indicators from right to left.\ncase topToBottom\nA direction that lays out the page indicators from top to bottom.\ncase bottomToTop\nA direction that lays out the page indicators from bottom to top."
  },
  {
    "title": "UIPageControl.Direction.topToBottom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipagecontrol/direction/toptobottom",
    "html": "See Also\nDirections\ncase natural\nA direction that infers the lay out from the system’s locale.\ncase leftToRight\nA direction that lays out the page indicators from left to right.\ncase rightToLeft\nA direction that lays out the page indicators from right to left.\ncase bottomToTop\nA direction that lays out the page indicators from bottom to top."
  },
  {
    "title": "pickerView(_:rowHeightForComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614386-pickerview",
    "html": "Parameters\npickerView\n\nThe picker view requesting this information.\n\ncomponent\n\nA zero-indexed number identifying a component of pickerView. Components are numbered left-to-right.\n\nReturn Value\n\nA float value indicating the height of the row in points.\n\nSee Also\nSetting the dimensions of the picker view\nfunc pickerView(UIPickerView, widthForComponent: Int) -> CGFloat\nCalled by the picker view when it needs the row width to use for drawing row content."
  },
  {
    "title": "UIPageControl.Direction.rightToLeft | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipagecontrol/direction/righttoleft",
    "html": "See Also\nDirections\ncase natural\nA direction that infers the lay out from the system’s locale.\ncase leftToRight\nA direction that lays out the page indicators from left to right.\ncase topToBottom\nA direction that lays out the page indicators from top to bottom.\ncase bottomToTop\nA direction that lays out the page indicators from bottom to top."
  },
  {
    "title": "UICornerCurve | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicornercurve",
    "html": "Topics\nChoosing a corner style\ncase automatic\nSelects the corner style automatically.\ncase circular\nAlways uses a circular corner style.\ncase continuous\nAlways uses a continuous corner style.\nDescribing a corner style\nvar description: String\nA textual representation of this instance.\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging.\nRelationships\nConforms To\nCustomDebugStringConvertible\nCustomStringConvertible\nSendable\nSee Also\nCreating a hover shape\nstatic var rect: UIShape\nCreates a rectangular shape.\nstatic var capsule: UIShape\nCreates a capsule shape, a rounded rectangle with a corner radius equal to half the length of the rectangle’s smallest edge.\nstatic var circle: UIShape\nCreates a circular shape, with a radius equal to half the length of the frame rectangle’s smallest edge.\nstatic func rect(cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a rectangular shape with rounded corners, using the provided corner radius, corner curve, and rectangle corners.\nstatic func fixedRect(CGRect, cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a fixed rectangular shape that uses the provided rectangle as its shape, regardless of the frame that contains it."
  },
  {
    "title": "UIShapeProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishapeprovider",
    "html": "Topics\nResolving a custom shape\nfunc resolve(in: Self.Context) -> Self.Resolved\nResolves the shape in the provided context.\n\nRequired\n\nSupporting types\ntypealias UIShapeProvider.Context\nThe context for resolving a dynamic shape.\ntypealias UIShapeProvider.Resolved\nA shape that has completely resolved based on a context.\nRelationships\nConforming Types\nUIShape\nSee Also\nCreating a dynamic hover shape\ninit(some UIShapeProvider)\nCreates a dynamic shape that resolves using the provided resolver closure and resolution context.\nfunc resolve(in: UIShape.ResolutionContext) -> UIShape.Resolved\nResolves the shape in the provided context.\nstruct UIShape.ResolutionContext\nThe context for resolving a dynamic shape.\nstruct UIShape.Resolved\nA shape that has completely resolved based on a context."
  },
  {
    "title": "presentationSectionIndex(forDataSourceSectionIndex:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897352-presentationsectionindex",
    "html": "Required\n\nParameters\ndataSourceSectionIndex\n\nThe index path of a section in the data source object.\n\nReturn Value\n\nThe index path of the same section in the presentation layer of your object, or nil if the section is not in the presentation layer.\n\nSee Also\nManaging section positions\nfunc dataSourceSectionIndex(forPresentationSectionIndex: Int) -> Int\nTranslates a section index in your presented layout to the equivalent section index in your data source object.\n\nRequired"
  },
  {
    "title": "dataSourceSectionIndex(forPresentationSectionIndex:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897423-datasourcesectionindex",
    "html": "Required\n\nParameters\npresentationSectionIndex\n\nThe index path of a section in your presentation layer.\n\nReturn Value\n\nThe index path of the same section in the data source object, or nil if the section is no longer in the data source.\n\nSee Also\nManaging section positions\nfunc presentationSectionIndex(forDataSourceSectionIndex: Int) -> Int\nTranslates a section index in your data source object to the equivalent section index in your presented layout.\n\nRequired"
  },
  {
    "title": "intrinsicContentSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/intrinsiccontentsize/3853126-intrinsiccontentsize",
    "html": "Discussion\n\nUse this type of invalidation type to call invalidateIntrinsicContentSize() when a change in property value invalidates the containing view’s intrinsic content size. When you use this type, the constraint-based layout system accounts for the change the next time it updates the layout.\n\nSee Also\nCreating the invalidation structure\ninit()\nCreates an intrinsic content size invalidation structure."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/layout/3853129-init",
    "html": "See Also\nCreating the invalidation structure\nstatic var layout: UIView.Invalidations.Layout\nA change that invalidates the layout of the containing view’s subviews."
  },
  {
    "title": "UIScrollView.IndicatorStyle.white | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/indicatorstyle/white",
    "html": "Discussion\n\nThis style is good against a black content background."
  },
  {
    "title": "UIScrollView.IndicatorStyle.black | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollview/indicatorstyle/black",
    "html": "Discussion\n\nThis style is good against a white content background."
  },
  {
    "title": "scrollViewShouldScrollToTop(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscrollviewdelegate/1619378-scrollviewshouldscrolltotop",
    "html": "Parameters\nscrollView\n\nThe scroll-view object requesting this information.\n\nReturn Value\n\ntrue to permit scrolling to the top of the content, false to disallow it.\n\nDiscussion\n\nIf the delegate doesn’t implement this method, true is assumed. For the scroll-to-top gesture (a tap on the status bar) to be effective, the scrollsToTop property of the UIScrollView must be set to true.\n\nSee Also\nResponding to scrolling and dragging\nfunc scrollViewDidScroll(UIScrollView)\nTells the delegate when the user scrolls the content view within the scroll view.\nfunc scrollViewWillBeginDragging(UIScrollView)\nTells the delegate when the scroll view is about to start scrolling the content.\nfunc scrollViewWillEndDragging(UIScrollView, withVelocity: CGPoint, targetContentOffset: UnsafeMutablePointer<CGPoint>)\nTells the delegate when the user finishes scrolling the content.\nfunc scrollViewDidEndDragging(UIScrollView, willDecelerate: Bool)\nTells the delegate when dragging ended in the scroll view.\nfunc scrollViewDidScrollToTop(UIScrollView)\nTells the delegate that the scroll view scrolled to the top of the content.\nfunc scrollViewWillBeginDecelerating(UIScrollView)\nTells the delegate that the scroll view is starting to decelerate the scrolling movement.\nfunc scrollViewDidEndDecelerating(UIScrollView)\nTells the delegate that the scroll view ended decelerating the scrolling movement."
  },
  {
    "title": "invalidate(view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/layout/3853130-invalidate",
    "html": "Parameters\nview\n\nThe view that requires invalidating.\n\nRelationships\nFrom Protocol\nUIViewInvalidating"
  },
  {
    "title": "pickerView(_:attributedTitleForRow:forComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614375-pickerview",
    "html": "Parameters\npickerView\n\nAn object representing the picker view requesting the data.\n\nrow\n\nA zero-indexed number identifying a row of component. Rows are numbered top-to-bottom.\n\ncomponent\n\nA zero-indexed number identifying a component of pickerView. Components are numbered left-to-right.\n\nReturn Value\n\nThe attributed string to use as the title of the indicated component row.\n\nDiscussion\n\nIf you implement both this method and the pickerView(_:titleForRow:forComponent:) method, the picker view prefers the use of this method. However, if your implementation of this method returns nil, the picker view falls back to using the string returned by the pickerView(_:titleForRow:forComponent:) method.\n\nSee Also\nSetting the content of component rows\nfunc pickerView(UIPickerView, titleForRow: Int, forComponent: Int) -> String?\nCalled by the picker view when it needs the title to use for a given row in a given component.\nfunc pickerView(UIPickerView, viewForRow: Int, forComponent: Int, reusing: UIView?) -> UIView\nCalled by the picker view when it needs the view to use for a given row in a given component."
  },
  {
    "title": "pickerView(_:numberOfRowsInComponent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdatasource/1614388-pickerview",
    "html": "Required\n\nParameters\npickerView\n\nThe picker view requesting the data.\n\ncomponent\n\nA zero-indexed number identifying a component of pickerView. Components are numbered left-to-right.\n\nReturn Value\n\nThe number of rows for the component.\n\nSee Also\nProviding counts for the picker view\nfunc numberOfComponents(in: UIPickerView) -> Int\nAsks the data source for the number of components in the picker view.\n\nRequired"
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/display/3853122-init",
    "html": "See Also\nCreating the invalidation structure\nstatic var display: UIView.Invalidations.Display\nA change that requires the system to redraw a view’s content."
  },
  {
    "title": "display | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/display/3853121-display",
    "html": "Discussion\n\nUse this invalidation type to call setNeedsDisplay() when a change in property value should cause the system to redraw the containing view’s content.\n\nSee Also\nCreating the invalidation structure\ninit()\nCreates a display invalidation structure."
  },
  {
    "title": "NSDiffableDataSourceSnapshotReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshotreference",
    "html": "Overview\n\nImportant\n\nIf you’re working in a Swift codebase, always use NSDiffableDataSourceSnapshot instead.\n\nAvoid using this type in Swift code. Only use this type to bridge from Objective-C code to Swift code by typecasting from a snapshot reference to a snapshot:\n\nlet snapshot = snapshotReference as NSDiffableDataSourceSnapshot<Int, UUID>\n\n\nTopics\nCreating a snapshot\nfunc appendSections(withIdentifiers: [Any])\nAdds the sections with the specified identifiers to the snapshot.\nfunc appendItems(withIdentifiers: [Any], intoSectionWithIdentifier: Any)\nAdds the items with the specified identifiers to the specified section of the snapshot.\nfunc appendItems(withIdentifiers: [Any])\nAdds the items with the specified identifiers to the last section of the snapshot.\nGetting item and section metrics\nvar numberOfItems: Int\nThe number of items in the snapshot.\nvar numberOfSections: Int\nThe number of sections in the snapshot.\nfunc numberOfItems(inSection: Any) -> Int\nReturns the number of items in the specified section of the snapshot.\nIdentifying items and sections\nvar itemIdentifiers: [Any]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [Any]\nThe identifiers of all of the sections in the snapshot.\nfunc index(ofItemIdentifier: Any) -> Int\nReturns the index of the item in the snapshot with the specified identifier.\nfunc index(ofSectionIdentifier: Any) -> Int\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiersInSection(withIdentifier: Any) -> [Any]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(forSectionContainingItemIdentifier: Any) -> Any?\nReturns the identifier of the section containing the specified item in the snapshot.\nInserting items and sections\nfunc insertItems(withIdentifiers: [Any], afterItemWithIdentifier: Any)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertItems(withIdentifiers: [Any], beforeItemWithIdentifier: Any)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], afterSectionWithIdentifier: Any)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\nfunc insertSections(withIdentifiers: [Any], beforeSectionWithIdentifier: Any)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot.\nRemoving items and sections\nfunc deleteAllItems()\nDeletes all of the items from the snapshot.\nfunc deleteItems(withIdentifiers: [Any])\nDeletes the items with the specified identifiers from the snapshot.\nfunc deleteSections(withIdentifiers: [Any])\nDeletes the sections with the specified identifiers from the snapshot.\nReordering items and sections\nfunc moveItem(withIdentifier: Any, afterItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveItem(withIdentifier: Any, beforeItemWithIdentifier: Any)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(withIdentifier: Any, afterSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\nfunc moveSection(withIdentifier: Any, beforeSectionWithIdentifier: Any)\nMoves the section from its current position in the snapshot to the position immediately before the specified section.\nReloading data\nfunc reconfigureItems(withIdentifiers: [Any])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [Any]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems(withIdentifiers: [Any])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [Any]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections(withIdentifiers: [Any])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [Any]\nIdentifies the sections reloaded by the changes to the snapshot.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying"
  },
  {
    "title": "UICollectionViewDropProposal.Intent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal/intent",
    "html": "Topics\nEnumeration Cases\ncase unspecified\nNo drop proposal was specified.\ncase insertAtDestinationIndexPath\nInsert the dropped items at the specified index path.\ncase insertIntoDestinationIndexPath\nIncorporate the dropped items into the item at the specified index path.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the Proposed Drop Location\nvar intent: UICollectionViewDropProposal.Intent\nThe option to use when incorporating the dropped items into your content.\nenum UIDropOperation\nOperation types that determine how a drag and drop activity resolves when the user drops a drag item."
  },
  {
    "title": "intent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal/2897338-intent",
    "html": "See Also\nGetting the Proposed Drop Location\nenum UICollectionViewDropProposal.Intent\nConstants indicating how you intend to handle a drop.\nenum UIDropOperation\nOperation types that determine how a drag and drop activity resolves when the user drops a drag item."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375769-init",
    "html": "See Also\nCreating a snapshot\nfunc appendSections([SectionIdentifierType])\nAdds the sections with the specified identifiers to the snapshot.\nfunc appendItems([ItemIdentifierType], toSection: SectionIdentifierType?)\nAdds the items with the specified identifiers to the specified section of the snapshot."
  },
  {
    "title": "indexOfItem(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375767-indexofitem",
    "html": "Parameters\nidentifier\n\nThe identifier of the item in the snapshot.\n\nReturn Value\n\nThe index of the item in the snapshot, or nil if the item with the specified identifier doesn't exist in the snapshot. This index value is 0-based.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [ItemIdentifierType]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [SectionIdentifierType]\nThe identifiers of all of the sections in the snapshot.\nfunc indexOfSection(SectionIdentifierType) -> Int?\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiers(inSection: SectionIdentifierType) -> [ItemIdentifierType]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(containingItem: ItemIdentifierType) -> SectionIdentifierType?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "apply(_:to:animatingDifferences:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3795618-apply",
    "html": "See Also\nUpdating section data\nfunc snapshot(for: SectionIdentifierType) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nReturns a representation of the current state of the data in the specified section of the collection view.\nfunc apply(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, to: SectionIdentifierType, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes and executing a completion handler."
  },
  {
    "title": "apply(_:to:animatingDifferences:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600964-apply",
    "html": "See Also\nUpdating section data\nfunc snapshot(for: SectionIdentifierType) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nReturns a representation of the current state of the data in the specified section of the collection view.\nfunc apply(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, to: SectionIdentifierType, animatingDifferences: Bool)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes."
  },
  {
    "title": "indexPath(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255136-indexpath",
    "html": "Parameters\nitemIdentifier\n\nThe identifier of the item in the collection view.\n\nReturn Value\n\nThe item's index path, or nil if no item is found with the provided item identifier.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an index path from its corresponding item identifier with no significant overhead.\n\nSee Also\nIdentifying items\nfunc itemIdentifier(for: IndexPath) -> ItemIdentifierType?\nReturns an identifier for the item at the specified index path in the collection view."
  },
  {
    "title": "previewSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropitem/2897437-previewsize",
    "html": "Required\n\nDiscussion\n\nYou might use this property when configuring animations. If the item does not have an associated preview, this property is set to CGSizeZero.\n\nSee Also\nGetting the Item Information\nvar sourceIndexPath: IndexPath?\nThe index path of the item in the collection view, if any.\n\nRequired"
  },
  {
    "title": "snapshot() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255141-snapshot",
    "html": "Return Value\n\nA snapshot containing section and item identifiers in the order that they appear in the UI.\n\nSee Also\nUpdating data\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "init(collectionView:cellProvider:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255138-init",
    "html": "Parameters\ncollectionView\n\nThe initialized collection view object to connect to the diffable data source.\n\ncellProvider\n\nA closure that creates and returns each of the cells for the collection view from the data the diffable data source provides.\n\nDiscussion\n\nTo connect a diffable data source to a collection view, you create the diffable data source using this initializer, passing in the collection view you want to associate with that data source. You also pass in a cell provider, where you configure each of your cells to determine how to display your data in the UI.\n\ndataSource = UICollectionViewDiffableDataSource<Int, UUID>(collectionView: collectionView) {\n    (collectionView: UICollectionView, indexPath: IndexPath, itemIdentifier: UUID) -> UICollectionViewCell? in\n    // configure and return cell\n}\n\n\nSee Also\nCreating a diffable data source\ntypealias UICollectionViewDiffableDataSource.CellProvider\nA closure that configures and returns a cell for a collection view from its diffable data source."
  },
  {
    "title": "searchBarBookmarkButtonClicked(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624312-searchbarbookmarkbuttonclicked",
    "html": "Parameters\nsearchBar\n\nThe search bar that was tapped.\n\nDiscussion\n\nThere is no automatic bookmark support provided by the search bar. It’s the application’s responsibility to implement this method to perform some action if the bookmark button is tapped by the user.\n\nSee Also\nResponding to clicks in search controls\nfunc searchBarCancelButtonClicked(UISearchBar)\nTells the delegate that the cancel button was tapped.\nfunc searchBarSearchButtonClicked(UISearchBar)\nTells the delegate that the search button was tapped.\nfunc searchBarResultsListButtonClicked(UISearchBar)\nTells the delegate that the search results list button was tapped.\nRelated Documentation\nvar showsBookmarkButton: Bool\nA Boolean value indicating whether the bookmark button is displayed."
  },
  {
    "title": "UICollectionLayoutListConfiguration.Appearance.insetGrouped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/insetgrouped",
    "html": "See Also\nList appearances\ncase plain\nThe plain list appearance.\ncase grouped\nThe grouped list appearance.\ncase sidebar\nThe sidebar list appearance.\ncase sidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "UICollectionViewDiffableDataSource.CellProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/cellprovider",
    "html": "Parameters\ncollectionView\n\nThe collection view to configure this cell for.\n\nindexPath\n\nThe index path that specifies the location of the cell in the collection view.\n\nitemIdentifier\n\nAn object, with a type that implements the Hashable protocol, the data source uses to uniquely identify the item for this cell.\n\nReturn Value\n\nA non-nil configured cell object. The cell provider must return a valid cell object to the collection view.\n\nDiscussion\n\nYou use this closure to configure and return cells when creating a diffable data source using init(collectionView:cellProvider:).\n\nSee Also\nCreating a diffable data source\ninit(collectionView: UICollectionView, cellProvider: UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.CellProvider)\nCreates a diffable data source with the specified cell provider, and connects it to the specified collection view.\nRelated Documentation\nclass UICollectionViewDiffableDataSource\nThe object you use to manage data and provide cells for a collection view.\nUpdating Collection Views Using Diffable Data Sources\nStreamline the display and update of data in a collection view using a diffable data source that contains identifiers.\nImplementing Modern Collection Views\nBring compositional layouts to your app and simplify updating your user interface with diffable data sources."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uihoverlifteffect/4224534-init",
    "html": "See Also\nCreating a lift hover effect\nstatic var lift: UIHoverLiftEffect\nProvides a convenience initializer to create an effect that can visually lift the view on hover where appropriate."
  },
  {
    "title": "invalidate(view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/constraints/3853119-invalidate",
    "html": "Parameters\nview\n\nThe view that requires invalidating.\n\nRelationships\nFrom Protocol\nUIViewInvalidating"
  },
  {
    "title": "pickerView(_:viewForRow:forComponent:reusing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipickerviewdelegate/1614389-pickerview",
    "html": "Parameters\npickerView\n\nAn object representing the picker view requesting the data.\n\nrow\n\nA zero-indexed number identifying a row of component. Rows are numbered top-to-bottom.\n\ncomponent\n\nA zero-indexed number identifying a component of pickerView. Components are numbered left-to-right.\n\nview\n\nA view object that was previously used for this row, but is now hidden and cached by the picker view.\n\nReturn Value\n\nA view object to use as the content of row. The object can be any subclass of UIView, such as UILabel, UIImageView, or even a custom view.\n\nDiscussion\n\nIf the previously used view (the view parameter) is adequate, return that. If you return a different view, the previously used view is released. The picker view centers the returned view in the rectangle for row.\n\nSee Also\nSetting the content of component rows\nfunc pickerView(UIPickerView, titleForRow: Int, forComponent: Int) -> String?\nCalled by the picker view when it needs the title to use for a given row in a given component.\nfunc pickerView(UIPickerView, attributedTitleForRow: Int, forComponent: Int) -> NSAttributedString?\nCalled by the picker view when it needs the styled title to use for a given row in a given component."
  },
  {
    "title": "invalidate(view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/configuration/3853115-invalidate",
    "html": "Parameters\nview\n\nThe view that requires invalidating.\n\nRelationships\nFrom Protocol\nUIViewInvalidating"
  },
  {
    "title": "searchBar(_:textDidChange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624299-searchbar",
    "html": "Parameters\nsearchBar\n\nThe search bar that is being edited.\n\nsearchText\n\nThe current text in the search text field.\n\nDiscussion\n\nThis method is also invoked when text is cleared from the search text field.\n\nSee Also\nManaging the search text\nfunc searchBar(UISearchBar, shouldChangeTextIn: NSRange, replacementText: String) -> Bool\nAsk the delegate if text in a specified range should be replaced with given text.\nfunc searchBarShouldBeginEditing(UISearchBar) -> Bool\nAsks the delegate if editing should begin in the specified search bar.\nfunc searchBarTextDidBeginEditing(UISearchBar)\nTells the delegate when the user begins editing the search text.\nfunc searchBarShouldEndEditing(UISearchBar) -> Bool\nAsks the delegate if editing should stop in the specified search bar.\nfunc searchBarTextDidEndEditing(UISearchBar)\nTells the delegate that the user finished editing the search text."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/configuration/3853114-init",
    "html": "See Also\nCreating the invalidation structure\nstatic var configuration: UIView.Invalidations.Configuration\nA change that invalidates a view’s configuration."
  },
  {
    "title": "searchBarShouldEndEditing(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624329-searchbarshouldendediting",
    "html": "Parameters\nsearchBar\n\nThe search bar that is being edited.\n\nReturn Value\n\ntrue if editing should stop, otherwise false.\n\nSee Also\nManaging the search text\nfunc searchBar(UISearchBar, textDidChange: String)\nTells the delegate that the user changed the search text.\nfunc searchBar(UISearchBar, shouldChangeTextIn: NSRange, replacementText: String) -> Bool\nAsk the delegate if text in a specified range should be replaced with given text.\nfunc searchBarShouldBeginEditing(UISearchBar) -> Bool\nAsks the delegate if editing should begin in the specified search bar.\nfunc searchBarTextDidBeginEditing(UISearchBar)\nTells the delegate when the user begins editing the search text.\nfunc searchBarTextDidEndEditing(UISearchBar)\nTells the delegate that the user finished editing the search text."
  },
  {
    "title": "searchBarTextDidBeginEditing(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624303-searchbartextdidbeginediting",
    "html": "Parameters\nsearchBar\n\nThe search bar that is being edited.\n\nSee Also\nManaging the search text\nfunc searchBar(UISearchBar, textDidChange: String)\nTells the delegate that the user changed the search text.\nfunc searchBar(UISearchBar, shouldChangeTextIn: NSRange, replacementText: String) -> Bool\nAsk the delegate if text in a specified range should be replaced with given text.\nfunc searchBarShouldBeginEditing(UISearchBar) -> Bool\nAsks the delegate if editing should begin in the specified search bar.\nfunc searchBarShouldEndEditing(UISearchBar) -> Bool\nAsks the delegate if editing should stop in the specified search bar.\nfunc searchBarTextDidEndEditing(UISearchBar)\nTells the delegate that the user finished editing the search text."
  },
  {
    "title": "searchBarSearchButtonClicked(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624294-searchbarsearchbuttonclicked",
    "html": "Parameters\nsearchBar\n\nThe search bar that was tapped.\n\nDiscussion\n\nYou should implement this method to begin the search. Use the text property of the search bar to get the text. You can also send becomeFirstResponder() to the search bar to begin editing programmatically.\n\nSee Also\nResponding to clicks in search controls\nfunc searchBarBookmarkButtonClicked(UISearchBar)\nTells the delegate that the bookmark button was tapped.\nfunc searchBarCancelButtonClicked(UISearchBar)\nTells the delegate that the cancel button was tapped.\nfunc searchBarResultsListButtonClicked(UISearchBar)\nTells the delegate that the search results list button was tapped."
  },
  {
    "title": "searchBarResultsListButtonClicked(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624305-searchbarresultslistbuttonclicke",
    "html": "Parameters\nsearchBar\n\nThe search bar that was tapped.\n\nSee Also\nResponding to clicks in search controls\nfunc searchBarBookmarkButtonClicked(UISearchBar)\nTells the delegate that the bookmark button was tapped.\nfunc searchBarCancelButtonClicked(UISearchBar)\nTells the delegate that the cancel button was tapped.\nfunc searchBarSearchButtonClicked(UISearchBar)\nTells the delegate that the search button was tapped."
  },
  {
    "title": "setPositionAdjustment(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624278-setpositionadjustment",
    "html": "Parameters\nadjustment\n\nThe offset to use for the icon identified by icon.\n\nicon\n\nAn icon identifier constant.\n\nDiscussion\n\nUse this method to adjust the position of an icon within the search text field.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "setBackgroundImage(_:forToolbarPosition:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitoolbar/1618003-setbackgroundimage",
    "html": "Parameters\nbackgroundImage\n\nThe image to use for the toolbar background in the position specified by topOrBottom and with the metrics specified by barMetrics.\n\ntopOrBottom\n\nA toolbar position constant.\n\nbarMetrics\n\nA bar metrics constant.\n\nSee Also\nChanging the background\nvar barTintColor: UIColor?\nThe tint color to apply to the toolbar background.\nfunc backgroundImage(forToolbarPosition: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image to use for the background in a given position and with given metrics."
  },
  {
    "title": "UIPageControl.Direction.bottomToTop | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipagecontrol/direction/bottomtotop",
    "html": "See Also\nDirections\ncase natural\nA direction that infers the lay out from the system’s locale.\ncase leftToRight\nA direction that lays out the page indicators from left to right.\ncase rightToLeft\nA direction that lays out the page indicators from right to left.\ncase topToBottom\nA direction that lays out the page indicators from top to bottom."
  },
  {
    "title": "rect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224556-rect",
    "html": "See Also\nCreating a hover shape\nstatic var capsule: UIShape\nCreates a capsule shape, a rounded rectangle with a corner radius equal to half the length of the rectangle’s smallest edge.\nstatic var circle: UIShape\nCreates a circular shape, with a radius equal to half the length of the frame rectangle’s smallest edge.\nstatic func rect(cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a rectangular shape with rounded corners, using the provided corner radius, corner curve, and rectangle corners.\nstatic func fixedRect(CGRect, cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a fixed rectangular shape that uses the provided rectangle as its shape, regardless of the frame that contains it.\nenum UICornerCurve\nThe corner curve to apply to a view."
  },
  {
    "title": "capsule | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224549-capsule",
    "html": "See Also\nCreating a hover shape\nstatic var rect: UIShape\nCreates a rectangular shape.\nstatic var circle: UIShape\nCreates a circular shape, with a radius equal to half the length of the frame rectangle’s smallest edge.\nstatic func rect(cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a rectangular shape with rounded corners, using the provided corner radius, corner curve, and rectangle corners.\nstatic func fixedRect(CGRect, cornerRadius: CGFloat, cornerCurve: UICornerCurve, maskedCorners: UIRectCorner) -> UIShape\nCreates a fixed rectangular shape that uses the provided rectangle as its shape, regardless of the frame that contains it.\nenum UICornerCurve\nThe corner curve to apply to a view."
  },
  {
    "title": "UIShape.Resolved | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolved",
    "html": "Topics\nCreating a resolved shape by applying insets\nfunc inset(by: UIEdgeInsets) -> UIShape.Resolved\nCreates a new modified shape by applying the provided insets to this shape.\nfunc inset(by: CGFloat) -> UIShape.Resolved\nCreates a new modified shape by applying the provided inset to this shape.\nAccessing the resolved shape’s attributes\nlet shape: UIShape\nThe abstract shape that produces this resolved shape.\nvar boundingRect: CGRect\nThe bounding rectangle that frames the shape.\nvar path: UIBezierPath\nThe Bézier path representing this shape.\nComparing resolved shapes\nstatic func == (UIShape.Resolved, UIShape.Resolved) -> Bool\nAn operator for checking whether two resolved shapes are equal.\nstatic func != (UIShape.Resolved, UIShape.Resolved) -> Bool\nAn operator for checking whether two resolved shapes are unequal.\nDescribing a resolved shape\nvar description: String\nA textual representation of this instance.\nvar debugDescription: String\nA textual representation of this instance, suitable for debugging.\nRelationships\nConforms To\nCustomDebugStringConvertible\nCustomStringConvertible\nSee Also\nCreating a dynamic hover shape\ninit(some UIShapeProvider)\nCreates a dynamic shape that resolves using the provided resolver closure and resolution context.\nprotocol UIShapeProvider\nAn interface for a type that provides a custom shape by resolving it dynamically based on a context.\nfunc resolve(in: UIShape.ResolutionContext) -> UIShape.Resolved\nResolves the shape in the provided context.\nstruct UIShape.ResolutionContext\nThe context for resolving a dynamic shape."
  },
  {
    "title": "inset(by:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224554-inset",
    "html": "Discussion\n\nYou can use negative values to add inner padding to a shape.\n\nIf it isn’t possible to inset this shape (for example, if it’s a custom path), this method doesn’t have any effect. For some shapes like rounded rectangles, this method can also modify the corner radii of the shape to ensure the resulting corners are concentric.\n\nSee Also\nCreating a shape by applying insets\nfunc inset(by: CGFloat) -> UIShape\nCreates a new modified shape by applying the provided inset to this shape."
  },
  {
    "title": "inset(by:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224553-inset",
    "html": "Discussion\n\nYou can use negative values to add inner padding to a shape.\n\nIf it isn’t possible to inset this shape (for example, if it’s a custom path), this method doesn’t have any effect. For some shapes like rounded rectangles, this method can also modify the corner radii of the shape to ensure the resulting corners are concentric.\n\nSee Also\nCreating a shape by applying insets\nfunc inset(by: UIEdgeInsets) -> UIShape\nCreates a new modified shape by applying the provided insets to this shape."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4284528-init",
    "html": "See Also\nCreating a dynamic hover shape\nprotocol UIShapeProvider\nAn interface for a type that provides a custom shape by resolving it dynamically based on a context.\nfunc resolve(in: UIShape.ResolutionContext) -> UIShape.Resolved\nResolves the shape in the provided context.\nstruct UIShape.ResolutionContext\nThe context for resolving a dynamic shape.\nstruct UIShape.Resolved\nA shape that has completely resolved based on a context."
  },
  {
    "title": "resolve(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224557-resolve",
    "html": "Relationships\nFrom Protocol\nUIShapeProvider\nSee Also\nCreating a dynamic hover shape\ninit(some UIShapeProvider)\nCreates a dynamic shape that resolves using the provided resolver closure and resolution context.\nprotocol UIShapeProvider\nAn interface for a type that provides a custom shape by resolving it dynamically based on a context.\nstruct UIShape.ResolutionContext\nThe context for resolving a dynamic shape.\nstruct UIShape.Resolved\nA shape that has completely resolved based on a context."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224542",
    "html": "See Also\nComparing hover shapes\nstatic func != (UIShape, UIShape) -> Bool\nAn operator for checking whether two shapes are unequal."
  },
  {
    "title": "UIShape.ResolutionContext | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/resolutioncontext",
    "html": "Topics\nDetermining the content shape\nvar contentShape: UIShape.Resolved\nThe resolved shape of the content to which this shape can apply.\nSee Also\nCreating a dynamic hover shape\ninit(some UIShapeProvider)\nCreates a dynamic shape that resolves using the provided resolver closure and resolution context.\nprotocol UIShapeProvider\nAn interface for a type that provides a custom shape by resolving it dynamically based on a context.\nfunc resolve(in: UIShape.ResolutionContext) -> UIShape.Resolved\nResolves the shape in the provided context.\nstruct UIShape.Resolved\nA shape that has completely resolved based on a context."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uishape/4224541",
    "html": "See Also\nComparing hover shapes\nstatic func == (UIShape, UIShape) -> Bool\nAn operator for checking whether two shapes are equal."
  },
  {
    "title": "deletePlaceholder() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897339-deleteplaceholder",
    "html": "Required\n\nReturn Value\n\ntrue if the placeholder cell was removed, or false if the cell was no longer in the collection view.\n\nDiscussion\n\nUse this method to remove a placeholder cell without swapping in a new cell. You might call this method if the user chooses to undo the insertion of a cell or if the contents of the collection view changed."
  },
  {
    "title": "backgroundImage(forToolbarPosition:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitoolbar/1617998-backgroundimage",
    "html": "Parameters\ntopOrBottom\n\nThe location the bar is being drawn in.\n\nbarMetrics\n\nThe metrics being used to draw the bar.\n\nReturn Value\n\nThe image to use for the toolbar background in the position specified by topOrBottom and with the metrics specified by barMetrics.\n\nDiscussion\n\nThe default value is nil. When non-nil the image will be used instead of the system image for toolbars in the specified position.\n\nSee Also\nChanging the background\nvar barTintColor: UIColor?\nThe tint color to apply to the toolbar background.\nfunc setBackgroundImage(UIImage?, forToolbarPosition: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics."
  },
  {
    "title": "insertSections(_:beforeSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375773-insertsections",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the sections to add to the snapshot.\n\ntoIdentifier\n\nThe identifier of the section before which to insert the new sections.\n\nSee Also\nInserting items and sections\nfunc insertItems([ItemIdentifierType], afterItem: ItemIdentifierType)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertItems([ItemIdentifierType], beforeItem: ItemIdentifierType)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections([SectionIdentifierType], afterSection: SectionIdentifierType)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot."
  },
  {
    "title": "numberOfItems(inSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375781-numberofitems",
    "html": "Parameters\nidentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nThe number of items in the specified section. This method returns 0 if the section is empty.\n\nDiscussion\n\nIf you call this method with the identifier of a section that doesn’t exist in the snapshot, the app throws an error.\n\nSee Also\nGetting item and section metrics\nvar numberOfItems: Int\nThe number of items in the snapshot.\nvar numberOfSections: Int\nThe number of sections in the snapshot."
  },
  {
    "title": "appendSections(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375763-appendsections",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers specifying the sections to add to the snapshot.\n\nSee Also\nCreating a snapshot\ninit()\nCreates an empty snapshot.\nfunc appendItems([ItemIdentifierType], toSection: SectionIdentifierType?)\nAdds the items with the specified identifiers to the specified section of the snapshot."
  },
  {
    "title": "barStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitoolbar/1617994-barstyle",
    "html": "Discussion\n\nSee UIBarStyle for possible values. The default value is UIBarStyle.default.\n\nSee Also\nSetting the bar’s style\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "numberOfItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375780-numberofitems",
    "html": "See Also\nGetting item and section metrics\nvar numberOfSections: Int\nThe number of sections in the snapshot.\nfunc numberOfItems(inSection: SectionIdentifierType) -> Int\nReturns the number of items in the specified section of the snapshot."
  },
  {
    "title": "init(operation:intent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropproposal/2897391-init",
    "html": "Parameters\noperation\n\nThe type of operation that you want to perform. Use this parameter to specify whether you want to move the original item to this new location, move a copy of the content, or prevent the content from being inserted at this location. For a list of possible values, see UIDropOperation.\n\nintent\n\nThe option for how to incorporate the content into the collection view. You can insert the content between items or add it to an existing item.\n\nReturn Value\n\nAn initialized drop proposal."
  },
  {
    "title": "dragItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropitem/2897456-dragitem",
    "html": "Required\n\nDiscussion\n\nUse this property to get the data associated with the item being dragged."
  },
  {
    "title": "sectionSnapshotHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600966-sectionsnapshothandlers",
    "html": "Discussion\n\nProvide section snapshot handlers to support the expanding or collapsing of items in your collection view.\n\nUse the snapshotForExpandingParent handler to customize the snapshot that returns when a particular parent item is expanded.\n\n// Allow every item to be collapsed\ndataSource.sectionSnapshotHandlers.shouldCollapseItem = { item in return true }\n\n\ndataSource.sectionSnapshotHandlers.snapshotForExpandingParent = {\n    parent, currentChildSnapshot -> NSDiffableDataSourceSectionSnapshot<String> in\n    \n    // Return child snapshot for the parent, or just currentChildSnapshot\n}\n\n\nSee Also\nSupporting expanding and collapsing\nstruct UICollectionViewDiffableDataSource.SectionSnapshotHandlers\nHandlers for expanding and collapsing items."
  },
  {
    "title": "NSDiffableDataSourceSectionTransaction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectiontransaction",
    "html": "Topics\nAccessing a transaction's information\nvar sectionIdentifier: SectionIdentifierType\nThe identifier of the section for the transaction.\nvar initialSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot before the transaction occured.\nvar finalSnapshot: NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nThe section snapshot after the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final section snapshots.\nRelationships\nConforms To\nSendable\nSee Also\nSupporting reordering\nvar reorderingHandlers: UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.ReorderingHandlers\nThe diffable data source’s handlers for reordering items.\nstruct UICollectionViewDiffableDataSource.ReorderingHandlers\nHandlers for reordering items.\nstruct NSDiffableDataSourceTransaction\nA transaction that describes the changes after reordering the items in the view."
  },
  {
    "title": "Protocol implementations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/protocol_implementations",
    "html": "Overview\n\nThe diffable data source type conforms to several protocols, including UICollectionViewDataSource and Hashable. This page lists the diffable data source type’s implementations of those protocol requirements.\n\nTopics\nGetting item and section metrics\nfunc collectionView(UICollectionView, numberOfItemsInSection: Int) -> Int\nReturns the number of items in the specified section.\nfunc numberOfSections(in: UICollectionView) -> Int\nReturns the number of sections in the collection view.\nGetting views for items\nfunc collectionView(UICollectionView, cellForItemAt: IndexPath) -> UICollectionViewCell\nReturns the cell that corresponds to the item at the specified index path in the collection view.\nfunc collectionView(UICollectionView, viewForSupplementaryElementOfKind: String, at: IndexPath) -> UICollectionReusableView\nReturns a supplementary view for the specified element kind to display in the collection view.\nReordering items\nfunc collectionView(UICollectionView, canMoveItemAt: IndexPath) -> Bool\nReturns a Boolean value indicating whether the collection view can move the specified item to another location in the view.\nfunc collectionView(UICollectionView, moveItemAt: IndexPath, to: IndexPath)\nMoves the specified item to its new location in the collection view.\nConfiguring an index\nfunc indexTitles(for: UICollectionView) -> [String]?\nReturns the titles for the index items to display for the collection view.\nfunc collectionView(UICollectionView, indexPathForIndexTitle: String, at: Int) -> IndexPath\nReturns the index path of the item that corresponds to the specified index title in the collection view.\nDebugging a diffable data source\nfunc description() -> String\nReturns a string with a description of the diffable data source."
  },
  {
    "title": "UICollectionViewDiffableDataSource.ReorderingHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/reorderinghandlers",
    "html": "Topics\nReordering items\nvar canReorderItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether you can reorder a particular item.\nvar willReorder: ((NSDiffableDataSourceTransaction<SectionIdentifierType, ItemIdentifierType>) -> Void)?\nThe handler that prepares the diffable data source for reordering its items.\nvar didReorder: ((NSDiffableDataSourceTransaction<SectionIdentifierType, ItemIdentifierType>) -> Void)?\nThe handler that processes a reordering transaction.\nCreating reordering handlers\ninit()\nCreates a reordering handlers structure.\nSee Also\nSupporting reordering\nvar reorderingHandlers: UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.ReorderingHandlers\nThe diffable data source’s handlers for reordering items.\nstruct NSDiffableDataSourceTransaction\nA transaction that describes the changes after reordering the items in the view.\nstruct NSDiffableDataSourceSectionTransaction\nA transaction that describes the changes after reordering the items in a section."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/state/1618220-highlighted",
    "html": "Discussion\n\nA control becomes highlighted when a touch event enters the control’s bounds, and it loses that highlight when there’s a touch-up event or when the touch event exits the control’s bounds. You can retrieve and set this value through the isHighlighted property."
  },
  {
    "title": "NSDiffableDataSourceTransaction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcetransaction",
    "html": "Topics\nAccessing a transaction's information\nvar sectionTransactions: [NSDiffableDataSourceSectionTransaction<SectionIdentifierType, ItemIdentifierType>]\nAn array of section transactions for the transaction.\nvar initialSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot before the transaction occured.\nvar finalSnapshot: NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nThe snapshot after the transaction occured.\nvar difference: CollectionDifference<ItemIdentifierType>\nA collection of insertions and removals that describe the difference between initial and final snapshots.\nRelationships\nConforms To\nSendable\nSee Also\nSupporting reordering\nvar reorderingHandlers: UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.ReorderingHandlers\nThe diffable data source’s handlers for reordering items.\nstruct UICollectionViewDiffableDataSource.ReorderingHandlers\nHandlers for reordering items.\nstruct NSDiffableDataSourceSectionTransaction\nA transaction that describes the changes after reordering the items in a section."
  },
  {
    "title": "focused | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/state/1618204-focused",
    "html": "Discussion\n\nIn focus-based navigation systems, a control enters this state when it receives the focus. A focused control changes its appearance to indicate that it has focus, and this appearance differs from the appearance of the control when it’s highlighted or selected. Further interactions with the control can result in it also becoming highlighted or selected."
  },
  {
    "title": "UICollectionViewDiffableDataSource.SectionSnapshotHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/sectionsnapshothandlers",
    "html": "Topics\nExpanding and collapsing items\nvar shouldCollapseItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is collapsable.\nvar shouldExpandItem: ((ItemIdentifierType) -> Bool)?\nThe handler that determines whether a particular item is expandable.\nvar willCollapseItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for collapsing an item.\nvar willExpandItem: ((ItemIdentifierType) -> Void)?\nThe handler that prepares the diffable data source for expanding an item.\nvar snapshotForExpandingParent: ((ItemIdentifierType, NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)?\nThe handler that provides the section snapshot for expanding the parent item.\nCreating section snapshot handlers\ninit()\nCreates a section snapshot handlers structure.\nSee Also\nSupporting expanding and collapsing\nvar sectionSnapshotHandlers: UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.SectionSnapshotHandlers<ItemIdentifierType>\nThe diffable data source’s handlers for expanding and collapsing items."
  },
  {
    "title": "disabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/state/1618247-disabled",
    "html": "Discussion\n\nUser interactions with disabled control have no effect and the control draws itself with a dimmed appearance to reflect that it’s disabled. You can retrieve and set this value through the isEnabled property."
  },
  {
    "title": "applySnapshotUsingReloadData(_:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3804470-applysnapshotusingreloaddata",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\ncompletion\n\nA closure to execute when the reload completes. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the collection view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the collection view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes."
  },
  {
    "title": "snapshot(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600967-snapshot",
    "html": "See Also\nUpdating section data\nfunc apply(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, to: SectionIdentifierType, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes and executing a completion handler.\nfunc apply(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, to: SectionIdentifierType, animatingDifferences: Bool)\nUpdates the section UI to reflect the state of the data in the specified snapshot, optionally animating the UI changes."
  },
  {
    "title": "index(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3804471-index",
    "html": "See Also\nIdentifying sections\nfunc sectionIdentifier(for: Int) -> SectionIdentifierType?\nReturns an identifier for the section at the index you specify in the collection view."
  },
  {
    "title": "sectionIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3804472-sectionidentifier",
    "html": "See Also\nIdentifying sections\nfunc index(for: SectionIdentifierType) -> Int?\nReturns an index for the section with the identifier you specify in the collection view."
  },
  {
    "title": "UICollectionViewDiffableDataSource.SupplementaryViewProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/supplementaryviewprovider",
    "html": "Parameters\ncollectionView\n\nThe collection view to configure this supplementary view for.\n\nkind\n\nThe kind of supplementary view to provide. The layout object that supports the supplementary view defines the value of this string.\n\nindexPath\n\nThe index path that specifies the location of the supplementary view in the collection view.\n\nReturn Value\n\nA non-nil configured supplementary view object. The supplementary view provider must return a valid view object to the collection view.\n\nSee Also\nCreating supplementary views\nvar supplementaryViewProvider: UICollectionViewDiffableDataSource<SectionIdentifierType, ItemIdentifierType>.SupplementaryViewProvider?\nThe closure that configures and returns the collection view’s supplementary views, such as headers and footers, from the diffable data source."
  },
  {
    "title": "UICollectionLayoutListConfiguration.Appearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance",
    "html": "Topics\nList appearances\ncase plain\nThe plain list appearance.\ncase grouped\nThe grouped list appearance.\ncase insetGrouped\nThe inset grouped list appearance.\ncase sidebar\nThe sidebar list appearance.\ncase sidebarPlain\nThe plain sidebar list appearance.\nComparing list appearances\nstatic func == (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are equal.\nstatic func != (UICollectionLayoutListConfiguration.Appearance, UICollectionLayoutListConfiguration.Appearance) -> Bool\nAn operator for checking whether two list appearances are unequal.\nfunc hash(into: inout Hasher)\nHashes the essential components of the list appearance type by feeding them into the hasher.\nvar hashValue: Int\nThe hash value.\nSee Also\nConfiguring appearance\nvar appearance: UICollectionLayoutListConfiguration.Appearance\nThe overall appearance of the list.\nvar backgroundColor: UIColor?\nThe background color of the list."
  },
  {
    "title": "UICollectionLayoutListConfiguration.Appearance.sidebar | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutlistconfiguration/appearance/sidebar",
    "html": "See Also\nList appearances\ncase plain\nThe plain list appearance.\ncase grouped\nThe grouped list appearance.\ncase insetGrouped\nThe inset grouped list appearance.\ncase sidebarPlain\nThe plain sidebar list appearance."
  },
  {
    "title": "itemIdentifier(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255139-itemidentifier",
    "html": "Parameters\nindexPath\n\nThe index path of the item in the collection view.\n\nReturn Value\n\nThe item's identifier, or nil if no item is found at the provided index path.\n\nDiscussion\n\nThis method is a constant time operation, O(1), which means you can look up an item identifier from its corresponding index path with no significant overhead.\n\nSee Also\nIdentifying items\nfunc indexPath(for: ItemIdentifierType) -> IndexPath?\nReturns an index path for the item with the specified identifier in the collection view."
  },
  {
    "title": "lift | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uihoverlifteffect/4224535-lift",
    "html": "See Also\nCreating a lift hover effect\ninit()\nCreates an effect that can visually lift the view on hover where appropriate."
  },
  {
    "title": "invalidate(view:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/tuple/3853134-invalidate",
    "html": "Parameters\nview\n\nThe view that requires invalidating.\n\nRelationships\nFrom Protocol\nUIViewInvalidating"
  },
  {
    "title": "NSCollectionLayoutGroup | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup",
    "html": "Overview\n\nGroups determine how the items in a collection view lay out in relation to each other. A group might lay out its items in a horizontal row, a vertical column, or a custom arrangement. A group determines the rules for how items are rendered in relation to each other, but in itself doesn’t render any content.\n\nFor example, in the Photos app, a group of items is a row of photos. In the App Store app, a group might be a single column of cells (items) arranged in a vertical column.\n\nEach group specifies its own size in terms of a width dimension and a height dimension. Groups can express their dimensions relative to their container, as an absolute value, or as an estimated value that might change at runtime, like in response to a change in system font size. For more information, see NSCollectionLayoutDimension.\n\nBecause a group is a subclass of NSCollectionLayoutItem, it behaves like an item. You can combine a group with other items and groups into more complex layouts.\n\nAfter you configure a group, you must initialize a section (NSCollectionLayoutSection) of your collection view layout with that group.\n\nTopics\nCreating a horizontal group\nclass func horizontal(layoutSize: NSCollectionLayoutSize, subitems: [NSCollectionLayoutItem]) -> Self\nCreates a group of the specified size, containing an array of items arranged in a horizontal line.\nclass func horizontal(layoutSize: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group that repeats the specified subitem a certain number of times along the horizontal axis.\nCreating a vertical group\nclass func vertical(layoutSize: NSCollectionLayoutSize, subitems: [NSCollectionLayoutItem]) -> Self\nCreates a group of the specified size, containing an array of items arranged in a vertical line.\nclass func vertical(layoutSize: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group that repeats the specified subitem a certain number of times along the vertical axis.\nCreating a custom group\nclass func custom(layoutSize: NSCollectionLayoutSize, itemProvider: NSCollectionLayoutGroupCustomItemProvider) -> Self\nCreates a group of the specified size, with an item provider that creates a custom arrangement for those items.\nGetting the group's items\nvar subitems: [NSCollectionLayoutItem]\nAn array of the items contained in the group.\nvar supplementaryItems: [NSCollectionLayoutSupplementaryItem]\nAn array of the supplementary items that are anchored to the group.\nConfiguring group spacing\nvar interItemSpacing: NSCollectionLayoutSpacing?\nThe amount of space between the items in the group.\nDebugging group layout\nfunc visualDescription() -> String\nReturns a string with an ASCII representation of the group.\nDeprecated\nclass func horizontal(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a horizontal line up to the number specified by count.\nclass func horizontalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the horizontal axis.\nclass func vertical(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a vertical line up to the number specified by count.\nclass func verticalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the vertical axis.\nRelationships\nInherits From\nNSCollectionLayoutItem\nConforms To\nNSCopying\nSee Also\nComponents\nclass NSCollectionLayoutItem\nThe most basic component of a collection view’s layout.\nclass NSCollectionLayoutSection\nA container that combines a set of groups into distinct visual groupings."
  },
  {
    "title": "apply(_:animatingDifferences:completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3375795-apply",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nanimatingDifferences\n\nIf true, the system animates the updates to the collection view. If false, the system doesn’t animate the updates to the collection view.\n\ncompletion\n\nA closure to execute when the animations are complete. This closure has no return value and takes no parameters. The system calls this closure from the main queue.\n\nDiscussion\n\nThe diffable data source computes the difference between the collection view’s current state and the new state in the applied snapshot, which is an O(n) operation, where n is the number of items in the snapshot.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the collection view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "collectionView(_:canHandle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897386-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view that’s attempting to handle the drop.\n\nsession\n\nThe drop session object containing information about the type of data being dragged.\n\nReturn Value\n\ntrue if the collection view can accept the dragged data or false if it cannot.\n\nDiscussion\n\nImplement this method when you want to dynamically determine whether to accept dropped data in your collection view. In your implementation, check the type of the dragged data and return a Boolean value indicating whether you can accept the drop. For example, you might call the hasItemsConforming(toTypeIdentifiers:) method of the session object to determine whether it contains data that your app can accept.\n\nIf you don’t implement this method, the collection view assumes a return value of true. If you return false from this method, the collection view doesn’t call any more methods of your drop delegate for the given session."
  },
  {
    "title": "UIPageControl.Direction.natural | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipagecontrol/direction/natural",
    "html": "Discussion\n\nUse this case to lay out the page control’s indicators in the natural direction of the system’s locale. By default, this means UIPageControl.Direction.leftToRight for left-to-right languages and UIPageControl.Direction.rightToLeft for right-to-left languages.\n\nSee Also\nDirections\ncase leftToRight\nA direction that lays out the page indicators from left to right.\ncase rightToLeft\nA direction that lays out the page indicators from right to left.\ncase topToBottom\nA direction that lays out the page indicators from top to bottom.\ncase bottomToTop\nA direction that lays out the page indicators from bottom to top."
  },
  {
    "title": "UIProgressView.Style.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiprogressview/style/default",
    "html": "Discussion\n\nThis style is the default."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/constraints/3853118-init",
    "html": "See Also\nCreating the invalidation structure\nstatic var constraints: UIView.Invalidations.Constraints\nA change that invalidates a view’s constraints."
  },
  {
    "title": "constraints | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiview/invalidations/constraints/3853117-constraints",
    "html": "Discussion\n\nUse this invalidation type to call setNeedsUpdateConstraints() when a change in property value should cause the containing view to update constraints.\n\nSee Also\nCreating the invalidation structure\ninit()\nCreates a constraints invalidation structure."
  },
  {
    "title": "searchBarCancelButtonClicked(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624314-searchbarcancelbuttonclicked",
    "html": "Parameters\nsearchBar\n\nThe search bar that was tapped.\n\nDiscussion\n\nTypically, you implement this method to dismiss the search bar.\n\nSee Also\nResponding to clicks in search controls\nfunc searchBarBookmarkButtonClicked(UISearchBar)\nTells the delegate that the bookmark button was tapped.\nfunc searchBarSearchButtonClicked(UISearchBar)\nTells the delegate that the search button was tapped.\nfunc searchBarResultsListButtonClicked(UISearchBar)\nTells the delegate that the search results list button was tapped.\nRelated Documentation\nvar showsCancelButton: Bool\nA Boolean value indicating whether the cancel button is displayed."
  },
  {
    "title": "collapse(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600717-collapse",
    "html": "See Also\nExpanding and collapsing items\nfunc isExpanded(ItemIdentifierType) -> Bool\nIndicates whether the item with the specified identifier is in an expanded state.\nfunc expand([ItemIdentifierType])\nExpands the specified items in the section snapshot."
  },
  {
    "title": "searchBar(_:selectedScopeButtonIndexDidChange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbardelegate/1624280-searchbar",
    "html": "Parameters\nsearchBar\n\nThe search bar that was tapped.\n\nselectedScope\n\nThe index of the selected scope button (see selectedScopeButtonIndex)."
  },
  {
    "title": "setShadowImage(_:forToolbarPosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitoolbar/1617991-setshadowimage",
    "html": "Parameters\nshadowImage\n\nThe image to use for the toolbar shadow in the position specified by topOrBottom.\n\ntopOrBottom\n\nA toolbar position constant. You can use this parameter to indicate whether the shadowImage is intended for a toolbar at the top or bottom of the view.\n\nDiscussion\n\nWhen the shadowImage parameter is nil, the default shadow will be used. When non-nil, the shadowImage property is a custom shadow image to show instead of the default. Using the topOrBottom parameter, you can set a different shadow for toolbars at the top and bottom of the view. For a custom shadow image to be shown, a custom background image must also be set with the setBackgroundImage(_:forToolbarPosition:barMetrics:) method. If the default background image is used, then the default shadow image will be used regardless of the value of the shadowImage parameter.\n\nSee Also\nAdding a shadow\nfunc shadowImage(forToolbarPosition: UIBarPosition) -> UIImage?\nReturns the image to use for the toolbar shadow in a given position."
  },
  {
    "title": "insert(_:before:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600728-insert",
    "html": "See Also\nInserting items\nfunc insert([ItemIdentifierType], after: ItemIdentifierType)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, after: (ItemIdentifierType))\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, before: (ItemIdentifierType))\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "shadowImage(forToolbarPosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitoolbar/1618000-shadowimage",
    "html": "Parameters\ntopOrBottom\n\nA toolbar position constant. You can use this parameter to indicate whether the shadow image returned is intended for use in a toolbar at the top or bottom of the view.\n\nReturn Value\n\nThe image to use for the toolbar shadow in the position specified by topOrBottom.\n\nDiscussion\n\nThe default value is nil, which corresponds to the default shadow image being used. When non-nil, the return value represents the shadow that is used on the toolbar in the position specified by the topOrBottom parameter.\n\nSee Also\nAdding a shadow\nfunc setShadowImage(UIImage?, forToolbarPosition: UIBarPosition)\nSets the image to use for the toolbar shadow in a given position."
  },
  {
    "title": "decorationItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199091-decorationitems",
    "html": "See Also\nConfiguring additional views\nvar boundarySupplementaryItems: [NSCollectionLayoutBoundarySupplementaryItem]\nAn array of the supplementary items that are associated with the boundary edges of the section, such as headers and footers."
  },
  {
    "title": "register(_:forDecorationViewOfKind:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayout/1617739-register",
    "html": "Parameters\nviewClass\n\nThe class to use for the supplementary view.\n\ndecorationViewKind\n\nThe element kind of the decoration view. You can use this string to distinguish between decoration views with different purposes in the layout. This parameter must not be nil and must not be an empty string.\n\nDiscussion\n\nThis method gives the layout object a chance to register a decoration view for use in the collection view. Decoration views provide visual adornments to a section or to the entire collection view but are not otherwise tied to the data provided by the collection view’s data source.\n\nYou do not need to create decoration views explicitly. After registering one, it is up to the layout object to decide when a decoration view is needed and return the corresponding layout attributes from its layoutAttributesForElements(in:) method. For layout attributes that specify a decoration view, the collection view creates (or reuses) a view and displays it automatically based on the registered information.\n\nIf you previously registered a class or nib file with the same kind string, the class you specify in the viewClass parameter replaces the old entry. You may specify nil for viewClass if you want to unregister the decoration view.\n\nSee Also\nRegistering decoration views\nfunc register(UINib?, forDecorationViewOfKind: String)\nRegisters a nib file for use in creating decoration views for a collection view."
  },
  {
    "title": "items | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600731-items",
    "html": "See Also\nAccessing items\nvar rootItems: [ItemIdentifierType]\nThe identifiers of the items at the top level of the section snapshot’s hierarchy.\nvar visibleItems: [ItemIdentifierType]\nThe identifiers of the currently visible items in the section snapshot."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600724-init",
    "html": "See Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\nfunc snapshot(of: ItemIdentifierType, includingParent: Bool) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nCreates a section snapshot that contains the child items of the specified parent item, optionally including the parent item.\nfunc append([ItemIdentifierType], to: ItemIdentifierType?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "snapshot(of:includingParent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600736-snapshot",
    "html": "See Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\ninit(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)\nCreates a copy of the provided section snapshot.\nfunc append([ItemIdentifierType], to: ItemIdentifierType?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "presentationIndexPath(forDataSourceIndexPath:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897405-presentationindexpath",
    "html": "Required\n\nParameters\ndataSourceIndexPath\n\nThe index path of an item in the data source object.\n\nReturn Value\n\nThe index path of the same item in the presentation layer of your object, or nil if the item is not in the presentation layer.\n\nSee Also\nManaging item positions\nfunc dataSourceIndexPath(forPresentationIndexPath: IndexPath?) -> IndexPath?\nTranslates an index in your presented layout to the equivalent index in your data source object.\n\nRequired"
  },
  {
    "title": "dataSourceIndexPath(forPresentationIndexPath:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897315-datasourceindexpath",
    "html": "Required\n\nParameters\npresentationIndexPath\n\nThe index path of an item in your presentation layer.\n\nReturn Value\n\nThe index path of the same item in the data source object, or nil if the item is no longer in the data source.\n\nSee Also\nManaging item positions\nfunc presentationIndexPath(forDataSourceIndexPath: IndexPath?) -> IndexPath?\nTranslates an index in your data source object to the equivalent index in your presented layout.\n\nRequired"
  },
  {
    "title": "performUsingPresentationValues(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidatasourcetranslating/2897368-performusingpresentationvalues",
    "html": "Required\n\nParameters\nactionsToTranslate\n\nA block containing the code you want to execute. Any index paths you specify in this block must be relative to the presentation layer of the object (instead of relative to its data source object). This block takes no parameters and has no return value.\n\nDiscussion\n\nUse this method to perform actions on the current object, when the index paths for those actions are relative to the object’s presentation layer. For example, you might call this method to modify a table view or collection view that has uncommitted updates."
  },
  {
    "title": "dragItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897430-dragitem",
    "html": "Required"
  },
  {
    "title": "UIControl.ContentHorizontalAlignment.trailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/contenthorizontalalignment/trailing",
    "html": "Discussion\n\nFor left-to-right languages, the trailing edge is the right edge. For right-to-left languages, the trailing edge is the left edge."
  },
  {
    "title": "UIControl.ContentHorizontalAlignment.leading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/contenthorizontalalignment/leading",
    "html": "Discussion\n\nFor left-to-right languages, the leading edge is the left edge. For right-to-left languages, the leading edge is the right edge."
  },
  {
    "title": "itemIdentifiers(inSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375775-itemidentifiers",
    "html": "Parameters\nidentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nAn array of identifiers of the items contained in the section.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [ItemIdentifierType]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [SectionIdentifierType]\nThe identifiers of all of the sections in the snapshot.\nfunc indexOfItem(ItemIdentifierType) -> Int?\nReturns the index of the item in the snapshot with the specified identifier.\nfunc indexOfSection(SectionIdentifierType) -> Int?\nReturns the index of the section of the snapshot with the specified identifier.\nfunc sectionIdentifier(containingItem: ItemIdentifierType) -> SectionIdentifierType?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "appendItems(_:toSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375762-appenditems",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers specifying the items to add to the snapshot.\n\nsectionIdentifier\n\nThe section to which to add the items. If no value is provided, the items are appended to the last section of the snapshot.\n\nSee Also\nCreating a snapshot\ninit()\nCreates an empty snapshot.\nfunc appendSections([SectionIdentifierType])\nAdds the sections with the specified identifiers to the snapshot."
  },
  {
    "title": "sectionIdentifier(containingItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375785-sectionidentifier",
    "html": "Parameters\nidentifier\n\nThe identifier of the item contained in the section of the snapshot.\n\nReturn Value\n\nThe identifier of the section containing the specified item, or nil if the specified item doesn't exist in any section of the snapshot.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [ItemIdentifierType]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [SectionIdentifierType]\nThe identifiers of all of the sections in the snapshot.\nfunc indexOfItem(ItemIdentifierType) -> Int?\nReturns the index of the item in the snapshot with the specified identifier.\nfunc indexOfSection(SectionIdentifierType) -> Int?\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiers(inSection: SectionIdentifierType) -> [ItemIdentifierType]\nReturns the identifiers of all of the items in the specified section of the snapshot."
  },
  {
    "title": "numberOfSections | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375782-numberofsections",
    "html": "See Also\nGetting item and section metrics\nvar numberOfItems: Int\nThe number of items in the snapshot.\nfunc numberOfItems(inSection: SectionIdentifierType) -> Int\nReturns the number of items in the specified section of the snapshot."
  },
  {
    "title": "insertItems(_:afterItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375770-insertitems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to add to the snapshot.\n\nafterIdentifier\n\nThe identifier of the item after which to insert the new items.\n\nSee Also\nInserting items and sections\nfunc insertItems([ItemIdentifierType], beforeItem: ItemIdentifierType)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections([SectionIdentifierType], afterSection: SectionIdentifierType)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\nfunc insertSections([SectionIdentifierType], beforeSection: SectionIdentifierType)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "insertItems(_:beforeItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375771-insertitems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to add to the snapshot.\n\nbeforeIdentifier\n\nThe identifier of the item before which to insert the new items.\n\nSee Also\nInserting items and sections\nfunc insertItems([ItemIdentifierType], afterItem: ItemIdentifierType)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertSections([SectionIdentifierType], afterSection: SectionIdentifierType)\nInserts the provided sections immediately after the section with the specified identifier in the snapshot.\nfunc insertSections([SectionIdentifierType], beforeSection: SectionIdentifierType)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "insertSections(_:afterSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375772-insertsections",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the sections to add to the snapshot.\n\ntoIdentifier\n\nThe identifier of the section after which to insert the new sections.\n\nSee Also\nInserting items and sections\nfunc insertItems([ItemIdentifierType], afterItem: ItemIdentifierType)\nInserts the provided items immediately after the item with the specified identifier in the snapshot.\nfunc insertItems([ItemIdentifierType], beforeItem: ItemIdentifierType)\nInserts the provided items immediately before the item with the specified identifier in the snapshot.\nfunc insertSections([SectionIdentifierType], beforeSection: SectionIdentifierType)\nInserts the provided sections immediately before the section with the specified identifier in the snapshot."
  },
  {
    "title": "reorderingHandlers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3600965-reorderinghandlers",
    "html": "Discussion\n\nProvide reordering handlers to support the reordering of items in your collection view.\n\nThe system calls the didReorder handler after a reordering transaction (NSDiffableDataSourceTransaction) occurs, so you can update your data backing store with information about the changes.\n\n// Allow every item to be reordered\ndataSource.reorderingHandlers.canReorderItem = { item in return true }\n\n\n// Option 1: Update the backing store from a CollectionDifference\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    if let updatedBackingStore = self.backingStore.applying(transaction.difference) {\n        self.backingStore = updatedBackingStore\n    }\n}\n\n\n// Option 2: Update the backing store from the final item identifiers\ndataSource.reorderingHandlers.didReorder = { [weak self] transaction in\n    guard let self = self else { return }\n    \n    self.backingStore = transaction.finalSnapshot.itemIdentifiers\n}\n\n\nSee Also\nSupporting reordering\nstruct UICollectionViewDiffableDataSource.ReorderingHandlers\nHandlers for reordering items.\nstruct NSDiffableDataSourceTransaction\nA transaction that describes the changes after reordering the items in the view.\nstruct NSDiffableDataSourceSectionTransaction\nA transaction that describes the changes after reordering the items in a section."
  },
  {
    "title": "orthogonalScrollingBehavior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199094-orthogonalscrollingbehavior",
    "html": "Discussion\n\nThe default value of this property is UICollectionLayoutSectionOrthogonalScrollingBehavior.none, which means the section lays out its content along the main axis of its layout, defined by the layout configuration’s scrollDirection property. Set a different value for this property to get the section to lay out its content orthogonally to the main layout axis.\n\nSee Also\nSpecifying scrolling behavior\nvar orthogonalScrollingProperties: UICollectionLayoutSectionOrthogonalScrollingProperties\nThe section’s orthogonal scrolling properties.\nclass UICollectionLayoutSectionOrthogonalScrollingProperties\nAn object that specifies properties for a layout section that scrolls orthogonally in relation to the main layout axis."
  },
  {
    "title": "collectionView(_:prefetchItemsAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdatasourceprefetching/1771767-collectionview",
    "html": "Required\n\nParameters\ncollectionView\n\nThe collection view issuing the prefetch request.\n\nindexPaths\n\nThe index paths that specify the locations of the items for which the data is to be prefetched.\n\nDiscussion\n\nThe collection view calls this method as the user scrolls, providing the index paths for cells it’s likely to display in the near future. Your implementation of this method is responsible for starting any expensive data loading processes. The data loading must be performed asynchronously, and the results made available to the collectionView(_:cellForItemAt:) method on the collection view’s data source.\n\nThe collection view doesn’t call this method for cells it requires immediately, so your code must not rely on this method to load data. The order of the index paths provided represents the priority.\n\nFor further information about creating an asynchronous data loading task, see Concurrency Programming Guide.\n\nSee Also\nManaging data prefetching\nPrefetching collection view data\nLoad data for collection view cells before they display.\nfunc collectionView(UICollectionView, cancelPrefetchingForItemsAt: [IndexPath])\nCancels a previously triggered data prefetch request."
  },
  {
    "title": "proposal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897465-proposal",
    "html": "Required\n\nDiscussion\n\nIf your drag delegate implements the collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:) method, this object contains the information that you provided when making your drop proposal for the given location.\n\nSee Also\nGetting the Session Information\nvar session: UIDropSession\nThe drop session containing information about the transaction.\n\nRequired"
  },
  {
    "title": "NSCollectionLayoutDimension | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdimension",
    "html": "Overview\n\nEach item in a collection view has an explicit width dimension and height dimension, which combine to define the item’s size (NSCollectionLayoutSize).\n\nYou can express an item’s dimensions using an absolute, estimated, or fractional value.\n\nUse an absolute value to specify exact dimensions, like a 44 x 44 point square:\n\nlet absoluteSize = NSCollectionLayoutSize(widthDimension: .absolute(44),\n                                         heightDimension: .absolute(44))\n\n\nUse an estimated value if the size of your content might change at runtime, such as when data is loaded or in response to a change in system font size. You provide an initial estimated size and the system computes the actual value later.\n\nlet estimatedSize = NSCollectionLayoutSize(widthDimension: .estimated(200),\n                                          heightDimension: .estimated(100))\n\n\nUse a fractional value to define a value that’s relative to a dimension of the item’s container. This option simplifies specifying aspect ratios. For example, the following item has a width and a height that are both equal to 20% of its container’s width, creating a square that grows and shrinks as the size of its container changes.\n\nlet fractionalSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(0.2),\n                                           heightDimension: .fractionalWidth(0.2))\n\n\nTopics\nCreating a dimension\nclass func absolute(CGFloat) -> Self\nCreates a dimension with an absolute point value.\nclass func estimated(CGFloat) -> Self\nCreates a dimension with an estimated point value.\nclass func fractionalHeight(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the height of the containing group.\nclass func fractionalWidth(CGFloat) -> Self\nCreates a dimension that is computed as a fraction of the width of the containing group.\nclass func uniformAcrossSiblings(estimate: CGFloat) -> Self\nCreates a dimension in which each item receives as much room as it requires and grows to match the dimension of its largest sibling.\nGetting the dimension value\nvar dimension: CGFloat\nThe floating-point value of the dimension.\nGetting the dimension type\nvar isAbsolute: Bool\nA Boolean value that indicates whether the dimension is expressed as an absolute value.\nvar isEstimated: Bool\nA Boolean value that indicates whether the dimension is expressed as an estimated value.\nvar isFractionalHeight: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s height.\nvar isFractionalWidth: Bool\nA Boolean value that indicates whether the dimension is expressed as a fraction of its container’s width.\nvar isUniformAcrossSiblings: Bool\nA Boolean value that indicates whether the dimension grows to match the dimension of its largest sibling.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSize and spacing\nclass NSCollectionLayoutSize\nThe width and the height of an item in a collection view.\nclass NSCollectionLayoutSpacing\nAn object that defines the space between or around items in a collection view.\nclass NSCollectionLayoutEdgeSpacing\nAn object that defines the space around the edges of items in a collection view.\nprotocol NSCollectionLayoutContainer\nA protocol used to provide information about the size and content insets of a layout’s container."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600723-init",
    "html": "See Also\nCreating a section snapshot\ninit(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)\nCreates a copy of the provided section snapshot.\nfunc snapshot(of: ItemIdentifierType, includingParent: Bool) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nCreates a section snapshot that contains the child items of the specified parent item, optionally including the parent item.\nfunc append([ItemIdentifierType], to: ItemIdentifierType?)\nAdds the specified items as child items of the specified parent item in the section snapshot."
  },
  {
    "title": "NSCollectionLayoutContainer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutcontainer",
    "html": "Overview\n\nIn a section provider, you use the container property of the layout environment (NSCollectionLayoutEnvironment) to get information about the container of the layout, such as its size and content insets. Knowing about the container’s size while rendering the layout’s sections helps you make decisions about how to display the layout.\n\nTopics\nGetting content size\nvar contentSize: CGSize\nThe size of the container before content insets are applied.\n\nRequired\n\nvar effectiveContentSize: CGSize\nThe size of the container after content insets are applied.\n\nRequired\n\nGetting content insets\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space added around the content of the container to adjust its final size.\n\nRequired\n\nvar effectiveContentInsets: NSDirectionalEdgeInsets\nThe amount of space added around the content of the container to adjust its final size after item content insets are applied.\n\nRequired\n\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nSize and spacing\nclass NSCollectionLayoutDimension\nAn individual dimension representing an item’s width or height in a collection view.\nclass NSCollectionLayoutSize\nThe width and the height of an item in a collection view.\nclass NSCollectionLayoutSpacing\nAn object that defines the space between or around items in a collection view.\nclass NSCollectionLayoutEdgeSpacing\nAn object that defines the space around the edges of items in a collection view."
  },
  {
    "title": "NSCollectionLayoutSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsize",
    "html": "Overview\n\nA size is a pair of dimensions (NSCollectionLayoutDimension): a width dimension and a height dimension. Every component of a collection view layout has an explicit size.\n\nTopics\nCreating a layout size\ninit(widthDimension: NSCollectionLayoutDimension, heightDimension: NSCollectionLayoutDimension)\nCreates a size with the specified width and height dimensions.\nGetting the width and height\nvar widthDimension: NSCollectionLayoutDimension\nThe width dimension of an item in a collection view layout.\nvar heightDimension: NSCollectionLayoutDimension\nThe height dimension of an item in a collection view layout.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSize and spacing\nclass NSCollectionLayoutDimension\nAn individual dimension representing an item’s width or height in a collection view.\nclass NSCollectionLayoutSpacing\nAn object that defines the space between or around items in a collection view.\nclass NSCollectionLayoutEdgeSpacing\nAn object that defines the space around the edges of items in a collection view.\nprotocol NSCollectionLayoutContainer\nA protocol used to provide information about the size and content insets of a layout’s container."
  },
  {
    "title": "NSCollectionLayoutSection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection",
    "html": "Overview\n\nA collection view layout has one or more sections. Sections provide a way to separate the layout into distinct pieces.\n\nEach section can have the same layout or a different layout than the other sections in the collection view. A section’s layout is determined by the properties of the group (NSCollectionLayoutGroup) that’s used to create the section.\n\nIn the Photos app, each section in the Years page uses the same layout. In the App Store, the Apps page displays several sections with different content arrangements.\n\nEach section can have its own background, header, and footer to distinguish it from other sections.\n\nTopics\nCreating a section\ninit(group: NSCollectionLayoutGroup)\nCreates a section containing the specified group.\nstatic func list(using: UICollectionLayoutListConfiguration, layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection\nCreates a list section with the specified list configuration and layout environment.\nclass func orthogonalLayoutSectionForMediaItems() -> NSCollectionLayoutSection\nCreates an orthogonally scrolling section with system default spacing.\nSpecifying scrolling behavior\nvar orthogonalScrollingBehavior: UICollectionLayoutSectionOrthogonalScrollingBehavior\nThe section’s scrolling behavior in relation to the main layout axis.\nvar orthogonalScrollingProperties: UICollectionLayoutSectionOrthogonalScrollingProperties\nThe section’s orthogonal scrolling properties.\nclass UICollectionLayoutSectionOrthogonalScrollingProperties\nAn object that specifies properties for a layout section that scrolls orthogonally in relation to the main layout axis.\nConfiguring section spacing\nvar interGroupSpacing: CGFloat\nThe amount of space between the groups in the section.\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space between the content of the section and its boundaries.\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nvar supplementaryContentInsetsReference: UIContentInsetsReference\nThe reference boundary for content insets on boundary supplementary items.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets.\nConfiguring additional views\nvar boundarySupplementaryItems: [NSCollectionLayoutBoundarySupplementaryItem]\nAn array of the supplementary items that are associated with the boundary edges of the section, such as headers and footers.\nvar decorationItems: [NSCollectionLayoutDecorationItem]\nAn array of the decoration items that are anchored to the section, such as background decoration views.\nRendering items\nvar visibleItemsInvalidationHandler: NSCollectionLayoutSectionVisibleItemsInvalidationHandler?\nA closure called before each layout cycle to allow modification of the items in the section immediately before they’re displayed.\nDeprecated\nvar supplementariesFollowContentInsets: Bool\nA Boolean value that indicates whether the section’s supplementary items follow the specified content insets for the section.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nComponents\nclass NSCollectionLayoutItem\nThe most basic component of a collection view’s layout.\nclass NSCollectionLayoutGroup\nA container for a set of items that lays out the items along a path."
  },
  {
    "title": "NSDiffableDataSourceSectionSnapshotReference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshotreference",
    "html": "Overview\n\nImportant\n\nIf you’re working in a Swift codebase, always use NSDiffableDataSourceSectionSnapshot instead.\n\nAvoid using this type in Swift code. Only use this type to bridge from Objective-C code to Swift code by typecasting from a section snapshot reference to a section snapshot:\n\nlet sectionSnapshot = sectionSnapshotRef as NSDiffableDataSourceSectionSnapshot<UUID>\n\n\nTopics\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\nfunc ofParentItem(Any) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, excluding the parent item.\nfunc ofParentItem(Any, includingParentItem: Bool) -> NSDiffableDataSourceSectionSnapshotReference\nCreates a section snapshot containing the child items of the specified parent item, including the parent item.\nfunc appendItems([Any])\nAdds the specified items to the section snapshot.\nfunc appendItems([Any], intoParentItem: Any?)\nAdds the specified items as child items of the specified parent item in the section snapshot.\nAccessing items\nvar items: [Any]\nThe identifiers of all items in the section snapshot.\nvar rootItems: [Any]\nThe identifiers of the items at the top level of the section snapshot’s hierarchy.\nvar visibleItems: [Any]\nThe identifiers of the currently visible items in the section snapshot.\nGetting item metrics\nfunc index(ofItem: Any) -> Int\nFinds the index of the specified item in the section snapshot.\nfunc level(ofItem: Any) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(ofChildItem: Any) -> Any?\nFinds the parent item of the specified item in the section snapshot.\nfunc containsItem(Any) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(Any) -> Bool\nIndicates whether the specified item is currently visible onscreen.\nInserting items\nfunc insertItems([Any], afterItem: Any)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, afterItem: Any) -> Any\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insertItems([Any], beforeItem: Any)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshotReference, beforeItem: Any)\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot.\nRemoving items\nfunc deleteItems([Any])\nDeletes the items with the specified identifiers, and any of their child items, from the section snapshot.\nfunc deleteAllItems()\nDeletes all of the items from the section snapshot.\nReplacing items\nfunc replaceChildren(ofParentItem: Any, with: NSDiffableDataSourceSectionSnapshotReference)\nReplaces all child items of the specified parent item with the provided section snapshot.\nExpanding and collapsing items\nfunc isExpanded(Any) -> Bool\nIndicates whether the item with the specified identifier is in an expanded state.\nfunc expandItems([Any])\nExpands the specified items in the section snapshot.\nfunc collapseItems([Any])\nCollapses the specified items in the section snapshot.\nfunc expandedItems() -> [Any]\nThe identifiers of all expanded items in the section snapshot.\nDebugging items\nfunc visualDescription() -> String\nReturns a string with an ASCII representation of the section snapshot.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying"
  },
  {
    "title": "reloadedSectionIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857614-reloadedsectionidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the sections that the view reloads when you apply the snapshot to your data source.\n\nSee Also\nReloading data\nfunc reconfigureItems([ItemIdentifierType])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems([ItemIdentifierType])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections([SectionIdentifierType])\nReloads the data within the specified sections of the snapshot."
  },
  {
    "title": "reloadSections(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375784-reloadsections",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the sections to reload in the snapshot.\n\nSee Also\nReloading data\nfunc reconfigureItems([ItemIdentifierType])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems([ItemIdentifierType])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reloaded by the changes to the snapshot.\nvar reloadedSectionIdentifiers: [SectionIdentifierType]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "expand(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600721-expand",
    "html": "See Also\nExpanding and collapsing items\nfunc isExpanded(ItemIdentifierType) -> Bool\nIndicates whether the item with the specified identifier is in an expanded state.\nfunc collapse([ItemIdentifierType])\nCollapses the specified items in the section snapshot."
  },
  {
    "title": "isExpanded(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600729-isexpanded",
    "html": "Discussion\n\nThis expansion state persists along with the section snapshot.\n\nSee Also\nExpanding and collapsing items\nfunc expand([ItemIdentifierType])\nExpands the specified items in the section snapshot.\nfunc collapse([ItemIdentifierType])\nCollapses the specified items in the section snapshot."
  },
  {
    "title": "visualDescription() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600738-visualdescription",
    "html": "Discussion\n\nAn asterisk (*) represents a visible item, a plus sign (+) represents an expanded item, and a minus sign (-) represents a collapsed item."
  },
  {
    "title": "delete(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600719-delete",
    "html": "See Also\nRemoving items\nfunc deleteAll()\nDeletes all of the items from the section snapshot."
  },
  {
    "title": "contains(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600718-contains",
    "html": "See Also\nGetting item metrics\nfunc index(of: ItemIdentifierType) -> Int?\nFinds the index of the specified item in the section snapshot.\nfunc level(of: ItemIdentifierType) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(of: ItemIdentifierType) -> ItemIdentifierType?\nFinds the parent item of the specified item in the section snapshot.\nfunc isVisible(ItemIdentifierType) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "insert(_:before:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600727-insert",
    "html": "See Also\nInserting items\nfunc insert([ItemIdentifierType], after: ItemIdentifierType)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, after: (ItemIdentifierType))\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insert([ItemIdentifierType], before: ItemIdentifierType)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "index(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600722-index",
    "html": "See Also\nGetting item metrics\nfunc level(of: ItemIdentifierType) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(of: ItemIdentifierType) -> ItemIdentifierType?\nFinds the parent item of the specified item in the section snapshot.\nfunc contains(ItemIdentifierType) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(ItemIdentifierType) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "level(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600732-level",
    "html": "Discussion\n\nA level of 0 means the item is at the root level of the section snapshot.\n\nSee Also\nGetting item metrics\nfunc index(of: ItemIdentifierType) -> Int?\nFinds the index of the specified item in the section snapshot.\nfunc parent(of: ItemIdentifierType) -> ItemIdentifierType?\nFinds the parent item of the specified item in the section snapshot.\nfunc contains(ItemIdentifierType) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(ItemIdentifierType) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "insert(_:after:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600725-insert",
    "html": "See Also\nInserting items\nfunc insert([ItemIdentifierType], after: ItemIdentifierType)\nInserts the provided items immediately after the item with the specified identifier in the section snapshot.\nfunc insert([ItemIdentifierType], before: ItemIdentifierType)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, before: (ItemIdentifierType))\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "append(_:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600716-append",
    "html": "Parameters\nitems\n\nThe identifiers of the items to append to the parent item in the section snapshot.\n\nparent\n\nThe parent item to append the items to. If you don’t specify a parent, the section snapshot appends the items to its root level.\n\nSee Also\nCreating a section snapshot\ninit()\nCreates an empty section snapshot.\ninit(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>)\nCreates a copy of the provided section snapshot.\nfunc snapshot(of: ItemIdentifierType, includingParent: Bool) -> NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>\nCreates a section snapshot that contains the child items of the specified parent item, optionally including the parent item."
  },
  {
    "title": "parent(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600733-parent",
    "html": "See Also\nGetting item metrics\nfunc index(of: ItemIdentifierType) -> Int?\nFinds the index of the specified item in the section snapshot.\nfunc level(of: ItemIdentifierType) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc contains(ItemIdentifierType) -> Bool\nIndicates whether the section snapshot contains the specified item.\nfunc isVisible(ItemIdentifierType) -> Bool\nIndicates whether the specified item is currently visible onscreen."
  },
  {
    "title": "horizontal(layoutSize:subitem:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroup/3213854-horizontal",
    "html": "Deprecated\n\nUse horizontal(layoutSize:repeatingSubitem:count:) instead.\n\nDiscussion\n\nWhen you set a value for the interItemSpacing property after using this initializer, the group keeps the same number of items and automatically resizes them to add the extra specified spacing between them.\n\nSee Also\nDeprecated\nclass func horizontalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the horizontal axis.\nclass func vertical(layoutSize: NSCollectionLayoutSize, subitem: NSCollectionLayoutItem, count: Int) -> Self\nCreates a group of the specified size, containing an array of equally sized items arranged in a vertical line up to the number specified by count.\nclass func verticalGroup(with: NSCollectionLayoutSize, repeatingSubitem: NSCollectionLayoutItem, count: Int) -> NSCollectionLayoutGroup\nCreates a group that repeats the specified subitem a certain number of times along the vertical axis."
  },
  {
    "title": "contentInsets | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutitem/3199084-contentinsets",
    "html": "Discussion\n\nYou can use this property within a grid layout to apply even spacing around each edge of each item. Content insets are applied after applying edgeSpacing.\n\nThe following diagram shows the result of applying 2 points of content insets to each edge of each item in a group.\n\nNote\n\nThe value of this property is ignored for any axis that uses an estimated value for its dimension. For more information, see estimated(_:).\n\nSee Also\nConfiguring spacing and insets\nvar edgeSpacing: NSCollectionLayoutEdgeSpacing?\nThe amount of space added around the boundaries of the item between other items and this item's container."
  },
  {
    "title": "pinToVisibleBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem/3199044-pintovisiblebounds",
    "html": "Discussion\n\nThe default value of this property is false, which means that the boundary supplementary item (header or footer) remains in its original position during scrolling, and moves offscreen as its section or layout scrolls. Set the value of this property to true to pin the boundary supplementary item to the visible bounds of the section or layout it’s attached to. This way, the boundary supplementary item is shown while any portion of the section or layout it’s attached to is visible."
  },
  {
    "title": "supplementaryViewProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3255142-supplementaryviewprovider",
    "html": "See Also\nCreating supplementary views\ntypealias UICollectionViewDiffableDataSource.SupplementaryViewProvider\nA closure that configures and returns a collection view’s supplementary view, such as a header or footer, from a diffable data source."
  },
  {
    "title": "setNeedsCellUpdate() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897490-setneedscellupdate",
    "html": "Required\n\nDiscussion\n\nCall this method when you want to update the contents of the placeholder cell. When you call this method, UIKit calls the update handler that you originally passed to the drop(_:toPlaceholderInsertedAt:withReuseIdentifier:cellUpdateHandler:) method when creating the cell.\n\nSee Also\nUpdating the Placeholder Cell\nfunc commitInsertion(dataSourceUpdates: (IndexPath) -> Void) -> Bool\nExchanges the placeholder cell for a cell with the final content.\n\nRequired"
  },
  {
    "title": "boundarySupplementaryItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3199089-boundarysupplementaryitems",
    "html": "See Also\nConfiguring additional views\nvar decorationItems: [NSCollectionLayoutDecorationItem]\nAn array of the decoration items that are anchored to the section, such as background decoration views."
  },
  {
    "title": "init(insertionIndexPath:reuseIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewplaceholder/2921639-init",
    "html": "Parameters\ninsertionIndexPath\n\nThe index path at which to insert the placeholder cell.\n\nreuseIdentifier\n\nThe reuse identifier to use when dequeueing the cell.\n\nReturn Value\n\nA new placeholder cell object."
  },
  {
    "title": "cellUpdateHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewplaceholder/2921635-cellupdatehandler",
    "html": "Discussion\n\nSpecify a block that configures or updates the appearance of your placeholder cell. The collection view calls this block when the placeholder cell becomes visible, and at other appropriate times."
  },
  {
    "title": "commitInsertion(dataSourceUpdates:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropplaceholdercontext/2897447-commitinsertion",
    "html": "Required\n\nParameters\ndataSourceUpdates\n\nThe handler block to execute as part of committing your changes. Use this block to update your collection view's data source with the actual data that you received. This block has no return value and takes the following parameter:\n\ninsertionIndexPath\n\nThe location at which to insert any items. Always use this index path for the insertion point instead of any cached values.\n\nReturn Value\n\ntrue if the placeholder was replaced by your content or false if the placeholder was no longer in the collection view.\n\nDiscussion\n\nWhen you receive the actual data for a cell, call this method to remove the corresponding placeholder cell and insert the actual cell. If the placeholder cell is still present in the collection view, this method calls the dataSourceUpdates handler. Use that handler block to update the data source object of the collection view. Do not update the collection view itself. This method automatically updates the collection view, creating a new cell for your data.\n\nIf the placeholder cell is no longer present, this method does not execute your dataSourceUpdates block.\n\nSee Also\nUpdating the Placeholder Cell\nfunc setNeedsCellUpdate()\nUpdates the contents of the placeholder cell.\n\nRequired"
  },
  {
    "title": "indexOfSection(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375768-indexofsection",
    "html": "Parameters\nidentifier\n\nThe identifier of the section of the snapshot.\n\nReturn Value\n\nThe index of the section of the snapshot, or nil if the section with the specified identifier doesn't exist in the snapshot. This index value is 0-based.\n\nSee Also\nIdentifying items and sections\nvar itemIdentifiers: [ItemIdentifierType]\nThe identifiers of all of the items in the snapshot.\nvar sectionIdentifiers: [SectionIdentifierType]\nThe identifiers of all of the sections in the snapshot.\nfunc indexOfItem(ItemIdentifierType) -> Int?\nReturns the index of the item in the snapshot with the specified identifier.\nfunc itemIdentifiers(inSection: SectionIdentifierType) -> [ItemIdentifierType]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(containingItem: ItemIdentifierType) -> SectionIdentifierType?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "itemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375774-itemidentifiers",
    "html": "See Also\nIdentifying items and sections\nvar sectionIdentifiers: [SectionIdentifierType]\nThe identifiers of all of the sections in the snapshot.\nfunc indexOfItem(ItemIdentifierType) -> Int?\nReturns the index of the item in the snapshot with the specified identifier.\nfunc indexOfSection(SectionIdentifierType) -> Int?\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiers(inSection: SectionIdentifierType) -> [ItemIdentifierType]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(containingItem: ItemIdentifierType) -> SectionIdentifierType?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "moveItem(_:beforeItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375777-moveitem",
    "html": "Parameters\nidentifier\n\nThe identifier of the item to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the item before which to move the specified item.\n\nSee Also\nReordering items and sections\nfunc moveItem(ItemIdentifierType, afterItem: ItemIdentifierType)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveSection(SectionIdentifierType, afterSection: SectionIdentifierType)\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\nfunc moveSection(SectionIdentifierType, beforeSection: SectionIdentifierType)\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "moveSection(_:afterSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375778-movesection",
    "html": "Parameters\nidentifier\n\nThe identifier of the section to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the section after which to move the specified section.\n\nSee Also\nReordering items and sections\nfunc moveItem(ItemIdentifierType, afterItem: ItemIdentifierType)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveItem(ItemIdentifierType, beforeItem: ItemIdentifierType)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(SectionIdentifierType, beforeSection: SectionIdentifierType)\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "moveItem(_:afterItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375776-moveitem",
    "html": "Parameters\nidentifier\n\nThe identifier of the item to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the item after which to move the specified item.\n\nSee Also\nReordering items and sections\nfunc moveItem(ItemIdentifierType, beforeItem: ItemIdentifierType)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(SectionIdentifierType, afterSection: SectionIdentifierType)\nMoves the section from its current position in the snapshot to the position immediately after the specified section.\nfunc moveSection(SectionIdentifierType, beforeSection: SectionIdentifierType)\nMoves the section from its current position in the snapshot to the position immediately before the specified section."
  },
  {
    "title": "moveSection(_:beforeSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375779-movesection",
    "html": "Parameters\nidentifier\n\nThe identifier of the section to move in the snapshot.\n\ntoIdentifier\n\nThe identifier of the section before which to move the specified section.\n\nSee Also\nReordering items and sections\nfunc moveItem(ItemIdentifierType, afterItem: ItemIdentifierType)\nMoves the item from its current position in the snapshot to the position immediately after the specified item.\nfunc moveItem(ItemIdentifierType, beforeItem: ItemIdentifierType)\nMoves the item from its current position in the snapshot to the position immediately before the specified item.\nfunc moveSection(SectionIdentifierType, afterSection: SectionIdentifierType)\nMoves the section from its current position in the snapshot to the position immediately after the specified section."
  },
  {
    "title": "deleteSections(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375766-deletesections",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the sections to delete from the snapshot.\n\nSee Also\nRemoving items and sections\nfunc deleteAllItems()\nDeletes all of the items from the snapshot.\nfunc deleteItems([ItemIdentifierType])\nDeletes the items with the specified identifiers from the snapshot."
  },
  {
    "title": "sectionIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375786-sectionidentifiers",
    "html": "See Also\nIdentifying items and sections\nvar itemIdentifiers: [ItemIdentifierType]\nThe identifiers of all of the items in the snapshot.\nfunc indexOfItem(ItemIdentifierType) -> Int?\nReturns the index of the item in the snapshot with the specified identifier.\nfunc indexOfSection(SectionIdentifierType) -> Int?\nReturns the index of the section of the snapshot with the specified identifier.\nfunc itemIdentifiers(inSection: SectionIdentifierType) -> [ItemIdentifierType]\nReturns the identifiers of all of the items in the specified section of the snapshot.\nfunc sectionIdentifier(containingItem: ItemIdentifierType) -> SectionIdentifierType?\nReturns the identifier of the section containing the specified item in the snapshot."
  },
  {
    "title": "deleteAllItems() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375764-deleteallitems",
    "html": "See Also\nRemoving items and sections\nfunc deleteItems([ItemIdentifierType])\nDeletes the items with the specified identifiers from the snapshot.\nfunc deleteSections([SectionIdentifierType])\nDeletes the sections with the specified identifiers from the snapshot."
  },
  {
    "title": "deleteItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375765-deleteitems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to delete from the snapshot.\n\nSee Also\nRemoving items and sections\nfunc deleteAllItems()\nDeletes all of the items from the snapshot.\nfunc deleteSections([SectionIdentifierType])\nDeletes the sections with the specified identifiers from the snapshot."
  },
  {
    "title": "init(delegate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidate/3972021-init",
    "html": "Parameters\ndelegate\n\nA delegate object that a calendar view asks for selectable dates, and informs of changes to the selection of multiple dates."
  },
  {
    "title": "collectionView(_:cancelPrefetchingForItemsAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdatasourceprefetching/1771769-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view issuing the cancellation of the prefetch request.\n\nindexPaths\n\nThe index paths that specify the locations of the items for which data is no longer required.\n\nDiscussion\n\nThe collection view calls this method to cancel prefetch requests as cells scroll out of view. Your implementation of this method is responsible for canceling the operations initiated by a previous call to collectionView(_:prefetchItemsAt:). For further information about canceling an asynchronous data loading task, see Concurrency Programming Guide.\n\nSee Also\nManaging data prefetching\nPrefetching collection view data\nLoad data for collection view cells before they display.\nfunc collectionView(UICollectionView, prefetchItemsAt: [IndexPath])\nTells your prefetch data source object to begin preparing data for the cells at the supplied index paths.\n\nRequired"
  },
  {
    "title": "UICollectionLayoutSectionOrthogonalScrollingBehavior | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionlayoutsectionorthogonalscrollingbehavior",
    "html": "Overview\n\nBy default, each section lays out its content along the main axis of its layout, defined by the layout configuration’s scrollDirection property. You can change this behavior for a particular section by setting its orthogonalScrollingBehavior property to a different value than its default UICollectionLayoutSectionOrthogonalScrollingBehavior.none. Setting any other value for this property makes the section lay out its content orthogonally to the main layout axis.\n\nTopics\nConstants\ncase none\nThe section does not allow users to scroll its content orthogonally.\ncase continuous\nThe section allows users to scroll its content orthogonally with continuous scrolling.\ncase continuousGroupLeadingBoundary\nThe section allows users to scroll its content orthogonally, coming to a natural stop at the leading boundary of the visible group.\ncase paging\nThe section allows users to page its content orthogonally.\ncase groupPaging\nThe section allows users to page its content orthogonally one group at a time.\ncase groupPagingCentered\nThe section allows users to page its content orthogonally one group at a time, centering each group.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "UICollectionViewCompositionalLayoutSectionProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutsectionprovider",
    "html": "Discussion\n\nYou use a section provider to create a compositional layout (UICollectionViewCompositionalLayout) that has multiple sections with different layouts. The section provider keeps track of the index of the section that it's currently creating, so you can configure each section differently.\n\nFor example, the following code shows a section provider that creates a two-column layout in the first section, and a four-column layout in each section after the first section.\n\nfunc createPerSectionLayout() -> UICollectionViewLayout {\n    let layout = UICollectionViewCompositionalLayout { (sectionIndex: Int,\n        layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection? in\n        \n        let columns = sectionIndex == 0 ? 2 : 4\n        \n        let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                             heightDimension: .fractionalHeight(1.0))\n        let item = NSCollectionLayoutItem(layoutSize: itemSize)\n        \n        let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                              heightDimension: .absolute(44))\n        let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize,\n                                                          subitem: item,\n                                                            count: columns)\n        \n        let section = NSCollectionLayoutSection(group: group)\n        return section\n    }\n    return layout\n}\n\n\nA section provider is also invoked in response to system events such as changes in device orientation, system font size, and size classes from iPad multitasking. You can use this opportunity to adapt the layout to different layout environments by inspecting information about the current layout environment (NSCollectionLayoutEnvironment) and using that information to configure each section.\n\nFor example, the following code shows a section provider that creates a two-column layout when the width of the section's container is less than 800 points, and a four-column layout otherwise.\n\nfunc createAdaptiveLayout() -> UICollectionViewLayout {\n    let layout = UICollectionViewCompositionalLayout { (sectionIndex: Int,\n        layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection in\n\n\n        let columns = layoutEnvironment.container.effectiveContentSize.width < 800 ? 2 : 4\n        \n        let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                             heightDimension: .fractionalHeight(1.0))\n        let item = NSCollectionLayoutItem(layoutSize: itemSize)\n        \n        let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                              heightDimension: .absolute(44))\n        let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize,\n                                                          subitem: item,\n                                                            count: columns)\n        \n        let section = NSCollectionLayoutSection(group: group)\n        return section\n    }\n    return layout\n}\n\n\nSee Also\nConfiguration\nclass UICollectionViewCompositionalLayoutConfiguration\nAn object that defines scroll direction, section spacing, and headers or footers for the layout.\nprotocol NSCollectionLayoutEnvironment\nA protocol used to provide information about the layout’s container and environment traits, such as size classes and display scale factor."
  },
  {
    "title": "UICollectionViewCompositionalLayoutConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayoutconfiguration",
    "html": "Overview\n\nYou use a layout configuration to modify a collection view layout’s default scroll direction, add extra spacing between each section of the layout, and add headers or footers to the entire layout.\n\nYou can pass in this configuration when creating a UICollectionViewCompositionalLayout, or you can set the configuration property on an existing layout. If you modify the configuration on an existing layout, the system invalidates the layout so that it will be updated with the new configuration.\n\nlet headerFooterSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                             heightDimension: .estimated(44))\n\n\nlet header = NSCollectionLayoutBoundarySupplementaryItem(layoutSize: headerFooterSize,\n                                                        elementKind: \"header\",\n                                                          alignment: .top)\nlet footer = NSCollectionLayoutBoundarySupplementaryItem(layoutSize: headerFooterSize,\n                                                        elementKind: \"footer\",\n                                                          alignment: .bottom)\n\n\nlet config = UICollectionViewCompositionalLayoutConfiguration()\nconfig.interSectionSpacing = 20\nconfig.scrollDirection = .horizontal\nconfig.boundarySupplementaryItems = [header, footer]\n\n\nTopics\nSpecifying scroll direction\nvar scrollDirection: UICollectionView.ScrollDirection\nThe axis that the content in the collection view layout scrolls along.\nConfiguring spacing\nvar interSectionSpacing: CGFloat\nThe amount of space between the sections in the layout.\nvar contentInsetsReference: UIContentInsetsReference\nThe boundary to reference when defining content insets.\nenum UIContentInsetsReference\nConstants that describe the reference point of the content insets.\nConfiguring additional views\nvar boundarySupplementaryItems: [NSCollectionLayoutBoundarySupplementaryItem]\nAn array of the supplementary items that are associated with the boundary edges of the entire layout, such as global headers and footers.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nConfiguration\ntypealias UICollectionViewCompositionalLayoutSectionProvider\nA closure that creates and returns each of the layout’s sections.\nprotocol NSCollectionLayoutEnvironment\nA protocol used to provide information about the layout’s container and environment traits, such as size classes and display scale factor."
  },
  {
    "title": "NSCollectionLayoutEdgeSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutedgespacing",
    "html": "Overview\n\nYou use edge spacing to create additional spacing around the edges of an item to adjust the position of the item in relation to its container and other items.\n\nThe leading and trailing spaces within edge spacing differ in left-to-right versus right-to-left environments. In a left-to-right environment, the leading space is on the left, and the trailing space is on the right. In a right-to-left environment, the leading space is on the right, and the trailing space is on the left. This difference ensures that your collection view layout is built with support for right-to-left languages.\n\nThe following diagram shows the difference between adding 2 points of trailing edge spacing in a left-to-right versus a right-to-left environment.\n\nTopics\nCreating edge spacing\ninit(leading: NSCollectionLayoutSpacing?, top: NSCollectionLayoutSpacing?, trailing: NSCollectionLayoutSpacing?, bottom: NSCollectionLayoutSpacing?)\nCreates an edge spacing object with the specified leading, top, trailing, and bottom spacing.\nGetting the edge spacing\nvar leading: NSCollectionLayoutSpacing?\nThe leading edge spacing value.\nvar top: NSCollectionLayoutSpacing?\nThe top edge spacing value.\nvar trailing: NSCollectionLayoutSpacing?\nThe trailing edge spacing value.\nvar bottom: NSCollectionLayoutSpacing?\nThe bottom edge spacing value.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSize and spacing\nclass NSCollectionLayoutDimension\nAn individual dimension representing an item’s width or height in a collection view.\nclass NSCollectionLayoutSize\nThe width and the height of an item in a collection view.\nclass NSCollectionLayoutSpacing\nAn object that defines the space between or around items in a collection view.\nprotocol NSCollectionLayoutContainer\nA protocol used to provide information about the size and content insets of a layout’s container."
  },
  {
    "title": "NSCollectionLayoutSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutspacing",
    "html": "Overview\n\nIn a collection view layout, you use a spacing object to specify both the amount of space and the way in which it’s calculated.\n\nYou can express spacing using fixed or flexible spacing.\n\nUse fixed spacing to provide an exact amount of space. For example, the following code creates exactly 200 points of space between the items in the group.\n\ngroup.interItemSpacing = .fixed(200.0)\n\n\nUse flexible spacing to provide a minimum amount of space that can grow as more space becomes available. For example, the following code creates at least 200 points of space between the items in the group. As more space becomes available, items are respaced evenly in the additional space.\n\ngroup.interItemSpacing = .flexible(200.0)\n\nTopics\nCreating spacing\nclass func fixed(CGFloat) -> Self\nCreates a space equivalent to the specified number of points.\nclass func flexible(CGFloat) -> Self\nCreates a space equivalent to or greater than the specified number of points, depending on the available space.\nGetting the spacing value\nvar spacing: CGFloat\nThe floating-point value of the space.\nGetting the spacing type\nvar isFixed: Bool\nA Boolean value that indicates whether the space is fixed to a specific number of points.\nvar isFlexible: Bool\nA Boolean value that indicates whether the space is flexible.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nSize and spacing\nclass NSCollectionLayoutDimension\nAn individual dimension representing an item’s width or height in a collection view.\nclass NSCollectionLayoutSize\nThe width and the height of an item in a collection view.\nclass NSCollectionLayoutEdgeSpacing\nAn object that defines the space around the edges of items in a collection view.\nprotocol NSCollectionLayoutContainer\nA protocol used to provide information about the size and content insets of a layout’s container."
  },
  {
    "title": "NSCollectionLayoutItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutitem",
    "html": "Overview\n\nAn item is a blueprint for how to size, space, and arrange an individual piece of content in your collection view. An item represents a single view that’s rendered onscreen. Generally, an item is a cell, but items can be supplementary views like headers, footers, and other decorations.\n\nFor example, in the Photos app, an item might represent a single photo. In the App Store app, an item might be a cell displaying information about an individual app in a list of featured apps, such as the app icon, app name, tagline, and download button.\n\nEach item specifies its own size in terms of a width dimension and a height dimension. Items can express their dimensions relative to their container, as an absolute value, or as an estimated value that might change at runtime, like in response to a change in system font size. For more information, see NSCollectionLayoutDimension.\n\nYou combine items into groups that determine how those items are arranged in relation to each other. For more information, see NSCollectionLayoutGroup.\n\nTopics\nCreating an item\ninit(layoutSize: NSCollectionLayoutSize)\nCreates an item of the specified size.\ninit(layoutSize: NSCollectionLayoutSize, supplementaryItems: [NSCollectionLayoutSupplementaryItem])\nCreates an item of the specified size with an array of supplementary items to attach to the item.\nGetting an item’s size\nvar layoutSize: NSCollectionLayoutSize\nThe item's size expressed in width and height dimensions.\nGetting supplementary items\nvar supplementaryItems: [NSCollectionLayoutSupplementaryItem]\nAn array of the supplementary items attached to the item.\nConfiguring spacing and insets\nvar edgeSpacing: NSCollectionLayoutEdgeSpacing?\nThe amount of space added around the boundaries of the item between other items and this item's container.\nvar contentInsets: NSDirectionalEdgeInsets\nThe amount of space added around the content of the item to adjust its final size after its position is computed.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nComponents\nclass NSCollectionLayoutGroup\nA container for a set of items that lays out the items along a path.\nclass NSCollectionLayoutSection\nA container that combines a set of groups into distinct visual groupings."
  },
  {
    "title": "UICollectionViewCompositionalLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout",
    "html": "Overview\n\nA compositional layout is a type of collection view layout. It’s designed to be composable, flexible, and fast, letting you build any kind of visual arrangement for your content by combining — or compositing — each smaller component into a full layout.\n\nA compositional layout is composed of one or more sections that break up the layout into distinct visual groupings. Each section is composed of groups of individual items, the smallest unit of data you want to present. A group might lay out its items in a horizontal row, a vertical column, or a custom arrangement.\n\nYou combine the components by building up from items into a group, from groups into a section, and finally into a full layout, like in this example of a basic list layout:\n\nfunc createBasicListLayout() -> UICollectionViewLayout { \n    let itemSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),                                  \n                                         heightDimension: .fractionalHeight(1.0))    \n    let item = NSCollectionLayoutItem(layoutSize: itemSize)  \n  \n    let groupSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),                                          \n                                          heightDimension: .absolute(44))    \n    let group = NSCollectionLayoutGroup.horizontal(layoutSize: groupSize,                                                   \n                                                     subitems: [item])  \n  \n    let section = NSCollectionLayoutSection(group: group)    \n\n\n    let layout = UICollectionViewCompositionalLayout(section: section)    \n    return layout\n}\n\n\nTopics\nCreating a layout\ninit(section: NSCollectionLayoutSection)\nCreates a compositional layout object with a single section.\ninit(section: NSCollectionLayoutSection, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a single section and an additional configuration.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider)\nCreates a compositional layout object with a section provider to supply the layout's sections.\ninit(sectionProvider: UICollectionViewCompositionalLayoutSectionProvider, configuration: UICollectionViewCompositionalLayoutConfiguration)\nCreates a compositional layout object with a section provider and an additional configuration.\nCreating a list layout\nstatic func list(using: UICollectionLayoutListConfiguration) -> UICollectionViewCompositionalLayout\nCreates a compositional layout that contains only list sections of the specified configuration.\nstruct UICollectionLayoutListConfiguration\nA configuration for creating a list layout.\nConfiguring the layout\nvar configuration: UICollectionViewCompositionalLayoutConfiguration\nThe layout’s configuration, such as its scroll direction and section spacing.\nRelationships\nInherits From\nUICollectionViewLayout\nSee Also\nEssentials\nImplementing Modern Collection Views\nBring compositional layouts to your app and simplify updating your user interface with diffable data sources."
  },
  {
    "title": "collectionView(_:dropSessionDidUpdate:withDestinationIndexPath:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897375-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view that’s tracking the dragged content.\n\nsession\n\nThe drop session object containing information about the type of data being dragged.\n\ndestinationIndexPath\n\nThe index path at which the content would be dropped.\n\nReturn Value\n\nYour proposal for how to handle the content if it is dropped at the specified location.\n\nDiscussion\n\nWhile the user is dragging content, the collection view calls this method repeatedly to determine how you would handle the drop if it occurred at the specified location. The collection view provides visual feedback to the user based on your proposal.\n\nIn your implementation of this method, create a UICollectionViewDropProposal object and use it to convey your intentions. Because this method is called repeatedly while the user drags over the table view, your implementation should return as quickly as possible.\n\nSee Also\nTracking the drag movements\nfunc collectionView(UICollectionView, dropSessionDidEnter: UIDropSession)\nNotifies you when dragged content enters the collection view’s bounds rectangle.\nfunc collectionView(UICollectionView, dropSessionDidExit: UIDropSession)\nNotifies you when dragged content exits the collection view’s bounds rectangle.\nfunc collectionView(UICollectionView, dropSessionDidEnd: UIDropSession)\nNotifies you when the drag operation ends."
  },
  {
    "title": "collectionView(_:dropSessionDidEnd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897291-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view that’s tracking the dragged content.\n\nsession\n\nThe drop session object containing information about the data being dragged.\n\nDiscussion\n\nThe collection view calls this method at the conclusion of a drag that was over the collection view at one point. Use it to clean up any state information that you used to handle the drag. This method is called regardless of whether the data was actually dropped onto the collection view.\n\nSee Also\nTracking the drag movements\nfunc collectionView(UICollectionView, dropSessionDidUpdate: UIDropSession, withDestinationIndexPath: IndexPath?) -> UICollectionViewDropProposal\nTells your delegate that the position of the dragged data over the collection view changed.\nfunc collectionView(UICollectionView, dropSessionDidEnter: UIDropSession)\nNotifies you when dragged content enters the collection view’s bounds rectangle.\nfunc collectionView(UICollectionView, dropSessionDidExit: UIDropSession)\nNotifies you when dragged content exits the collection view’s bounds rectangle."
  },
  {
    "title": "reconfiguredItemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857612-reconfigureditemidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the items that the view reconfigures when you apply the snapshot to your data source.\n\nSee Also\nReloading data\nfunc reconfigureItems([ItemIdentifierType])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nfunc reloadItems([ItemIdentifierType])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections([SectionIdentifierType])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [SectionIdentifierType]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "setSelected(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledate/3972033-setselected",
    "html": "Parameters\nselectedDate\n\nA date component object that represents a date to select in a calendar view.\n\nanimated\n\nA Boolean value that indicates whether the calendar view should animate changing the selected date.\n\nSee Also\nUpdating the selected date\nvar selectedDate: DateComponents?\nA date component object that represents a selected date in a calendar view."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledate/3972030-delegate",
    "html": "See Also\nSetting the selection delegate\nprotocol UICalendarSelectionSingleDateDelegate\nA set of methods you implement to provide selectable dates and handle changes to the selection of a single date."
  },
  {
    "title": "deleteAll() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600720-deleteall",
    "html": "See Also\nRemoving items\nfunc delete([ItemIdentifierType])\nDeletes the items with the specified identifiers, and any of their child items, from the section snapshot."
  },
  {
    "title": "isVisible(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600730-isvisible",
    "html": "See Also\nGetting item metrics\nfunc index(of: ItemIdentifierType) -> Int?\nFinds the index of the specified item in the section snapshot.\nfunc level(of: ItemIdentifierType) -> Int\nFinds the hierarchical level of the specified item in the section snapshot.\nfunc parent(of: ItemIdentifierType) -> ItemIdentifierType?\nFinds the parent item of the specified item in the section snapshot.\nfunc contains(ItemIdentifierType) -> Bool\nIndicates whether the section snapshot contains the specified item."
  },
  {
    "title": "reloadedItemIdentifiers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3857613-reloadeditemidentifiers",
    "html": "Discussion\n\nAfter you make updates to the snapshot, this method returns an array of identifiers corresponding to the items that the view reloads when you apply the snapshot to your data source.\n\nSee Also\nReloading data\nfunc reconfigureItems([ItemIdentifierType])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems([ItemIdentifierType])\nReloads the data within the specified items in the snapshot.\nfunc reloadSections([SectionIdentifierType])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [SectionIdentifierType]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "destinationIndexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897284-destinationindexpath",
    "html": "Required"
  },
  {
    "title": "insert(_:after:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600726-insert",
    "html": "See Also\nInserting items\nfunc insert(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, after: (ItemIdentifierType))\nInserts the provided section snapshot immediately after the item with the specified identifier in the section snapshot.\nfunc insert([ItemIdentifierType], before: ItemIdentifierType)\nInserts the provided items immediately before the item with the specified identifier in the section snapshot.\nfunc insert(NSDiffableDataSourceSectionSnapshot<ItemIdentifierType>, before: (ItemIdentifierType))\nInserts the provided section snapshot immediately before the item with the specified identifier in the section snapshot."
  },
  {
    "title": "visibleItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600737-visibleitems",
    "html": "See Also\nAccessing items\nvar items: [ItemIdentifierType]\nThe identifiers of all items in the section snapshot.\nvar rootItems: [ItemIdentifierType]\nThe identifiers of the items at the top level of the section snapshot’s hierarchy."
  },
  {
    "title": "indentsAccessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600462-indentsaccessories",
    "html": "Discussion\n\nIf the value is false, the cell indents the content view only.\n\nThe default value of this property is true.\n\nSee Also\nCustomizing layout\nvar indentationLevel: Int\nThe level of indentation for the cell.\nvar indentationWidth: CGFloat\nThe width of an indentation level.\nvar separatorLayoutGuide: UILayoutGuide\nA guide for laying out separators in relation to the primary content in the cell."
  },
  {
    "title": "applySnapshotUsingReloadData(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3804469-applysnapshotusingreloaddata",
    "html": "Parameters\nsnapshot\n\nThe snapshot that reflects the new state of the data in the collection view.\n\nDiscussion\n\nThe system interrupts any ongoing item animations and immediately reloads the collection view’s content.\n\nYou can safely call this method from a background queue, but you must do so consistently in your app. Always call this method exclusively from the main queue or from a background queue.\n\nSee Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the collection view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "rootItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesectionsnapshot/3600735-rootitems",
    "html": "See Also\nAccessing items\nvar items: [ItemIdentifierType]\nThe identifiers of all items in the section snapshot.\nvar visibleItems: [ItemIdentifierType]\nThe identifiers of the currently visible items in the section snapshot."
  },
  {
    "title": "NSLayoutConstraint.Attribute.centerXWithinMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/centerxwithinmargins",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "willTransition(from:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620140-willtransition",
    "html": "Parameters\noldLayout\n\nThe current layout object associated with the collection view.\n\nnewLayout\n\nThe new layout object that is about to be applied to the collection view.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses can override this method and use it to prepare for the change in layouts.\n\nSee Also\nManaging layout changes\nfunc preferredLayoutAttributesFitting(UICollectionViewLayoutAttributes) -> UICollectionViewLayoutAttributes\nGives the cell a chance to modify the attributes provided by the layout object.\nfunc apply(UICollectionViewLayoutAttributes)\nApplies the specified layout attributes to the view.\nfunc didTransition(from: UICollectionViewLayout, to: UICollectionViewLayout)\nTells your view that the layout object of the collection view changed."
  },
  {
    "title": "NSLayoutConstraint.Attribute.centerYWithinMargins | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/centerywithinmargins",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "drop(_:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2921634-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe drag item containing the data to drop.\n\nplaceholder\n\nThe placeholder to add at the specified location.\n\nReturn Value\n\nThe context object that you use to replace or remove the placeholder cell later. Store a reference to this object so that you can call its methods later.\n\nDiscussion\n\nUse this method to insert a temporary placeholder cell (instead of a cell backed by actual data) into the collection view. When calling this method, don’t update your data source object to account for the placeholder. The collection view manages the placeholder until you explicitly remove it using the returned context object.\n\nTypically, you use this method when you must load data asynchronously for a cell. Instead of updating your data source, you insert a placeholder cell. When the data is finally available, update your data source object and call the commitInsertion(dataSourceUpdates:) method of the returned context object to swap out the placeholder cell for an actual cell. You can also remove a placeholder cell that’s no longer needed by calling the deletePlaceholder() method.\n\nAt some point after calling this method, the collection view executes your cellUpdateHandler block. Use that block to configure the contents of the placeholder cell. Calling the setNeedsCellUpdate() method of the returned context object executes your handler again, giving you a way to update the cell later.\n\nSee Also\nAnimating Items to Their Destination\nfunc drop(UIDragItem, toItemAt: IndexPath) -> UIDragAnimating\nAnimates the item to the specified index path in the collection view.\n\nRequired\n\nfunc drop(UIDragItem, intoItemAt: IndexPath, rect: CGRect) -> UIDragAnimating\nAnimates the item to the specified rectangle in the collection view.\n\nRequired\n\nfunc drop(UIDragItem, to: UIDragPreviewTarget) -> UIDragAnimating\nAnimates the item to an arbitrary location in your view hierarchy.\n\nRequired"
  },
  {
    "title": "Prefetching collection view data | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdatasourceprefetching/prefetching_collection_view_data",
    "html": "Overview\n\nA collection view displays an ordered collection of cells in customizable layouts. The UICollectionViewDataSourcePrefetching protocol helps provide a smoother user experience by prefetching the data necessary for upcoming collection view cells. When you enable prefetching, the collection view requests the data before it needs to display the cell. When it’s time to display the cell, the data is already locally cached.\n\nThe image below shows cells outside the bounds of the collection view that have been prefetched:\n\nNote\n\nThe storyboard in this project contains a collection view controller with a collection view that has Clips To Bounds disabled. With this configuration, you can visualize the cells before they display.\n\nEnable prefetching\n\nThe root view controller uses an instance of the CustomDataSource class to provide data to its UICollectionView instance. The CustomDataSource class implements the UICollectionViewDataSourcePrefetching protocol to begin fetching the data required to populate cells.\n\nclass CustomDataSource: NSObject, UICollectionViewDataSource, UICollectionViewDataSourcePrefetching {\n\n\nIn addition to assigning the CustomDataSource instance to the collection view’s dataSource property, the sample code project also assigns it to the prefetchDataSource property.\n\n// Set the collection view's data source.\ncollectionView.dataSource = dataSource\n\n\n// Set the collection view's prefetching data source.\ncollectionView.prefetchDataSource = dataSource\n\n\nLoad data asynchronously\n\nPrefetching data is a tool to use when loading data is a slow or expensive process — for example, when fetching data over the network. In these circumstances, it’s best to perform data loading asynchronously. In this sample, the AsyncFetcher class fetches data asynchronously, simulating a network request.\n\nFirst, the sample implements the UICollectionViewDataSourcePrefetching prefetch method, invoking the appropriate method on the asynchronous fetcher.\n\nfunc collectionView(_ collectionView: UICollectionView, prefetchItemsAt indexPaths: [IndexPath]) {\n    // Begin asynchronously fetching data for the requested index paths.\n    for indexPath in indexPaths {\n        let model = models[indexPath.row]\n        asyncFetcher.fetchAsync(model.identifier)\n    }\n}\n\n\nNote\n\nDevelopers can create their own version of AsyncFetcher to fit their requirements. The implementation in this sample makes heavy use of Operation and OperationQueue, leveraging their ability to handle thread safety and cancellation. Developers might consider a similar approach.\n\nWhen prefetching is complete, the sample adds the cell’s data to the AsyncFetcher‘s cache, so it’s ready to use when the cell displays. The cell’s background color changes from white to red when data is available for that cell.\n\n/**\n Configures the cell for display based on the model.\n \n - Parameters:\n     - data: An optional `DisplayData` object to display.\n \n - Tag: Cell_Config\n*/\nfunc configure(with data: DisplayData?) {\n    backgroundColor = data?.color\n}\n\n\nPopulate cells for display\n\nBefore populating a cell, the CustomDataSource checks for any prefetched data that it can use. If none is available, the CustomDataSource makes a fetch request and the cell updates in the fetch request’s completion handler.\n\nfunc collectionView(_ collectionView: UICollectionView, cellForItemAt indexPath: IndexPath) -> UICollectionViewCell {\n    guard let cell = collectionView.dequeueReusableCell(withReuseIdentifier: Cell.reuseIdentifier, for: indexPath) as? Cell else {\n        fatalError(\"Expected `\\(Cell.self)` type for reuseIdentifier \\(Cell.reuseIdentifier). Check the configuration in Main.storyboard.\")\n    }\n    \n    let model = models[indexPath.row]\n    let identifier = model.identifier\n    cell.representedIdentifier = identifier\n    \n    // Check if the `asyncFetcher` has already fetched data for the specified identifier.\n    if let fetchedData = asyncFetcher.fetchedData(for: identifier) {\n        // The system has fetched and cached the data; use it to configure the cell.\n        cell.configure(with: fetchedData)\n    } else {\n        // There is no data available; clear the cell until the fetched data arrives.\n        cell.configure(with: nil)\n\n\n        // Ask the `asyncFetcher` to fetch data for the specified identifier.\n        asyncFetcher.fetchAsync(identifier) { fetchedData in\n            DispatchQueue.main.async {\n                /*\n                 The `asyncFetcher` has fetched data for the identifier. Before\n                 updating the cell, check whether the collection view has recycled it to represent other data.\n                 */\n                guard cell.representedIdentifier == identifier else { return }\n                \n                // Configure the cell with the fetched image.\n                cell.configure(with: fetchedData)\n            }\n        }\n    }\n\n\n    return cell\n}\n\n\nCancel unnecessary fetches\n\nThe sample implements the collectionView(_:cancelPrefetchingForItemsAt:) delegate method to cancel any in-progress data fetches that are no longer required.\n\nfunc collectionView(_ collectionView: UICollectionView, cancelPrefetchingForItemsAt indexPaths: [IndexPath]) {\n    // Cancel any in-flight requests for data for the specified index paths.\n    for indexPath in indexPaths {\n        let model = models[indexPath.row]\n        asyncFetcher.cancelFetch(model.identifier)\n    }\n}\n\n\nSee Also\nManaging data prefetching\nfunc collectionView(UICollectionView, prefetchItemsAt: [IndexPath])\nTells your prefetch data source object to begin preparing data for the cells at the supplied index paths.\n\nRequired\n\nfunc collectionView(UICollectionView, cancelPrefetchingForItemsAt: [IndexPath])\nCancels a previously triggered data prefetch request."
  },
  {
    "title": "setSelectedDates(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidate/3972023-setselecteddates",
    "html": "Parameters\nselectedDates\n\nAn array of date component objects that represent dates to select in a calendar view.\n\nanimated\n\nA Boolean value that indicates whether the calendar view should animate changing the selected dates.\n\nSee Also\nUpdating the selected dates\nvar selectedDates: [DateComponents]\nAn array of date component objects that represent selected dates in a calendar view."
  },
  {
    "title": "default(color:size:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decoration/3972380-default",
    "html": "Parameters\ncolor\n\nA color for the decoration.\n\nsize\n\nA relative size for the decoration.\n\nReturn Value\n\nA calendar view decoration.\n\nSee Also\nCreating a Default Decoration View\ninit()\nCreates a default calendar view decoration with a filled circle image, using the system fill color and medium size."
  },
  {
    "title": "UICalendarSelectionMultiDateDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidatedelegate",
    "html": "Topics\nGetting selectable dates\nfunc multiDateSelection(UICalendarSelectionMultiDate, canSelectDate: DateComponents) -> Bool\nReturns whether a user can select a date represented by date components in the calendar view.\nfunc multiDateSelection(UICalendarSelectionMultiDate, canDeselectDate: DateComponents) -> Bool\nReturns whether a user can deselect a date represented by date components in the calendar view.\nChanging selected dates\nfunc multiDateSelection(UICalendarSelectionMultiDate, didSelectDate: DateComponents)\nInforms the delegate that a user selected a date represented by date components.\n\nRequired\n\nfunc multiDateSelection(UICalendarSelectionMultiDate, didDeselectDate: DateComponents)\nInforms the delegate that a user deselected a date represented by date components.\n\nRequired\n\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nSetting the selection delegate\nvar delegate: UICalendarSelectionMultiDateDelegate?\nA delegate object that a calendar view asks for selectable dates and informs of changes to the selection of multiple dates."
  },
  {
    "title": "UIActivityIndicatorView.Style.gray | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityindicatorview/style/gray",
    "html": "Deprecated\n\nUse UIActivityIndicatorView.Style.medium instead."
  },
  {
    "title": "UICalendarView.DecorationSize.small | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decorationsize/small",
    "html": "See Also\nDecoration View Sizes\ncase large\nA large relative decoration size in a calendar view.\ncase medium\nA medium relative decoration size in a calendar view."
  },
  {
    "title": "image(_:color:size:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decoration/3972381-image",
    "html": "Parameters\nimage\n\nAn image to display as the decoration.\n\ncolor\n\nA color for the decoration.\n\nsize\n\nA relative size for the decoration.\n\nReturn Value\n\nA calendar view decoration.\n\nDiscussion\n\nThe image defaults to circlebadge.fill if you don’t specify it.\n\nThe color defaults to systemFill if you don’t specify it.\n\nThe size defaults to UICalendarView.DecorationSize.medium if nil."
  },
  {
    "title": "UIActivityIndicatorView.Style.whiteLarge | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityindicatorview/style/whitelarge",
    "html": "Deprecated\n\nUse UIActivityIndicatorView.Style.large instead."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidate/3972020-delegate",
    "html": "See Also\nSetting the selection delegate\nprotocol UICalendarSelectionMultiDateDelegate\nA set of methods you implement to provide selectable dates and handle changes to the selection of multiple dates."
  },
  {
    "title": "collectionView(_:dropPreviewParametersForItemAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2921636-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view that’s the destination for the drop.\n\nindexPath\n\nThe index path in the collection view to insert the item.\n\nReturn Value\n\nDrop parameters that indicate how to display the item during the drop.\n\nDiscussion\n\nUse this method to customize the appearance of the item during drops. If you don’t implement this method or if you implement it and return nil, the collection view uses the cell’s visible bounds to create the preview."
  },
  {
    "title": "NSCollectionLayoutEnvironment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutenvironment",
    "html": "Overview\n\nIn a section provider, you use the layout environment to get information about the context that the layout appears in. You can get information about the layout’s container, such as its size and content insets, and the traits of its environment, such as size classes, display scale factor, and user interface idiom. You use this information while rendering the layout’s sections to help you make decisions about how to display the layout.\n\nFor example, the following code uses the layout environment’s trait collection to check whether the UI is in Dark Mode while creating the layout’s sections.\n\nlet layout = UICollectionViewCompositionalLayout { (sectionIndex: Int,\n    layoutEnvironment: NSCollectionLayoutEnvironment) -> NSCollectionLayoutSection in\n        \n    if layoutEnvironment.traitCollection.userInterfaceStyle == .dark {\n        return sectionForUserInterfaceStyle(.dark)\n    } else {\n        return sectionForUserInterfaceStyle(.light)\n    }\n}\n\n\nTopics\nGetting the layout’s container\nvar container: NSCollectionLayoutContainer\nInformation about the layout's container, such as its size and content insets.\n\nRequired\n\nGetting the trait collection\nvar traitCollection: UITraitCollection\nThe traits that describe the current environment of the layout, such as the size classes and display scale factor.\n\nRequired\n\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nConfiguration\nclass UICollectionViewCompositionalLayoutConfiguration\nAn object that defines scroll direction, section spacing, and headers or footers for the layout.\ntypealias UICollectionViewCompositionalLayoutSectionProvider\nA closure that creates and returns each of the layout’s sections."
  },
  {
    "title": "collectionView(_:dropSessionDidExit:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897416-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view that was tracking the dragged content.\n\nsession\n\nThe drop session object containing information about the type of data being dragged.\n\nDiscussion\n\nUIKit calls this method when dragged content exits the bounds rectangle of the specified collection view. The method isn’t called again until the dragged content enters the collection view’s bounds (triggering a call to the collectionView(_:dropSessionDidEnter:) method) and exits again.\n\nUse this method to clean up any state information that you configured in your collectionView(_:dropSessionDidEnter:) method.\n\nSee Also\nTracking the drag movements\nfunc collectionView(UICollectionView, dropSessionDidUpdate: UIDropSession, withDestinationIndexPath: IndexPath?) -> UICollectionViewDropProposal\nTells your delegate that the position of the dragged data over the collection view changed.\nfunc collectionView(UICollectionView, dropSessionDidEnter: UIDropSession)\nNotifies you when dragged content enters the collection view’s bounds rectangle.\nfunc collectionView(UICollectionView, dropSessionDidEnd: UIDropSession)\nNotifies you when the drag operation ends."
  },
  {
    "title": "drop(_:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897364-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe item that you want to drop.\n\ntarget\n\nThe location at which to drop the item, specified as a point in a view. You can also use the UIDragPreviewTarget object to specify a final transform to apply to the content.\n\nDiscussion\n\nUse this method to animate drops to any view in your app. For example, you might use this method to drop items onto a tab bar or toolbar that’s part of your interface.\n\nSee Also\nAnimating Items to Their Destination\nfunc drop(UIDragItem, toItemAt: IndexPath) -> UIDragAnimating\nAnimates the item to the specified index path in the collection view.\n\nRequired\n\nfunc drop(UIDragItem, intoItemAt: IndexPath, rect: CGRect) -> UIDragAnimating\nAnimates the item to the specified rectangle in the collection view.\n\nRequired\n\nfunc drop(UIDragItem, to: UICollectionViewDropPlaceholder) -> UICollectionViewDropPlaceholderContext\nAnimates the item to the specified location and inserts a placeholder cell at that location.\n\nRequired"
  },
  {
    "title": "drop(_:intoItemAt:rect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2909040-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe dragged item that you want to animate into position.\n\nindexPath\n\nThe index path in the collection view at which to incorporate the item.\n\nrect\n\nThe destination rectangle to use for the animation. Specify the rectangle in the coordinate system of the cell at the specified indexPath. UIKit animates the drag item to the specified rectangle.\n\nDiscussion\n\nUse this method to animate drops where you incorporate the dragged items into another item of your collection view. For example, when incorporating items into a folder, you’d use this method to animate the items in a way that makes it look like they were placed into the folder.\n\nSee Also\nAnimating Items to Their Destination\nfunc drop(UIDragItem, toItemAt: IndexPath) -> UIDragAnimating\nAnimates the item to the specified index path in the collection view.\n\nRequired\n\nfunc drop(UIDragItem, to: UIDragPreviewTarget) -> UIDragAnimating\nAnimates the item to an arbitrary location in your view hierarchy.\n\nRequired\n\nfunc drop(UIDragItem, to: UICollectionViewDropPlaceholder) -> UICollectionViewDropPlaceholderContext\nAnimates the item to the specified location and inserts a placeholder cell at that location.\n\nRequired"
  },
  {
    "title": "selectedDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledate/3972032-selecteddate",
    "html": "See Also\nUpdating the selected date\nfunc setSelected(DateComponents?, animated: Bool)\nUpdates the date component object that represents a selected date in a calendar view, with an option to animate the change."
  },
  {
    "title": "collectionView(_:performDropWith:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropdelegate/2897304-collectionview",
    "html": "Required\n\nParameters\ncollectionView\n\nThe collection view that received the drop.\n\ncoordinator\n\nThe coordinator object to use when handling the drop. Use this object to coordinate your custom behavior with the default behavior of the collection view.\n\nDiscussion\n\nUse this method to accept the dropped content and integrate it into your collection view. In your implementation, iterate over the items property of the coordinator object and fetch the data from each UIDragItem. Incorporate the data into your collection view’s data source and update the collection view itself by inserting any needed items. When incorporating items, use the methods of the coordinator object to animate the transition from the drag item’s preview to the corresponding item in your collection view. For items that you incorporate immediately, you can use the drop(_:to:) or drop(_:toItemAt:) method to perform the animation."
  },
  {
    "title": "items | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897482-items",
    "html": "Required"
  },
  {
    "title": "drop(_:toItemAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897310-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe dragged item that you want to animate into position.\n\nindexPath\n\nThe index path to use as the destination for the animation.\n\nDiscussion\n\nUse this method to animate the dragged item to the specific location in the collection view. Typically, you use this method for content that originated in the collection view and is moving to a new location.\n\nSee Also\nAnimating Items to Their Destination\nfunc drop(UIDragItem, intoItemAt: IndexPath, rect: CGRect) -> UIDragAnimating\nAnimates the item to the specified rectangle in the collection view.\n\nRequired\n\nfunc drop(UIDragItem, to: UIDragPreviewTarget) -> UIDragAnimating\nAnimates the item to an arbitrary location in your view hierarchy.\n\nRequired\n\nfunc drop(UIDragItem, to: UICollectionViewDropPlaceholder) -> UICollectionViewDropPlaceholderContext\nAnimates the item to the specified location and inserts a placeholder cell at that location.\n\nRequired"
  },
  {
    "title": "init(delegate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledate/3972031-init",
    "html": "Parameters\ndelegate\n\nA delegate object that a calendar view asks about selectable dates, and informs of changes to the selection of a single date."
  },
  {
    "title": "UICalendarSelectionSingleDateDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionsingledatedelegate",
    "html": "Topics\nGetting selectable dates\nfunc dateSelection(UICalendarSelectionSingleDate, canSelectDate: DateComponents?) -> Bool\nReturns whether a user can select a date represented by date components in the calendar view.\nChanging the selected date\nfunc dateSelection(UICalendarSelectionSingleDate, didSelectDate: DateComponents?)\nInforms the delegate that a user selected a date represented by date components.\n\nRequired\n\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nSetting the selection delegate\nvar delegate: UICalendarSelectionSingleDateDelegate?\nA delegate object that a calendar view asks about selectable dates and informs of changes to the selection of a single date."
  },
  {
    "title": "UIStackView.Alignment.leading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/leading",
    "html": "Discussion\n\nThis value is equivalent to the top alignment for horizontal stacks.\n\nThe following image shows an example of a vertical stack view that uses the UIStackView.Alignment.leading alignment."
  },
  {
    "title": "NSLayoutConstraint.Attribute.notAnAttribute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/notanattribute",
    "html": "Discussion\n\nUse this value when creating a constraint that assigns a constant to an attribute. For example, item1.height >= 40. If a constraint only has one item, set the second item to nil, and set the second attribute to NSLayoutConstraint.Attribute.notAnAttribute."
  },
  {
    "title": "NSLayoutConstraint.Attribute.topMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/topmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutConstraint.Attribute.rightMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/rightmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutConstraint.Attribute.bottomMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/bottommargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutConstraint.Attribute.leftMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/leftmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "NSLayoutConstraint.Attribute.leadingMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/leadingmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "preferredLayoutAttributesFitting(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620132-preferredlayoutattributesfitting",
    "html": "Parameters\nlayoutAttributes\n\nThe attributes provided by the layout object. These attributes represent the values that the layout intends to apply to the cell.\n\nReturn Value\n\nThe final attributes to apply to the cell.\n\nDiscussion\n\nThe default implementation of this method adjusts the size values to accommodate changes made by a self-sizing cell. Subclasses can override this method and use it to adjust other layout attributes too. If you override this method and want the cell size adjustments, call super first and make your own modifications to the returned attributes.\n\nSee Also\nManaging layout changes\nfunc apply(UICollectionViewLayoutAttributes)\nApplies the specified layout attributes to the view.\nfunc willTransition(from: UICollectionViewLayout, to: UICollectionViewLayout)\nTells your view that the layout object of the collection view is about to change.\nfunc didTransition(from: UICollectionViewLayout, to: UICollectionViewLayout)\nTells your view that the layout object of the collection view changed."
  },
  {
    "title": "prepareForReuse() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620141-prepareforreuse",
    "html": "Discussion\n\nThe default implementation of this method does nothing. Subclasses such as UICollectionViewCell override this method and use it to perform relevant actions. So, if your subclass descends from UICollectionViewCell or another intermediate class, call super to ensure that your class gets the parent’s behavior.\n\nWhen the collection view dequeues your view for use, it calls this method before the corresponding dequeue method returns the view to your code. Override this method in your subclass to reset properties to their default values and make the view ready to use again. Don’t use this method to assign any new data to the view; that’s the responsibility of your data source object.\n\nThe collection view doesn’t call this method when you use reconfigureItems(at:) on UICollectionView or reconfigureItems(_:) on NSDiffableDataSourceSnapshot to update the contents of an existing cell.\n\nSee Also\nReusing cells\nvar reuseIdentifier: String?\nA string that identifies the purpose of the view."
  },
  {
    "title": "list(using:layoutEnvironment:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsection/3600714-list",
    "html": "See Also\nCreating a section\ninit(group: NSCollectionLayoutGroup)\nCreates a section containing the specified group.\nclass func orthogonalLayoutSectionForMediaItems() -> NSCollectionLayoutSection\nCreates an orthogonally scrolling section with system default spacing."
  },
  {
    "title": "customView(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decoration/3972054-customview",
    "html": "Parameters\ncustomViewProvider\n\nA block of code that creates and returns a calendar view decoration.\n\nReturn Value\n\nA calendar view decoration.\n\nDiscussion\n\nCreate and return a decoration view for the calendar view in your customViewProvider block. The calendar view will clip the decoration view to its parent’s bounds. The decoration view may not have any interactions."
  },
  {
    "title": "UICalendarView.DecorationSize.medium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decorationsize/medium",
    "html": "See Also\nDecoration View Sizes\ncase large\nA large relative decoration size in a calendar view.\ncase small\nA small relative decoration size in a calendar view."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decoration/3972057-init",
    "html": "See Also\nCreating a Default Decoration View\nstatic func `default`(color: UIColor?, size: UICalendarView.DecorationSize) -> UICalendarView.Decoration\nCreates a default calendar view decoration with a filled circle image, using the color and size you specify."
  },
  {
    "title": "didTransition(from:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620129-didtransition",
    "html": "Parameters\noldLayout\n\nThe collection view’s previous layout object.\n\nnewLayout\n\nThe current layout object associated with the collection view.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses can override this method and use it to finalize any behaviors associated with the change in layouts.\n\nSee Also\nManaging layout changes\nfunc preferredLayoutAttributesFitting(UICollectionViewLayoutAttributes) -> UICollectionViewLayoutAttributes\nGives the cell a chance to modify the attributes provided by the layout object.\nfunc apply(UICollectionViewLayoutAttributes)\nApplies the specified layout attributes to the view.\nfunc willTransition(from: UICollectionViewLayout, to: UICollectionViewLayout)\nTells your view that the layout object of the collection view is about to change."
  },
  {
    "title": "selectedDates | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselectionmultidate/3972022-selecteddates",
    "html": "See Also\nUpdating the selected dates\nfunc setSelectedDates([DateComponents], animated: Bool)\nUpdates the array of date component objects that represent selected dates in a calendar view, with an option to animate the change."
  },
  {
    "title": "session | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdropcoordinator/2897462-session",
    "html": "Required\n\nSee Also\nGetting the Session Information\nvar proposal: UICollectionViewDropProposal\nThe current proposal for how to incorporate the dropped items.\n\nRequired"
  },
  {
    "title": "list(using:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewcompositionallayout/3600951-list",
    "html": "See Also\nCreating a list layout\nstruct UICollectionLayoutListConfiguration\nA configuration for creating a list layout."
  },
  {
    "title": "UICalendarView.DecorationSize.large | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarview/decorationsize/large",
    "html": "See Also\nDecoration View Sizes\ncase medium\nA medium relative decoration size in a calendar view.\ncase small\nA small relative decoration size in a calendar view."
  },
  {
    "title": "representedElementCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617738-representedelementcategory",
    "html": "Discussion\n\nYou can use the value in this property to distinguish whether the layout attributes are intended for a cell, supplementary view, or decoration view.\n\nSee Also\nIdentifying the referenced item\nvar indexPath: IndexPath\nThe index path of the item in the collection view.\nvar representedElementKind: String?\nThe layout-specific identifier for the target view.\nenum UICollectionView.ElementCategory\nConstants specifying the type of view."
  },
  {
    "title": "size | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617733-size",
    "html": "Discussion\n\nSetting the value of this property also changes the size of the rectangle returned by the frame and bounds properties.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "UIActivityIndicatorView.Style.white | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityindicatorview/style/white",
    "html": "Deprecated\n\nUse UIActivityIndicatorView.Style.medium instead."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/3003640",
    "html": "See Also\nTesting the range values\nvar isInfinite: Bool\nReturns a Boolean indicating whether the specified float range is infinitely large.\nfunc UIFloatRangeIsEqualToRange(UIFloatRange, UIFloatRange) -> Bool\nReturns a Boolean indicating whether two float ranges are equivalent.\nDeprecated"
  },
  {
    "title": "infinite | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1621319-infinite",
    "html": "See Also\nCreating a float range\ninit()\ninit(minimum: CGFloat, maximum: CGFloat)\nReturns a new float range structure from the given components.\nstatic let zero: UIFloatRange\nA range whose minimum and maximum are both 0.0."
  },
  {
    "title": "UIStackView.Alignment.firstBaseline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/firstbaseline",
    "html": "Discussion\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Alignment.firstBaseline alignment."
  },
  {
    "title": "NSCollectionLayoutDecorationItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutdecorationitem",
    "html": "Overview\n\nEach type of decoration item must have a unique element kind. Consider tracking these strings together in a way that makes it straightforward to identify each element, for example:\n\nstruct ElementKind {\n    static let badge = \"badge-element-kind\"\n    static let background = \"background-element-kind\"\n    static let sectionHeader = \"section-header-element-kind\"\n    static let sectionFooter = \"section-footer-element-kind\"\n    static let layoutHeader = \"layout-header-element-kind\"\n    static let layoutFooter = \"layout-footer-element-kind\"\n}\n\n\nAdd a background to a section by setting that section’s decorationItems property:\n\nlet sectionBackground = NSCollectionLayoutDecorationItem.background(\n        elementKind: ElementKind.background)\n\n\nsection.decorationItems = [sectionBackground]\n\n\nlet layout = UICollectionViewCompositionalLayout(section: section)\nlayout.register(\n    SectionBackgroundDecorationView.self,\n    forDecorationViewOfKind: ElementKind.background)\nreturn layout\n\n\nTopics\nCreating a background\nclass func background(elementKind: String) -> Self\nCreates a section background with a string to identify the element kind.\nGetting the element kind\nvar elementKind: String\nA string that identifies the type of decoration item.\nSpecifying stacking order\nvar zIndex: Int\nThe vertical stacking order of the decoration item in relation to other items in the section.\nRelationships\nInherits From\nNSCollectionLayoutItem\nConforms To\nNSCopying\nSee Also\nAppearance\nclass NSCollectionLayoutAnchor\nAn object that defines how to attach a supplementary item to an item in a collection view.\nclass NSCollectionLayoutSupplementaryItem\nAn object used to add an extra visual decoration to an item in a collection view.\nclass NSCollectionLayoutBoundarySupplementaryItem\nAn object used to add headers or footers to a collection view."
  },
  {
    "title": "transform | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199125-transform",
    "html": "Required\n\nSee Also\nConfiguring position\nvar frame: CGRect\nThe frame rectangle, which describes the item's location and size in its section's coordinate system.\n\nRequired\n\nvar bounds: CGRect\nThe bounds rectangle, which describes the item's location and size in its own coordinate system.\n\nRequired\n\nvar center: CGPoint\nThe center point of the item's frame rectangle.\n\nRequired\n\nvar transform3D: CATransform3D\nThe 3D transform applied to the item.\n\nRequired"
  },
  {
    "title": "UIStackView.Distribution.equalSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/distribution/equalspacing",
    "html": "Discussion\n\nWhen the arranged views don’t fill the stack view, it pads the spacing between the views evenly. If the arranged views don’t fit within the stack view, it shrinks the views according to their compression resistance priority. If there’s any ambiguity, the stack view shrinks the views based on their index in the arrangedSubviews array.\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Distribution.equalSpacing distribution."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199122-name",
    "html": "Required\n\nSee Also\nIdentifying the item\nvar representedElementKind: String?\nA string that identifies the type of item.\n\nRequired\n\nvar representedElementCategory: UICollectionView.ElementCategory\nA category that identifies the item, such as decoration or supplementary view.\n\nRequired"
  },
  {
    "title": "NSCollectionLayoutBoundarySupplementaryItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutboundarysupplementaryitem",
    "html": "Overview\n\nA boundary supplementary item is a specialized type of supplementary item (NSCollectionLayoutSupplementaryItem). You use boundary supplementary items to add headers or footers to a section of a collection view or the entire collection view.\n\nEach type of supplementary item must have a unique element kind. Consider tracking these strings together in a way that makes it straightforward to identify each element, for example:\n\nstruct ElementKind {\n    static let badge = \"badge-element-kind\"\n    static let background = \"background-element-kind\"\n    static let sectionHeader = \"section-header-element-kind\"\n    static let sectionFooter = \"section-footer-element-kind\"\n    static let layoutHeader = \"layout-header-element-kind\"\n    static let layoutFooter = \"layout-footer-element-kind\"\n}\n\n\nAdd boundary supplementary items to a section by setting that section's boundarySupplementaryItems property:\n\nlet section = NSCollectionLayoutSection(group: group)\n\n\nlet headerFooterSize = NSCollectionLayoutSize(widthDimension: .fractionalWidth(1.0),\n                                             heightDimension: .estimated(44))\n    \nlet sectionHeader = NSCollectionLayoutBoundarySupplementaryItem(layoutSize: headerFooterSize,\n                                                               elementKind: ElementKind.sectionHeader,\n                                                                 alignment: .top)\nlet sectionFooter = NSCollectionLayoutBoundarySupplementaryItem(layoutSize: headerFooterSize,\n                                                               elementKind: ElementKind.sectionFooter,\n                                                                 alignment: .bottom)\n    \nsection.boundarySupplementaryItems = [sectionHeader, sectionFooter]\n\n\nTopics\nCreating a boundary supplementary item\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, alignment: NSRectAlignment)\nCreates a boundary supplementary item of the specified size and element kind, with an alignment relative to a section or layout.\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, alignment: NSRectAlignment, absoluteOffset: CGPoint)\nCreates a boundary supplementary item of the specified size and element kind, with an alignment relative to a section or layout at an absolute offset.\nSpecifying scrolling behavior\nvar pinToVisibleBounds: Bool\nA Boolean value that indicates whether a header or footer is pinned to the top or bottom visible boundary of the section or layout it’s attached to.\nSpecifying position\nvar offset: CGPoint\nThe floating-point value of the boundary supplementary item’s offset from the section or layout it’s attached to.\nvar alignment: NSRectAlignment\nThe alignment of the boundary supplementary item relative to the section or layout it’s attached to.\nvar extendsBoundary: Bool\nA Boolean value that indicates whether a boundary supplementary item extends the content area of the section or layout it’s attached to.\nRelationships\nInherits From\nNSCollectionLayoutSupplementaryItem\nConforms To\nNSCopying\nSee Also\nAppearance\nclass NSCollectionLayoutAnchor\nAn object that defines how to attach a supplementary item to an item in a collection view.\nclass NSCollectionLayoutSupplementaryItem\nAn object used to add an extra visual decoration to an item in a collection view.\nclass NSCollectionLayoutDecorationItem\nAn object used to add a background to a section of a collection view."
  },
  {
    "title": "defaultContentConfiguration() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600459-defaultcontentconfiguration",
    "html": "Return Value\n\nA default list content configuration. The system determines default values for the configuration according to the section where the cell appears.\n\nDiscussion\n\nThe default content configuration has preconfigured default styling, but doesn’t contain any content. After you get the default configuration, you assign your content to it, customize any other properties, and assign it to the cell as the current content configuration.\n\nvar content = cell.defaultContentConfiguration()\n\n\n// Configure content.\ncontent.image = UIImage(systemName: \"star\")\ncontent.text = \"Favorites\"\n\n\n// Customize appearance.\ncontent.imageProperties.tintColor = .purple\n\n\ncell.contentConfiguration = content\n"
  },
  {
    "title": "apply(_:animatingDifferences:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdiffabledatasource/3795617-apply",
    "html": "See Also\nUpdating data\nfunc snapshot() -> NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>\nReturns a representation of the current state of the data in the collection view.\nfunc apply(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, animatingDifferences: Bool, completion: (() -> Void)?)\nUpdates the UI to reflect the state of the data in the snapshot, optionally animating the UI changes and executing a completion handler.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes.\nfunc applySnapshotUsingReloadData(NSDiffableDataSourceSnapshot<SectionIdentifierType, ItemIdentifierType>, completion: (() -> Void)?)\nResets the UI to reflect the state of the data in the snapshot without computing a diff or animating the changes, optionally executing a completion handler."
  },
  {
    "title": "collisionBehavior(_:endedContactFor:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624833-collisionbehavior",
    "html": "Parameters\nbehavior\n\nThe collision behavior that owns the dynamic items that collided.\n\nitem1\n\nThe first of the two dynamic items participating in the collision.\n\nitem2\n\nThe second of the two dynamic items participating in the collision.\n\nSee Also\nResponding to UIKit Dynamics collisions\nfunc collisionBehavior(UICollisionBehavior, beganContactFor: UIDynamicItem, withBoundaryIdentifier: NSCopying?, at: CGPoint)\nCalled when a collision, between a dynamic item and a collision boundary, has begun.\nfunc collisionBehavior(UICollisionBehavior, beganContactFor: UIDynamicItem, with: UIDynamicItem, at: CGPoint)\nCalled when a collision between two dynamic items has begun.\nfunc collisionBehavior(UICollisionBehavior, endedContactFor: UIDynamicItem, withBoundaryIdentifier: NSCopying?)\nCalled when a collision between a dynamic item and a boundary has ended."
  },
  {
    "title": "UISpringLoadedInteractionEffectState.possible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffectstate/possible",
    "html": "Discussion\n\nThe interaction view provides a visual cue to the user that spring loading is available.\n\nSee Also\nStates\ncase activated\nAn interaction state that indicates that the view was spring loaded.\ncase activating\nAn interaction state that indicates that spring loading is about to start.\ncase inactive\nAn interaction state that indicates that spring loading is not engaged."
  },
  {
    "title": "init(minimum:maximum:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1625016-init",
    "html": "See Also\nCreating a float range\ninit()\nstatic let infinite: UIFloatRange\nA range whose range is minus infinity to infinity.\nstatic let zero: UIFloatRange\nA range whose minimum and maximum are both 0.0."
  },
  {
    "title": "required | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilayoutpriority/1622241-required",
    "html": "Discussion\n\nDon’t specify a layout constraint that exceeds this number."
  },
  {
    "title": "sceneSizeStayPut | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilayoutpriority/3368156-scenesizestayput",
    "html": "Discussion\n\nSpecify constraint priorities that are either higher or lower than this value, rather than equal to it."
  },
  {
    "title": "maximum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1621305-maximum",
    "html": "Discussion\n\nFor sliding attachments, it represents the number of points to move along the axis of translation in the positive direction. For pin attachments, it represents the number of radians to rotate in the clockwise direction. This value must be greater than or equal to 0.\n\nSee Also\nGetting the range values\nvar minimum: CGFloat\nThe minimum range of motion for sliding and pin attachments."
  },
  {
    "title": "NSLayoutConstraint.Attribute.trailingMargin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslayoutconstraint/attribute/trailingmargin",
    "html": "Discussion\n\nFor UIView objects, the margins are defined by their layoutMargins property."
  },
  {
    "title": "reuseIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620136-reuseidentifier",
    "html": "Discussion\n\nThe collection view identifies and queues reusable views using their reuse identifiers. The collection view sets this value when it first creates the view, and the value cannot be changed later. When your data source is prompted to provide a given view, it can use the reuse identifier to dequeue a view of the appropriate type.\n\nSee Also\nReusing cells\nfunc prepareForReuse()\nPerforms any clean up necessary to prepare the view for use again."
  },
  {
    "title": "apply(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionreusableview/1620139-apply",
    "html": "Parameters\nlayoutAttributes\n\nThe layout attributes to apply.\n\nDiscussion\n\nThe default implementation of this method does nothing.\n\nIf the layout object supports custom layout attributes, you can use this method to apply those attributes to the view. In such a case, the layoutAttributes parameter should contain an instance of a subclass of UICollectionViewLayoutAttributes. You do not need to override this method to support the standard layout attributes of the UICollectionViewLayoutAttributes class. The collection view applies those attributes automatically.\n\nSee Also\nManaging layout changes\nfunc preferredLayoutAttributesFitting(UICollectionViewLayoutAttributes) -> UICollectionViewLayoutAttributes\nGives the cell a chance to modify the attributes provided by the layout object.\nfunc willTransition(from: UICollectionViewLayout, to: UICollectionViewLayout)\nTells your view that the layout object of the collection view is about to change.\nfunc didTransition(from: UICollectionViewLayout, to: UICollectionViewLayout)\nTells your view that the layout object of the collection view changed."
  },
  {
    "title": "init(forSupplementaryViewOfKind:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617801-init",
    "html": "Parameters\nelementKind\n\nA string that identifies the type of supplementary view.\n\nindexPath\n\nThe index path of the view.\n\nReturn Value\n\nA new layout attributes object whose precise type matches the type of the class used to call this method.\n\nDiscussion\n\nUse this method to create a layout attributes object for a supplementary view in the collection view. Like cells, supplementary views present data that is managed by the collection view’s data source. But unlike cells, supplementary views are typically designed for a special purpose. For example, header and footer views are laid out differently than cells and can be provided for individual sections or for the collection view as a whole.\n\nIt is up to you to decide how to use the indexPath parameter to identify a given supplementary view. Typically, you use the elementKind parameter to identify the type of the supplementary view and the indexPath information to distinguish between different instances of that view.\n\nSee Also\nCreating layout attributes\ninit(forCellWith: IndexPath)\nCreates and returns a layout attributes object that represents a cell with the specified index path.\ninit(forDecorationViewOfKind: String, with: IndexPath)\nCreates and returns a layout attributes object that represents the specified decoration view."
  },
  {
    "title": "UICollectionViewFlowLayoutInvalidationContext | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewflowlayoutinvalidationcontext",
    "html": "Overview\n\nThe flow layout object creates instances of this class when it needs to invalidate its contents in response to changes. You can also create instances when invalidating the flow layout manually.\n\nTopics\nSpecifying what to invalidate\nvar invalidateFlowLayoutDelegateMetrics: Bool\nA Boolean indicating whether to recompute the size of items and views in the layout.\nvar invalidateFlowLayoutAttributes: Bool\nA Boolean indicating whether to recompute the layout attributes for items and views in the layout.\nRelationships\nInherits From\nUICollectionViewLayoutInvalidationContext\nSee Also\nManual layouts\nCustomizing Collection View Layouts\nCustomize a view layout by changing the size of cells in the flow or implementing a mosaic style.\nclass UICollectionViewLayout\nAn abstract base class for generating layout information for a collection view.\nclass UICollectionViewFlowLayout\nA layout object that organizes items into a grid with optional header and footer views for each section.\nclass UICollectionViewTransitionLayout\nA special type of layout object that lets you implement behaviors when changing from one layout to another in your collection view.\nclass UICollectionViewLayoutAttributes\nA layout object that manages the layout-related attributes for a given item in a collection view."
  },
  {
    "title": "elapsedTime | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621202-elapsedtime",
    "html": "Return Value\n\nThe elapsed time since the dynamic animator started running.\n\nSee Also\nAccessing a dynamic animator’s state\nvar isRunning: Bool\nReturns true if the dynamic animator is running.\nvar behaviors: [UIDynamicBehavior]\nThe dynamic behaviors managed by a dynamic animator.\nvar referenceView: UIView?\nThe view that a dynamic animator was initialized with.\nfunc updateItem(usingCurrentState: UIDynamicItem)\nAsks a dynamic animator to read the current state of a dynamic item, replacing the animator’s internal representation of the item’s state."
  },
  {
    "title": "removeBehavior(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621201-removebehavior",
    "html": "Parameters\nbehavior\n\nThe dynamic behavior instance that you want to remove from the animator.\n\nThe dynamic animator ignores your use of this method if you:\n\nProvide a nil value\n\nProvide a dynamic behavior instance that is not part of the animator’s behavior hierarchy\n\nSee Also\nInitializing and managing a dynamic animator\ninit(referenceView: UIView)\nInitializes a dynamic animator with a specified view as its reference view.\ninit(collectionViewLayout: UICollectionViewLayout)\nInitializes a dynamic animator with a specified collection view layout.\nfunc items(in: CGRect) -> [UIDynamicItem]\nReturns the dynamic items, from the animator’s behaviors, that intersect a specified rectangle.\nfunc addBehavior(UIDynamicBehavior)\nAdds a dynamic behavior to a dynamic animator.\nfunc removeAllBehaviors()\nRemoves all of the dynamic behaviors from a dynamic animator."
  },
  {
    "title": "minimum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1621300-minimum",
    "html": "Discussion\n\nFor sliding attachments, it represents the number of points to move along the axis of translation in the negative direction. For pin attachments, it represents the number of radians to rotate in the counter-clockwise direction. This value must be less than or equal to 0.\n\nSee Also\nGetting the range values\nvar maximum: CGFloat\nThe maximum range of motion for sliding and pin attachments."
  },
  {
    "title": "addCompletion(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidraganimating/2891061-addcompletion",
    "html": "Required\n\nParameters\ncompletion\n\nA block that sets animatable view properties.\n\nSee Also\nAdding animations\nfunc addAnimations(() -> Void)\nAdds an animation block for modifying a view animation while it’s running.\n\nRequired"
  },
  {
    "title": "isFinished | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisymboleffectcompletioncontext/4213129-isfinished",
    "html": "See Also\nDetermining completion status\nvar effect: SymbolEffect\nThe symbol effect that completed.\nvar sender: AnyObject?\nThe object, an image view or bar button item, that received the symbol effect."
  },
  {
    "title": "UIFloatRangeIsEqualToRange(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/3003641-uifloatrangeisequaltorange",
    "html": "Parameters\nrange\n\nThe first range to compare.\n\notherRange\n\nThe second range to compare.\n\nDiscussion\n\nTwo ranges are considered equal when their minimum values are the same and their maximum values are the same. In practice, the minimum and maximum values do not have to be exactly equal, but the difference between each pair of values must be less than FLT_EPSILON.\n\nSee Also\nTesting the range values\nvar isInfinite: Bool\nReturns a Boolean indicating whether the specified float range is infinitely large.\nstatic func == (UIFloatRange, UIFloatRange) -> Bool\nReturns a Boolean indicating whether two float ranges are equivalent."
  },
  {
    "title": "isInfinite | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1621299-isinfinite",
    "html": "Parameters\nrange\n\nThe range value to check.\n\nSee Also\nTesting the range values\nfunc UIFloatRangeIsEqualToRange(UIFloatRange, UIFloatRange) -> Bool\nReturns a Boolean indicating whether two float ranges are equivalent.\nDeprecated\nstatic func == (UIFloatRange, UIFloatRange) -> Bool\nReturns a Boolean indicating whether two float ranges are equivalent."
  },
  {
    "title": "zero | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1621313-zero",
    "html": "See Also\nCreating a float range\ninit()\ninit(minimum: CGFloat, maximum: CGFloat)\nReturns a new float range structure from the given components.\nstatic let infinite: UIFloatRange\nA range whose range is minus infinity to infinity."
  },
  {
    "title": "bottom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/1616234-bottom",
    "html": "Discussion\n\nThis value is equivalent to the UIStackView.Alignment.trailing alignment for vertical stacks.\n\nThe following image shows an example of a horizontal stack view that uses the bottom alignment."
  },
  {
    "title": "UIStackView.Alignment.trailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/trailing",
    "html": "Discussion\n\nThis value is equivalent to the bottom alignment for horizontal stacks.\n\nThe following image shows an example of a vertical stack view that uses the UIStackView.Alignment.trailing alignment."
  },
  {
    "title": "top | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/1616238-top",
    "html": "Discussion\n\nThis value is equivalent to the UIStackView.Alignment.leading alignment for vertical stacks.\n\nThe following image shows an example of a horizontal stack view that uses the top alignment."
  },
  {
    "title": "UIStackView.Alignment.center | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/center",
    "html": "Discussion\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Alignment.center alignment."
  },
  {
    "title": "UIStackView.Distribution.equalCentering | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/distribution/equalcentering",
    "html": "Discussion\n\nIf the arranged views don’t fit within the stack view, it shrinks the spacing until it reaches the minimum spacing defined by its spacing property. If the views still don’t fit, the stack view shrinks the arranged views according to their compression resistance priority. If there’s any ambiguity, the stack view shrinks the views based on their index in the arrangedSubviews array.\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Distribution.equalSpacing distribution.\n\nNote\n\nThe stack view maintains the intrinsic content size of its arranged views at the expense of the center-to-center spacing. Similarly, it maintains the minimum spacing between views at the expense of the view’s intrinsic content size."
  },
  {
    "title": "UIStackView.Distribution.fillProportionally | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/distribution/fillproportionally",
    "html": "Discussion\n\nThe views resize proportionally according to their intrinsic content size along the stack view’s axis.\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Distribution.fillProportionally distribution."
  },
  {
    "title": "UIStackView.Distribution.fill | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/distribution/fill",
    "html": "Discussion\n\nWhen the arranged views don’t fit within the stack view, it shrinks the views according to their compression resistance priority. If the arranged views don’t fill the stack view, it stretches the views according to their hugging priority. If there’s any ambiguity, the stack view resizes the arranged views based on their index in the arrangedSubviews array.\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Distribution.fill distribution."
  },
  {
    "title": "transform3D | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199126-transform3d",
    "html": "Required\n\nSee Also\nConfiguring position\nvar frame: CGRect\nThe frame rectangle, which describes the item's location and size in its section's coordinate system.\n\nRequired\n\nvar bounds: CGRect\nThe bounds rectangle, which describes the item's location and size in its own coordinate system.\n\nRequired\n\nvar center: CGPoint\nThe center point of the item's frame rectangle.\n\nRequired\n\nvar transform: CGAffineTransform\nThe transform applied to the item, relative to the center of its bounds.\n\nRequired"
  },
  {
    "title": "NSCollectionLayoutSectionVisibleItemsInvalidationHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsectionvisibleitemsinvalidationhandler",
    "html": "Discussion\n\nEach section of a collection view layout can have a visible items invalidation handler. You use this handler to perform custom animations on the items currently visible within the bounds of that section. The handler is called before each layout cycle, any time an animation occurs in that section due to changes such as adding or removing items, scrolling the section, or rotating the device.\n\nlet section = NSCollectionLayoutSection(group: group)\n    \nsection.visibleItemsInvalidationHandler = { visibleItems, scrollOffset, layoutEnvironment in\n    // Perform animations on the visible items.\n}\n\n\nSee Also\nLayout updates\nprotocol NSCollectionLayoutVisibleItem\nAn item that’s currently visible within the bounds of a section.\nclass UICollectionViewUpdateItem\nAn object that describes a single change to make to an item in a collection view.\nclass UICollectionViewFocusUpdateContext\nA context object that stores information specific to a focus update in a collection view.\nclass UICollectionViewLayoutInvalidationContext\nA context object that declares which parts of your layout need to be updated when the layout is invalidated."
  },
  {
    "title": "zIndex | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199127-zindex",
    "html": "Required"
  },
  {
    "title": "frame | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199119-frame",
    "html": "Required\n\nSee Also\nConfiguring position\nvar bounds: CGRect\nThe bounds rectangle, which describes the item's location and size in its own coordinate system.\n\nRequired\n\nvar center: CGPoint\nThe center point of the item's frame rectangle.\n\nRequired\n\nvar transform: CGAffineTransform\nThe transform applied to the item, relative to the center of its bounds.\n\nRequired\n\nvar transform3D: CATransform3D\nThe 3D transform applied to the item.\n\nRequired"
  },
  {
    "title": "center | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199118-center",
    "html": "Required\n\nSee Also\nConfiguring position\nvar frame: CGRect\nThe frame rectangle, which describes the item's location and size in its section's coordinate system.\n\nRequired\n\nvar bounds: CGRect\nThe bounds rectangle, which describes the item's location and size in its own coordinate system.\n\nRequired\n\nvar transform: CGAffineTransform\nThe transform applied to the item, relative to the center of its bounds.\n\nRequired\n\nvar transform3D: CATransform3D\nThe 3D transform applied to the item.\n\nRequired"
  },
  {
    "title": "alpha | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199116-alpha",
    "html": "Required\n\nSee Also\nConfiguring appearance\nvar isHidden: Bool\nA Boolean value that determines whether the item is hidden.\n\nRequired"
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199121-ishidden",
    "html": "Required\n\nSee Also\nConfiguring appearance\nvar alpha: CGFloat\nThe transparency of the item.\n\nRequired"
  },
  {
    "title": "representedElementCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199123-representedelementcategory",
    "html": "Required\n\nSee Also\nIdentifying the item\nvar name: String\nThe name of the item.\n\nRequired\n\nvar representedElementKind: String?\nA string that identifies the type of item.\n\nRequired"
  },
  {
    "title": "NSCollectionLayoutSupplementaryItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutsupplementaryitem",
    "html": "Overview\n\nYou use supplementary items to attach additional views to your content. For example, you might attach a badge to an item or a frame around a group. A supplementary item follows the index path of the item it’s attached to.\n\nIf you want to create a header or footer for your layout or its sections, use a boundary supplementary item (NSCollectionLayoutBoundarySupplementaryItem) instead.\n\nEach type of supplementary item must have a unique element kind. Consider tracking these strings together in a way that makes it straightforward to identify each element, for example:\n\nstruct ElementKind {\n    static let badge = \"badge-element-kind\"\n    static let background = \"background-element-kind\"\n    static let sectionHeader = \"section-header-element-kind\"\n    static let sectionFooter = \"section-footer-element-kind\"\n    static let layoutHeader = \"layout-header-element-kind\"\n    static let layoutFooter = \"layout-footer-element-kind\"\n}\n\n\nAdd supplementary items to an item by passing in an array of supplementary items when you construct the item:\n\nlet itemSize = NSCollectionLayoutSize(widthDimension: .absolute(44),\n                                     heightDimension: .absolute(44))\n    \nlet badgeAnchor = NSCollectionLayoutAnchor(edges: [.top, .trailing],\n                                fractionalOffset: CGPoint(x: 0.3, y: -0.3))\n   \nlet badgeSize = NSCollectionLayoutSize(widthDimension: .absolute(20),\n                                      heightDimension: .absolute(20))\n    \nlet badge = NSCollectionLayoutSupplementaryItem(layoutSize: badgeSize,\n                                               elementKind: ElementKind.badge,\n                                           containerAnchor: badgeAnchor)\n    \nlet item = NSCollectionLayoutItem(layoutSize: itemSize,\n                          supplementaryItems: [badge])\n\n\nTopics\nCreating a supplementary item\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, containerAnchor: NSCollectionLayoutAnchor)\nCreates a supplementary item of the specified size and element kind, with an anchor relative to a container.\ninit(layoutSize: NSCollectionLayoutSize, elementKind: String, containerAnchor: NSCollectionLayoutAnchor, itemAnchor: NSCollectionLayoutAnchor)\nCreates a supplementary item of the specified size and element kind, an anchor relative to a container, and an anchor relative to an item.\nGetting the anchors\nvar itemAnchor: NSCollectionLayoutAnchor?\nThe anchor between the supplementary item and the item it's attached to.\nvar containerAnchor: NSCollectionLayoutAnchor\nThe anchor between the supplementary item and the container it's attached to.\nGetting the element kind\nvar elementKind: String\nA string that identifies the type of supplementary item.\nSpecifying stacking order\nvar zIndex: Int\nThe vertical stacking order of the supplementary item in relation to other items in the section.\nRelationships\nInherits From\nNSCollectionLayoutItem\nConforms To\nNSCopying\nSee Also\nAppearance\nclass NSCollectionLayoutAnchor\nAn object that defines how to attach a supplementary item to an item in a collection view.\nclass NSCollectionLayoutBoundarySupplementaryItem\nAn object used to add headers or footers to a collection view.\nclass NSCollectionLayoutDecorationItem\nAn object used to add a background to a section of a collection view."
  },
  {
    "title": "NSCollectionLayoutAnchor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutanchor",
    "html": "Overview\n\nYou use an anchor to attach a supplementary item to a specific item. An anchor contains information about where on the item your supplementary item is attached, including:\n\nAn edge or set of edges. You can attach a supplementary item to a single edge, or to a corner by specifying two adjacent edges.\n\nAn offset from the item. By default, the supplementary item is anchored within the specified edges of the item it’s attached to. You can change this location by providing a custom offset when you create an anchor.\n\nEdges\n\nThe leading and trailing edges for anchors differ in left-to-right versus right-to-left environments. In a left-to-right environment, the leading edge is on the left, and the trailing edge is on the right. In a right-to-left environment, the leading edge is on the right, and the trailing edge is on the left. This difference ensures that your collection view layout is built with support for right-to-left languages.\n\nThe following diagram shows anchor placement for the specified edges in a left-to-right environment.\n\nOffset\n\nYou can express anchor offset in these ways:\n\nAbsolute value. The offset is calculated as a point value. For example, an absolute x offset of 30.0 means that the origin of the supplementary item is offset by 30 points in the positive x direction.\n\nFractional value. The offset is calculated as a fraction of the supplementary item’s dimensions. For example, a fractional x offset of 0.3 means that the origin of the supplementary item is offset by 30% of the supplementary item’s width in the positive x direction.\n\nThe following code creates a basic badge and attaches it to an item’s top trailing corner.\n\nlet itemSize = NSCollectionLayoutSize(widthDimension: .absolute(44),\n                                     heightDimension: .absolute(44))\n    \nlet badgeAnchor = NSCollectionLayoutAnchor(edges: [.top, .trailing],\n                                fractionalOffset: CGPoint(x: 0.3, y: -0.3))\n    \nlet badgeSize = NSCollectionLayoutSize(widthDimension: .absolute(20),\n                                      heightDimension: .absolute(20))\n    \nlet badge = NSCollectionLayoutSupplementaryItem(layoutSize: badgeSize,\n                                               elementKind: \"badge\",\n                                           containerAnchor: badgeAnchor)\n    \nlet item = NSCollectionLayoutItem(layoutSize: itemSize,\n                          supplementaryItems: [badge])\n\n\n\n\nTopics\nCreating an anchor\ninit(edges: NSDirectionalRectEdge)\nCreates an anchor with the specified edges to attach to.\ninit(edges: NSDirectionalRectEdge, absoluteOffset: CGPoint)\nCreates an anchor with the specified edges to attach to, offset by the provided absolute value.\ninit(edges: NSDirectionalRectEdge, fractionalOffset: CGPoint)\nCreates an anchor with the specified edges to attach to, offset by the provided fractional value.\nGetting the edges\nvar edges: NSDirectionalRectEdge\nThe edges of the item an anchor is attached to.\nGetting the offset\nvar offset: CGPoint\nThe floating-point value of the anchor's offset from the item it's attached to.\nvar isAbsoluteOffset: Bool\nA Boolean value that indicates whether the anchor's offset is expressed as an absolute value.\nvar isFractionalOffset: Bool\nA Boolean value that indicates whether the anchor's offset is expressed as a fraction of its supplementary item's dimension.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nAppearance\nclass NSCollectionLayoutSupplementaryItem\nAn object used to add an extra visual decoration to an item in a collection view.\nclass NSCollectionLayoutBoundarySupplementaryItem\nAn object used to add headers or footers to a collection view.\nclass NSCollectionLayoutDecorationItem\nAn object used to add a background to a section of a collection view."
  },
  {
    "title": "NSCollectionLayoutGroupCustomItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitem",
    "html": "Overview\n\nYou use a custom item if you want to specify a layout with a custom arrangement, like a radial or diagonal layout. You use custom items within a group that’s created with custom(layoutSize:itemProvider:).\n\nInstead of providing a layout size for the custom item, like you do when you create an NSCollectionLayoutItem, you provide a frame instead.\n\nTopics\nCreating a custom item\ninit(frame: CGRect)\nCreates a custom item with the specified frame.\ninit(frame: CGRect, zIndex: Int)\nCreates a custom item with the specified frame and vertical stacking order in relation to other items in the group.\nGetting the frame\nvar frame: CGRect\nThe frame of the custom item.\nSpecifying stacking order\nvar zIndex: Int\nThe vertical stacking order of the custom item in relation to other items in the group.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nAdvanced layouts\ntypealias NSCollectionLayoutGroupCustomItemProvider\nA closure that creates and returns each of the custom group’s items."
  },
  {
    "title": "UICellAccessory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicellaccessory",
    "html": "Overview\n\nA cell accessory is a visual element that you can add to a list cell (UICollectionViewListCell). You use a cell accessory as a visual indicator or to let a user perform a cell-specific action like selecting, reordering, or deleting the cell. A cell accessory appears either on the leading or the trailing edge of a cell, outside of the cell’s content view.\n\nUIKit defines a set of standard system cell accessories. System accessories have default system-defined appearances, but you can make some customizations to them, like setting a custom tint color. You can’t customize the placement of system accessories. If you want additional customization, you can create a custom accessory with customView(configuration:).\n\nYou add accessories to a list cell by setting its accessories array.\n\ncell.accessories = [ \n    .checkmark(), \n    .disclosureIndicator(options: .init(tintColor: .systemGray)), \n    .delete(),\n    .reorder() \n]\n\n\nImportant\n\nThe system throws an exception if you include more than one instance of any system accessory. You can include multiple custom accessories.\n\nTopics\nCreating a disclosure indicator\nstatic func disclosureIndicator(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.DisclosureIndicatorOptions) -> UICellAccessory\nCreates a disclosure indicator system accessory with the specified display state and configuration options.\nstruct UICellAccessory.DisclosureIndicatorOptions\nConfiguration options for a disclosure indicator.\nCreating an outline disclosure\nstatic func outlineDisclosure(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.OutlineDisclosureOptions, actionHandler: UICellAccessory.ActionHandler?) -> UICellAccessory\nCreates an outline disclosure system accessory with the specified display state, configuration options, and optional action handler.\nstruct UICellAccessory.OutlineDisclosureOptions\nConfiguration options for an outline disclosure.\nCreating a popup menu accessory\nstatic func popUpMenu(UIMenu, displayed: UICellAccessory.DisplayedState, options: UICellAccessory.PopUpMenuOptions, selectedElementDidChangeHandler: UICellAccessory.MenuSelectedElementDidChangeHandler?) -> UICellAccessory\nCreates a popup menu system accessory with the specified menu, display state, configuration options, and optional selection handler.\ntypealias UICellAccessory.MenuSelectedElementDidChangeHandler\nA closure type that defines a handler to perform when a user selects an element in the menu.\nstruct UICellAccessory.PopUpMenuOptions\nConfiguration options for a popup menu accessory.\nCreating a checkmark accessory\nstatic func checkmark(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.CheckmarkOptions) -> UICellAccessory\nCreates a checkmark system accessory with the specified display state and configuration options.\nstruct UICellAccessory.CheckmarkOptions\nConfiguration options for a checkmark accessory.\nCreating a delete accessory\nstatic func delete(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.DeleteOptions, actionHandler: UICellAccessory.ActionHandler?) -> UICellAccessory\nCreates a delete system accessory with the specified display state, configuration options, and optional action handler.\nstruct UICellAccessory.DeleteOptions\nConfiguration options for a delete accessory.\nCreating an insert accessory\nstatic func insert(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.InsertOptions, actionHandler: UICellAccessory.ActionHandler?) -> UICellAccessory\nCreates an insert system accessory with the specified display state, configuration options, and optional action handler.\nstruct UICellAccessory.InsertOptions\nConfiguration options for an insert accessory.\nCreating a reorder accessory\nstatic func reorder(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.ReorderOptions) -> UICellAccessory\nCreates a reorder system accessory with the specified display state and configuration options.\nstruct UICellAccessory.ReorderOptions\nConfiguration options for a reorder accessory.\nCreating a multiselect accessory\nstatic func multiselect(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.MultiselectOptions) -> UICellAccessory\nCreates a multiselect system accessory with the specified display state and configuration options.\nstruct UICellAccessory.MultiselectOptions\nConfiguration options for a multiselect accessory.\nCreating a label accessory\nstatic func label(text: String, displayed: UICellAccessory.DisplayedState, options: UICellAccessory.LabelOptions) -> UICellAccessory\nCreates a label system accessory with the specified text, display state, and configuration options.\nstruct UICellAccessory.LabelOptions\nConfiguration options for a label accessory.\nCreating a detail accessory\nstatic func detail(displayed: UICellAccessory.DisplayedState, options: UICellAccessory.DetailOptions, actionHandler: UICellAccessory.ActionHandler?) -> UICellAccessory\nCreates a detail system accessory with the specified display state, configuration options, and optional action handler.\nstruct UICellAccessory.DetailOptions\nConfiguration options for a detail accessory.\nCreating a custom accessory\nstatic func customView(configuration: UICellAccessory.CustomViewConfiguration) -> UICellAccessory\nCreates a custom view accessory.\nstruct UICellAccessory.CustomViewConfiguration\nConfiguration options for a custom accessory.\nChecking the accessory's type\nlet accessoryType: UICellAccessory.AccessoryType\nThe type of the cell accessory.\nenum UICellAccessory.AccessoryType\nConstants that describe the type of the cell accessory.\nCustomizing appearance and placement\nenum UICellAccessory.LayoutDimension\nConstants that describe the layout dimension for the accessory.\nenum UICellAccessory.Placement\nConstants that describe the placement of the accessory within the cell.\nenum UICellAccessory.DisplayedState\nConstants that describe the cell-editing states that the accessory appears in.\nPerforming accessory actions\ntypealias UICellAccessory.ActionHandler\nA closure that the system calls when a user taps a cell accessory.\nSee Also\nManaging cell accessories\nvar accessories: [UICellAccessory]\nAn array of the accessories that decorate the cell."
  },
  {
    "title": "indentationLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600460-indentationlevel",
    "html": "Discussion\n\nThe indentation level sets automatically when you use a hierarchical data source, such as an NSDiffableDataSourceSectionSnapshot.\n\nSee Also\nCustomizing layout\nvar indentationWidth: CGFloat\nThe width of an indentation level.\nvar indentsAccessories: Bool\nA Boolean value that detemines whether the cell indents accessories on the leading side.\nvar separatorLayoutGuide: UILayoutGuide\nA guide for laying out separators in relation to the primary content in the cell."
  },
  {
    "title": "separatorLayoutGuide | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3601206-separatorlayoutguide",
    "html": "Discussion\n\nThis property only takes effect in a layout section that supports separators, like a section that you create using list(using:layoutEnvironment:).\n\nThe separator layout guide represents the frame of the separator, which the system uses to determine where to draw the separator at the bottom of the cell.\n\nBy default, when you apply a system-provided content configuration to a list cell, the separator automatically aligns to the primary text in the content view. For custom subviews in the cell, you need to add a constraint to this layout guide that connects it to the leading edge of the cell’s primary content.\n\nTo align the separators to your content, add constraints to the leading or trailing anchors of this layout guide.\n\nSee Also\nCustomizing layout\nvar indentationLevel: Int\nThe level of indentation for the cell.\nvar indentationWidth: CGFloat\nThe width of an indentation level.\nvar indentsAccessories: Bool\nA Boolean value that detemines whether the cell indents accessories on the leading side."
  },
  {
    "title": "updateSelectableDates() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicalendarselection/3972018-updateselectabledates",
    "html": "Discussion\n\nCall this function after you change the set of dates that are selectable in your calendar view."
  },
  {
    "title": "indentationWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600461-indentationwidth",
    "html": "Discussion\n\nThe overall indentation is the product of indentationWidth and indentationLevel.\n\nSee Also\nCustomizing layout\nvar indentationLevel: Int\nThe level of indentation for the cell.\nvar indentsAccessories: Bool\nA Boolean value that detemines whether the cell indents accessories on the leading side.\nvar separatorLayoutGuide: UILayoutGuide\nA guide for laying out separators in relation to the primary content in the cell."
  },
  {
    "title": "accessories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlistcell/3600458-accessories",
    "html": "Discussion\n\nSystem accessories have system-defined placement within the cell. The system automatically determines their rendering order and which side of the cell they appear on. The order of system accessories in the array doesn’t affect their placement.\n\nFor custom accessories, you determine their placement. The order of custom accessories in the array affects the order in which the system evaluates their UICellAccessory.Placement.Position.\n\nImportant\n\nThe system throws an exception if you include more than one instance of any system accessory. You can include multiple custom accessories.\n\nSee Also\nManaging cell accessories\nstruct UICellAccessory\nAn accessory in a collection view list cell."
  },
  {
    "title": "reloadItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3375783-reloaditems",
    "html": "Parameters\nidentifiers\n\nThe array of identifiers corresponding to the items to reload in the snapshot.\n\nSee Also\nReloading data\nfunc reconfigureItems([ItemIdentifierType])\nUpdates the data for the items you specify in the snapshot, preserving the existing cells for the items.\nvar reconfiguredItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reconfigured by the changes to the snapshot.\nvar reloadedItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections([SectionIdentifierType])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [SectionIdentifierType]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "reconfigureItems(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsdiffabledatasourcesnapshot/3804468-reconfigureitems",
    "html": "Parameters\nidentifiers\n\nAn array of identifiers corresponding to the items to update data for in the snapshot.\n\nDiscussion\n\nTo update the contents of existing (including prefetched) cells without replacing them with new cells, use this method instead of reloadItems(_:). For optimal performance, choose to reconfigure items instead of reloading items unless you have an explicit need to replace the existing cell with a new cell.\n\nYour cell provider must dequeue the same type of cell for the provided index path, and must return the same existing cell for a given index path. Because this method reconfigures existing cells, the collection view or table view doesn’t call prepareForReuse for each cell dequeued. If you need to return a different type of cell for an index path, use reloadItems(_:) instead.\n\nIf your cells are self-sizing, the collection view or table view resizes your cells after reconfiguring them.\n\nSet the animatingDifferences parameter to tell the collection view or table view whether to animate any size or layout changes that are a result of reconfiguration when you apply the snapshot to your data source. To avoid animations when setting specific properties, use performWithoutAnimation(_:) in your cell configuration logic.\n\nIf your collection view or table view uses a diffable data source, use this method. If your collection view uses a custom implementation of UICollectionViewDataSource, use reconfigureItems(at:) instead. If your table view uses a custom implementation of UITableViewDataSource, use reconfigureRows(at:) instead.\n\nSee Also\nReloading data\nvar reconfiguredItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reconfigured by the changes to the snapshot.\nfunc reloadItems([ItemIdentifierType])\nReloads the data within the specified items in the snapshot.\nvar reloadedItemIdentifiers: [ItemIdentifierType]\nIdentifies the items reloaded by the changes to the snapshot.\nfunc reloadSections([SectionIdentifierType])\nReloads the data within the specified sections of the snapshot.\nvar reloadedSectionIdentifiers: [SectionIdentifierType]\nIdentifies the sections reloaded by the changes to the snapshot."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/1625021-init",
    "html": "See Also\nCreating a float range\ninit(minimum: CGFloat, maximum: CGFloat)\nReturns a new float range structure from the given components.\nstatic let infinite: UIFloatRange\nA range whose range is minus infinity to infinity.\nstatic let zero: UIFloatRange\nA range whose minimum and maximum are both 0.0."
  },
  {
    "title": "collisionBehavior(_:beganContactFor:withBoundaryIdentifier:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624816-collisionbehavior",
    "html": "Parameters\nbehavior\n\nThe collision behavior that owns the dynamic item that has started contact with a boundary.\n\nitem\n\nThe dynamic item that has started contact with a boundary.\n\nidentifier\n\nThe identifier of the boundary that the dynamic item has started contact with.\n\np\n\nThe collision point on the boundary.\n\nSee Also\nResponding to UIKit Dynamics collisions\nfunc collisionBehavior(UICollisionBehavior, beganContactFor: UIDynamicItem, with: UIDynamicItem, at: CGPoint)\nCalled when a collision between two dynamic items has begun.\nfunc collisionBehavior(UICollisionBehavior, endedContactFor: UIDynamicItem, withBoundaryIdentifier: NSCopying?)\nCalled when a collision between a dynamic item and a boundary has ended.\nfunc collisionBehavior(UICollisionBehavior, endedContactFor: UIDynamicItem, with: UIDynamicItem)\nCalled when a collision between two dynamic items has ended."
  },
  {
    "title": "collisionBehavior(_:beganContactFor:with:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624835-collisionbehavior",
    "html": "Parameters\nbehavior\n\nThe collision behavior that owns the dynamic items that have started to contact each other.\n\nitem1\n\nThe first of the two dynamic items participating in the collision.\n\nitem2\n\nThe second of the two dynamic items participating in the collision.\n\np\n\nThe contact point for the collision. The coordinate system that pertains to a collision depends on how you initialized the associated animator. For details, read the Overview of UIDynamicAnimator.\n\nSee Also\nResponding to UIKit Dynamics collisions\nfunc collisionBehavior(UICollisionBehavior, beganContactFor: UIDynamicItem, withBoundaryIdentifier: NSCopying?, at: CGPoint)\nCalled when a collision, between a dynamic item and a collision boundary, has begun.\nfunc collisionBehavior(UICollisionBehavior, endedContactFor: UIDynamicItem, withBoundaryIdentifier: NSCopying?)\nCalled when a collision between a dynamic item and a boundary has ended.\nfunc collisionBehavior(UICollisionBehavior, endedContactFor: UIDynamicItem, with: UIDynamicItem)\nCalled when a collision between two dynamic items has ended."
  },
  {
    "title": "collisionBehavior(_:endedContactFor:withBoundaryIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollisionbehaviordelegate/1624834-collisionbehavior",
    "html": "Parameters\nbehavior\n\nThe collision behavior that owns the dynamic item that has ended contact.\n\nitem\n\nThe dynamic item that collided.\n\nidentifier\n\nThe identifier of the boundary that the dynamic item collided with.\n\nSee Also\nResponding to UIKit Dynamics collisions\nfunc collisionBehavior(UICollisionBehavior, beganContactFor: UIDynamicItem, withBoundaryIdentifier: NSCopying?, at: CGPoint)\nCalled when a collision, between a dynamic item and a collision boundary, has begun.\nfunc collisionBehavior(UICollisionBehavior, beganContactFor: UIDynamicItem, with: UIDynamicItem, at: CGPoint)\nCalled when a collision between two dynamic items has begun.\nfunc collisionBehavior(UICollisionBehavior, endedContactFor: UIDynamicItem, with: UIDynamicItem)\nCalled when a collision between two dynamic items has ended."
  },
  {
    "title": "init(from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/3081777-init",
    "html": "Relationships\nFrom Protocol\nDecodable\nSee Also\nEncoding and decoding\nfunc encode(to: Encoder)\nEncodes this value into the given encoder."
  },
  {
    "title": "UISpringLoadedInteractionEffectState.inactive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffectstate/inactive",
    "html": "Discussion\n\nThis state has no effect on the styling of the interaction view. It remains in its original style.\n\nSee Also\nStates\ncase activated\nAn interaction state that indicates that the view was spring loaded.\ncase activating\nAn interaction state that indicates that spring loading is about to start.\ncase possible\nAn interaction state that indicates that spring loading is available."
  },
  {
    "title": "preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1771750-preferredfontdescriptorwithtexts",
    "html": "Parameters\nstyle\n\nThe text style for which to return a font descriptor.\n\ntraitCollection\n\nThe trait collection containing the content size category information.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "encode(to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifloatrange/3081776-encode",
    "html": "Relationships\nFrom Protocol\nEncodable\nSee Also\nEncoding and decoding\ninit(from: Decoder)\nCreates a new instance by decoding from the given decoder."
  },
  {
    "title": "UICollectionViewUpdateItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewupdateitem",
    "html": "Overview\n\nYou don’t create instances of this class directly. When updating its content, the collection view object creates them and passes them to the layout object’s prepare(forCollectionViewUpdates:) method, which can use them to prepare the layout object for the upcoming changes.\n\nTopics\nAccessing the item changes\nvar indexPathBeforeUpdate: IndexPath?\nThe index path of the item before the update.\nvar indexPathAfterUpdate: IndexPath?\nThe index path of the item after the update.\nvar updateAction: UICollectionViewUpdateItem.Action\nThe action being performed on the item.\nenum UICollectionViewUpdateItem.Action\nConstants indicating the type of action being performed on an item.\nRelationships\nInherits From\nNSObject\nSee Also\nLayout updates\nprotocol NSCollectionLayoutVisibleItem\nAn item that’s currently visible within the bounds of a section.\ntypealias NSCollectionLayoutSectionVisibleItemsInvalidationHandler\nA closure called before each layout cycle to allow modification of items in a section immediately before they’re displayed.\nclass UICollectionViewFocusUpdateContext\nA context object that stores information specific to a focus update in a collection view.\nclass UICollectionViewLayoutInvalidationContext\nA context object that declares which parts of your layout need to be updated when the layout is invalidated."
  },
  {
    "title": "UICollectionViewLayoutInvalidationContext | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutinvalidationcontext",
    "html": "Overview\n\nLayout objects that are designed to support invalidation contexts can use the information in a UICollectionViewLayoutInvalidationContext object to optimize their behavior during the invalidation cycle. You can create an invalidation context object as a precursor to invalidating a layout object. After configuring the invalidation context object, pass it to the layout object’s invalidateLayout(with:) method, which is responsible for using the context object to update the layout efficiently. The collection view also creates invalidation contexts in response to specific changes. For example, it creates an invalidation context when you change the layout or data source object, when you insert or delete items, and when you call the reloadData() method.\n\nSubclassing Notes\n\nIf you create your own custom layout objects, you can subclass UICollectionViewLayoutInvalidationContext and add properties to specify which aspects of your layout data can be invalidated separately. You must then design your layout object to check for these properties and update the layout appropriately.\n\nFor more information about how to support custom invalidation contexts in your layout objects, see UICollectionViewLayout.\n\nTopics\nInvalidating the Collection View Data\nvar invalidateEverything: Bool\nA Boolean that indicates that all layout data should be marked as invalid.\nvar invalidateDataSourceCounts: Bool\nA Boolean that indicates whether the layout should ask for new section and item counts.\nInvalidating the Content Area\nvar contentOffsetAdjustment: CGPoint\nThe delta value to be applied to the collection view’s content offset.\nvar contentSizeAdjustment: CGSize\nThe delta value to be applied to the collection view’s content size.\nInvalidating Specific Items\nfunc invalidateItems(at: [IndexPath])\nAdds the cells at the specified index paths to the list of invalid items.\nfunc invalidateSupplementaryElements(ofKind: String, at: [IndexPath])\nAdds the supplementary views at the specified index paths to the list of invalid items.\nfunc invalidateDecorationElements(ofKind: String, at: [IndexPath])\nAdds the decoration views at the specified index paths to the list of invalid items.\nvar invalidatedItemIndexPaths: [IndexPath]?\nAn array of index paths representing the cells that were invalidated.\nvar invalidatedSupplementaryIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the supplementary views that were invalidated.\nvar invalidatedDecorationIndexPaths: [String : [IndexPath]]?\nA dictionary that identifies the decoration views that were invalidated.\nInvalidating the Order of Items\nvar previousIndexPathsForInteractivelyMovingItems: [IndexPath]?\nAn array of index paths representing the previous location of moving items in the collection view.\nvar targetIndexPathsForInteractivelyMovingItems: [IndexPath]?\nAn array of index paths representing the new location of moving items in the collection view.\nvar interactiveMovementTarget: CGPoint\nThe current point used to determine the placement of moving items.\nRelationships\nInherits From\nNSObject\nSee Also\nLayout updates\nprotocol NSCollectionLayoutVisibleItem\nAn item that’s currently visible within the bounds of a section.\ntypealias NSCollectionLayoutSectionVisibleItemsInvalidationHandler\nA closure called before each layout cycle to allow modification of items in a section immediately before they’re displayed.\nclass UICollectionViewUpdateItem\nAn object that describes a single change to make to an item in a collection view.\nclass UICollectionViewFocusUpdateContext\nA context object that stores information specific to a focus update in a collection view."
  },
  {
    "title": "UICollectionViewFocusUpdateContext | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewfocusupdatecontext",
    "html": "Overview\n\nWhen focus changes, the collection view delegate receives a context object with the relevant information. Your delegate methods use the information in this object to create animations or to perform other tasks related to the change in focus.\n\nTopics\nLocating focusable items in the collection view\nvar previouslyFocusedIndexPath: IndexPath?\nThe index path of the collection view cell that previously had the focus.\nvar nextFocusedIndexPath: IndexPath?\nThe index path of the collection view cell that’s receiving the focus.\nRelationships\nInherits From\nUIFocusUpdateContext\nSee Also\nLayout updates\nprotocol NSCollectionLayoutVisibleItem\nAn item that’s currently visible within the bounds of a section.\ntypealias NSCollectionLayoutSectionVisibleItemsInvalidationHandler\nA closure called before each layout cycle to allow modification of items in a section immediately before they’re displayed.\nclass UICollectionViewUpdateItem\nAn object that describes a single change to make to an item in a collection view.\nclass UICollectionViewLayoutInvalidationContext\nA context object that declares which parts of your layout need to be updated when the layout is invalidated."
  },
  {
    "title": "Customizing Collection View Layouts | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/views_and_controls/collection_views/layouts/customizing_collection_view_layouts",
    "html": "Overview\n\nTo lay out UICollectionView cells in a simple grid, you can use UICollectionViewFlowLayout directly. For more flexibility, you can subclass UICollectionViewLayout to create advanced layouts.\n\nThis sample app demonstrates two custom layout subclasses:\n\nColumnFlowLayout — A UICollectionViewFlowLayout subclass that arranges cells in a list format for narrow screens, or as a grid for wider screens. See “For a Simple Grid, Size Cells Dynamically,” below.\n\nMosaicLayout — A UICollectionViewLayout subclass that lays out cells in a mosaic-style, nonconforming grid. See “For a Complex Grid, Define Cell Sizes Explicitly,” below.\n\nThe app opens to the Friends view controller, which uses a column flow layout to display a list of people. Tapping any cell takes you to the Feed view controller, which uses a mosaic layout to display photos from the user’s photo library.\n\nTapping the cloud icon to the right of the navigation bar demonstrates batched animations for inserting, deleting, moving, and reloading items in the collection view. For more information, see “Perform Batch Updates,” below. Using pull-to-refresh on the collection view resets the data.\n\nFor a Simple Grid, Size Cells Dynamically\n\nColumnFlowLayout is a subclass of UICollectionViewFlowLayout that uses the size of the collection view to determine the width of its cells. If only one cell fits comfortably horizontally, the layout arranges the cells to occupy the entire width of the collection view. Otherwise, the layout displays multiple columns of cells with a fixed width.\n\nIn practice, on iPhone devices in portrait mode, ColumnFlowLayout displays a single vertical column of cells. In landscape mode, or on an iPad, it displays a grid layout.\n\nUse the prepare() function to compute the available screen width of the device and set the itemSize property accordingly.\n\noverride func prepare() {\n    super.prepare()\n\n\n    guard let collectionView = collectionView else { return }\n    \n    let availableWidth = collectionView.bounds.inset(by: collectionView.layoutMargins).width\n    let maxNumColumns = Int(availableWidth / minColumnWidth)\n    let cellWidth = (availableWidth / CGFloat(maxNumColumns)).rounded(.down)\n    \n    self.itemSize = CGSize(width: cellWidth, height: cellHeight)\n    self.sectionInset = UIEdgeInsets(top: self.minimumInteritemSpacing, left: 0.0, bottom: 0.0, right: 0.0)\n    self.sectionInsetReference = .fromSafeArea\n}\n\n\nFor a Complex Grid, Define Cell Sizes Explicitly\n\nIf you need more customization than is possible with a subclass of UICollectionViewFlowLayout, subclass UICollectionViewLayout instead.\n\nMosaicLayout is a UICollectionViewLayout subclass that displays an arbitrary number of cells with differing sizes and aspect ratios. The FeedViewController class uses a mosaic layout to display images from the user’s photo library. Cells are organized into rows in one of four styles, from a single cell to multiple cells in varying layouts.\n\nCalculate Cell Dimensions\n\nThe prepare() method is called whenever a layout is invalidated. Override this method to calculate the position and size of every cell, as well as the total dimensions for the entire layout.\n\noverride func prepare() {\n    super.prepare()\n    \n    guard let collectionView = collectionView else { return }\n\n\n    // Reset cached information.\n    cachedAttributes.removeAll()\n    contentBounds = CGRect(origin: .zero, size: collectionView.bounds.size)\n    \n    // For every item in the collection view:\n    //  - Prepare the attributes.\n    //  - Store attributes in the cachedAttributes array.\n    //  - Combine contentBounds with attributes.frame.\n    let count = collectionView.numberOfItems(inSection: 0)\n    \n    var currentIndex = 0\n    var segment: MosaicSegmentStyle = .fullWidth\n    var lastFrame: CGRect = .zero\n    \n    let cvWidth = collectionView.bounds.size.width\n    \n    while currentIndex < count {\n        let segmentFrame = CGRect(x: 0, y: lastFrame.maxY + 1.0, width: cvWidth, height: 200.0)\n        \n        var segmentRects = [CGRect]()\n        switch segment {\n        case .fullWidth:\n            segmentRects = [segmentFrame]\n            \n        case .fiftyFifty:\n            let horizontalSlices = segmentFrame.dividedIntegral(fraction: 0.5, from: .minXEdge)\n            segmentRects = [horizontalSlices.first, horizontalSlices.second]\n            \n        case .twoThirdsOneThird:\n            let horizontalSlices = segmentFrame.dividedIntegral(fraction: (2.0 / 3.0), from: .minXEdge)\n            let verticalSlices = horizontalSlices.second.dividedIntegral(fraction: 0.5, from: .minYEdge)\n            segmentRects = [horizontalSlices.first, verticalSlices.first, verticalSlices.second]\n            \n        case .oneThirdTwoThirds:\n            let horizontalSlices = segmentFrame.dividedIntegral(fraction: (1.0 / 3.0), from: .minXEdge)\n            let verticalSlices = horizontalSlices.first.dividedIntegral(fraction: 0.5, from: .minYEdge)\n            segmentRects = [verticalSlices.first, verticalSlices.second, horizontalSlices.second]\n        }\n        \n        // Create and cache layout attributes for calculated frames.\n        for rect in segmentRects {\n            let attributes = UICollectionViewLayoutAttributes(forCellWith: IndexPath(item: currentIndex, section: 0))\n            attributes.frame = rect\n            \n            cachedAttributes.append(attributes)\n            contentBounds = contentBounds.union(lastFrame)\n            \n            currentIndex += 1\n            lastFrame = rect\n        }\n\n\n        // Determine the next segment style.\n        switch count - currentIndex {\n        case 1:\n            segment = .fullWidth\n        case 2:\n            segment = .fiftyFifty\n        default:\n            switch segment {\n            case .fullWidth:\n                segment = .fiftyFifty\n            case .fiftyFifty:\n                segment = .twoThirdsOneThird\n            case .twoThirdsOneThird:\n                segment = .oneThirdTwoThirds\n            case .oneThirdTwoThirds:\n                segment = .fiftyFifty\n            }\n        }\n    }\n}\n\n\nProvide the Content Size\n\nOverride the collectionViewContentSize property, providing a size for the collection view.\n\noverride var collectionViewContentSize: CGSize {\n    return contentBounds.size\n}\n\n\nDefine the Layout Attributes\n\nOverride layoutAttributesForElements(in:), defining the layout attributes for a geometric region. The collection view calls this function periodically to display items, which is known as querying by geometric region.\n\noverride func layoutAttributesForElements(in rect: CGRect) -> [UICollectionViewLayoutAttributes]? {\n    var attributesArray = [UICollectionViewLayoutAttributes]()\n    \n    // Find any cell that sits within the query rect.\n    guard let lastIndex = cachedAttributes.indices.last,\n          let firstMatchIndex = binSearch(rect, start: 0, end: lastIndex) else { return attributesArray }\n    \n    // Starting from the match, loop up and down through the array until all the attributes\n    // have been added within the query rect.\n    for attributes in cachedAttributes[..<firstMatchIndex].reversed() {\n        guard attributes.frame.maxY >= rect.minY else { break }\n        attributesArray.append(attributes)\n    }\n    \n    for attributes in cachedAttributes[firstMatchIndex...] {\n        guard attributes.frame.minY <= rect.maxY else { break }\n        attributesArray.append(attributes)\n    }\n    \n    return attributesArray\n}\n\n\nAlso provide the layout attributes for a specific item by implementing layoutAttributesForItem(at:). The collection view calls this function periodically to display one particular item, which is known as querying by index path.\n\noverride func layoutAttributesForItem(at indexPath: IndexPath) -> UICollectionViewLayoutAttributes? {\n    return cachedAttributes[indexPath.item]\n}\n\n\nBecause these functions are called often, they can affect the performance of your app. To make them as efficient as possible, follow the example code as closely as you can.\n\nHandle Bounds Changes\n\nThe shouldInvalidateLayout(forBoundsChange:) function is called for every bounds change from the collection view, or whenever its size or origin changes. This function is also called frequently during scrolling. The default implementation returns false, or, if the size and origin change, it returns true.\n\noverride func shouldInvalidateLayout(forBoundsChange newBounds: CGRect) -> Bool {\n    guard let collectionView = collectionView else { return false }\n    return !newBounds.size.equalTo(collectionView.bounds.size)\n}\n\n\nFor optimum performance, this sample performs a binary search inside layoutAttributesForElements(in:) instead of a linear search of the attributes it needs for each element in a given bounds area.\n\nPerform Batch Updates\n\nTapping the top-right button in the navigation bar triggers the collection view to perform a batch update of multiple animated operations (insert, delete, move, and reload) of its collection view cells all at the same time.\n\nWithin a call to performBatchUpdates(_:completion:), the system simultaneously animates all insert, delete, move, and reload operations. In this sample, the app batches updates by processing an array of PersonUpdate objects, each of which encapsulates one update:\n\ninsert with a Person object and insertion index.\n\ndelete with an index.\n\nmove from one index to another.\n\nreload with an index.\n\nFirst, the reload operations are performed without animation because no cell movement is involved:\n\n// Perform any cell reloads without animation because there is no movement.\nUIView.performWithoutAnimation {\n    collectionView.performBatchUpdates({\n        for update in remoteUpdates {\n            if case let .reload(index) = update {\n                people[index].isUpdated = true\n                collectionView.reloadItems(at: [IndexPath(item: index, section: 0)])\n            }\n        }\n    })\n}\n\n\nNext, the remaining operations are animated:\n\n// Animate all other update types together.\ncollectionView.performBatchUpdates({\n    var deletes = [Int]()\n    var inserts = [(person:Person, index:Int)]()\n\n\n    for update in remoteUpdates {\n        switch update {\n        case let .delete(index):\n            collectionView.deleteItems(at: [IndexPath(item: index, section: 0)])\n            deletes.append(index)\n            \n        case let .insert(person, index):\n            collectionView.insertItems(at: [IndexPath(item: index, section: 0)])\n            inserts.append((person, index))\n            \n        case let .move(fromIndex, toIndex):\n            // Updates that move a person are split into an addition and a deletion.\n            collectionView.moveItem(at: IndexPath(item: fromIndex, section: 0),\n                                    to: IndexPath(item: toIndex, section: 0))\n            deletes.append(fromIndex)\n            inserts.append((people[fromIndex], toIndex))\n            \n        default: break\n        }\n    }\n    \n    // Apply deletions in descending order.\n    for deletedIndex in deletes.sorted().reversed() {\n        people.remove(at: deletedIndex)\n    }\n    \n    // Apply insertions in ascending order.\n    let sortedInserts = inserts.sorted(by: { (personA, personB) -> Bool in\n        return personA.index <= personB.index\n    })\n    for insertion in sortedInserts {\n        people.insert(insertion.person, at: insertion.index)\n    }\n    \n    // The update button is enabled only if the list still has people in it.\n    navigationItem.rightBarButtonItem?.isEnabled = !people.isEmpty\n})\n\n\nSee Also\nManual layouts\nclass UICollectionViewLayout\nAn abstract base class for generating layout information for a collection view.\nclass UICollectionViewFlowLayout\nA layout object that organizes items into a grid with optional header and footer views for each section.\nclass UICollectionViewTransitionLayout\nA special type of layout object that lets you implement behaviors when changing from one layout to another in your collection view.\nclass UICollectionViewLayoutAttributes\nA layout object that manages the layout-related attributes for a given item in a collection view.\nclass UICollectionViewFlowLayoutInvalidationContext\nA set of properties for determining whether to recompute the size of items or their position in the layout."
  },
  {
    "title": "UICollectionViewTransitionLayout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewtransitionlayout",
    "html": "Overview\n\nYou can use UICollectionViewTransitionLayout as-is or subclass it to provide specialized behavior for your app. A common use for transition layouts is to create interactive transitions, such as those that are driven by gesture recognizers or touch events.\n\nDuring a layout change, the collection view installs this layout object temporarily to manage the changeover. This layout object determines the layout of each item by interpolating between the layout values in the current and new layout objects. The interpolation is driven by the value in the transitionProgress property, which you update periodically from your code to drive the transition. For example, if you use this class in conjunction with a gesture recognizer, the handler for your gesture recognizer would update that property and invalidate the layout.\n\nIf you want to provide more than just a linear transition from the old to new layout over time, you need to subclass and provide the layout attributes for items yourself. Subclassing requires you to override all of the same methods you would override when subclassing UICollectionViewLayout. The difference is that your custom methods can work with your gesture recognizers or touch event code to change the layout based on input from the user. For example, you could use a custom layout object in conjunction with a gesture recognizer to make items track the location of the user’s finger on the screen. You also need to implement the collectionView(_:transitionLayoutForOldLayout:newLayout:) method of your collection view delegate and return your custom layout object when asked for it.\n\nTopics\nInitializing the transition layout object\ninit(currentLayout: UICollectionViewLayout, nextLayout: UICollectionViewLayout)\nInitializes and returns a transition layout object.\ninit?(coder: NSCoder)\nCreates a transition layout object from data in an unarchiver.\nUpdating the transition information\nvar transitionProgress: CGFloat\nThe completion percentage of the transition.\nfunc updateValue(CGFloat, forAnimatedKey: String)\nSets the value for an animatable key.\nfunc value(forAnimatedKey: String) -> CGFloat\nReturns the most recently set value for the specified key.\nAccessing the layout objects\nvar currentLayout: UICollectionViewLayout\nThe collection view’s current layout object.\nvar nextLayout: UICollectionViewLayout\nThe collection view’s new layout object.\nRelationships\nInherits From\nUICollectionViewLayout\nSee Also\nManual layouts\nCustomizing Collection View Layouts\nCustomize a view layout by changing the size of cells in the flow or implementing a mosaic style.\nclass UICollectionViewLayout\nAn abstract base class for generating layout information for a collection view.\nclass UICollectionViewFlowLayout\nA layout object that organizes items into a grid with optional header and footer views for each section.\nclass UICollectionViewLayoutAttributes\nA layout object that manages the layout-related attributes for a given item in a collection view.\nclass UICollectionViewFlowLayoutInvalidationContext\nA set of properties for determining whether to recompute the size of items or their position in the layout."
  },
  {
    "title": "init(forCellWith:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617759-init",
    "html": "Parameters\nindexPath\n\nThe index path of the cell.\n\nReturn Value\n\nA new layout attributes object whose precise type matches the type of the class used to call this method.\n\nDiscussion\n\nUse this method to create a layout attributes object for a cell in the collection view. Cells are the main type of view presented by a collection view. The index path for a cell typically includes both a section index and an item index for locating the cell’s contents in the collection view’s data source.\n\nSee Also\nCreating layout attributes\ninit(forSupplementaryViewOfKind: String, with: IndexPath)\nCreates and returns a layout attributes object that represents the specified supplementary view.\ninit(forDecorationViewOfKind: String, with: IndexPath)\nCreates and returns a layout attributes object that represents the specified decoration view."
  },
  {
    "title": "center | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617735-center",
    "html": "Discussion\n\nThe center point is specified in the coordinate system of the collection view. Setting the value of this property also updates the origin of the rectangle in the frame property.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "init(forDecorationViewOfKind:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617786-init",
    "html": "Parameters\ndecorationViewKind\n\nThe kind identifier for the specified decoration view.\n\nindexPath\n\nAn index path related to the decoration view.\n\nReturn Value\n\nA new layout attributes object whose precise type matches the type of the class used to call this method.\n\nDiscussion\n\nUse this method to create a layout attributes object for a decoration view in the collection view. Decoration views are a type of supplementary view but do not present data that is managed by the collection view’s data source. Instead, they mostly present visual adornments for a section or for the entire collection view.\n\nIt is up to you to decide how to use the indexPath parameter to identify a given decoration view. Typically, you use the decorationViewKind parameter to identify the type of the decoration view and the indexPath information to distinguish between different instances of that view.\n\nSee Also\nCreating layout attributes\ninit(forCellWith: IndexPath)\nCreates and returns a layout attributes object that represents a cell with the specified index path.\ninit(forSupplementaryViewOfKind: String, with: IndexPath)\nCreates and returns a layout attributes object that represents the specified supplementary view."
  },
  {
    "title": "representedElementKind | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617806-representedelementkind",
    "html": "Discussion\n\nYou can use the value in this property to identify the specific purpose of the supplementary or decoration view associated with the attributes. This property is nil if the representedElementCategory property contains the value UICollectionView.ElementCategory.cell.\n\nSee Also\nIdentifying the referenced item\nvar indexPath: IndexPath\nThe index path of the item in the collection view.\nvar representedElementCategory: UICollectionView.ElementCategory\nThe type of the item.\nenum UICollectionView.ElementCategory\nConstants specifying the type of view."
  },
  {
    "title": "indexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617776-indexpath",
    "html": "Discussion\n\nThe index path contains the index of the section and the index of the item within that section. These two values uniquely identify the position of the corresponding item in the collection view.\n\nSee Also\nIdentifying the referenced item\nvar representedElementKind: String?\nThe layout-specific identifier for the target view.\nvar representedElementCategory: UICollectionView.ElementCategory\nThe type of the item.\nenum UICollectionView.ElementCategory\nConstants specifying the type of view."
  },
  {
    "title": "transform3D | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617764-transform3d",
    "html": "Discussion\n\nAssigning a value to this property replaces the value in the transform property with an affine version of the 3D transform you specify.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617799-ishidden",
    "html": "Discussion\n\nThe default value of this property is false. As an optimization, the collection view might not create the corresponding view if this property is set to true.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis."
  },
  {
    "title": "everything | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollisionbehavior/mode/1624824-everything",
    "html": "Discussion\n\nThis is the default collision behavior mode."
  },
  {
    "title": "to | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitransitioncontextviewcontrollerkey/1622046-to",
    "html": "Discussion\n\nThis view controller is the one being presented.\n\nSee Also\nKeys\nstatic let from: UITransitionContextViewControllerKey\nA key that identifies the view controller that’s visible at the beginning of the transition, or at the end of a canceled transition."
  },
  {
    "title": "behaviors | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621198-behaviors",
    "html": "See Also\nAccessing a dynamic animator’s state\nvar elapsedTime: TimeInterval\nReturns the time interval since the dynamic animator started running.\nvar isRunning: Bool\nReturns true if the dynamic animator is running.\nvar referenceView: UIView?\nThe view that a dynamic animator was initialized with.\nfunc updateItem(usingCurrentState: UIDynamicItem)\nAsks a dynamic animator to read the current state of a dynamic item, replacing the animator’s internal representation of the item’s state."
  },
  {
    "title": "referenceView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621200-referenceview",
    "html": "Discussion\n\nThis property has a value only for a dynamic animator initialized using the init(referenceView:) method.\n\nSee Also\nAccessing a dynamic animator’s state\nvar elapsedTime: TimeInterval\nReturns the time interval since the dynamic animator started running.\nvar isRunning: Bool\nReturns true if the dynamic animator is running.\nvar behaviors: [UIDynamicBehavior]\nThe dynamic behaviors managed by a dynamic animator.\nfunc updateItem(usingCurrentState: UIDynamicItem)\nAsks a dynamic animator to read the current state of a dynamic item, replacing the animator’s internal representation of the item’s state."
  },
  {
    "title": "isRunning | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621192-isrunning",
    "html": "Discussion\n\nThe views associated with an animator’s behaviors can change position or change transform only when the animator is running. For optimization purposes, iOS can pause and then restart an animator. Use this method if you need to check whether or not your views are currently subject to changes in position or transform.\n\nSee Also\nAccessing a dynamic animator’s state\nvar elapsedTime: TimeInterval\nReturns the time interval since the dynamic animator started running.\nvar behaviors: [UIDynamicBehavior]\nThe dynamic behaviors managed by a dynamic animator.\nvar referenceView: UIView?\nThe view that a dynamic animator was initialized with.\nfunc updateItem(usingCurrentState: UIDynamicItem)\nAsks a dynamic animator to read the current state of a dynamic item, replacing the animator’s internal representation of the item’s state."
  },
  {
    "title": "removeAllBehaviors() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621197-removeallbehaviors",
    "html": "See Also\nInitializing and managing a dynamic animator\ninit(referenceView: UIView)\nInitializes a dynamic animator with a specified view as its reference view.\ninit(collectionViewLayout: UICollectionViewLayout)\nInitializes a dynamic animator with a specified collection view layout.\nfunc items(in: CGRect) -> [UIDynamicItem]\nReturns the dynamic items, from the animator’s behaviors, that intersect a specified rectangle.\nfunc addBehavior(UIDynamicBehavior)\nAdds a dynamic behavior to a dynamic animator.\nfunc removeBehavior(UIDynamicBehavior)\nRemoves a specified dynamic behavior from a dynamic animator."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621199-delegate",
    "html": "Discussion\n\nThe methods for a dynamic animator delegate are described in UIDynamicAnimatorDelegate.\n\nSee Also\nResponding to animation changes\nprotocol UIDynamicAnimatorDelegate\nTo respond to the pausing or resumption of UIKit dynamic animation, configure a custom class to adopt the UIDynamicAnimatorDelegate protocol. Then, in a dynamic animator (an instance of the UIDynamicAnimator class), set the delegate to be an instance of your custom class."
  },
  {
    "title": "init(referenceView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621203-init",
    "html": "Parameters\nview\n\nThe view for the dynamic animator, called the reference view.\n\nReturn Value\n\nThe initialized dynamic animator, or nil if there was a problem initializing the object.\n\nDiscussion\n\nWhen you initialize a dynamic animator with this method, the behaviors (and their dynamic items) that you add to the animator employ the reference view’s coordinate system.\n\nSee Also\nInitializing and managing a dynamic animator\ninit(collectionViewLayout: UICollectionViewLayout)\nInitializes a dynamic animator with a specified collection view layout.\nfunc items(in: CGRect) -> [UIDynamicItem]\nReturns the dynamic items, from the animator’s behaviors, that intersect a specified rectangle.\nfunc addBehavior(UIDynamicBehavior)\nAdds a dynamic behavior to a dynamic animator.\nfunc removeBehavior(UIDynamicBehavior)\nRemoves a specified dynamic behavior from a dynamic animator.\nfunc removeAllBehaviors()\nRemoves all of the dynamic behaviors from a dynamic animator."
  },
  {
    "title": "items(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621191-items",
    "html": "Parameters\nrect\n\nThe rectangle you are interested in.\n\nReturn Value\n\nThe dynamic items, from the animator’s behaviors, that intersect the specified rectangle.\n\nDiscussion\n\nThe coordinate system that pertains to the rect parameter depends on how you initialized the animator, as described in the Overview in this document.\n\nSee Also\nInitializing and managing a dynamic animator\ninit(referenceView: UIView)\nInitializes a dynamic animator with a specified view as its reference view.\ninit(collectionViewLayout: UICollectionViewLayout)\nInitializes a dynamic animator with a specified collection view layout.\nfunc addBehavior(UIDynamicBehavior)\nAdds a dynamic behavior to a dynamic animator.\nfunc removeBehavior(UIDynamicBehavior)\nRemoves a specified dynamic behavior from a dynamic animator.\nfunc removeAllBehaviors()\nRemoves all of the dynamic behaviors from a dynamic animator."
  },
  {
    "title": "layoutAttributesForSupplementaryView(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621186-layoutattributesforsupplementary",
    "html": "Parameters\nkind\n\nA string that identifies the type of supplementary view whose layout attributes you want.\n\nindexPath\n\nThe index path for the cell whose supplementary view layout attributes you want.\n\nReturn Value\n\nThe collection view layout attributes for the specified supplementary view.\n\nSee Also\nWorling with collection views\nfunc layoutAttributesForCell(at: IndexPath) -> UICollectionViewLayoutAttributes?\nA convenience method for returning the layout attributes for a collection view cell.\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nA convenience method for returning the layout attributes for a collection view decoration view."
  },
  {
    "title": "effect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisymboleffectcompletioncontext/4213128-effect",
    "html": "Discussion\n\nFor a symbol effect completion, this property may not be the same instance as the original effect.\n\nFor a content transition completion, this property is nil.\n\nSee Also\nDetermining completion status\nvar isFinished: Bool\nA Boolean value that indicates whether the symbol effect finished completely.\nvar sender: AnyObject?\nThe object, an image view or bar button item, that received the symbol effect."
  },
  {
    "title": "UIStackView.Alignment.lastBaseline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uistackview/alignment/lastbaseline",
    "html": "Discussion\n\nThe following image shows an example of a horizontal stack view that uses the UIStackView.Alignment.lastBaseline alignment."
  },
  {
    "title": "NSCollectionLayoutGroupCustomItemProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutgroupcustomitemprovider",
    "html": "Discussion\n\nYou use a custom item provider to supply the item arrangement when creating a group using the custom(layoutSize:itemProvider:) initializer.\n\nSee Also\nAdvanced layouts\nclass NSCollectionLayoutGroupCustomItem\nAn item used in a group with a custom layout arrangement."
  },
  {
    "title": "indexPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nscollectionlayoutvisibleitem/3199120-indexpath",
    "html": "Required"
  },
  {
    "title": "prompt | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624326-prompt",
    "html": "Discussion\n\nThe default value is nil.\n\nSee Also\nGetting the search text\nvar placeholder: String?\nThe string to display when there’s no other text in the text field.\nvar text: String?\nThe current or starting search text.\nvar searchTextField: UISearchTextField\nThe text field that the user enters a search query into."
  },
  {
    "title": "UIUserNotificationActionContext.minimal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiusernotificationactioncontext/minimal",
    "html": "Discussion\n\nIn this context, a minimal UI is displayed for the notification’s alert. You may specify up to two custom actions in this context."
  },
  {
    "title": "actionsImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3294219-actionsimage",
    "html": "See Also\nGetting standard system images\naddImage\nThe standard image for indicating the addition of content.\nremoveImage\nThe standard image for indicating the removal of content.\ncheckmarkImage\nThe standard image for a checkmark on a filled-circle background.\nstrokedCheckmarkImage\nThe standard image for a checkmark on a tinted circle with a white-stroked border."
  },
  {
    "title": "drop(_:toRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropcoordinator/2897301-drop",
    "html": "Required\n\nParameters\ndragItem\n\nThe dragged item that you want to animate into position.\n\nindexPath\n\nThe index path to use as the destination for the animation.\n\nDiscussion\n\nUse this method to animate the dragged item to the specific location in the table view. Typically, you use this method for content that originated in the collection view and is moving to a new location.\n\nSee Also\nAnimating rows to their destination\nfunc drop(UIDragItem, intoRowAt: IndexPath, rect: CGRect) -> UIDragAnimating\n\nRequired\n\nfunc drop(UIDragItem, to: UIDragPreviewTarget) -> UIDragAnimating\nAnimates the item to an arbitrary location in your view hierarchy.\n\nRequired\n\nfunc drop(UIDragItem, to: UITableViewDropPlaceholder) -> UITableViewDropPlaceholderContext\nAnimates the item to the specified location and inserts a placeholder cell at that location.\n\nRequired"
  },
  {
    "title": "collectionView(_:dragSessionIsRestrictedToDraggingApplication:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2919963-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view from which the drag operation originated.\n\nsession\n\nThe drag session that’s active.\n\nReturn Value\n\ntrue when the source app and destination app should be the same — that is, the user is not allowed to drop the item on another app.\n\nDiscussion\n\nIf you don’t implement this method, the default return value is false.\n\nSee Also\nControlling the drag session\nfunc collectionView(UICollectionView, dragSessionAllowsMoveOperation: UIDragSession) -> Bool\nReturns a Boolean value that determines whether a move operation is allowed for a drag session."
  },
  {
    "title": "UISpringLoadedInteractionEffectState.activated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffectstate/activated",
    "html": "Discussion\n\nThe interaction view is styled with the default effect, and the activation handler for the UISpringLoadedInteraction object is called.\n\nSee Also\nStates\ncase activating\nAn interaction state that indicates that spring loading is about to start.\ncase inactive\nAn interaction state that indicates that spring loading is not engaged.\ncase possible\nAn interaction state that indicates that spring loading is available."
  },
  {
    "title": "sender | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisymboleffectcompletioncontext/4213130-sender",
    "html": "See Also\nDetermining completion status\nvar effect: SymbolEffect\nThe symbol effect that completed.\nvar isFinished: Bool\nA Boolean value that indicates whether the symbol effect finished completely."
  },
  {
    "title": "removeImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/3294230-removeimage",
    "html": "See Also\nGetting standard system images\naddImage\nThe standard image for indicating the addition of content.\nactionsImage\nThe standard image for indicating user-initiated actions.\ncheckmarkImage\nThe standard image for a checkmark on a filled-circle background.\nstrokedCheckmarkImage\nThe standard image for a checkmark on a tinted circle with a white-stroked border."
  },
  {
    "title": "fontDescriptorWithName:matrix: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616670-fontdescriptorwithname",
    "html": "Parameters\nfontName\n\nThe value for UIFontDescriptorNameAttribute.\n\nmatrix\n\nThe value for UIFontDescriptorMatrixAttribute.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "UISpringLoadedInteractionEffectState.activating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uispringloadedinteractioneffectstate/activating",
    "html": "Discussion\n\nThe interaction view is briefly styled with the default effect, then it returns to its original style.\n\nSee Also\nStates\ncase activated\nAn interaction state that indicates that the view was spring loaded.\ncase inactive\nAn interaction state that indicates that spring loading is not engaged.\ncase possible\nAn interaction state that indicates that spring loading is available."
  },
  {
    "title": "preferredFontDescriptorWithTextStyle: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616705-preferredfontdescriptorwithtexts",
    "html": "Parameters\nstyle\n\nThe text style for which to return a font descriptor.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorWithName:size: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616674-fontdescriptorwithname",
    "html": "Parameters\nfontName\n\nThe value for UIFontDescriptorNameAttribute.\n\nsize\n\nThe value for UIFontDescriptorSizeAttribute.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorWithDesign: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/3151797-fontdescriptorwithdesign",
    "html": "Parameters\ndesign\n\nThe new system font design.\n\nReturn Value\n\nThe new font descriptor, if the original font descriptor is from a system UI font; otherwise, nil.\n\nDiscussion\n\nThis method changes the design of an existing font descriptor that describes a system UI font — for example, a font descriptor created by methods such as systemFontOfSize:, preferredFontForTextStyle:, or preferredFontDescriptorWithTextStyle:. If the original font descriptor doesn’t describe a system font, this method returns nil.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorWithSize: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616675-fontdescriptorwithsize",
    "html": "Parameters\nnewPointSize\n\nThe new point size.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorWithSymbolicTraits: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616665-fontdescriptorwithsymbolictraits",
    "html": "Parameters\nsymbolicTraits\n\nThe new symbolic traits.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size."
  },
  {
    "title": "matchingFontDescriptorsWithMandatoryKeys: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616699-matchingfontdescriptorswithmanda",
    "html": "Parameters\nmandatoryKeys\n\nKeys that must be identical to be matched. Can be nil.\n\nReturn Value\n\nThe matching font descriptors. If the attribute value specified does not exist in the input dictionary or if there is no font that matches the given mandatory key values, an empty array is returned.\n\nDiscussion\n\nFor example, suppose there are two versions of a given font installed that differ in the number of glyphs covered (the new version has more glyphs). If you explicitly specify UIFontDescriptorNameAttribute as the only mandatory key, then a font descriptor that specifies a font name and character set by default matches both versions, because the character set attribute isn’t used for matching. If you specify that font name and character set keys are mandatory, the returned array contains only the font that matches both keys."
  },
  {
    "title": "UIFontDescriptor.SymbolicTraits | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/symbolictraits",
    "html": "Overview\n\nThe lower 16 bits represent the typeface, and the upper 16 bits describe appearance of the font. The font appearance information represented by the upper 16 bits of NSFontSymbolicTraits can be used for stylistic font matching. UIFontDescriptor.Class constants classify certain stylistic qualities of the font.\n\nTopics\nFont traits\nstatic var traitItalic: UIFontDescriptor.SymbolicTraits\nThe font’s style is italic.\nstatic var traitBold: UIFontDescriptor.SymbolicTraits\nThe font’s style is boldface.\nstatic var traitExpanded: UIFontDescriptor.SymbolicTraits\nThe font’s characters have an expanded width.\nstatic var traitCondensed: UIFontDescriptor.SymbolicTraits\nThe font’s characters have a condensed width.\nstatic var traitMonoSpace: UIFontDescriptor.SymbolicTraits\nThe font’s characters all have the same width.\nstatic var traitVertical: UIFontDescriptor.SymbolicTraits\nThe font uses vertical glyph variants and metrics.\nstatic var traitUIOptimized: UIFontDescriptor.SymbolicTraits\nThe font synthesizes appropriate attributes for user interface rendering, such as in control titles, if necessary.\nstatic var traitTightLeading: UIFontDescriptor.SymbolicTraits\nThe font uses a leading value that’s less than the default.\nstatic var traitLooseLeading: UIFontDescriptor.SymbolicTraits\nThe font uses a leading value that’s greater than the default.\nstatic var classMask: UIFontDescriptor.SymbolicTraits\nThe font family class mask that you use to access font descriptor values.\nstatic var classOldStyleSerifs: UIFontDescriptor.SymbolicTraits\nThe font’s characters include serifs, and reflect the Latin printing style of the 15th to 17th centuries.\nstatic var classTransitionalSerifs: UIFontDescriptor.SymbolicTraits\nThe font’s characters include serifs, and reflect the Latin printing style of the 18th to 19th centuries.\nstatic var classModernSerifs: UIFontDescriptor.SymbolicTraits\nThe font’s characters include serifs, and reflect the Latin printing style of the 20th century.\nstatic var classClarendonSerifs: UIFontDescriptor.SymbolicTraits\nThe font’s characters include variations of old style and transitional serifs.\nstatic var classSlabSerifs: UIFontDescriptor.SymbolicTraits\nThe font’s characters use square transitions, without brackets, between strokes and serifs.\nstatic var classFreeformSerifs: UIFontDescriptor.SymbolicTraits\nThe font’s characters include serifs, and don’t generally fit within other serif design classifications.\nstatic var classSansSerif: UIFontDescriptor.SymbolicTraits\nThe font’s characters don’t have serifs.\nstatic var classOrnamentals: UIFontDescriptor.SymbolicTraits\nThe font’s characters use highly decorated or stylized character shapes.\nstatic var classScripts: UIFontDescriptor.SymbolicTraits\nThe font’s characters simulate handwriting.\nstatic var classSymbolic: UIFontDescriptor.SymbolicTraits\nThe font’s characters consist mainly of symbols rather than letters and numbers.\nInitializer\ninit(rawValue: UInt32)\nCreates a symbol traits structure with the specified raw value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nQuerying a font descriptor\nvar fontAttributes: [UIFontDescriptor.AttributeName : Any]\nThe font descriptor’s dictionary of attributes.\nvar matrix: CGAffineTransform\nThe current transform matrix of the font descriptor.\nfunc object(forKey: UIFontDescriptor.AttributeName) -> Any?\nReturns the font attribute that the corresponding key specifies.\nvar pointSize: CGFloat\nThe point size of the font descriptor.\nvar postscriptName: String\nThe PostScript name of the font descriptor.\nvar symbolicTraits: UIFontDescriptor.SymbolicTraits\nThe traits of the font descriptor."
  },
  {
    "title": "UIFontDescriptorAttributeName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorattributename",
    "html": "Topics\nConstants\nUIFontDescriptorCascadeListAttribute\nThe cascading list attribute.\nUIFontDescriptorCharacterSetAttribute\nThe character set attribute.\nUIFontDescriptorFaceAttribute\nThe font face attribute.\nUIFontDescriptorFamilyAttribute\nThe font family attribute.\nUIFontDescriptorFeatureSettingsAttribute\nThe font feature settings attribute.\nUIFontDescriptorFixedAdvanceAttribute\nThe glyph advancement attribute.\nUIFontDescriptorMatrixAttribute\nThe font’s transformation matrix attribute.\nUIFontDescriptorNameAttribute\nThe font name attribute.\nUIFontDescriptorSizeAttribute\nThe font size attribute.\nUIFontDescriptorTextStyleAttribute\nThe text style attribute.\nUIFontDescriptorTraitsAttribute\nThe font traits dictionary attribute.\nUIFontDescriptorVisibleNameAttribute\nThe font’s visible name attribute."
  },
  {
    "title": "UIFontDescriptorSystemDesign | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorsystemdesign",
    "html": "Discussion\n\nUse these constants to specify a system-provided typeface design, such as:\n\nSF Pro in iOS or SF Compact in watchOS (UIFontDescriptorSystemDesignDefault)\n\nSF Pro Rounded in iOS or SF Compact Rounded in watchOS (UIFontDescriptorSystemDesignRounded)\n\nSF Mono (UIFontDescriptorSystemDesignMonospaced)\n\nNew York (UIFontDescriptorSystemDesignSerif)\n\nTopics\nTypeface designs\nUIFontDescriptorSystemDesignDefault\nThe default typeface for an app’s user interface.\nUIFontDescriptorSystemDesignRounded\nThe rounded variant of the default typeface.\nUIFontDescriptorSystemDesignMonospaced\nThe monospace variant of the default typeface.\nUIFontDescriptorSystemDesignSerif\nThe serif variant of the default typeface."
  },
  {
    "title": "UIFont.TextStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/textstyle",
    "html": "Overview\n\nPass these constants to the preferredFont(forTextStyle:) method of UIFont or the preferredFontDescriptor(withTextStyle:) method of UIFontDescriptor to retrieve the corresponding font information.\n\nTopics\nConstants\nstatic let body: UIFont.TextStyle\nThe font for body text.\nstatic let callout: UIFont.TextStyle\nThe font for callouts.\nstatic let caption1: UIFont.TextStyle\nThe font for standard captions.\nstatic let caption2: UIFont.TextStyle\nThe font for alternate captions.\nstatic let footnote: UIFont.TextStyle\nThe font for footnotes.\nstatic let headline: UIFont.TextStyle\nThe font for headings.\nstatic let subheadline: UIFont.TextStyle\nThe font for subheadings.\nstatic let largeTitle: UIFont.TextStyle\nThe font style for large titles.\nstatic let extraLargeTitle: UIFont.TextStyle\nThe font style for extra large titles.\nstatic let extraLargeTitle2: UIFont.TextStyle\nThe font style for extra extra large titles.\nstatic let title1: UIFont.TextStyle\nThe font for first-level hierarchical headings.\nstatic let title2: UIFont.TextStyle\nThe font for second-level hierarchical headings.\nstatic let title3: UIFont.TextStyle\nThe font for third-level hierarchical headings.\nMetrics\nvar metrics: UIFontMetrics\nThe corresponding font metrics object for the text style.\nInitializers\ninit(rawValue: String)\nCreates a text style with the specified raw value.\nRelationships\nConforms To\nEquatable\nHashable\nRawRepresentable\nSendable\nSee Also\nCreating Fonts\nScaling Fonts Automatically\nScale text in your interface automatically using Dynamic Type.\nCreating Self-Sizing Table View Cells\nCreate table view cells that support Dynamic Type and use system spacing constraints to adjust the spacing surrounding text labels.\nclass func preferredFont(forTextStyle: UIFont.TextStyle) -> UIFont\nReturns an instance of the system font for the specified text style with scaling for the user's selected content size category.\nclass func preferredFont(forTextStyle: UIFont.TextStyle, compatibleWith: UITraitCollection?) -> UIFont\nReturns an instance of the system font for the appropriate text style and traits.\ninit?(name: String, size: CGFloat)\nCreates and returns a font object for the specified font name and size.\ninit(descriptor: UIFontDescriptor, size: CGFloat)\nReturns a font that matches the specified font descriptor.\nfunc withSize(CGFloat) -> UIFont\nReturns a font object that is the same as the font, but has the specified size."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616662-initwithcoder",
    "html": "See Also\nInitializing a font descriptor\n- initWithFontAttributes:\nCreates a font descriptor with the specified attributes.\n- init\nCreates a font descriptor."
  },
  {
    "title": "frame | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617753-frame",
    "html": "Discussion\n\nThe frame rectangle is measured in points and specified in the coordinate system of the collection view. Setting the value of this property also sets the values of the center and size properties.\n\nSee Also\nAccessing the layout attributes\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "alpha | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617743-alpha",
    "html": "Discussion\n\nPossible values are between 0.0 (transparent) and 1.0 (opaque). The default is 1.0.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "bounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617782-bounds",
    "html": "Discussion\n\nWhen setting the bounds, the origin of the bounds rectangle must always be at (0, 0). Changing the bounds rectangle also changes the value in the size property to match the new bounds size.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "transform | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617779-transform",
    "html": "Discussion\n\nAssigning a value to this property replaces the value in the transform3D property with a 3D version of the affine transform you specify.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar zIndex: Int\nSpecifies the item’s position on the z axis.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "zIndex | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewlayoutattributes/1617768-zindex",
    "html": "Discussion\n\nThis property is used to determine the front-to-back ordering of items during layout. Items with higher index values appear on top of items with lower values. Items with the same value have an undetermined order.\n\nThe default value of this property is 0.\n\nSee Also\nAccessing the layout attributes\nvar frame: CGRect\nThe frame rectangle of the item.\nvar bounds: CGRect\nThe bounds of the item.\nvar center: CGPoint\nThe center point of the item.\nvar size: CGSize\nThe size of the item.\nvar transform3D: CATransform3D\nThe 3D transform of the item.\nvar transform: CGAffineTransform\nThe affine transform of the item.\nvar alpha: CGFloat\nThe transparency of the item.\nvar isHidden: Bool\nDetermines whether the item is currently displayed."
  },
  {
    "title": "to | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitransitioncontextviewkey/1622062-to",
    "html": "Discussion\n\nThis view is typically the presented view controller’s view but may also be an ancestor of that view.\n\nSee Also\nKeys\nstatic let from: UITransitionContextViewKey\nA key that identifies the view shown at the beginning of the transition, or at the end of a canceled transition."
  },
  {
    "title": "from | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitransitioncontextviewkey/1622044-from",
    "html": "Discussion\n\nThis view is typically the presenting view controller’s view.\n\nSee Also\nKeys\nstatic let to: UITransitionContextViewKey\nA key that identifies the view shown at the end of a completed transition."
  },
  {
    "title": "UIDynamicAnimatorDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimatordelegate",
    "html": "Topics\nResponding to animation pausing and resumption\nfunc dynamicAnimatorDidPause(UIDynamicAnimator)\nCalled when a dynamic animator pauses the animations for its behaviors’ associated dynamic items.\nfunc dynamicAnimatorWillResume(UIDynamicAnimator)\nCalled when a dynamic animator is about to resume the animations for its behaviors’ associated dynamic items.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nResponding to animation changes\nvar delegate: UIDynamicAnimatorDelegate?\nThe delegate for responding to pausing or resumption of animation."
  },
  {
    "title": "init(collectionViewLayout:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621196-init",
    "html": "Parameters\nlayout\n\nThe collection view layout for the dynamic animator, serving as the reference view for a dynamic animator in collection-view mode.\n\nReturn Value\n\nThe initialized dynamic animator, or nil if there was a problem initializing the object.\n\nDiscussion\n\nWhen you initialize a dynamic animator with this method, the behaviors (and their dynamic items) that you add to the animator employ the collection view layout’s coordinate system.\n\nSee Also\nInitializing and managing a dynamic animator\ninit(referenceView: UIView)\nInitializes a dynamic animator with a specified view as its reference view.\nfunc items(in: CGRect) -> [UIDynamicItem]\nReturns the dynamic items, from the animator’s behaviors, that intersect a specified rectangle.\nfunc addBehavior(UIDynamicBehavior)\nAdds a dynamic behavior to a dynamic animator.\nfunc removeBehavior(UIDynamicBehavior)\nRemoves a specified dynamic behavior from a dynamic animator.\nfunc removeAllBehaviors()\nRemoves all of the dynamic behaviors from a dynamic animator."
  },
  {
    "title": "from | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitransitioncontextviewcontrollerkey/1622023-from",
    "html": "Discussion\n\nThis view controller is typically the one presenting the “to” view controller or is the one being replaced by the “to” view controller.\n\nSee Also\nKeys\nstatic let to: UITransitionContextViewControllerKey\nA key that identifies the view controller that’s visible at the end of a completed transition."
  },
  {
    "title": "updateItem(usingCurrentState:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621190-updateitem",
    "html": "Parameters\nitem\n\nThe dynamic item whose state was changed by your app.\n\nDiscussion\n\nA dynamic animator automatically reads the initial state (position and rotation) of each dynamic item you add to it, and then takes responsibility for updating the item’s state. If you actively change the state of a dynamic item after you’ve added it to a dynamic animator, call this method to ask the animator to read and incorporate the new state.\n\nSee Also\nAccessing a dynamic animator’s state\nvar elapsedTime: TimeInterval\nReturns the time interval since the dynamic animator started running.\nvar isRunning: Bool\nReturns true if the dynamic animator is running.\nvar behaviors: [UIDynamicBehavior]\nThe dynamic behaviors managed by a dynamic animator.\nvar referenceView: UIView?\nThe view that a dynamic animator was initialized with."
  },
  {
    "title": "addAnimations(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidraganimating/2890977-addanimations",
    "html": "Required\n\nParameters\nanimations\n\nA block that sets animatable view properties.\n\nSee Also\nAdding animations\nfunc addCompletion((UIViewAnimatingPosition) -> Void)\nAdds an animation completion block to run when a view animation has ended.\n\nRequired"
  },
  {
    "title": "layoutAttributesForDecorationView(ofKind:at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621195-layoutattributesfordecorationvie",
    "html": "Parameters\ndecorationViewKind\n\nThe kind identifier for the specified decoration view.\n\nindexPath\n\nThe index path for the cell whose decoration view layout attributes you want.\n\nReturn Value\n\nThe collection view layout attributes for the specified decoration view.\n\nSee Also\nWorling with collection views\nfunc layoutAttributesForCell(at: IndexPath) -> UICollectionViewLayoutAttributes?\nA convenience method for returning the layout attributes for a collection view cell.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nA convenience method for returning the layout attributes for a collection view supplementary view."
  },
  {
    "title": "layoutAttributesForCell(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidynamicanimator/1621204-layoutattributesforcell",
    "html": "Parameters\nindexPath\n\nThe index path for the cell whose layout attributes you want.\n\nReturn Value\n\nThe collection view layout attributes for the specified collection view cell.\n\nSee Also\nWorling with collection views\nfunc layoutAttributesForDecorationView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nA convenience method for returning the layout attributes for a collection view decoration view.\nfunc layoutAttributesForSupplementaryView(ofKind: String, at: IndexPath) -> UICollectionViewLayoutAttributes?\nA convenience method for returning the layout attributes for a collection view supplementary view."
  },
  {
    "title": "tableView(_:dragPreviewParametersForRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897353-tableview",
    "html": "Parameters\ntableView\n\nThe table view from which the drag operation originated.\n\nindexPath\n\nThe index path of the row being dragged.\n\nReturn Value\n\nA UIDragPreviewParameters object containing information about how to customize the row's appearance. Return nil to use the default appearance.\n\nDiscussion\n\nUse this method to customize the appearance of the row during drags. For example, you might use this method to specify that only part of the cell’s visible content should be used for the drag preview. If you don’t implement this method, or if you return nil, the drag preview displays the row’s visible content.\n\nIn your implementation, create a UIDragPreviewParameters object and specify the custom preview information for the specified row. Use the parameters to specify the portion of the row that you want to display or to change the background color drawn beneath the row’s contents."
  },
  {
    "title": "UISearchBar.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/style",
    "html": "Topics\nConstants\ncase `default`\nThe search bar has the default style.\ncase prominent\nThe search bar has a translucent background, and the search field is opaque.\ncase minimal\nThe search bar has no background, and the search field is translucent.\nRelationships\nConforms To\nSendable\nSee Also\nConfiguring the search bar\nvar isEnabled: Bool\nA Boolean value indicating whether the search bar is in the enabled state.\nvar barTintColor: UIColor?\nThe tint color to apply to the search bar background.\nvar searchBarStyle: UISearchBar.Style\nA search bar style that specifies the search bar’s appearance.\nvar tintColor: UIColor!\nThe tint color to apply to key elements in the search bar.\nvar isTranslucent: Bool\nA Boolean value that indicates whether the search bar is translucent (true) or not (false).\nvar barStyle: UIBarStyle\nA bar style that specifies the search bar’s appearance.\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "selectedScopeButtonIndex | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624287-selectedscopebuttonindex",
    "html": "Discussion\n\nThe indexes of the scope buttons are determined by the indexes of the strings in scopeButtonTitles.\n\nSee Also\nConfiguring scope bar buttons\nvar scopeButtonTitles: [String]?\nAn array of strings indicating the titles of the scope buttons.\nvar showsScopeBar: Bool\nSpecifies whether the scope bar is displayed.\nfunc setShowsScope(Bool, animated: Bool)\nSpecifies whether the scope bar is displayed, optionally using an animation."
  },
  {
    "title": "init(bounds:format:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer/1649127-init",
    "html": "Parameters\nbounds\n\nThe bounds of the Core Graphics context available to the renderer, with values in points.\n\nformat\n\nA UIGraphicsPDFRendererFormat object that encapsulates the format applied to the renderer's context.\n\nReturn Value\n\nAn initialized PDF graphics renderer.\n\nDiscussion\n\nUse this initializer to create a PDF renderer when you want to override the default format for the current device. Otherwise, use the init(bounds:) method present on the abstract superclass, UIGraphicsRenderer."
  },
  {
    "title": "tableView(_:dragSessionIsRestrictedToDraggingApplication:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2919982-tableview",
    "html": "Parameters\ntableView\n\nThe table view from which the drag operation originated.\n\nsession\n\nThe drag session object containing information about the drag operation.\n\nReturn Value\n\ntrue if the dragged content must be dropped in the same app that originated the drag, or false if the content may be dragged to other apps.\n\nDiscussion\n\nImplement this method when you want to allow the user to drag content within your app, but prevent them from dragging that same content to other apps. If you don’t implement this method, the table view behaves as if the method returned false.\n\nSee Also\nTracking the drag session\nfunc tableView(UITableView, dragSessionWillBegin: UIDragSession)\nSignals the start of a drag operation involving content from the specified table view.\nfunc tableView(UITableView, dragSessionDidEnd: UIDragSession)\nSignals the end of a drag operation involving content from the specified table view.\nfunc tableView(UITableView, dragSessionAllowsMoveOperation: UIDragSession) -> Bool\nReturns a Boolean value indicating whether your app supports a move operation for the dragged content."
  },
  {
    "title": "documentMenuWasCancelled(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentmenudelegate/1614190-documentmenuwascancelled",
    "html": "Parameters\ndocumentMenu\n\nThe document menu object that called this method.\n\nSee Also\nResponding to user actions\nfunc documentMenu(UIDocumentMenuViewController, didPickDocumentPicker: UIDocumentPickerViewController)\nTells the delegate that the user has selected a document picker from the menu.\n\nRequired\n\nDeprecated"
  },
  {
    "title": "UIUserNotificationActionContext.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiusernotificationactioncontext/default",
    "html": "Discussion\n\nIn this context, the full UI is displayed for the notification’s alert. You may specify up to four custom actions in this context."
  },
  {
    "title": "presentModalViewController:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621465-presentmodalviewcontroller",
    "html": "Deprecated\n\nUse presentViewController:animated:completion: instead.\n\nParameters\nmodalViewController\n\nThe view controller that manages the modal view.\n\nanimated\n\nIf YES, animates the view as it's presented; otherwise, does not.\n\nDiscussion\n\nOn iPhone and iPod touch devices, the view of modalViewController is always presented full screen. On iPad, the presentation depends on the value in the modalPresentationStyle property.\n\nSets the modalViewController property to the specified view controller. Resizes its view and attaches it to the view hierarchy. The view is animated according to the transition style specified in the modalTransitionStyle property of the controller in the modalViewController parameter.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissModalViewControllerAnimated:\nDismisses the view controller that was presented by the receiver.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "commitInsertion(dataSourceUpdates:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropplaceholdercontext/2897487-commitinsertion",
    "html": "Required\n\nParameters\ndataSourceUpdates\n\nThe handler block to execute as part of committing your changes. Use this block to update your table view’s data source with the actual data that you received. This block has no return value and takes the following parameter:\n\ninsertionIndexPath\n\nThe location at which to insert any items into your data source. Always use this index path for the insertion point instead of any cached values.\n\nReturn Value\n\ntrue if the placeholder was replaced by your content or false if the placeholder was no longer in the table view.\n\nDiscussion\n\nWhen you receive the actual data for a cell, call this method on your app’s main thread to remove the corresponding placeholder cell and insert the actual cell. If the placeholder cell is still present in the table view, this method calls the dataSourceUpdates handler. Use that block only to update the data source object of your table view. Don’t update the table view itself, and don’t call reloadData() on the table view. When your block finishes, the table view updates itself automatically, creating a new cell for your data.\n\nIf the placeholder cell is no longer present, this method doesn’t execute your dataSourceUpdates block."
  },
  {
    "title": "collectionView(_:itemsForAddingTo:at:point:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897367-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view from which the drag operation originated.\n\nsession\n\nThe current drag session object.\n\nindexPath\n\nThe index path of the item to add to the drag.\n\npoint\n\nThe point that the user touched. This point is in the coordinate space of the collection view.\n\nReturn Value\n\nAn array of UIDragItem objects containing the items to add to the current drag session. Return an empty array to prevent the items from being added to the drag session.\n\nDiscussion\n\nImplement this method when you want to allow the user to add items to an active drag session. If you don’t implement this method, taps in the collection view trigger the selection of items or other behaviors. However, when a drag session is active and a tap occurs, the collection view calls this method to give you an opportunity to add the underlying item to the drag session.\n\nIn your implementation, create one or more UIDragItem objects for the item at the specified indexPath. Normally, you return only one drag item, but if the specified item has children or can’t be dragged without one or more associated items, include those items as well.\n\nSee Also\nProviding the items to drag\nfunc collectionView(UICollectionView, itemsForBeginning: UIDragSession, at: IndexPath) -> [UIDragItem]\nProvides the initial set of items (if any) to drag.\n\nRequired"
  },
  {
    "title": "UISceneCollectionJoinBehavior.preferredWithoutActivating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscenecollectionjoinbehavior/preferredwithoutactivating",
    "html": "Discussion\n\nIf requestingScene is set, this behavior adds the new scene without deactivating the requestingScene. Otherwise, this behavior behaves the same as UISceneCollectionJoinBehavior.preferred. For example, in apps built with Mac Catalyst, you can use this behavior to open a link in a new tab in the background."
  },
  {
    "title": "imageNamed: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimage/1624146-imagenamed",
    "html": "Parameters\nname\n\nThe name of the image asset or file.\n\nReturn Value\n\nAn object containing an unconfigured version of the image, or nil if the method could not find the specified image.\n\nDiscussion\n\nWhen searching the asset catalog, this method prefers an asset containing a symbol image over an asset with the same name containing a bitmap image. Because the system supports symbol images iOS 13 or later, you may include both types of assets in the same asset catalog. In iOS 12 or earlier, the system automatically chooses the bitmap image.\n\nYou can’t use this method to load system symbol images; use the systemImageNamed: method instead.\n\nThis method checks the system caches for an image object with the name you specify, and returns the variant of that image that’s best suited for the main screen. If a matching image object isn’t in the cache, this method creates the image from an available asset catalog or loads the image from disk.\n\nThe system may purge cached image data at any time to free up memory. Purging occurs only for unused images that are in the cache.\n\nIn iOS 9 and later, this method is thread safe.\n\nSpecial Considerations\n\nIf you intend to display an image only once and don't want it added to the system’s cache, create it using the imageWithContentsOfFile: method instead. Keeping single-use images out of the system image cache can potentially improve the memory use characteristics of your app.\n\nSee Also\nLoading and caching images\nProviding images for different appearances\nSupply image resources appropriate for light and dark appearances and for high-contrast environments.\nConfiguring and displaying symbol images in your UI\nCreate scalable images that integrate with your app’s text, and adjust the appearance of those images dynamically.\nCreating custom symbol images for your app\nCreate, organize, and annotate symbol images using SF Symbols.\n+ imageNamed:inBundle:compatibleWithTraitCollection:\nCreates an image object using the named image asset that’s compatible with the specified trait collection.\n+ imageNamed:inBundle:withConfiguration:\nCreates an image by using the named image asset that’s compatible with the configuration you specify.\n+ imageNamed:inBundle:variableValue:withConfiguration:\nCreates an image by using the name, configuration, and variable value you specify.\n+ systemImageNamed:withConfiguration:\nCreates an image object that contains a system symbol image with the specified configuration.\n+ systemImageNamed:variableValue:withConfiguration:\nCreates an image object that contains a system symbol image with the configuration and variable value you specify.\n+ systemImageNamed:compatibleWithTraitCollection:\nCreates an image object that contains a system symbol image appropriate for the specified traits.\n+ systemImageNamed:\nCreates an image object that contains a system symbol image.\nBuilding High-Performance Lists and Collection Views\nImprove the performance of lists and collections in your app with prefetching and image preparation."
  },
  {
    "title": "UISceneCollectionJoinBehavior.preferred | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiscenecollectionjoinbehavior/preferred",
    "html": "Discussion\n\nIf requestingScene is set, this behavior adds the new scene to its collection and activates it. Otherwise, the scene attempts to join a compatible collection."
  },
  {
    "title": "fontDescriptorWithFace: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616681-fontdescriptorwithface",
    "html": "Parameters\nnewFace\n\nThe new font face.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorWithFamily: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616676-fontdescriptorwithfamily",
    "html": "Parameters\nnewFamily\n\nThe new font family.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorByAddingAttributes: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616666-fontdescriptorbyaddingattributes",
    "html": "Parameters\nattributes\n\nThe new attributes.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithMatrix:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified matrix.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "fontDescriptorWithMatrix: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616731-fontdescriptorwithmatrix",
    "html": "Parameters\nmatrix\n\nThe new font matrix.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nCreating a font descriptor\n+ preferredFontDescriptorWithTextStyle:\nReturns a font descriptor that contains the specified text style and the user’s selected content size category.\n+ preferredFontDescriptorWithTextStyle:compatibleWithTraitCollection:\nReturns a font descriptor that contains the text style and the content size category that the provided trait collection specifies.\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes.\n+ fontDescriptorWithName:matrix:\nReturns a font descriptor with the specified values for the name and matrix dictionary attributes.\n+ fontDescriptorWithName:size:\nReturns a font descriptor with the specified values for the name and size dictionary attributes.\n- fontDescriptorByAddingAttributes:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified attributes taking precedence over the existing ones.\n- fontDescriptorWithDesign:\nReturns a new font descriptor that’s the same as the existing descriptor, but with the specified design.\n- fontDescriptorWithFamily:\nReturns a new font descriptor whose attributes are the same as the existing font descriptor, but from the specified family.\n- fontDescriptorWithFace:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified face.\n- fontDescriptorWithSize:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified point size.\n- fontDescriptorWithSymbolicTraits:\nReturns a new font descriptor that’s the same as the existing font descriptor, but with the specified symbolic traits."
  },
  {
    "title": "objectForKey: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616733-objectforkey",
    "html": "Parameters\nanAttribute\n\nThe font attribute key.\n\nReturn Value\n\nThe font attribute corresponding to anAttribute. For valid values of anAttribute, see UIFontDescriptorAttributeName.\n\nSee Also\nQuerying a font descriptor\nfontAttributes\nThe font descriptor’s dictionary of attributes.\nmatrix\nThe current transform matrix of the font descriptor.\npointSize\nThe point size of the font descriptor.\npostscriptName\nThe PostScript name of the font descriptor.\nsymbolicTraits\nThe traits of the font descriptor.\nUIFontDescriptorSymbolicTraits\nConstants that describe the stylistic aspects of a font.\nRelated Documentation\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes."
  },
  {
    "title": "initWithFontAttributes: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/1616679-initwithfontattributes",
    "html": "Parameters\nattributes\n\nThe attributes for the new font descriptor. If nil, the font descriptor’s attribute dictionary will be empty.\n\nReturn Value\n\nThe new font descriptor.\n\nSee Also\nInitializing a font descriptor\n- init\nCreates a font descriptor.\n- initWithCoder:\nCreates a font descriptor from data in an unarchiver.\nRelated Documentation\n+ fontDescriptorWithFontAttributes:\nReturns a font descriptor with a dictionary of attributes."
  },
  {
    "title": "UIFontDescriptor.Class | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/class",
    "html": "Discussion\n\nThese values correspond closely to the font class values in the OpenType OS/2 table. The class values are bundled in the upper four bits of the UIFontDescriptor.SymbolicTraits and can be accessed through classMask. For additional information about the specific meaning of each identifier, refer to the OpenType specification."
  },
  {
    "title": "backgroundImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624276-backgroundimage",
    "html": "Discussion\n\nImages that are 1 point wide or stretchable images are stretched, otherwise the image is tiled.\n\nSee Also\nCustomizing the search bar appearance\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background.\nRelated Documentation\nvar scopeBarBackgroundImage: UIImage?\nThe background image for the scope bar."
  },
  {
    "title": "image(for:state:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624296-image",
    "html": "Parameters\nicon\n\nAn icon identifier constant.\n\nstate\n\nA control state.\n\nValid states are normal and disabled.\n\nReturn Value\n\nThe image used for the search bar icon identified by icon in the state identified by state.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "init(preview:menu:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextitem/menuconfiguration/4176619-init",
    "html": "See Also\nCreating a menu configuration\nenum UITextItem.MenuConfiguration.Preview"
  },
  {
    "title": "isEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/4111162-isenabled",
    "html": "Discussion\n\nSet the value of this property to true to enable the search bar or false to disable it. An enabled search bar responds to user interactions; a disabled search bar ignores touch events and takes on a disabled appearance.\n\nIf the search bar is associated with a UINavigationItem with UINavigationItem.SearchBarPlacement.inline, then the minimized (icon-only) UISearchBar won’t grow to the text field while isEnabled is false.\n\nThe default value of this property is true for a newly created search bar. You can set the search bar’s initial enabled state in your storyboard file.\n\nSee Also\nConfiguring the search bar\nvar barTintColor: UIColor?\nThe tint color to apply to the search bar background.\nvar searchBarStyle: UISearchBar.Style\nA search bar style that specifies the search bar’s appearance.\nenum UISearchBar.Style\nSpecifies whether the search bar has a background.\nvar tintColor: UIColor!\nThe tint color to apply to key elements in the search bar.\nvar isTranslucent: Bool\nA Boolean value that indicates whether the search bar is translucent (true) or not (false).\nvar barStyle: UIBarStyle\nA bar style that specifies the search bar’s appearance.\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "tableView(_:itemsForAddingTo:at:point:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897293-tableview",
    "html": "Parameters\ntableView\n\nThe table view from which the drag operation originated.\n\nsession\n\nThe drag session object providing context for the drag operation.\n\nindexPath\n\nThe index path of the row being added to the drag operation.\n\npoint\n\nThe location of the touch that caused the row to be added. This point is in the coordinate space of the table view.\n\nReturn Value\n\nAn array of UIDragItem objects representing the contents of the specified row. Return an empty array if you do not want the user to add the row to the drag session.\n\nDiscussion\n\nImplement this method to allow the user to add items to an active drag session. When a drag session is active and the user taps a row, the table view calls this method. Your implementation should return the drag items to add to the drag operation. If you don’t implement this method, additional touches in the table view are handled as normal table view interactions. For example, additional taps cause rows to be selected or deselected.\n\nIn your implementation, create one or more UIDragItem objects representing the contents at the specified index path. Normally, you return only one drag item, but you may return more than one item if the specified row represents a container for other content.\n\nSee Also\nProviding the items to drag\nfunc tableView(UITableView, itemsForBeginning: UIDragSession, at: IndexPath) -> [UIDragItem]\nProvides the initial set of items (if any) to drag.\n\nRequired"
  },
  {
    "title": "tableView(_:dragSessionWillBegin:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897382-tableview",
    "html": "Parameters\ntableView\n\nThe table view from which the drag operation originated.\n\nsession\n\nThe drag session object providing context for the drag operation.\n\nDiscussion\n\nThis method is called after it has been determined that a drag will begin, after any lift animations have occurred, and before the position of the drag changes significantly. Use this method to perform any tasks related to the management of the drag session in your app.\n\nEach call to this method is always balanced by a call to the tableView(_:dragSessionDidEnd:) method.\n\nSee Also\nTracking the drag session\nfunc tableView(UITableView, dragSessionDidEnd: UIDragSession)\nSignals the end of a drag operation involving content from the specified table view.\nfunc tableView(UITableView, dragSessionIsRestrictedToDraggingApplication: UIDragSession) -> Bool\nReturns a Boolean value indicating whether the dragged content must be dropped in the same app.\nfunc tableView(UITableView, dragSessionAllowsMoveOperation: UIDragSession) -> Bool\nReturns a Boolean value indicating whether your app supports a move operation for the dragged content."
  },
  {
    "title": "tableView(_:dragSessionDidEnd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2897428-tableview",
    "html": "Parameters\ntableView\n\nThe table view from which the drag operation originated.\n\nsession\n\nThe drag session object providing context for the drag operation.\n\nDiscussion\n\nThis method is called after the drag session ended, usually because the content was dropped but possibly because the drag was terminated. Use this method to close out any tasks related to the management of the drag session in your app.\n\nEach call to this method is always preceded by a call to the tableView(_:dragSessionWillBegin:) method.\n\nSee Also\nTracking the drag session\nfunc tableView(UITableView, dragSessionWillBegin: UIDragSession)\nSignals the start of a drag operation involving content from the specified table view.\nfunc tableView(UITableView, dragSessionIsRestrictedToDraggingApplication: UIDragSession) -> Bool\nReturns a Boolean value indicating whether the dragged content must be dropped in the same app.\nfunc tableView(UITableView, dragSessionAllowsMoveOperation: UIDragSession) -> Bool\nReturns a Boolean value indicating whether your app supports a move operation for the dragged content."
  },
  {
    "title": "tableView(_:dragSessionAllowsMoveOperation:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdragdelegate/2919983-tableview",
    "html": "Parameters\ntableView\n\nThe table view from which the drag operation originated.\n\nsession\n\nThe drag session object containing information about the drag operation.\n\nReturn Value\n\ntrue if your app allows content to be moved instead of copied, or false if moves are not supported.\n\nDiscussion\n\nImplement this method if you want to prevent the dragged content from being moved. If your delegate returns false and the drop operation type is UIDropOperation.move, the system cancels the drop.\n\nIf you don’t implement this method, the table view behaves as if the method returned true.\n\nSee Also\nTracking the drag session\nfunc tableView(UITableView, dragSessionWillBegin: UIDragSession)\nSignals the start of a drag operation involving content from the specified table view.\nfunc tableView(UITableView, dragSessionDidEnd: UIDragSession)\nSignals the end of a drag operation involving content from the specified table view.\nfunc tableView(UITableView, dragSessionIsRestrictedToDraggingApplication: UIDragSession) -> Bool\nReturns a Boolean value indicating whether the dragged content must be dropped in the same app."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624324-init",
    "html": "Parameters\ncoder\n\nAn unarchiver object.\n\nSee Also\nCreating a search bar\ninit()\nInitializes the search bar to its default state.\ninit(frame: CGRect)\nCreates a search bar with a specified frame."
  },
  {
    "title": "UIFontDescriptorFeatureKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptorfeaturekey",
    "html": "Discussion\n\nUse these keys when retrieving information from one of the dictionaries associated with the UIFontDescriptorFeatureSettingsAttribute key.\n\nTopics\nDeprecated\nUIFontFeatureTypeIdentifierKey\nA key for identifying a font feature type.\nUIFontFeatureSelectorIdentifierKey\nA key for identifying the font feature selector."
  },
  {
    "title": "tableView(_:dropSessionDidEnter:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897458-tableview",
    "html": "Parameters\ntableView\n\nThe table view that’s now the potential target of the drop.\n\nsession\n\nThe drop session object containing information about the data being dragged.\n\nDiscussion\n\nThe table view calls this method when dragged content first enters its bounds rectangle. This method isn’t called again until the dragged content exits the table view’s bounds (triggering a call to the tableView(_:dropSessionDidExit:) method) and enters again.\n\nUse this method to perform any one-time setup associated with tracking dragged content over the table view.\n\nSee Also\nTracking the drag movements\nfunc tableView(UITableView, dropSessionDidUpdate: UIDropSession, withDestinationIndexPath: IndexPath?) -> UITableViewDropProposal\nProposes how to handle a drop at the specified location in the table view.\nfunc tableView(UITableView, dropSessionDidExit: UIDropSession)\nNotifies the delegate when dragged content exits the table view’s bounds rectangle.\nfunc tableView(UITableView, dropSessionDidEnd: UIDropSession)\nNotifies the delegate when the drag operation ends."
  },
  {
    "title": "tableView(_:dropSessionDidEnd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897342-tableview",
    "html": "Parameters\ntableView\n\nThe table view that is no longer the target of the drop.\n\nsession\n\nThe drop session object containing information about the data being dragged.\n\nDiscussion\n\nThe table view calls this method at the conclusion of a drag that was over the table view at one point. Use it to clean up any state information that you used to handle the drag. This method is called regardless of whether the data was actually dropped onto the table view.\n\nSee Also\nTracking the drag movements\nfunc tableView(UITableView, dropSessionDidUpdate: UIDropSession, withDestinationIndexPath: IndexPath?) -> UITableViewDropProposal\nProposes how to handle a drop at the specified location in the table view.\nfunc tableView(UITableView, dropSessionDidEnter: UIDropSession)\nNotifies the delegate when dragged content enters the table view’s bounds rectangle.\nfunc tableView(UITableView, dropSessionDidExit: UIDropSession)\nNotifies the delegate when dragged content exits the table view’s bounds rectangle."
  },
  {
    "title": "tableView(_:dropSessionDidExit:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897303-tableview",
    "html": "Parameters\ntableView\n\nThe collection view that was tracking the dragged content.\n\nsession\n\nThe drop session object containing information about the data being dragged.\n\nDiscussion\n\nThe table view calls this method when dragged content exits its bounds rectangle. This method isn’t called again until the dragged content enters the table view’s bounds (triggering a call to the tableView(_:dropSessionDidEnter:) method) and exits again.\n\nUse this method to clean up any state information that you configured in your tableView(_:dropSessionDidEnter:) method.\n\nSee Also\nTracking the drag movements\nfunc tableView(UITableView, dropSessionDidUpdate: UIDropSession, withDestinationIndexPath: IndexPath?) -> UITableViewDropProposal\nProposes how to handle a drop at the specified location in the table view.\nfunc tableView(UITableView, dropSessionDidEnter: UIDropSession)\nNotifies the delegate when dragged content enters the table view’s bounds rectangle.\nfunc tableView(UITableView, dropSessionDidEnd: UIDropSession)\nNotifies the delegate when the drag operation ends."
  },
  {
    "title": "searchBarStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624281-searchbarstyle",
    "html": "Discussion\n\nThis property can be used together with barStyle. The style UISearchBar.Style.minimal provides no default background color or image but will display one if customized as such.\n\nCustom background and search field images take precedence over this property.\n\nSee UISearchBar.Style for possible values. The default value is UISearchBar.Style.default.\n\nSee Also\nConfiguring the search bar\nvar isEnabled: Bool\nA Boolean value indicating whether the search bar is in the enabled state.\nvar barTintColor: UIColor?\nThe tint color to apply to the search bar background.\nenum UISearchBar.Style\nSpecifies whether the search bar has a background.\nvar tintColor: UIColor!\nThe tint color to apply to key elements in the search bar.\nvar isTranslucent: Bool\nA Boolean value that indicates whether the search bar is translucent (true) or not (false).\nvar barStyle: UIBarStyle\nA bar style that specifies the search bar’s appearance.\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "isTranslucent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624321-istranslucent",
    "html": "Discussion\n\nThe default value is true. If the search bar has a custom background image, the default is true if any pixel of the image has an alpha value of less than 1.0, and false otherwise.\n\nIf you set this property to true on a search bar with an opaque custom background image, the search bar will apply a system opacity less than 1.0 to the image.\n\nIf you set this property to false on a search bar with a translucent custom background image, the search bar provides an opaque background for the image using black if the search bar has UIBarStyle.black style, white if the search bar has UIBarStyle.default, or the search bar’s barTintColor if a custom value is defined.\n\nSee Also\nConfiguring the search bar\nvar isEnabled: Bool\nA Boolean value indicating whether the search bar is in the enabled state.\nvar barTintColor: UIColor?\nThe tint color to apply to the search bar background.\nvar searchBarStyle: UISearchBar.Style\nA search bar style that specifies the search bar’s appearance.\nenum UISearchBar.Style\nSpecifies whether the search bar has a background.\nvar tintColor: UIColor!\nThe tint color to apply to key elements in the search bar.\nvar barStyle: UIBarStyle\nA bar style that specifies the search bar’s appearance.\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624286-tintcolor",
    "html": "Discussion\n\nIn iOS v7.0, all subclasses of UIView derive their behavior for tintColor from the base class. See the discussion of tintColor at the UIView level for more information.\n\nSee Also\nConfiguring the search bar\nvar isEnabled: Bool\nA Boolean value indicating whether the search bar is in the enabled state.\nvar barTintColor: UIColor?\nThe tint color to apply to the search bar background.\nvar searchBarStyle: UISearchBar.Style\nA search bar style that specifies the search bar’s appearance.\nenum UISearchBar.Style\nSpecifies whether the search bar has a background.\nvar isTranslucent: Bool\nA Boolean value that indicates whether the search bar is translucent (true) or not (false).\nvar barStyle: UIBarStyle\nA bar style that specifies the search bar’s appearance.\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "writePDF(to:withActions:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer/1649119-writepdf",
    "html": "Parameters\nurl\n\nThe URL where the complete PDF file is saved.\n\nactions\n\nA UIGraphicsPDFRenderer.DrawingActions closure that, when invoked by the renderer, executes a set of drawing instructions to create the output PDF.\n\nerror\n\nA pointer to an NSError object that is populated if there is a problem saving the completed PDF file.\n\nReturn Value\n\nNo return value in Swift.\n\nDiscussion\n\nYou provide a set of drawing instructions as the block argument to this method, and the method attempts to write the resulting PDF to the supplied URL.\n\nYou can call this method repeatedly to create multiple PDFs, each of which has identical dimensions and format.\n\nSee Also\nManaging the PDF data\nfunc pdfData(actions: (UIGraphicsPDFRendererContext) -> Void) -> Data\nCreates a PDF from a set of drawing instructions and returns it as a data object.\ntypealias UIGraphicsPDFRenderer.DrawingActions\nA closure for drawing PDF content."
  },
  {
    "title": "inputAssistantItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624275-inputassistantitem",
    "html": "Discussion\n\nWhen search is engaged on iPad, the shortcuts bar above the keyboard contains typing suggestions and may contain other controls for managing text. This property contains the object you use to configure the custom bar button items above the keyboard. The shortcuts bar is not available on iPhone or iPod Touch.\n\nFor more information about how to configure shortcut items, see UITextInputAssistantItem."
  },
  {
    "title": "pdfData(actions:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uigraphicspdfrenderer/1649120-pdfdata",
    "html": "Parameters\nactions\n\nA UIGraphicsPDFRenderer.DrawingActions block that, when invoked by the renderer, executes a set of drawing instructions to create the output PDF.\n\nReturn Value\n\nA Data object that contains the encoded PDF.\n\nDiscussion\n\nYou provide a set of drawing instructions as the block argument to this method, and the method returns the resulting PDF encoded in a Data object.\n\nYou can call this method repeatedly to create multiple PDFs, each of which has identical dimensions and format.\n\nSee Also\nManaging the PDF data\nfunc writePDF(to: URL, withActions: (UIGraphicsPDFRendererContext) -> Void)\nCreates a PDF from a set of drawing instructions and saves it to a specified URL.\ntypealias UIGraphicsPDFRenderer.DrawingActions\nA closure for drawing PDF content."
  },
  {
    "title": "documentMenu(_:didPickDocumentPicker:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentmenudelegate/1614188-documentmenu",
    "html": "Required\n\nParameters\ndocumentMenu\n\nThe document menu object that called this method.\n\ndocumentPicker\n\nThe document picker that the user selected.\n\nDiscussion\n\nThe document menu calls this method when the user selects a document picker. Set the document picker’s delegate, and then present it.\n\nSee Also\nResponding to user actions\nfunc documentMenuWasCancelled(UIDocumentMenuViewController)\nTells the delegate that the user dismissed the document menu.\nDeprecated\nRelated Documentation\nDocument Picker Programming Guide"
  },
  {
    "title": "collectionView(_:dragSessionAllowsMoveOperation:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2919964-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view from which the drag operation originated.\n\nsession\n\nThe drag session that’s active.\n\nReturn Value\n\nfalse to cancel the drag session if move is not allowed; otherwise, true.\n\nDiscussion\n\nIf you don’t implement this method, the default return value is true.\n\nSee Also\nControlling the drag session\nfunc collectionView(UICollectionView, dragSessionIsRestrictedToDraggingApplication: UIDragSession) -> Bool\nReturns a Boolean value that determines whether the source app and destination app must be the same for a drag session."
  },
  {
    "title": "collectionView(_:dragPreviewParametersForItemAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897459-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view from which the drag operation originated.\n\nindexPath\n\nThe index path of the item being dragged.\n\nReturn Value\n\nDrag parameters that indicate how to display the cell's content during a drag.\n\nDiscussion\n\nUse this method to customize the appearance of the item during drags. If you don’t implement this method or if you implement it and return nil, the collection view uses the cell’s visible bounds to create the preview.\n\nIn your implementation, create a UIDragPreviewParameters object and update the preview information for the specified item. Use the parameters to specify the portion of the cell that you want to be included in the drag preview or to change the background color drawn beneath your cell."
  },
  {
    "title": "collectionView(_:dragSessionDidEnd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897477-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view from which the drag operation originated.\n\nsession\n\nThe drag session that ended.\n\nDiscussion\n\nThis method is called after the drag session ended, usually because the content was dropped but possibly because the drag was terminated. Use this method to close out any tasks related to the management of the drag session in your app.\n\nEach call to this method is always balanced by a call to the collectionView(_:dragSessionWillBegin:) method.\n\nSee Also\nTracking the drag session\nfunc collectionView(UICollectionView, dragSessionWillBegin: UIDragSession)\nNotifies you that a drag session is about to begin for the collection view."
  },
  {
    "title": "collectionView(_:dragSessionWillBegin:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicollectionviewdragdelegate/2897440-collectionview",
    "html": "Parameters\ncollectionView\n\nThe collection view from which the drag operation originated.\n\nsession\n\nThe drag session that’s beginning.\n\nDiscussion\n\nThis method is called after it has been determined that a drag will begin and after any lift animations have occurred, but before the position of the drag changes. Use this method to perform any tasks related to the management of the drag session in your app.\n\nEach call to this method is always balanced by a call to the collectionView(_:dragSessionDidEnd:) method.\n\nSee Also\nTracking the drag session\nfunc collectionView(UICollectionView, dragSessionDidEnd: UIDragSession)\nNotifies you that a drag session ended for the collection view."
  },
  {
    "title": "type | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/featurekey/3864374-type",
    "html": "Discussion\n\nThe value of this key is an NSNumber object specifying the font feature type such as ligature, character shape, or other font feature.\n\nSee Also\nKeys\nstatic let selector: UIFontDescriptor.FeatureKey\nA key for identifying the font feature selector."
  },
  {
    "title": "backgroundImage(for:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624274-backgroundimage",
    "html": "Parameters\nbarPosition\n\nA bar position constant.\n\nbarMetrics\n\nA bar metrics constant.\n\nReturn Value\n\nThe image used for the search bar background in the position specified by barPosition and with the metrics specified by barMetrics.\n\nDiscussion\n\nThe default value is nil.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "setImage(_:for:state:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624330-setimage",
    "html": "Parameters\niconImage\n\nThe image to use for the search bar icon identified by icon in the state identified by state.\n\nicon\n\nAn icon identifier constant.\n\nstate\n\nA control state.\n\nValid states are normal and disabled.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "setBackgroundImage(_:for:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624325-setbackgroundimage",
    "html": "Parameters\nbackgroundImage\n\nThe image to use for the search bar background in the position specified by barPosition and with the metrics specified by barMetrics.\n\nbarPosition\n\nA bar position constant.\n\nbarMetrics\n\nA bar metrics constant.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc positionAdjustment(for: UISearchBar.Icon) -> UIOffset\nReturns the position adjustment for a given icon.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "positionAdjustment(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624323-positionadjustment",
    "html": "Parameters\nicon\n\nAn icon identifier constant.\n\nReturn Value\n\nThe position adjustment for the icon identified by icon.\n\nDiscussion\n\nThe offset is used to adjust the position of an icon within the search text field.\n\nSee Also\nCustomizing the search bar appearance\nvar backgroundImage: UIImage?\nThe background image for the search bar.\nfunc backgroundImage(for: UIBarPosition, barMetrics: UIBarMetrics) -> UIImage?\nReturns the image used for the background in a given position and with given metrics.\nfunc setBackgroundImage(UIImage?, for: UIBarPosition, barMetrics: UIBarMetrics)\nSets the image to use for the background in a given position and with given metrics.\nfunc image(for: UISearchBar.Icon, state: UIControl.State) -> UIImage?\nReturns the image for a given search bar icon type and control state.\nfunc setImage(UIImage?, for: UISearchBar.Icon, state: UIControl.State)\nSets the image for a given search bar icon type and control state.\nfunc setPositionAdjustment(UIOffset, for: UISearchBar.Icon)\nReturns the position adjustment for a given icon.\nvar inputAccessoryView: UIView?\nA custom input accessory view for the keyboard of the search bar.\nfunc searchFieldBackgroundImage(for: UIControl.State) -> UIImage?\nReturns the search text field image for a given state.\nfunc setSearchFieldBackgroundImage(UIImage?, for: UIControl.State)\nSets the search text field image for a given state.\nvar searchFieldBackgroundPositionAdjustment: UIOffset\nThe offset of the search text field background in the search bar.\nvar searchTextPositionAdjustment: UIOffset\nThe offset of the text within the search text field background."
  },
  {
    "title": "contentSizeForViewInPopover | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1619323-contentsizeforviewinpopover",
    "html": "Deprecated\n\nUse preferredContentSize instead.\n\nDiscussion\n\nThis property contains the desired size for the view controller when it is displayed in a popover. By default, the width is set to 320 points and the height is set to 1100 points. You can change these values as needed.\n\nThe recommended width for popovers is 320 points. If needed, you can return a width value as large as 600 points, but doing so is not recommended.\n\nIf the popover controller displaying the view controller sets its popoverContentSize property, the popover controller overrides the values set in the view controller's contentSizeForViewInPopover property.\n\nSee Also\nDeprecated properties\nshouldAutorotate\nA Boolean value that indicates whether the view controller’s contents should autorotate.\nDeprecated\npreviewActionItems\nThe quick actions displayed when a user swipes upward on a 3D Touch preview.\nDeprecated\nautomaticallyAdjustsScrollViewInsets\nA Boolean value that indicates whether the view controller should automatically adjust its scroll view insets.\nDeprecated\nbottomLayoutGuide\nIndicates the lowest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\ninterfaceOrientation\nConvenience property that provides the current orientation of the interface, meaningful only if the view controller is taking up the full screen.\nDeprecated\nmodalInPopover\nA Boolean value indicating whether the view controller should be presented modally by a popover.\nDeprecated\nmodalViewController\nThe controller for the active presented view'that is, the view that is temporarily displayed on top of the view managed by the receiver.\nDeprecated\nsearchDisplayController\nThe search display controller associated with the view controller.\nDeprecated\ntopLayoutGuide\nIndicates the highest vertical extent for your onscreen content, for use with Auto Layout constraints.\nDeprecated\nwantsFullScreenLayout\nA Boolean value indicating whether the view should underlap the status bar.\nDeprecated"
  },
  {
    "title": "UITextInputTextBackgroundColorKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextinputtextbackgroundcolorkey",
    "html": "Deprecated\n\nUse backgroundColor instead.\n\nDiscussion\n\nThe value of this key is a UIColor object."
  },
  {
    "title": "UIPreviewAction.Style.selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipreviewaction/style/selected",
    "html": "Discussion\n\nUse this style for the initially-selected item within a disclosed peek quick action group."
  },
  {
    "title": "UITextInputTextFontKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextinputtextfontkey",
    "html": "Deprecated\n\nUse font instead.\n\nDiscussion\n\nThe value of this key is a UIFont object."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsparagraphstyle/linebreakstrategy/3667515-init",
    "html": "Parameters\nrawValue\n\nThe raw unsigned integer value for the line-break strategy."
  },
  {
    "title": "UITextItem.MenuConfiguration.Preview | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextitem/menuconfiguration/preview",
    "html": "Topics\nEnumeration Cases\ncase `default`\ncase view(UIView)\nSee Also\nCreating a menu configuration\ninit(preview: UITextItem.MenuConfiguration.Preview?, menu: UIMenu)"
  },
  {
    "title": "tableView(_:dropPreviewParametersForRowAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2921669-tableview",
    "html": "Parameters\ntableView\n\nThe table view that’s attempting to handle the drop.\n\nindexPath\n\nThe index path of the row currently being targeted by the drop.\n\nReturn Value\n\nA UIDragPreviewParameters object containing information about how to customize the row's appearance. Return nil to use the default appearance.\n\nDiscussion\n\nUse this method to customize the appearance of the row before a drop occurs. For example, you might use this method to specify that only part of the cell’s visible content should be used for the drop preview. If you don’t implement this method, or if you return nil, the drop preview displays the row’s visible content.\n\nIn your implementation, create a UIDragPreviewParameters object and specify the custom preview information for the specified row. Use the parameters to specify the portion of the row that you want to display or to change the background color drawn beneath the row’s contents."
  },
  {
    "title": "tableView(_:dropSessionDidUpdate:withDestinationIndexPath:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897302-tableview",
    "html": "Parameters\ntableView\n\nThe table view currently being targeted to receive the drop.\n\nsession\n\nThe drop session object containing information about the data being dragged.\n\ndestinationIndexPath\n\nThe index path of the row currently being targeted by the drop. Use this value to determine an appropriate course of action for the drop.\n\nReturn Value\n\nThe UITableViewDropProposal object indicating how to incorporate the dropped data.\n\nDiscussion\n\nWhile the user is dragging content, the table view calls this method repeatedly to determine how you would handle the drop if it occurred at the specified location. The table view provides visual feedback to the user based on your proposal.\n\nIn your implementation of this method, create a UITableViewDropProposal object and use it to convey your intentions. Because this method is called repeatedly while the user drags over the table view, your implementation should return as quickly as possible.\n\nSee Also\nTracking the drag movements\nfunc tableView(UITableView, dropSessionDidEnter: UIDropSession)\nNotifies the delegate when dragged content enters the table view’s bounds rectangle.\nfunc tableView(UITableView, dropSessionDidExit: UIDropSession)\nNotifies the delegate when dragged content exits the table view’s bounds rectangle.\nfunc tableView(UITableView, dropSessionDidEnd: UIDropSession)\nNotifies the delegate when the drag operation ends."
  },
  {
    "title": "tableView(_:performDropWith:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableviewdropdelegate/2897427-tableview",
    "html": "Required\n\nParameters\ntableView\n\nThe table view that received the drop.\n\ncoordinator\n\nThe coordinator object to use when handling the drop. Use this object to coordinate your custom behavior with the default behavior of the table view.\n\nDiscussion\n\nUse this method to integrate the dropped content into your table view. In your implementation, iterate over the items property of the coordinator object to retrieve the UIDragItem objects associated with the drag operation. Use the data in those objects to update your table view’s data source and the table view itself.\n\nHow you update the table view depends on the source of the dragged items and whether you need to load the data asynchronously.\n\nInsert placeholder rows for any data that you must load asynchronously. Use the drop(_:toPlaceholderInsertedAt:withReuseIdentifier:rowHeight:cellUpdateHandler:) method to insert a placeholder cell into the table while you wait for the data to load.\n\nUse the existing table view methods to rearrange rows within the table. When the drag source contains rows from the same table, use the moveRow(at:to:) method to rearrange the rows.\n\nInsert local data directly into the table. When the drag item’s localObject property contains a value, use that value to update the table view directly. Specifically, update your data source object and insert any needed rows into the table.\n\nWhen updating your table directly, use the coordinator object to animate the dropping of the items. For example, you might use the drop(_:toRowAt:) method to animate the insertion of the dropped item at the specified location. The insertion of placeholders automatically creates appropriate animations. For more information about the types of animations that you can perform, see UITableViewDropCoordinator."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624304-init",
    "html": "Return Value\n\nAn initialized search bar or nil if the view could not be initialized.\n\nSee Also\nCreating a search bar\ninit?(coder: NSCoder)\nCreates a search bar from data in a given unarchiver.\ninit(frame: CGRect)\nCreates a search bar with a specified frame."
  },
  {
    "title": "searchTextField | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/3175433-searchtextfield",
    "html": "Discussion\n\nFor details about interacting with the text field, accessing its content, and using tokens, see UISearchTextField and UISearchToken.\n\nSee Also\nGetting the search text\nvar placeholder: String?\nThe string to display when there’s no other text in the text field.\nvar prompt: String?\nA single line of text displayed at the top of the search bar.\nvar text: String?\nThe current or starting search text."
  },
  {
    "title": "barTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624295-bartintcolor",
    "html": "Discussion\n\nThis color is made translucent by default unless you set the isTranslucent property to false.\n\nSee Also\nConfiguring the search bar\nvar isEnabled: Bool\nA Boolean value indicating whether the search bar is in the enabled state.\nvar searchBarStyle: UISearchBar.Style\nA search bar style that specifies the search bar’s appearance.\nenum UISearchBar.Style\nSpecifies whether the search bar has a background.\nvar tintColor: UIColor!\nThe tint color to apply to key elements in the search bar.\nvar isTranslucent: Bool\nA Boolean value that indicates whether the search bar is translucent (true) or not (false).\nvar barStyle: UIBarStyle\nA bar style that specifies the search bar’s appearance.\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "init(frame:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624269-init",
    "html": "Parameters\nframe\n\nA rectangle that specifies the initial location and size of the search bar in its superview’s coordinates.\n\nSee Also\nCreating a search bar\ninit()\nInitializes the search bar to its default state.\ninit?(coder: NSCoder)\nCreates a search bar from data in a given unarchiver."
  },
  {
    "title": "placeholder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624322-placeholder",
    "html": "Discussion\n\nThe default value is nil.\n\nSee Also\nGetting the search text\nvar prompt: String?\nA single line of text displayed at the top of the search bar.\nvar text: String?\nThe current or starting search text.\nvar searchTextField: UISearchTextField\nThe text field that the user enters a search query into."
  },
  {
    "title": "barStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624270-barstyle",
    "html": "Discussion\n\nThis property can be used together with searchBarStyle.\n\nSee UIBarStyle for possible values. The default value is UIBarStyle.default.\n\nSee Also\nConfiguring the search bar\nvar isEnabled: Bool\nA Boolean value indicating whether the search bar is in the enabled state.\nvar barTintColor: UIColor?\nThe tint color to apply to the search bar background.\nvar searchBarStyle: UISearchBar.Style\nA search bar style that specifies the search bar’s appearance.\nenum UISearchBar.Style\nSpecifies whether the search bar has a background.\nvar tintColor: UIColor!\nThe tint color to apply to key elements in the search bar.\nvar isTranslucent: Bool\nA Boolean value that indicates whether the search bar is translucent (true) or not (false).\nenum UIBarStyle\nDefines the stylistic appearance of different types of views."
  },
  {
    "title": "birthdate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210380-birthdate",
    "html": "See Also\nGetting birthday information\nstatic let birthdateDay: UITextContentType\nA property that defines the content in a text input area as the day component of a birthdate.\nstatic let birthdateMonth: UITextContentType\nA property that defines the content in a text input area as the month component of a birthdate.\nstatic let birthdateYear: UITextContentType\nA property that defines the content in a text input area as the year component of a birthdate."
  },
  {
    "title": "NSTextList | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nstextlist",
    "html": "Overview\n\nThe visible elements of the list, including list markers, appear in the text as they do for lists created by hand. The list object, however, allows the list to be recognized as such by the text system. This enables automatic creation of markers and spacing. Text lists are used in HTML import and export.\n\nText lists appear as attributes on paragraphs, as part of the paragraph style. An NSParagraphStyle may have an array of text lists, representing the nested lists containing the paragraph, in order from outermost to innermost. For example, if list1 contains four paragraphs, the middle two of which are also in the inner list2, then the text lists array for the first and fourth paragraphs is (list1), while the text lists array for the second and third paragraphs is (list1, list2).\n\nThe methods implementing this are textLists on NSParagraphStyle, and textLists on NSMutableParagraphStyle.\n\nIn addition, NSAttributedString has convenience methods for lists, such as range(of:at:), which determines the range covered by a list, and itemNumber(in:at:), which determines the ordinal position within a list of a particular item.\n\nTopics\nCreating a text list\ninit?(coder: NSCoder)\nInitializes and returns a newly allocated text list item.\ninit(markerFormat: NSTextList.MarkerFormat, options: Int)\nReturns an initialized text list.\ninit(markerFormat: NSTextList.MarkerFormat, options: NSTextList.Options, startingItemNumber: Int)\nReturns a new text list with the format, options, and starting item number you provide.\nWorking with markers\nvar markerFormat: NSTextList.MarkerFormat\nReturns the marker format string used by the receiver.\nstruct NSTextList.MarkerFormat\nConstants that describe marker symbols you can apply to list elements in text lists.\nfunc marker(forItemNumber: Int) -> String\nReturns the computed value for a specific ordinal position in the list.\nGetting list options\nvar isOrdered: Bool\nvar listOptions: NSTextList.Options\nReturns the list options mask value of the receiver.\nstruct NSTextList.Options\nValues that available options for text list items.\nManaging item numbering\nvar startingItemNumber: Int\nSets the starting item number for the text list.\nConstants\n\nThe following constant specifies an option mask used with init(markerFormat:options:).\n\nstatic var prependEnclosingMarker: NSTextList.Options\nSpecifies that a nested list should include the marker for its enclosing superlist before its own marker.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nFormatted content\nclass NSTextBlock\nA block of text laid out in a subregion of the text container.\nclass NSParagraphStyle\nThe paragraph or ruler attributes for an attributed string.\nclass NSMutableParagraphStyle\nAn object for changing the values of the subattributes in a paragraph style attribute.\nclass NSTextTable\nAn object that represents a text table as a whole.\nclass NSTextTableBlock\nA text block that appears as a cell in a text table.\nclass NSTextTab\nA tab in a paragraph."
  },
  {
    "title": "slant | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/traitkey/1616686-slant",
    "html": "Discussion\n\nThe value of this key is an NSNumber object. The valid value range is from -1.0 to 1.0. The value of 0.0 corresponds to 0 degree clockwise rotation from the vertical and 1.0 corresponds to 30 degrees clockwise rotation.\n\nSee Also\nFont traits\nstatic let symbolic: UIFontDescriptor.TraitKey\nThe symbolic font traits.\nstatic let weight: UIFontDescriptor.TraitKey\nThe numerical value that corresponds to a font face.\nstatic let width: UIFontDescriptor.TraitKey\nThe inter-glyph spacing of the font."
  },
  {
    "title": "symbolic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/traitkey/1616718-symbolic",
    "html": "Discussion\n\nUse this key with a trait dictionary to get the symbolic traits value as an NSNumber object.\n\nSee Also\nFont traits\nstatic let slant: UIFontDescriptor.TraitKey\nThe relative slant angle of the font.\nstatic let weight: UIFontDescriptor.TraitKey\nThe numerical value that corresponds to a font face.\nstatic let width: UIFontDescriptor.TraitKey\nThe inter-glyph spacing of the font."
  },
  {
    "title": "width | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/traitkey/1616684-width",
    "html": "Discussion\n\nThe value of this key is an NSNumber object. The valid value range is from -1.0 to 1.0. The value of 0.0 corresponds to the regular glyph spacing.\n\nSee Also\nFont traits\nstatic let slant: UIFontDescriptor.TraitKey\nThe relative slant angle of the font.\nstatic let symbolic: UIFontDescriptor.TraitKey\nThe symbolic font traits.\nstatic let weight: UIFontDescriptor.TraitKey\nThe numerical value that corresponds to a font face."
  },
  {
    "title": "setShowsCancelButton(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624293-setshowscancelbutton",
    "html": "Parameters\nshowsCancelButton\n\ntrue to display the cancel button, otherwise false.\n\nanimated\n\ntrue to use animation to change the display state of the cancel button, otherwise false.\n\nDiscussion\n\nCancel buttons are not displayed for apps running on iPad, even when you specify true for the showsCancelButton parameter\n\nSee Also\nConfiguring the search interface\nvar showsBookmarkButton: Bool\nA Boolean value indicating whether the bookmark button is displayed.\nvar showsCancelButton: Bool\nA Boolean value indicating whether the cancel button is displayed.\nvar showsSearchResultsButton: Bool\nA Boolean value indicating whether the search results button is displayed.\nvar isSearchResultsButtonSelected: Bool\nA Boolean value indicating whether the search results button is selected."
  },
  {
    "title": "showsBookmarkButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624298-showsbookmarkbutton",
    "html": "Discussion\n\nThe default value is false.\n\nSee Also\nConfiguring the search interface\nvar showsCancelButton: Bool\nA Boolean value indicating whether the cancel button is displayed.\nfunc setShowsCancelButton(Bool, animated: Bool)\nSets the display state of the cancel button optionally with animation.\nvar showsSearchResultsButton: Bool\nA Boolean value indicating whether the search results button is displayed.\nvar isSearchResultsButtonSelected: Bool\nA Boolean value indicating whether the search results button is selected."
  },
  {
    "title": "showsSearchResultsButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624273-showssearchresultsbutton",
    "html": "Discussion\n\nThe default value is false.\n\nSee Also\nConfiguring the search interface\nvar showsBookmarkButton: Bool\nA Boolean value indicating whether the bookmark button is displayed.\nvar showsCancelButton: Bool\nA Boolean value indicating whether the cancel button is displayed.\nfunc setShowsCancelButton(Bool, animated: Bool)\nSets the display state of the cancel button optionally with animation.\nvar isSearchResultsButtonSelected: Bool\nA Boolean value indicating whether the search results button is selected."
  },
  {
    "title": "typeIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/featurekey/1616687-typeidentifier",
    "html": "Deprecated\n\nUse selector instead.\n\nDiscussion\n\nThe value of this key is an NSNumber object specifying the ligature, character shape, or other font feature.\n\nSee Also\nDeprecated\nstatic let featureIdentifier: UIFontDescriptor.FeatureKey\nA key for identifying a font feature type."
  },
  {
    "title": "isSearchResultsButtonSelected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchbar/1624285-issearchresultsbuttonselected",
    "html": "Discussion\n\nThe default value is false.\n\nSee Also\nConfiguring the search interface\nvar showsBookmarkButton: Bool\nA Boolean value indicating whether the bookmark button is displayed.\nvar showsCancelButton: Bool\nA Boolean value indicating whether the cancel button is displayed.\nfunc setShowsCancelButton(Bool, animated: Bool)\nSets the display state of the cancel button optionally with animation.\nvar showsSearchResultsButton: Bool\nA Boolean value indicating whether the search results button is displayed."
  },
  {
    "title": "UILocalNotificationDefaultSoundName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilocalnotificationdefaultsoundname",
    "html": "Discussion\n\nYou assign this value to the soundName property."
  },
  {
    "title": "UITextInputTextColorKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextinputtextcolorkey",
    "html": "Deprecated\n\nUse foregroundColor instead.\n\nDiscussion\n\nThe value of this key is a UIColor object."
  },
  {
    "title": "pushOut | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsparagraphstyle/linebreakstrategy/3667460-pushout",
    "html": "Discussion\n\nTo avoid an orphan word on the last line of a paragraph before a page break, the text system may extend individual lines by one or more words. Typically, the text system only pushes out the last line by one word."
  },
  {
    "title": "UITextSpellCheckingType.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextspellcheckingtype/default",
    "html": "Discussion\n\nThe default behavior is to enable spell-checking whenever autocorrection is also enabled."
  },
  {
    "title": "creditCardSecurityCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210391-creditcardsecuritycode",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "creditCardExpirationYear | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210386-creditcardexpirationyear",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "creditCardExpirationMonth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210385-creditcardexpirationmonth",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "addressState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649654-addressstate",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "streetAddressLine2 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649658-streetaddressline2",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "addressCity | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649648-addresscity",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616685-name",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the PostScript name of the font."
  },
  {
    "title": "location | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649646-location",
    "html": "See Also\nSetting location data\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "nickname | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649652-nickname",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "jobTitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649667-jobtitle",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name."
  },
  {
    "title": "middleName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649653-middlename",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "matrix | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616722-matrix",
    "html": "Discussion\n\nThe value is a CGAffineTransform instance that specifies the font’s transformation matrix. The default value is the identity matrix.\n\nBecause the system applies the matrix to the text matrix at rendering time, translation isn’t available. The rendering engine determines the translation independently."
  },
  {
    "title": "size | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616728-size",
    "html": "Discussion\n\nThe value is an optional NSNumber object that contains a float value. This float value specifies the font size."
  },
  {
    "title": "family | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616669-family",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the font family."
  },
  {
    "title": "featureSettings | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616701-featuresettings",
    "html": "Discussion\n\nThe value is an array of dictionaries that represents nondefault font feature settings. Each dictionary contains a type and selector key."
  },
  {
    "title": "textStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616683-textstyle",
    "html": "Discussion\n\nThe value is an NSString object that contains the specified text style."
  },
  {
    "title": "traits | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616736-traits",
    "html": "Discussion\n\nThe value is an NSDictionary instance that fully describes the font traits. The font supplies the default value."
  },
  {
    "title": "alert | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeyboardappearance/1624455-alert",
    "html": "Deprecated\n\nUse UIKeyboardAppearance.dark instead."
  },
  {
    "title": "visibleName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616690-visiblename",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the font’s visible name."
  },
  {
    "title": "UITextSmartInsertDeleteType.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextsmartinsertdeletetype/default",
    "html": "Discussion\n\nThis option selectively enables the automatic deletion of one or two neighboring spaces after a cut or delete, and the insertion of an extra space after a paste. For example, this option disables the behavior for email address and password keyboards."
  },
  {
    "title": "UIKeyboardAppearance.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uikeyboardappearance/default",
    "html": "Discussion\n\nThis constant corresponds to the UIKeyboardAppearance.light value."
  },
  {
    "title": "flightNumber | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/3750920-flightnumber",
    "html": "See Also\nTracking events\nstatic let shipmentTrackingNumber: UITextContentType\nA property that defines the content in a text input area as a parcel tracking number."
  },
  {
    "title": "birthdateDay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210381-birthdateday",
    "html": "See Also\nGetting birthday information\nstatic let birthdate: UITextContentType\nA property that defines the content in a text input area as a date of birth.\nstatic let birthdateMonth: UITextContentType\nA property that defines the content in a text input area as the month component of a birthdate.\nstatic let birthdateYear: UITextContentType\nA property that defines the content in a text input area as the year component of a birthdate."
  },
  {
    "title": "NSLineBreakMode.byTruncatingHead | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakmode/bytruncatinghead",
    "html": "Discussion\n\nAlthough this mode works for multiline text, it’s more often used for single line text."
  },
  {
    "title": "NSLineBreakMode.byTruncatingMiddle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakmode/bytruncatingmiddle",
    "html": "Discussion\n\nUse this mode for single-line layout; using it with multiline text truncates the text into a single line."
  },
  {
    "title": "NSWritingDirection.natural | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nswritingdirection/natural",
    "html": "Discussion\n\nThis is the default writing direction."
  },
  {
    "title": "face | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616720-face",
    "html": "Discussion\n\nThe value is an optional NSString object that specifies the font face."
  },
  {
    "title": "cascadeList | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616711-cascadelist",
    "html": "Discussion\n\nThe value is an NSArray instance, where each member of the array is a subdescriptor. The default value is the system default cascading list for the user’s locale."
  },
  {
    "title": "featureIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/featurekey/1616715-featureidentifier",
    "html": "Deprecated\n\nUse type instead.\n\nSee Also\nDeprecated\nstatic let typeIdentifier: UIFontDescriptor.FeatureKey\nA key for identifying the font feature selector."
  },
  {
    "title": "selector | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/featurekey/3864373-selector",
    "html": "Discussion\n\nThe value of this key is an NSNumber object specifying the font feature selector such as common ligature, traditional character shape, or other font feature.\n\nSee Also\nKeys\nstatic let type: UIFontDescriptor.FeatureKey\nA key for identifying the font feature type."
  },
  {
    "title": "UIInputView.Style.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinputview/style/default",
    "html": "Discussion\n\nDon’t apply tinting effects. This style is intended for input views that attach to the top of the keyboard and have a similar theme but that don’t look like the keyboard itself."
  },
  {
    "title": "UIInputView.Style.keyboard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiinputview/style/keyboard",
    "html": "Discussion\n\nThis style makes the input view match the keyboard appearance and can be used to replace or extend the keyboard."
  },
  {
    "title": "characterSet | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/attributename/1616727-characterset",
    "html": "Discussion\n\nThe value is an NSCharacterSet instance that represents the set of Unicode characters that the font covers. The font supplies the default value."
  },
  {
    "title": "layout(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdirection/3020645-layout",
    "html": "See Also\nText direction types\nstatic func storage(UITextStorageDirection) -> UITextDirection\nSpecifies the direction of text storage."
  },
  {
    "title": "default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/systemdesign/3151799-default",
    "html": "Discussion\n\nThe returned typeface depends on the system. In iOS, using this constant with withDesign(_:) returns SF Pro, while in watchOS that returns SF Compact.\n\nSee Also\nTypeface designs\nstatic let rounded: UIFontDescriptor.SystemDesign\nThe rounded variant of the default typeface.\nstatic let monospaced: UIFontDescriptor.SystemDesign\nThe monospace variant of the default typeface.\nstatic let serif: UIFontDescriptor.SystemDesign\nThe serif variant of the default typeface."
  },
  {
    "title": "creditCardName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210390-creditcardname",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "creditCardMiddleName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210389-creditcardmiddlename",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "creditCardGivenName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210388-creditcardgivenname",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "postalCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649649-postalcode",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "addressCityAndState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649657-addresscityandstate",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "streetAddressLine1 | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649663-streetaddressline1",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "organizationName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649666-organizationname",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "fullStreetAddress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649661-fullstreetaddress",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "familyName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649662-familyname",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "givenName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649659-givenname",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "birthdateMonth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210382-birthdatemonth",
    "html": "See Also\nGetting birthday information\nstatic let birthdate: UITextContentType\nA property that defines the content in a text input area as a date of birth.\nstatic let birthdateDay: UITextContentType\nA property that defines the content in a text input area as the day component of a birthdate.\nstatic let birthdateYear: UITextContentType\nA property that defines the content in a text input area as the year component of a birthdate."
  },
  {
    "title": "birthdateYear | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210383-birthdateyear",
    "html": "See Also\nGetting birthday information\nstatic let birthdate: UITextContentType\nA property that defines the content in a text input area as a date of birth.\nstatic let birthdateDay: UITextContentType\nA property that defines the content in a text input area as the day component of a birthdate.\nstatic let birthdateMonth: UITextContentType\nA property that defines the content in a text input area as the month component of a birthdate."
  },
  {
    "title": "UIAccessibilityContrast.high | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontrast/high",
    "html": "See Also\nContrast settings\ncase unspecified\nAn unspecified contrast.\ncase normal\nA normal contrast level."
  },
  {
    "title": "nameSuffix | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649665-namesuffix",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "UITextGranularity.word | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextgranularity/word",
    "html": "Discussion\n\nThe unit of text is a word."
  },
  {
    "title": "creditCardType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210392-creditcardtype",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "UITextGranularity.line | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextgranularity/line",
    "html": "Discussion\n\nThe unit of text is a line."
  },
  {
    "title": "UITextGranularity.sentence | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextgranularity/sentence",
    "html": "Discussion\n\nThe unit of text is a sentence."
  },
  {
    "title": "UITextGranularity.paragraph | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextgranularity/paragraph",
    "html": "Discussion\n\nThe unit of text is a paragraph."
  },
  {
    "title": "UITextGranularity.document | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextgranularity/document",
    "html": "Discussion\n\nThe unit of text is a document."
  },
  {
    "title": "countryName | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649650-countryname",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let sublocality: UITextContentType\nA property that defines the content in a text input area as a sublocality."
  },
  {
    "title": "sublocality | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649655-sublocality",
    "html": "See Also\nSetting location data\nstatic let location: UITextContentType\nA property that defines the content in a text input area as a location, such as a point of interest, an address, or another identifier for a location.\nstatic let fullStreetAddress: UITextContentType\nA property that defines the content in a text input area as a street address that fully identifies a location.\nstatic let streetAddressLine1: UITextContentType\nA property that defines the content in a text input area as the first line of a street address.\nstatic let streetAddressLine2: UITextContentType\nA property that defines the content in a text input area as the second line of a street address.\nstatic let addressCity: UITextContentType\nA property that defines the content in a text input area as a city name.\nstatic let addressCityAndState: UITextContentType\nA property that defines the content in a text input area as a city name with a state name.\nstatic let addressState: UITextContentType\nA property that defines the content in a text input area as a state name.\nstatic let postalCode: UITextContentType\nA property that defines the content in a text input area as a postal code.\nstatic let countryName: UITextContentType\nA property that defines the content in a text input area as a country or region name."
  },
  {
    "title": "creditCardExpiration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/4210384-creditcardexpiration",
    "html": "See Also\nAccepting payment\nstatic let creditCardNumber: UITextContentType\nA property that defines the content in a text input area as a credit card number.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "creditCardNumber | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1778267-creditcardnumber",
    "html": "See Also\nAccepting payment\nstatic let creditCardExpiration: UITextContentType\nA property that defines the content in a text input area as an expiration date on a credit card.\nstatic let creditCardExpirationMonth: UITextContentType\nA property that defines the content in a text input area as the month component of an expiration date on a credit card.\nstatic let creditCardExpirationYear: UITextContentType\nA property that defines the content in a text input area as the year component of an expiration date on a credit card.\nstatic let creditCardSecurityCode: UITextContentType\nA property that defines the content in a text input area as a credit card security code.\nstatic let creditCardType: UITextContentType\nA property that defines the content in a text input area as a credit card type.\nstatic let creditCardName: UITextContentType\nA property that defines the content in a text input area as a name on a credit card.\nstatic let creditCardGivenName: UITextContentType\nA property that defines the content in a text input area as a first name on a credit card.\nstatic let creditCardMiddleName: UITextContentType\nA property that defines the content in a text input area as a middle name on a credit card.\nstatic let creditCardFamilyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name, on a credit card."
  },
  {
    "title": "username | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/2866088-username",
    "html": "See Also\nManaging accounts\nstatic let password: UITextContentType\nA property that defines the content in a text input area as a password.\nstatic let newPassword: UITextContentType\nA property that defines the content in a text input area as a new password."
  },
  {
    "title": "newPassword | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/2980929-newpassword",
    "html": "See Also\nManaging accounts\nstatic let username: UITextContentType\nA property that defines the content in a text input area as an account or login name.\nstatic let password: UITextContentType\nA property that defines the content in a text input area as a password."
  },
  {
    "title": "telephoneNumber | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649664-telephonenumber",
    "html": "See Also\nSetting communication details\nstatic let emailAddress: UITextContentType\nA property that defines the content in a text input area as an email address."
  },
  {
    "title": "emailAddress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649660-emailaddress",
    "html": "See Also\nSetting communication details\nstatic let telephoneNumber: UITextContentType\nA property that defines the content in a text input area as a telephone number."
  },
  {
    "title": "password | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/2865813-password",
    "html": "See Also\nManaging accounts\nstatic let username: UITextContentType\nA property that defines the content in a text input area as an account or login name.\nstatic let newPassword: UITextContentType\nA property that defines the content in a text input area as a new password."
  },
  {
    "title": "regular | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616678-regular",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "UITextDropProposal.Action.replaceSelection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/action/replaceselection",
    "html": "Discussion\n\nIf the text view does not contain a selection, dropped text is inserted at the provided location, without altering the surrounding text.\n\nSee Also\nText drop actions\ncase insert\nA text drop action style specifying that text is inserted at the provided location, without altering the surrounding text.\ncase replaceAll\nA text drop action style specifying that the dropped text replaces all text in the target text view."
  },
  {
    "title": "currentInputMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextinputmode/1614538-currentinputmode",
    "html": "Return Value\n\nAn object representing the current input mode or nil if this object is not set by the text input system.\n\nSee Also\nGetting the current and active text-input modes\nactiveInputModes\nThe active text-input modes."
  },
  {
    "title": "UITextSmartDashesType.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextsmartdashestype/default",
    "html": "Discussion\n\nThis option selectively enables the smart dash behavior based on the keyboard type. For example, smart dashes are disabled for email address and password keyboards."
  },
  {
    "title": "rounded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/systemdesign/3151800-rounded",
    "html": "Discussion\n\nThe returned typeface depends on the system. iOS returns SF Pro Rounded, while watchOS returns SF Compact Rounded.\n\nSee Also\nTypeface designs\nstatic let `default`: UIFontDescriptor.SystemDesign\nThe default typeface for an app’s user interface.\nstatic let monospaced: UIFontDescriptor.SystemDesign\nThe monospace variant of the default typeface.\nstatic let serif: UIFontDescriptor.SystemDesign\nThe serif variant of the default typeface."
  },
  {
    "title": "monospaced | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/systemdesign/3152921-monospaced",
    "html": "Discussion\n\nUsing this constant with withDesign(_:) returns SF Mono.\n\nSee Also\nTypeface designs\nstatic let `default`: UIFontDescriptor.SystemDesign\nThe default typeface for an app’s user interface.\nstatic let rounded: UIFontDescriptor.SystemDesign\nThe rounded variant of the default typeface.\nstatic let serif: UIFontDescriptor.SystemDesign\nThe serif variant of the default typeface."
  },
  {
    "title": "UILegibilityWeight.bold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilegibilityweight/bold",
    "html": "See Also\nWeights\ncase unspecified\nAn unspecified text weight.\ncase regular\nA regular font weight."
  },
  {
    "title": "UILegibilityWeight.unspecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilegibilityweight/unspecified",
    "html": "See Also\nWeights\ncase regular\nA regular font weight.\ncase bold\nA bold font weight."
  },
  {
    "title": "UILegibilityWeight.regular | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilegibilityweight/regular",
    "html": "See Also\nWeights\ncase unspecified\nAn unspecified text weight.\ncase bold\nA bold font weight."
  },
  {
    "title": "namePrefix | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649647-nameprefix",
    "html": "See Also\nIdentifying contacts\nstatic let name: UITextContentType\nA property that defines the content in a text input area as a name.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextcontenttype/1649669-name",
    "html": "See Also\nIdentifying contacts\nstatic let namePrefix: UITextContentType\nA property that defines the content in a text input area as a prefix or title, such as Dr.\nstatic let nameSuffix: UITextContentType\nA property that defines the content in a text input area as a suffix, such as Jr.\nstatic let givenName: UITextContentType\nA property that defines the content in a text input area as a first name.\nstatic let middleName: UITextContentType\nA property that defines the content in a text input area as a middle name.\nstatic let familyName: UITextContentType\nA property that defines the content in a text input area as a family name, or last name.\nstatic let nickname: UITextContentType\nA property that defines the content in a text input area as a nickname.\nstatic let organizationName: UITextContentType\nA property that defines the content in a text input area as an organization name.\nstatic let jobTitle: UITextContentType\nA property that defines the content in a text input area as a job title."
  },
  {
    "title": "storage(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdirection/3020646-storage",
    "html": "See Also\nText direction types\nstatic func layout(UITextLayoutDirection) -> UITextDirection\nSpecifies the direction of text layout."
  },
  {
    "title": "UITextGranularity.character | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextgranularity/character",
    "html": "Discussion\n\nThe unit of text is a character."
  },
  {
    "title": "UIUserInterfaceLevel.unspecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiuserinterfacelevel/unspecified",
    "html": "Discussion\n\nChoose this option when you want to follow the inherited level.\n\nSee Also\nInterface levels\ncase base\nThe level for your window’s main content.\ncase elevated\nThe level for content visually above your window’s main content."
  },
  {
    "title": "UIUserInterfaceLevel.elevated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiuserinterfacelevel/elevated",
    "html": "See Also\nInterface levels\ncase unspecified\nAn unspecified interface level.\ncase base\nThe level for your window’s main content."
  },
  {
    "title": "isSelected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragrequest/2890906-isselected",
    "html": "Required\n\nSee Also\nGetting information about the text\nvar dragRange: UITextRange\nA range of text associated with a drag item in an active drag session that originated in a text view.\n\nRequired"
  },
  {
    "title": "textPasteConfigurationSupporting(_:transform:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpastedelegate/2887483-textpasteconfigurationsupporting",
    "html": "Parameters\ntextPasteConfigurationSupporting\n\nThe object that received the paste or drop request.\n\nitem\n\nThe text paste item included in the paste or drop operation.\n\nDiscussion\n\nThis method is called for each text paste item during a paste or drop operation. You’re required to call one of the setResult methods (see Setting a text paste item’s result value) on item, but the call doesn’t have to be within the scope of the transform method. It can, for example, be part of the asynchronous handling code for the itemProvider, or it can be part of a completion block. You can make the call whenever you prefer.\n\nIt’s safe to use the provided UITextPasteItem object on any thread, but the transform method is always called on the main thread."
  },
  {
    "title": "UIUserInterfaceLevel.base | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiuserinterfacelevel/base",
    "html": "See Also\nInterface levels\ncase unspecified\nAn unspecified interface level.\ncase elevated\nThe level for content visually above your window’s main content."
  },
  {
    "title": "minimumFontSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uilabel/1620529-minimumfontsize",
    "html": "Deprecated\n\nUse minimumScaleFactor instead.\n\nDiscussion\n\nWhen drawing text that might not fit within the bounding rectangle of the label, you can use this property to prevent the label from reducing the font size to a point where it’s no longer legible.\n\nThe default value for this property is 0.0. If you enable font adjustment for the label, you should always increase this value. This property is effective only when the numberOfLines is 1.\n\nSee Also\nSizing the label’s text\nadjustsFontSizeToFitWidth\nA Boolean value that determines whether the label reduces the text’s font size to fit the title string into the label’s bounding rectangle.\nallowsDefaultTighteningForTruncation\nA Boolean value that determines whether the label tightens text before truncating.\nbaselineAdjustment\nAn option that controls whether the text’s baseline remains fixed when text needs to shrink to fit in the label.\nminimumScaleFactor\nThe minimum scale factor for the label’s text.\nnumberOfLines\nThe maximum number of lines for rendering text.\nsizingRule\nThe typographic bounds-sizing behavior that handles text with fonts that contain oversize characters.\n\nRequired\n\nadjustsLetterSpacingToFitWidth\nA Boolean value that indicates whether the label adjusts spacing between letters to fit the string within the label’s bounds rectangle.\nDeprecated"
  },
  {
    "title": "weight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifontdescriptor/traitkey/1616668-weight",
    "html": "Discussion\n\nThe value of this key is an NSNumber object. The valid value range is from -1.0 to 1.0, where 0.0 corresponds to the regular weight constant. The negative side of the value range indicates that the font is light or thin; the positive side means the font is heavier or bolder. For example, the font face ultraLight has the approximate value of -0.8, and black has the approximate value of 0.62. When providing a weight that doesn’t precisely match a font face in the family, the system locates an available face that represents the closest match.\n\nYou can use a font face constant to specify a weight; for a list of constants, see UIFont.Weight.\n\nTo access the weight of a font, first retrieve the font’s traits dictionary information:\n\nlet font = UIFont.systemFont(ofSize: 21, weight: .bold)\nif let traits = font.fontDescriptor.object(forKey: .traits) as? [UIFontDescriptor.TraitKey: Any]{\n    let weightValue = traits[.weight]\n}\n\n\nSee Also\nFont traits\nstatic let slant: UIFontDescriptor.TraitKey\nThe relative slant angle of the font.\nstatic let symbolic: UIFontDescriptor.TraitKey\nThe symbolic font traits.\nstatic let width: UIFontDescriptor.TraitKey\nThe inter-glyph spacing of the font."
  },
  {
    "title": "UIAccessibilityContrast.unspecified | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontrast/unspecified",
    "html": "See Also\nContrast settings\ncase normal\nA normal contrast level.\ncase high\nA high contrast level."
  },
  {
    "title": "UIAccessibilityContrast.normal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitycontrast/normal",
    "html": "See Also\nContrast settings\ncase unspecified\nAn unspecified contrast.\ncase high\nA high contrast level."
  },
  {
    "title": "light | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616697-light",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "medium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616725-medium",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "black | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616714-black",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight."
  },
  {
    "title": "UITextSmartQuotesType.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextsmartquotestype/default",
    "html": "Discussion\n\nThis option selectively enables the smart quote behavior based on the keyboard type. For example, smart quotes are disabled for email address and password keyboards."
  },
  {
    "title": "init(layoutManager:range:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2890970-init",
    "html": "Parameters\nlayoutManager\n\nThe layout manager that renders the text drag preview.\n\nrange\n\nThe range to render the text drag preview.\n\nReturn Value\n\nA renderer of a text drag preview using the specified layout manager and range.\n\nSee Also\nInitializing a text drag preview renderer\ninit(layoutManager: NSLayoutManager, range: NSRange, unifyRects: Bool)\nReturns an initialized renderer of a text drag preview with the specified layout manager, range, and rectangle detection behavior."
  },
  {
    "title": "textDroppableView(_:previewForDroppingAllItemsWithDefault:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2909033-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\ndefaultPreview\n\nThe preview that is displayed when the delegate doesn't provide this method.\n\nReturn Value\n\nA target drag preview to show during the drop animation, or nil to show the default preview.\n\nDiscussion\n\nYou implement this method when you want to show a nondefault preview during the drop animation. If you return nil, the system shows the default preview."
  },
  {
    "title": "adjust(firstLineRect:bodyRect:lastLineRect:textOrigin:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2890984-adjust",
    "html": "Parameters\nfirstLineRect\n\nThe bounding rectangle for the first line of text in the drag preview.\n\nbodyRect\n\nThe bounding rectangle for the text in the middle of the drag preview that doesn’t include the first and last line.\n\nlastLineRect\n\nThe bounding rectangle for the last line of text in the drag preview.\n\norigin\n\nThe origin of the text preview.\n\nDiscussion\n\nThis method does nothing by default. Subclasses may override this method to change the rectangle calculations; for example, in order to enlarge the rectangles by a few points. If you adjust the rectangles, the drag preview changes accordingly.\n\nSee Also\nGetting and setting bounding rectangles\nvar bodyRect: CGRect\nThe bounding rectangle of the text in the middle of the drag preview.\nvar firstLineRect: CGRect\nThe bounding rectangle of the first line of text in the drag preview.\nvar lastLineRect: CGRect\nThe bounding rectangle of the last line of text in the drag preview."
  },
  {
    "title": "UITextDropEditability.temporary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropeditability/temporary",
    "html": "See Also\nEditability styles\ncase no\nA text-drop editability specifier indicating that a noneditable text view does not accept drops.\ncase yes\nA text-drop editability specifier indicating that a noneditable text view does accept drops, and that the dropped text remains editable after the drop is finished."
  },
  {
    "title": "textDroppableView(_:proposalForDrop:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890851-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\ndrop\n\nThe drop request.\n\nReturn Value\n\nA text drop proposal that specifies the behavior of the drop operation.\n\nDiscussion\n\nThis method is called multiple times while the user performs the drag and drop activity. For instance, it's called when the user drags items into the text view. It's also called when the text position changes while the user drags items over the text view. If the drag session changes, which happens when the user adds more items to the drag item set, the method is called again.\n\nBecause this method is called frequently, it's important for your implementation to do only what is necessary to return the appropriate drop proposal as quickly as possible.\n\nSee Also\nAccepting a drop activity\nfunc textDroppableView(UIView & UITextDroppable, willBecomeEditableForDrop: UITextDropRequest) -> UITextDropEditability\nAsks the delegate if a noneditable text view can accept a drop operation."
  },
  {
    "title": "textDraggableView(_:willAnimateLiftWith:session:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragdelegate/2919989-textdraggableview",
    "html": "Parameters\ntextDraggableView\n\nThe text view where the drag activity was started.\n\nanimator\n\nThe animator that you use when adding animations.\n\nsession\n\nThe drag session of the current drag activity.\n\nDiscussion\n\nYou implement this delegate method when you want to add animations that happen alongside the system animation during the lift activity. To add such an animation, use the animator's addAnimations(_:) method. To add an animation that happens after the system animation has ended, use the animator's addCompletion(_:) method."
  },
  {
    "title": "NSLineBreakMode.byTruncatingTail | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nslinebreakmode/bytruncatingtail",
    "html": "Discussion\n\nAlthough this mode works for multiline text, it’s more often used for single line text."
  },
  {
    "title": "textDroppableView(_:willBecomeEditableForDrop:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890856-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\ndrop\n\nThe drop request.\n\nReturn Value\n\nA text drop editability style that indicates whether the text view can accept a drop operation.\n\nDiscussion\n\nBy default, a text view that is not editable can't accept drop requests. However, you can change this behavior by returning the editability style UITextDropEditability.temporary or UITextDropEditability.yes in your implementation of this method. Not implementing this method is the same as returning the UITextDropEditability.no style.\n\nSee Also\nAccepting a drop activity\nfunc textDroppableView(UIView & UITextDroppable, proposalForDrop: UITextDropRequest) -> UITextDropProposal\nAsks the delegate if the text view can accept a drop operation."
  },
  {
    "title": "setSearchTokenResult(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisearchtextfieldpasteitem/3295955-setsearchtokenresult",
    "html": "Required\n\nParameters\ntoken\n\nThe token for the item to paste."
  },
  {
    "title": "textDraggableView(_:dragSessionDidEnd:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890902-textdraggableview",
    "html": "Parameters\ntextDraggableView\n\nThe text view where the drag activity was started.\n\nsession\n\nThe drag session of the current drag activity.\n\noperation\n\nThe operation that occurred during the drop activity.\n\nSee Also\nHandling drag session notifications\nfunc textDraggableView(UIView & UITextDraggable, dragSessionWillBegin: UIDragSession)\nTells the delegate that the text has been lifted out of the text view and the user is beginning to drag the text."
  },
  {
    "title": "textDraggableView(_:dragSessionWillBegin:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890907-textdraggableview",
    "html": "Parameters\ntextDraggableView\n\nThe text view where the drag activity was started.\n\nsession\n\nThe drag session of the current drag activity.\n\nSee Also\nHandling drag session notifications\nfunc textDraggableView(UIView & UITextDraggable, dragSessionDidEnd: UIDragSession, with: UIDropOperation)\nTells the delegate that the drag session has ended."
  },
  {
    "title": "textDraggableView(_:itemsForDrag:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragdelegate/2890908-textdraggableview",
    "html": "Parameters\ntextDraggableView\n\nThe text view where the drag activity was started.\n\ndragRequest\n\nThe current drag request.\n\nReturn Value\n\nAn array of drag items that represent the items to drag.\n\nDiscussion\n\nYou implement this method when you need to provide custom drag items. The drag request gives you the text range of the text that is included in the drag activity. It also gives you the default drag items, which you can add to or change. If you return an empty array, the drag operation does not happen.\n\nNote\n\nThis method may be called more than once. For instance, it is called each time the user adds more drag items to the session. You can detect additional calls to this method by checking the existingItems property on the drag request."
  },
  {
    "title": "suggestedProposal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdroprequest/2890845-suggestedproposal",
    "html": "Required\n\nSee Also\nGetting information about the text drop request\nvar dropPosition: UITextPosition\nThe text position corresponding to the location of a drop session.\n\nRequired\n\nvar isSameView: Bool\nA Boolean value indicating whether the drag and the drop are within the same text view.\n\nRequired"
  },
  {
    "title": "textPasteConfigurationSupporting(_:performPasteOf:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpastedelegate/2887492-textpasteconfigurationsupporting",
    "html": "Return Value\n\nA text range representing the position of the text added to the text view.\n\nDiscussion\n\nYou implement this method when you want to handle pasting the final attributed string into the text view. If you don’t implement this method, the standard paste mechanism is used. When adding the attributed string to the text view, be sure to place the text at the provided text range. Placing the string elsewhere in the text view may confuse the user.\n\nSee Also\nPasting the text paste item\nfunc textPasteConfigurationSupporting(UITextPasteConfigurationSupporting, combineItemAttributedStrings: [NSAttributedString], for: UITextRange) -> NSAttributedString\nAsks the delegate to combine multiple strings into a single attributed string."
  },
  {
    "title": "dropPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdroprequest/2890859-dropposition",
    "html": "Required\n\nSee Also\nGetting information about the text drop request\nvar isSameView: Bool\nA Boolean value indicating whether the drag and the drop are within the same text view.\n\nRequired\n\nvar suggestedProposal: UITextDropProposal\nThe text drop proposal offered by the text view.\n\nRequired"
  },
  {
    "title": "textPasteConfigurationSupporting(_:shouldAnimatePasteOf:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpastedelegate/2909062-textpasteconfigurationsupporting",
    "html": "Parameters\ntextPasteConfigurationSupporting\n\nThe object that received the paste or drop request.\n\nattributedString\n\nThe text that will be added to the text view.\n\ntextRange\n\nThe position in the text view where the paste or drop operation will place the text.\n\nReturn Value\n\nfalse if the paste or drop operation should not be animated; otherwise, true.\n\nDiscussion\n\nIf you don’t want the system to animate the paste or drop operation, implement this method and return false. The operation is animated if you return true or if this method isn’t implemented."
  },
  {
    "title": "textPasteConfigurationSupporting(_:combineItemAttributedStrings:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpastedelegate/2887490-textpasteconfigurationsupporting",
    "html": "Parameters\ntextPasteConfigurationSupporting\n\nThe object that received the paste or drop request.\n\nitemStrings\n\nAn array of attributed strings that will be combined to form a single attributed string.\n\ntextRange\n\nThe position in the text view where the paste or drop operation will place the text.\n\nReturn Value\n\nAn attributed string based on the combination of multiple strings.\n\nDiscussion\n\nYou implement this method when you need to change how the item strings are combined to form the single attributed string. If this method isn’t implemented, the item strings are concatenated without any delimiters.\n\nSee Also\nPasting the text paste item\nfunc textPasteConfigurationSupporting(UITextPasteConfigurationSupporting, performPasteOf: NSAttributedString, to: UITextRange) -> UITextRange\nAsks the delegate to explicitly handle the final incorporation of a pasted or dropped string of text into the text view."
  },
  {
    "title": "dragRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragrequest/2890901-dragrange",
    "html": "Required\n\nSee Also\nGetting information about the text\nvar isSelected: Bool\nA Boolean value indicating whether text is selected for dragging.\n\nRequired"
  },
  {
    "title": "subheadline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/textstyle/1616671-subheadline",
    "html": "Discussion\n\nImportant\n\nOn tvOS, text used for subheadings should be in an all-caps format."
  },
  {
    "title": "heavy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616732-heavy",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "bold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616726-bold",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "semibold | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616706-semibold",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "updateTextAttributes(conversionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextformattingcoordinatordelegate/3261469-updatetextattributes",
    "html": "Required"
  },
  {
    "title": "ultraLight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616692-ultralight",
    "html": "See Also\nUsing system-defined font weights\nstatic let thin: UIFont.Weight\nThe thin font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "thin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/1616729-thin",
    "html": "See Also\nUsing system-defined font weights\nstatic let ultraLight: UIFont.Weight\nThe ultra-light font weight.\nstatic let light: UIFont.Weight\nThe light font weight.\nstatic let regular: UIFont.Weight\nThe regular font weight.\nstatic let medium: UIFont.Weight\nThe medium font weight.\nstatic let semibold: UIFont.Weight\nThe semibold font weight.\nstatic let bold: UIFont.Weight\nThe bold font weight.\nstatic let heavy: UIFont.Weight\nThe heavy font weight.\nstatic let black: UIFont.Weight\nThe black font weight."
  },
  {
    "title": "symbolWeight() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uifont/weight/3294271-symbolweight",
    "html": "Parameters\nfontWeight\n\nThe font weight of the text.\n\nReturn Value\n\nThe UIImage.SymbolWeight that most closely coordinates with the provided font weight.\n\nDiscussion\n\nWhen placing symbols adjacent to text, use this method to find the appropriate symbol weight to match the weight of the text. Similarly, if you want to display a symbol with a particular weight, you can use fontWeight() to look up the matching font weight for adjacent text."
  },
  {
    "title": "UITextDropProposal.Action.replaceAll | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/action/replaceall",
    "html": "See Also\nText drop actions\ncase insert\nA text drop action style specifying that text is inserted at the provided location, without altering the surrounding text.\ncase replaceSelection\nA text drop action style specifying that if the target text view contains a selection, dropped text replaces it."
  },
  {
    "title": "UITextDropProposal.Action.insert | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/action/insert",
    "html": "Discussion\n\nThe action ignores any selection present in the target text view.\n\nSee Also\nText drop actions\ncase replaceAll\nA text drop action style specifying that the dropped text replaces all text in the target text view.\ncase replaceSelection\nA text drop action style specifying that if the target text view contains a selection, dropped text replaces it."
  },
  {
    "title": "UINavigationItem.BackButtonDisplayMode.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitem/backbuttondisplaymode/default",
    "html": "Discussion\n\nWhen you set the backButtonDisplayMode property to this value, the navigation item attempts to display these titles for its Back button in the following order:\n\nbackButtonTitle\n\ntitle\n\nA generic title, such as Back\n\nNo title\n\nThe navigation item selects the most appropriate title for the Back button according to the available space."
  },
  {
    "title": "AXStringReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axstringreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXVoidReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axvoidreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXPointReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axpointreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "UIForceTouchCapability.available | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiforcetouchcapability/available",
    "html": "See Also\nAvailability options\ncase unknown\nThe availability of 3D Touch is unknown.\ncase unavailable\n3D Touch isn’t available on the device."
  },
  {
    "title": "UIForceTouchCapability.unknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiforcetouchcapability/unknown",
    "html": "Discussion\n\nA view has this trait after you create it but before you add it your app’s view hierarchy.\n\nSee Also\nAvailability options\ncase available\n3D Touch is available on the device.\ncase unavailable\n3D Touch isn’t available on the device."
  },
  {
    "title": "dropAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/2891037-dropaction",
    "html": "Discussion\n\nThe property's default value is UITextDropProposal.Action.insert.\n\nSee Also\nConfiguring a text drop proposal\nenum UITextDropProposal.Action\nThe text drop action styles for text views.\nvar dropPerformer: UITextDropProposal.Performer\nThe performer that is responsible for handling the drop operation.\nenum UITextDropProposal.Performer\nThe performers that are responsible for handling the drop operation.\nvar dropProgressMode: UITextDropProposal.ProgressMode\nA mode that specifies how the text view indicates progress to the user when loading dropped items.\nenum UITextDropProposal.ProgressMode\nThe text drop progress styles for user-visible progress indication.\nvar useFastSameViewOperations: Bool\nA Boolean value that determines whether the text view can use fast inline dropping when the source and destination are in the same text view."
  },
  {
    "title": "itemProvider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887489-itemprovider",
    "html": "Required\n\nSee Also\nAccessing the text paste item’s data\nvar localObject: Any?\nThe custom local object that the copy or drag source optionally attached to the drag item.\n\nRequired"
  },
  {
    "title": "setNoResult() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887491-setnoresult",
    "html": "Required\n\nSee Also\nSetting a text paste item’s result value\nfunc setResult(string: String)\nSets a text paste item’s textual value to a specified plaintext string from the item provider.\n\nRequired\n\nfunc setResult(attributedString: NSAttributedString)\nSets a text paste item’s textual value to a specified attributed string from the item provider.\n\nRequired\n\nfunc setResult(attachment: NSTextAttachment)\nSets a text paste item’s attachment value to a specified value.\n\nRequired\n\nfunc setDefaultResult()\nSets the text paste item’s value to the default value based on the item provider’s data.\n\nRequired"
  },
  {
    "title": "UITextDropProposal.Performer.view | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/performer/view",
    "html": "Discussion\n\nThis performer is the default for a UITextDropProposal object. If this performer is used, the textDroppableView(_:willPerformDrop:) method is called (if implemented). However, implementing the delegate method isn't required when using this performer.\n\nSee Also\nPerformers\ncase delegate\nA performer type that indicates the delegate object is responsible for doing the drop operation."
  },
  {
    "title": "bodyRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2890974-bodyrect",
    "html": "Discussion\n\nThe body rectangle contains the full lines of text in the middle of the drag preview that doesn’t include the first line and last line. This property can be a zero rectangle. The initial value is also not calculated until the first time it’s used.\n\nSee Also\nGetting and setting bounding rectangles\nvar firstLineRect: CGRect\nThe bounding rectangle of the first line of text in the drag preview.\nvar lastLineRect: CGRect\nThe bounding rectangle of the last line of text in the drag preview.\nfunc adjust(firstLineRect: UnsafeMutablePointer<CGRect>, bodyRect: UnsafeMutablePointer<CGRect>, lastLineRect: UnsafeMutablePointer<CGRect>, textOrigin: CGPoint)\nAdjusts the size and origin of the bounding rectangles during a text drag operation."
  },
  {
    "title": "firstLineRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891020-firstlinerect",
    "html": "Discussion\n\nThe first line rectangle contains the first line of text in the drag preview that may be a partial line. This property can be a zero rectangle. The initial value is also not calculated until the first time it’s used.\n\nSee Also\nGetting and setting bounding rectangles\nvar bodyRect: CGRect\nThe bounding rectangle of the text in the middle of the drag preview.\nvar lastLineRect: CGRect\nThe bounding rectangle of the last line of text in the drag preview.\nfunc adjust(firstLineRect: UnsafeMutablePointer<CGRect>, bodyRect: UnsafeMutablePointer<CGRect>, lastLineRect: UnsafeMutablePointer<CGRect>, textOrigin: CGPoint)\nAdjusts the size and origin of the bounding rectangles during a text drag operation."
  },
  {
    "title": "useFastSameViewOperations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/2891034-usefastsameviewoperations",
    "html": "Discussion\n\nIf this property is true, the drag item data isn't used. Instead, the drop operation moves or copies the text from its original position to the dropped position within the text view. The default value is true.\n\nSee Also\nConfiguring a text drop proposal\nvar dropAction: UITextDropProposal.Action\nA text drop action style that specifies how the text view receives dropped items.\nenum UITextDropProposal.Action\nThe text drop action styles for text views.\nvar dropPerformer: UITextDropProposal.Performer\nThe performer that is responsible for handling the drop operation.\nenum UITextDropProposal.Performer\nThe performers that are responsible for handling the drop operation.\nvar dropProgressMode: UITextDropProposal.ProgressMode\nA mode that specifies how the text view indicates progress to the user when loading dropped items.\nenum UITextDropProposal.ProgressMode\nThe text drop progress styles for user-visible progress indication."
  },
  {
    "title": "setResult(attachment:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887484-setresult",
    "html": "Required\n\nSee Also\nSetting a text paste item’s result value\nfunc setResult(string: String)\nSets a text paste item’s textual value to a specified plaintext string from the item provider.\n\nRequired\n\nfunc setResult(attributedString: NSAttributedString)\nSets a text paste item’s textual value to a specified attributed string from the item provider.\n\nRequired\n\nfunc setDefaultResult()\nSets the text paste item’s value to the default value based on the item provider’s data.\n\nRequired\n\nfunc setNoResult()\nSets the text paste item’s textual value to not include data from the item provider.\n\nRequired"
  },
  {
    "title": "dropProgressMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/2890989-dropprogressmode",
    "html": "Discussion\n\nThe default value is UITextDropProposal.ProgressMode.system.\n\nSee Also\nConfiguring a text drop proposal\nvar dropAction: UITextDropProposal.Action\nA text drop action style that specifies how the text view receives dropped items.\nenum UITextDropProposal.Action\nThe text drop action styles for text views.\nvar dropPerformer: UITextDropProposal.Performer\nThe performer that is responsible for handling the drop operation.\nenum UITextDropProposal.Performer\nThe performers that are responsible for handling the drop operation.\nenum UITextDropProposal.ProgressMode\nThe text drop progress styles for user-visible progress indication.\nvar useFastSameViewOperations: Bool\nA Boolean value that determines whether the text view can use fast inline dropping when the source and destination are in the same text view."
  },
  {
    "title": "UITextDropProposal.Performer.delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/performer/delegate",
    "html": "Discussion\n\nIf this performer is used, the delegate must implement the textDroppableView(_:willPerformDrop:) method. Otherwise, the text view handles the drop operation, which is the same behavior as specifying UITextDropProposal.Performer.view as the performer.\n\nSee Also\nPerformers\ncase view\nA performer type that indicates that the text view is responsible for doing the drop operation."
  },
  {
    "title": "lastLineRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891017-lastlinerect",
    "html": "Discussion\n\nThe last line rectangle contains the last line of text in the drag preview that may be a partial line. This property can be a zero rectangle. The initial value is also not calculated until the first time it’s used.\n\nSee Also\nGetting and setting bounding rectangles\nvar bodyRect: CGRect\nThe bounding rectangle of the text in the middle of the drag preview.\nvar firstLineRect: CGRect\nThe bounding rectangle of the first line of text in the drag preview.\nfunc adjust(firstLineRect: UnsafeMutablePointer<CGRect>, bodyRect: UnsafeMutablePointer<CGRect>, lastLineRect: UnsafeMutablePointer<CGRect>, textOrigin: CGPoint)\nAdjusts the size and origin of the bounding rectangles during a text drag operation."
  },
  {
    "title": "textDroppableView(_:dropSessionDidExit:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890854-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\nsession\n\nThe current drop session.\n\nSee Also\nHandling drop session notifications\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidEnter: UIDropSession)\nTells the delegate that the user has moved the drag items into the coordinate system of the text view.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidUpdate: UIDropSession)\nTells the delegate that the drop session has been updated.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidEnd: UIDropSession)\nTells the delegate that the drop session has ended."
  },
  {
    "title": "textDroppableView(_:dropSessionDidUpdate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890861-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\nsession\n\nThe current drop session.\n\nDiscussion\n\nThe system usually—but not always—calls this method before calling the textDroppableView(_:proposalForDrop:) method. However, it's called frequently, so do only what is necessary in your implementation.\n\nSee Also\nHandling drop session notifications\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidEnter: UIDropSession)\nTells the delegate that the user has moved the drag items into the coordinate system of the text view.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidExit: UIDropSession)\nTells the delegate that the user has moved the drag items out of the text view's coordinate system.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidEnd: UIDropSession)\nTells the delegate that the drop session has ended."
  },
  {
    "title": "textDroppableView(_:willPerformDrop:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890858-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\ndrop\n\nThe drop request.\n\nDiscussion\n\nIf you need to modify the drag items before the drop operation happens, provide the text view a pasteDelegate object that implements the paste(itemProviders:) method. In the implementation, do the item conversion and paste the text."
  },
  {
    "title": "textDroppableView(_:dropSessionDidEnd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890857-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\nsession\n\nThe drop session that has ended.\n\nDiscussion\n\nYou implement this method if your delegate needs to do additional cleanup after the drop session has ended.\n\nSee Also\nHandling drop session notifications\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidEnter: UIDropSession)\nTells the delegate that the user has moved the drag items into the coordinate system of the text view.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidExit: UIDropSession)\nTells the delegate that the user has moved the drag items out of the text view's coordinate system.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidUpdate: UIDropSession)\nTells the delegate that the drop session has been updated."
  },
  {
    "title": "standard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/nsparagraphstyle/linebreakstrategy/3667461-standard",
    "html": "Discussion\n\nThis strategy optimizes for displaying shorter strings that are common in UI labels. This strategy may be unsuitable for large amounts of text."
  },
  {
    "title": "UITextDropEditability.no | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropeditability/no",
    "html": "See Also\nEditability styles\ncase temporary\nA text-drop editability specifier indicating that a noneditable text view does accept drops but reverts to its noneditable status immediately afterward.\ncase yes\nA text-drop editability specifier indicating that a noneditable text view does accept drops, and that the dropped text remains editable after the drop is finished."
  },
  {
    "title": "UITextDropEditability.yes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropeditability/yes",
    "html": "See Also\nEditability styles\ncase no\nA text-drop editability specifier indicating that a noneditable text view does not accept drops.\ncase temporary\nA text-drop editability specifier indicating that a noneditable text view does accept drops but reverts to its noneditable status immediately afterward."
  },
  {
    "title": "stripTextColorFromPreviews | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragoptions/2897257-striptextcolorfrompreviews",
    "html": "Discussion\n\nWhen the system creates a preview for a text drag operation, the preview keeps the foreground and background text colors. Using the stripTextColorFromPreviews option strips away those colors, leaving the preview with black text on a clear background. This option changes only the preview, not the view used to create the preview. Also, this option doesn’t affect any images included in the preview."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationinteraction/3368131-init",
    "html": "See Also\nCreating an interaction type\ninit(String)\nCreates an activity items configuration interaction."
  },
  {
    "title": "isSameView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdroprequest/2890844-issameview",
    "html": "Required\n\nSee Also\nGetting information about the text drop request\nvar dropPosition: UITextPosition\nThe text position corresponding to the location of a drop session.\n\nRequired\n\nvar suggestedProposal: UITextDropProposal\nThe text drop proposal offered by the text view.\n\nRequired"
  },
  {
    "title": "share | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationinteraction/3368132-share",
    "html": "See Also\nSelecting interactions\nstatic let copy: UIActivityItemsConfigurationInteraction\nThe copy interaction."
  },
  {
    "title": "dropSession | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdroprequest/2890853-dropsession",
    "html": "Required"
  },
  {
    "title": "existingItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragrequest/2890912-existingitems",
    "html": "Required\n\nSee Also\nGetting the drag items\nvar suggestedItems: [UIDragItem]\nAn array of drag items that the system provides when the text drag delegate doesn’t provide custom drag items.\n\nRequired"
  },
  {
    "title": "suggestedItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragrequest/2890900-suggesteditems",
    "html": "Required\n\nDiscussion\n\nThe suggestedItems property is always an empty array if the text drag delegate doesn’t implement the textDraggableView(_:itemsForDrag:) method.\n\nSee Also\nGetting the drag items\nvar existingItems: [UIDragItem]\nThe array of drag items present in a drag session.\n\nRequired"
  },
  {
    "title": "UIAccessibilityScrollDirection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilityscrolldirection",
    "html": "Topics\nConstants\ncase right\nThe user is scrolling to the right.\ncase left\nThe user is scrolling to the left.\ncase up\nThe user is scrolling up.\ncase down\nThe user is scrolling down.\ncase next\nThe user is scrolling to the next view in an ordered set of views.\ncase previous\nThe user is scrolling to the previous view in an ordered set of views.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "AXCustomActionsReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axcustomactionsreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXContainerTypeReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axcontainertypereturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "UIAccessibility.ZoomType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/zoomtype",
    "html": "Topics\nConstants\ncase insertionPoint\nThe system zoom type is the text insertion point.\nRelationships\nConforms To\nSendable\nSee Also\nNavigating elements\nUIAccessibilityContainer\nProvide a set of methods that view subclasses use to make subcomponents accessible as separate elements.\nvar accessibilityActivationPoint: CGPoint\nThe activation point for the accessibility element in screen coordinates.\nvar accessibilityFocusedUIElement: Any?\nThe deepest descendant of the accessibility hierarchy that has the focus.\nvar accessibilityFrame: CGRect\nThe frame of the accessibility element in screen coordinates.\nfunc accessibilityHitTest(NSPoint) -> Any?\nReturns the deepest descendant of the accessibility hierarchy that contains the specified point.\nvar accessibilityNavigationStyle: UIAccessibilityNavigationStyle\nThe navigation style to apply to the object and its elements.\nenum UIAccessibilityNavigationStyle\nConstants that describe how to navigate an object’s elements with an assistive app.\nvar accessibilityPath: UIBezierPath?\nThe path of the element in screen coordinates.\nstatic func zoomFocusChanged(zoomType: UIAccessibility.ZoomType, toFrame: CGRect, in: UIView)\nNotifies the system when the app’s focus changes to a new location.\nstatic var assistiveTouch: UIGuidedAccessAccessibilityFeature\nThe AssistiveTouch accessibility feature."
  },
  {
    "title": "prefersCrossFadeTransitions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3584818-preferscrossfadetransitions",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state."
  },
  {
    "title": "isVideoAutoplayEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3238036-isvideoautoplayenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isSpeakSelectionEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615154-isspeakselectionenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isGuidedAccessEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615173-isguidedaccessenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "UINavigationItem.BackButtonDisplayMode.minimal | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitem/backbuttondisplaymode/minimal",
    "html": "Discussion\n\nWhen you set the backButtonDisplayMode property to this value, the Back button doesn’t display a title. Instead, it displays the Back button indicator image."
  },
  {
    "title": "AXTextualContextReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axtextualcontextreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXTraitsReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axtraitsreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXStringArrayReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axstringarrayreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXRectReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axrectreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "dragSession | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragrequest/2890910-dragsession",
    "html": "Required"
  },
  {
    "title": "UIForceTouchCapability.unavailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiforcetouchcapability/unavailable",
    "html": "See Also\nAvailability options\ncase unknown\nThe availability of 3D Touch is unknown.\ncase available\n3D Touch is available on the device."
  },
  {
    "title": "UITextDropProposal.ProgressMode.custom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/progressmode/custom",
    "html": "See Also\nProgress modes\ncase system\nA text drop progress mode indicating that the system will show the progress indicator."
  },
  {
    "title": "UITextDropProposal.ProgressMode.system | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/progressmode/system",
    "html": "Discussion\n\nUse this progress mode to have the system show a modal progress indicator while the dropped items are being loaded.\n\nSee Also\nProgress modes\ncase custom\nA text drop progress mode that indicates that you will provide custom progress indicator during the loading of dropped items."
  },
  {
    "title": "setResult(string:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887487-setresult",
    "html": "Required\n\nSee Also\nSetting a text paste item’s result value\nfunc setResult(attributedString: NSAttributedString)\nSets a text paste item’s textual value to a specified attributed string from the item provider.\n\nRequired\n\nfunc setResult(attachment: NSTextAttachment)\nSets a text paste item’s attachment value to a specified value.\n\nRequired\n\nfunc setDefaultResult()\nSets the text paste item’s value to the default value based on the item provider’s data.\n\nRequired\n\nfunc setNoResult()\nSets the text paste item’s textual value to not include data from the item provider.\n\nRequired"
  },
  {
    "title": "setResult(attributedString:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887482-setresult",
    "html": "Required\n\nSee Also\nSetting a text paste item’s result value\nfunc setResult(string: String)\nSets a text paste item’s textual value to a specified plaintext string from the item provider.\n\nRequired\n\nfunc setResult(attachment: NSTextAttachment)\nSets a text paste item’s attachment value to a specified value.\n\nRequired\n\nfunc setDefaultResult()\nSets the text paste item’s value to the default value based on the item provider’s data.\n\nRequired\n\nfunc setNoResult()\nSets the text paste item’s textual value to not include data from the item provider.\n\nRequired"
  },
  {
    "title": "defaultAttributes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887486-defaultattributes",
    "html": "Required"
  },
  {
    "title": "setDefaultResult() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2919974-setdefaultresult",
    "html": "Required\n\nDiscussion\n\nYou call this method, as a fallback, for any items you don’t handle. Setting the default result when the item provider’s data isn’t supported is the same as calling the setNoResult() method.\n\nSee Also\nSetting a text paste item’s result value\nfunc setResult(string: String)\nSets a text paste item’s textual value to a specified plaintext string from the item provider.\n\nRequired\n\nfunc setResult(attributedString: NSAttributedString)\nSets a text paste item’s textual value to a specified attributed string from the item provider.\n\nRequired\n\nfunc setResult(attachment: NSTextAttachment)\nSets a text paste item’s attachment value to a specified value.\n\nRequired\n\nfunc setNoResult()\nSets the text paste item’s textual value to not include data from the item provider.\n\nRequired"
  },
  {
    "title": "dropPerformer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropproposal/2919992-dropperformer",
    "html": "Discussion\n\nThe performer provides a preview for the drop activity, loads the data from the item providers, and inserts the data into the text view. It can be the UITextDropProposal.Performer.view performer (default) or the UITextDropProposal.Performer.delegate performer.\n\nSee Also\nConfiguring a text drop proposal\nvar dropAction: UITextDropProposal.Action\nA text drop action style that specifies how the text view receives dropped items.\nenum UITextDropProposal.Action\nThe text drop action styles for text views.\nenum UITextDropProposal.Performer\nThe performers that are responsible for handling the drop operation.\nvar dropProgressMode: UITextDropProposal.ProgressMode\nA mode that specifies how the text view indicates progress to the user when loading dropped items.\nenum UITextDropProposal.ProgressMode\nThe text drop progress styles for user-visible progress indication.\nvar useFastSameViewOperations: Bool\nA Boolean value that determines whether the text view can use fast inline dropping when the source and destination are in the same text view."
  },
  {
    "title": "localObject | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextpasteitem/2887485-localobject",
    "html": "Required\n\nDiscussion\n\nThe local object is available only to the app that initiates the copy or drag activity.\n\nSee Also\nAccessing the text paste item’s data\nvar itemProvider: NSItemProvider\nThe item provider for the item being pasted or dropped.\n\nRequired"
  },
  {
    "title": "init(layoutManager:range:unifyRects:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdragpreviewrenderer/2891008-init",
    "html": "Parameters\nlayoutManager\n\nThe layout manager that renders the preview.\n\nrange\n\nThe range to render the preview.\n\nunifyRects\n\nA Boolean value that indicates whether the vertical position and height of the detection rectangles adjust to touch each other. If YES, the firstLineRect, bodyRect, and lastLineRect properties adjust; otherwise, they don’t. The default value is YES.\n\nReturn Value\n\nA renderer of a text drag preview using the specified layout manager, range, and detection behavior.\n\nSee Also\nInitializing a text drag preview renderer\ninit(layoutManager: NSLayoutManager, range: NSRange)\nInitializes and returns a text drag preview renderer with the specified layout managers and range to render the text drag preview."
  },
  {
    "title": "textDroppableView(_:dropSessionDidEnter:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitextdropdelegate/2890850-textdroppableview",
    "html": "Parameters\ntextDroppableView\n\nThe text view that received the drop activity.\n\nsession\n\nThe current drop session.\n\nSee Also\nHandling drop session notifications\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidExit: UIDropSession)\nTells the delegate that the user has moved the drag items out of the text view's coordinate system.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidUpdate: UIDropSession)\nTells the delegate that the drop session has been updated.\nfunc textDroppableView(UIView & UITextDroppable, dropSessionDidEnd: UIDropSession)\nTells the delegate that the drop session has ended."
  },
  {
    "title": "speakSelectionStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615127-speakselectionstatusdidchangenot",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "voiceOverStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/2865862-voiceoverstatusdidchangenotifica",
    "html": "Discussion\n\nUse this notification to customize your app's UI for VoiceOver users. For example, if you display a UI element that briefly overlays other parts of your UI, you can make the display persistent for VoiceOver users, but allow it to not appear for users who aren't using VoiceOver. You can also use the isVoiceOverRunning function to determine whether VoiceOver is currently running.\n\nObserve this notification using the default notification center. This notification doesn't include a parameter.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes."
  },
  {
    "title": "UIAccessibility.Notification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/notification",
    "html": "Topics\nNotifications\nstatic var announcement: UIAccessibility.Notification\nA notification that an app posts when it needs to convey an announcement to the assistive app.\nstatic var layoutChanged: UIAccessibility.Notification\nA notification that an app posts when the layout of a screen changes.\nstatic var screenChanged: UIAccessibility.Notification\nA notification that an app posts when a new view appears that occupies a major portion of the screen.\nstatic var pageScrolled: UIAccessibility.Notification\nA notification that an app posts when a scroll action completes.\nstatic var pauseAssistiveTechnology: UIAccessibility.Notification\nA notification that pauses an assistive app's operations temporarily.\nstatic var resumeAssistiveTechnology: UIAccessibility.Notification\nA notification that resumes an assistive app's operations temporarily.\nstruct UIAccessibility.AssistiveTechnologyIdentifier\nIdentifiers for assistive apps.\nInitializer\ninit(rawValue: UInt32)\nCreates an accessibility notification with the specified raw value.\nRelationships\nConforms To\nHashable\nRawRepresentable\nSendable\nSee Also\nApp notifications\nstatic func post(notification: UIAccessibility.Notification, argument: Any?)\nPosts a notification to assistive apps."
  },
  {
    "title": "switchControlStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615099-switchcontrolstatusdidchangenoti",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "speakScreenStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615097-speakscreenstatusdidchangenotifi",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "announcementStringValueUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620183-announcementstringvalueuserinfok",
    "html": "See Also\nNotification keys\nstatic let announcementWasSuccessfulUserInfoKey: String\nA Boolean value that indicates whether the announcement is successful.\nstatic let focusedElementUserInfoKey: String\nThe element currently in focus by the assistive app.\nstatic let unfocusedElementUserInfoKey: String\nThe element previously in focus by the assistive app.\nstatic let assistiveTechnologyUserInfoKey: String\nThe identifier of the assistive app."
  },
  {
    "title": "closedCaptioningStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615101-closedcaptioningstatusdidchangen",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "AXPathReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axpathreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXObjectReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axobjectreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXNavigationStyleReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axnavigationstylereturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXBoolReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axboolreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXAttributedStringArrayReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axattributedstringarrayreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXAttributedStringReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axattributedstringreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXArrayReturnBlock\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "AXArrayReturnBlock | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/axarrayreturnblock",
    "html": "See Also\nSupporting types\ntypealias AXAttributedStringArrayReturnBlock\ntypealias AXAttributedStringReturnBlock\ntypealias AXBoolReturnBlock\ntypealias AXContainerTypeReturnBlock\ntypealias AXCustomActionsReturnBlock\ntypealias AXCustomRotorsReturnBlock\ntypealias AXNavigationStyleReturnBlock\ntypealias AXObjectReturnBlock\ntypealias AXPathReturnBlock\ntypealias AXPointReturnBlock\ntypealias AXRectReturnBlock\ntypealias AXStringArrayReturnBlock\ntypealias AXStringReturnBlock\ntypealias AXTextualContextReturnBlock\ntypealias AXTraitsReturnBlock\ntypealias AXVoidReturnBlock\nstruct UIAccessibility\nA namespace for accessibility symbols for UIKit apps."
  },
  {
    "title": "UIAccessibilityTraits | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitytraits",
    "html": "Overview\n\nSet these traits to tell an assistive app how an accessibility element behaves or how to treat it.\n\nTopics\nConstants\nstatic var none: UIAccessibilityTraits\nThe accessibility element has no traits.\nstatic var button: UIAccessibilityTraits\nThe accessibility element behaves like a button.\nstatic var link: UIAccessibilityTraits\nThe accessibility element behaves like a link.\nstatic var image: UIAccessibilityTraits\nThe accessibility element behaves like an image.\nstatic var searchField: UIAccessibilityTraits\nThe accessibility element behaves like a search field.\nstatic var toggleButton: UIAccessibilityTraits\nThe accessibility element behaves like a toggle button.\nstatic var keyboardKey: UIAccessibilityTraits\nThe accessibility element behaves like a keyboard key.\nstatic var staticText: UIAccessibilityTraits\nThe accessibility element behaves like static text that can't change.\nstatic var header: UIAccessibilityTraits\nThe accessibility element is a header that divides content into sections, such as the title of a navigation bar.\nstatic var tabBar: UIAccessibilityTraits\nThe accessibility element behaves like a tab bar.\nstatic var summaryElement: UIAccessibilityTraits\nThe accessibility element provides summary information when the app starts.\nstatic var selected: UIAccessibilityTraits\nThe accessibility element is currently in a selected state.\nstatic var notEnabled: UIAccessibilityTraits\nThe accessibility element isn't in an enabled state and doesn't respond to user interaction.\nstatic var adjustable: UIAccessibilityTraits\nThe accessibility element allows continuous adjustment through a range of values.\nstatic var allowsDirectInteraction: UIAccessibilityTraits\nThe accessibility element allows direct touch interaction for VoiceOver users.\nstatic var updatesFrequently: UIAccessibilityTraits\nThe accessibility element frequently updates its label or value.\nstatic var causesPageTurn: UIAccessibilityTraits\nThe accessibility element causes an automatic page turn when VoiceOver finishes reading the text within it.\nstatic var playsSound: UIAccessibilityTraits\nThe accessibility element plays its own sound when the user activates it.\nstatic var startsMediaSession: UIAccessibilityTraits\nThe accessibility element starts a media session when the user activates it.\nCustom array types\ntypealias UIAccessibilityTraits.ArrayLiteralElement\nThe type of the elements of an array literal.\ntypealias UIAccessibilityTraits.Element\nThe element type of the option set.\nInitializer\ninit(rawValue: UInt64)\nCreates a new accessibility traits structure using an unsigned integer.\nType Properties\nstatic var supportsZoom: UIAccessibilityTraits\nThe accessibility element supports zooming in and out on its content.\nRelationships\nConforms To\nHashable\nOptionSet\nRawRepresentable\nSendable\nSee Also\nSupporting basic accessibility\nvar isAccessibilityElement: Bool\nA Boolean value that indicates whether the element is an accessibility element that an assistive app can access.\nvar accessibilityLabel: String?\nA succinct label in a localized string that identifies the accessibility element.\nvar accessibilityValue: String?\nA localized string that contains the value of the accessibility element.\nvar accessibilityHint: String?\nA localized string that contains a brief description of the result of performing an action on the accessibility element.\nvar accessibilityTraits: UIAccessibilityTraits\nThe combination of accessibility traits that best characterizes the accessibility element."
  },
  {
    "title": "UIAccessibility.DirectTouchOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/directtouchoptions",
    "html": "Overview\n\nDirect touch areas are regions of the screen where VoiceOver passes gestures directly to the app instead of interpreting them as VoiceOver commands.\n\nExamples of direct touch areas include:\n\nA keyboard in a music-creation app\n\nA player view in a game that produces sounds\n\nAn area where you sign your name in a document\n\nIf an element doesn’t use UIAccessibility.DirectTouchOptions, VoiceOver speaks the element and immediately starts sending touch events to the app.\n\nSpecify DirectTouchOptions to customize VoiceOver regions using these two constants:\n\nUse silentOnTouch to ensure VoiceOver is silent when a person touches the direct touch area. In this region, the app produces its own audio feedback without conflicting with VoiceOver audio.\n\nUse requiresActivation to ensure a person interacts with the user interface element before a touch passes through to the element. This is useful for scenarios where an errant touch may produce undesired input, such as a signature field.\n\nTopics\nInitializers\ninit(rawValue: UInt)\nCreates a new direct touch options structure using an unsigned integer.\nType Properties\nstatic var silentOnTouch: UIAccessibility.DirectTouchOptions\nAllows a direct touch area to immediately receive touch events without triggering VoiceOver audio.\nstatic var requiresActivation: UIAccessibility.DirectTouchOptions\nInhibits passthrough to the direct touch area until a person double-taps the element.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nConfiguring behavior\nvar accessibilityCustomRotors: [UIAccessibilityCustomRotor]?\nAn array of custom rotors for the current accessibility element.\nvar accessibilityElementsHidden: Bool\nA Boolean value that indicates whether to hide the accessibility elements.\nvar accessibilityRespondsToUserInteraction: Bool\nA Boolean value that indicates whether the accessibility element performs an action due to user interaction.\nvar accessibilityViewIsModal: Bool\nA Boolean value that indicates whether VoiceOver ignores the accessibility elements within views that are siblings of the element.\nvar shouldGroupAccessibilityChildren: Bool\nA Boolean value that indicates whether VoiceOver groups the accessibility elements that are children of the element, regardless of their positions on the screen.\nvar accessibilityDirectTouchOptions: UIAccessibility.DirectTouchOptions\nA value that configures how VoiceOver produces audio for direct touch areas."
  },
  {
    "title": "guidedAccessErrorDomain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3089100-guidedaccesserrordomain",
    "html": "See Also\nErrors\nstruct UIAccessibility.GuidedAccessError\nA Guided Access error."
  },
  {
    "title": "UIAccessibilityNavigationStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibilitynavigationstyle",
    "html": "Topics\nConstants\ncase automatic\nThe assistive technology automatically determines how the receiver's elements should be navigated.\ncase separate\nThe receiver's elements should be navigated as separate elements.\ncase combined\nThe receiver’s elements should be combined and navigated as a single item.\nRelationships\nConforms To\nSendable\nSee Also\nNavigating elements\nUIAccessibilityContainer\nProvide a set of methods that view subclasses use to make subcomponents accessible as separate elements.\nvar accessibilityActivationPoint: CGPoint\nThe activation point for the accessibility element in screen coordinates.\nvar accessibilityFocusedUIElement: Any?\nThe deepest descendant of the accessibility hierarchy that has the focus.\nvar accessibilityFrame: CGRect\nThe frame of the accessibility element in screen coordinates.\nfunc accessibilityHitTest(NSPoint) -> Any?\nReturns the deepest descendant of the accessibility hierarchy that contains the specified point.\nvar accessibilityNavigationStyle: UIAccessibilityNavigationStyle\nThe navigation style to apply to the object and its elements.\nvar accessibilityPath: UIBezierPath?\nThe path of the element in screen coordinates.\nstatic func zoomFocusChanged(zoomType: UIAccessibility.ZoomType, toFrame: CGRect, in: UIView)\nNotifies the system when the app’s focus changes to a new location.\nenum UIAccessibility.ZoomType\nThe types of system Zoom that can be in effect.\nstatic var assistiveTouch: UIGuidedAccessAccessibilityFeature\nThe AssistiveTouch accessibility feature."
  },
  {
    "title": "buttonShapesEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3618943-buttonshapesenabled",
    "html": "Discussion\n\nRelated Sessions from WWDC20\n\nSession 10020: Make Your App Visually Accessible\n\nSee Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isReduceTransparencyEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615074-isreducetransparencyenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "shouldDifferentiateWithoutColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3043553-shoulddifferentiatewithoutcolor",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isSpeakScreenEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615109-isspeakscreenenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isReduceMotionEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615133-isreducemotionenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isOnOffSwitchLabelsEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3131973-isonoffswitchlabelsenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isInvertColorsEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615167-isinvertcolorsenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isMonoAudioEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615123-ismonoaudioenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isGrayscaleEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615189-isgrayscaleenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isDarkerSystemColorsEnabled: Bool\nA Boolean value that indicates whether the Increase Contrast setting is in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "isDarkerSystemColorsEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615087-isdarkersystemcolorsenabled",
    "html": "See Also\nCapabilities\nstatic var isAssistiveTouchRunning: Bool\nA Boolean value that indicates whether AssistiveTouch is in an enabled state.\nstatic var isBoldTextEnabled: Bool\nA Boolean value that indicates whether the Bold Text setting is in an enabled state.\nstatic var isClosedCaptioningEnabled: Bool\nA Boolean value that indicates whether the Closed Captions + SDH setting is in an enabled state.\nstatic var isGrayscaleEnabled: Bool\nA Boolean value that indicates whether the Color Filters and the Grayscale settings are in an enabled state.\nstatic var isGuidedAccessEnabled: Bool\nA Boolean value that indicates whether the Guided Access setting is in an enabled state.\nstatic var isInvertColorsEnabled: Bool\nA Boolean value that indicates whether the Classic Invert setting is in an enabled state.\nstatic var isMonoAudioEnabled: Bool\nA Boolean value that indicates whether the Mono Audio setting is in an enabled state.\nstatic var isOnOffSwitchLabelsEnabled: Bool\nA Boolean value that indicates whether the On/Off Labels setting is in an enabled state.\nstatic var isReduceMotionEnabled: Bool\nA Boolean value that indicates whether the Reduce Motion setting is in an enabled state.\nstatic var isReduceTransparencyEnabled: Bool\nA Boolean value that indicates whether the Reduce Transparency setting is in an enabled state.\nstatic var isShakeToUndoEnabled: Bool\nA Boolean value that indicates whether the Shake to Undo setting is in an enabled state.\nstatic var isSpeakScreenEnabled: Bool\nA Boolean value that indicates whether the Speak Screen setting is in an enabled state.\nstatic var isSpeakSelectionEnabled: Bool\nA Boolean value that indicates whether the Speak Selection setting is in an enabled state.\nstatic var isSwitchControlRunning: Bool\nA Boolean value that indicates whether the Switch Control setting is in an enabled state.\nstatic var isVideoAutoplayEnabled: Bool\nA Boolean value that indicates whether the Auto-Play Video Previews setting is in an enabled state.\nstatic var isVoiceOverRunning: Bool\nA Boolean value that indicates whether VoiceOver is in an enabled state.\nstatic var shouldDifferentiateWithoutColor: Bool\nA Boolean value that indicates whether the Differentiate Without Color setting is in an enabled state.\nstatic var buttonShapesEnabled: Bool\nA Boolean value that indicates whether the Button Shapes setting is in an enabled state.\nstatic var prefersCrossFadeTransitions: Bool\nA Boolean value that indicates whether the Reduce Motion and the Prefer Cross-Fade Transitions settings are in an enabled state."
  },
  {
    "title": "unfocusedElementUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620196-unfocusedelementuserinfokey",
    "html": "See Also\nNotification keys\nstatic let announcementStringValueUserInfoKey: String\nThe text of the announcement.\nstatic let announcementWasSuccessfulUserInfoKey: String\nA Boolean value that indicates whether the announcement is successful.\nstatic let focusedElementUserInfoKey: String\nThe element currently in focus by the assistive app.\nstatic let assistiveTechnologyUserInfoKey: String\nThe identifier of the assistive app."
  },
  {
    "title": "assistiveTechnologyUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620189-assistivetechnologyuserinfokey",
    "html": "See Also\nNotification keys\nstatic let announcementStringValueUserInfoKey: String\nThe text of the announcement.\nstatic let announcementWasSuccessfulUserInfoKey: String\nA Boolean value that indicates whether the announcement is successful.\nstatic let focusedElementUserInfoKey: String\nThe element currently in focus by the assistive app.\nstatic let unfocusedElementUserInfoKey: String\nThe element previously in focus by the assistive app."
  },
  {
    "title": "annotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/openurloptionskey/1622969-annotation",
    "html": "Discussion\n\nThe value of this key is a property list-typed object.\n\nSee Also\nAccessing open-URL options\nstatic let sourceApplication: UIApplication.OpenURLOptionsKey\nA key containing the bundle ID of the app that sent the open-URL request to your app.\nstatic let openInPlace: UIApplication.OpenURLOptionsKey\nA key containing a flag that indicates whether a document must be copied before you use it.\nstatic let eventAttribution: UIApplication.OpenURLOptionsKey"
  },
  {
    "title": "sourceApplication | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/openurloptionskey/1623128-sourceapplication",
    "html": "Discussion\n\nThe value of this key is an NSString object containing the bundle ID of the app that made the request. If the request originated from another app belonging to your team, UIKit sets the value of this key to the ID of that app. If the team identifier of the originating app is different than the team identifier of the current app, the value of the key is nil.\n\nSee Also\nAccessing open-URL options\nstatic let annotation: UIApplication.OpenURLOptionsKey\nA key containing the information passed to a document interaction controller object’s annotation property.\nstatic let openInPlace: UIApplication.OpenURLOptionsKey\nA key containing a flag that indicates whether a document must be copied before you use it.\nstatic let eventAttribution: UIApplication.OpenURLOptionsKey"
  },
  {
    "title": "openInPlace | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/openurloptionskey/1623123-openinplace",
    "html": "Discussion\n\nWhen the value of this property is false, you must copy the document to maintain access to it. If the flag is not set, you also must copy the document before you can use it.\n\nIf the document does not need to be copied, you can open it in place in your implementation of the application(_:open:options:) method. For information about declaring whether your app wants the ability to open iCloud Drive documents in place, see the description of the LSSupportsOpeningDocumentsInPlace information property list key. For an example of an app that opens iCloud Drive documents in place, see ShapeEdit: Building a Simple iCloud Document App.\n\nSee Also\nAccessing open-URL options\nstatic let sourceApplication: UIApplication.OpenURLOptionsKey\nA key containing the bundle ID of the app that sent the open-URL request to your app.\nstatic let annotation: UIApplication.OpenURLOptionsKey\nA key containing the information passed to a document interaction controller object’s annotation property.\nstatic let eventAttribution: UIApplication.OpenURLOptionsKey"
  },
  {
    "title": "UINavigationItem.BackButtonDisplayMode.generic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitem/backbuttondisplaymode/generic",
    "html": "Discussion\n\nWhen you set the backButtonDisplayMode property to this value, the navigation item attempts to display these titles for its Back button in the following order:\n\nA generic title, such as Back\n\nNo title\n\nThe navigation item selects the most appropriate title for the Back button according to the available space. This display mode ignores the values of the title and backButtonTitle properties."
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitverticalsizeclass/4138703-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitimagedynamicrange/4176640-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "application(_:handleActionWithIdentifier:forRemoteNotification:withResponseInfo:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623021-application",
    "html": "Deprecated\n\nUse userNotificationCenter(_:didReceive:withCompletionHandler:) instead.\n\nParameters\napplication\n\nThe app object that was activated for the user-selected action.\n\nidentifier\n\nThe identifier for the custom action.\n\nuserInfo\n\nA dictionary that contains information related to the remote notification, potentially including a badge number for the app icon, an alert sound, an alert message to display to the user, a notification identifier, and custom data. The provider originates it as a JSON-defined dictionary that iOS converts to an NSDictionary object; the dictionary might contain only property-list objects plus NSNull.\n\nresponseInfo\n\nThe data dictionary sent by the action.\n\ncompletionHandler\n\nA block that you must call when you are finished performing the action.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\noptional func application(_ application: UIApplication, handleActionWithIdentifier identifier: String?, forRemoteNotification userInfo: [AnyHashable : Any], withResponseInfo responseInfo: [AnyHashable : Any]) async\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nA nil value in the identifier parameter indicates the default action.\n\nCall the completion handler as soon as you’ve finished handling the action.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacestyle/4138699-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitimagedynamicrange/4176641-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "invertColorsStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615196-invertcolorsstatusdidchangenotif",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nUse the isInvertColorsEnabled function to determine whether the settings for inverted colors are in an enabled state.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "focusedElementUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620180-focusedelementuserinfokey",
    "html": "See Also\nNotification keys\nstatic let announcementStringValueUserInfoKey: String\nThe text of the announcement.\nstatic let announcementWasSuccessfulUserInfoKey: String\nA Boolean value that indicates whether the announcement is successful.\nstatic let unfocusedElementUserInfoKey: String\nThe element previously in focus by the assistive app.\nstatic let assistiveTechnologyUserInfoKey: String\nThe identifier of the assistive app."
  },
  {
    "title": "guidedAccessStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615105-guidedaccessstatusdidchangenotif",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nUse the isGuidedAccessEnabled function to determine whether a Guided Access session is currently active.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "announcementWasSuccessfulUserInfoKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620209-announcementwassuccessfuluserinf",
    "html": "Discussion\n\nThe value of this key is an NSNumber object that the system interprets as a Boolean value.\n\nSee Also\nNotification keys\nstatic let announcementStringValueUserInfoKey: String\nThe text of the announcement.\nstatic let focusedElementUserInfoKey: String\nThe element currently in focus by the assistive app.\nstatic let unfocusedElementUserInfoKey: String\nThe element previously in focus by the assistive app.\nstatic let assistiveTechnologyUserInfoKey: String\nThe identifier of the assistive app."
  },
  {
    "title": "grayscaleStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615085-grayscalestatusdidchangenotifica",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "elementFocusedNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620210-elementfocusednotification",
    "html": "Discussion\n\nRetrieve the focusedElementUserInfoKey key from the userInfo dictionary to get the identity of the focused accessibility element.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "videoAutoplayStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3238037-videoautoplaystatusdidchangenoti",
    "html": "See Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "onOffSwitchLabelsDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3131974-onoffswitchlabelsdidchangenotifi",
    "html": "See Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "darkerSystemColorsStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615177-darkersystemcolorsstatusdidchang",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "copy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationinteraction/4108310-copy",
    "html": "See Also\nSelecting interactions\nstatic let share: UIActivityItemsConfigurationInteraction\nThe share interaction."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiactivityitemsconfigurationinteraction/3368130-init",
    "html": "See Also\nCreating an interaction type\ninit(rawValue: String)\nCreates an activity items configuration interaction with the specified raw value."
  },
  {
    "title": "application(_:open:sourceApplication:annotation:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623073-application",
    "html": "Deprecated\n\nUse application(_:open:options:) instead.\n\nParameters\napplication\n\nYour singleton app object.\n\nurl\n\nThe URL resource to open. This resource can be a network resource or a file. For information about the Apple-registered URL schemes, see Apple URL Scheme Reference.\n\nsourceApplication\n\nThe bundle ID of the app that is requesting your app to open the URL (url).\n\nannotation\n\nA Property list supplied by the source app to communicate information to the receiving app.\n\nReturn Value\n\ntrue if the delegate successfully handled the request or false if the attempt to open the URL resource failed.\n\nDiscussion\n\nYour implementation of this method should open the specified URL and update its user interface accordingly. If your app had to be launched to open the URL, the app calls the application(_:willFinishLaunchingWithOptions:) and application(_:didFinishLaunchingWithOptions:) methods first, followed by this method. The return values of those methods can be used to prevent this method from being called. (If the app is already running, only this method is called.)\n\nIf the URL refers to a file that was opened through a document interaction controller, the annotation parameter may contain additional data that the source app wanted to send along with the URL. The format of this data is defined by the app that sent it but the data must consist of objects that can be put into a property list.\n\nFiles sent to your app through AirDrop or a document interaction controller are placed in the Documents/Inbox directory of your app’s home directory. Your app has permission to read and delete files in this directory but does not have permission to write to them. If you want to modify a file, you must move it to a different directory first. In addition, files in that directory are usually encrypted using data protection. If the file is protected and the user locks the device before this method is called, you will be unable to read the file’s contents immediately. In that case, you should save the URL and try to open the file later rather than return false from this method. Use the isProtectedDataAvailable property of the app object to determine if data protection is currently enabled.\n\nThere is no matching notification for this method.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated\nRelated Documentation\nfunc application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?) -> Bool\nTells the delegate that the launch process is almost done and the app is almost ready to run.\nfunc openURL(URL) -> Bool\nAttempts to open the resource at the specified URL."
  },
  {
    "title": "application(_:willChangeStatusBarFrame:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623020-application",
    "html": "Parameters\napplication\n\nYour singleton app object.\n\nnewStatusBarFrame\n\nThe changed frame of the status bar, in screen coordinates.\n\nDiscussion\n\nThe app calls this method when it receives a setStatusBarOrientation(_:animated:) message and is about to change the interface orientation.\n\nAfter calling this method, the app also posts a willChangeStatusBarFrameNotification notification to give interested objects a chance to respond to the change.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated"
  },
  {
    "title": "application(_:handle:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/2887573-application",
    "html": "Deprecated\n\nUse application(_:handlerFor:) instead to provide an object to resolve, confirm, and handle intents in your app.\n\nParameters\napplication\n\nThe shared app object.\n\nintent\n\nThe intent object that contains information about the SiriKit request. Use this object to identify what the user intends and what kind of response to provide.\n\ncompletionHandler\n\nThe handler block to execute with your response. You must execute this handler at some point during your implementation of this method. This handler has no return value and takes the following parameter:\n\nintentResponse\n\nThe response object you create to report the status of the request. The exact type of this object must correspond to the type of intent delivered. For example, if the intent parameter contains an INStartWorkoutIntent object, you must create an INStartWorkoutIntentResponse object. This parameter must not be nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\noptional func application(_ application: UIApplication, handle intent: INIntent) async -> INIntentResponse\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nWith this method, an app can handle an intent directly, rather than handling it in the app’s Intent extension. You might use this method to implement workflows that you can’t implement easily in your extension. For example, you might use it to start or manage a user’s workout session. If your app isn’t running, SiriKit launches your app in the background so that the Siri interface remains active.\n\nYour Intents app extension is still responsible for resolving and confirming the intent details. Your extension’s handler(for:) method must create a response object that resolves and confirms the intent details. In the response object’s handle(intent:completion:) implementation, return a response object with a status code of failureRequiringAppLaunch. Upon receiving your response, SiriKit launches the app and calls application(_:handle:completionHandler:). In your implementation of this app delegate method, handle the intent by performing the user’s intended action if possible. Then call the provided completion handler with a response object that indicates if your app performed the intent or provides a reason it could not. For details about how to handle a specific intent, see the class reference for that intent in SiriKit.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated"
  },
  {
    "title": "application(_:didChangeStatusBarOrientation:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622943-application",
    "html": "Parameters\napplication\n\nYour singleton app object.\n\noldStatusBarOrientation\n\nA constant that indicates the previous orientation of the app’s user interface; see Responding to app life-cycle events for details.\n\nDiscussion\n\nThe delegate can get the current device orientation from the shared UIDevice object.\n\nAfter calling this method, the app also posts a didChangeStatusBarOrientationNotification notification to give interested objects a chance to respond to the change.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfaceidiom/4138676-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplayscale/4138588-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplayscale/4138583-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplayscale/4138584-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplayscale/4138586-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacelevel/4138688-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitimagedynamicrange/4176643-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitimagedynamicrange/4176645-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacelevel/4138685-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacestyle/4138694-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacestyle/4138697-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "application(_:handleOpen:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1622964-application",
    "html": "Deprecated\n\nUse the application(_:open:options:) method instead.\n\nParameters\napplication\n\nYour singleton app object.\n\nurl\n\nAn object representing a URL (Universal Resource Locator). See the appendix of App Programming Guide for iOS for Apple-registered schemes for URLs.\n\nReturn Value\n\ntrue if the delegate successfully handled the request; false if the attempt to handle the URL failed.\n\nDiscussion\n\nIf the delegate also implements the application(_:open:sourceApplication:annotation:) method, that method is called instead of this one.\n\nThis method is not called if the delegate returns false from both the application(_:willFinishLaunchingWithOptions:) and application(_:didFinishLaunchingWithOptions:) methods. (If only one of the two methods is implemented, its return value determines whether this method is called.) If your app implements the applicationDidFinishLaunching(_:) method instead of application(_:didFinishLaunchingWithOptions:), this method is called to open the specified URL after the app has been initialized.\n\nIf a URL arrives while your app is suspended or running in the background, the system moves your app to the foreground prior to calling this method.\n\nThere is no equivalent notification for this delegation method.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated\nRelated Documentation\nfunc application(UIApplication, didFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?) -> Bool\nTells the delegate that the launch process is almost done and the app is almost ready to run.\nfunc application(UIApplication, willFinishLaunchingWithOptions: [UIApplication.LaunchOptionsKey : Any]?) -> Bool\nTells the delegate that the launch process has begun but that state restoration hasn’t occured.\nfunc openURL(URL) -> Bool\nAttempts to open the resource at the specified URL."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacestyle/4138695-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "reduceTransparencyStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615125-reducetransparencystatusdidchang",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "shakeToUndoDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615095-shaketoundodidchangenotification",
    "html": "See Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "monoAudioStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615185-monoaudiostatusdidchangenotifica",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "reduceMotionStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615204-reducemotionstatusdidchangenotif",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "prefersCrossFadeTransitionsStatusDidChange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3584819-preferscrossfadetransitionsstatu",
    "html": "See Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "hearingDevicePairedEarDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1648478-hearingdevicepairedeardidchangen",
    "html": "See Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "boldTextStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1615152-boldtextstatusdidchangenotificat",
    "html": "Discussion\n\nThis notification doesn't include a parameter. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "assistiveTouchStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1648473-assistivetouchstatusdidchangenot",
    "html": "Discussion\n\nThe user must enable Guided Access for this notification to post.\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "differentiateWithoutColorDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3043554-differentiatewithoutcolordidchan",
    "html": "See Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "announcementDidFinishNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/1620202-announcementdidfinishnotificatio",
    "html": "Discussion\n\nThe parameter is a dictionary with two keys, announcementStringValueUserInfoKey and announcementWasSuccessfulUserInfoKey. Observe this notification using the default notification center.\n\nSee Also\nSystem notifications\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let buttonShapesEnabledStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Button Shapes setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "buttonShapesEnabledStatusDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiaccessibility/3618944-buttonshapesenabledstatusdidchan",
    "html": "Discussion\n\nRelated Sessions from WWDC20\n\nSession 10020: Make Your App Visually Accessible\n\nSee Also\nSystem notifications\nstatic let announcementDidFinishNotification: NSNotification.Name\nA notification that UIKit posts when the system finishes reading an announcement.\nstatic let assistiveTouchStatusDidChangeNotification: NSNotification.Name\nA notification that indicates a change in the status of AssistiveTouch.\nstatic let boldTextStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Bold Text setting changes.\nstatic let closedCaptioningStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the setting for Closed Captions + SDH changes.\nstatic let darkerSystemColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Increase Contrast setting changes.\nstatic let differentiateWithoutColorDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Differentiate Without Color setting changes.\nstatic let onOffSwitchLabelsDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s On/Off Labels setting changes.\nstatic let videoAutoplayStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Auto-Play Video Previews setting changes.\nstatic let elementFocusedNotification: NSNotification.Name\nA notification that UIKit posts when an assistive app focuses on an accessibility element.\nstatic let grayscaleStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Grayscale setting changes.\nstatic let guidedAccessStatusDidChangeNotification: NSNotification.Name\nA notification that indicates when a Guided Access session starts or ends.\nstatic let hearingDevicePairedEarDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when there is a change to the currently paired hearing devices.\nstatic var hearingDevicePairedEar: UIAccessibility.HearingDeviceEar\nThe current pairing status of Made for iPhone hearing devices.\nstatic let invertColorsStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the settings for inverted colors change.\nstatic let monoAudioStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when system audio changes from stereo to mono.\nstatic let prefersCrossFadeTransitionsStatusDidChange: NSNotification.Name\nA notification that UIKit posts when the system’s Prefer Cross-Fade Transitions setting changes.\nstatic let reduceMotionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Motion setting changes.\nstatic let reduceTransparencyStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Reduce Transparency setting changes.\nstatic let shakeToUndoDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system's Shake to Undo setting changes.\nstatic let speakScreenStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Screen setting changes.\nstatic let speakSelectionStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Speak Selection setting changes.\nstatic let switchControlStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when the system’s Switch Control setting changes.\nstatic let voiceOverStatusDidChangeNotification: NSNotification.Name\nA notification that UIKit posts when VoiceOver starts or stops."
  },
  {
    "title": "preferredMenuElementOrder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3979275-preferredmenuelementorder",
    "html": "See Also\nManaging the context menu\nvar menu: UIMenu?\nThe context menu for this button."
  },
  {
    "title": "isHidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3987948-ishidden",
    "html": "Discussion\n\nSet this property to true to hide the item, or false to display the item.\n\nSee Also\nCustomizing item appearance\nvar style: UIBarButtonItem.Style\nThe style of the item.\nenum UIBarButtonItem.Style\nConstants that specify the style of an item.\nvar tintColor: UIColor?\nThe tint color to apply to the button item.\nvar isSelected: Bool\nA Boolean value that indicates whether the button is in a selected state.\nvar width: CGFloat\nThe width of the item.\nvar possibleTitles: Set<String>?\nThe set of possible titles to display on the bar button."
  },
  {
    "title": "UIBarButtonItem.SystemItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/systemitem",
    "html": "Topics\nConstants\ncase done\nThe system Done button, localized.\ncase cancel\nThe system Cancel button, localized.\ncase edit\nThe system Edit button, localized.\ncase save\nThe system Save button, localized.\ncase add\nThe system plus button containing an icon of a plus sign.\ncase flexibleSpace\nBlank space to add between other items.\ncase fixedSpace\nBlank space to add between other items.\ncase compose\nThe system compose button.\ncase reply\nThe system reply button.\ncase action\nThe system action button.\ncase organize\nThe system organize button.\ncase bookmarks\nThe system bookmarks button.\ncase search\nThe system search button.\ncase refresh\nThe system refresh button.\ncase stop\nThe system stop button.\ncase camera\nThe system camera button.\ncase trash\nThe system trash button.\ncase play\nThe system play button.\ncase pause\nThe system pause button.\ncase rewind\nThe system rewind button.\ncase fastForward\nThe system fast forward button.\ncase undo\nThe system undo button.\ncase redo\nThe system redo button.\ncase pageCurl\nThe system page curl button.\nDeprecated\ncase close\nThe system close button.\nRelationships\nConforms To\nSendable\nSee Also\nCreating system items\ninit(systemItem: UIBarButtonItem.SystemItem, primaryAction: UIAction?, menu: UIMenu?)\nCreates an item using the specified system item, primary action, and context menu.\ninit(barButtonSystemItem: UIBarButtonItem.SystemItem, target: Any?, action: Selector?)\nCreates an item using the specified system item, target, and action."
  },
  {
    "title": "videoEditorController(_:didSaveEditedVideoToPath:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate/1622336-videoeditorcontroller",
    "html": "Parameters\neditor\n\nThe video editor that has finished editing and saving a movie.\n\neditedVideoPath\n\nThe filesystem path to the edited movie.\n\nSee Also\nClosing the video editor\nfunc videoEditorControllerDidCancel(UIVideoEditorController)\nNotifies the delegate when the user cancels a movie editing operation."
  },
  {
    "title": "primaryAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600345-primaryaction",
    "html": "Discussion\n\nWhen you assign a new value to this property, the title and image of the item update to match the primary action’s title and image.\n\nIf this property has a non-nil value, the system ignores the item’s target and action properties.\n\nSee Also\nManaging the action\nvar changesSelectionAsPrimaryAction: Bool\nA Boolean value that indicates whether the button represents an action or selection.\nvar action: Selector?\nThe selector defining the action message to send to the target object when the user taps this bar button item.\nvar target: AnyObject?\nThe object that receives an action when the user selects the item."
  },
  {
    "title": "navigationController(_:willShow:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621878-navigationcontroller",
    "html": "Parameters\nnavigationController\n\nThe navigation controller that is showing the view and properties of a view controller.\n\nviewController\n\nThe view controller whose view and navigation item properties are being shown.\n\nanimated\n\ntrue to animate the transition; otherwise, false.\n\nSee Also\nResponding to a view controller being shown\nfunc navigationController(UINavigationController, didShow: UIViewController, animated: Bool)\nNotifies the delegate after the navigation controller displays a view controller’s view and navigation item properties.\nRelated Documentation\nView Controller Catalog for iOS"
  },
  {
    "title": "application(_:willChangeStatusBarOrientation:duration:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623054-application",
    "html": "Parameters\napplication\n\nYour singleton app object.\n\nnewStatusBarOrientation\n\nA constant that indicates the new orientation of the app’s user interface; see Responding to app life-cycle events for details.\n\nduration\n\nThe duration of the animation to the new orientation, in seconds.\n\nDiscussion\n\nThe delegate typically implements this method to prepare its windows and views for the new orientation. The delegate can get the current device orientation from the shared UIDevice object.\n\nAfter calling this method, the app also posts a willChangeStatusBarOrientationNotification notification to give interested objects a chance to respond to the change.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, performFetchWithCompletionHandler: (UIBackgroundFetchResult) -> Void)\nTells the app that it can begin a fetch operation if it has data to download.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated"
  },
  {
    "title": "navigationController(_:animationControllerFor:from:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621846-navigationcontroller",
    "html": "Parameters\nnavigationController\n\nThe navigation controller whose navigation stack is changing.\n\noperation\n\nThe type of transition operation that is occurring. For a list of possible values, see the UINavigationController.Operation constants.\n\nfromVC\n\nThe currently visible view controller.\n\ntoVC\n\nThe view controller that should be visible at the end of the transition.\n\nReturn Value\n\nThe animator object responsible for managing the transition animations, or nil if you want to use the standard navigation controller transitions. The object you return must conform to the UIViewControllerAnimatedTransitioning protocol.\n\nDiscussion\n\nImplement this delegate method when you want to provide a custom animated transition between view controllers as they are added to or removed from the navigation stack. The object you return should be capable of configuring and performing noninteractive animations for the specified view controllers for the specified type of operation over a fixed period of time.\n\nIf you want to allow the user to perform interactive transitions, you must also implement the navigationController(_:interactionControllerFor:) method.\n\nSee Also\nSupporting custom transition animations\nfunc navigationController(UINavigationController, interactionControllerFor: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning?\nAllows the delegate to return an interactive animator object for use during view controller transitions.\nfunc navigationControllerPreferredInterfaceOrientationForPresentation(UINavigationController) -> UIInterfaceOrientation\nReturns the preferred orientation for presentation of the navigation controller, as determined by the delegate.\nfunc navigationControllerSupportedInterfaceOrientations(UINavigationController) -> UIInterfaceOrientationMask\nReturns the complete set of supported interface orientations for the navigation controller, as determined by the delegate."
  },
  {
    "title": "application(_:performFetchWithCompletionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623125-application",
    "html": "Deprecated\n\nFor apps supporting iOS 13 and higher use BGAppRefreshTask.\n\nParameters\napplication\n\nYour singleton app object.\n\ncompletionHandler\n\nThe block to execute when the download operation is complete. When calling this block, pass in the fetch result value that best describes the results of your download operation. You must call this handler and should do so as soon as possible. For a list of possible values, see the UIBackgroundFetchResult type.\n\nDiscussion\n\nImplement this method if your app supports the fetch background mode. When an opportunity arises to download data, the system calls this method to give your app a chance to download any data it needs. Your implementation of this method should download the data, prepare that data for use, and call the block in the completionHandler parameter.\n\nWhen this method is called, your app has up to 30 seconds of wall-clock time to perform the download operation and call the specified completion handler block. In practice, your app should call the completion handler block as soon as possible after downloading the needed data. If you do not call the completion handler in time, your app is terminated. More importantly, the system uses the elapsed time to calculate power usage and data costs for your app’s background downloads. If your app takes a long time to call the completion handler, it may be given fewer future opportunities to fetch data in the future. For more information about supporting background fetch operations, see Background Execution in App Programming Guide for iOS.\n\nSee Also\nDeprecated\nfunc application(UIApplication, didRegister: UIUserNotificationSettings)\nCalled to tell the delegate the types of local and remote notifications that can be used to get the user’s attention.\nDeprecated\nfunc application(UIApplication, didReceive: UILocalNotification)\nSent to the delegate when a running app receives a local notification.\nDeprecated\nfunc application(UIApplication, didReceiveRemoteNotification: [AnyHashable : Any])\nCalled when your app has received a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, completionHandler: () -> Void)\nCalled when your app has been activated because user selected a custom action from the alert panel of a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, for: UILocalNotification, withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a local notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], completionHandler: () -> Void)\nTells the app delegate to perform the custom action specified by a remote notification.\nDeprecated\nfunc application(UIApplication, handleActionWithIdentifier: String?, forRemoteNotification: [AnyHashable : Any], withResponseInfo: [AnyHashable : Any], completionHandler: () -> Void)\nCalled when your app has been activated by the user selecting an action from a remote notification.\nDeprecated\nfunc application(UIApplication, handleOpen: URL) -> Bool\nAsks the delegate to open a resource identified by URL.\nDeprecated\nfunc application(UIApplication, open: URL, sourceApplication: String?, annotation: Any) -> Bool\nAsks the delegate to open a resource identified by a URL.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarOrientation: UIInterfaceOrientation, duration: TimeInterval)\nTells the delegate when the interface orientation of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarOrientation: UIInterfaceOrientation)\nTells the delegate when the interface orientation of the status bar has changed.\nDeprecated\nfunc application(UIApplication, willChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar is about to change.\nDeprecated\nfunc application(UIApplication, didChangeStatusBarFrame: CGRect)\nTells the delegate when the frame of the status bar has changed.\nDeprecated\nfunc application(UIApplication, handle: INIntent, completionHandler: (INIntentResponse) -> Void)\nAsks the delegate to handle the specified SiriKit intent directly.\nDeprecated\nfunc application(UIApplication, shouldSaveApplicationState: NSCoder) -> Bool\nAsks the delegate whether to preserve the app’s state.\nDeprecated\nfunc application(UIApplication, shouldRestoreApplicationState: NSCoder) -> Bool\nAsks the delegate whether to restore the app’s saved state.\nDeprecated"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitverticalsizeclass/4138706-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitverticalsizeclass/4138708-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "UIBarButtonItem.Style.done | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/style/done",
    "html": "Discussion\n\nFor example, use this style for a button that completes some task and returns to the previous view."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacelevel/4138686-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfacelevel/4138690-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "UINavigationItem.LargeTitleDisplayMode.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitem/largetitledisplaymode/automatic",
    "html": "Discussion\n\nThis is the default mode. If the previous item’s title was large, the current item also displays a large title. Similarly, if the previous item’s title was small, the current item displays a small title."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitaccessibilitycontrast/4138509-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "tintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617135-tintcolor",
    "html": "Discussion\n\nIn iOS 7 and later, all subclasses of UIView derive their behavior for tintColor from the base class. Although UIBarButtonItem isn’t a view, its tintColor property behaves the same as that of UIView. See the discussion of tintColor in UIView for more information.\n\nSee Also\nCustomizing item appearance\nvar style: UIBarButtonItem.Style\nThe style of the item.\nenum UIBarButtonItem.Style\nConstants that specify the style of an item.\nvar isHidden: Bool\nA Boolean that determines the visibility of the item.\nvar isSelected: Bool\nA Boolean value that indicates whether the button is in a selected state.\nvar width: CGFloat\nThe width of the item.\nvar possibleTitles: Set<String>?\nThe set of possible titles to display on the bar button."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitactiveappearance/4138518-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "possibleTitles | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617132-possibletitles",
    "html": "Discussion\n\nUse this property to provide a hint to the system on how to correctly size the bar button item to be wide enough to accommodate your widest title. Set the value of this property to an NSSet object containing all the titles you intend as possible titles for the bar button item. Use the actual text strings you intend to display.\n\nThis property applies to bar button items placed on navigation bars or toolbars.\n\nSee Also\nCustomizing item appearance\nvar style: UIBarButtonItem.Style\nThe style of the item.\nenum UIBarButtonItem.Style\nConstants that specify the style of an item.\nvar tintColor: UIColor?\nThe tint color to apply to the button item.\nvar isHidden: Bool\nA Boolean that determines the visibility of the item.\nvar isSelected: Bool\nA Boolean value that indicates whether the button is in a selected state.\nvar width: CGFloat\nThe width of the item."
  },
  {
    "title": "videoEditorController(_:didFailWithError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate/1622342-videoeditorcontroller",
    "html": "Parameters\neditor\n\nThe video editor that was unable to load or save a movie.\n\nerror\n\nThe loading or saving error.\n\nDiscussion\n\nLoading a movie into the video editor could fail because of an invalid filesystem path or an invalid media format. Saving could fail because of a lack of disk space or other reasons."
  },
  {
    "title": "videoEditorControllerDidCancel(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uivideoeditorcontrollerdelegate/1622335-videoeditorcontrollerdidcancel",
    "html": "Parameters\neditor\n\nThe video editor that the user canceled, not wanting to save changes.\n\nSee Also\nClosing the video editor\nfunc videoEditorController(UIVideoEditorController, didSaveEditedVideoToPath: String)\nNotifies the delegate after the system finishes saving an edited movie."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlegibilityweight/4138624-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlegibilityweight/4138622-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlegibilityweight/4138619-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "navigationControllerPreferredInterfaceOrientationForPresentation(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621864-navigationcontrollerpreferredint",
    "html": "Parameters\nnavigationController\n\nThe navigation controller\n\nReturn Value\n\nThe preferred orientation for presenting the navigation controller.\n\nSee Also\nSupporting custom transition animations\nfunc navigationController(UINavigationController, animationControllerFor: UINavigationController.Operation, from: UIViewController, to: UIViewController) -> UIViewControllerAnimatedTransitioning?\nAllows the delegate to return a noninteractive animator object for use during view controller transitions.\nfunc navigationController(UINavigationController, interactionControllerFor: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning?\nAllows the delegate to return an interactive animator object for use during view controller transitions.\nfunc navigationControllerSupportedInterfaceOrientations(UINavigationController) -> UIInterfaceOrientationMask\nReturns the complete set of supported interface orientations for the navigation controller, as determined by the delegate."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitforcetouchcapability/4138597-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "navigationController(_:didShow:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621848-navigationcontroller",
    "html": "Parameters\nnavigationController\n\nThe navigation controller that is showing the view and properties of a view controller.\n\nviewController\n\nThe view controller whose view and navigation item properties are being shown.\n\nanimated\n\ntrue to animate the transition; otherwise, false.\n\nSee Also\nResponding to a view controller being shown\nfunc navigationController(UINavigationController, willShow: UIViewController, animated: Bool)\nNotifies the delegate before the navigation controller displays a view controller’s view and navigation item properties."
  },
  {
    "title": "UINavigationController.Operation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationcontroller/operation",
    "html": "Topics\nConstants\ncase none\nA constant that indicates no operation is taking place.\ncase push\nA constant that indicates a view controller is being pushed onto the navigation stack.\ncase pop\nA constant that indicates the topmost view controller is being removed from the navigation stack.\nRelationships\nConforms To\nSendable"
  },
  {
    "title": "creatingMovableGroup(customizationIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3987946-creatingmovablegroup",
    "html": "Parameters\ncustomizationIdentifier\n\nA unique string to identify the group for navigation bar layout customization.\n\nReturn Value\n\nA UIBarButtonItemGroup that contains only this bar button item.\n\nDiscussion\n\nA bar button item can only belong to one UIBarButtonItemGroup. If you add a bar button item to a new group, the system removes it from its previous group.\n\nSee Also\nCreating groups\nfunc creatingOptionalGroup(customizationIdentifier: String, isInDefaultCustomization: Bool) -> UIBarButtonItemGroup\nPlaces the item in an optional group that a person can move, add to, or remove from the navigation bar during layout customization.\nfunc creatingFixedGroup() -> UIBarButtonItemGroup\nPlaces the item in a fixed group that a person can’t move or remove from the navigation bar during layout customization."
  },
  {
    "title": "fixedSpace(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600338-fixedspace",
    "html": "Parameters\nwidth\n\nThe width of the space.\n\nReturn Value\n\nA fixed-width space UIBarButtonItem.\n\nSee Also\nCreating space items\nclass func flexibleSpace() -> Self\nCreates a new flexible-width space item."
  },
  {
    "title": "flexibleSpace() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3600339-flexiblespace",
    "html": "Return Value\n\nA flexible-width space UIBarButtonItem.\n\nSee Also\nCreating space items\nclass func fixedSpace(CGFloat) -> Self\nCreates a new fixed-width space item."
  },
  {
    "title": "changesSelectionAsPrimaryAction | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3752177-changesselectionasprimaryaction",
    "html": "Discussion\n\nWhen a button has this property set to true, the button changes to a toggle button where tapping it changes it between selected and unselected.\n\nSee Also\nManaging the action\nvar primaryAction: UIAction?\nThe action associated with the item.\nvar action: Selector?\nThe selector defining the action message to send to the target object when the user taps this bar button item.\nvar target: AnyObject?\nThe object that receives an action when the user selects the item."
  },
  {
    "title": "creatingOptionalGroup(customizationIdentifier:isInDefaultCustomization:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3990269-creatingoptionalgroup",
    "html": "Parameters\ncustomizationIdentifier\n\nA unique string to identify the group for navigation bar layout customization.\n\nisInDefaultCustomization\n\nA Boolean that determines whether to place the group in the navigation bar by default. Specify false if you want the group to appear in the navigation bar customization popover by default.\n\nReturn Value\n\nA UIBarButtonItemGroup that contains only this bar button item.\n\nDiscussion\n\nA bar button item can only belong to one UIBarButtonItemGroup. If you add a bar button item to a new group, the system removes it from its previous group.\n\nSee Also\nCreating groups\nfunc creatingFixedGroup() -> UIBarButtonItemGroup\nPlaces the item in a fixed group that a person can’t move or remove from the navigation bar during layout customization.\nfunc creatingMovableGroup(customizationIdentifier: String) -> UIBarButtonItemGroup\nPlaces the item in a movable group that a person can move but can’t remove from the navigation bar during layout customization."
  },
  {
    "title": "setBackgroundImage(_:for:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617138-setbackgroundimage",
    "html": "Parameters\nbackgroundImage\n\nThe background image for the specified state and metrics.\n\nstate\n\nA control state.\n\nbarMetrics\n\nBar metrics.\n\nDiscussion\n\nFor good results, backgroundImage must be a stretchable image.\n\nSee Also\nCustomizing the background\nfunc backgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the background vertical position offset for specified bar metrics.\nfunc setBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the background vertical position offset for specified bar metrics.\nfunc backgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for a specified state and bar metrics.\nfunc backgroundImage(for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for the specified state, style, and metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics)\nSets the background image for the specified state, style, and metrics."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfaceidiom/4138677-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfaceidiom/4138679-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitverticalsizeclass/4138704-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraituserinterfaceidiom/4138681-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittypesettinglanguage/4213141-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittoolbaritempresentationsize/4138668-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitactiveappearance/4138520-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitaccessibilitycontrast/4138507-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitaccessibilitycontrast/4138506-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617114-style",
    "html": "Discussion\n\nOne of the constants defined in UIBarButtonItem.Style. The default value is UIBarButtonItem.Style.plain.\n\nSee Also\nCustomizing item appearance\nenum UIBarButtonItem.Style\nConstants that specify the style of an item.\nvar tintColor: UIColor?\nThe tint color to apply to the button item.\nvar isHidden: Bool\nA Boolean that determines the visibility of the item.\nvar isSelected: Bool\nA Boolean value that indicates whether the button is in a selected state.\nvar width: CGFloat\nThe width of the item.\nvar possibleTitles: Set<String>?\nThe set of possible titles to display on the bar button."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitactiveappearance/4138516-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "isSelected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3752178-isselected",
    "html": "See Also\nCustomizing item appearance\nvar style: UIBarButtonItem.Style\nThe style of the item.\nenum UIBarButtonItem.Style\nConstants that specify the style of an item.\nvar tintColor: UIColor?\nThe tint color to apply to the button item.\nvar isHidden: Bool\nA Boolean that determines the visibility of the item.\nvar width: CGFloat\nThe width of the item.\nvar possibleTitles: Set<String>?\nThe set of possible titles to display on the bar button."
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitactiveappearance/4138515-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "width | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617155-width",
    "html": "Discussion\n\nIf this property value is positive, the width of the combined image and title are fixed. If the value is 0.0 or negative, the item sets the width of the combined image and title to fit. This property is ignored if the style uses radio mode. The default value is 0.0.\n\nSee Also\nCustomizing item appearance\nvar style: UIBarButtonItem.Style\nThe style of the item.\nenum UIBarButtonItem.Style\nConstants that specify the style of an item.\nvar tintColor: UIColor?\nThe tint color to apply to the button item.\nvar isHidden: Bool\nA Boolean that determines the visibility of the item.\nvar isSelected: Bool\nA Boolean value that indicates whether the button is in a selected state.\nvar possibleTitles: Set<String>?\nThe set of possible titles to display on the bar button."
  },
  {
    "title": "setBackButtonTitlePositionAdjustment(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617139-setbackbuttontitlepositionadjust",
    "html": "Parameters\nadjustment\n\nThe back button title offset for barMetrics.\n\nbarMetrics\n\nBar metrics.\n\nDiscussion\n\nThis modifier applies only to navigation bar back buttons and is ignored by other buttons.\n\nSee Also\nCustomizing the Back button\nfunc backButtonBackgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the back button background image for a specified control state and bar metrics.\nfunc setBackButtonBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the back button background image for a specified control state and bar metrics.\nfunc backButtonTitlePositionAdjustment(for: UIBarMetrics) -> UIOffset\nReturns the back button title offset for specified bar metrics.\nfunc backButtonBackgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the back button vertical position offset for specified bar metrics.\nfunc setBackButtonBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the back button vertical position offset for specified bar metrics."
  },
  {
    "title": "setBackButtonBackgroundVerticalPositionAdjustment(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617124-setbackbuttonbackgroundverticalp",
    "html": "Parameters\nadjustment\n\nThe back button vertical position offset for barMetrics.\n\nbarMetrics\n\nBar metrics.\n\nDiscussion\n\nThis modifier applies only to navigation bar back buttons and is ignored by other buttons.\n\nThis offset is used to adjust the vertical centering of bordered bar buttons within the bar.\n\nSee Also\nCustomizing the Back button\nfunc backButtonBackgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the back button background image for a specified control state and bar metrics.\nfunc setBackButtonBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the back button background image for a specified control state and bar metrics.\nfunc backButtonTitlePositionAdjustment(for: UIBarMetrics) -> UIOffset\nReturns the back button title offset for specified bar metrics.\nfunc setBackButtonTitlePositionAdjustment(UIOffset, for: UIBarMetrics)\nSets the back button title offset for specified bar metrics.\nfunc backButtonBackgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the back button vertical position offset for specified bar metrics."
  },
  {
    "title": "backButtonBackgroundVerticalPositionAdjustment(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617120-backbuttonbackgroundverticalposi",
    "html": "Parameters\nbarMetrics\n\nBar metrics.\n\nReturn Value\n\nThe back button vertical position offset for barMetrics.\n\nDiscussion\n\nThis modifier applies only to navigation bar back buttons and is ignored by other buttons.\n\nThis offset is used to adjust the vertical centering of bordered bar buttons within the bar.\n\nSee Also\nCustomizing the Back button\nfunc backButtonBackgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the back button background image for a specified control state and bar metrics.\nfunc setBackButtonBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the back button background image for a specified control state and bar metrics.\nfunc backButtonTitlePositionAdjustment(for: UIBarMetrics) -> UIOffset\nReturns the back button title offset for specified bar metrics.\nfunc setBackButtonTitlePositionAdjustment(UIOffset, for: UIBarMetrics)\nSets the back button title offset for specified bar metrics.\nfunc setBackButtonBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the back button vertical position offset for specified bar metrics."
  },
  {
    "title": "cloudSharingControllerDidStopSharing(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/1649604-cloudsharingcontrollerdidstopsha",
    "html": "Discussion\n\nImplement this method to receive a notification from the UICloudSharingController instance after the user who owns the CKShare record stops sharing it with all participants.\n\nSee Also\nProcessing shared items\nfunc cloudSharingController(UICloudSharingController, failedToSaveShareWithError: Error)\nTells the delegate that the CloudKit sharing controller failed to save the share record.\n\nRequired\n\nfunc cloudSharingControllerDidSaveShare(UICloudSharingController)\nTells the delegate that the CloudKit sharing controller saved the share record."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitforcetouchcapability/4138593-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "navigationController(_:interactionControllerFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationcontrollerdelegate/1621880-navigationcontroller",
    "html": "Parameters\nnavigationController\n\nThe navigation controller whose navigation stack is changing.\n\nanimationController\n\nThe noninteractive animator object provided by the delegate’s navigationController(_:animationControllerFor:from:to:) method.\n\nReturn Value\n\nThe animator object responsible for managing the transition animations, or nil if you want to use the standard navigation controller transitions. The object you return must conform to the UIViewControllerInteractiveTransitioning protocol.\n\nDiscussion\n\nImplement this delegate method when you want to provide a custom, interactive transition between view controllers as they are added to or removed from the navigation stack. The object you return should configure the interactivity aspects of the transition and should work with the object in the animationController parameter to start the animations.\n\nSee Also\nSupporting custom transition animations\nfunc navigationController(UINavigationController, animationControllerFor: UINavigationController.Operation, from: UIViewController, to: UIViewController) -> UIViewControllerAnimatedTransitioning?\nAllows the delegate to return a noninteractive animator object for use during view controller transitions.\nfunc navigationControllerPreferredInterfaceOrientationForPresentation(UINavigationController) -> UIInterfaceOrientation\nReturns the preferred orientation for presentation of the navigation controller, as determined by the delegate.\nfunc navigationControllerSupportedInterfaceOrientations(UINavigationController) -> UIInterfaceOrientationMask\nReturns the complete set of supported interface orientations for the navigation controller, as determined by the delegate."
  },
  {
    "title": "init(customView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617151-init",
    "html": "Parameters\ncustomView\n\nA custom view representing the item.\n\nReturn Value\n\nA newly initialized UIBarButtonItem.\n\nDiscussion\n\nThe bar button item created by this method doesn’t call the action method of its target in response to user interactions. Instead, the bar button item expects the specified custom view to handle any user interactions and provide an appropriate response."
  },
  {
    "title": "action | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617127-action",
    "html": "Discussion\n\nIf the value of this property is nil, no action message is sent. The default value is nil.\n\nSee Also\nManaging the action\nvar primaryAction: UIAction?\nThe action associated with the item.\nvar changesSelectionAsPrimaryAction: Bool\nA Boolean value that indicates whether the button represents an action or selection.\nvar target: AnyObject?\nThe object that receives an action when the user selects the item."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlegibilityweight/4138620-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitforcetouchcapability/4138595-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplaygamut/4138577-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "backgroundImage(for:style:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617117-backgroundimage",
    "html": "Parameters\nstate\n\nThe bar button state.\n\nstyle\n\nThe bar button style.\n\nbarMetrics\n\nThe bar button metrics.\n\nReturn Value\n\nThe background image associated with the specified state, style, and metrics.\n\nSee Also\nCustomizing the background\nfunc backgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the background vertical position offset for specified bar metrics.\nfunc setBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the background vertical position offset for specified bar metrics.\nfunc backgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for a specified state and bar metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the background image for a specified state and bar metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics)\nSets the background image for the specified state, style, and metrics."
  },
  {
    "title": "tabBarController(_:willEndCustomizing:changed:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621178-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller that is being customized.\n\nviewControllers\n\nThe view controllers of the tab bar controller. The arrangement of the controllers in the array represents the new display order within the tab bar.\n\nchanged\n\nA Boolean value indicating whether items changed on the tab bar. true if items changed or false if they did not.\n\nDiscussion\n\nThis method is called in response to the user tapping the Done button on the sheet but before the sheet is dismissed.\n\nSee Also\nManaging tab bar customizations\nfunc tabBarController(UITabBarController, willBeginCustomizing: [UIViewController])\nTells the delegate that the tab bar customization sheet is about to be displayed.\nfunc tabBarController(UITabBarController, didEndCustomizing: [UIViewController], changed: Bool)\nTells the delegate that the tab bar customization sheet was dismissed."
  },
  {
    "title": "tabBarController(_:willBeginCustomizing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621179-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller that is being customized.\n\nviewControllers\n\nThe view controllers to be displayed in the customization sheet. This list typically contains all custom view controllers you added but does not include some standard controllers, such as the one that manages the More tab.\n\nSee Also\nManaging tab bar customizations\nfunc tabBarController(UITabBarController, willEndCustomizing: [UIViewController], changed: Bool)\nTells the delegate that the tab bar customization sheet is about to be dismissed.\nfunc tabBarController(UITabBarController, didEndCustomizing: [UIViewController], changed: Bool)\nTells the delegate that the tab bar customization sheet was dismissed."
  },
  {
    "title": "addSymbolEffect(_:options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213094-addsymboleffect",
    "html": "Parameters\neffect\n\nThe symbol effect to add.\n\noptions\n\nThe options for the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the addition of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "tabBarController(_:shouldSelect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621166-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller containing viewController.\n\nviewController\n\nThe view controller belonging to the tab that was tapped by the user.\n\nReturn Value\n\ntrue if the view controller’s tab should be selected or false if the current tab should remain active.\n\nDiscussion\n\nThe tab bar controller calls this method in response to the user tapping a tab bar item. You can use this method to dynamically decide whether a given tab should be made the active tab.\n\nSee Also\nManaging tab bar selections\nfunc tabBarController(UITabBarController, didSelect: UIViewController)\nTells the delegate that the user selected an item in the tab bar.\nRelated Documentation\nView Controller Catalog for iOS"
  },
  {
    "title": "tabBarController(_:didSelect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621173-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller containing viewController.\n\nviewController\n\nThe view controller that the user selected. In iOS v3.0 and later, this could be the same view controller that was already selected.\n\nDiscussion\n\nIn iOS v3.0 and later, the tab bar controller calls this method regardless of whether the selected view controller changed. In addition, it is called only in response to user taps in the tab bar and is not called when your code changes the tab bar contents programmatically.\n\nIn versions of iOS prior to version 3.0, this method is called only when the selected view controller actually changes. In other words, it is not called when the same view controller is selected. In addition, the method was called for both programmatic and user-initiated changes to the selected view controller.\n\nSee Also\nManaging tab bar selections\nfunc tabBarController(UITabBarController, shouldSelect: UIViewController) -> Bool\nAsks the delegate whether the specified view controller should be made active."
  },
  {
    "title": "allowPublic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/permissionoptions/2274275-allowpublic",
    "html": "Discussion\n\nTo give the user the option to allow anyone to access the shared data, include the allowPublic option when setting the availablePermissions property on the UICloudSharingController instance."
  },
  {
    "title": "allowReadOnly | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/permissionoptions/2274277-allowreadonly",
    "html": "Discussion\n\nTo give the user the option to prevent other people from editing the shared data, include the allowReadOnly option when setting the availablePermissions property on the UICloudSharingController instance."
  },
  {
    "title": "allowReadWrite | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/permissionoptions/2274279-allowreadwrite",
    "html": "Discussion\n\nTo give the user the option to allow other people to edit the shared data, include the allowReadWrite option when setting the availablePermissions property on the UICloudSharingController instance."
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittoolbaritempresentationsize/4138667-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitpreferredcontentsizecategory/4138659-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitpreferredcontentsizecategory/4138661-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitpreferredcontentsizecategory/4138663-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlayoutdirection/4138613-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraithorizontalsizeclass/4138601-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "menu | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/3601188-menu",
    "html": "Discussion\n\nThe context menu displays in response to a person tapping the item.\n\nSee Also\nManaging the context menu\nvar preferredMenuElementOrder: UIContextMenuConfiguration.ElementOrder\nThe preferred menu-element ordering strategy for the menu."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlayoutdirection/4138615-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "target | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617154-target",
    "html": "Discussion\n\nIf nil, the action message is passed up the responder chain where it may be handled by any object implementing a method corresponding to the selector held by the action property. The default value is nil.\n\nSee Also\nManaging the action\nvar primaryAction: UIAction?\nThe action associated with the item.\nvar changesSelectionAsPrimaryAction: Bool\nA Boolean value that indicates whether the button represents an action or selection.\nvar action: Selector?\nThe selector defining the action message to send to the target object when the user taps this bar button item."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitaccessibilitycontrast/4138511-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "backButtonTitlePositionAdjustment(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617145-backbuttontitlepositionadjustmen",
    "html": "Parameters\nbarMetrics\n\nBar metrics.\n\nReturn Value\n\nThe back button title offset for barMetrics.\n\nDiscussion\n\nThis modifier applies only to navigation bar back buttons and is ignored by other buttons.\n\nSee Also\nCustomizing the Back button\nfunc backButtonBackgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the back button background image for a specified control state and bar metrics.\nfunc setBackButtonBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the back button background image for a specified control state and bar metrics.\nfunc setBackButtonTitlePositionAdjustment(UIOffset, for: UIBarMetrics)\nSets the back button title offset for specified bar metrics.\nfunc backButtonBackgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the back button vertical position offset for specified bar metrics.\nfunc setBackButtonBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the back button vertical position offset for specified bar metrics."
  },
  {
    "title": "UITabBarItem.SystemItem.search | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/search",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraithorizontalsizeclass/4138604-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraithorizontalsizeclass/4138606-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "buttonGroup | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1623564-buttongroup",
    "html": "Discussion\n\nThis property contains the group to which the item belongs. This property is configured automatically when you add the bar button item to a UIBarButtonItemGroup object. If the item isn’t associated with a bar button item group, this property is nil."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraithorizontalsizeclass/4138602-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "setBackgroundImage(_:for:style:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617161-setbackgroundimage",
    "html": "Parameters\nbackgroundImage\n\nThe background image to use for the specified state, style, and metrics.\n\nstate\n\nThe bar button state.\n\nstyle\n\nThe bar button style.\n\nbarMetrics\n\nThe bar button metrics.\n\nDiscussion\n\nFor good results, backgroundImage must be a stretchable image.\n\nSee Also\nCustomizing the background\nfunc backgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the background vertical position offset for specified bar metrics.\nfunc setBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the background vertical position offset for specified bar metrics.\nfunc backgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for a specified state and bar metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the background image for a specified state and bar metrics.\nfunc backgroundImage(for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for the specified state, style, and metrics."
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplaygamut/4138574-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "titlePositionAdjustment(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617160-titlepositionadjustment",
    "html": "Parameters\nbarMetrics\n\nBar metrics.\n\nReturn Value\n\nThe title offset for barMetrics.\n\nDiscussion\n\nThis offset is used to adjust the position of a title (if any) within a bordered bar button.\n\nSee Also\nCustomizing the title placement\nfunc setTitlePositionAdjustment(UIOffset, for: UIBarMetrics)\nSets the title offset for specified bar metrics."
  },
  {
    "title": "isSymbolAnimationEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4210338-issymbolanimationenabled",
    "html": "See Also\nConfiguring symbol effects\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "addSymbolEffect(_:options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213093-addsymboleffect",
    "html": "Parameters\neffect\n\nThe symbol effect to add.\n\noptions\n\nThe options for the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the addition of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplaygamut/4138579-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "interPageSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/optionskey/1614115-interpagespacing",
    "html": "Discussion\n\nThe value should be a CGFloat wrapped in an instance of NSNumber. The default value is zero. An inter-page spacing is only valid if the transition style is UIPageViewController.TransitionStyle.scroll.\n\nSee Also\nPage options\nstatic let spineLocation: UIPageViewController.OptionsKey\nLocation of the spine."
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitforcetouchcapability/4138592-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "tabBarController(_:animationControllerForTransitionFrom:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621167-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller whose view controller is transitioning.\n\nfromVC\n\nThe currently visible view controller.\n\ntoVC\n\nThe view controller intended to be visible after the transition ends.\n\nReturn Value\n\nThe UIViewControllerAnimatedTransitioning delegate object responsible for managing the tab bar view controller transition animation.\n\nSee Also\nSupporting custom tab bar transition animations\nfunc tabBarController(UITabBarController, interactionControllerFor: UIViewControllerAnimatedTransitioning) -> UIViewControllerInteractiveTransitioning?\nCalled to allow the delegate to return a UIViewControllerInteractiveTransitioning delegate object for use during an animated tab bar transition."
  },
  {
    "title": "tabBarController(_:interactionControllerFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621170-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller participating in the interactive, animated transition.\n\nanimationController\n\nThe noninteractive animation controller\n\nReturn Value\n\nThe UIViewControllerInteractiveTransitioning delegate object responsible for managing the user interaction in an animated tab bar transition.\n\nSee Also\nSupporting custom tab bar transition animations\nfunc tabBarController(UITabBarController, animationControllerForTransitionFrom: UIViewController, to: UIViewController) -> UIViewControllerAnimatedTransitioning?\nCalled to allow the delegate to return a UIViewControllerAnimatedTransitioning delegate object for use during a noninteractive tab bar view controller transition."
  },
  {
    "title": "tabBarControllerPreferredInterfaceOrientationForPresentation(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621176-tabbarcontrollerpreferredinterfa",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller that is asking the delegate object for the preferred presentation orientation.\n\nReturn Value\n\nThe preferred orientation for presenting the tab bar controller.\n\nSee Also\nOverriding view rotation settings\nfunc tabBarControllerSupportedInterfaceOrientations(UITabBarController) -> UIInterfaceOrientationMask\nCalled to allow the delegate to provide the complete set of supported interface orientations for the tab bar controller.\nRelated Documentation\nvar preferredInterfaceOrientationForPresentation: UIInterfaceOrientation\nThe interface orientation to use when presenting the view controller."
  },
  {
    "title": "tabBarControllerSupportedInterfaceOrientations(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621180-tabbarcontrollersupportedinterfa",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller that is asking the delegate object for the supported interface orientations.\n\nReturn Value\n\nOne of the UIInterfaceOrientationMask constants that represents the set of interface orientations supported by the tab bar controller.\n\nSee Also\nOverriding view rotation settings\nfunc tabBarControllerPreferredInterfaceOrientationForPresentation(UITabBarController) -> UIInterfaceOrientation\nCalled to allow the delegate to provide the preferred orientation for presentation of the tab bar controller.\nRelated Documentation\nvar supportedInterfaceOrientations: UIInterfaceOrientationMask\nThe interface orientations that the view controller supports."
  },
  {
    "title": "tabBarController(_:didEndCustomizing:changed:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbarcontrollerdelegate/1621168-tabbarcontroller",
    "html": "Parameters\ntabBarController\n\nThe tab bar controller that is being customized.\n\nviewControllers\n\nThe view controllers of the tab bar controller. The arrangement of the controllers in the array represents the new display order within the tab bar.\n\nchanged\n\nA Boolean value indicating whether items changed on the tab bar. true if items changed or false if they did not.\n\nDiscussion\n\nYou can use this method to respond to changes to the order of tabs in the tab bar.\n\nSee Also\nManaging tab bar customizations\nfunc tabBarController(UITabBarController, willBeginCustomizing: [UIViewController])\nTells the delegate that the tab bar customization sheet is about to be displayed.\nfunc tabBarController(UITabBarController, willEndCustomizing: [UIViewController], changed: Bool)\nTells the delegate that the tab bar customization sheet is about to be dismissed."
  },
  {
    "title": "setSymbolImage(_:contentTransition:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213100-setsymbolimage",
    "html": "Parameters\nsymbolImage\n\nThe symbol image to set.\n\ntransition\n\nThe content transition to use when setting the symbol image.\n\noptions\n\nThe options to use when setting the symbol image.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "addSymbolEffect(_:options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213095-addsymboleffect",
    "html": "Parameters\neffect\n\nThe symbol effect to add.\n\noptions\n\nThe options for the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the addition of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittypesettinglanguage/4213137-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittypesettinglanguage/4213139-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "allowPrivate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontroller/permissionoptions/2274278-allowprivate",
    "html": "Discussion\n\nTo give the user the option to limit access to people who have been invited, include the allowPrivate option when setting the availablePermissions property on the UICloudSharingController instance.\n\nNote\n\nWhen inviting someone, the user must provide that person’s email address or phone number. This is how the person is identified when accepting the invitation."
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitpreferredcontentsizecategory/4138658-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittoolbaritempresentationsize/4138670-identifier",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraittoolbaritempresentationsize/4138672-name",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlayoutdirection/4138611-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "affectsColorAppearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitlayoutdirection/4138610-affectscolorappearance",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "UITabBarItem.SystemItem.featured | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/featured",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "UITabBarItem.SystemItem.topRated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/toprated",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item."
  },
  {
    "title": "UITabBarItem.SystemItem.favorites | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/favorites",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "removeSymbolEffect(ofType:options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213097-removesymboleffect",
    "html": "Parameters\neffect\n\nThe symbol effect to match for removal.\n\noptions\n\nThe options to use when removing the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "removeSymbolEffect(ofType:options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213099-removesymboleffect",
    "html": "Parameters\neffect\n\nThe symbol effect to match for removal.\n\noptions\n\nThe options to use when removing the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "removeSymbolEffect(ofType:options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213098-removesymboleffect",
    "html": "Parameters\neffect\n\nThe symbol effect to match for removal.\n\noptions\n\nThe options to use when removing the symbol effect.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effect.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting.\nfunc removeAllSymbolEffects(options: SymbolEffectOptions, animated: Bool)\nRemoves all symbol effects from the bar button item, using the specified options and animation setting."
  },
  {
    "title": "removeAllSymbolEffects(options:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/4213096-removeallsymboleffects",
    "html": "Parameters\noptions\n\nThe options to use when removing the symbol effects.\n\nanimated\n\nA Boolean value that indicates whether to animate the removal of a scale, appear, or disappear effects.\n\nSee Also\nConfiguring symbol effects\nvar isSymbolAnimationEnabled: Bool\nA Boolean value that indicates whether symbol effects animate.\nfunc addSymbolEffect(some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds an indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete, indefinite symbol effect to the bar button item with the specified options and animation.\nfunc addSymbolEffect(some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nAdds a discrete symbol effect to the bar button item with the specified options and animation.\nfunc setSymbolImage(UIImage, contentTransition: some ContentTransitionSymbolEffect & SymbolEffect, options: SymbolEffectOptions)\nSets a symbol image using the specified content-transition effect and options.\nfunc removeSymbolEffect(ofType: some IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & IndefiniteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete, indefinite effect type, using the specified options and animation setting.\nfunc removeSymbolEffect(ofType: some DiscreteSymbolEffect & SymbolEffect, options: SymbolEffectOptions, animated: Bool)\nRemoves the symbol effect that matches the specified discrete effect type, using the specified options and animation setting."
  },
  {
    "title": "itemType(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/2274281-itemtype",
    "html": "Discussion\n\nUICloudSharingController uses the UTI to determine if the shared item is a special type. This allows text presented by the controller to refer to the item using descriptive wording. For example, if the shared item is a presentation and kUTTypePresentation is returned, the screens refer to the shared item as a presentation. Likewise, if the shared item is a document and kUTTypeContent is returned, the screens refer to the item as a document. And when kUTTypeSpreadsheet is returned, the screens refer to the item as a spreadsheet.\n\nFor types unique to your app, return nil or do not implement this method.\n\nListing 1 Tell the controller the item is a png image.\nfunc itemType(for csc: UICloudSharingController) -> String? {\n  return kUTTypePNG as String // Add \"import MobileCoreServices\" to use UTI constants.\n}\n\n\nSee Also\nConfiguring the view controller\nfunc itemTitle(for: UICloudSharingController) -> String?\nAsks the delegate for the title to display on the invitation screen.\n\nRequired\n\nfunc itemThumbnailData(for: UICloudSharingController) -> Data?\nAsks the delegate for the thumbnail image data to display on the invitation."
  },
  {
    "title": "cloudSharingController(_:failedToSaveShareWithError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/1649606-cloudsharingcontroller",
    "html": "Required\n\nDiscussion\n\nImplement this method to receive a notification from the UICloudSharingController instance after it fails to save changes to the CKShare record.\n\nSee Also\nProcessing shared items\nfunc cloudSharingControllerDidStopSharing(UICloudSharingController)\nTells the delegate that the user has stopped sharing the record.\nfunc cloudSharingControllerDidSaveShare(UICloudSharingController)\nTells the delegate that the CloudKit sharing controller saved the share record."
  },
  {
    "title": "UIBarButtonItem.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/style",
    "html": "Topics\nConstants\ncase plain\nA button style with plain text styling.\ncase bordered\nA simple button style with a border.\ncase done\nA button style for a done button.\nRelationships\nConforms To\nSendable\nSee Also\nCustomizing item appearance\nvar style: UIBarButtonItem.Style\nThe style of the item.\nvar tintColor: UIColor?\nThe tint color to apply to the button item.\nvar isHidden: Bool\nA Boolean that determines the visibility of the item.\nvar isSelected: Bool\nA Boolean value that indicates whether the button is in a selected state.\nvar width: CGFloat\nThe width of the item.\nvar possibleTitles: Set<String>?\nThe set of possible titles to display on the bar button."
  },
  {
    "title": "cloudSharingControllerDidSaveShare(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicloudsharingcontrollerdelegate/1649605-cloudsharingcontrollerdidsavesha",
    "html": "Discussion\n\nImplement this method to receive a notification from the UICloudSharingController instance after it saves changes to the CKShare record.\n\nSee Also\nProcessing shared items\nfunc cloudSharingController(UICloudSharingController, failedToSaveShareWithError: Error)\nTells the delegate that the CloudKit sharing controller failed to save the share record.\n\nRequired\n\nfunc cloudSharingControllerDidStopSharing(UICloudSharingController)\nTells the delegate that the user has stopped sharing the record."
  },
  {
    "title": "documentInteractionControllerDidDismissOptionsMenu(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616803-documentinteractioncontrollerdid",
    "html": "Parameters\ncontroller\n\nThe document interaction controller that dismissed its options menu.\n\nDiscussion\n\nYou can use this method to remove any additional views or content you placed underneath the options menu in your documentInteractionControllerWillPresentOptionsMenu(_:) method.\n\nSee Also\nPresenting the user interface\nfunc documentInteractionControllerWillBeginPreview(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display a preview for its document.\nfunc documentInteractionControllerDidEndPreview(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its document preview.\nfunc documentInteractionControllerWillPresentOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an options menu.\nfunc documentInteractionControllerWillPresentOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an Open In menu.\nfunc documentInteractionControllerDidDismissOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its Open In menu."
  },
  {
    "title": "documentInteractionControllerWillPresentOpenInMenu(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616818-documentinteractioncontrollerwil",
    "html": "Parameters\ncontroller\n\nThe document interaction controller that is about to display a menu.\n\nDiscussion\n\nThe Open In menu is used to select an application for opening the current file. You can use this method to update your user interface in response to displaying the menu.\n\nSee Also\nPresenting the user interface\nfunc documentInteractionControllerWillBeginPreview(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display a preview for its document.\nfunc documentInteractionControllerDidEndPreview(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its document preview.\nfunc documentInteractionControllerWillPresentOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an options menu.\nfunc documentInteractionControllerDidDismissOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its options menu.\nfunc documentInteractionControllerDidDismissOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its Open In menu."
  },
  {
    "title": "documentInteractionControllerWillPresentOptionsMenu(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616822-documentinteractioncontrollerwil",
    "html": "Parameters\ncontroller\n\nThe document interaction controller that is about to display an options menu.\n\nDiscussion\n\nThe options menu is used to present the user with options for previewing the document, opening it in an application, or copying its contents. You can use this method to update your user interface in response to displaying the menu.\n\nSee Also\nPresenting the user interface\nfunc documentInteractionControllerWillBeginPreview(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display a preview for its document.\nfunc documentInteractionControllerDidEndPreview(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its document preview.\nfunc documentInteractionControllerDidDismissOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its options menu.\nfunc documentInteractionControllerWillPresentOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an Open In menu.\nfunc documentInteractionControllerDidDismissOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its Open In menu."
  },
  {
    "title": "documentInteractionController(_:didEndSendingToApplication:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616824-documentinteractioncontroller",
    "html": "Parameters\ncontroller\n\nThe document interaction controller whose document is about to be opened.\n\napplication\n\nThe bundle identifier of the application that is about to open the document. This value corresponds to the value in the CFBundleIdentifier key of the application’s Info.plist file.\n\nDiscussion\n\nThis method is called after the document information has been saved for the specified application.\n\nSee Also\nOpening files\nfunc documentInteractionController(UIDocumentInteractionController, willBeginSendingToApplication: String?)\nCalled when a document interaction controller’s document is about to be opened by the specified application."
  },
  {
    "title": "documentInteractionControllerDidDismissOpenInMenu(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616826-documentinteractioncontrollerdid",
    "html": "Parameters\ncontroller\n\nThe document interaction controller that dismissed its menu.\n\nDiscussion\n\nYou can use this method to remove any additional views or content you placed underneath the Open In menu in your documentInteractionControllerWillPresentOpenInMenu(_:) method.\n\nSee Also\nPresenting the user interface\nfunc documentInteractionControllerWillBeginPreview(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display a preview for its document.\nfunc documentInteractionControllerDidEndPreview(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its document preview.\nfunc documentInteractionControllerWillPresentOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an options menu.\nfunc documentInteractionControllerDidDismissOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its options menu.\nfunc documentInteractionControllerWillPresentOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an Open In menu."
  },
  {
    "title": "defaultValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitraitdisplaygamut/4138575-defaultvalue",
    "html": "Relationships\nFrom Protocol\nUITraitDefinition"
  },
  {
    "title": "backgroundVerticalPositionAdjustment(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617143-backgroundverticalpositionadjust",
    "html": "Parameters\nbarMetrics\n\nBar metrics.\n\nReturn Value\n\nThe background vertical position offset for barMetrics.\n\nDiscussion\n\nThis offset is used to adjust the vertical centering of bordered bar buttons within the bar.\n\nSee Also\nCustomizing the background\nfunc setBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the background vertical position offset for specified bar metrics.\nfunc backgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for a specified state and bar metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the background image for a specified state and bar metrics.\nfunc backgroundImage(for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for the specified state, style, and metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics)\nSets the background image for the specified state, style, and metrics."
  },
  {
    "title": "backgroundImage(for:barMetrics:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617134-backgroundimage",
    "html": "Parameters\nstate\n\nA control state.\n\nbarMetrics\n\nBar metrics.\n\nReturn Value\n\nThe background image for the button given state and metrics.\n\nSee Also\nCustomizing the background\nfunc backgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the background vertical position offset for specified bar metrics.\nfunc setBackgroundVerticalPositionAdjustment(CGFloat, for: UIBarMetrics)\nSets the background vertical position offset for specified bar metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the background image for a specified state and bar metrics.\nfunc backgroundImage(for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for the specified state, style, and metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics)\nSets the background image for the specified state, style, and metrics."
  },
  {
    "title": "setBackgroundVerticalPositionAdjustment(_:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uibarbuttonitem/1617141-setbackgroundverticalpositionadj",
    "html": "Parameters\nadjustment\n\nThe background vertical position offset for barMetrics.\n\nbarMetrics\n\nBar metrics.\n\nDiscussion\n\nThis offset is used to adjust the vertical centering of bordered bar buttons within the bar.\n\nSee Also\nCustomizing the background\nfunc backgroundVerticalPositionAdjustment(for: UIBarMetrics) -> CGFloat\nReturns the background vertical position offset for specified bar metrics.\nfunc backgroundImage(for: UIControl.State, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for a specified state and bar metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, barMetrics: UIBarMetrics)\nSets the background image for a specified state and bar metrics.\nfunc backgroundImage(for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics) -> UIImage?\nReturns the background image for the specified state, style, and metrics.\nfunc setBackgroundImage(UIImage?, for: UIControl.State, style: UIBarButtonItem.Style, barMetrics: UIBarMetrics)\nSets the background image for the specified state, style, and metrics."
  },
  {
    "title": "setPersistent(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/1622096-setpersistent",
    "html": "Deprecated\n\nUse shared app group containers instead. For more information about app groups, see Adding an App to an App Group. For more information about shared containers, see the containerURL(forSecurityApplicationGroupIdentifier:) method of FileManager.\n\nDiscussion\n\nNonpersistent named pasteboards remain available. You can use these to implement such features as Duplicate or Copy Style. A nonpersistent named pasteboard is available only in the process that creates it.\n\nSee Also\nDeprecated\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<Set<UIPasteboard.DetectionPattern>, Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, without notifying the user.\nDeprecated\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[Set<UIPasteboard.DetectionPattern>], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, without notifying the user.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<[UIPasteboard.DetectionPattern : Any], Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, reading the contents if it finds a match.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[[UIPasteboard.DetectionPattern : Any]], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, reading the contents if it finds a match.\nDeprecated\nRelated Documentation\ninit?(name: UIPasteboard.Name, create: Bool)\nReturns a pasteboard that you identify by name, optionally creating it if it doesn’t exist.\nclass func withUniqueName() -> UIPasteboard\nReturns an app pasteboard that you identify by a unique system-generated name."
  },
  {
    "title": "detectValues(for:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/3621872-detectvalues",
    "html": "Deprecated\n\nUse detectValues(for:completionHandler:) instead.\n\nParameters\npatterns\n\nThe patterns to detect on the pasteboard.\n\ncompletionHandler\n\nA closure that the system invokes after detecting patterns on the pasteboard. The closure receives a Result instance that contains either a dictionary with the patterns found on the pasteboard or an error if detection failed. If the Result instance contains a dictionary, the keys specify the matched pattern, and the value specifies the content of the pasteboard.\n\nDiscussion\n\nImportant\n\nCalling this method notifies the user that the app has read the contents of the pasteboard.\n\nFor details about the types returned for each pattern, see UIPasteboard.DetectionPattern.\n\nSee Also\nDeprecated\nvar isPersistent: Bool\nA Boolean value that indicates whether the pasteboard is persistent.\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<Set<UIPasteboard.DetectionPattern>, Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, without notifying the user.\nDeprecated\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[Set<UIPasteboard.DetectionPattern>], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, without notifying the user.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[[UIPasteboard.DetectionPattern : Any]], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, reading the contents if it finds a match.\nDeprecated"
  },
  {
    "title": "referenceURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619171-referenceurl",
    "html": "Deprecated\n\nUse PHPickerViewController instead.\n\nDiscussion\n\nAfter the user edits a picked item—such as by cropping an image or trimming a movie—the URL continues to point to the original version of the picked item.\n\nThe value for this key is an NSURL object."
  },
  {
    "title": "probableWebSearch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869645-probablewebsearch",
    "html": "See Also\nDetected patterns\nvar patterns: Set<PartialKeyPath<UIPasteboard.DetectedValues>>\nA set of key paths that represent patterns that the data detection system identifies.\nvar probableWebURL: String\nA string that the data detection system identifies as a probable web URL."
  },
  {
    "title": "shipmentTrackingNumbers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869647-shipmenttrackingnumbers",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies."
  },
  {
    "title": "patterns | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869642-patterns",
    "html": "See Also\nDetected patterns\nvar probableWebSearch: String\nA string that the data detection system identifies as a probable web search item.\nvar probableWebURL: String\nA string that the data detection system identifies as a probable web URL."
  },
  {
    "title": "postalAddresses | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869644-postaladdresses",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "UITabBarItem.SystemItem.bookmarks | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/bookmarks",
    "html": "See Also\nSystem items\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "UITabBarItem.SystemItem.downloads | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/downloads",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "UITabBarItem.SystemItem.contacts | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/contacts",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "spineLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/optionskey/1614082-spinelocation",
    "html": "Discussion\n\nFor possible values, see UIPageViewController.SpineLocation. A spine location is only valid if the transition style is UIPageViewController.TransitionStyle.pageCurl.\n\nIf the transition style is UIPageViewController.TransitionStyle.pageCurl, the default value for this property is UIPageViewController.SpineLocation.min; otherwise, the default is UIPageViewController.SpineLocation.none.\n\nSee Also\nPage options\nstatic let interPageSpacing: UIPageViewController.OptionsKey\nSpace between pages, in points."
  },
  {
    "title": "UITabBarItem.SystemItem.history | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/history",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "UITabBarItem.SystemItem.more | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/more",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "UITabBarItem.SystemItem.mostRecent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/mostrecent",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostViewed\nThe most viewed system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "pageViewControllerSupportedInterfaceOrientations(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614100-pageviewcontrollersupportedinter",
    "html": "Parameters\npageViewController\n\nThe page view controller.\n\nReturn Value\n\nOne of the UIInterfaceOrientationMask constants that represents the set of interface orientations supported by the page view controller.\n\nSee Also\nOverriding View Rotation Settings\nfunc pageViewControllerPreferredInterfaceOrientationForPresentation(UIPageViewController) -> UIInterfaceOrientation\nReturns the preferred orientation for presentation of the page view controller, as determined by the delegate.\nRelated Documentation\nvar supportedInterfaceOrientations: UIInterfaceOrientationMask\nThe interface orientations that the view controller supports."
  },
  {
    "title": "pageViewController(_:willTransitionTo:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614091-pageviewcontroller",
    "html": "Parameters\npageViewController\n\nThe page view controller.\n\npendingViewControllers\n\nThe view controllers that are being transitioned to.\n\nDiscussion\n\nIf the user aborts the navigation gesture, the transition doesn’t complete and the view controllers stay the same.\n\nSee Also\nResponding to Page View Controller Events\nfunc pageViewController(UIPageViewController, didFinishAnimating: Bool, previousViewControllers: [UIViewController], transitionCompleted: Bool)\nCalled after a gesture-driven transition completes.\nfunc pageViewController(UIPageViewController, spineLocationFor: UIInterfaceOrientation) -> UIPageViewController.SpineLocation\nReturns the spine location for the given orientation.\nRelated Documentation\nView Controller Catalog for iOS"
  },
  {
    "title": "UITabBarItem.SystemItem.recents | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/recents",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase mostViewed\nThe most viewed system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "UIDeviceOrientation.portrait | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/portrait",
    "html": "See Also\nDevice orientations\ncase unknown\nThe orientation of the device can’t be determined.\ncase portraitUpsideDown\nThe device is in portrait mode but upside down, with the device held upright and the front-facing camera at the bottom.\ncase landscapeLeft\nThe device is in landscape mode, with the device held upright and the front-facing camera on the left side.\ncase landscapeRight\nThe device is in landscape mode, with the device held upright and the front-facing camera on the right side.\ncase faceUp\nThe device is held parallel to the ground with the screen facing upwards.\ncase faceDown\nThe device is held parallel to the ground with the screen facing downwards."
  },
  {
    "title": "documentInteractionControllerRectForPreview(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616805-documentinteractioncontrollerrec",
    "html": "Parameters\ncontroller\n\nThe document interaction controller requesting the starting rectangle.\n\nReturn Value\n\nA rectangle in the coordinate system of the view returned by the documentInteractionControllerViewForPreview(_:) method.\n\nDiscussion\n\nIf you do not implement the documentInteractionControllerViewForPreview(_:) method, or if you do implement it but return a nil value, this method is not called. If you do not implement this method, the starting rectangle is assumed to be the bounds of the view returned by the documentInteractionControllerViewForPreview(_:) method.\n\nSee Also\nConfiguring the parent view controller\nfunc documentInteractionControllerViewControllerForPreview(UIDocumentInteractionController) -> UIViewController\nCalled when a document interaction controller needs a view controller for presenting a document preview.\nfunc documentInteractionControllerViewForPreview(UIDocumentInteractionController) -> UIView?\nCalled when a document interaction controller needs the starting point for animating the display of a document preview."
  },
  {
    "title": "documentInteractionControllerDidEndPreview(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616809-documentinteractioncontrollerdid",
    "html": "Parameters\ncontroller\n\nThe document interaction controller that dismissed its document preview.\n\nDiscussion\n\nThis method is called after the view containing the document preview has been removed from the application’s key window. You can use this notification to remove any interface elements you set up behind the preview elements.\n\nSee Also\nPresenting the user interface\nfunc documentInteractionControllerWillBeginPreview(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display a preview for its document.\nfunc documentInteractionControllerWillPresentOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an options menu.\nfunc documentInteractionControllerDidDismissOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its options menu.\nfunc documentInteractionControllerWillPresentOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an Open In menu.\nfunc documentInteractionControllerDidDismissOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its Open In menu."
  },
  {
    "title": "documentInteractionControllerViewControllerForPreview(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616799-documentinteractioncontrollervie",
    "html": "Parameters\ncontroller\n\nThe document interaction controller requesting the parent view controller.\n\nReturn Value\n\nThe view controller to use when presenting the document preview. The return value must not be nil.\n\nDiscussion\n\nAlthough technically optional, this method is required if your application attempts to display a preview for a document. The view controller returned by this method is used as the parent for the document preview.\n\nIf you return a navigation controller from this method, the document interaction controller is pushed onto the navigation stack using the standard navigation controller animations. If you return any other type of view controller, the document interaction controller is displayed modally, in which case, the view controller you return must be capable of presenting a modal view controller.\n\nSee Also\nConfiguring the parent view controller\nfunc documentInteractionControllerViewForPreview(UIDocumentInteractionController) -> UIView?\nCalled when a document interaction controller needs the starting point for animating the display of a document preview.\nfunc documentInteractionControllerRectForPreview(UIDocumentInteractionController) -> CGRect\nCalled when a document interaction controller needs the rectangle to use as the starting point for animating the display of a document preview."
  },
  {
    "title": "documentInteractionControllerWillBeginPreview(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616806-documentinteractioncontrollerwil",
    "html": "Parameters\ncontroller\n\nThe document interaction controller that is about to preview its document.\n\nDiscussion\n\nThis method is called shortly before the view containing the document preview is presented modally. You can use this notification to set up any additional interface elements behind the preview elements.\n\nSee Also\nPresenting the user interface\nfunc documentInteractionControllerDidEndPreview(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its document preview.\nfunc documentInteractionControllerWillPresentOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an options menu.\nfunc documentInteractionControllerDidDismissOptionsMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its options menu.\nfunc documentInteractionControllerWillPresentOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller is about to display an Open In menu.\nfunc documentInteractionControllerDidDismissOpenInMenu(UIDocumentInteractionController)\nCalled when a document interaction controller has dismissed its Open In menu."
  },
  {
    "title": "UIPageViewController.SpineLocation.max | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/spinelocation/max",
    "html": "Discussion\n\nOne view controller is displayed at a time."
  },
  {
    "title": "documentInteractionControllerViewForPreview(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616819-documentinteractioncontrollervie",
    "html": "Parameters\ncontroller\n\nThe document interaction controller requesting the starting view.\n\nReturn Value\n\nThe view to use as the starting point for the animation or nil if you want the document preview to fade into place.\n\nDiscussion\n\nBy default, the starting rectangle for the animation is set to the bounds of the returned view. To specify a different starting rectangle, you must also override the documentInteractionControllerRectForPreview(_:) method.\n\nSee Also\nConfiguring the parent view controller\nfunc documentInteractionControllerViewControllerForPreview(UIDocumentInteractionController) -> UIViewController\nCalled when a document interaction controller needs a view controller for presenting a document preview.\nfunc documentInteractionControllerRectForPreview(UIDocumentInteractionController) -> CGRect\nCalled when a document interaction controller needs the rectangle to use as the starting point for animating the display of a document preview."
  },
  {
    "title": "documentInteractionController(_:performAction:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616823-documentinteractioncontroller",
    "html": "Deprecated\n\nApps should use UIActivityViewController for actions.\n\nParameters\ncontroller\n\nThe document interaction controller managing an associated document.\n\naction\n\nThe selector representing the action to perform. You can invoke this selector directly on the object responsible for performing the action or use it to call the appropriate method.\n\nReturn Value\n\ntrue if the action was performed successfully or false if it was not.\n\nDiscussion\n\nThe supported action selectors for this method are copy: and print:. (The print: selector is available in iOS 4.2 and later. Printing is supported only on devices that support multitasking.)\n\nTo implement a copy: action, write the contents of the document—directly, or modified according to the intent of your app—to the pasteboard.\n\nTo implement a print: action, use the shared print interaction controller object. Assign the url property of the document interaction controller to the print interaction controller’s printingItem property. Then present the printing user interface. For details, refer to UIPrintInteractionController and to Printing in Drawing and Printing Guide for iOS.\n\nInstead of implementing printing code in this method, you can rely on the built-in printing support of the Quick Look framework. For document types that can be previewed, the options menu of a document interaction controller always contains a Quick Look item. If the user chooses that item, the resulting Quick Look view includes an action button in the navigation bar that, when tapped, offers a Print button. In this case, the system automatically handles printing. For details, refer to QLPreviewController and to Using the Quick Look Framework in Document Interaction Programming Topics for iOS."
  },
  {
    "title": "UIPageViewController.SpineLocation.min | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/spinelocation/min",
    "html": "Discussion\n\nOne view controller is displayed at a time."
  },
  {
    "title": "UIPageViewController.SpineLocation.mid | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/spinelocation/mid",
    "html": "Discussion\n\nTwo view controllers are displayed at a time."
  },
  {
    "title": "tabBar(_:didBeginCustomizing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbardelegate/1623471-tabbar",
    "html": "Parameters\ntabBar\n\nThe tab bar that is being customized.\n\nitems\n\nThe items on the customizing modal view.\n\nSee Also\nCustomizing tab bars\nfunc tabBar(UITabBar, willBeginCustomizing: [UITabBarItem])\nSent to the delegate before the customizing modal view is displayed.\nfunc tabBar(UITabBar, willEndCustomizing: [UITabBarItem], changed: Bool)\nSent to the delegate before the customizing modal view is dismissed.\nfunc tabBar(UITabBar, didEndCustomizing: [UITabBarItem], changed: Bool)\nSent to the delegate after the customizing modal view is dismissed.\nfunc tabBar(UITabBar, didSelect: UITabBarItem)\nSent to the delegate when the user selects a tab bar item."
  },
  {
    "title": "documentInteractionController(_:willBeginSendingToApplication:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616825-documentinteractioncontroller",
    "html": "Parameters\ncontroller\n\nThe document interaction controller whose document is about to be opened.\n\napplication\n\nThe bundle identifier of the application that is about to open the document. This value corresponds to the value in the CFBundleIdentifier key of the application’s Info.plist file.\n\nDiscussion\n\nThis method is called when the user chooses to open a document, which could occur from within a document preview. When a document is passed to another application, the contents of the document interaction controller’s annotation property are passed with it. You can use this method to configure the contents of that property or prepare your own application for handing off the document.\n\nSee Also\nOpening files\nfunc documentInteractionController(UIDocumentInteractionController, didEndSendingToApplication: String?)\nCalled when a document interaction controller’s document has been handed off to the specified application."
  },
  {
    "title": "UIPageViewController.SpineLocation.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/spinelocation/none",
    "html": "Discussion\n\nThis spine location is not valid if the transition style is UIPageViewController.TransitionStyle.pageCurl."
  },
  {
    "title": "imagePickerController:didFinishPickingImage:editingInfo: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontrollerdelegate/1619152-imagepickercontroller",
    "html": "Deprecated\n\nUse imagePickerController:didFinishPickingMediaWithInfo: instead.\n\nParameters\npicker\n\nThe controller object managing the image picker interface.\n\nimage\n\nThe image that the user picked. If user editing is enabled, this may be a cropped and adjusted version of the original image. In this case, the original image, and the editing information, are available in the editingInfo parameter.\n\neditingInfo\n\nA dictionary containing any relevant editing information. If editing is disabled, this parameter is nil. The keys for this dictionary are listed in Editing Information Keys.\n\nDiscussion\n\nYour delegate’s implementation of this method should pass the specified image on to any custom code that needs it and then dismiss the picker view.\n\nWhen user editing is enabled, the picker view presents the user with a preview of the currently selected image along with controls for modifying it. (This behavior is managed by the picker view prior to calling this method.) If the user modifies the image, the editing information is available in the editingInfo parameter. If you don’t need the editing information, simply use the image in the image parameter as is.\n\nSpecial Considerations\n\nThis deprecated method supports picking only still pictures. The replacement method, imagePickerController:didFinishPickingMediaWithInfo:, supports picking movies as well as still pictures.\n\nSee Also\nClosing the picker\n- imagePickerController:didFinishPickingMediaWithInfo:\nTells the delegate that the user picked a still image or movie.\n- imagePickerControllerDidCancel:\nTells the delegate that the user canceled the pick operation."
  },
  {
    "title": "dismissModalViewControllerAnimated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiviewcontroller/1621369-dismissmodalviewcontrolleranimat",
    "html": "Deprecated\n\nUse dismissViewControllerAnimated:completion: instead.\n\nParameters\nanimated\n\nIf YES, this method animates the view as it's dismissed; otherwise, it does not. The style of animation is determined by the value in the modalTransitionStyle property of the view controller being dismissed.\n\nDiscussion\n\nThe presenting view controller is responsible for dismissing the view controller it presented. If you call this method on the presented view controller itself, however, it automatically forwards the message to the presenting view controller.\n\nIf you present several view controllers in succession, and thus build a stack of presented view controllers, calling this method on a view controller lower in the stack dismisses its immediate child view controller and all view controllers above that child on the stack. When this happens, only the top-most view is dismissed in an animated fashion; any intermediate view controllers are simply removed from the stack. The top-most view is dismissed using its modal transition style, which may differ from the styles used by other view controllers lower in the stack.\n\nIf you want to retain a reference to the receiver's presented view controller, get the value in the modalViewController property before calling this method.\n\nSee Also\nDeprecated methods\n- setOverrideTraitCollection:forChildViewController:\nChanges the traits assigned to the specified child view controller.\nDeprecated\n- overrideTraitCollectionForChildViewController:\nRetrieves the trait collection for a child view controller.\nDeprecated\n+ attemptRotationToDeviceOrientation\nAttempts to rotate all windows to the orientation of the device.\nDeprecated\n- registerForPreviewingWithDelegate:sourceView:\nRegisters a view controller to participate with 3D Touch preview (peek) and commit (pop).\nDeprecated\n- unregisterForPreviewingWithContext:\nUnregisters a previously registered view controller identified by its context object.\nDeprecated\n- automaticallyForwardAppearanceAndRotationMethodsToChildViewControllers\nReturns a Boolean value that indicates whether appearance and rotation methods are forwarded.\nDeprecated\n- canPerformUnwindSegueAction:fromViewController:withSender:\nCalled on a view controller to determine whether it wants to respond to an unwind action.\nDeprecated\n- didAnimateFirstHalfOfRotationToInterfaceOrientation:\nSent to the view controller after the completion of the first half of the user interface rotation.\nDeprecated\n- didRotateFromInterfaceOrientation:\nSent to the view controller after the user interface rotates.\nDeprecated\n- dismissMoviePlayerViewControllerAnimated\nDismisses a movie player view controller using the standard movie player transition.\nDeprecated\n- viewControllerForUnwindSegueAction:fromViewController:withSender:\nCalled when an unwind segue action wants to search a container's children for a view controller to handle the unwind action.\nDeprecated\n- presentModalViewController:animated:\nPresents a modal view managed by the given view controller to the user.\nDeprecated\n- presentMoviePlayerViewControllerAnimated:\nPresents the movie player view controller using the standard movie player transition.\nDeprecated\n- rotatingFooterView\nReturns the footer view to transition during an interface orientation change.\nDeprecated\n- rotatingHeaderView\nReturns the header view to transition during an interface orientation change.\nDeprecated\n- segueForUnwindingToViewController:fromViewController:identifier:\nCalled when an unwind segue action needs to transition between two view controllers.\nDeprecated\n- shouldAutomaticallyForwardRotationMethods\nReturns a Boolean value indicating whether rotation methods are forwarded to child view controllers.\nDeprecated\n- shouldAutorotateToInterfaceOrientation:\nReturns a Boolean value indicating whether the view controller supports the specified orientation.\nDeprecated\n- viewDidUnload\nCalled when the controller's view is released from memory.\nDeprecated\n- viewWillUnload\nCalled just before releasing the controller's view from memory.\nDeprecated\n- willAnimateFirstHalfOfRotationToInterfaceOrientation:duration:\nSent to the view controller before performing the first half of a user interface rotation.\nDeprecated\n- willAnimateRotationToInterfaceOrientation:duration:\nSent to the view controller before performing a one-step user interface rotation.\nDeprecated\n- willAnimateSecondHalfOfRotationFromInterfaceOrientation:duration:\nSent to the view controller before the second half of the user interface rotates.\nDeprecated\n- willRotateToInterfaceOrientation:duration:\nSent to the view controller just before the user interface begins rotating.\nDeprecated"
  },
  {
    "title": "detectValues(for:inItemSet:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/3621873-detectvalues",
    "html": "Deprecated\n\nUse detectValues(for:inItemSet:completionHandler:) instead.\n\nParameters\npatterns\n\nThe patterns to detect on the pasteboard.\n\nitemSet\n\nAn index set with each integer value identifying a pasteboard item positionally in the pasteboard. Pass in nil to request all pasteboard items.\n\ncompletionHandler\n\nA closure that the system invokes after detecting patterns on the pasteboard. The closure receives a Result instance that contains either an array of dictionaries with the patterns and the associated values found on the pasteboard or an error if detection failed. If Result contains an array, the index of each element in the array corresponds to the pasteboard item index specified in itemSet.\n\nDiscussion\n\nImportant\n\nCalling this method notifies the user that the app has read the contents of the pasteboard.\n\nFor details about the types returned for each pattern, see UIPasteboard.DetectionPattern.\n\nSee Also\nDeprecated\nvar isPersistent: Bool\nA Boolean value that indicates whether the pasteboard is persistent.\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<Set<UIPasteboard.DetectionPattern>, Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, without notifying the user.\nDeprecated\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[Set<UIPasteboard.DetectionPattern>], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, without notifying the user.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<[UIPasteboard.DetectionPattern : Any], Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, reading the contents if it finds a match.\nDeprecated"
  },
  {
    "title": "editingDisabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocument/state/1619946-editingdisabled",
    "html": "Discussion\n\nThis state is set just before UIDocument calls the disableEditing() method. It calls enableEditing() when it becomes safe to edit again. UIDocument also sets this state when an error prevents the reverting of a document."
  },
  {
    "title": "detectPatterns(for:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/3621870-detectpatterns",
    "html": "Deprecated\n\nUse detectPatterns(for:completionHandler:) instead.\n\nParameters\npatterns\n\nThe patterns to detect on the pasteboard.\n\ncompletionHandler\n\nA closure that the system invokes after detecting patterns on the pasteboard. The closure receives a Result instance that contains either a set with the patterns found on the pasteboard or an error if detection failed.\n\nDiscussion\n\nBecause this method only gives an indication of whether a pasteboard item matches a particular pattern and doesn’t allow the app to access the contents, the system doesn’t notify the user about reading the contents of the pasteboard.\n\nSee Also\nDeprecated\nvar isPersistent: Bool\nA Boolean value that indicates whether the pasteboard is persistent.\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[Set<UIPasteboard.DetectionPattern>], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, without notifying the user.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<[UIPasteboard.DetectionPattern : Any], Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, reading the contents if it finds a match.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[[UIPasteboard.DetectionPattern : Any]], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, reading the contents if it finds a match.\nDeprecated"
  },
  {
    "title": "phAsset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/2890963-phasset",
    "html": "Deprecated\n\nUse PHPickerViewController instead.\n\nDiscussion\n\nThe value of this key is a PHAsset object."
  },
  {
    "title": "documentInteractionController(_:canPerformAction:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentinteractioncontrollerdelegate/1616800-documentinteractioncontroller",
    "html": "Deprecated\n\nApps should use UIActivityViewController for actions.\n\nParameters\ncontroller\n\nThe document interaction controller managing an associated document.\n\naction\n\nThe selector representing the action in question.\n\nReturn Value\n\ntrue if the specified action is supported for the associated document or false if it is not. If you do not implement this method, the return value is assumed to be false.\n\nDiscussion\n\nWhen building the options menu (invoked, for example, by the user performing a long press gesture), a document interaction controller calls this method to find out if your app can perform various actions. If you implement this method for a given action, you must also implement the documentInteractionController(_:performAction:) method for that action.\n\nThe supported action selectors for this method are copy: and print:. (The print: selector is available in iOS 4.2 and later. Printing is supported only on devices that support multitasking.)\n\nFor each action that you implement in the documentInteractionController(_:performAction:) delegate method, return true from this method if that action is available for the document."
  },
  {
    "title": "itemWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbar/1623465-itemwidth",
    "html": "Discussion\n\nWhen the tab bar positions items using the UITabBar.ItemPositioning.centered option, it checks the value of this property to see if a custom width value has been supplied. The default value of this property is 0, which causes the tab bar to use a system-defined default width for each item. Specifying a value greater than 0 causes the tab bar to use your custom value instead. If you try to set this property to a negative value, the tab bar sets the value to 0 instead.\n\nSee Also\nCustomizing item spacing\nvar itemPositioning: UITabBar.ItemPositioning\nThe positioning scheme for the tab bar items in the tab bar.\nenum UITabBar.ItemPositioning\nConstants that specify tab bar item positioning.\nvar itemSpacing: CGFloat\nThe amount of space (in points) to use between tab bar items."
  },
  {
    "title": "calendarEvents | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869636-calendarevents",
    "html": "See Also\nDetected values\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "probableWebURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869646-probableweburl",
    "html": "See Also\nDetected patterns\nvar patterns: Set<PartialKeyPath<UIPasteboard.DetectedValues>>\nA set of key paths that represent patterns that the data detection system identifies.\nvar probableWebSearch: String\nA string that the data detection system identifies as a probable web search item."
  },
  {
    "title": "flightNumbers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869638-flightnumbers",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "links | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869639-links",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "emailAddresses | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869637-emailaddresses",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "moneyAmounts | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869640-moneyamounts",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "supportsMultipleItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874074-supportsmultipleitems",
    "html": "Discussion\n\nThis property defaults to true.\n\nSee Also\nCreating and configuring actions\ninit(identifier: String, localizedTitle: String, availability: UIDocumentBrowserAction.Availability, handler: ([URL]) -> Void)\nInstantiates and returns a new browser action item.\nvar image: UIImage?\nThe action's image displayed in the navigation bar.\nvar supportedContentTypes: [String]\nAn array of uniform type identifiers that define the types of documents that the action supports."
  },
  {
    "title": "number | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869641-number",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar phoneNumbers: [DDMatchPhoneNumber]\nAn array of phone numbers that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "phoneNumbers | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectedvalues/3869643-phonenumbers",
    "html": "See Also\nDetected values\nvar calendarEvents: [DDMatchCalendarEvent]\nAn array of calendar events that the data detection system identifies.\nvar emailAddresses: [DDMatchEmailAddress]\nAn array of email addresses that the data detection system identifies.\nvar flightNumbers: [DDMatchFlightNumber]\nAn array of flight numbers that the system data detection system identifies.\nvar links: [DDMatchLink]\nAn array of web links that the data detection system identifies.\nvar moneyAmounts: [DDMatchMoneyAmount]\nAn array of money amounts and currencies that the data detection system identifies.\nvar number: Double?\nA number that the data detection system identifies.\nvar postalAddresses: [DDMatchPostalAddress]\nAn array of postal addresses that the data detection system identifies.\nvar shipmentTrackingNumbers: [DDMatchShipmentTrackingNumber]\nAn array of parcel tracking numbers that the data detection system identifies."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874069-identifier",
    "html": "See Also\nAccessing activity data\nvar localizedTitle: String\nThe title that appears in the menu or navigation bar.\nvar availability: UIDocumentBrowserAction.Availability\nA value that defines where the action can appear (in the Edit Menu, the navigation bar, or both).\nstruct UIDocumentBrowserAction.Availability\nValues that determine where the action can appear in the document browser."
  },
  {
    "title": "number | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectionpattern/3650233-number",
    "html": "Discussion\n\nWhen you include this pattern in calls to detectValues(for:inItemSet:completionHandler:) or detectValues(for:completionHandler:), and the pasteboard detects a number, it reports the value as an NSNumber.\n\nSee Also\nDetecting common patterns\nstatic let probableWebSearch: UIPasteboard.DetectionPattern\nA pattern that indicates the pasteboard contains a string suitable for use as a web search term.\nstatic let probableWebURL: UIPasteboard.DetectionPattern\nA pattern that indicates the pasteboard contains a string that consists of a URL."
  },
  {
    "title": "probableWebURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectionpattern/3618951-probableweburl",
    "html": "Discussion\n\nWhen you include this pattern in calls to detectValues(for:inItemSet:completionHandler:) or detectValues(for:completionHandler:), and the pasteboard detects a string that consists of a URL, it reports the value as an NSString.\n\nSee Also\nDetecting common patterns\nstatic let number: UIPasteboard.DetectionPattern\nA pattern that indicates the pasteboard contains a string that consists of a numeric value.\nstatic let probableWebSearch: UIPasteboard.DetectionPattern\nA pattern that indicates the pasteboard contains a string suitable for use as a web search term."
  },
  {
    "title": "probableWebSearch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectionpattern/3618950-probablewebsearch",
    "html": "Discussion\n\nWhen you include this pattern in calls to detectValues(for:inItemSet:completionHandler:) or detectValues(for:completionHandler:), and the pasteboard detects a string suitable for use as a web search term, it reports the value as an NSString.\n\nSee Also\nDetecting common patterns\nstatic let number: UIPasteboard.DetectionPattern\nA pattern that indicates the pasteboard contains a string that consists of a numeric value.\nstatic let probableWebURL: UIPasteboard.DetectionPattern\nA pattern that indicates the pasteboard contains a string that consists of a URL."
  },
  {
    "title": "UITabBarItem.SystemItem.mostViewed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritem/systemitem/mostviewed",
    "html": "See Also\nSystem items\ncase bookmarks\nThe bookmarks system item.\ncase contacts\nThe contacts system item.\ncase downloads\nThe downloads system item.\ncase favorites\nThe favorites system item.\ncase featured\nThe featured system item.\ncase history\nThe history system item.\ncase more\nThe more system item.\ncase mostRecent\nThe most recent system item.\ncase recents\nThe recents system item.\ncase search\nThe search system item.\ncase topRated\nThe top rated system item."
  },
  {
    "title": "pageViewController(_:didFinishAnimating:previousViewControllers:transitionCompleted:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontrollerdelegate/1614090-pageviewcontroller",
    "html": "Parameters\npageViewController\n\nThe page view controller.\n\nfinished\n\ntrue if the animation finished; otherwise, false.\n\npreviousViewControllers\n\nThe view controllers prior to the transition.\n\ncompleted\n\ntrue if the user completed the page-turn gesture; otherwise, false.\n\nDiscussion\n\nUse the completed parameter to distinguish between a transition that completed (the page was turned) and a transition that the user aborted (the page was not turned).\n\nThe value of the previousViewControllers parameter is the same as what the viewControllers method would have returned prior to the page turn.\n\nSee Also\nResponding to Page View Controller Events\nfunc pageViewController(UIPageViewController, willTransitionTo: [UIViewController])\nCalled before a gesture-driven transition begins.\nfunc pageViewController(UIPageViewController, spineLocationFor: UIInterfaceOrientation) -> UIPageViewController.SpineLocation\nReturns the spine location for the given orientation."
  },
  {
    "title": "UIDeviceOrientation.landscapeLeft | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/landscapeleft",
    "html": "See Also\nDevice orientations\ncase unknown\nThe orientation of the device can’t be determined.\ncase portrait\nThe device is in portrait mode, with the device held upright and the front-facing camera at the top.\ncase portraitUpsideDown\nThe device is in portrait mode but upside down, with the device held upright and the front-facing camera at the bottom.\ncase landscapeRight\nThe device is in landscape mode, with the device held upright and the front-facing camera on the right side.\ncase faceUp\nThe device is held parallel to the ground with the screen facing upwards.\ncase faceDown\nThe device is held parallel to the ground with the screen facing downwards."
  },
  {
    "title": "UIDeviceOrientation.faceUp | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/faceup",
    "html": "See Also\nDevice orientations\ncase unknown\nThe orientation of the device can’t be determined.\ncase portrait\nThe device is in portrait mode, with the device held upright and the front-facing camera at the top.\ncase portraitUpsideDown\nThe device is in portrait mode but upside down, with the device held upright and the front-facing camera at the bottom.\ncase landscapeLeft\nThe device is in landscape mode, with the device held upright and the front-facing camera on the left side.\ncase landscapeRight\nThe device is in landscape mode, with the device held upright and the front-facing camera on the right side.\ncase faceDown\nThe device is held parallel to the ground with the screen facing downwards."
  },
  {
    "title": "mediaMetadata | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619147-mediametadata",
    "html": "Discussion\n\nThis key is valid only when using an image picker whose source type is set to UIImagePickerController.SourceType.camera, and applies only to still images.\n\nThe value for this key is an NSDictionary object that contains the metadata of the photo that was just captured. To store the metadata along with the image in the Camera Roll, use the PHAssetChangeRequest class from the Photos framework."
  },
  {
    "title": "scrollToRow(at:at:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614997-scrolltorow",
    "html": "Parameters\nindexPath\n\nAn index path that identifies a row in the table view by its row index and its section index.\n\nNSNotFound is a valid row index for scrolling to a section with zero rows.\n\nscrollPosition\n\nA constant that identifies a relative position in the table view (top, middle, bottom) for row when scrolling concludes. See UITableView.ScrollPosition for descriptions of valid constants.\n\nanimated\n\ntrue if you want to animate the change in position; false if it should be immediate.\n\nDiscussion\n\nInvoking this method doesn’t cause the delegate to receive a scrollViewDidScroll(_:) message, as is normal for programmatically invoked user interface operations.\n\nSee Also\nScrolling the table view\nfunc scrollToNearestSelectedRow(at: UITableView.ScrollPosition, animated: Bool)\nScrolls the table view so that the selected row nearest to a specified position in the table view is at that position.\nenum UITableView.ScrollPosition\nThe position in the table view (top, middle, bottom) to scroll a specified row to."
  },
  {
    "title": "tabBar(_:didEndCustomizing:changed:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbardelegate/1623447-tabbar",
    "html": "Parameters\ntabBar\n\nThe tab bar that is being customized.\n\nitems\n\nThe items on the customizing modal view.\n\nchanged\n\ntrue if the visible set of items on the tab bar changed; otherwise, false.\n\nSee Also\nCustomizing tab bars\nfunc tabBar(UITabBar, willBeginCustomizing: [UITabBarItem])\nSent to the delegate before the customizing modal view is displayed.\nfunc tabBar(UITabBar, didBeginCustomizing: [UITabBarItem])\nSent to the delegate after the customizing modal view is displayed.\nfunc tabBar(UITabBar, willEndCustomizing: [UITabBarItem], changed: Bool)\nSent to the delegate before the customizing modal view is dismissed.\nfunc tabBar(UITabBar, didSelect: UITabBarItem)\nSent to the delegate when the user selects a tab bar item."
  },
  {
    "title": "UIDeviceOrientation.faceDown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/facedown",
    "html": "See Also\nDevice orientations\ncase unknown\nThe orientation of the device can’t be determined.\ncase portrait\nThe device is in portrait mode, with the device held upright and the front-facing camera at the top.\ncase portraitUpsideDown\nThe device is in portrait mode but upside down, with the device held upright and the front-facing camera at the bottom.\ncase landscapeLeft\nThe device is in landscape mode, with the device held upright and the front-facing camera on the left side.\ncase landscapeRight\nThe device is in landscape mode, with the device held upright and the front-facing camera on the right side.\ncase faceUp\nThe device is held parallel to the ground with the screen facing upwards."
  },
  {
    "title": "tabBar(_:willBeginCustomizing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbardelegate/1623451-tabbar",
    "html": "Parameters\ntabBar\n\nThe tab bar that is being customized.\n\nitems\n\nThe items on the customizing modal view.\n\nDiscussion\n\nUse the beginCustomizingItems(_:) method of UITabBar to display the customizing modal view and begin the customizing mode.\n\nSee Also\nCustomizing tab bars\nfunc tabBar(UITabBar, didBeginCustomizing: [UITabBarItem])\nSent to the delegate after the customizing modal view is displayed.\nfunc tabBar(UITabBar, willEndCustomizing: [UITabBarItem], changed: Bool)\nSent to the delegate before the customizing modal view is dismissed.\nfunc tabBar(UITabBar, didEndCustomizing: [UITabBarItem], changed: Bool)\nSent to the delegate after the customizing modal view is dismissed.\nfunc tabBar(UITabBar, didSelect: UITabBarItem)\nSent to the delegate when the user selects a tab bar item.\nRelated Documentation\nView Controller Catalog for iOS"
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/detectionpattern/3622466-init",
    "html": "Parameters\nrawValue\n\nA string for the pattern to detect."
  },
  {
    "title": "dropDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/2897372-dropdelegate",
    "html": "See Also\nManaging drop interactions\nprotocol UITableViewDropDelegate\nThe interface for handling drops in a table view.\nvar hasActiveDrop: Bool\nA Boolean value that indicates whether the table view is currently tracking a drop session."
  },
  {
    "title": "detectPatterns(for:inItemSet:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/3621871-detectpatterns",
    "html": "Deprecated\n\nUse detectPatterns(for:inItemSet:completionHandler:) instead.\n\nParameters\npatterns\n\nThe patterns to detect on the pasteboard.\n\nitemSet\n\nAn index set with each integer value identifying a pasteboard item positionally in the pasteboard. Pass nil to detect patterns in all pasteboard items.\n\ncompletionHandler\n\nA closure that the system invokes after detecting patterns on the pasteboard. The closure receives a Result instance that contains either an array with the patterns found on the pasteboard or an error if detection failed. If the Result instance contains an array, the index of each element in the array corresponds to the pasteboard item index specified in itemSet.\n\nDiscussion\n\nBecause this method only detects for the presence of patterns and does not read the contents of the pasteboard, the system doesn’t notify the user about reading the contents of the pasteboard.\n\nSee Also\nDeprecated\nvar isPersistent: Bool\nA Boolean value that indicates whether the pasteboard is persistent.\nfunc detectPatterns(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<Set<UIPasteboard.DetectionPattern>, Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, without notifying the user.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, completionHandler: (Result<[UIPasteboard.DetectionPattern : Any], Error>) -> ())\nDetermines whether the first pasteboard item matches the specified patterns, reading the contents if it finds a match.\nDeprecated\nfunc detectValues(for: Set<UIPasteboard.DetectionPattern>, inItemSet: IndexSet?, completionHandler: (Result<[[UIPasteboard.DetectionPattern : Any]], Error>) -> ())\nDetermines whether pasteboard items match the specified patterns, reading the contents if it finds a match.\nDeprecated"
  },
  {
    "title": "originalImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619164-originalimage",
    "html": "Discussion\n\nThe value for this key is a UIImage object."
  },
  {
    "title": "mediaType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619121-mediatype",
    "html": "Discussion\n\nThe value for this key is an NSString object containing a type code such as kUTTypeImage or kUTTypeMovie."
  },
  {
    "title": "hasUncommittedUpdates | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/2891097-hasuncommittedupdates",
    "html": "Discussion\n\nThe value of this property is true when the table view contains placeholder cells or is handling a drop and is in the middle of reordering its rows. When this property is true, avoid making any significant changes to the table view. Specifically, don’t call reloadData(), which forces the table to delete any uncommitted changes before retrieving fresh data from the data source object.\n\nSee Also\nReloading the table view\nfunc reconfigureRows(at: [IndexPath])\nUpdates the data for the rows at the index paths you specify, preserving the existing cells for the rows.\nfunc reloadData()\nReloads the rows and sections of the table view.\nfunc reloadRows(at: [IndexPath], with: UITableView.RowAnimation)\nReloads the specified rows using the provided animation effect.\nfunc reloadSections(IndexSet, with: UITableView.RowAnimation)\nReloads the specified sections using the provided animation effect.\nfunc reloadSectionIndexTitles()\nReloads the items in the index bar along the right side of the table view."
  },
  {
    "title": "selectedImageTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbar/1623470-selectedimagetintcolor",
    "html": "Deprecated\n\nUse the tintColor property instead.\n\nDiscussion\n\nThe default value is nil, which results in use of the tab bar’s tintColor property.\n\nSee Also\nConfiguring selection appearance\nvar unselectedItemTintColor: UIColor?\nThe tint color to apply to unselected tabs.\nvar selectionIndicatorImage: UIImage?\nThe image to use for the selection indicator."
  },
  {
    "title": "unselectedItemTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbar/1648949-unselecteditemtintcolor",
    "html": "See Also\nConfiguring selection appearance\nvar selectionIndicatorImage: UIImage?\nThe image to use for the selection indicator.\nvar selectedImageTintColor: UIColor?\nThe tint color applied to the selected tab bar item.\nDeprecated"
  },
  {
    "title": "UITabBar.ItemPositioning.automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbar/itempositioning/automatic",
    "html": "Discussion\n\nIn a horizontally compact environment, the tab bar spreads items across the entire space, adjusting inter-item spacing as needed.\n\nIn a horizontally regular environment, the tab bar uses the itemWidth and itemSpacing properties to set the width of items and the spacing between items, positioning those items in the center of the available space. This configuration has the potential to leave space along the left and right edges of the tab bar."
  },
  {
    "title": "itemSpacing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbar/1623446-itemspacing",
    "html": "Discussion\n\nWhen the tab bar positions items using the UITabBar.ItemPositioning.centered option, it checks the value of this property to see if a custom spacing value has been supplied. The default value of this property is 0, which causes the tab bar to use a system-defined default spacing value. Specifying a value greater than 0 causes the tab bar to use your custom value instead. If you try to set this property to a negative value, the tab bar sets the value to 0 instead.\n\nSee Also\nCustomizing item spacing\nvar itemPositioning: UITabBar.ItemPositioning\nThe positioning scheme for the tab bar items in the tab bar.\nenum UITabBar.ItemPositioning\nConstants that specify tab bar item positioning.\nvar itemWidth: CGFloat\nThe width (in points) of tab bar items."
  },
  {
    "title": "UIPageViewController.TransitionStyle.pageCurl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipageviewcontroller/transitionstyle/pagecurl",
    "html": "Discussion\n\nWhen the page curl transition style is specified, the page view controller displays a page-turning animation when transitioning between view controllers. If a data source is specified, the animation follows the user’s finger during a navigation gesture."
  },
  {
    "title": "localizedTitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874071-localizedtitle",
    "html": "See Also\nAccessing activity data\nvar identifier: String\nThe action's unique identifier.\nvar availability: UIDocumentBrowserAction.Availability\nA value that defines where the action can appear (in the Edit Menu, the navigation bar, or both).\nstruct UIDocumentBrowserAction.Availability\nValues that determine where the action can appear in the document browser."
  },
  {
    "title": "UIDocumentBrowserAction.Availability | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/availability",
    "html": "Topics\nConstants\nstatic var menu: UIDocumentBrowserAction.Availability\nAn action that appears in the Edit Menu when the user long presses a supported document.\nstatic var navigationBar: UIDocumentBrowserAction.Availability\nAn action that appears in the navigation bar when the user puts the document browser in Select mode.\nInitializers\ninit(rawValue: Int)\nReturns a newly instantiated availability instance.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nAccessing activity data\nvar identifier: String\nThe action's unique identifier.\nvar localizedTitle: String\nThe title that appears in the menu or navigation bar.\nvar availability: UIDocumentBrowserAction.Availability\nA value that defines where the action can appear (in the Edit Menu, the navigation bar, or both)."
  },
  {
    "title": "UITableView.SelfSizingInvalidation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/selfsizinginvalidation",
    "html": "Overview\n\nUse these constants with the selfSizingInvalidation property.\n\nTopics\nConstants\ncase disabled\nA mode that disables self-sizing invalidation.\ncase enabled\nA mode that enables manual self-sizing invalidation.\ncase enabledIncludingConstraints\nA mode that enables automatic self-sizing invalidation after Auto Layout changes.\nRelationships\nConforms To\nSendable\nSee Also\nResizing self-sizing cells\nvar selfSizingInvalidation: UITableView.SelfSizingInvalidation\nThe mode that the table view uses for invalidating the size of self-sizing cells."
  },
  {
    "title": "navigationItem(_:willBeginRenamingWith:selectedRange:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitemrenamedelegate/3967527-navigationitem",
    "html": "Required Default implementation provided.\n\nParameters\n_\n\nThe navigation item with the changing title.\n\nsuggestedTitle\n\nThe initial text to appear in the rename text field.\n\nselectedRange\n\nThe selected range of the initial text in the rename text field.\n\nReturn Value\n\nA string that contains the initial text that appears in the rename text field, and a range that determines which part of that text has selection.\n\nDiscussion\n\nUIKit calls this method when the rename process begins. Implement this method to customize the initial text and text selection that appears in the rename text field.\n\nDefault Implementations\nUINavigationItemRenameDelegate Implementations\nfunc navigationItem(UINavigationItem, willBeginRenamingWith: String, selectedRange: Range<String.Index>) -> (String, Range<String.Index>)\nSee Also\nHandling the rename process\nfunc navigationItem(UINavigationItem, didEndRenamingWith: String)\nTells the delegate when the rename process ends.\n\nRequired"
  },
  {
    "title": "UIDeviceOrientation.portraitUpsideDown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/portraitupsidedown",
    "html": "See Also\nDevice orientations\ncase unknown\nThe orientation of the device can’t be determined.\ncase portrait\nThe device is in portrait mode, with the device held upright and the front-facing camera at the top.\ncase landscapeLeft\nThe device is in landscape mode, with the device held upright and the front-facing camera on the left side.\ncase landscapeRight\nThe device is in landscape mode, with the device held upright and the front-facing camera on the right side.\ncase faceUp\nThe device is held parallel to the ground with the screen facing upwards.\ncase faceDown\nThe device is held parallel to the ground with the screen facing downwards."
  },
  {
    "title": "UIDeviceOrientation.landscapeRight | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/landscaperight",
    "html": "See Also\nDevice orientations\ncase unknown\nThe orientation of the device can’t be determined.\ncase portrait\nThe device is in portrait mode, with the device held upright and the front-facing camera at the top.\ncase portraitUpsideDown\nThe device is in portrait mode but upside down, with the device held upright and the front-facing camera at the bottom.\ncase landscapeLeft\nThe device is in landscape mode, with the device held upright and the front-facing camera on the left side.\ncase faceUp\nThe device is held parallel to the ground with the screen facing upwards.\ncase faceDown\nThe device is held parallel to the ground with the screen facing downwards."
  },
  {
    "title": "custom(identifier:resolver:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/detent/3976719-custom",
    "html": "Parameters\nidentifier\n\nAn identifier for the detent. Specify a unique identifier for each custom detent for a sheet. If you don’t specify an identifier, the system generates a random identifier.\n\nresolver\n\nA closure for resolving the detent value with an input of type UISheetPresentationControllerDetentResolutionContext. The value you return from this closure is a height within the safe area of the sheet. For example, return 200 for a detent with a height of 200 plus safeAreaInsets.bottom when the sheet is edge-attached, or 200 when the sheet is floating. Return nil to specify that the detent is inactive according to the provided context.\n\nIf the closure depends on any external inputs, call invalidateDetents() on the sheet when the external inputs change.\n\nDon’t set any properties on UISheetPresentationController during the execution of this closure.\n\nSee Also\nCreating a custom detent\nfunc resolvedValue(in: UISheetPresentationControllerDetentResolutionContext) -> CGFloat?\nResolves a detent to its value.\nprotocol UISheetPresentationControllerDetentResolutionContext\nA context for resolving custom detent values."
  },
  {
    "title": "resolvedValue(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/detent/3976720-resolvedvalue",
    "html": "Parameters\ncontext\n\nA context for resolving custom detent values. This context is available in the resolver closure of custom(identifier:resolver:).\n\nReturn Value\n\nA CGFloat that represents the value of the detent, or nil if the detent is inactive in the provided context.\n\nDiscussion\n\nYou can use this method to get the values of the system medium and large detents, or the value of a custom detent. Use this method inside custom(identifier:resolver:) to construct a custom detent according to the values of known detents.\n\nSee Also\nCreating a custom detent\nstatic func custom(identifier: UISheetPresentationController.Detent.Identifier?, resolver: (UISheetPresentationControllerDetentResolutionContext) -> CGFloat?) -> UISheetPresentationController.Detent\nCreates a custom detent for a sheet by computing its value according to the properties of the provided context.\nprotocol UISheetPresentationControllerDetentResolutionContext\nA context for resolving custom detent values."
  },
  {
    "title": "medium() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/detent/3801917-medium",
    "html": "See Also\nCreating a system detent\nclass func large() -> Self\nCreates a system detent for a sheet at full height."
  },
  {
    "title": "UISheetPresentationControllerDetentResolutionContext | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontrollerdetentresolutioncontext",
    "html": "Overview\n\nA context of this type is available in the resolver closure of custom(identifier:resolver:).\n\nTopics\nAccessing the properties of the context\nvar containerTraitCollection: UITraitCollection\nThe trait collection of the sheet’s container view.\n\nRequired\n\nvar maximumDetentValue: CGFloat\nThe maximum value of a detent.\n\nRequired\n\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nCreating a custom detent\nstatic func custom(identifier: UISheetPresentationController.Detent.Identifier?, resolver: (UISheetPresentationControllerDetentResolutionContext) -> CGFloat?) -> UISheetPresentationController.Detent\nCreates a custom detent for a sheet by computing its value according to the properties of the provided context.\nfunc resolvedValue(in: UISheetPresentationControllerDetentResolutionContext) -> CGFloat?\nResolves a detent to its value."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uisheetpresentationcontroller/detent/3975904-identifier",
    "html": "See Also\nIdentifying a detent\nstruct UISheetPresentationController.Detent.Identifier\nConstants that identify system detent sizes."
  },
  {
    "title": "reloadData() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614862-reloaddata",
    "html": "Discussion\n\nCall this method to reload all the data that’s used to construct the table, including cells, section headers and footers, index arrays, and so on. For efficiency, the table view redisplays only those rows that are visible. It adjusts offsets if the table shrinks as a result of the reload. The table view’s delegate or data source calls this method when it wants the table view to completely reload its data. It shouldn’t be called in the methods that insert or delete rows, especially within an animation block implemented with calls to beginUpdates() and endUpdates().\n\nImportant\n\nDon’t call this method when the hasUncommittedUpdates property is true. Doing so forces the table view to delete any uncommitted changes before reloading the data.\n\nSee Also\nReloading the table view\nvar hasUncommittedUpdates: Bool\nA Boolean value that indicates whether the table view’s appearance contains changes that aren’t present in its data source.\nfunc reconfigureRows(at: [IndexPath])\nUpdates the data for the rows at the index paths you specify, preserving the existing cells for the rows.\nfunc reloadRows(at: [IndexPath], with: UITableView.RowAnimation)\nReloads the specified rows using the provided animation effect.\nfunc reloadSections(IndexSet, with: UITableView.RowAnimation)\nReloads the specified sections using the provided animation effect.\nfunc reloadSectionIndexTitles()\nReloads the items in the index bar along the right side of the table view."
  },
  {
    "title": "UIDocumentBrowserViewController.BrowserUserInterfaceStyle.white | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/browseruserinterfacestyle/white",
    "html": "See Also\nUser interface styles\ncase dark\nA dark background.\ncase light\nA light background."
  },
  {
    "title": "tabBar(_:willEndCustomizing:changed:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbardelegate/1623464-tabbar",
    "html": "Parameters\ntabBar\n\nThe tab bar that is being customized.\n\nitems\n\nThe items on the customizing modal view.\n\nchanged\n\ntrue if the visible set of items on the tab bar changed; otherwise, false.\n\nSee Also\nCustomizing tab bars\nfunc tabBar(UITabBar, willBeginCustomizing: [UITabBarItem])\nSent to the delegate before the customizing modal view is displayed.\nfunc tabBar(UITabBar, didBeginCustomizing: [UITabBarItem])\nSent to the delegate after the customizing modal view is displayed.\nfunc tabBar(UITabBar, didEndCustomizing: [UITabBarItem], changed: Bool)\nSent to the delegate after the customizing modal view is dismissed.\nfunc tabBar(UITabBar, didSelect: UITabBarItem)\nSent to the delegate when the user selects a tab bar item."
  },
  {
    "title": "typeAutomatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uipasteboard/1829415-typeautomatic",
    "html": "Discussion\n\nUse this type in the setItems(_:options:) method to automatically insert appropriate UTIs for supported types. In iOS 10, supported types are NSString, NSAttributedString, NSURL, UIImage, and UIColor."
  },
  {
    "title": "cropRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619150-croprect",
    "html": "Discussion\n\nThe value for this key is an NSValue object containing a CGRect opaque type."
  },
  {
    "title": "reloadSectionIndexTitles() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614932-reloadsectionindextitles",
    "html": "Discussion\n\nThis method gives you a way to update the section index after inserting or deleting sections without having to reload the whole table.\n\nSee Also\nReloading the table view\nvar hasUncommittedUpdates: Bool\nA Boolean value that indicates whether the table view’s appearance contains changes that aren’t present in its data source.\nfunc reconfigureRows(at: [IndexPath])\nUpdates the data for the rows at the index paths you specify, preserving the existing cells for the rows.\nfunc reloadData()\nReloads the rows and sections of the table view.\nfunc reloadRows(at: [IndexPath], with: UITableView.RowAnimation)\nReloads the specified rows using the provided animation effect.\nfunc reloadSections(IndexSet, with: UITableView.RowAnimation)\nReloads the specified sections using the provided animation effect.\nRelated Documentation\nfunc sectionIndexTitles(for: UITableView) -> [String]?\nAsks the data source to return the titles for the sections of a table view."
  },
  {
    "title": "moveSection(_:toSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614940-movesection",
    "html": "Parameters\nsection\n\nThe index of the section to move.\n\nnewSection\n\nThe index in the table view that’s the destination of the move for the section. The existing section at that location slides up or down to an adjoining index position to make room for it.\n\nDiscussion\n\nYou can combine section-move operations with section-insertion and section-deletion operations within a beginUpdates()–endUpdates() block to have all changes occur together as a single animation.\n\nUnlike the section-insertion section row-deletion methods, this method doesn’t take an animation parameter. For sections that are moved, the moved section animates straight from the starting position to the ending position. Also unlike the other methods, this method allows only one section to be moved per call. If you want multiple section moved, call this method repeatedly within a beginUpdates()–endUpdates() block.\n\nSee Also\nInserting, deleting, and moving rows and sections\nfunc insertRows(at: [IndexPath], with: UITableView.RowAnimation)\nInserts rows in the table view at the locations that an array of index paths identifies, with an option to animate the insertion.\nfunc deleteRows(at: [IndexPath], with: UITableView.RowAnimation)\nDeletes the rows that an array of index paths identifies, with an option to animate the deletion.\nfunc insertSections(IndexSet, with: UITableView.RowAnimation)\nInserts one or more sections in the table view, with an option to animate the insertion.\nfunc deleteSections(IndexSet, with: UITableView.RowAnimation)\nDeletes one or more sections in the table view, with an option to animate the deletion.\nenum UITableView.RowAnimation\nThe type of animation to use when inserting or deleting rows.\nfunc moveRow(at: IndexPath, to: IndexPath)\nMoves the row at a specified location to a destination location."
  },
  {
    "title": "moveRow(at:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614987-moverow",
    "html": "Parameters\nindexPath\n\nAn index path identifying the row to move.\n\nnewIndexPath\n\nAn index path identifying the row that’s the destination of the row at indexPath. The existing row at that location slides up or down to an adjoining index position to make room for it.\n\nDiscussion\n\nYou can combine row-move operations with row-insertion and row-deletion operations within a beginUpdates()–endUpdates() block to have all changes occur together as a single animation.\n\nUnlike the row-insertion and row-deletion methods, this method doesn’t take an animation parameter. For rows that are moved, the moved row animates straight from the starting position to the ending position. Also unlike the other methods, this method allows only one row to be moved per call. If you want multiple rows moved, you can call this method repeatedly within a beginUpdates()–endUpdates() block.\n\nSee Also\nInserting, deleting, and moving rows and sections\nfunc insertRows(at: [IndexPath], with: UITableView.RowAnimation)\nInserts rows in the table view at the locations that an array of index paths identifies, with an option to animate the insertion.\nfunc deleteRows(at: [IndexPath], with: UITableView.RowAnimation)\nDeletes the rows that an array of index paths identifies, with an option to animate the deletion.\nfunc insertSections(IndexSet, with: UITableView.RowAnimation)\nInserts one or more sections in the table view, with an option to animate the insertion.\nfunc deleteSections(IndexSet, with: UITableView.RowAnimation)\nDeletes one or more sections in the table view, with an option to animate the deletion.\nenum UITableView.RowAnimation\nThe type of animation to use when inserting or deleting rows.\nfunc moveSection(Int, toSection: Int)\nMoves a section to a new location in the table view.\nRelated Documentation\nfunc reloadRows(at: [IndexPath], with: UITableView.RowAnimation)\nReloads the specified rows using the provided animation effect."
  },
  {
    "title": "insertRows(at:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614879-insertrows",
    "html": "Parameters\nindexPaths\n\nAn array of index path objects, each representing a row index and section index that together identify a row in the table view.\n\nanimation\n\nA constant that either specifies the kind of animation to perform when inserting the cell or requests no animation. See UITableView.RowAnimation for descriptions of the constants.\n\nDiscussion\n\nUITableView calls the relevant delegate and data source methods immediately afterward to get the cells and other content for visible cells.\n\nWhen this method is called in an animation block defined by the beginUpdates() and endUpdates() methods, UITableView defers any insertions of rows or sections until after it has handled the deletions of rows or sections. This order is followed regardless of how the insertion and deletion method calls are ordered. This is unlike inserting or removing an item in a mutable array, in which the operation can affect the array index used for the successive insertion or removal operation. For more on this subject, see Batch Insertion, Deletion, and Reloading of Rows and Sections in Table View Programming Guide for iOS.\n\nSee Also\nInserting, deleting, and moving rows and sections\nfunc deleteRows(at: [IndexPath], with: UITableView.RowAnimation)\nDeletes the rows that an array of index paths identifies, with an option to animate the deletion.\nfunc insertSections(IndexSet, with: UITableView.RowAnimation)\nInserts one or more sections in the table view, with an option to animate the insertion.\nfunc deleteSections(IndexSet, with: UITableView.RowAnimation)\nDeletes one or more sections in the table view, with an option to animate the deletion.\nenum UITableView.RowAnimation\nThe type of animation to use when inserting or deleting rows.\nfunc moveRow(at: IndexPath, to: IndexPath)\nMoves the row at a specified location to a destination location.\nfunc moveSection(Int, toSection: Int)\nMoves a section to a new location in the table view.\nRelated Documentation\nfunc reloadRows(at: [IndexPath], with: UITableView.RowAnimation)\nReloads the specified rows using the provided animation effect."
  },
  {
    "title": "mediaURL | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619149-mediaurl",
    "html": "Discussion\n\nThe value for this key is an NSURL object."
  },
  {
    "title": "editedImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiimagepickercontroller/infokey/1619134-editedimage",
    "html": "Discussion\n\nThe value for this key is a UIImage object."
  },
  {
    "title": "appearanceWhenContainedInInstancesOfClasses: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiappearance/1615013-appearancewhencontainedininstanc",
    "html": "Required\n\nParameters\ncontainerTypes\n\nAn array of appearance container classes, in ascending hierarchical order.\n\nReturn Value\n\nThe appearance proxy to use for the object.\n\nDiscussion\n\nSet the containerTypes array to an ascending hierarchical list of containing types. For example, if you want a navigation bar to take on a specific appearance when contained in a navigation controller inside a tab bar controller, set containerTypes to @[[UINavigationController class], [UITabBarController class]].\n\nDo not set containerTypes to an unrelated list of types or to a list that does not match the containment hierarchy of your user interface.\n\nSee Also\nWorking with the appearance proxy\n+ appearance\nReturns the appearance proxy for the receiver.\n\nRequired\n\n+ appearanceForTraitCollection:\nReturns the appearance proxy for the receiver that has the passed trait collection.\n\nRequired\n\n+ appearanceForTraitCollection:whenContainedInInstancesOfClasses:\nReturns the appearance proxy for the object when it’s contained in the hierarchy the specified classes describe and has the specified trait collection.\n\nRequired\n\n+ appearanceWhenContainedIn:\nReturns the appearance proxy for object when it’s contained in the hierarchy the specified classes describe.\n\nRequired\n\nDeprecated\n+ appearanceForTraitCollection:whenContainedIn:\nReturns the appearance proxy for the object when it’s contained in the hierarchy the specified classes describe and has the specified trait collection.\n\nRequired\n\nDeprecated"
  },
  {
    "title": "location | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/launchoptionskey/1623101-location",
    "html": "Discussion\n\nThe value of this key is an NSNumber object containing a Boolean value. You should use the presence of this key as a signal to create a CLLocationManager object and start location services again. Location data is delivered only to the location manager delegate and not using this key.\n\nSee Also\nAccessing launch options\nstatic let bluetoothCentrals: UIApplication.LaunchOptionsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nstatic let bluetoothPeripherals: UIApplication.LaunchOptionsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nstatic let cloudKitShareMetadata: UIApplication.LaunchOptionsKey\nA key indicating that the app received a CloudKit share invitation.\nstatic let eventAttribution: UIApplication.LaunchOptionsKey\nstatic let newsstandDownloads: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nstatic let remoteNotification: UIApplication.LaunchOptionsKey\nA key indicating that a remote notification is available for the app to process.\nstatic let shortcutItem: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nstatic let sourceApplication: UIApplication.LaunchOptionsKey\nA key indicating that another app requested the launch of your app.\nstatic let url: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched so that it could open the specified URL.\nstatic let userActivityDictionary: UIApplication.LaunchOptionsKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nstatic let userActivityType: UIApplication.LaunchOptionsKey\nA key indicating the type of user activity that the user wants to continue.\nstatic let annotation: UIApplication.LaunchOptionsKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nstatic let localNotification: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "eventAttribution | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/launchoptionskey/3727305-eventattribution",
    "html": "See Also\nAccessing launch options\nstatic let bluetoothCentrals: UIApplication.LaunchOptionsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nstatic let bluetoothPeripherals: UIApplication.LaunchOptionsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nstatic let cloudKitShareMetadata: UIApplication.LaunchOptionsKey\nA key indicating that the app received a CloudKit share invitation.\nstatic let location: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle an incoming location event.\nstatic let newsstandDownloads: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nstatic let remoteNotification: UIApplication.LaunchOptionsKey\nA key indicating that a remote notification is available for the app to process.\nstatic let shortcutItem: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nstatic let sourceApplication: UIApplication.LaunchOptionsKey\nA key indicating that another app requested the launch of your app.\nstatic let url: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched so that it could open the specified URL.\nstatic let userActivityDictionary: UIApplication.LaunchOptionsKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nstatic let userActivityType: UIApplication.LaunchOptionsKey\nA key indicating the type of user activity that the user wants to continue.\nstatic let annotation: UIApplication.LaunchOptionsKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nstatic let localNotification: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "cloudKitShareMetadata | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/launchoptionskey/1648676-cloudkitsharemetadata",
    "html": "Discussion\n\nThe value of this key is a CKShare.Metadata object. Schedule a CKAcceptSharesOperation task with the provided metadata object.\n\nSee Also\nAccessing launch options\nstatic let bluetoothCentrals: UIApplication.LaunchOptionsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nstatic let bluetoothPeripherals: UIApplication.LaunchOptionsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nstatic let eventAttribution: UIApplication.LaunchOptionsKey\nstatic let location: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle an incoming location event.\nstatic let newsstandDownloads: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nstatic let remoteNotification: UIApplication.LaunchOptionsKey\nA key indicating that a remote notification is available for the app to process.\nstatic let shortcutItem: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nstatic let sourceApplication: UIApplication.LaunchOptionsKey\nA key indicating that another app requested the launch of your app.\nstatic let url: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched so that it could open the specified URL.\nstatic let userActivityDictionary: UIApplication.LaunchOptionsKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nstatic let userActivityType: UIApplication.LaunchOptionsKey\nA key indicating the type of user activity that the user wants to continue.\nstatic let annotation: UIApplication.LaunchOptionsKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nstatic let localNotification: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "bluetoothCentrals | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/launchoptionskey/1622965-bluetoothcentrals",
    "html": "Discussion\n\nThe presence of this key indicates that the app previously had one or more CBCentralManager objects and was relaunched by the Bluetooth system to continue actions associated with those objects. The value of this key is an NSArray object containing one or more NSString objects.\n\nEach string in the array represents the restoration identifier for a central manager object. This is the same string you assigned to the CBCentralManagerOptionRestoreIdentifierKey key when you initialized the central manager object previously. The system provides the restoration identifiers only for central managers that had active or pending peripheral connections or were scanning for peripherals.\n\nSee Also\nAccessing launch options\nstatic let bluetoothPeripherals: UIApplication.LaunchOptionsKey\nA key indicating that the app should continue actions associated with its Bluetooth peripheral objects.\nstatic let cloudKitShareMetadata: UIApplication.LaunchOptionsKey\nA key indicating that the app received a CloudKit share invitation.\nstatic let eventAttribution: UIApplication.LaunchOptionsKey\nstatic let location: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle an incoming location event.\nstatic let newsstandDownloads: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nstatic let remoteNotification: UIApplication.LaunchOptionsKey\nA key indicating that a remote notification is available for the app to process.\nstatic let shortcutItem: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nstatic let sourceApplication: UIApplication.LaunchOptionsKey\nA key indicating that another app requested the launch of your app.\nstatic let url: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched so that it could open the specified URL.\nstatic let userActivityDictionary: UIApplication.LaunchOptionsKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nstatic let userActivityType: UIApplication.LaunchOptionsKey\nA key indicating the type of user activity that the user wants to continue.\nstatic let annotation: UIApplication.LaunchOptionsKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nstatic let localNotification: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "bluetoothPeripherals | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplication/launchoptionskey/1623116-bluetoothperipherals",
    "html": "Discussion\n\nThe presence of this key indicates that the app previously had one or more CBPeripheralManager objects and was relaunched by the Bluetooth system to continue actions associated with those objects. The value of this key is an NSArray object containing one or more NSString objects.\n\nEach string in the array represents the restoration identifier for a peripheral manager object. This is the same string you assigned to the CBPeripheralManagerOptionRestoreIdentifierKey key when you initialized the peripheral manager object previously. The system provides the restoration identifiers only for peripheral managers that had published or advertised services.\n\nSee Also\nAccessing launch options\nstatic let bluetoothCentrals: UIApplication.LaunchOptionsKey\nA key indicating that the app was relaunched to handle Bluetooth-related events.\nstatic let cloudKitShareMetadata: UIApplication.LaunchOptionsKey\nA key indicating that the app received a CloudKit share invitation.\nstatic let eventAttribution: UIApplication.LaunchOptionsKey\nstatic let location: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle an incoming location event.\nstatic let newsstandDownloads: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to process newly downloaded Newsstand assets.\nstatic let remoteNotification: UIApplication.LaunchOptionsKey\nA key indicating that a remote notification is available for the app to process.\nstatic let shortcutItem: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched in response to the user selecting a Home screen quick action.\nstatic let sourceApplication: UIApplication.LaunchOptionsKey\nA key indicating that another app requested the launch of your app.\nstatic let url: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched so that it could open the specified URL.\nstatic let userActivityDictionary: UIApplication.LaunchOptionsKey\nA key indicating a dictionary associated with an activity that the user wants to continue.\nstatic let userActivityType: UIApplication.LaunchOptionsKey\nA key indicating the type of user activity that the user wants to continue.\nstatic let annotation: UIApplication.LaunchOptionsKey\nA key indicating that the URL passed to your app contained custom annotation data from the source app.\nDeprecated\nstatic let localNotification: UIApplication.LaunchOptionsKey\nA key indicating that the app was launched to handle a local notification.\nDeprecated"
  },
  {
    "title": "appearanceForTraitCollection:whenContainedInInstancesOfClasses: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiappearance/1615008-appearancefortraitcollection",
    "html": "Required\n\nParameters\ntrait\n\nThe trait collection to use for matching.\n\ncontainerTypes\n\nAn array of appearance container classes, in ascending hierarchical order.\n\nReturn Value\n\nThe appearance proxy to use for the object.\n\nDiscussion\n\nSet the containerTypes array to an ascending hierarchical list of containing types for the trait collection. For example, if you want a navigation bar to take on a specific appearance when contained in a navigation controller inside a tab bar controller, set containerTypes to @[[UINavigationController class], [UITabBarController class]].\n\nDo not set containerTypes to an unrelated list of types or to a list that does not match the containment hierarchy of your user interface.\n\nSee Also\nWorking with the appearance proxy\n+ appearance\nReturns the appearance proxy for the receiver.\n\nRequired\n\n+ appearanceForTraitCollection:\nReturns the appearance proxy for the receiver that has the passed trait collection.\n\nRequired\n\n+ appearanceWhenContainedInInstancesOfClasses:\nReturns the appearance proxy for the object when it’s contained in the hierarchy the specified classes describe.\n\nRequired\n\n+ appearanceWhenContainedIn:\nReturns the appearance proxy for object when it’s contained in the hierarchy the specified classes describe.\n\nRequired\n\nDeprecated\n+ appearanceForTraitCollection:whenContainedIn:\nReturns the appearance proxy for the object when it’s contained in the hierarchy the specified classes describe and has the specified trait collection.\n\nRequired\n\nDeprecated"
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198060-init",
    "html": "Return Value\n\nA new appearance object containing appropriate default values for a stacked tab bar item.\n\nSee Also\nCreating a tab bar item appearance object\ninit(style: UITabBarItemAppearance.Style)\nCreates an appearance object with appropriate default values for a tab bar, displaying its items with the specified layout style.\ninit(coder: NSCoder)\nCreates an appearance object from data in an unarchiver."
  },
  {
    "title": "documentBrowser(_:applicationActivitiesForDocumentURLs:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874194-documentbrowser",
    "html": "Parameters\ncontroller\n\nThe current document browser.\n\ndocumentURLs\n\nThe URL of one or more documents to share.\n\nReturn Value\n\nAn array of custom UIActivity objects.\n\nDiscussion\n\nThe document browser displays an activity view when the user shares a document (for example, when the user long presses a document and then chooses Share from the Edit Menu).\n\nImplement this method to add custom activities to the activity view. Create and return an array containing your custom UIActivity subclasses. Your UIActivity subclasses should perform actions on the URLs passed to this method.\n\nNote\n\nDo not assume that the URL array contains only one URL. The user can place the document browser into Select mode and select multiple documents to share, even if the document browser's allowsPickingMultipleItems property is false.\n\nSee Also\nWorking with the browser's activity view\nfunc documentBrowser(UIDocumentBrowserViewController, willPresent: UIActivityViewController)\nTells the delegate that the document browser will display an activity view."
  },
  {
    "title": "documentBrowser(_:didPickDocumentsAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/3019588-documentbrowser",
    "html": "Parameters\ncontroller\n\nThe current document browser.\n\ndocumentURLs\n\nAn array of URLs for the selected documents.\n\nIf the document browser's allowsPickingMultipleItems property is true, the array contains one or more URLs. If false, it contains only a single URL.\n\nDiscussion\n\nImplement this method to process the documents selected by the user. Typically, you create a view controller to display the selected documents, then present that view modally (see Listing 1).\n\nListing 1 Opening selected documents\n// Did Select Documents\nfunc documentBrowser(_ controller: UIDocumentBrowserViewController,\n    didPickDocumentsAt documentURLs: [URL]) {\n    \n    assert(controller.allowsPickingMultipleItems == false)\n    \n    assert(documentURLs.count > 0,\n           \"*** We received an empty array of documents ***\")\n    \n    assert(documentURLs.count <= 1,\n           \"*** We received more than one document ***\")\n    \n    guard let url = documentURLs.first else {\n        fatalError(\"*** No URL Found! ***\")\n    }\n    \n    openDocument(controller, forFileURL: url)\n}\n\n\nprivate func openDocument(_ controller: UIDocumentBrowserViewController,\n                          forFileURL url: URL) {\n    \n    let doc = // Create a UIDocument subclass for the selected URL.\n\n\n    let editor = // Create a view controller to edit the document.\n\n\n    // Optionally, set up a transition controller here...\n        \n    doc.open { (success) in\n        guard success else {\n            // Handle the error here...\n        }\n        \n        // Present the document\n        controller.present(editor, animated: true, completion: nil)\n    }\n}\n"
  },
  {
    "title": "documentBrowser(_:willPresent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874186-documentbrowser",
    "html": "Parameters\ncontroller\n\nThe current document browser.\n\nactivityViewController\n\nThe activity view controller to be displayed.\n\nDiscussion\n\nThe document browser displays an activity view when the user shares a document (for example, when the user long presses a document and then chooses Share from the Edit Menu).\n\nImplement this method to customize the activity view before it is displayed. For example, you could exclude any system-provided activities that are inappropriate for your app (see the UIActivityViewController class's excludedActivityTypes property).\n\nSee Also\nWorking with the browser's activity view\nfunc documentBrowser(UIDocumentBrowserViewController, applicationActivitiesForDocumentURLs: [URL]) -> [UIActivity]\nAsks the delegate for additional activities when displaying an activity view."
  },
  {
    "title": "documentBrowser(_:failedToImportDocumentAt:error:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontrollerdelegate/2874190-documentbrowser",
    "html": "Parameters\ncontroller\n\nThe document browser that attempted the import action.\n\ndocumentURL\n\nThe document’s original URL.\n\nerror\n\nAn object describing the error, or nil.\n\nSee Also\nCreating new documents\nfunc documentBrowser(UIDocumentBrowserViewController, didRequestDocumentCreationWithHandler: (URL?, UIDocumentBrowserViewController.ImportMode) -> Void)\nAsks the delegate to create a new document.\nenum UIDocumentBrowserViewController.ImportMode\nThe document browser’s import modes.\nfunc documentBrowser(UIDocumentBrowserViewController, didImportDocumentAt: URL, toDestinationURL: URL)\nTells the delegate that a document has been successfully imported."
  },
  {
    "title": "UITabBarItemAppearance.Style | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/style",
    "html": "Overview\n\nA tab bar adjusts the layout of each item’s icon and title string based on the current trait environment and other factors.\n\nTopics\nItem layout\ncase stacked\nA vertically stacked icon and title.\ncase inline\nA side-by-side layout of the icon and title, suitable for use in regular-width environments.\ncase compactInline\nA side-by-side layout of the icon and title, suitable for use in compact-width environments.\nRelationships\nConforms To\nSendable\nSee Also\nResetting the appearance properties\nfunc configureWithDefault(for: UITabBarItemAppearance.Style)\nConfigures the tab bar item appearance object with appropriate values for the specified style."
  },
  {
    "title": "configureWithDefault(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198057-configurewithdefault",
    "html": "Parameters\nstyle\n\nThe layout style for the appearance attributes. UIKit configures the object with the default appearance attributes for the specified style. For a list of possible values, see UITabBarItemAppearance.Style.\n\nSee Also\nResetting the appearance properties\nenum UITabBarItemAppearance.Style\nConstants indicating the layout of a tab bar item’s content."
  },
  {
    "title": "navigationBar(_:shouldPush:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624941-navigationbar",
    "html": "Parameters\nnavigationBar\n\nThe navigation bar that the item is being pushed onto.\n\nitem\n\nThe navigation item that is being pushed.\n\nReturn Value\n\ntrue if the item should be pushed; otherwise, false.\n\nDiscussion\n\nSent to the delegate before pushing an item onto the navigation bar.\n\nSee Also\nPushing items\nfunc navigationBar(UINavigationBar, didPush: UINavigationItem)\nTells the delegate that an item was pushed onto the navigation bar.\nRelated Documentation\nView Controller Catalog for iOS"
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198061-init",
    "html": "See Also\nCreating a tab bar item appearance object\ninit(style: UITabBarItemAppearance.Style)\nCreates an appearance object with appropriate default values for a tab bar, displaying its items with the specified layout style.\ninit()\nCreates an appearance object with default values for a stacked tab bar item."
  },
  {
    "title": "disabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198058-disabled",
    "html": "Discussion\n\nTo set the attributes for this state, get the object in this property and modify it.\n\nSee Also\nConfiguring attributes for different item states\nvar normal: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s enabled, unselected, and not the focused item.\nvar selected: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s selected.\nvar focused: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s focused."
  },
  {
    "title": "selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198065-selected",
    "html": "Discussion\n\nTo set the attributes for this state, get the object in this property and modify it.\n\nSee Also\nConfiguring attributes for different item states\nvar normal: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s enabled, unselected, and not the focused item.\nvar disabled: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s disabled.\nvar focused: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s focused."
  },
  {
    "title": "focused | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitabbaritemappearance/3198059-focused",
    "html": "Discussion\n\nTo set the attributes for this state, get the object in this property and modify it.\n\nSee Also\nConfiguring attributes for different item states\nvar normal: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s enabled, unselected, and not the focused item.\nvar selected: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s selected.\nvar disabled: UITabBarItemStateAppearance\nThe appearance data to apply to the tab bar item when it’s disabled."
  },
  {
    "title": "selfSizingInvalidation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/4001105-selfsizinginvalidation",
    "html": "Discussion\n\nRelated Sessions from WWDC22\n\nSession 10068: What’s new in UIKit\n\nSee Also\nResizing self-sizing cells\nenum UITableView.SelfSizingInvalidation\nConstants that describe modes for invalidating the size of self-sizing table view cells."
  },
  {
    "title": "navigationBar(_:didPush:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624964-navigationbar",
    "html": "Parameters\nnavigationBar\n\nThe navigation bar that the item is being pushed onto.\n\nitem\n\nThe navigation item that is being pushed.\n\nDiscussion\n\nIf pushing an item onto the navigation bar is animated, this method is invoked after the animation ends; otherwise, it is invoked immediately after the push.\n\nSee Also\nPushing items\nfunc navigationBar(UINavigationBar, shouldPush: UINavigationItem) -> Bool\nReturns a Boolean value indicating whether the navigation bar should push an item."
  },
  {
    "title": "navigationBarNSToolbarSection(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationbardelegate/3987959-navigationbarnstoolbarsection",
    "html": "Parameters\nnavigationBar\n\nThe navigation bar to host in an NSToolbar.\n\nReturn Value\n\nAn NSToolbar section that determines which section to place the navigation bar in, and how to present the navigation bar in that section. Return UINavigationBar.NSToolbarSection.none to disable NSToolbar hosting, which is equivalent to setting preferredBehavioralStyle to UIBehavioralStyle.pad.\n\nDiscussion\n\nThe system calls this method to determine how to render your UINavigationBar when you build your app with Mac Catalyst."
  },
  {
    "title": "navigationBar(_:didPop:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationbardelegate/1624948-navigationbar",
    "html": "Parameters\nnavigationBar\n\nThe navigation bar that the item is being popped from.\n\nitem\n\nThe navigation item that is being popped.\n\nDiscussion\n\nIf animating the pop operation, this method is invoked after the animation ends; otherwise, it is invoked immediately after the pop.\n\nSee Also\nPopping items\nfunc navigationBar(UINavigationBar, shouldPop: UINavigationItem) -> Bool\nReturns a Boolean value indicating whether the navigation bar should pop an item."
  },
  {
    "title": "init(identifier:localizedTitle:availability:handler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874075-init",
    "html": "Parameters\nidentifier\n\nA unique identifier for the activity.\n\nlocalizedTitle\n\nThe title that appears in the Edit Menu or navigation bar. This title should be a String returned by NSLocalizedString.\n\navailability\n\nA value that defines where the action can appear (in the menu, navigation bar, or both).\n\nFor a list of valid values, see UIDocumentBrowserAction.Availability.\n\nhandler\n\nA block that is called when the user triggers the action. The block takes the following parameter:\n\nurls\n\nAn array of URLs for the documents that the user has selected. If the action's supportsMultipleItems property is false, this array contains one URL. Otherwise, it can contain one or more URLs.\n\nSee Also\nCreating and configuring actions\nvar image: UIImage?\nThe action's image displayed in the navigation bar.\nvar supportedContentTypes: [String]\nAn array of uniform type identifiers that define the types of documents that the action supports.\nvar supportsMultipleItems: Bool\nA Boolean value that determines whether the action can be triggered on more than one document at a time."
  },
  {
    "title": "availability | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowseraction/2874078-availability",
    "html": "Discussion\n\nFor a list of possible values, see UIDocumentBrowserAction.Availability.\n\nSee Also\nAccessing activity data\nvar identifier: String\nThe action's unique identifier.\nvar localizedTitle: String\nThe title that appears in the menu or navigation bar.\nstruct UIDocumentBrowserAction.Availability\nValues that determine where the action can appear in the document browser."
  },
  {
    "title": "rect(forSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614951-rect",
    "html": "Parameters\nsection\n\nAn index number identifying a section of the table view. Plain-style table views always have a section index of zero.\n\nReturn Value\n\nA rectangle defining the area in which the table view draws the section.\n\nSee Also\nGetting the drawing areas for the table\nfunc rectForRow(at: IndexPath) -> CGRect\nReturns the drawing area for a row that an index path identifies.\nfunc rectForFooter(inSection: Int) -> CGRect\nReturns the drawing area for the footer of the specified section.\nfunc rectForHeader(inSection: Int) -> CGRect\nReturns the drawing area for the header of the specified section."
  },
  {
    "title": "UIDeviceOrientation.unknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uideviceorientation/unknown",
    "html": "See Also\nDevice orientations\ncase portrait\nThe device is in portrait mode, with the device held upright and the front-facing camera at the top.\ncase portraitUpsideDown\nThe device is in portrait mode but upside down, with the device held upright and the front-facing camera at the bottom.\ncase landscapeLeft\nThe device is in landscape mode, with the device held upright and the front-facing camera on the left side.\ncase landscapeRight\nThe device is in landscape mode, with the device held upright and the front-facing camera on the right side.\ncase faceUp\nThe device is held parallel to the ground with the screen facing upwards.\ncase faceDown\nThe device is held parallel to the ground with the screen facing downwards."
  },
  {
    "title": "sectionIndexTrackingBackgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614992-sectionindextrackingbackgroundco",
    "html": "Discussion\n\nTable views can display an index along the side of the view, making it easier for users to navigate the contents of the table quickly. This property specifies the color to display in the background of the index when the user drags a finger through it. A value of nil represents the default color.\n\nSee Also\nConfiguring the table index\nvar sectionIndexMinimumDisplayRowCount: Int\nThe number of table rows at which to display the index list on the right edge of the table.\nvar sectionIndexColor: UIColor?\nThe color to use for the table view’s index text.\nvar sectionIndexBackgroundColor: UIColor?\nThe color to use for the background of the table view’s section index.\nclass let indexSearch: String\nA constant for adding the magnifying glass icon to the section index of a table view."
  },
  {
    "title": "rectForHeader(inSection:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614872-rectforheader",
    "html": "Parameters\nsection\n\nAn index number identifying a section of the table view. Plain-style table views always have a section index of zero.\n\nReturn Value\n\nA rectangle defining the area in which the table view draws the section header.\n\nSee Also\nGetting the drawing areas for the table\nfunc rect(forSection: Int) -> CGRect\nReturns the drawing area for a specified section of the table view.\nfunc rectForRow(at: IndexPath) -> CGRect\nReturns the drawing area for a row that an index path identifies.\nfunc rectForFooter(inSection: Int) -> CGRect\nReturns the drawing area for the footer of the specified section."
  },
  {
    "title": "sectionIndexBackgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614918-sectionindexbackgroundcolor",
    "html": "Discussion\n\nTable views can display an index along the side of the view, making it easier for users to navigate the contents of the table quickly. This property specifies the color to use for the background of the index. The table view applies this color when the user isn’t touching the index. A value of nil represents the default color.\n\nSee Also\nConfiguring the table index\nvar sectionIndexMinimumDisplayRowCount: Int\nThe number of table rows at which to display the index list on the right edge of the table.\nvar sectionIndexColor: UIColor?\nThe color to use for the table view’s index text.\nvar sectionIndexTrackingBackgroundColor: UIColor?\nThe color to use for the table view’s index background area.\nclass let indexSearch: String\nA constant for adding the magnifying glass icon to the section index of a table view."
  },
  {
    "title": "sectionIndexColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uitableview/1614915-sectionindexcolor",
    "html": "Discussion\n\nTable views can display an index along the side of the view, making it easier for users to navigate the contents of the table quickly. This property specifies the color to use for text displayed in this region. A value of nil represents the default color.\n\nSee Also\nConfiguring the table index\nvar sectionIndexMinimumDisplayRowCount: Int\nThe number of table rows at which to display the index list on the right edge of the table.\nvar sectionIndexBackgroundColor: UIColor?\nThe color to use for the background of the table view’s section index.\nvar sectionIndexTrackingBackgroundColor: UIColor?\nThe color to use for the table view’s index background area.\nclass let indexSearch: String\nA constant for adding the magnifying glass icon to the section index of a table view."
  },
  {
    "title": "navigationItemShouldBeginRenaming(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitemrenamedelegate/3967528-navigationitemshouldbeginrenamin",
    "html": "Required Default implementation provided.\n\nParameters\n_\n\nThe navigation item asking whether to support renaming.\n\nReturn Value\n\ntrue to support renaming and show Rename in the title menu; otherwise, false.\n\nDiscussion\n\nUIKit calls this method when the navigation bar’s title menu becomes visible to validate whether to show Rename as part of that menu. Implement this method to determine whether to display the Rename menu element and support the rename process.\n\nDefault Implementations\nUINavigationItemRenameDelegate Implementations\nfunc navigationItemShouldBeginRenaming(UINavigationItem) -> Bool\nSee Also\nDetermining rename support\nfunc navigationItem(UINavigationItem, shouldEndRenamingWith: String) -> Bool\nAsks the delegate whether to continue or abandon the rename process.\n\nRequired Default implementation provided."
  },
  {
    "title": "navigationItem(_:shouldEndRenamingWith:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uinavigationitemrenamedelegate/3967526-navigationitem",
    "html": "Required Default implementation provided.\n\nParameters\n_\n\nThe navigation item attempting to continue the rename process.\n\ntitle\n\nThe new title of the navigation item.\n\nReturn Value\n\ntrue to continue the rename process; false to cancel the rename process.\n\nDiscussion\n\nImplement this method to return false to prevent renaming.\n\nImportant\n\nUIKit might not call this method in certain situations, like when the system pushes a new navigation item onto the navigation bar. In these situations, UIKit calls navigationItem(_:didEndRenamingWith:) instead. Therefore, make sure to implement navigationItem(_:didEndRenamingWith:) to handle the cases when navigationItem(_:shouldEndRenamingWith:) returns false.\n\nDefault Implementations\nUINavigationItemRenameDelegate Implementations\nfunc navigationItem(UINavigationItem, shouldEndRenamingWith: String) -> Bool\nSee Also\nDetermining rename support\nfunc navigationItemShouldBeginRenaming(UINavigationItem) -> Bool\nAsks the delegate whether the navigation item supports renaming.\n\nRequired Default implementation provided."
  },
  {
    "title": "touchDragEnter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uicontrol/event/1618209-touchdragenter",
    "html": "Discussion\n\nThis event is delivered only if the touch originated inside the control’s bounds, exited the bounds, and then entered the bounds again."
  },
  {
    "title": "progressAvailable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocument/state/1619983-progressavailable",
    "html": "Discussion\n\nWhen this state is set, you can use the progress property of the document to monitor the current operation."
  },
  {
    "title": "UIDocumentBrowserViewController.BrowserUserInterfaceStyle.light | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uidocumentbrowserviewcontroller/browseruserinterfacestyle/light",
    "html": "See Also\nUser interface styles\ncase dark\nA dark background.\ncase white\nA white background."
  },
  {
    "title": "application(_:didReceiveRemoteNotification:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/uikit/uiapplicationdelegate/1623117-application"
  }
]

[
  {
    "title": "Core Image Filter Reference",
    "url": "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Reference/CoreImageFilterReference/index.html/cifilterref_revhx.html#//apple_ref/doc/uid/TP40004346-CH2-SW1",
    "html": "[an error occurred while processing this directive]\n\nDocumentation Archive\n\nDeveloper\n\nCore Image Filter Reference\n\nFilters\nCICategoryBlur\nCICategoryColorAdjustment\nCICategoryColorEffect\nCICategoryCompositeOperation\nCICategoryDistortionEffect\nCICategoryGenerator\nCICategoryGeometryAdjustment\nCICategoryGradient\nCICategoryHalftoneEffect\nCICategoryReduction\nCICategorySharpen\nCICategoryStylize\nCICategoryTileEffect\nCICategoryTransition\nRelated Documentation\nCore Image Programming Guide\nRevision History\nDocument Revision History\nOptions\nDeployment Target: \n Hide deprecated symbols D\n Auto-expand all symbols A\nOn This Page\nCIBoxBlur\nCIDiscBlur\nCIGaussianBlur\nCIMaskedVariableBlur\nCIMedianFilter\nCIMotionBlur\nCINoiseReduction\nCIZoomBlur\nCIColorClamp\nCIColorControls\nCIColorMatrix\nCIColorPolynomial\nCIExposureAdjust\nCIGammaAdjust\nCIHueAdjust\nCILinearToSRGBToneCurve\nCISRGBToneCurveToLinear\nCITemperatureAndTint\nCIToneCurve\nCIVibrance\nCIWhitePointAdjust\nCIColorCrossPolynomial\nCIColorCube\nCIColorCubeWithColorSpace\nCIColorInvert\nCIColorMap\nCIColorMonochrome\nCIColorPosterize\nCIFalseColor\nCIMaskToAlpha\nCIMaximumComponent\nCIMinimumComponent\nCIPhotoEffectChrome\nCIPhotoEffectFade\nCIPhotoEffectInstant\nCIPhotoEffectMono\nCIPhotoEffectNoir\nCIPhotoEffectProcess\nCIPhotoEffectTonal\nCIPhotoEffectTransfer\nCISepiaTone\nCIVignette\nCIVignetteEffect\nCIAdditionCompositing\nCIColorBlendMode\nCIColorBurnBlendMode\nCIColorDodgeBlendMode\nCIDarkenBlendMode\nCIDifferenceBlendMode\nCIDivideBlendMode\nCIExclusionBlendMode\nCIHardLightBlendMode\nCIHueBlendMode\nCILightenBlendMode\nCILinearBurnBlendMode\nCILinearDodgeBlendMode\nCILuminosityBlendMode\nCIMaximumCompositing\nCIMinimumCompositing\nCIMultiplyBlendMode\nCIMultiplyCompositing\nCIOverlayBlendMode\nCIPinLightBlendMode\nCISaturationBlendMode\nCIScreenBlendMode\nCISoftLightBlendMode\nCISourceAtopCompositing\nCISourceInCompositing\nCISourceOutCompositing\nCISourceOverCompositing\nCISubtractBlendMode\nCIBumpDistortion\nCIBumpDistortionLinear\nCICircleSplashDistortion\nCICircularWrap\nCIDroste\nCIDisplacementDistortion\nCIGlassDistortion\nCIGlassLozenge\nCIHoleDistortion\nCILightTunnel\nCIPinchDistortion\nCIStretchCrop\nCITorusLensDistortion\nCITwirlDistortion\nCIVortexDistortion\nCIAztecCodeGenerator\nCICheckerboardGenerator\nCICode128BarcodeGenerator\nCIConstantColorGenerator\nCILenticularHaloGenerator\nCIPDF417BarcodeGenerator\nCIQRCodeGenerator\nCIRandomGenerator\nCIStarShineGenerator\nCIStripesGenerator\nCISunbeamsGenerator\nCIAffineTransform\nCICrop\nCILanczosScaleTransform\nCIPerspectiveCorrection\nCIPerspectiveTransform\nCIPerspectiveTransformWithExtent\nCIStraightenFilter\nCIGaussianGradient\nCILinearGradient\nCIRadialGradient\nCISmoothLinearGradient\nCICircularScreen\nCICMYKHalftone\nCIDotScreen\nCIHatchedScreen\nCILineScreen\nCIAreaAverage\nCIAreaHistogram\nCIRowAverage\nCIColumnAverage\nCIHistogramDisplayFilter\nCIAreaMaximum\nCIAreaMinimum\nCIAreaMaximumAlpha\nCIAreaMinimumAlpha\nCISharpenLuminance\nCIUnsharpMask\nCIBlendWithAlphaMask\nCIBlendWithMask\nCIBloom\nCIComicEffect\nCIConvolution3X3\nCIConvolution5X5\nCIConvolution7X7\nCIConvolution9Horizontal\nCIConvolution9Vertical\nCICrystallize\nCIDepthOfField\nCIEdges\nCIEdgeWork\nCIGloom\nCIHeightFieldFromMask\nCIHexagonalPixellate\nCIHighlightShadowAdjust\nCILineOverlay\nCIPixellate\nCIPointillize\nCIShadedMaterial\nCISpotColor\nCISpotLight\nCIAffineClamp\nCIAffineTile\nCIEightfoldReflectedTile\nCIFourfoldReflectedTile\nCIFourfoldRotatedTile\nCIFourfoldTranslatedTile\nCIGlideReflectedTile\nCIKaleidoscope\nCIOpTile\nCIParallelogramTile\nCIPerspectiveTile\nCISixfoldReflectedTile\nCISixfoldRotatedTile\nCITriangleKaleidoscope\nCITriangleTile\nCITwelvefoldReflectedTile\nCIAccordionFoldTransition\nCIBarsSwipeTransition\nCICopyMachineTransition\nCIDisintegrateWithMaskTransition\nCIDissolveTransition\nCIFlashTransition\nCIModTransition\nCIPageCurlTransition\nCIPageCurlWithShadowTransition\nCIRippleTransition\nCISwipeTransition\nCore Image Filter Reference\n\nInherits From\n\nNot Applicable\n\nConforms To\n\nNot Applicable\n\nImport Statement\n\nNot applicable\n\nAvailability\n\nNot Applicable\n\nThis reference describes the built-in filters available through the Core Image API. You can also find out about the built-in filters on a system by using the Core Image API. See Core Image Programming Guide.\n\nFilters\nCICategoryBlur\nCIBoxBlur\n\nBlurs an image using a box-shaped convolution kernel.\n\nLocalized Display Name\n\nCIBoxBlur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 1The result of using the CIBoxBlur filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIDiscBlur\n\nBlurs an image using a disc-shaped convolution kernel.\n\nLocalized Display Name\n\nCIDiscBlur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 8.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 2The result of using the CIDiscBlur filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIGaussianBlur\n\nSpreads source pixels by an amount specified by a Gaussian distribution.\n\nLocalized Display Name\n\nGaussian Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 3The result of using the CIGaussianBlur filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaskedVariableBlur\n\nBlurs the source image according to the brightness levels in a mask image.\n\nLocalized Display Name\n\nMasked Variable Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputMask\t\n\nA CIImage object whose display name is Mask.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 100.00 Identity: 0.00\n\nDiscussion\n\nShades of gray in the mask image vary the blur radius from zero (where the mask image is black) to the radius specified in the inputRadius parameter (where the mask image is white).\n\nMember Of\n\nCICategoryBlur, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 4The result of using the CIMaskedVariableBlur filter \nAvailability\n\nAvailable in OS X v10.10 and later.\n\nCIMedianFilter\n\nComputes the median value for a group of neighboring pixels and replaces each pixel value with the median.\n\nLocalized Display Name\n\nMedian\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nDiscussion\n\nThe effect is to reduce noise.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 5The result of using the CIMedianFilter filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIMotionBlur\n\nBlurs an image to simulate the effect of using a camera that moves a specified angle and distance while capturing the image.\n\nLocalized Display Name\n\nMotion Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 20.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 6The result of using the CIMotionBlur filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCINoiseReduction\n\nReduces noise using a threshold value to define what is considered noise.\n\nLocalized Display Name\n\nNoise Reduction\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputNoiseLevel\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Noise Level.\n\nDefault value: 0.02\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.40\n\nDiscussion\n\nSmall changes in luminance below that value are considered noise and get a noise reduction treatment, which is a local blur. Changes above the threshold value are considered edges, so they are sharpened.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 7The result of using the CINoiseReduction filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIZoomBlur\n\nSimulates the effect of zooming the camera while capturing the image.\n\nLocalized Display Name\n\nZoom Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Amount.\n\nDefault value: 20.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 8The result of using the CIZoomBlur filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCICategoryColorAdjustment\nCIColorClamp\n\nModifies color values to keep them within a specified range.\n\nLocalized Display Name\n\nColor Clamp\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputMinComponents\t\n\nRGBA values for the lower end of the range. A CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is MinComponents.\n\nDefault value: [0 0 0 0] Identity: [0 0 0 0]\n\n\ninputMaxComponents\t\n\nRGBA values for the upper end of the range. A CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is MaxComponents.\n\nDefault value: [1 1 1 1] Identity: [1 1 1 1]\n\nDiscussion\n\nAt each pixel, color component values less than those in inputMinComponents will be increased to match those in inputMinComponents, and color component values greater than those in inputMaxComponents will be decreased to match those in inputMaxComponents.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 9The result of using the CIColorClamp filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIColorControls\n\nAdjusts saturation, brightness, and contrast values.\n\nLocalized Display Name\n\nColor Controls\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputSaturation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Saturation.\n\nDefault value: 1.00\n\n\ninputBrightness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Brightness.\n\n\ninputContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast.\n\nDefault value: 1.00\n\nDiscussion\n\nTo calculate saturation, this filter linearly interpolates between a grayscale image (saturation = 0.0) and the original image (saturation = 1.0). The filter supports extrapolation: For values large than 1.0, it increases saturation.\n\nTo calculate contrast, this filter uses the following formula:\n\n(color.rgb - vec3(0.5)) * contrast + vec3(0.5)\n\nThis filter calculates brightness by adding a bias value:\n\ncolor.rgb + vec3(brightness)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 10The result of using the CIColorControls filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIColorMatrix\n\nMultiplies source color values and adds a bias factor to each color component.\n\nLocalized Display Name\n\nColor Matrix\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRVector\t\n\nA CIVector object whose display name is Red Vector.\n\nDefault value: [1 0 0 0]\n\n\ninputGVector\t\n\nA CIVector object whose display name is Green Vector.\n\nDefault value: [0 1 0 0]\n\n\ninputBVector\t\n\nA CIVector object whose display name is Blue Vector.\n\nDefault value: [0 0 1 0]\n\n\ninputAVector\t\n\nA CIVector object whose display name is Alpha Vector.\n\nDefault value: [0 0 0 1]\n\n\ninputBiasVector\t\n\nA CIVector object whose display name is Bias Vector.\n\nDefault value: [0 0 0 0]\n\nDiscussion\n\nThis filter performs a matrix multiplication, as follows, to transform the color vector:\n\ns.r = dot(s, redVector)\ns.g = dot(s, greenVector)\ns.b = dot(s, blueVector)\ns.a = dot(s, alphaVector)\ns = s + bias\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 11The result of using the CIColorMatrix filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIColorPolynomial\n\nModifies the pixel values in an image by applying a set of cubic polynomials.\n\nLocalized Display Name\n\nColor Polynomial\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRedCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is RedCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\n\ninputGreenCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is GreenCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\n\ninputBlueCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is BlueCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\n\ninputAlphaCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is AlphaCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\nDiscussion\n\nFor each pixel, the value of each color component is treated as the input to a cubic polynomial, whose coefficients are taken from the corresponding input coefficients parameter in ascending order. Equivalent to the following formula:\n\nr = rCoeff[0] + rCoeff[1] * r + rCoeff[2] * r*r + rCoeff[3] * r*r*r\ng = gCoeff[0] + gCoeff[1] * g + gCoeff[2] * g*g + gCoeff[3] * g*g*g\nb = bCoeff[0] + bCoeff[1] * b + bCoeff[2] * b*b + bCoeff[3] * b*b*b\na = aCoeff[0] + aCoeff[1] * a + aCoeff[2] * a*a + aCoeff[3] * a*a*a\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 12The result of using the CIColorPolynomial filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIExposureAdjust\n\nAdjusts the exposure setting for an image similar to the way you control exposure for a camera when you change the F-stop.\n\nLocalized Display Name\n\nExposure Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputEV\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is EV.\n\nDefault value: 0.50\n\nDiscussion\n\nThis filter multiplies the color values, as follows, to simulate exposure change by the specified F-stops:\n\ns.rgb * pow(2.0, ev)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 13The result of using the CIExposureAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIGammaAdjust\n\nAdjusts midtone brightness.\n\nLocalized Display Name\n\nGamma Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPower\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Power.\n\nDefault value: 0.75\n\nDiscussion\n\nThis filter is typically used to compensate for nonlinear effects of displays. Adjusting the gamma effectively changes the slope of the transition between black and white. It uses the following formula:\n\npow(s.rgb, vec3(power))\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 14The result of using the CIGammaAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIHueAdjust\n\nChanges the overall hue, or tint, of the source pixels.\n\nLocalized Display Name\n\nHue Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nDiscussion\n\nThis filter essentially rotates the color cube around the neutral axis.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 15The result of using the CIHueAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCILinearToSRGBToneCurve\n\nMaps color intensity from a linear gamma curve to the sRGB color space.\n\nLocalized Display Name\n\nLinear to sRGB Tone Curve\n\nParameters\ninputImage\t\n\nA CIImage object whose attribute type is CIAttributeTypeImage and whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 16The result of using the CILinearToSRGBToneCurve filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 7.0 and later.\n\nCISRGBToneCurveToLinear\n\nMaps color intensity from the sRGB color space to a linear gamma curve.\n\nLocalized Display Name\n\nsRGB Tone Curve to Linear\n\nParameters\ninputImage\t\n\nA CIImage object whose attribute type is CIAttributeTypeImage and whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 17The result of using the CISRGBToneCurveToLinear filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 7.0 and later.\n\nCITemperatureAndTint\n\nAdapts the reference white point for an image.\n\nLocalized Display Name\n\nTemperature and Tint\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputNeutral\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset and whose display name is Neutral.\n\nDefault value: [6500, 0]\n\n\ninputTargetNeutral\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset and whose display name is TargetNeutral\n\nDefault value: [6500, 0]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 18The result of using the CITemperatureAndTint filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCIToneCurve\n\nAdjusts tone response of the R, G, and B channels of an image.\n\nLocalized Display Name\n\nTone Curve\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0, 0]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0.25, 0.25]\n\n\ninputPoint2\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0.5, 0.5]\n\n\ninputPoint3\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0.75, 0.75]\n\n\ninputPoint4\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [1, 1]\n\nDiscussion\n\nThe input points are five x,y values that are interpolated using a spline curve. The curve is applied in a perceptual (gamma 2) version of the working space.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 19The result of using the CIToneCurve filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCIVibrance\n\nAdjusts the saturation of an image while keeping pleasing skin tones.\n\nLocalized Display Name\n\nVibrance\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Amount.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 20The result of using the CIVibrance filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCIWhitePointAdjust\n\nAdjusts the reference white point for an image and maps all colors in the source using the new reference.\n\nLocalized Display Name\n\nWhite Point Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputColor\t\n\nA CIColor object whose display name is Color.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 21The result of using the CIWhitePointAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCICategoryColorEffect\nCIColorCrossPolynomial\n\nModifies the pixel values in an image by applying a set of polynomial cross-products.\n\nLocalized Display Name\n\nColor Cross Polynomial\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRedCoefficients\t\n\nA CIVector object whose display name is RedCoefficients.\n\nDefault value: [1 0 0 0 0 0 0 0 0 0] Identity: [1 0 0 0 0 0 0 0 0 0]\n\n\ninputGreenCoefficients\t\n\nA CIVector object whose display name is GreenCoefficients.\n\nDefault value: [0 1 0 0 0 0 0 0 0 0] Identity: [0 1 0 0 0 0 0 0 0 0]\n\n\ninputBlueCoefficients\t\n\nA CIVector object whose display name is BlueCoefficients.\n\nDefault value: [0 0 1 0 0 0 0 0 0 0] Identity: [0 0 1 0 0 0 0 0 0 0]\n\nDiscussion\n\nEach component in an output pixel out is determined using the component values in the input pixel in according to a polynomial cross product with the input coefficients. That is, the red component of the output pixel is calculated using the inputRedCoefficients parameter (abbreviated rC below) using the following formula:\n\nout.r = in.r * rC[0] + in.g * rC[1] + in.b * rC[2]\n+ in.r * in.r * rC[3] + in.g * in.g * rC[4] + in.b * in.b * rC[5]\n+ in.r * in.g * rC[6] + in.g * in.b * rC[7] + in.b * in.r * rC[8]\n+ rC[9]\n\nThen, the formula is repeated to calculate the blue and green components of the output pixel using the blue and green coefficients, respectively.\n\nThis filter can be used for advanced color space and tone mapping conversions, such as imitating the color reproduction of vintage photography film.\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 22The result of using the CIColorCrossPolynomial filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIColorCube\n\nUses a three-dimensional color table to transform the source image pixels.\n\nLocalized Display Name\n\nColor Cube\n\nParameters\ninputImage\t\n\nThe image to be transformed. (A CIImage object whose display name is Image.)\n\n\ninputCubeDimension\t\n\nThe length, in texels, of each side of the cube texture. (An NSNumber object whose attribute type is CIAttributeTypeCount and whose display name is Cube Dimension.)\n\nDefault value: 2.00\n\n\ninputCubeData\t\n\nThe cube texture data to use as a color lookup table. (An NSData object whose display name is Cube Data.)\n\nDiscussion\n\nThis filter maps color values in the input image to new color values using a three-dimensional color lookup table (also called a CLUT or color cube). For each RGBA pixel in the input image, the filter uses the R, G, and B component values as indices to identify a location in the table; the RGBA value at that location becomes the RGBA value of the output pixel.\n\nUse the inputCubeData parameter to provide data formatted for use as a color lookup table, and the inputCubeDimension parameter to specify the size of the table. This data should be an array of texel values in 32-bit floating-point RGBA linear premultiplied format. The inputCubeDimension parameter identifies the size of the cube by specifying the length of one side, so the size of the array should be inputCubeDimension cubed times the size of a single texel value. In the color table, the R component varies fastest, followed by G, then B. Listing 1 shows a basic pattern for creating color cube data.\n\nListing 1Creating a Color Table for the CIColorCube Filter\n// Allocate and opulate color cube table\nconst unsigned int size = 64;\nfloat *cubeData = (float *)malloc(size * size * size * sizeof(float) * 4);\nfor (int b = 0; b < size; b++) {\nfor (int g = 0; g < size; r++) {\nfor (int r = 0; r < size; r ++) {\ncubeData[b][g][r][0] = <# output R value #>;\ncubeData[b][g][r][1] = <# output G value #>;\ncubeData[b][g][r][2] = <# output B value #>;\ncubeData[b][g][r][3] = <# output A value #>;\n}\n}\n}\n// Put the table in a data object and create the filter\nNSData *data = [NSData dataWithBytesNoCopy:cubeData\nlength:cubeDataSize\nfreeWhenDone:YES];\nCIFilter *colorCube = [CIFilter filterWithName:@\"CIColorCube\"\nwithInputParameters:@{\n@\"inputCubeDimension\": @(size),\n@\"inputCubeData\": data,\n}];\n\nFor another example of this filter in action, see Chroma Key Filter Recipe in Core Image Programming Guide.\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 23The result of using the CIColorCube filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorCubeWithColorSpace\n\nUses a three-dimensional color table to transform the source image pixels and maps the result to a specified color space.\n\nLocalized Display Name\n\nColor Cube with ColorSpace\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCubeDimension\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeCount and whose display name is Cube Dimension.\n\nDefault value: 2.00 Minimum: 2.00 Maximum: 128.00 Identity: 2.00\n\n\ninputCubeData\t\n\nAn NSData object whose display name is Cube Data.\n\n\ninputColorSpace\t\n\nAn CGColorSpaceRef object whose display name is ColorSpace.\n\nDiscussion\n\nSee CIColorCube for more details on the color cube operation. To provide a CGColorSpaceRef object as the input parameter, cast it to type id. With the default color space (null), which is equivalent to kCGColorSpaceGenericRGBLinear, this filter’s effect is identical to that of CIColorCube.\n\nFigure 24 uses the same color cube as Figure 23, but with the sRGB color space.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 24The result of using the CIColorCubeWithColorSpace filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIColorInvert\n\nInverts the colors in an image.\n\nLocalized Display Name\n\nColor Invert\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 25The result of using the CIColorInvert filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorMap\n\nPerforms a nonlinear transformation of source color values using mapping values provided in a table.\n\nLocalized Display Name\n\nColor Map\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputGradientImage\t\n\nA CIImage object whose attribute type is CIAttributeTypeGradient and whose display name is Gradient Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 26The result of using the CIColorMap filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorMonochrome\n\nRemaps colors so they fall within shades of a single color.\n\nLocalized Display Name\n\nColor Monochrome\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 27The result of using the CIColorMonochrome filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorPosterize\n\nRemaps red, green, and blue color components to the number of brightness values you specify for each color component.\n\nLocalized Display Name\n\nColor Posterize\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputLevels\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Levels.\n\nDefault value: 6.00\n\nDiscussion\n\nThis filter flattens colors to achieve a look similar to that of a silk-screened poster.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 28The result of using the CIColorPosterize filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIFalseColor\n\nMaps luminance to a color ramp of two colors.\n\nLocalized Display Name\n\nFalse Color\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\nDiscussion\n\nFalse color is often used to process astronomical and other scientific data, such as ultraviolet and x-ray images.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 29The result of using the CIFalseColor filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaskToAlpha\n\nConverts a grayscale image to a white image that is masked by alpha.\n\nLocalized Display Name\n\nMask To Alpha\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nDiscussion\n\nThe white values from the source image produce the inside of the mask; the black values become completely transparent.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 30The result of using the CIMaskToAlpha filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaximumComponent\n\nReturns a grayscale image from max(r,g,b).\n\nLocalized Display Name\n\nMaximum Component\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIMinimumComponent\n\nReturns a grayscale image from min(r,g,b).\n\nLocalized Display Name\n\nMinimum Component\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIPhotoEffectChrome\n\nApplies a preconfigured set of effects that imitate vintage photography film with exaggerated color.\n\nLocalized Display Name\n\nPhoto Effect Chrome\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 31The result of using the CIPhotoEffectChrome filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectFade\n\nApplies a preconfigured set of effects that imitate vintage photography film with diminished color.\n\nLocalized Display Name\n\nPhoto Effect Fade\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 32The result of using the CIPhotoEffectFade filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectInstant\n\nApplies a preconfigured set of effects that imitate vintage photography film with distorted colors.\n\nLocalized Display Name\n\nPhoto Effect Instant\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 33The result of using the CIPhotoEffectInstant filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectMono\n\nApplies a preconfigured set of effects that imitate black-and-white photography film with low contrast.\n\nLocalized Display Name\n\nPhoto Effect Mono\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 34The result of using the CIPhotoEffectMono filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectNoir\n\nApplies a preconfigured set of effects that imitate black-and-white photography film with exaggerated contrast.\n\nLocalized Display Name\n\nPhoto Effect Noir\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 35The result of using the CIPhotoEffectNoir filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectProcess\n\nApplies a preconfigured set of effects that imitate vintage photography film with emphasized cool colors.\n\nLocalized Display Name\n\nPhoto Effect Process\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 36The result of using the CIPhotoEffectProcess filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectTonal\n\nApplies a preconfigured set of effects that imitate black-and-white photography film without significantly altering contrast.\n\nLocalized Display Name\n\nPhoto Effect Tonal\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 37The result of using the CIPhotoEffectTonal filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectTransfer\n\nApplies a preconfigured set of effects that imitate vintage photography film with emphasized warm colors.\n\nLocalized Display Name\n\nPhoto Effect Transfer\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 38The result of using the CIPhotoEffectTransfer filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCISepiaTone\n\nMaps the colors of an image to various shades of brown.\n\nLocalized Display Name\n\nSepia Tone\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 39The result of using the CISepiaTone filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIVignette\n\nReduces the brightness of an image at the periphery.\n\nLocalized Display Name\n\nVignette\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 1.00\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.0\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 40The result of using the CIVignette filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 5.0 and later.\n\nCIVignetteEffect\n\nModifies the brightness of an image around the periphery of a specified region.\n\nLocalized Display Name\n\nVignette Effect\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150] Identity: (null)\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose display name is Radius.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 0.00 Identity: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 41The result of using the CIVignetteEffect filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCICategoryCompositeOperation\nCIAdditionCompositing\n\nAdds color components to achieve a brightening effect.\n\nLocalized Display Name\n\nAddition\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis filter is typically used to add highlights and lens flare effects. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 42The result of using the CIAdditionCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorBlendMode\n\nUses the luminance values of the background with the hue and saturation values of the source image.\n\nLocalized Display Name\n\nColor Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis mode preserves the gray levels in the image. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 43The result of using the CIColorBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorBurnBlendMode\n\nDarkens the background image samples to reflect the source image samples.\n\nLocalized Display Name\n\nColor Burn Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that specify white do not produce a change. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 44The result of using the CIColorBurnBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorDodgeBlendMode\n\nBrightens the background image samples to reflect the source image samples.\n\nLocalized Display Name\n\nColor Dodge Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that specify black do not produce a change. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 45The result of using the CIColorDodgeBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDarkenBlendMode\n\nCreates composite image samples by choosing the darker samples (from either the source image or the background).\n\nLocalized Display Name\n\nDarken Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe result is that the background image samples are replaced by any source image samples that are darker. Otherwise, the background image samples are left unchanged. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 46The result of using the CIDarkenBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDifferenceBlendMode\n\nSubtracts either the source image sample color from the background image sample color, or the reverse, depending on which sample has the greater brightness value.\n\nLocalized Display Name\n\nDifference Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that are black produce no change; white inverts the background color values. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 47The result of using the CIDifferenceBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDivideBlendMode\n\nDivides the background image sample color from the source image sample color.\n\nLocalized Display Name\n\nDivide Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 48The result of using the CIDivideBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCIExclusionBlendMode\n\nProduces an effect similar to that produced by the CIDifferenceBlendMode filter but with lower contrast.\n\nLocalized Display Name\n\nExclusion Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that are black do not produce a change; white inverts the background color values. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 49The result of using the CIExclusionBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHardLightBlendMode\n\nEither multiplies or screens colors, depending on the source image sample color.\n\nLocalized Display Name\n\nHard Light Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nIf the source image sample color is lighter than 50% gray, the background is lightened, similar to screening. If the source image sample color is darker than 50% gray, the background is darkened, similar to multiplying. If the source image sample color is equal to 50% gray, the source image is not changed. Image samples that are equal to pure black or pure white result in pure black or white. The overall effect is similar to what you would achieve by shining a harsh spotlight on the source image. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 50The result of using the CIHardLightBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHueBlendMode\n\nUses the luminance and saturation values of the background image with the hue of the input image.\n\nLocalized Display Name\n\nHue Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 51The result of using the CIHueBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILightenBlendMode\n\nCreates composite image samples by choosing the lighter samples (either from the source image or the background).\n\nLocalized Display Name\n\nLighten Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe result is that the background image samples are replaced by any source image samples that are lighter. Otherwise, the background image samples are left unchanged. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 52The result of using the CILightenBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILinearBurnBlendMode\n\nDarkens the background image samples to reflect the source image samples while also increasing contrast.\n\nLocalized Display Name\n\nLinear Burn Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe effect of this filter is similar to that of the CIColorBurnBlendMode filter, but more pronounced.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 53The result of using the CILinearBurnBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCILinearDodgeBlendMode\n\nBrightens the background image samples to reflect the source image samples while also increasing contrast.\n\nLocalized Display Name\n\nLinear Dodge Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe effect of this filter is similar to that of the CIColorDodgeBlendMode filter, but more pronounced.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 54The result of using the CILinearDodgeBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCILuminosityBlendMode\n\nUses the hue and saturation of the background image with the luminance of the input image.\n\nLocalized Display Name\n\nLuminosity Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis mode creates an effect that is inverse to the effect created by the CIColorBlendMode filter. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 55The result of using the CILuminosityBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaximumCompositing\n\nComputes the maximum value, by color component, of two input images and creates an output image using the maximum values.\n\nLocalized Display Name\n\nMaximum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis is similar to dodging. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 56The result of using the CIMaximumCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMinimumCompositing\n\nComputes the minimum value, by color component, of two input images and creates an output image using the minimum values.\n\nLocalized Display Name\n\nMinimum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis is similar to burning. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 57The result of using the CIMinimumCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMultiplyBlendMode\n\nMultiplies the input image samples with the background image samples.\n\nLocalized Display Name\n\nMultiply Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis results in colors that are at least as dark as either of the two contributing sample colors. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 58The result of using the CIMultiplyBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMultiplyCompositing\n\nMultiplies the color component of two input images and creates an output image using the multiplied values.\n\nLocalized Display Name\n\nMultiply\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis filter is typically used to add a spotlight or similar lighting effect to an image. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 59The result of using the CIMultiplyCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIOverlayBlendMode\n\nEither multiplies or screens the input image samples with the background image samples, depending on the background color.\n\nLocalized Display Name\n\nOverlay Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe result is to overlay the existing image samples while preserving the highlights and shadows of the background. The background color mixes with the source image to reflect the lightness or darkness of the background. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 60The result of using the CIOverlayBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPinLightBlendMode\n\nConditionally replaces background image samples with source image samples depending on the brightness of the source image samples.\n\nLocalized Display Name\n\nPin Light Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 61The result of using the CIPinLightBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCISaturationBlendMode\n\nUses the luminance and hue values of the background image with the saturation of the input image.\n\nLocalized Display Name\n\nSaturation Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nAreas of the background that have no saturation (that is, pure gray areas) do not produce a change. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 62The result of using the CISaturationBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIScreenBlendMode\n\nMultiplies the inverse of the input image samples with the inverse of the background image samples.\n\nLocalized Display Name\n\nScreen Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis results in colors that are at least as light as either of the two contributing sample colors. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 63The result of using the CIScreenBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISoftLightBlendMode\n\nEither darkens or lightens colors, depending on the input image sample color.\n\nLocalized Display Name\n\nSoft Light Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nIf the source image sample color is lighter than 50% gray, the background is lightened, similar to dodging. If the source image sample color is darker than 50% gray, the background is darkened, similar to burning. If the source image sample color is equal to 50% gray, the background is not changed. Image samples that are equal to pure black or pure white produce darker or lighter areas, but do not result in pure black or white. The overall effect is similar to what you would achieve by shining a diffuse spotlight on the source image. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 64The result of using the CISoftLightBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceAtopCompositing\n\nPlaces the input image over the background image, then uses the luminance of the background image to determine what to show.\n\nLocalized Display Name\n\nSource Atop\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe composite shows the background image and only those portions of the source image that are over visible parts of the background. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 65The result of using the CISourceAtopCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceInCompositing\n\nUses the background image to define what to leave in the input image, effectively cropping the input image.\n\nLocalized Display Name\n\nSource In\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 66The result of using the CISourceInCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceOutCompositing\n\nUses the background image to define what to take out of the input image.\n\nLocalized Display Name\n\nSource Out\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 67The result of using the CISourceOutCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceOverCompositing\n\nPlaces the input image over the input background image.\n\nLocalized Display Name\n\nSource Over\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 68The result of using the CISourceOverCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCISubtractBlendMode\n\nSubtracts the background image sample color from the source image sample color.\n\nLocalized Display Name\n\nSubtract Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 69The result of using the CISubtractBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCICategoryDistortionEffect\nCIBumpDistortion\n\nCreates a bump that originates at a specified point in the image.\n\nLocalized Display Name\n\nBump Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 0.50\n\nDiscussion\n\nThe bump can be concave or convex.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 70The result of using the CIBumpDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 7.0 and later.\n\nCIBumpDistortionLinear\n\nCreates a concave or convex distortion that originates from a line in the image.\n\nLocalized Display Name\n\nCIBumpDistortionLinear\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [300 300]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 71The result of using the CIBumpDistortionLinear filter \nAvailability\n\nAvailable in OS X v10.5 and later.\n\nCICircleSplashDistortion\n\nDistorts the pixels starting at the circumference of a circle and emanating outward.\n\nLocalized Display Name\n\nCircle Splash Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 72The result of using the CICircleSplashDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICircularWrap\n\nWraps an image around a transparent circle.\n\nLocalized Display Name\n\nCircular Wrap Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nDiscussion\n\nThe distortion of the image increases with the distance from the center of the circle.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 73The result of using the CICircularWrap filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIDroste\n\nRecursively draws a portion of an image in imitation of an M. C. Escher drawing.\n\nLocalized Display Name\n\nDroste\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputInsetPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [200 200]\n\n\ninputInsetPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [400 400]\n\n\ninputStrands\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 1\n\n\ninputPeriodicity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance.\n\nDefault value: 1\n\n\ninputRotation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance.\n\nDefault value: 0.00\n\n\ninputZoom\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar.\n\nDefault value: 1\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, ToneCuCICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 74The result of using the CIDroste filter \nAvailability\n\nAvailable in OS X v10.6 and later and in iOS 9 and later.\n\nCIDisplacementDistortion\n\nApplies the grayscale values of the second image to the first image.\n\nLocalized Display Name\n\nDisplacement Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputDisplacementImage\t\n\nA CIImage object whose display name is Displacement Image.\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 50.00\n\nDiscussion\n\nThe output image has a texture defined by the grayscale values.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 75The result of using the CIDisplacementDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIGlassDistortion\n\nDistorts an image by applying a glass-like texture.\n\nLocalized Display Name\n\nGlass Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTexture\t\n\nA CIImage object whose display name is Texture.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150] Identity: (null)\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 200.00\n\nDiscussion\n\nThe raised portions of the output image are the result of applying a texture map.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 76The result of using the CIGlassDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 8.0 and later.\n\nCIGlassLozenge\n\nCreates a lozenge-shaped lens and distorts the portion of the image over which the lens is placed.\n\nLocalized Display Name\n\nGlass Lozenge\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 1.\n\nDefault value: [150 150]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 2.\n\nDefault value: [350 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 100.00\n\n\ninputRefraction\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Refraction.\n\nDefault value: 1.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 77The result of using the CIGlassLozenge filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIHoleDistortion\n\nCreates a circular area that pushes the image pixels outward, distorting those pixels closest to the circle the most.\n\nLocalized Display Name\n\nHole Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 78The result of using the CIHoleDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILightTunnel\n\nRotates a portion of the input image specified by the center and radius parameters to give a tunneling effect.\n\nLocalized Display Name\n\nLight Tunnel\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [150 150]\n\n\ninputRotation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle.\n\nDefault value: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 79The result of using the CILightTunnel filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 6.0 and later.\n\nCIPinchDistortion\n\nCreates a rectangular area that pinches source pixels inward, distorting those pixels closest to the rectangle the most.\n\nLocalized Display Name\n\nPinch Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 80The result of using the CIPinchDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIStretchCrop\n\nDistorts an image by stretching and or cropping it to fit a target size.\n\nLocalized Display Name\n\nCIStretchCrop\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputSize\t\n\nA CIVector object whose display name is Size. This value specifies the size of the output image in pixels.\n\n\ninputCropAmount\t\n\nAn NSNumber object whose display name is CropAmount. This value determines if, and how much, cropping should be used to achieve the target size. If the value is 0, the image is stretched but not cropped. If the value is 1, the image is cropped but not stretched. Values in-between use stretching and cropping proportionally.\n\n\ninputCenterStretchAmount\t\n\nAn NSNumber object whose display name is CenterStretchAmount. This value determines how much stretching to apply to the center of the image, if stretching is indicated by the inputCropAmount value. A value of 0 causes the center of the image to maintain its original aspect ratio. A value of 1 causes the image to be stretched uniformly.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 81The result of using the CIStretchCrop filter \nAvailability\n\nAvailable in OS X v10.6 and later and in iOS 9 and later.\n\nCITorusLensDistortion\n\nCreates a torus-shaped lens and distorts the portion of the image over which the lens is placed.\n\nLocalized Display Name\n\nTorus Lens Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 160.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 80.00\n\n\ninputRefraction\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Refraction.\n\nDefault value: 1.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 82The result of using the CITorusLensDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCITwirlDistortion\n\nRotates pixels around a point to give a twirling effect.\n\nLocalized Display Name\n\nTwirl Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 3.14\n\nDiscussion\n\nYou can specify the number of rotations as well as the center and radius of the effect.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 83The result of using the CITwirlDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIVortexDistortion\n\nRotates pixels around a point to simulate a vortex.\n\nLocalized Display Name\n\nVortex Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 56.55\n\nDiscussion\n\nYou can specify the number of rotations as well the center and radius of the effect.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 84The result of using the CIVortexDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICategoryGenerator\nCIAztecCodeGenerator\n\nGenerates an Aztec code (two-dimensional barcode) from input data.\n\nLocalized Display Name\n\nCIAztecCodeGenerator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as an Aztec code. An NSData object whose display name is Message.\n\n\ninputCorrectionLevel\t\n\nThe percentage of redundancy to add to the message data in the barcode encoding. A higher correction level allows a barcode to be correctly read even when partially damaged.\n\nAn NSNumber object whose display name is CorrectionLevel.\n\nDefault value: 23.00 Minimum: 5.00 Maximum: 95.00 Slider minimum: 5.00 Slider maximum: 95.00 Identity: 0.00\n\n\ninputLayers\t\n\nThe number of concentric squares (with a width of two pixels each) encoding the barcode data. When this parameter is set to zero, Core Image automatically determines the appropriate number of layers to encode the message at the specified correction level.\n\nAn NSNumber object whose display name is Layers.\n\nDefault value: 0.00 Minimum: 1.00 Maximum: 32.00 Slider minimum: 1.00 Slider maximum: 32.00 Identity: 0.00\n\n\ninputCompactStyle\t\n\nA Boolean value that determines whether to use the compact or full-size Aztec barcode format. The compact format can store up to 44 bytes of message data (including data added for correction) in up to 4 layers, producing a barcode image sized between 15 x 15 and 27 x 27 pixels. The full-size format can store up to 1914 bytes of message data (including correction) in up to 32 layers, producing a barcode image sized no larger than 151 x 151 pixels.\n\nAn NSNumber object whose display name is CompactStyle.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO/IEC 24778:2008 standard. The width and height of each module (square dot) of the code in the output image is one pixel. To create an Aztec code from a string or URL, convert it to an NSData object using the NSISOLatin1StringEncoding string encoding. The output image also includes two pixels of padding on each side (for example, a 15 x 15 code creates a 19 x 19 image).\n\nMember Of\n\nCICategoryGenerator, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 85The result of using the CIAztecCodeGenerator filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nSee Also\n\nCIQRCodeGenerator\nCICode128BarcodeGenerator\n\n\nCICheckerboardGenerator\n\nGenerates a checkerboard pattern.\n\nLocalized Display Name\n\nCheckerboard\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 80.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 1.00\n\nDiscussion\n\nYou can specify the checkerboard size and colors, and the sharpness of the pattern.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 86The result of using the CICheckerboardGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICode128BarcodeGenerator\n\nGenerates a Code 128 one-dimensional barcode from input data.\n\nLocalized Display Name\n\nCICode128BarcodeGenerator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as a Code 128 barcode. Must not contain non-ASCII characters. An NSData object whose display name is Message.\n\n\ninputQuietSpace\t\n\nThe number of pixels of added white space on each side of the barcode. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is QuietSpace.\n\nDefault value: 7.00 Minimum: 0.00 Maximum: 20.00 Slider minimum: 0.00 Slider maximum: 20.00 Identity: 0.00\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO/IEC 15417:2007 standard. The width of each module (vertical line) of the barcode in the output image is one pixel. The height of the barcode is 32 pixels. To create a barcode from a string or URL, convert it to an NSData object using the NSASCIIStringEncoding string encoding.\n\nMember Of\n\nCICategoryGenerator, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 87The result of using the CICode128BarcodeGenerator filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nSee Also\n\nCIAztecCodeGenerator\nCIQRCodeGenerator\n\n\nCIConstantColorGenerator\n\nGenerates a solid color.\n\nLocalized Display Name\n\nConstant Color\n\nParameters\ninputColor\t\n\nA CIColor object whose display name is Color.\n\nDiscussion\n\nYou typically use the output of this filter as the input to another filter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 88The result of using the CIConstantColorGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCILenticularHaloGenerator\n\nSimulates a lens flare.\n\nLocalized Display Name\n\nLenticular Halo\n\nParameters\ninputCenter\t\n\nThe center of the lens flare. A CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor\t\n\nControls the proportion of red, green, and blue halos. A CIColor object whose display name is Color.\n\n\ninputHaloRadius\t\n\nControls the size of the lens flare. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Halo Radius.\n\nDefault value: 70.00\n\n\ninputHaloWidth\t\n\nControls the width of the lens flare, that is, the distance between the inner flare and the outer flare. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Halo Width.\n\nDefault value: 87.00\n\n\ninputHaloOverlap\t\n\nControls how much the red, green, and blue halos overlap. A value of 0 means no overlap (a lot of separation). A value of 1 means full overlap (white halos). An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Halo Overlap.\n\nDefault value: 0.77\n\n\ninputStriationStrength\t\n\nControls the brightness of the rainbow-colored halo area. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Strength.\n\nDefault value: 0.50\n\n\ninputStriationContrast\t\n\nControls the contrast of the rainbow-colored halo area. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Contrast.\n\nDefault value: 1.00\n\n\ninputTime\t\n\nAdds a randomness to the lens flare; it causes the flare to \"sparkle\" as it changes through various time values. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Time.\n\nDefault value: 0.00\n\nDiscussion\n\nThis filter is typically applied to another image to simulate lens flares and similar effects.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 89The result of using the CILenticularHaloGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIPDF417BarcodeGenerator\n\nGenerates a PDF417 code (two-dimensional barcode) from input data.\n\nLocalized Display Name\n\nPDF417 Barcode Generator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as a barcode. An NSData object whose display name is Message.\n\n\ninputMinWidth\t\n\nThe minimum width of the barcode’s data area, in pixels. An NSNumber object whose display name is MinWidth.\n\nDefault value: 0.00 Minimum: 56.00 Maximum: 583.00 Slider minimum: 56.00 Slider maximum: 583.00 Identity: 0.00\n\n\ninputMaxWidth\t\n\nThe maximum width of the barcode’s data area, in pixels. An NSNumber object whose display name is MaxWidth.\n\nDefault value: 0.00 Minimum: 56.00 Maximum: 583.00 Slider minimum: 56.00 Slider maximum: 583.00 Identity: 0.00\n\n\ninputMinHeight\t\n\nThe minimum height of the barcode’s data area, in pixels. An NSNumber object whose display name is MinHeight.\n\nDefault value: 0.00 Minimum: 13.00 Maximum: 283.00 Slider minimum: 13.00 Slider maximum: 283.00 Identity: 0.00\n\n\ninputMaxHeight\t\n\nThe maximum height of the barcode’s data area, in pixels. An NSNumber object whose display name is MaxHeight.\n\nDefault value: 0.00 Minimum: 13.00 Maximum: 283.00 Slider minimum: 13.00 Slider maximum: 283.00 Identity: 0.00\n\n\ninputDataColumns\t\n\nThe number of data columns in the generated code. If zero, the generator uses a number of columns based on the width, height, and aspect ratio. An NSNumber object whose display name is DataColumns.\n\nDefault value: 0.00 Minimum: 1.00 Maximum: 30.00 Slider minimum: 1.00 Slider maximum: 30.00 Identity: 0.00\n\n\ninputRows\t\n\nThe number of data rows in the generated code. If zero, the generator uses a number of rows based on the width, height, and aspect ratio. An NSNumber object whose display name is Rows.\n\nDefault value: 0.00 Minimum: 3.00 Maximum: 90.00 Slider minimum: 3.00 Slider maximum: 90.00 Identity: 0.00\n\n\ninputPreferredAspectRatio\t\n\nThe preferred ratio of width over height for the generated barcode. The generator approximates this with an actual aspect ratio based on the data and other parameters you specify. An NSNumber object whose display name is PreferredAspectRatio.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 9223372036854775808.00 Slider minimum: 0.00 Slider maximum: 9223372036854775808.00 Identity: 0.00\n\n\ninputCompactionMode\t\n\nAn option that determines which method the generator uses to compress data.\n\nAutomatic. The generator automatically chooses a compression method. This option is the default.\n\nNumeric. Valid only when the message is an ASCII-encoded string of digits, achieving optimal compression for that type of data.\n\nText. Valid only when the message is all ASCII-encoded alphanumeric and punctuation characters, achieving optimal compression for that type of data.\n\nByte. Valid for any data, but least compact.\n\nAn NSNumber object whose display name is CompactionMode.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 3.00 Slider minimum: 0.00 Slider maximum: 3.00 Identity: 0.00\n\n\ninputCompactStyle\t\n\nA Boolean value that determines whether to omit redundant elements to make the generated barcode more compact. An NSNumber object whose display name is CompactStyle.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputCorrectionLevel\t\n\nAn integer between 0 and 8, inclusive, that determines the amount of redundancy to include in the barcode’s data to prevent errors when the barcode is read. If unspecified, the generator chooses a correction level based on the size of the message data. An NSNumber object whose display name is CorrectionLevel.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 8.00 Slider minimum: 0.00 Slider maximum: 8.00 Identity: 0.00\n\n\ninputAlwaysSpecifyCompaction\t\n\nA Boolean value that determines whether to include information about the compaction mode in the barcode even when such information is redundant. (If a PDF417 barcode does not contain compaction mode information, a reader assumes text-based compaction. Some barcodes include this information even when using text-based compaction.)\n\nAn NSNumber object whose display name is AlwaysSpecifyCompaction.\n\nDefault value: 0.00 Minimum: -9223372036854775808.00 Maximum: 9223372036854775808.00 Slider minimum: -9223372036854775808.00 Slider maximum: 9223372036854775808.00 Identity: 0.00\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO 15438 standard. PDF417 codes are commonly used in postage, package tracking, personal identification documents, and coffeeshop membership cards. The width and height of each module (square dot) of the code in the output image is one point. To create a PDF417 code from a string or URL, convert it to an NSData object using the NSISOLatin1StringEncoding string encoding.\n\nMember Of\n\nCICategoryGenerator, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 90The result of using the CIPDF417BarcodeGenerator filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 9 and later.\n\nCIQRCodeGenerator\n\nGenerates a Quick Response code (two-dimensional barcode) from input data.\n\nLocalized Display Name\n\nCIQRCodeGenerator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as a QR code. An NSData object whose display name is Message.\n\n\ninputCorrectionLevel\t\n\nA single letter specifying the error correction format. An NSString object whose display name is CorrectionLevel.\n\nDefault value: M\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO/IEC 18004:2006 standard. The width and height of each module (square dot) of the code in the output image is one point. To create a QR code from a string or URL, convert it to an NSData object using the NSISOLatin1StringEncoding string encoding.\n\nThe inputCorrectionLevel parameter controls the amount of additional data encoded in the output image to provide error correction. Higher levels of error correction result in larger output images but allow larger areas of the code to be damaged or obscured without. There are four possible correction modes (with corresponding error resilience levels):\n\nL: 7%\n\nM: 15%\n\nQ: 25%\n\nH: 30%\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryGenerator\n\nSample Output\nFigure 91The result of using the CIQRCodeGenerator filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nSee Also\n\nCIAztecCodeGenerator\nCICode128BarcodeGenerator\n\n\nCIRandomGenerator\n\nGenerates an image of infinite extent whose pixel values are made up of four independent, uniformly-distributed random numbers in the 0 to 1 range.\n\nLocalized Display Name\n\nRandom Generator\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 92The result of using the CIRandomGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIStarShineGenerator\n\nGenerates a starburst pattern that is similar to a supernova; can be used to simulate a lens flare.\n\nLocalized Display Name\n\nStar Shine\n\nParameters\ninputCenter\t\n\nThe center of the flare. A CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor\t\n\nThe color of the flare. A CIColor object whose display name is Color.\n\n\ninputRadius\t\n\nControls the size of the flare. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 50.00\n\n\ninputCrossScale\t\n\nControls the ratio of the cross flare size relative to the round central flare. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Cross Scale.\n\nDefault value: 15.00\n\n\ninputCrossAngle\t\n\nControls the angle of the flare. An NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Cross Angle.\n\nDefault value: 0.60\n\n\ninputCrossOpacity\t\n\nControls the thickness of the cross flare. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Cross Opacity.\n\nDefault value: -2.00\n\n\ninputCrossWidth\t\n\nHas the same overall effect as the inputCrossOpacity parameter. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Cross Width.\n\nDefault value: 2.50\n\n\ninputEpsilon\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Epsilon.\n\nDefault value: -2.00\n\nDiscussion\n\nThe output image is typically used as input to another filter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 93The result of using the CIStarShineGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIStripesGenerator\n\nGenerates a stripe pattern.\n\nLocalized Display Name\n\nStripes\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 80.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 1.00\n\nDiscussion\n\nYou can control the color of the stripes, the spacing, and the contrast.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 94The result of using the CIStripesGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISunbeamsGenerator\n\nGenerates a sun effect.\n\nLocalized Display Name\n\nSunbeams\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor\t\n\nA CIColor object whose display name is Color.\n\n\ninputSunRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Sun Radius.\n\nDefault value: 40.00\n\n\ninputMaxStriationRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Maximum Striation Radius.\n\nDefault value: 2.58\n\n\ninputStriationStrength\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Strength.\n\nDefault value: 0.50\n\n\ninputStriationContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Contrast.\n\nDefault value: 1.38\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Time.\n\nDefault value: 0.00\n\nDiscussion\n\nYou typically use the output of the sunbeams filter as input to a composite filter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 95The result of using the CISunbeamsGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCICategoryGeometryAdjustment\nCIAffineTransform\n\nApplies an affine transform to an image.\n\nLocalized Display Name\n\nAffine Transform\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTransform\t\n\nOn iOS, an NSValue object whose attribute type is CIAttributeTypeTransform. You must pass the transform as NSData using a statement similar to the following, where xform is an affine transform:\n\n[myFilter setValue:[NSValue valueWithBytes:&xform\nobjCType:@encode(CGAffineTransform)]\nforKey:@\"inputTransform\"];\n\nOn OS X, an NSAffineTransform object whose attribute type is CIAttributeTypeTransform.\n\nDiscussion\n\nYou can scale, translate, or rotate the input image. You can also apply a combination of these operations.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 96The result of using the CIAffineTransform filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCICrop\n\nApplies a crop to an image.\n\nLocalized Display Name\n\nCrop\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRectangle\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Rectangle.\n\nDefault value: [0 0 300 300]\n\nDiscussion\n\nThe size and shape of the cropped image depend on the rectangle you specify.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 97The result of using the CICrop filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCILanczosScaleTransform\n\nProduces a high-quality, scaled version of a source image.\n\nLocalized Display Name\n\nLanczos Scale Transform\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 1.00\n\n\ninputAspectRatio\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Aspect Ratio.\n\nDefault value: 1.00\n\nDiscussion\n\nYou typically use this filter to scale down an image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 98The result of using the CILanczosScaleTransform filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPerspectiveCorrection\n\nApplies a perspective correction, transforming an arbitrary quadrilateral region in the source image to a rectangular output image.\n\nLocalized Display Name\n\nPerspective Correction\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTopLeft\t\n\nThe point in the input image to be mapped to the top left corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484] Identity: (null)\n\n\ninputTopRight\t\n\nThe point in the input image to be mapped to the top right corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507] Identity: (null)\n\n\ninputBottomRight\t\n\nThe point in the input image to be mapped to the bottom right corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140] Identity: (null)\n\n\ninputBottomLeft\t\n\nThe point in the input image to be mapped to the bottom left corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153] Identity: (null)\n\nDiscussion\n\nThe extent of the rectangular output image varies based on the size and placement of the specified quadrilateral region in the input image.\n\nMember Of\n\nCICategoryGeometryAdjustment, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 99The result of using the CIPerspectiveCorrection filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCIPerspectiveTransform\n\nAlters the geometry of an image to simulate the observer changing viewing position.\n\nLocalized Display Name\n\nPerspective Transform\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTopLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484]\n\n\ninputTopRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507]\n\n\ninputBottomRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140]\n\n\ninputBottomLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153]\n\nDiscussion\n\nYou can use the perspective filter to skew an image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 100The result of using the CIPerspectiveTransform filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPerspectiveTransformWithExtent\n\nAlters the geometry of a portion of an image to simulate the observer changing viewing position.\n\nLocalized Display Name\n\nPerspective Transform With Extent\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputExtent\t\n\nA CIVector object whose whose attribute type is CIAttributeTypeRectangle. If you pass [image extent] you’ll get the same result as using the CIPerspectiveTransform filter.\n\n\ninputTopLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484]\n\n\ninputTopRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507]\n\n\ninputBottomRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140]\n\n\ninputBottomLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153]\n\nDiscussion\n\nYou can use the perspective filter to skew an the portion of the image defined by extent. See CIPerspectiveTransform for an example of the output of this filter when you supply the input image size as the extent.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nAvailability\n\nAvailable in iOS 6.0 and later.\n\nCIStraightenFilter\n\nRotates the source image by the specified angle in radians.\n\nLocalized Display Name\n\nStraighten\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Angle.\n\nDefault value: 0.00\n\nDiscussion\n\nThe image is scaled and cropped so that the rotated image fits the extent of the input image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 101The result of using CIStraightenFilter filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCICategoryGradient\nCIGaussianGradient\n\nGenerates a gradient that varies from one color to another using a Gaussian distribution.\n\nLocalized Display Name\n\nGaussian Gradient\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150] Identity: (null)\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 102The result of using the CIGaussianGradient filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILinearGradient\n\nGenerates a gradient that varies along a linear axis between two defined endpoints.\n\nLocalized Display Name\n\nLinear Gradient\n\nParameters\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 1.\n\nDefault value: [0 0]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 2.\n\nDefault value: [200 200]\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 103The result of using the CILinearGradient filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIRadialGradient\n\nGenerates a gradient that varies radially between two circles having the same center.\n\nLocalized Display Name\n\nRadial Gradient\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius0\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius 1.\n\nDefault value: 5.00\n\n\ninputRadius1\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius 2.\n\nDefault value: 100.00\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\nDiscussion\n\nIt is valid for one of the two circles to have a radius of 0.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 104The result of using the CIRadialGradient filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISmoothLinearGradient\n\nGenerates a gradient that uses an S-curve function to blend colors along a linear axis between two defined endpoints.\n\nLocalized Display Name\n\nSmooth Linear Gradient\n\nParameters\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 1.\n\nDefault value: [0 0]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 2.\n\nDefault value: [200 200]\n\n\ninputColor0\t\n\nA CIColor object whose attribute type is CIAttributeTypeColor and whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose attribute type is CIAttributeTypeColor and whose display name is Color 2.\n\nDiscussion\n\nWhere the CILinearGradient filter blends colors linearly (that is, the color at a point 25% along the line between Point 1 and Point 2 is 25% Color 1 and 75% Color 2), this filter blends colors using an S-curve function: the color blend at points less than 50% along the line between Point 1 and Point 2 is slightly closer to Color 1 than in a linear blend, and the color blend at points further than 50% along that line is slightly closer to Color 2 than in a linear blend.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 105The result of using the CISmoothLinearGradient filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 7.0 and later.\n\nCICategoryHalftoneEffect\nCICircularScreen\n\nSimulates a circular-shaped halftone screen.\n\nLocalized Display Name\n\nCircular Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 106The result of using the CICircularScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICMYKHalftone\n\nCreates a color, halftoned rendition of the source image, using cyan, magenta, yellow, and black inks over a white page.\n\nLocalized Display Name\n\nCMYK Halftone\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\n\ninputGCR\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Gray Component Replacement.\n\nDefault value: 1.00\n\n\ninputUCR\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Under Color Removal.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 107The result of using the CICMYKHalftone filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIDotScreen\n\nSimulates the dot patterns of a halftone screen.\n\nLocalized Display Name\n\nDot Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 108The result of using the CIDotScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHatchedScreen\n\nSimulates the hatched pattern of a halftone screen.\n\nLocalized Display Name\n\nHatched Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 109The result of using the CIHatchedScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILineScreen\n\nSimulates the line pattern of a halftone screen.\n\nLocalized Display Name\n\nLine Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 110The result of using the CILineScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICategoryReduction\nCIAreaAverage\n\nReturns a single-pixel image that contains the average color for the region of interest.\n\nLocalized Display Name\n\nArea Average\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nA CIVector object representing the rectangular region of interest.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaHistogram\n\nReturns a 1D image (inputCount wide by one pixel high) that contains the component-wise histogram computed for the specified rectangular area.\n\nLocalized Display Name\n\nArea Histogram\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\n\ninputCount\t\n\nThe number of “buckets” for the histogram.\n\n\ninputScale\t\n\nA scaling factor. Core Image scales the histogram by dividing the scale by the area of the inputExtent rectangle.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 8.0 and later.\n\nCIRowAverage\n\nReturns a 1-pixel high image that contains the average color for each scan row.\n\nLocalized Display Name\n\nRow Average\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIColumnAverage\n\nReturns a 1-pixel high image that contains the average color for each scan column.\n\nLocalized Display Name\n\nColumn Average\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIHistogramDisplayFilter\n\nGenerates a histogram image from the output of the CIAreaHistogram filter.\n\nLocalized Display Name\n\nHistogram Display\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputHeight\t\n\nThe height of the displayable histogram image. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Height.\n\nDefault value: 100.00 Minimum: 1.00 Maximum: 200.00 Slider minimum: 1.00 Slider maximum: 100.00 Identity: 0.00\n\n\ninputHighLimit\t\n\nThe fraction of the left portion of the histogram image to be made darker. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is HighLimit.\n\nDefault value: 1.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputLowLimit\t\n\nThe fraction of the right portion of the histogram image to be made lighter. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is LowLimit.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\nDiscussion\n\nThe input image should be a one-dimensional image in which each pixel contains data (per component) for one “bucket” of the histogram; you can produce such an image using the CIAreaHistogram filter. The width of the output image is the same as that of the input image, and its height is the value of the inputHeight parameter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryReduction\n\nSample Output\nFigure 111The result of using the CIHistogramDisplayFilter filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 8.0 and later.\n\nCIAreaMaximum\n\nReturns a single-pixel image that contains the maximum color components for the region of interest.\n\nLocalized Display Name\n\nArea Maximum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nImage component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaMinimum\n\nReturns a single-pixel image that contains the minimum color components for the region of interest.\n\nLocalized Display Name\n\nArea Minimum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nImage component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaMaximumAlpha\n\nReturns a single-pixel image that contains the color vector with the maximum alpha value for the region of interest.\n\nLocalized Display Name\n\nArea Maximum Alpha\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nIf more than one pixel exists with the maximum alpha value, Core Image returns the vector that has the lowest x and y coordinate. Image component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaMinimumAlpha\n\nReturns a single-pixel image that contains the color vector with the minimum alpha value for the region of interest.\n\nLocalized Display Name\n\nArea Minimum Alpha\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nIf more than one pixel exists with the minimum alpha value, Core Image returns the vector that has the lowest x and y coordinate. Image component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCICategorySharpen\nCISharpenLuminance\n\nIncreases image detail by sharpening.\n\nLocalized Display Name\n\nSharpen Luminance\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.40\n\nDiscussion\n\nIt operates on the luminance of the image; the chrominance of the pixels remains unaffected.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategorySharpen\n\nSample Output\nFigure 112The result of using the CISharpenLuminance filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIUnsharpMask\n\nIncreases the contrast of the edges between pixels of different colors in an image.\n\nLocalized Display Name\n\nUnsharp Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 2.50\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategorySharpen\n\nSample Output\nFigure 113The result of using the CIUnsharpMask filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICategoryStylize\nCIBlendWithAlphaMask\n\nUses alpha values from a mask to interpolate between an image and the background.\n\nLocalized Display Name\n\nBlend With Alpha Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\n\ninputMaskImage\t\n\nA CIImage object whose display name is Mask Image.\n\nDiscussion\n\nWhen a mask alpha value is 0.0, the result is the background. When the mask alpha value is 1.0, the result is the image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 114The result of using the CIBlendWithAlphaMask filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIBlendWithMask\n\nUses values from a grayscale mask to interpolate between an image and the background.\n\nLocalized Display Name\n\nBlend With Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\n\ninputMaskImage\t\n\nA CIImage object whose display name is Mask Image.\n\nDiscussion\n\nWhen a mask value is 0.0, the result is the background. When the mask value is 1.0, the result is the image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 115The result of using the CIBlendWithMask filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIBloom\n\nSoftens edges and applies a pleasant glow to an image.\n\nLocalized Display Name\n\nBloom\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.5\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 116The result of using the CIBloom filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIComicEffect\n\nSimulates a comic book drawing by outlining edges and applying a color halftone effect.\n\nLocalized Display Name\n\nComic Effect\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 117The result of using the CIComicEffect filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIConvolution3X3\n\nModifies pixel values by performing a 3x3 matrix convolution.\n\nLocalized Display Name\n\n3 by 3 convolution\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 1 0 0 0 0] Identity: [0 0 0 0 1 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 3x3 weight matrix and the 3x3 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of one pixel horizontally or vertically).\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements, as shown in the figure below.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 118The result of using the CIConvolution3X3 filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIConvolution5X5\n\nModifies pixel values by performing a 5x5 matrix convolution.\n\nLocalized Display Name\n\n5 by 5 convolution\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0] Identity: [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 5x5 weight matrix and the 5x5 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of two pixels horizontally or vertically).\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 119The result of using the CIConvolution5X5 filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIConvolution7X7\n\nModifies pixel values by performing a 7x7 matrix convolution.\n\nLocalized Display Name\n\n7 by 7 convolution\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n\nIdentity: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 7x7 weight matrix and the 7x7 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of three pixels horizontally or vertically).\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 120The result of using the CIConvolution7X7 filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 9 and later.\n\nCIConvolution9Horizontal\n\nModifies pixel values by performing a 9-element horizontal convolution.\n\nLocalized Display Name\n\nCIConvolution9Horizontal\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 1 0 0 0 0] Identity: [0 0 0 0 1 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 9x1 weight matrix and the 9x1 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of four pixels horizontally). Unlike convolution filters which use square matrices, this filter can only produce effects along a horizontal axis, but it can be combined with CIConvolution9Vertical to approximate the effect of certain 9x9 weight matrices.\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 121The result of using the CIConvolution9Horizontal filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIConvolution9Vertical\n\nModifies pixel values by performing a 9-element vertical convolution.\n\nLocalized Display Name\n\nCIConvolution9Vertical\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 1 0 0 0 0] Identity: [0 0 0 0 1 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 1x9 weight matrix and the 1x9 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of four pixels vertically). Unlike convolution filters which use square matrices, this filter can only produce effects along a vertical axis, but it can be combined with CIConvolution9Vertical to approximate the effect of certain 9x9 weight matrices.\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 122The result of using the CIConvolution9Vertical filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCICrystallize\n\nCreates polygon-shaped color blocks by aggregating source pixel-color values.\n\nLocalized Display Name\n\nCrystallize\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 20.00\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 123The result of using the CICrystallize filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIDepthOfField\n\nSimulates a depth of field effect.\n\nLocalized Display Name\n\nDepth of Field\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint0\t\n\nThe focused region of the image stretches in a line between inputPoint0 and inputPoint1 of the image. A CIVector object whose attribute type is CIAttributeTypePosition.\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\n\ninputSaturation\t\n\nA saturation effect applied to the in-focus regions of the image. An NSNumber object whose attribute type is CIAttributeTypeScalar. This value indications the amount to adjust the saturation on the in-focus portion of the image.\n\n\ninputUnsharpMaskRadius\t\n\nSpecifies the radius of the unsharp mask effect applied to the in-focus area. An NSNumber object whose attribute type is CIAttributeTypeScalar.\n\n\ninputUnsharpMaskIntensity\t\n\nSpecifies the intensity of the unsharp mask effect applied to the in-focus area. An NSNumber object whose attribute type is CIAttributeTypeScalar.\n\n\ninputRadius\t\n\nControls how much the out-of-focus regions are blurred. An NSNumber object whose attribute type is CIAttributeTypeScalar. This value specifies the distance from the center of the effect.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 124The result of using the CIDepthOfField filter \nAvailability\n\nAvailable in OS X v10.6 and later and in iOS 9 and later.\n\nCIEdges\n\nFinds all edges in an image and displays them in color.\n\nLocalized Display Name\n\nEdges\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 125The result of using the CIEdges filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIEdgeWork\n\nProduces a stylized black-and-white rendition of an image that looks similar to a woodblock cutout.\n\nLocalized Display Name\n\nEdge Work\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 3.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 126The result of using the CIEdgeWork filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIGloom\n\nDulls the highlights of an image.\n\nLocalized Display Name\n\nGloom\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.5\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 127The result of using the CIGloom filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHeightFieldFromMask\n\nProduces a continuous three-dimensional, loft-shaped height field from a grayscale mask.\n\nLocalized Display Name\n\nHeight Field From Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\nDiscussion\n\nThe white values of the mask define those pixels that are inside the height field while the black values define those pixels that are outside. The field varies smoothly and continuously inside the mask, reaching the value 0 at the edge of the mask. You can use this filter with the CIShadedMaterial filter to produce extremely realistic shaded objects.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 128The result of using the CIHeightFieldFromMask filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIHexagonalPixellate\n\nMaps an image to colored hexagons whose color is defined by the replaced pixels.\n\nLocalized Display Name\n\nCIHexagonalPixellate\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 8.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 129The result of using the CIHexagonalPixellate filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIHighlightShadowAdjust\n\nAdjust the tonal mapping of an image while preserving spatial detail.\n\nLocalized Display Name\n\nHighlight and Shadows\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputHighlightAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Highlight Amount.\n\nDefault value: 1.00\n\n\ninputShadowAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Shadow Amount.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 130The result of using the CIHighlightShadowAdjust filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCILineOverlay\n\nCreates a sketch that outlines the edges of an image in black.\n\nLocalized Display Name\n\nLine Overlay\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputNRNoiseLevel\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is NR Noise Level.\n\nDefault value: 0.07\n\n\ninputNRSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is NR Sharpness.\n\nDefault value: 0.71\n\n\ninputEdgeIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Edge Intensity.\n\nDefault value: 1.00\n\n\ninputThreshold\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Threshold.\n\nDefault value: 0.10 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast.\n\nDefault value: 50.00\n\nDiscussion\n\nThe portions of the image that are not outlined are transparent.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 131The result of using the CILineOverlay filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIPixellate\n\nMakes an image blocky by mapping the image to colored squares whose color is defined by the replaced pixels.\n\nLocalized Display Name\n\nPixellate\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 8.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 132The result of using the CIPixellate filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPointillize\n\nRenders the source image in a pointillistic style.\n\nLocalized Display Name\n\nPointillize\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 20.00\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 133The result of using the CIPointillize filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIShadedMaterial\n\nProduces a shaded image from a height field.\n\nLocalized Display Name\n\nShaded Material\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputShadingImage\t\n\nA CIImage object whose display name is Shading Image.\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 10.00\n\nDiscussion\n\nThe height field is defined to have greater heights with lighter shades, and lesser heights (lower areas) with darker shades. You can combine this filter with the CIHeightFieldFromMask filter to produce quick shadings of masks, such as text.\n\nThis filter sets the input image as a height-field (multiplied by the scale parameter), and computes a normal vector for each pixel. It then uses that normal vector to look up the reflected color for that direction in the input shading image.\n\nThe input shading image contains the picture of a hemisphere, which defines the way the surface is shaded. The look-up coordinate for a normal vector is:\n\n(normal.xy + 1.0) * 0.5 * vec2(shadingImageWidth, shadingImageHeight)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 134The result of using the CIShadedMaterial filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCISpotColor\n\nReplaces one or more color ranges with spot colors.\n\nLocalized Display Name\n\nSpot Color\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenterColor1\t\n\nA CIColor object whose display name is Center Color 1.\n\n\ninputReplacementColor1\t\n\nA CIColor object whose display name is Replacement Color 1.\n\n\ninputCloseness1\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Closeness1.\n\nDefault value: 0.22\n\n\ninputContrast1\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast 1.\n\nDefault value: 0.98\n\n\ninputCenterColor2\t\n\nA CIColor object whose display name is Center Color 2.\n\n\ninputReplacementColor2\t\n\nA CIColor object whose display name is Replacement Color 2.\n\n\ninputCloseness2\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Closeness 2.\n\nDefault value: 0.15\n\n\ninputContrast2\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast 2.\n\nDefault value: 0.98\n\n\ninputCenterColor3\t\n\nA CIColor object whose display name is Center Color 3.\n\n\ninputReplacementColor3\t\n\nA CIColor object whose display name is Replacement Color 3.\n\n\ninputCloseness3\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Closeness 3.\n\nDefault value: 0.50\n\n\ninputContrast3\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast 3.\n\nDefault value: 0.99\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 135The result of using the CISpotColor filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCISpotLight\n\nApplies a directional spotlight effect to an image.\n\nLocalized Display Name\n\nSpot Light\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputLightPosition\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition3 and whose display name is Light Position.\n\nDefault value: [400 600 150]\n\n\ninputLightPointsAt\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition3 and whose display name is Light Points At.\n\nDefault value: [200 200 0]\n\n\ninputBrightness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Brightness.\n\nDefault value: 3.00\n\n\ninputConcentration\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Concentration.\n\nDefault value: 0.10\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 136The result of using the CISpotLight filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCICategoryTileEffect\nCIAffineClamp\n\nPerforms an affine transform on a source image and then clamps the pixels at the edge of the transformed image, extending them outwards.\n\nLocalized Display Name\n\nAffine Clamp\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTransform\t\n\nOn iOS, an NSValue object whose attribute type is CIAttributeTypeTransform. You must pass the transform as NSData using a statement similar to the following, where xform is an affine transform:\n\n[myFilter setValue:[NSValue valueWithBytes:&xform\nobjCType:@encode(CGAffineTransform)]\nforKey:@\"inputTransform\"];\n\nOn OS X, an NSAffineTransform object whose attribute type is CIAttributeTypeTransform.\n\nDiscussion\n\nThis filter performs similarly to the CIAffineTransform filter except that it produces an image with infinite extent. You can use this filter when you need to blur an image but you want to avoid a soft, black fringe along the edges.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 137The result of using the CIAffineClamp filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIAffineTile\n\nApplies an affine transform to an image and then tiles the transformed image.\n\nLocalized Display Name\n\nAffine Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTransform\t\n\nOn iOS, an NSValue object whose attribute type is CIAttributeTypeTransform. You must pass the transform as NSData using a statement similar to the following, where xform is an affine transform:\n\n[myFilter setValue:[NSValue valueWithBytes:&xform\nobjCType:@encode(CGAffineTransform)]\nforKey:@\"inputTransform\"];\n\nOn OS X, an NSAffineTransform object whose attribute type is CIAttributeTypeTransform.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 138The result of using the CIAffineTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIEightfoldReflectedTile\n\nProduces a tiled image from a source image by applying an 8-way reflected symmetry.\n\nLocalized Display Name\n\nCIEightfoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 139The result of using the CIEightfoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIFourfoldReflectedTile\n\nProduces a tiled image from a source image by applying a 4-way reflected symmetry.\n\nLocalized Display Name\n\nCIFourfoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputAcuteAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Acute Angle.\n\nDefault value: 1.57\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 140The result of using the CIFourfoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIFourfoldRotatedTile\n\nProduces a tiled image from a source image by rotating the source image at increments of 90 degrees.\n\nLocalized Display Name\n\nCIFourfoldRotatedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 141The result of using the CIFourfoldRotatedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIFourfoldTranslatedTile\n\nProduces a tiled image from a source image by applying 4 translation operations.\n\nLocalized Display Name\n\nCIFourfoldTranslatedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputAcuteAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Acute Angle.\n\nDefault value: 1.57\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 142The result of using the CIFourfoldTranslatedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIGlideReflectedTile\n\nProduces a tiled image from a source image by translating and smearing the image.\n\nLocalized Display Name\n\nCIGlideReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 143The result of using the CIGlideReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIKaleidoscope\n\nProduces a kaleidoscopic image from a source image by applying 12-way symmetry.\n\nLocalized Display Name\n\nKaleidoscope\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Count.\n\nDefault value: 6.00\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 144The result of using the CIKaleidoscope filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIOpTile\n\nSegments an image, applying any specified scaling and rotation, and then assembles the image again to give an op art appearance.\n\nLocalized Display Name\n\nOp Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 2.80\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 65.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 145The result of using the CIOpTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIParallelogramTile\n\nWarps an image by reflecting it in a parallelogram, and then tiles the result.\n\nLocalized Display Name\n\nParallelogram Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputAcuteAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Acute Angle.\n\nDefault value: 1.57\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 146The result of using the CIParallelogramTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIPerspectiveTile\n\nApplies a perspective transform to an image and then tiles the result.\n\nLocalized Display Name\n\nPerspective Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTopLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484]\n\n\ninputTopRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507]\n\n\ninputBottomRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140]\n\n\ninputBottomLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 147The result of using the CIPerspectiveTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISixfoldReflectedTile\n\nProduces a tiled image from a source image by applying a 6-way reflected symmetry.\n\nLocalized Display Name\n\nCISixfoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 148The result of using the CISixfoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCISixfoldRotatedTile\n\nProduces a tiled image from a source image by rotating the source image at increments of 60 degrees.\n\nLocalized Display Name\n\nCISixfoldRotatedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 149The result of using the CISixfoldRotatedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCITriangleKaleidoscope\n\nMaps a triangular portion of an input image to create a kaleidoscope effect.\n\nLocalized Display Name\n\nTriangle Kaleidoscope\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [150 150]\n\n\ninputSize\t\n\nA NSNumber object whose attribute type is CIAttributeTypeScalar.\n\nDefault value: 700.00\n\n\ninputRotation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle.\n\nDefault value: –0.36\n\n\ninputDecay\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar.\n\nDefault: 0.85\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 150The result of using the CITriangleKaleidoscope filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 6.0 and later.\n\nCITriangleTile\n\nMaps a triangular portion of image to a triangular area and then tiles the result.\n\nLocalized Display Name\n\nTriangle Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 151The result of using the CITriangleTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCITwelvefoldReflectedTile\n\nProduces a tiled image from a source image by rotating the source image at increments of 30 degrees.\n\nLocalized Display Name\n\nCITwelvefoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 152The result of using the CITwelvefoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCICategoryTransition\nCIAccordionFoldTransition\n\nTransitions from one image to another of differing dimensions by unfolding and crossfading.\n\nLocalized Display Name\n\nAccordion Fold Transition\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputBottomHeight\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is BottomHeight.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 0.00 Identity: 0.00\n\n\ninputNumberOfFolds\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is NumberOfFolds.\n\nDefault value: 3.00 Minimum: 1.00 Maximum: 50.00 Slider minimum: 1.00 Slider maximum: 10.00 Identity: 0.00\n\n\ninputFoldShadowAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is FoldShadowAmount.\n\nDefault value: 0.10 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\nMember Of\n\nCICategoryTransition, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 153The result of using the CIAccordionFoldTransition filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCIBarsSwipeTransition\n\nTransitions from one image to another by passing a bar over the source image.\n\nLocalized Display Name\n\nCIBarsSwipeTransition\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 3.14\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 30.00\n\n\ninputBarOffset\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Bar Offset.\n\nDefault value: 10.00\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 154The result of using the CIBarsSwipeTransition filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCICopyMachineTransition\n\nTransitions from one image to another by simulating the effect of a copy machine.\n\nLocalized Display Name\n\nCopy Machine\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 200.00\n\n\ninputOpacity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Opacity.\n\nDefault value: 1.30\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 155The result of using the CICopyMachineTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDisintegrateWithMaskTransition\n\nTransitions from one image to another using the shape defined by a mask.\n\nLocalized Display Name\n\nDisintegrate with Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputMaskImage\t\n\nA CIImage object whose display name is Mask Image.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputShadowRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Shadow Radius.\n\nDefault value: 8.00\n\n\ninputShadowDensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Shadow Density.\n\nDefault value: 0.65\n\n\ninputShadowOffset\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset and whose display name is Shadow Offset.\n\nDefault value: [0 -10]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 156The result of using the CIDisintegrateWithMaskTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDissolveTransition\n\nUses a dissolve to transition from one image to another.\n\nLocalized Display Name\n\nDissolve\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 157The result of using the CIDissolveTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIFlashTransition\n\nTransitions from one image to another by creating a flash.\n\nLocalized Display Name\n\nFlash\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputMaxStriationRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Maximum Striation Radius.\n\nDefault value: 2.58\n\n\ninputStriationStrength\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Strength.\n\nDefault value: 0.50\n\n\ninputStriationContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Contrast.\n\nDefault value: 1.38\n\n\ninputFadeThreshold\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Fade Threshold.\n\nDefault value: 0.85\n\nDiscussion\n\nThe flash originates from a point you specify. Small at first, it rapidly expands until the image frame is completely filled with the flash color. As the color fades, the target image begins to appear.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 158The result of using the CIFlashTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIModTransition\n\nTransitions from one image to another by revealing the target image through irregularly shaped holes.\n\nLocalized Display Name\n\nMod\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 2.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\n\ninputCompression\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Compression.\n\nDefault value: 300.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 159The result of using the CIModTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPageCurlTransition\n\nTransitions from one image to another by simulating a curling page, revealing the new image as the page curls.\n\nLocalized Display Name\n\nPage Curl\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputBacksideImage\t\n\nA CIImage object whose display name is Backside Image.\n\n\ninputShadingImage\t\n\nA CIImage object whose display name is Shading Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 160The result of using the CIPageCurlTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIPageCurlWithShadowTransition\n\nTransitions from one image to another by simulating a curling page, revealing the new image as the page curls.\n\nLocalized Display Name\n\nPage Curl With Shadow\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputBacksideImage\t\n\nA CIImage object whose display name is Backside Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 0 0] Identity: (null)\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: -3.14 Slider maximum: 3.14 Identity: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 100.00 Minimum: 0.01 Maximum: 0.00 Slider minimum: 0.01 Slider maximum: 400.00 Identity: 0.00\n\n\ninputShadowSize\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is ShadowSize.\n\nDefault value: 0.50 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputShadowAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is ShadowAmount.\n\nDefault value: 0.70 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputShadowExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is ShadowExtent.\n\nDefault value: [0 0 0 0] Identity: (null)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 161The result of using the CIPageCurlWithShadowTransition filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 9 and later.\n\nCIRippleTransition\n\nTransitions from one image to another by creating a circular wave that expands from the center point, revealing the new image in the wake of the wave.\n\nLocalized Display Name\n\nRipple\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputShadingImage\t\n\nA CIImage object whose display name is Shading Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 50.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 162The result of using the CIRippleTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCISwipeTransition\n\nTransitions from one image to another by simulating a swiping action.\n\nLocalized Display Name\n\nSwipe\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 300.00\n\n\ninputOpacity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Opacity.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 163The result of using the CISwipeTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCopyright © 2018 Apple Inc. All rights reserved. Terms of Use | Privacy Policy | Updated: 2016-03-10\n\n[an error occurred while processing this directive]"
  },
  {
    "title": "Core Image Filter Reference",
    "url": "https://developer.apple.com/library/archive/documentation/GraphicsImaging/Reference/CoreImageFilterReference/index.html/#/",
    "html": "[an error occurred while processing this directive]\n\nDocumentation Archive\n\nDeveloper\n\nCore Image Filter Reference\n\nFilters\nCICategoryBlur\nCICategoryColorAdjustment\nCICategoryColorEffect\nCICategoryCompositeOperation\nCICategoryDistortionEffect\nCICategoryGenerator\nCICategoryGeometryAdjustment\nCICategoryGradient\nCICategoryHalftoneEffect\nCICategoryReduction\nCICategorySharpen\nCICategoryStylize\nCICategoryTileEffect\nCICategoryTransition\nRelated Documentation\nCore Image Programming Guide\nRevision History\nDocument Revision History\nOptions\nDeployment Target: \n Hide deprecated symbols D\n Auto-expand all symbols A\nOn This Page\nCIBoxBlur\nCIDiscBlur\nCIGaussianBlur\nCIMaskedVariableBlur\nCIMedianFilter\nCIMotionBlur\nCINoiseReduction\nCIZoomBlur\nCIColorClamp\nCIColorControls\nCIColorMatrix\nCIColorPolynomial\nCIExposureAdjust\nCIGammaAdjust\nCIHueAdjust\nCILinearToSRGBToneCurve\nCISRGBToneCurveToLinear\nCITemperatureAndTint\nCIToneCurve\nCIVibrance\nCIWhitePointAdjust\nCIColorCrossPolynomial\nCIColorCube\nCIColorCubeWithColorSpace\nCIColorInvert\nCIColorMap\nCIColorMonochrome\nCIColorPosterize\nCIFalseColor\nCIMaskToAlpha\nCIMaximumComponent\nCIMinimumComponent\nCIPhotoEffectChrome\nCIPhotoEffectFade\nCIPhotoEffectInstant\nCIPhotoEffectMono\nCIPhotoEffectNoir\nCIPhotoEffectProcess\nCIPhotoEffectTonal\nCIPhotoEffectTransfer\nCISepiaTone\nCIVignette\nCIVignetteEffect\nCIAdditionCompositing\nCIColorBlendMode\nCIColorBurnBlendMode\nCIColorDodgeBlendMode\nCIDarkenBlendMode\nCIDifferenceBlendMode\nCIDivideBlendMode\nCIExclusionBlendMode\nCIHardLightBlendMode\nCIHueBlendMode\nCILightenBlendMode\nCILinearBurnBlendMode\nCILinearDodgeBlendMode\nCILuminosityBlendMode\nCIMaximumCompositing\nCIMinimumCompositing\nCIMultiplyBlendMode\nCIMultiplyCompositing\nCIOverlayBlendMode\nCIPinLightBlendMode\nCISaturationBlendMode\nCIScreenBlendMode\nCISoftLightBlendMode\nCISourceAtopCompositing\nCISourceInCompositing\nCISourceOutCompositing\nCISourceOverCompositing\nCISubtractBlendMode\nCIBumpDistortion\nCIBumpDistortionLinear\nCICircleSplashDistortion\nCICircularWrap\nCIDroste\nCIDisplacementDistortion\nCIGlassDistortion\nCIGlassLozenge\nCIHoleDistortion\nCILightTunnel\nCIPinchDistortion\nCIStretchCrop\nCITorusLensDistortion\nCITwirlDistortion\nCIVortexDistortion\nCIAztecCodeGenerator\nCICheckerboardGenerator\nCICode128BarcodeGenerator\nCIConstantColorGenerator\nCILenticularHaloGenerator\nCIPDF417BarcodeGenerator\nCIQRCodeGenerator\nCIRandomGenerator\nCIStarShineGenerator\nCIStripesGenerator\nCISunbeamsGenerator\nCIAffineTransform\nCICrop\nCILanczosScaleTransform\nCIPerspectiveCorrection\nCIPerspectiveTransform\nCIPerspectiveTransformWithExtent\nCIStraightenFilter\nCIGaussianGradient\nCILinearGradient\nCIRadialGradient\nCISmoothLinearGradient\nCICircularScreen\nCICMYKHalftone\nCIDotScreen\nCIHatchedScreen\nCILineScreen\nCIAreaAverage\nCIAreaHistogram\nCIRowAverage\nCIColumnAverage\nCIHistogramDisplayFilter\nCIAreaMaximum\nCIAreaMinimum\nCIAreaMaximumAlpha\nCIAreaMinimumAlpha\nCISharpenLuminance\nCIUnsharpMask\nCIBlendWithAlphaMask\nCIBlendWithMask\nCIBloom\nCIComicEffect\nCIConvolution3X3\nCIConvolution5X5\nCIConvolution7X7\nCIConvolution9Horizontal\nCIConvolution9Vertical\nCICrystallize\nCIDepthOfField\nCIEdges\nCIEdgeWork\nCIGloom\nCIHeightFieldFromMask\nCIHexagonalPixellate\nCIHighlightShadowAdjust\nCILineOverlay\nCIPixellate\nCIPointillize\nCIShadedMaterial\nCISpotColor\nCISpotLight\nCIAffineClamp\nCIAffineTile\nCIEightfoldReflectedTile\nCIFourfoldReflectedTile\nCIFourfoldRotatedTile\nCIFourfoldTranslatedTile\nCIGlideReflectedTile\nCIKaleidoscope\nCIOpTile\nCIParallelogramTile\nCIPerspectiveTile\nCISixfoldReflectedTile\nCISixfoldRotatedTile\nCITriangleKaleidoscope\nCITriangleTile\nCITwelvefoldReflectedTile\nCIAccordionFoldTransition\nCIBarsSwipeTransition\nCICopyMachineTransition\nCIDisintegrateWithMaskTransition\nCIDissolveTransition\nCIFlashTransition\nCIModTransition\nCIPageCurlTransition\nCIPageCurlWithShadowTransition\nCIRippleTransition\nCISwipeTransition\nCore Image Filter Reference\n\nInherits From\n\nNot Applicable\n\nConforms To\n\nNot Applicable\n\nImport Statement\n\nNot applicable\n\nAvailability\n\nNot Applicable\n\nThis reference describes the built-in filters available through the Core Image API. You can also find out about the built-in filters on a system by using the Core Image API. See Core Image Programming Guide.\n\nFilters\nCICategoryBlur\nCIBoxBlur\n\nBlurs an image using a box-shaped convolution kernel.\n\nLocalized Display Name\n\nCIBoxBlur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 1The result of using the CIBoxBlur filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIDiscBlur\n\nBlurs an image using a disc-shaped convolution kernel.\n\nLocalized Display Name\n\nCIDiscBlur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 8.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 2The result of using the CIDiscBlur filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIGaussianBlur\n\nSpreads source pixels by an amount specified by a Gaussian distribution.\n\nLocalized Display Name\n\nGaussian Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 3The result of using the CIGaussianBlur filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaskedVariableBlur\n\nBlurs the source image according to the brightness levels in a mask image.\n\nLocalized Display Name\n\nMasked Variable Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputMask\t\n\nA CIImage object whose display name is Mask.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 100.00 Identity: 0.00\n\nDiscussion\n\nShades of gray in the mask image vary the blur radius from zero (where the mask image is black) to the radius specified in the inputRadius parameter (where the mask image is white).\n\nMember Of\n\nCICategoryBlur, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 4The result of using the CIMaskedVariableBlur filter \nAvailability\n\nAvailable in OS X v10.10 and later.\n\nCIMedianFilter\n\nComputes the median value for a group of neighboring pixels and replaces each pixel value with the median.\n\nLocalized Display Name\n\nMedian\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nDiscussion\n\nThe effect is to reduce noise.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 5The result of using the CIMedianFilter filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIMotionBlur\n\nBlurs an image to simulate the effect of using a camera that moves a specified angle and distance while capturing the image.\n\nLocalized Display Name\n\nMotion Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 20.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 6The result of using the CIMotionBlur filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCINoiseReduction\n\nReduces noise using a threshold value to define what is considered noise.\n\nLocalized Display Name\n\nNoise Reduction\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputNoiseLevel\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Noise Level.\n\nDefault value: 0.02\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.40\n\nDiscussion\n\nSmall changes in luminance below that value are considered noise and get a noise reduction treatment, which is a local blur. Changes above the threshold value are considered edges, so they are sharpened.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 7The result of using the CINoiseReduction filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIZoomBlur\n\nSimulates the effect of zooming the camera while capturing the image.\n\nLocalized Display Name\n\nZoom Blur\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Amount.\n\nDefault value: 20.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryBlur\n\nSample Output\nFigure 8The result of using the CIZoomBlur filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCICategoryColorAdjustment\nCIColorClamp\n\nModifies color values to keep them within a specified range.\n\nLocalized Display Name\n\nColor Clamp\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputMinComponents\t\n\nRGBA values for the lower end of the range. A CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is MinComponents.\n\nDefault value: [0 0 0 0] Identity: [0 0 0 0]\n\n\ninputMaxComponents\t\n\nRGBA values for the upper end of the range. A CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is MaxComponents.\n\nDefault value: [1 1 1 1] Identity: [1 1 1 1]\n\nDiscussion\n\nAt each pixel, color component values less than those in inputMinComponents will be increased to match those in inputMinComponents, and color component values greater than those in inputMaxComponents will be decreased to match those in inputMaxComponents.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 9The result of using the CIColorClamp filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIColorControls\n\nAdjusts saturation, brightness, and contrast values.\n\nLocalized Display Name\n\nColor Controls\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputSaturation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Saturation.\n\nDefault value: 1.00\n\n\ninputBrightness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Brightness.\n\n\ninputContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast.\n\nDefault value: 1.00\n\nDiscussion\n\nTo calculate saturation, this filter linearly interpolates between a grayscale image (saturation = 0.0) and the original image (saturation = 1.0). The filter supports extrapolation: For values large than 1.0, it increases saturation.\n\nTo calculate contrast, this filter uses the following formula:\n\n(color.rgb - vec3(0.5)) * contrast + vec3(0.5)\n\nThis filter calculates brightness by adding a bias value:\n\ncolor.rgb + vec3(brightness)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 10The result of using the CIColorControls filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIColorMatrix\n\nMultiplies source color values and adds a bias factor to each color component.\n\nLocalized Display Name\n\nColor Matrix\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRVector\t\n\nA CIVector object whose display name is Red Vector.\n\nDefault value: [1 0 0 0]\n\n\ninputGVector\t\n\nA CIVector object whose display name is Green Vector.\n\nDefault value: [0 1 0 0]\n\n\ninputBVector\t\n\nA CIVector object whose display name is Blue Vector.\n\nDefault value: [0 0 1 0]\n\n\ninputAVector\t\n\nA CIVector object whose display name is Alpha Vector.\n\nDefault value: [0 0 0 1]\n\n\ninputBiasVector\t\n\nA CIVector object whose display name is Bias Vector.\n\nDefault value: [0 0 0 0]\n\nDiscussion\n\nThis filter performs a matrix multiplication, as follows, to transform the color vector:\n\ns.r = dot(s, redVector)\ns.g = dot(s, greenVector)\ns.b = dot(s, blueVector)\ns.a = dot(s, alphaVector)\ns = s + bias\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 11The result of using the CIColorMatrix filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIColorPolynomial\n\nModifies the pixel values in an image by applying a set of cubic polynomials.\n\nLocalized Display Name\n\nColor Polynomial\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRedCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is RedCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\n\ninputGreenCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is GreenCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\n\ninputBlueCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is BlueCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\n\ninputAlphaCoefficients\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is AlphaCoefficients.\n\nDefault value: [0 1 0 0] Identity: [0 1 0 0]\n\nDiscussion\n\nFor each pixel, the value of each color component is treated as the input to a cubic polynomial, whose coefficients are taken from the corresponding input coefficients parameter in ascending order. Equivalent to the following formula:\n\nr = rCoeff[0] + rCoeff[1] * r + rCoeff[2] * r*r + rCoeff[3] * r*r*r\ng = gCoeff[0] + gCoeff[1] * g + gCoeff[2] * g*g + gCoeff[3] * g*g*g\nb = bCoeff[0] + bCoeff[1] * b + bCoeff[2] * b*b + bCoeff[3] * b*b*b\na = aCoeff[0] + aCoeff[1] * a + aCoeff[2] * a*a + aCoeff[3] * a*a*a\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 12The result of using the CIColorPolynomial filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIExposureAdjust\n\nAdjusts the exposure setting for an image similar to the way you control exposure for a camera when you change the F-stop.\n\nLocalized Display Name\n\nExposure Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputEV\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is EV.\n\nDefault value: 0.50\n\nDiscussion\n\nThis filter multiplies the color values, as follows, to simulate exposure change by the specified F-stops:\n\ns.rgb * pow(2.0, ev)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 13The result of using the CIExposureAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIGammaAdjust\n\nAdjusts midtone brightness.\n\nLocalized Display Name\n\nGamma Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPower\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Power.\n\nDefault value: 0.75\n\nDiscussion\n\nThis filter is typically used to compensate for nonlinear effects of displays. Adjusting the gamma effectively changes the slope of the transition between black and white. It uses the following formula:\n\npow(s.rgb, vec3(power))\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 14The result of using the CIGammaAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIHueAdjust\n\nChanges the overall hue, or tint, of the source pixels.\n\nLocalized Display Name\n\nHue Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nDiscussion\n\nThis filter essentially rotates the color cube around the neutral axis.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 15The result of using the CIHueAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCILinearToSRGBToneCurve\n\nMaps color intensity from a linear gamma curve to the sRGB color space.\n\nLocalized Display Name\n\nLinear to sRGB Tone Curve\n\nParameters\ninputImage\t\n\nA CIImage object whose attribute type is CIAttributeTypeImage and whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 16The result of using the CILinearToSRGBToneCurve filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 7.0 and later.\n\nCISRGBToneCurveToLinear\n\nMaps color intensity from the sRGB color space to a linear gamma curve.\n\nLocalized Display Name\n\nsRGB Tone Curve to Linear\n\nParameters\ninputImage\t\n\nA CIImage object whose attribute type is CIAttributeTypeImage and whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 17The result of using the CISRGBToneCurveToLinear filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 7.0 and later.\n\nCITemperatureAndTint\n\nAdapts the reference white point for an image.\n\nLocalized Display Name\n\nTemperature and Tint\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputNeutral\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset and whose display name is Neutral.\n\nDefault value: [6500, 0]\n\n\ninputTargetNeutral\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset and whose display name is TargetNeutral\n\nDefault value: [6500, 0]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 18The result of using the CITemperatureAndTint filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCIToneCurve\n\nAdjusts tone response of the R, G, and B channels of an image.\n\nLocalized Display Name\n\nTone Curve\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0, 0]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0.25, 0.25]\n\n\ninputPoint2\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0.5, 0.5]\n\n\ninputPoint3\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [0.75, 0.75]\n\n\ninputPoint4\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset.\n\nDefault value: [1, 1]\n\nDiscussion\n\nThe input points are five x,y values that are interpolated using a spline curve. The curve is applied in a perceptual (gamma 2) version of the working space.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 19The result of using the CIToneCurve filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCIVibrance\n\nAdjusts the saturation of an image while keeping pleasing skin tones.\n\nLocalized Display Name\n\nVibrance\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Amount.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 20The result of using the CIVibrance filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCIWhitePointAdjust\n\nAdjusts the reference white point for an image and maps all colors in the source using the new reference.\n\nLocalized Display Name\n\nWhite Point Adjust\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputColor\t\n\nA CIColor object whose display name is Color.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryColorAdjustment\n\nSample Output\nFigure 21The result of using the CIWhitePointAdjust filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCICategoryColorEffect\nCIColorCrossPolynomial\n\nModifies the pixel values in an image by applying a set of polynomial cross-products.\n\nLocalized Display Name\n\nColor Cross Polynomial\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRedCoefficients\t\n\nA CIVector object whose display name is RedCoefficients.\n\nDefault value: [1 0 0 0 0 0 0 0 0 0] Identity: [1 0 0 0 0 0 0 0 0 0]\n\n\ninputGreenCoefficients\t\n\nA CIVector object whose display name is GreenCoefficients.\n\nDefault value: [0 1 0 0 0 0 0 0 0 0] Identity: [0 1 0 0 0 0 0 0 0 0]\n\n\ninputBlueCoefficients\t\n\nA CIVector object whose display name is BlueCoefficients.\n\nDefault value: [0 0 1 0 0 0 0 0 0 0] Identity: [0 0 1 0 0 0 0 0 0 0]\n\nDiscussion\n\nEach component in an output pixel out is determined using the component values in the input pixel in according to a polynomial cross product with the input coefficients. That is, the red component of the output pixel is calculated using the inputRedCoefficients parameter (abbreviated rC below) using the following formula:\n\nout.r = in.r * rC[0] + in.g * rC[1] + in.b * rC[2]\n+ in.r * in.r * rC[3] + in.g * in.g * rC[4] + in.b * in.b * rC[5]\n+ in.r * in.g * rC[6] + in.g * in.b * rC[7] + in.b * in.r * rC[8]\n+ rC[9]\n\nThen, the formula is repeated to calculate the blue and green components of the output pixel using the blue and green coefficients, respectively.\n\nThis filter can be used for advanced color space and tone mapping conversions, such as imitating the color reproduction of vintage photography film.\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 22The result of using the CIColorCrossPolynomial filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIColorCube\n\nUses a three-dimensional color table to transform the source image pixels.\n\nLocalized Display Name\n\nColor Cube\n\nParameters\ninputImage\t\n\nThe image to be transformed. (A CIImage object whose display name is Image.)\n\n\ninputCubeDimension\t\n\nThe length, in texels, of each side of the cube texture. (An NSNumber object whose attribute type is CIAttributeTypeCount and whose display name is Cube Dimension.)\n\nDefault value: 2.00\n\n\ninputCubeData\t\n\nThe cube texture data to use as a color lookup table. (An NSData object whose display name is Cube Data.)\n\nDiscussion\n\nThis filter maps color values in the input image to new color values using a three-dimensional color lookup table (also called a CLUT or color cube). For each RGBA pixel in the input image, the filter uses the R, G, and B component values as indices to identify a location in the table; the RGBA value at that location becomes the RGBA value of the output pixel.\n\nUse the inputCubeData parameter to provide data formatted for use as a color lookup table, and the inputCubeDimension parameter to specify the size of the table. This data should be an array of texel values in 32-bit floating-point RGBA linear premultiplied format. The inputCubeDimension parameter identifies the size of the cube by specifying the length of one side, so the size of the array should be inputCubeDimension cubed times the size of a single texel value. In the color table, the R component varies fastest, followed by G, then B. Listing 1 shows a basic pattern for creating color cube data.\n\nListing 1Creating a Color Table for the CIColorCube Filter\n// Allocate and opulate color cube table\nconst unsigned int size = 64;\nfloat *cubeData = (float *)malloc(size * size * size * sizeof(float) * 4);\nfor (int b = 0; b < size; b++) {\nfor (int g = 0; g < size; r++) {\nfor (int r = 0; r < size; r ++) {\ncubeData[b][g][r][0] = <# output R value #>;\ncubeData[b][g][r][1] = <# output G value #>;\ncubeData[b][g][r][2] = <# output B value #>;\ncubeData[b][g][r][3] = <# output A value #>;\n}\n}\n}\n// Put the table in a data object and create the filter\nNSData *data = [NSData dataWithBytesNoCopy:cubeData\nlength:cubeDataSize\nfreeWhenDone:YES];\nCIFilter *colorCube = [CIFilter filterWithName:@\"CIColorCube\"\nwithInputParameters:@{\n@\"inputCubeDimension\": @(size),\n@\"inputCubeData\": data,\n}];\n\nFor another example of this filter in action, see Chroma Key Filter Recipe in Core Image Programming Guide.\n\nNote\n\nAs with all color filters, this operation is performed in the working color space of the Core Image context (CIContext) executing the filter, using unpremultiplied pixel color values. If you see unexpected results, verify that your output and working color spaces are set up as intended.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 23The result of using the CIColorCube filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorCubeWithColorSpace\n\nUses a three-dimensional color table to transform the source image pixels and maps the result to a specified color space.\n\nLocalized Display Name\n\nColor Cube with ColorSpace\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCubeDimension\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeCount and whose display name is Cube Dimension.\n\nDefault value: 2.00 Minimum: 2.00 Maximum: 128.00 Identity: 2.00\n\n\ninputCubeData\t\n\nAn NSData object whose display name is Cube Data.\n\n\ninputColorSpace\t\n\nAn CGColorSpaceRef object whose display name is ColorSpace.\n\nDiscussion\n\nSee CIColorCube for more details on the color cube operation. To provide a CGColorSpaceRef object as the input parameter, cast it to type id. With the default color space (null), which is equivalent to kCGColorSpaceGenericRGBLinear, this filter’s effect is identical to that of CIColorCube.\n\nFigure 24 uses the same color cube as Figure 23, but with the sRGB color space.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 24The result of using the CIColorCubeWithColorSpace filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIColorInvert\n\nInverts the colors in an image.\n\nLocalized Display Name\n\nColor Invert\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 25The result of using the CIColorInvert filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorMap\n\nPerforms a nonlinear transformation of source color values using mapping values provided in a table.\n\nLocalized Display Name\n\nColor Map\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputGradientImage\t\n\nA CIImage object whose attribute type is CIAttributeTypeGradient and whose display name is Gradient Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 26The result of using the CIColorMap filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorMonochrome\n\nRemaps colors so they fall within shades of a single color.\n\nLocalized Display Name\n\nColor Monochrome\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 27The result of using the CIColorMonochrome filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorPosterize\n\nRemaps red, green, and blue color components to the number of brightness values you specify for each color component.\n\nLocalized Display Name\n\nColor Posterize\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputLevels\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Levels.\n\nDefault value: 6.00\n\nDiscussion\n\nThis filter flattens colors to achieve a look similar to that of a silk-screened poster.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 28The result of using the CIColorPosterize filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIFalseColor\n\nMaps luminance to a color ramp of two colors.\n\nLocalized Display Name\n\nFalse Color\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\nDiscussion\n\nFalse color is often used to process astronomical and other scientific data, such as ultraviolet and x-ray images.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 29The result of using the CIFalseColor filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaskToAlpha\n\nConverts a grayscale image to a white image that is masked by alpha.\n\nLocalized Display Name\n\nMask To Alpha\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nDiscussion\n\nThe white values from the source image produce the inside of the mask; the black values become completely transparent.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 30The result of using the CIMaskToAlpha filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaximumComponent\n\nReturns a grayscale image from max(r,g,b).\n\nLocalized Display Name\n\nMaximum Component\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIMinimumComponent\n\nReturns a grayscale image from min(r,g,b).\n\nLocalized Display Name\n\nMinimum Component\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIPhotoEffectChrome\n\nApplies a preconfigured set of effects that imitate vintage photography film with exaggerated color.\n\nLocalized Display Name\n\nPhoto Effect Chrome\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 31The result of using the CIPhotoEffectChrome filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectFade\n\nApplies a preconfigured set of effects that imitate vintage photography film with diminished color.\n\nLocalized Display Name\n\nPhoto Effect Fade\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 32The result of using the CIPhotoEffectFade filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectInstant\n\nApplies a preconfigured set of effects that imitate vintage photography film with distorted colors.\n\nLocalized Display Name\n\nPhoto Effect Instant\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 33The result of using the CIPhotoEffectInstant filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectMono\n\nApplies a preconfigured set of effects that imitate black-and-white photography film with low contrast.\n\nLocalized Display Name\n\nPhoto Effect Mono\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 34The result of using the CIPhotoEffectMono filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectNoir\n\nApplies a preconfigured set of effects that imitate black-and-white photography film with exaggerated contrast.\n\nLocalized Display Name\n\nPhoto Effect Noir\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 35The result of using the CIPhotoEffectNoir filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectProcess\n\nApplies a preconfigured set of effects that imitate vintage photography film with emphasized cool colors.\n\nLocalized Display Name\n\nPhoto Effect Process\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 36The result of using the CIPhotoEffectProcess filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectTonal\n\nApplies a preconfigured set of effects that imitate black-and-white photography film without significantly altering contrast.\n\nLocalized Display Name\n\nPhoto Effect Tonal\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 37The result of using the CIPhotoEffectTonal filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIPhotoEffectTransfer\n\nApplies a preconfigured set of effects that imitate vintage photography film with emphasized warm colors.\n\nLocalized Display Name\n\nPhoto Effect Transfer\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryXMPSerializable, CICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 38The result of using the CIPhotoEffectTransfer filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCISepiaTone\n\nMaps the colors of an image to various shades of brown.\n\nLocalized Display Name\n\nSepia Tone\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 39The result of using the CISepiaTone filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCIVignette\n\nReduces the brightness of an image at the periphery.\n\nLocalized Display Name\n\nVignette\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 1.00\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.0\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 40The result of using the CIVignette filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 5.0 and later.\n\nCIVignetteEffect\n\nModifies the brightness of an image around the periphery of a specified region.\n\nLocalized Display Name\n\nVignette Effect\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150] Identity: (null)\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose display name is Radius.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 0.00 Identity: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryVideo, CICategoryColorEffect\n\nSample Output\nFigure 41The result of using the CIVignetteEffect filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCICategoryCompositeOperation\nCIAdditionCompositing\n\nAdds color components to achieve a brightening effect.\n\nLocalized Display Name\n\nAddition\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis filter is typically used to add highlights and lens flare effects. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 42The result of using the CIAdditionCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorBlendMode\n\nUses the luminance values of the background with the hue and saturation values of the source image.\n\nLocalized Display Name\n\nColor Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis mode preserves the gray levels in the image. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 43The result of using the CIColorBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorBurnBlendMode\n\nDarkens the background image samples to reflect the source image samples.\n\nLocalized Display Name\n\nColor Burn Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that specify white do not produce a change. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 44The result of using the CIColorBurnBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIColorDodgeBlendMode\n\nBrightens the background image samples to reflect the source image samples.\n\nLocalized Display Name\n\nColor Dodge Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that specify black do not produce a change. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 45The result of using the CIColorDodgeBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDarkenBlendMode\n\nCreates composite image samples by choosing the darker samples (from either the source image or the background).\n\nLocalized Display Name\n\nDarken Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe result is that the background image samples are replaced by any source image samples that are darker. Otherwise, the background image samples are left unchanged. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 46The result of using the CIDarkenBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDifferenceBlendMode\n\nSubtracts either the source image sample color from the background image sample color, or the reverse, depending on which sample has the greater brightness value.\n\nLocalized Display Name\n\nDifference Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that are black produce no change; white inverts the background color values. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 47The result of using the CIDifferenceBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDivideBlendMode\n\nDivides the background image sample color from the source image sample color.\n\nLocalized Display Name\n\nDivide Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 48The result of using the CIDivideBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCIExclusionBlendMode\n\nProduces an effect similar to that produced by the CIDifferenceBlendMode filter but with lower contrast.\n\nLocalized Display Name\n\nExclusion Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nSource image sample values that are black do not produce a change; white inverts the background color values. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 49The result of using the CIExclusionBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHardLightBlendMode\n\nEither multiplies or screens colors, depending on the source image sample color.\n\nLocalized Display Name\n\nHard Light Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nIf the source image sample color is lighter than 50% gray, the background is lightened, similar to screening. If the source image sample color is darker than 50% gray, the background is darkened, similar to multiplying. If the source image sample color is equal to 50% gray, the source image is not changed. Image samples that are equal to pure black or pure white result in pure black or white. The overall effect is similar to what you would achieve by shining a harsh spotlight on the source image. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 50The result of using the CIHardLightBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHueBlendMode\n\nUses the luminance and saturation values of the background image with the hue of the input image.\n\nLocalized Display Name\n\nHue Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 51The result of using the CIHueBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILightenBlendMode\n\nCreates composite image samples by choosing the lighter samples (either from the source image or the background).\n\nLocalized Display Name\n\nLighten Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe result is that the background image samples are replaced by any source image samples that are lighter. Otherwise, the background image samples are left unchanged. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 52The result of using the CILightenBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILinearBurnBlendMode\n\nDarkens the background image samples to reflect the source image samples while also increasing contrast.\n\nLocalized Display Name\n\nLinear Burn Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe effect of this filter is similar to that of the CIColorBurnBlendMode filter, but more pronounced.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 53The result of using the CILinearBurnBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCILinearDodgeBlendMode\n\nBrightens the background image samples to reflect the source image samples while also increasing contrast.\n\nLocalized Display Name\n\nLinear Dodge Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe effect of this filter is similar to that of the CIColorDodgeBlendMode filter, but more pronounced.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 54The result of using the CILinearDodgeBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCILuminosityBlendMode\n\nUses the hue and saturation of the background image with the luminance of the input image.\n\nLocalized Display Name\n\nLuminosity Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis mode creates an effect that is inverse to the effect created by the CIColorBlendMode filter. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 55The result of using the CILuminosityBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMaximumCompositing\n\nComputes the maximum value, by color component, of two input images and creates an output image using the maximum values.\n\nLocalized Display Name\n\nMaximum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis is similar to dodging. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 56The result of using the CIMaximumCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMinimumCompositing\n\nComputes the minimum value, by color component, of two input images and creates an output image using the minimum values.\n\nLocalized Display Name\n\nMinimum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis is similar to burning. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 57The result of using the CIMinimumCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMultiplyBlendMode\n\nMultiplies the input image samples with the background image samples.\n\nLocalized Display Name\n\nMultiply Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis results in colors that are at least as dark as either of the two contributing sample colors. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 58The result of using the CIMultiplyBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIMultiplyCompositing\n\nMultiplies the color component of two input images and creates an output image using the multiplied values.\n\nLocalized Display Name\n\nMultiply\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis filter is typically used to add a spotlight or similar lighting effect to an image. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 59The result of using the CIMultiplyCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIOverlayBlendMode\n\nEither multiplies or screens the input image samples with the background image samples, depending on the background color.\n\nLocalized Display Name\n\nOverlay Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe result is to overlay the existing image samples while preserving the highlights and shadows of the background. The background color mixes with the source image to reflect the lightness or darkness of the background. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 60The result of using the CIOverlayBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPinLightBlendMode\n\nConditionally replaces background image samples with source image samples depending on the brightness of the source image samples.\n\nLocalized Display Name\n\nPin Light Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 61The result of using the CIPinLightBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCISaturationBlendMode\n\nUses the luminance and hue values of the background image with the saturation of the input image.\n\nLocalized Display Name\n\nSaturation Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nAreas of the background that have no saturation (that is, pure gray areas) do not produce a change. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 62The result of using the CISaturationBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIScreenBlendMode\n\nMultiplies the inverse of the input image samples with the inverse of the background image samples.\n\nLocalized Display Name\n\nScreen Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThis results in colors that are at least as light as either of the two contributing sample colors. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 63The result of using the CIScreenBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISoftLightBlendMode\n\nEither darkens or lightens colors, depending on the input image sample color.\n\nLocalized Display Name\n\nSoft Light Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nIf the source image sample color is lighter than 50% gray, the background is lightened, similar to dodging. If the source image sample color is darker than 50% gray, the background is darkened, similar to burning. If the source image sample color is equal to 50% gray, the background is not changed. Image samples that are equal to pure black or pure white produce darker or lighter areas, but do not result in pure black or white. The overall effect is similar to what you would achieve by shining a diffuse spotlight on the source image. The formula used to create this filter is described in the PDF specification, which is available online from the Adobe Developer Center. See PDF Reference and Adobe Extensions to the PDF Specification.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 64The result of using the CISoftLightBlendMode filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceAtopCompositing\n\nPlaces the input image over the background image, then uses the luminance of the background image to determine what to show.\n\nLocalized Display Name\n\nSource Atop\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe composite shows the background image and only those portions of the source image that are over visible parts of the background. The formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 65The result of using the CISourceAtopCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceInCompositing\n\nUses the background image to define what to leave in the input image, effectively cropping the input image.\n\nLocalized Display Name\n\nSource In\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 66The result of using the CISourceInCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceOutCompositing\n\nUses the background image to define what to take out of the input image.\n\nLocalized Display Name\n\nSource Out\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 67The result of using the CISourceOutCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISourceOverCompositing\n\nPlaces the input image over the input background image.\n\nLocalized Display Name\n\nSource Over\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nDiscussion\n\nThe formula used to create this filter is described in Thomas Porter and Tom Duff. 1984. Compositing Digital Images. Computer Graphics, 18 (3): 253-259.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryHighDynamicRange, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryCompositeOperation\n\nSample Output\nFigure 68The result of using the CISourceOverCompositing filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCISubtractBlendMode\n\nSubtracts the background image sample color from the source image sample color.\n\nLocalized Display Name\n\nSubtract Blend Mode\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\nMember Of\n\nCICategoryCompositeOperation, CICategoryVideo, CICategoryStillImage, CICategoryInterlaced, CICategoryNonSquarePixels, CICategoryBuiltIn\n\nSample Output\nFigure 69The result of using the CISubtractBlendMode filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCICategoryDistortionEffect\nCIBumpDistortion\n\nCreates a bump that originates at a specified point in the image.\n\nLocalized Display Name\n\nBump Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 0.50\n\nDiscussion\n\nThe bump can be concave or convex.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 70The result of using the CIBumpDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 7.0 and later.\n\nCIBumpDistortionLinear\n\nCreates a concave or convex distortion that originates from a line in the image.\n\nLocalized Display Name\n\nCIBumpDistortionLinear\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [300 300]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 71The result of using the CIBumpDistortionLinear filter \nAvailability\n\nAvailable in OS X v10.5 and later.\n\nCICircleSplashDistortion\n\nDistorts the pixels starting at the circumference of a circle and emanating outward.\n\nLocalized Display Name\n\nCircle Splash Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 72The result of using the CICircleSplashDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICircularWrap\n\nWraps an image around a transparent circle.\n\nLocalized Display Name\n\nCircular Wrap Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nDiscussion\n\nThe distortion of the image increases with the distance from the center of the circle.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 73The result of using the CICircularWrap filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIDroste\n\nRecursively draws a portion of an image in imitation of an M. C. Escher drawing.\n\nLocalized Display Name\n\nDroste\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputInsetPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [200 200]\n\n\ninputInsetPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [400 400]\n\n\ninputStrands\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 1\n\n\ninputPeriodicity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance.\n\nDefault value: 1\n\n\ninputRotation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance.\n\nDefault value: 0.00\n\n\ninputZoom\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar.\n\nDefault value: 1\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, ToneCuCICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 74The result of using the CIDroste filter \nAvailability\n\nAvailable in OS X v10.6 and later and in iOS 9 and later.\n\nCIDisplacementDistortion\n\nApplies the grayscale values of the second image to the first image.\n\nLocalized Display Name\n\nDisplacement Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputDisplacementImage\t\n\nA CIImage object whose display name is Displacement Image.\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 50.00\n\nDiscussion\n\nThe output image has a texture defined by the grayscale values.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 75The result of using the CIDisplacementDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIGlassDistortion\n\nDistorts an image by applying a glass-like texture.\n\nLocalized Display Name\n\nGlass Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTexture\t\n\nA CIImage object whose display name is Texture.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150] Identity: (null)\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 200.00\n\nDiscussion\n\nThe raised portions of the output image are the result of applying a texture map.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 76The result of using the CIGlassDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 8.0 and later.\n\nCIGlassLozenge\n\nCreates a lozenge-shaped lens and distorts the portion of the image over which the lens is placed.\n\nLocalized Display Name\n\nGlass Lozenge\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 1.\n\nDefault value: [150 150]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 2.\n\nDefault value: [350 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 100.00\n\n\ninputRefraction\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Refraction.\n\nDefault value: 1.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 77The result of using the CIGlassLozenge filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIHoleDistortion\n\nCreates a circular area that pushes the image pixels outward, distorting those pixels closest to the circle the most.\n\nLocalized Display Name\n\nHole Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 78The result of using the CIHoleDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILightTunnel\n\nRotates a portion of the input image specified by the center and radius parameters to give a tunneling effect.\n\nLocalized Display Name\n\nLight Tunnel\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [150 150]\n\n\ninputRotation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle.\n\nDefault value: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 79The result of using the CILightTunnel filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 6.0 and later.\n\nCIPinchDistortion\n\nCreates a rectangular area that pinches source pixels inward, distorting those pixels closest to the rectangle the most.\n\nLocalized Display Name\n\nPinch Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 80The result of using the CIPinchDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIStretchCrop\n\nDistorts an image by stretching and or cropping it to fit a target size.\n\nLocalized Display Name\n\nCIStretchCrop\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputSize\t\n\nA CIVector object whose display name is Size. This value specifies the size of the output image in pixels.\n\n\ninputCropAmount\t\n\nAn NSNumber object whose display name is CropAmount. This value determines if, and how much, cropping should be used to achieve the target size. If the value is 0, the image is stretched but not cropped. If the value is 1, the image is cropped but not stretched. Values in-between use stretching and cropping proportionally.\n\n\ninputCenterStretchAmount\t\n\nAn NSNumber object whose display name is CenterStretchAmount. This value determines how much stretching to apply to the center of the image, if stretching is indicated by the inputCropAmount value. A value of 0 causes the center of the image to maintain its original aspect ratio. A value of 1 causes the image to be stretched uniformly.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 81The result of using the CIStretchCrop filter \nAvailability\n\nAvailable in OS X v10.6 and later and in iOS 9 and later.\n\nCITorusLensDistortion\n\nCreates a torus-shaped lens and distorts the portion of the image over which the lens is placed.\n\nLocalized Display Name\n\nTorus Lens Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 160.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 80.00\n\n\ninputRefraction\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Refraction.\n\nDefault value: 1.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 82The result of using the CITorusLensDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCITwirlDistortion\n\nRotates pixels around a point to give a twirling effect.\n\nLocalized Display Name\n\nTwirl Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 3.14\n\nDiscussion\n\nYou can specify the number of rotations as well as the center and radius of the effect.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 83The result of using the CITwirlDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIVortexDistortion\n\nRotates pixels around a point to simulate a vortex.\n\nLocalized Display Name\n\nVortex Distortion\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 56.55\n\nDiscussion\n\nYou can specify the number of rotations as well the center and radius of the effect.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryDistortionEffect\n\nSample Output\nFigure 84The result of using the CIVortexDistortion filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICategoryGenerator\nCIAztecCodeGenerator\n\nGenerates an Aztec code (two-dimensional barcode) from input data.\n\nLocalized Display Name\n\nCIAztecCodeGenerator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as an Aztec code. An NSData object whose display name is Message.\n\n\ninputCorrectionLevel\t\n\nThe percentage of redundancy to add to the message data in the barcode encoding. A higher correction level allows a barcode to be correctly read even when partially damaged.\n\nAn NSNumber object whose display name is CorrectionLevel.\n\nDefault value: 23.00 Minimum: 5.00 Maximum: 95.00 Slider minimum: 5.00 Slider maximum: 95.00 Identity: 0.00\n\n\ninputLayers\t\n\nThe number of concentric squares (with a width of two pixels each) encoding the barcode data. When this parameter is set to zero, Core Image automatically determines the appropriate number of layers to encode the message at the specified correction level.\n\nAn NSNumber object whose display name is Layers.\n\nDefault value: 0.00 Minimum: 1.00 Maximum: 32.00 Slider minimum: 1.00 Slider maximum: 32.00 Identity: 0.00\n\n\ninputCompactStyle\t\n\nA Boolean value that determines whether to use the compact or full-size Aztec barcode format. The compact format can store up to 44 bytes of message data (including data added for correction) in up to 4 layers, producing a barcode image sized between 15 x 15 and 27 x 27 pixels. The full-size format can store up to 1914 bytes of message data (including correction) in up to 32 layers, producing a barcode image sized no larger than 151 x 151 pixels.\n\nAn NSNumber object whose display name is CompactStyle.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO/IEC 24778:2008 standard. The width and height of each module (square dot) of the code in the output image is one pixel. To create an Aztec code from a string or URL, convert it to an NSData object using the NSISOLatin1StringEncoding string encoding. The output image also includes two pixels of padding on each side (for example, a 15 x 15 code creates a 19 x 19 image).\n\nMember Of\n\nCICategoryGenerator, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 85The result of using the CIAztecCodeGenerator filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nSee Also\n\nCIQRCodeGenerator\nCICode128BarcodeGenerator\n\n\nCICheckerboardGenerator\n\nGenerates a checkerboard pattern.\n\nLocalized Display Name\n\nCheckerboard\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 80.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 1.00\n\nDiscussion\n\nYou can specify the checkerboard size and colors, and the sharpness of the pattern.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 86The result of using the CICheckerboardGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICode128BarcodeGenerator\n\nGenerates a Code 128 one-dimensional barcode from input data.\n\nLocalized Display Name\n\nCICode128BarcodeGenerator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as a Code 128 barcode. Must not contain non-ASCII characters. An NSData object whose display name is Message.\n\n\ninputQuietSpace\t\n\nThe number of pixels of added white space on each side of the barcode. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is QuietSpace.\n\nDefault value: 7.00 Minimum: 0.00 Maximum: 20.00 Slider minimum: 0.00 Slider maximum: 20.00 Identity: 0.00\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO/IEC 15417:2007 standard. The width of each module (vertical line) of the barcode in the output image is one pixel. The height of the barcode is 32 pixels. To create a barcode from a string or URL, convert it to an NSData object using the NSASCIIStringEncoding string encoding.\n\nMember Of\n\nCICategoryGenerator, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 87The result of using the CICode128BarcodeGenerator filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nSee Also\n\nCIAztecCodeGenerator\nCIQRCodeGenerator\n\n\nCIConstantColorGenerator\n\nGenerates a solid color.\n\nLocalized Display Name\n\nConstant Color\n\nParameters\ninputColor\t\n\nA CIColor object whose display name is Color.\n\nDiscussion\n\nYou typically use the output of this filter as the input to another filter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 88The result of using the CIConstantColorGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCILenticularHaloGenerator\n\nSimulates a lens flare.\n\nLocalized Display Name\n\nLenticular Halo\n\nParameters\ninputCenter\t\n\nThe center of the lens flare. A CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor\t\n\nControls the proportion of red, green, and blue halos. A CIColor object whose display name is Color.\n\n\ninputHaloRadius\t\n\nControls the size of the lens flare. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Halo Radius.\n\nDefault value: 70.00\n\n\ninputHaloWidth\t\n\nControls the width of the lens flare, that is, the distance between the inner flare and the outer flare. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Halo Width.\n\nDefault value: 87.00\n\n\ninputHaloOverlap\t\n\nControls how much the red, green, and blue halos overlap. A value of 0 means no overlap (a lot of separation). A value of 1 means full overlap (white halos). An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Halo Overlap.\n\nDefault value: 0.77\n\n\ninputStriationStrength\t\n\nControls the brightness of the rainbow-colored halo area. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Strength.\n\nDefault value: 0.50\n\n\ninputStriationContrast\t\n\nControls the contrast of the rainbow-colored halo area. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Contrast.\n\nDefault value: 1.00\n\n\ninputTime\t\n\nAdds a randomness to the lens flare; it causes the flare to \"sparkle\" as it changes through various time values. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Time.\n\nDefault value: 0.00\n\nDiscussion\n\nThis filter is typically applied to another image to simulate lens flares and similar effects.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 89The result of using the CILenticularHaloGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIPDF417BarcodeGenerator\n\nGenerates a PDF417 code (two-dimensional barcode) from input data.\n\nLocalized Display Name\n\nPDF417 Barcode Generator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as a barcode. An NSData object whose display name is Message.\n\n\ninputMinWidth\t\n\nThe minimum width of the barcode’s data area, in pixels. An NSNumber object whose display name is MinWidth.\n\nDefault value: 0.00 Minimum: 56.00 Maximum: 583.00 Slider minimum: 56.00 Slider maximum: 583.00 Identity: 0.00\n\n\ninputMaxWidth\t\n\nThe maximum width of the barcode’s data area, in pixels. An NSNumber object whose display name is MaxWidth.\n\nDefault value: 0.00 Minimum: 56.00 Maximum: 583.00 Slider minimum: 56.00 Slider maximum: 583.00 Identity: 0.00\n\n\ninputMinHeight\t\n\nThe minimum height of the barcode’s data area, in pixels. An NSNumber object whose display name is MinHeight.\n\nDefault value: 0.00 Minimum: 13.00 Maximum: 283.00 Slider minimum: 13.00 Slider maximum: 283.00 Identity: 0.00\n\n\ninputMaxHeight\t\n\nThe maximum height of the barcode’s data area, in pixels. An NSNumber object whose display name is MaxHeight.\n\nDefault value: 0.00 Minimum: 13.00 Maximum: 283.00 Slider minimum: 13.00 Slider maximum: 283.00 Identity: 0.00\n\n\ninputDataColumns\t\n\nThe number of data columns in the generated code. If zero, the generator uses a number of columns based on the width, height, and aspect ratio. An NSNumber object whose display name is DataColumns.\n\nDefault value: 0.00 Minimum: 1.00 Maximum: 30.00 Slider minimum: 1.00 Slider maximum: 30.00 Identity: 0.00\n\n\ninputRows\t\n\nThe number of data rows in the generated code. If zero, the generator uses a number of rows based on the width, height, and aspect ratio. An NSNumber object whose display name is Rows.\n\nDefault value: 0.00 Minimum: 3.00 Maximum: 90.00 Slider minimum: 3.00 Slider maximum: 90.00 Identity: 0.00\n\n\ninputPreferredAspectRatio\t\n\nThe preferred ratio of width over height for the generated barcode. The generator approximates this with an actual aspect ratio based on the data and other parameters you specify. An NSNumber object whose display name is PreferredAspectRatio.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 9223372036854775808.00 Slider minimum: 0.00 Slider maximum: 9223372036854775808.00 Identity: 0.00\n\n\ninputCompactionMode\t\n\nAn option that determines which method the generator uses to compress data.\n\nAutomatic. The generator automatically chooses a compression method. This option is the default.\n\nNumeric. Valid only when the message is an ASCII-encoded string of digits, achieving optimal compression for that type of data.\n\nText. Valid only when the message is all ASCII-encoded alphanumeric and punctuation characters, achieving optimal compression for that type of data.\n\nByte. Valid for any data, but least compact.\n\nAn NSNumber object whose display name is CompactionMode.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 3.00 Slider minimum: 0.00 Slider maximum: 3.00 Identity: 0.00\n\n\ninputCompactStyle\t\n\nA Boolean value that determines whether to omit redundant elements to make the generated barcode more compact. An NSNumber object whose display name is CompactStyle.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputCorrectionLevel\t\n\nAn integer between 0 and 8, inclusive, that determines the amount of redundancy to include in the barcode’s data to prevent errors when the barcode is read. If unspecified, the generator chooses a correction level based on the size of the message data. An NSNumber object whose display name is CorrectionLevel.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 8.00 Slider minimum: 0.00 Slider maximum: 8.00 Identity: 0.00\n\n\ninputAlwaysSpecifyCompaction\t\n\nA Boolean value that determines whether to include information about the compaction mode in the barcode even when such information is redundant. (If a PDF417 barcode does not contain compaction mode information, a reader assumes text-based compaction. Some barcodes include this information even when using text-based compaction.)\n\nAn NSNumber object whose display name is AlwaysSpecifyCompaction.\n\nDefault value: 0.00 Minimum: -9223372036854775808.00 Maximum: 9223372036854775808.00 Slider minimum: -9223372036854775808.00 Slider maximum: 9223372036854775808.00 Identity: 0.00\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO 15438 standard. PDF417 codes are commonly used in postage, package tracking, personal identification documents, and coffeeshop membership cards. The width and height of each module (square dot) of the code in the output image is one point. To create a PDF417 code from a string or URL, convert it to an NSData object using the NSISOLatin1StringEncoding string encoding.\n\nMember Of\n\nCICategoryGenerator, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 90The result of using the CIPDF417BarcodeGenerator filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 9 and later.\n\nCIQRCodeGenerator\n\nGenerates a Quick Response code (two-dimensional barcode) from input data.\n\nLocalized Display Name\n\nCIQRCodeGenerator\n\nParameters\ninputMessage\t\n\nThe data to be encoded as a QR code. An NSData object whose display name is Message.\n\n\ninputCorrectionLevel\t\n\nA single letter specifying the error correction format. An NSString object whose display name is CorrectionLevel.\n\nDefault value: M\n\nDiscussion\n\nGenerates an output image representing the input data according to the ISO/IEC 18004:2006 standard. The width and height of each module (square dot) of the code in the output image is one point. To create a QR code from a string or URL, convert it to an NSData object using the NSISOLatin1StringEncoding string encoding.\n\nThe inputCorrectionLevel parameter controls the amount of additional data encoded in the output image to provide error correction. Higher levels of error correction result in larger output images but allow larger areas of the code to be damaged or obscured without. There are four possible correction modes (with corresponding error resilience levels):\n\nL: 7%\n\nM: 15%\n\nQ: 25%\n\nH: 30%\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryGenerator\n\nSample Output\nFigure 91The result of using the CIQRCodeGenerator filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nSee Also\n\nCIAztecCodeGenerator\nCICode128BarcodeGenerator\n\n\nCIRandomGenerator\n\nGenerates an image of infinite extent whose pixel values are made up of four independent, uniformly-distributed random numbers in the 0 to 1 range.\n\nLocalized Display Name\n\nRandom Generator\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 92The result of using the CIRandomGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIStarShineGenerator\n\nGenerates a starburst pattern that is similar to a supernova; can be used to simulate a lens flare.\n\nLocalized Display Name\n\nStar Shine\n\nParameters\ninputCenter\t\n\nThe center of the flare. A CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor\t\n\nThe color of the flare. A CIColor object whose display name is Color.\n\n\ninputRadius\t\n\nControls the size of the flare. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 50.00\n\n\ninputCrossScale\t\n\nControls the ratio of the cross flare size relative to the round central flare. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Cross Scale.\n\nDefault value: 15.00\n\n\ninputCrossAngle\t\n\nControls the angle of the flare. An NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Cross Angle.\n\nDefault value: 0.60\n\n\ninputCrossOpacity\t\n\nControls the thickness of the cross flare. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Cross Opacity.\n\nDefault value: -2.00\n\n\ninputCrossWidth\t\n\nHas the same overall effect as the inputCrossOpacity parameter. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Cross Width.\n\nDefault value: 2.50\n\n\ninputEpsilon\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Epsilon.\n\nDefault value: -2.00\n\nDiscussion\n\nThe output image is typically used as input to another filter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 93The result of using the CIStarShineGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIStripesGenerator\n\nGenerates a stripe pattern.\n\nLocalized Display Name\n\nStripes\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 80.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 1.00\n\nDiscussion\n\nYou can control the color of the stripes, the spacing, and the contrast.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 94The result of using the CIStripesGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISunbeamsGenerator\n\nGenerates a sun effect.\n\nLocalized Display Name\n\nSunbeams\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputColor\t\n\nA CIColor object whose display name is Color.\n\n\ninputSunRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Sun Radius.\n\nDefault value: 40.00\n\n\ninputMaxStriationRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Maximum Striation Radius.\n\nDefault value: 2.58\n\n\ninputStriationStrength\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Strength.\n\nDefault value: 0.50\n\n\ninputStriationContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Contrast.\n\nDefault value: 1.38\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Time.\n\nDefault value: 0.00\n\nDiscussion\n\nYou typically use the output of the sunbeams filter as input to a composite filter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGenerator\n\nSample Output\nFigure 95The result of using the CISunbeamsGenerator filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCICategoryGeometryAdjustment\nCIAffineTransform\n\nApplies an affine transform to an image.\n\nLocalized Display Name\n\nAffine Transform\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTransform\t\n\nOn iOS, an NSValue object whose attribute type is CIAttributeTypeTransform. You must pass the transform as NSData using a statement similar to the following, where xform is an affine transform:\n\n[myFilter setValue:[NSValue valueWithBytes:&xform\nobjCType:@encode(CGAffineTransform)]\nforKey:@\"inputTransform\"];\n\nOn OS X, an NSAffineTransform object whose attribute type is CIAttributeTypeTransform.\n\nDiscussion\n\nYou can scale, translate, or rotate the input image. You can also apply a combination of these operations.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 96The result of using the CIAffineTransform filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCICrop\n\nApplies a crop to an image.\n\nLocalized Display Name\n\nCrop\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRectangle\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Rectangle.\n\nDefault value: [0 0 300 300]\n\nDiscussion\n\nThe size and shape of the cropped image depend on the rectangle you specify.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 97The result of using the CICrop filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 5.0 and later.\n\nCILanczosScaleTransform\n\nProduces a high-quality, scaled version of a source image.\n\nLocalized Display Name\n\nLanczos Scale Transform\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 1.00\n\n\ninputAspectRatio\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Aspect Ratio.\n\nDefault value: 1.00\n\nDiscussion\n\nYou typically use this filter to scale down an image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 98The result of using the CILanczosScaleTransform filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPerspectiveCorrection\n\nApplies a perspective correction, transforming an arbitrary quadrilateral region in the source image to a rectangular output image.\n\nLocalized Display Name\n\nPerspective Correction\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTopLeft\t\n\nThe point in the input image to be mapped to the top left corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484] Identity: (null)\n\n\ninputTopRight\t\n\nThe point in the input image to be mapped to the top right corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507] Identity: (null)\n\n\ninputBottomRight\t\n\nThe point in the input image to be mapped to the bottom right corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140] Identity: (null)\n\n\ninputBottomLeft\t\n\nThe point in the input image to be mapped to the bottom left corner of the output image.\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153] Identity: (null)\n\nDiscussion\n\nThe extent of the rectangular output image varies based on the size and placement of the specified quadrilateral region in the input image.\n\nMember Of\n\nCICategoryGeometryAdjustment, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 99The result of using the CIPerspectiveCorrection filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCIPerspectiveTransform\n\nAlters the geometry of an image to simulate the observer changing viewing position.\n\nLocalized Display Name\n\nPerspective Transform\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTopLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484]\n\n\ninputTopRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507]\n\n\ninputBottomRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140]\n\n\ninputBottomLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153]\n\nDiscussion\n\nYou can use the perspective filter to skew an image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 100The result of using the CIPerspectiveTransform filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPerspectiveTransformWithExtent\n\nAlters the geometry of a portion of an image to simulate the observer changing viewing position.\n\nLocalized Display Name\n\nPerspective Transform With Extent\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputExtent\t\n\nA CIVector object whose whose attribute type is CIAttributeTypeRectangle. If you pass [image extent] you’ll get the same result as using the CIPerspectiveTransform filter.\n\n\ninputTopLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484]\n\n\ninputTopRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507]\n\n\ninputBottomRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140]\n\n\ninputBottomLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153]\n\nDiscussion\n\nYou can use the perspective filter to skew an the portion of the image defined by extent. See CIPerspectiveTransform for an example of the output of this filter when you supply the input image size as the extent.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nAvailability\n\nAvailable in iOS 6.0 and later.\n\nCIStraightenFilter\n\nRotates the source image by the specified angle in radians.\n\nLocalized Display Name\n\nStraighten\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Angle.\n\nDefault value: 0.00\n\nDiscussion\n\nThe image is scaled and cropped so that the rotated image fits the extent of the input image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGeometryAdjustment\n\nSample Output\nFigure 101The result of using CIStraightenFilter filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCICategoryGradient\nCIGaussianGradient\n\nGenerates a gradient that varies from one color to another using a Gaussian distribution.\n\nLocalized Display Name\n\nGaussian Gradient\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150] Identity: (null)\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 300.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 102The result of using the CIGaussianGradient filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILinearGradient\n\nGenerates a gradient that varies along a linear axis between two defined endpoints.\n\nLocalized Display Name\n\nLinear Gradient\n\nParameters\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 1.\n\nDefault value: [0 0]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 2.\n\nDefault value: [200 200]\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 103The result of using the CILinearGradient filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIRadialGradient\n\nGenerates a gradient that varies radially between two circles having the same center.\n\nLocalized Display Name\n\nRadial Gradient\n\nParameters\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputRadius0\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius 1.\n\nDefault value: 5.00\n\n\ninputRadius1\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius 2.\n\nDefault value: 100.00\n\n\ninputColor0\t\n\nA CIColor object whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose display name is Color 2.\n\nDiscussion\n\nIt is valid for one of the two circles to have a radius of 0.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 104The result of using the CIRadialGradient filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISmoothLinearGradient\n\nGenerates a gradient that uses an S-curve function to blend colors along a linear axis between two defined endpoints.\n\nLocalized Display Name\n\nSmooth Linear Gradient\n\nParameters\ninputPoint0\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 1.\n\nDefault value: [0 0]\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Point 2.\n\nDefault value: [200 200]\n\n\ninputColor0\t\n\nA CIColor object whose attribute type is CIAttributeTypeColor and whose display name is Color 1.\n\n\ninputColor1\t\n\nA CIColor object whose attribute type is CIAttributeTypeColor and whose display name is Color 2.\n\nDiscussion\n\nWhere the CILinearGradient filter blends colors linearly (that is, the color at a point 25% along the line between Point 1 and Point 2 is 25% Color 1 and 75% Color 2), this filter blends colors using an S-curve function: the color blend at points less than 50% along the line between Point 1 and Point 2 is slightly closer to Color 1 than in a linear blend, and the color blend at points further than 50% along that line is slightly closer to Color 2 than in a linear blend.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryGradient\n\nSample Output\nFigure 105The result of using the CISmoothLinearGradient filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 7.0 and later.\n\nCICategoryHalftoneEffect\nCICircularScreen\n\nSimulates a circular-shaped halftone screen.\n\nLocalized Display Name\n\nCircular Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 106The result of using the CICircularScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICMYKHalftone\n\nCreates a color, halftoned rendition of the source image, using cyan, magenta, yellow, and black inks over a white page.\n\nLocalized Display Name\n\nCMYK Halftone\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\n\ninputGCR\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Gray Component Replacement.\n\nDefault value: 1.00\n\n\ninputUCR\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Under Color Removal.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 107The result of using the CICMYKHalftone filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIDotScreen\n\nSimulates the dot patterns of a halftone screen.\n\nLocalized Display Name\n\nDot Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 108The result of using the CIDotScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHatchedScreen\n\nSimulates the hatched pattern of a halftone screen.\n\nLocalized Display Name\n\nHatched Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 109The result of using the CIHatchedScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCILineScreen\n\nSimulates the line pattern of a halftone screen.\n\nLocalized Display Name\n\nLine Screen\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 6.00\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.70\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryHalftoneEffect\n\nSample Output\nFigure 110The result of using the CILineScreen filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICategoryReduction\nCIAreaAverage\n\nReturns a single-pixel image that contains the average color for the region of interest.\n\nLocalized Display Name\n\nArea Average\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nA CIVector object representing the rectangular region of interest.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaHistogram\n\nReturns a 1D image (inputCount wide by one pixel high) that contains the component-wise histogram computed for the specified rectangular area.\n\nLocalized Display Name\n\nArea Histogram\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\n\ninputCount\t\n\nThe number of “buckets” for the histogram.\n\n\ninputScale\t\n\nA scaling factor. Core Image scales the histogram by dividing the scale by the area of the inputExtent rectangle.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 8.0 and later.\n\nCIRowAverage\n\nReturns a 1-pixel high image that contains the average color for each scan row.\n\nLocalized Display Name\n\nRow Average\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIColumnAverage\n\nReturns a 1-pixel high image that contains the average color for each scan column.\n\nLocalized Display Name\n\nColumn Average\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIHistogramDisplayFilter\n\nGenerates a histogram image from the output of the CIAreaHistogram filter.\n\nLocalized Display Name\n\nHistogram Display\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputHeight\t\n\nThe height of the displayable histogram image. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Height.\n\nDefault value: 100.00 Minimum: 1.00 Maximum: 200.00 Slider minimum: 1.00 Slider maximum: 100.00 Identity: 0.00\n\n\ninputHighLimit\t\n\nThe fraction of the left portion of the histogram image to be made darker. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is HighLimit.\n\nDefault value: 1.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputLowLimit\t\n\nThe fraction of the right portion of the histogram image to be made lighter. An NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is LowLimit.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\nDiscussion\n\nThe input image should be a one-dimensional image in which each pixel contains data (per component) for one “bucket” of the histogram; you can produce such an image using the CIAreaHistogram filter. The width of the output image is the same as that of the input image, and its height is the value of the inputHeight parameter.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryReduction\n\nSample Output\nFigure 111The result of using the CIHistogramDisplayFilter filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 8.0 and later.\n\nCIAreaMaximum\n\nReturns a single-pixel image that contains the maximum color components for the region of interest.\n\nLocalized Display Name\n\nArea Maximum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nImage component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaMinimum\n\nReturns a single-pixel image that contains the minimum color components for the region of interest.\n\nLocalized Display Name\n\nArea Minimum\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nImage component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaMaximumAlpha\n\nReturns a single-pixel image that contains the color vector with the maximum alpha value for the region of interest.\n\nLocalized Display Name\n\nArea Maximum Alpha\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nIf more than one pixel exists with the maximum alpha value, Core Image returns the vector that has the lowest x and y coordinate. Image component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIAreaMinimumAlpha\n\nReturns a single-pixel image that contains the color vector with the minimum alpha value for the region of interest.\n\nLocalized Display Name\n\nArea Minimum Alpha\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image. This is the image data you want to process.\n\n\ninputExtent\t\n\nThe rectangular region of interest.\n\nDiscussion\n\nIf more than one pixel exists with the minimum alpha value, Core Image returns the vector that has the lowest x and y coordinate. Image component values should range from 0.0 to 1.0, inclusive.\n\nMember Of\n\nCICategoryReduction, CICategoryStillImage, CICategoryVideo, CICategoryBuiltIn\n\nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCICategorySharpen\nCISharpenLuminance\n\nIncreases image detail by sharpening.\n\nLocalized Display Name\n\nSharpen Luminance\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Sharpness.\n\nDefault value: 0.40\n\nDiscussion\n\nIt operates on the luminance of the image; the chrominance of the pixels remains unaffected.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategorySharpen\n\nSample Output\nFigure 112The result of using the CISharpenLuminance filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIUnsharpMask\n\nIncreases the contrast of the edges between pixels of different colors in an image.\n\nLocalized Display Name\n\nUnsharp Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 2.50\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.50\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategorySharpen\n\nSample Output\nFigure 113The result of using the CIUnsharpMask filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCICategoryStylize\nCIBlendWithAlphaMask\n\nUses alpha values from a mask to interpolate between an image and the background.\n\nLocalized Display Name\n\nBlend With Alpha Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\n\ninputMaskImage\t\n\nA CIImage object whose display name is Mask Image.\n\nDiscussion\n\nWhen a mask alpha value is 0.0, the result is the background. When the mask alpha value is 1.0, the result is the image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 114The result of using the CIBlendWithAlphaMask filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIBlendWithMask\n\nUses values from a grayscale mask to interpolate between an image and the background.\n\nLocalized Display Name\n\nBlend With Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputBackgroundImage\t\n\nA CIImage object whose display name is Background Image.\n\n\ninputMaskImage\t\n\nA CIImage object whose display name is Mask Image.\n\nDiscussion\n\nWhen a mask value is 0.0, the result is the background. When the mask value is 1.0, the result is the image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 115The result of using the CIBlendWithMask filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIBloom\n\nSoftens edges and applies a pleasant glow to an image.\n\nLocalized Display Name\n\nBloom\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.5\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 116The result of using the CIBloom filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIComicEffect\n\nSimulates a comic book drawing by outlining edges and applying a color halftone effect.\n\nLocalized Display Name\n\nComic Effect\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 117The result of using the CIComicEffect filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIConvolution3X3\n\nModifies pixel values by performing a 3x3 matrix convolution.\n\nLocalized Display Name\n\n3 by 3 convolution\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 1 0 0 0 0] Identity: [0 0 0 0 1 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 3x3 weight matrix and the 3x3 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of one pixel horizontally or vertically).\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements, as shown in the figure below.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 118The result of using the CIConvolution3X3 filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIConvolution5X5\n\nModifies pixel values by performing a 5x5 matrix convolution.\n\nLocalized Display Name\n\n5 by 5 convolution\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0] Identity: [0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 5x5 weight matrix and the 5x5 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of two pixels horizontally or vertically).\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 119The result of using the CIConvolution5X5 filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIConvolution7X7\n\nModifies pixel values by performing a 7x7 matrix convolution.\n\nLocalized Display Name\n\n7 by 7 convolution\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n\nIdentity: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 7x7 weight matrix and the 7x7 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of three pixels horizontally or vertically).\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 120The result of using the CIConvolution7X7 filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 9 and later.\n\nCIConvolution9Horizontal\n\nModifies pixel values by performing a 9-element horizontal convolution.\n\nLocalized Display Name\n\nCIConvolution9Horizontal\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 1 0 0 0 0] Identity: [0 0 0 0 1 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 9x1 weight matrix and the 9x1 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of four pixels horizontally). Unlike convolution filters which use square matrices, this filter can only produce effects along a horizontal axis, but it can be combined with CIConvolution9Vertical to approximate the effect of certain 9x9 weight matrices.\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 121The result of using the CIConvolution9Horizontal filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCIConvolution9Vertical\n\nModifies pixel values by performing a 9-element vertical convolution.\n\nLocalized Display Name\n\nCIConvolution9Vertical\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputWeights\t\n\nA CIVector object whose display name is Weights.\n\nDefault value: [0 0 0 0 1 0 0 0 0] Identity: [0 0 0 0 1 0 0 0 0]\n\n\ninputBias\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Bias.\n\nDefault value: 0.00 Identity: 0.00\n\nDiscussion\n\nA convolution filter generates each output pixel by summing all elements in the element-wise product of two matrices—a weight matrix and a matrix containing the neighborhood surrounding the corresponding input pixel—and adding a bias. This operation is performed independently for each color component (including the alpha component), and the resulting value is clamped to the range between 0.0 and 1.0. You can create many types of image processing effects using different weight matrices, such as blurring, sharpening, edge detection, translation, and embossing.\n\nThis filter uses a 1x9 weight matrix and the 1x9 neighborhood surrounding an input pixel (that is, the pixel itself and those within a distance of four pixels vertically). Unlike convolution filters which use square matrices, this filter can only produce effects along a vertical axis, but it can be combined with CIConvolution9Vertical to approximate the effect of certain 9x9 weight matrices.\n\nIf you want to preserve the overall brightness of the image, ensure that the sum of all values in the weight matrix is 1.0. You may find it convenient to devise a weight matrix without this constraint and then normalize it by dividing each element by the sum of all elements.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 122The result of using the CIConvolution9Vertical filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 7.0 and later.\n\nCICrystallize\n\nCreates polygon-shaped color blocks by aggregating source pixel-color values.\n\nLocalized Display Name\n\nCrystallize\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 20.00\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 123The result of using the CICrystallize filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIDepthOfField\n\nSimulates a depth of field effect.\n\nLocalized Display Name\n\nDepth of Field\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint0\t\n\nThe focused region of the image stretches in a line between inputPoint0 and inputPoint1 of the image. A CIVector object whose attribute type is CIAttributeTypePosition.\n\n\ninputPoint1\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\n\ninputSaturation\t\n\nA saturation effect applied to the in-focus regions of the image. An NSNumber object whose attribute type is CIAttributeTypeScalar. This value indications the amount to adjust the saturation on the in-focus portion of the image.\n\n\ninputUnsharpMaskRadius\t\n\nSpecifies the radius of the unsharp mask effect applied to the in-focus area. An NSNumber object whose attribute type is CIAttributeTypeScalar.\n\n\ninputUnsharpMaskIntensity\t\n\nSpecifies the intensity of the unsharp mask effect applied to the in-focus area. An NSNumber object whose attribute type is CIAttributeTypeScalar.\n\n\ninputRadius\t\n\nControls how much the out-of-focus regions are blurred. An NSNumber object whose attribute type is CIAttributeTypeScalar. This value specifies the distance from the center of the effect.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 124The result of using the CIDepthOfField filter \nAvailability\n\nAvailable in OS X v10.6 and later and in iOS 9 and later.\n\nCIEdges\n\nFinds all edges in an image and displays them in color.\n\nLocalized Display Name\n\nEdges\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 1.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 125The result of using the CIEdges filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIEdgeWork\n\nProduces a stylized black-and-white rendition of an image that looks similar to a woodblock cutout.\n\nLocalized Display Name\n\nEdge Work\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 3.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 126The result of using the CIEdgeWork filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIGloom\n\nDulls the highlights of an image.\n\nLocalized Display Name\n\nGloom\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\n\ninputIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Intensity.\n\nDefault value: 0.5\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 127The result of using the CIGloom filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIHeightFieldFromMask\n\nProduces a continuous three-dimensional, loft-shaped height field from a grayscale mask.\n\nLocalized Display Name\n\nHeight Field From Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 10.00\n\nDiscussion\n\nThe white values of the mask define those pixels that are inside the height field while the black values define those pixels that are outside. The field varies smoothly and continuously inside the mask, reaching the value 0 at the edge of the mask. You can use this filter with the CIShadedMaterial filter to produce extremely realistic shaded objects.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 128The result of using the CIHeightFieldFromMask filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIHexagonalPixellate\n\nMaps an image to colored hexagons whose color is defined by the replaced pixels.\n\nLocalized Display Name\n\nCIHexagonalPixellate\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 8.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 129The result of using the CIHexagonalPixellate filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIHighlightShadowAdjust\n\nAdjust the tonal mapping of an image while preserving spatial detail.\n\nLocalized Display Name\n\nHighlight and Shadows\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputHighlightAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Highlight Amount.\n\nDefault value: 1.00\n\n\ninputShadowAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Shadow Amount.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 130The result of using the CIHighlightShadowAdjust filter \nAvailability\n\nAvailable in OS X v10.7 and later and in iOS 5.0 and later.\n\nCILineOverlay\n\nCreates a sketch that outlines the edges of an image in black.\n\nLocalized Display Name\n\nLine Overlay\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputNRNoiseLevel\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is NR Noise Level.\n\nDefault value: 0.07\n\n\ninputNRSharpness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is NR Sharpness.\n\nDefault value: 0.71\n\n\ninputEdgeIntensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Edge Intensity.\n\nDefault value: 1.00\n\n\ninputThreshold\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Threshold.\n\nDefault value: 0.10 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast.\n\nDefault value: 50.00\n\nDiscussion\n\nThe portions of the image that are not outlined are transparent.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 131The result of using the CILineOverlay filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCIPixellate\n\nMakes an image blocky by mapping the image to colored squares whose color is defined by the replaced pixels.\n\nLocalized Display Name\n\nPixellate\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 8.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 132The result of using the CIPixellate filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPointillize\n\nRenders the source image in a pointillistic style.\n\nLocalized Display Name\n\nPointillize\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 20.00\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 133The result of using the CIPointillize filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIShadedMaterial\n\nProduces a shaded image from a height field.\n\nLocalized Display Name\n\nShaded Material\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputShadingImage\t\n\nA CIImage object whose display name is Shading Image.\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Scale.\n\nDefault value: 10.00\n\nDiscussion\n\nThe height field is defined to have greater heights with lighter shades, and lesser heights (lower areas) with darker shades. You can combine this filter with the CIHeightFieldFromMask filter to produce quick shadings of masks, such as text.\n\nThis filter sets the input image as a height-field (multiplied by the scale parameter), and computes a normal vector for each pixel. It then uses that normal vector to look up the reflected color for that direction in the input shading image.\n\nThe input shading image contains the picture of a hemisphere, which defines the way the surface is shaded. The look-up coordinate for a normal vector is:\n\n(normal.xy + 1.0) * 0.5 * vec2(shadingImageWidth, shadingImageHeight)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 134The result of using the CIShadedMaterial filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCISpotColor\n\nReplaces one or more color ranges with spot colors.\n\nLocalized Display Name\n\nSpot Color\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenterColor1\t\n\nA CIColor object whose display name is Center Color 1.\n\n\ninputReplacementColor1\t\n\nA CIColor object whose display name is Replacement Color 1.\n\n\ninputCloseness1\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Closeness1.\n\nDefault value: 0.22\n\n\ninputContrast1\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast 1.\n\nDefault value: 0.98\n\n\ninputCenterColor2\t\n\nA CIColor object whose display name is Center Color 2.\n\n\ninputReplacementColor2\t\n\nA CIColor object whose display name is Replacement Color 2.\n\n\ninputCloseness2\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Closeness 2.\n\nDefault value: 0.15\n\n\ninputContrast2\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast 2.\n\nDefault value: 0.98\n\n\ninputCenterColor3\t\n\nA CIColor object whose display name is Center Color 3.\n\n\ninputReplacementColor3\t\n\nA CIColor object whose display name is Replacement Color 3.\n\n\ninputCloseness3\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Closeness 3.\n\nDefault value: 0.50\n\n\ninputContrast3\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Contrast 3.\n\nDefault value: 0.99\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 135The result of using the CISpotColor filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 9 and later.\n\nCISpotLight\n\nApplies a directional spotlight effect to an image.\n\nLocalized Display Name\n\nSpot Light\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputLightPosition\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition3 and whose display name is Light Position.\n\nDefault value: [400 600 150]\n\n\ninputLightPointsAt\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition3 and whose display name is Light Points At.\n\nDefault value: [200 200 0]\n\n\ninputBrightness\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Brightness.\n\nDefault value: 3.00\n\n\ninputConcentration\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Concentration.\n\nDefault value: 0.10\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryStylize\n\nSample Output\nFigure 136The result of using the CISpotLight filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCICategoryTileEffect\nCIAffineClamp\n\nPerforms an affine transform on a source image and then clamps the pixels at the edge of the transformed image, extending them outwards.\n\nLocalized Display Name\n\nAffine Clamp\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTransform\t\n\nOn iOS, an NSValue object whose attribute type is CIAttributeTypeTransform. You must pass the transform as NSData using a statement similar to the following, where xform is an affine transform:\n\n[myFilter setValue:[NSValue valueWithBytes:&xform\nobjCType:@encode(CGAffineTransform)]\nforKey:@\"inputTransform\"];\n\nOn OS X, an NSAffineTransform object whose attribute type is CIAttributeTypeTransform.\n\nDiscussion\n\nThis filter performs similarly to the CIAffineTransform filter except that it produces an image with infinite extent. You can use this filter when you need to blur an image but you want to avoid a soft, black fringe along the edges.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 137The result of using the CIAffineClamp filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIAffineTile\n\nApplies an affine transform to an image and then tiles the transformed image.\n\nLocalized Display Name\n\nAffine Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTransform\t\n\nOn iOS, an NSValue object whose attribute type is CIAttributeTypeTransform. You must pass the transform as NSData using a statement similar to the following, where xform is an affine transform:\n\n[myFilter setValue:[NSValue valueWithBytes:&xform\nobjCType:@encode(CGAffineTransform)]\nforKey:@\"inputTransform\"];\n\nOn OS X, an NSAffineTransform object whose attribute type is CIAttributeTypeTransform.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 138The result of using the CIAffineTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIEightfoldReflectedTile\n\nProduces a tiled image from a source image by applying an 8-way reflected symmetry.\n\nLocalized Display Name\n\nCIEightfoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 139The result of using the CIEightfoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIFourfoldReflectedTile\n\nProduces a tiled image from a source image by applying a 4-way reflected symmetry.\n\nLocalized Display Name\n\nCIFourfoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputAcuteAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Acute Angle.\n\nDefault value: 1.57\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 140The result of using the CIFourfoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIFourfoldRotatedTile\n\nProduces a tiled image from a source image by rotating the source image at increments of 90 degrees.\n\nLocalized Display Name\n\nCIFourfoldRotatedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 141The result of using the CIFourfoldRotatedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIFourfoldTranslatedTile\n\nProduces a tiled image from a source image by applying 4 translation operations.\n\nLocalized Display Name\n\nCIFourfoldTranslatedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputAcuteAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Acute Angle.\n\nDefault value: 1.57\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 142The result of using the CIFourfoldTranslatedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIGlideReflectedTile\n\nProduces a tiled image from a source image by translating and smearing the image.\n\nLocalized Display Name\n\nCIGlideReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 143The result of using the CIGlideReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCIKaleidoscope\n\nProduces a kaleidoscopic image from a source image by applying 12-way symmetry.\n\nLocalized Display Name\n\nKaleidoscope\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Count.\n\nDefault value: 6.00\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 144The result of using the CIKaleidoscope filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIOpTile\n\nSegments an image, applying any specified scaling and rotation, and then assembles the image again to give an op art appearance.\n\nLocalized Display Name\n\nOp Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 2.80\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 65.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 145The result of using the CIOpTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIParallelogramTile\n\nWarps an image by reflecting it in a parallelogram, and then tiles the result.\n\nLocalized Display Name\n\nParallelogram Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputAcuteAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Acute Angle.\n\nDefault value: 1.57\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 146The result of using the CIParallelogramTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIPerspectiveTile\n\nApplies a perspective transform to an image and then tiles the result.\n\nLocalized Display Name\n\nPerspective Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTopLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Left.\n\nDefault value: [118 484]\n\n\ninputTopRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Top Right.\n\nDefault value: [646 507]\n\n\ninputBottomRight\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Right.\n\nDefault value: [548 140]\n\n\ninputBottomLeft\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Bottom Left.\n\nDefault value: [155 153]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 147The result of using the CIPerspectiveTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCISixfoldReflectedTile\n\nProduces a tiled image from a source image by applying a 6-way reflected symmetry.\n\nLocalized Display Name\n\nCISixfoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 148The result of using the CISixfoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCISixfoldRotatedTile\n\nProduces a tiled image from a source image by rotating the source image at increments of 60 degrees.\n\nLocalized Display Name\n\nCISixfoldRotatedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 149The result of using the CISixfoldRotatedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCITriangleKaleidoscope\n\nMaps a triangular portion of an input image to create a kaleidoscope effect.\n\nLocalized Display Name\n\nTriangle Kaleidoscope\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputPoint\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition.\n\nDefault value: [150 150]\n\n\ninputSize\t\n\nA NSNumber object whose attribute type is CIAttributeTypeScalar.\n\nDefault value: 700.00\n\n\ninputRotation\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle.\n\nDefault value: –0.36\n\n\ninputDecay\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar.\n\nDefault: 0.85\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 150The result of using the CITriangleKaleidoscope filter \nAvailability\n\nAvailable in OS X v10.11 and later and in iOS 6.0 and later.\n\nCITriangleTile\n\nMaps a triangular portion of image to a triangular area and then tiles the result.\n\nLocalized Display Name\n\nTriangle Tile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 151The result of using the CITriangleTile filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCITwelvefoldReflectedTile\n\nProduces a tiled image from a source image by rotating the source image at increments of 30 degrees.\n\nLocalized Display Name\n\nCITwelvefoldReflectedTile\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nThe width, along with the inputCenter parameter, defines the portion of the image to tile. An NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTileEffect\n\nSample Output\nFigure 152The result of using the CITwelvefoldReflectedTile filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCICategoryTransition\nCIAccordionFoldTransition\n\nTransitions from one image to another of differing dimensions by unfolding and crossfading.\n\nLocalized Display Name\n\nAccordion Fold Transition\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputBottomHeight\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is BottomHeight.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: 0.00 Slider maximum: 0.00 Identity: 0.00\n\n\ninputNumberOfFolds\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is NumberOfFolds.\n\nDefault value: 3.00 Minimum: 1.00 Maximum: 50.00 Slider minimum: 1.00 Slider maximum: 10.00 Identity: 0.00\n\n\ninputFoldShadowAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is FoldShadowAmount.\n\nDefault value: 0.10 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\nMember Of\n\nCICategoryTransition, CICategoryVideo, CICategoryStillImage, CICategoryBuiltIn\n\nSample Output\nFigure 153The result of using the CIAccordionFoldTransition filter \nAvailability\n\nAvailable in OS X v10.10 and later and in iOS 8.0 and later.\n\nCIBarsSwipeTransition\n\nTransitions from one image to another by passing a bar over the source image.\n\nLocalized Display Name\n\nCIBarsSwipeTransition\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 3.14\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 30.00\n\n\ninputBarOffset\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Bar Offset.\n\nDefault value: 10.00\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 154The result of using the CIBarsSwipeTransition filter \nAvailability\n\nAvailable in OS X v10.5 and later and in iOS 6.0 and later.\n\nCICopyMachineTransition\n\nTransitions from one image to another by simulating the effect of a copy machine.\n\nLocalized Display Name\n\nCopy Machine\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 200.00\n\n\ninputOpacity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Opacity.\n\nDefault value: 1.30\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 155The result of using the CICopyMachineTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDisintegrateWithMaskTransition\n\nTransitions from one image to another using the shape defined by a mask.\n\nLocalized Display Name\n\nDisintegrate with Mask\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputMaskImage\t\n\nA CIImage object whose display name is Mask Image.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputShadowRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Shadow Radius.\n\nDefault value: 8.00\n\n\ninputShadowDensity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Shadow Density.\n\nDefault value: 0.65\n\n\ninputShadowOffset\t\n\nA CIVector object whose attribute type is CIAttributeTypeOffset and whose display name is Shadow Offset.\n\nDefault value: [0 -10]\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 156The result of using the CIDisintegrateWithMaskTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIDissolveTransition\n\nUses a dissolve to transition from one image to another.\n\nLocalized Display Name\n\nDissolve\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryNonSquarePixels, CICategoryInterlaced, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 157The result of using the CIDissolveTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIFlashTransition\n\nTransitions from one image to another by creating a flash.\n\nLocalized Display Name\n\nFlash\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputMaxStriationRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Maximum Striation Radius.\n\nDefault value: 2.58\n\n\ninputStriationStrength\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Strength.\n\nDefault value: 0.50\n\n\ninputStriationContrast\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Striation Contrast.\n\nDefault value: 1.38\n\n\ninputFadeThreshold\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Fade Threshold.\n\nDefault value: 0.85\n\nDiscussion\n\nThe flash originates from a point you specify. Small at first, it rapidly expands until the image frame is completely filled with the flash color. As the color fades, the target image begins to appear.\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 158The result of using the CIFlashTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIModTransition\n\nTransitions from one image to another by revealing the target image through irregularly shaped holes.\n\nLocalized Display Name\n\nMod\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 2.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 150.00\n\n\ninputCompression\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Compression.\n\nDefault value: 300.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 159The result of using the CIModTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCIPageCurlTransition\n\nTransitions from one image to another by simulating a curling page, revealing the new image as the page curls.\n\nLocalized Display Name\n\nPage Curl\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputBacksideImage\t\n\nA CIImage object whose display name is Backside Image.\n\n\ninputShadingImage\t\n\nA CIImage object whose display name is Shading Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 100.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 160The result of using the CIPageCurlTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCIPageCurlWithShadowTransition\n\nTransitions from one image to another by simulating a curling page, revealing the new image as the page curls.\n\nLocalized Display Name\n\nPage Curl With Shadow\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputBacksideImage\t\n\nA CIImage object whose display name is Backside Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 0 0] Identity: (null)\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00 Minimum: 0.00 Maximum: 0.00 Slider minimum: -3.14 Slider maximum: 3.14 Identity: 0.00\n\n\ninputRadius\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Radius.\n\nDefault value: 100.00 Minimum: 0.01 Maximum: 0.00 Slider minimum: 0.01 Slider maximum: 400.00 Identity: 0.00\n\n\ninputShadowSize\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is ShadowSize.\n\nDefault value: 0.50 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputShadowAmount\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is ShadowAmount.\n\nDefault value: 0.70 Minimum: 0.00 Maximum: 1.00 Slider minimum: 0.00 Slider maximum: 1.00 Identity: 0.00\n\n\ninputShadowExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is ShadowExtent.\n\nDefault value: [0 0 0 0] Identity: (null)\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 161The result of using the CIPageCurlWithShadowTransition filter \nAvailability\n\nAvailable in OS X v10.9 and later and in iOS 9 and later.\n\nCIRippleTransition\n\nTransitions from one image to another by creating a circular wave that expands from the center point, revealing the new image in the wake of the wave.\n\nLocalized Display Name\n\nRipple\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputShadingImage\t\n\nA CIImage object whose display name is Shading Image.\n\n\ninputCenter\t\n\nA CIVector object whose attribute type is CIAttributeTypePosition and whose display name is Center.\n\nDefault value: [150 150]\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 100.00\n\n\ninputScale\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Scale.\n\nDefault value: 50.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 162The result of using the CIRippleTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 9 and later.\n\nCISwipeTransition\n\nTransitions from one image to another by simulating a swiping action.\n\nLocalized Display Name\n\nSwipe\n\nParameters\ninputImage\t\n\nA CIImage object whose display name is Image.\n\n\ninputTargetImage\t\n\nA CIImage object whose display name is Target Image.\n\n\ninputExtent\t\n\nA CIVector object whose attribute type is CIAttributeTypeRectangle and whose display name is Extent.\n\nDefault value: [0 0 300 300]\n\n\ninputColor\t\n\nA CIColor object whose attribute type is CIAttributeTypeOpaqueColor and whose display name is Color.\n\n\ninputTime\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeTime and whose display name is Time.\n\nDefault value: 0.00\n\n\ninputAngle\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeAngle and whose display name is Angle.\n\nDefault value: 0.00\n\n\ninputWidth\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeDistance and whose display name is Width.\n\nDefault value: 300.00\n\n\ninputOpacity\t\n\nAn NSNumber object whose attribute type is CIAttributeTypeScalar and whose display name is Opacity.\n\nDefault value: 0.00\n\nMember Of\n\nCICategoryBuiltIn, CICategoryStillImage, CICategoryVideo, CICategoryTransition\n\nSample Output\nFigure 163The result of using the CISwipeTransition filter \nAvailability\n\nAvailable in OS X v10.4 and later and in iOS 6.0 and later.\n\nCopyright © 2018 Apple Inc. All rights reserved. Terms of Use | Privacy Policy | Updated: 2016-03-10\n\n[an error occurred while processing this directive]"
  }
]
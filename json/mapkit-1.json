[
  {
    "title": "clusterAnnotationView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/2867294-clusterannotationview",
    "html": "Discussion\n\nWhen the map is displaying this annotation view, the value of this property is nil.\n\nSee Also\nClustering annotation views\nDecluttering a Map with MapKit Annotation Clustering\nEnhance the readability of a map by replacing overlapping annotations with a clustering annotation view.\nclusteringIdentifier\nAn identifier that determines whether the annotation view participates in clustering."
  },
  {
    "title": "MKAnnotationCalloutInfoDidChangeNotification | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationcalloutinfodidchangenotification",
    "html": "Deprecated\n\nUse KVO notifications instead.\n\nDiscussion\n\nThis notification supports legacy applications and is no longer necessary. MapKit tracks changes to the title and subtitle of an annotation using KVO notifications."
  },
  {
    "title": "MKAnnotationView.DragState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate",
    "html": "Relationships\nConforms To\nSendable"
  },
  {
    "title": "init(maxCenterCoordinateDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/camerazoomrange/3237245-init",
    "html": "Parameters\nmaxDistance\n\nThe maximum distance the user can zoom out on a map based on its center point, measured in meters.\n\nTo increase how far out the user can zoom, use a larger distance value. To decrease how far out the user can zoom, use a smaller distance value.\n\nDiscussion\n\nThe constant, MKMapCameraZoomDefault, specifies the default distance for maxCenterCoordinateDistance.\n\nSee Also\nCreating a camera zoom range\ninit?(minCenterCoordinateDistance: CLLocationDistance, maxCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying a minimum and maximum distance from your map view’s center coordinates, measured in meters.\ninit?(minCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying the minimum distance from your map view’s center coordinate, measured in meters.\nlet MKMapCameraZoomDefault: CLLocationDistance\nA constant value used to represent the default value for zooming in or out on a map."
  },
  {
    "title": "MKAnnotationView.CollisionMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/collisionmode",
    "html": "Topics\nEnumeration Cases\ncase rectangle\nA constant that indicates that the annotation view uses the full collision frame rectangle for detecting collisions.\ncase circle\nA constant that indicates that the annotation view uses an inscribed circle in the collision frame rectangle to determine collisions.\ncase none\nA constant indicating that collisions can’t occur.\nRelationships\nConforms To\nSendable\nSee Also\nManaging collisions between annotation views\nvar collisionMode: MKAnnotationView.CollisionMode\nThe collision mode to use when interpreting the collision frame rectangle."
  },
  {
    "title": "draggable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452401-draggable",
    "html": "Discussion\n\nSetting this property to YES makes an annotation draggable by the user. If YES, the associated annotation object needs to also implement the setCoordinate: method. The default value of this property is NO.\n\nSetting this property to YES lets the map view know that the annotation is draggable. You can’t conditionalize drag operations by attempting to stop an operation the user initiates. Doing so can lead to undefined behavior. After it begins, the drag operation needs to continue to completion.\n\nSee Also\nSupporting drag operations\n- setDragState:animated:\nSets the drag state for the annotation view.\ndragState\nThe drag state of the annotation view."
  },
  {
    "title": "init(minCenterCoordinateDistance:maxCenterCoordinateDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/camerazoomrange/3114298-init",
    "html": "Parameters\nminDistance\n\nThe minimum distance the user can zoom in on a map based on its center point, measured in meters.\n\nTo increase how far in the user can zoom, use a shorter distance value. To decrease how far in the user can zoom, use a larger distance value.\n\nmaxDistance\n\nThe maximum distance the user can zoom out on a map based on its center point, measured in meters.\n\nTo increase how far out the user can zoom, use a larger distance value. To decrease how far out the user can zoom, use a smaller distance value.\n\nDiscussion\n\nSpecify the camera zoom range by providing the minimum and maximum distance values, in meters, from the center coordinate to constrain your map view’s zoom range.\n\nTo specify MapKit's default minimum or maximum center coordinate distance, use the MKMapCameraZoomDefault constant, that allows the user to zoom to any level that MapKit supports.\n\nThe following example creates a zoom range that allows the map to zoom from 1000 – 3000 meters:\n\nMKMapView.CameraZoomRange(\n    minCenterCoordinateDistance: 1000,\n    maxCenterCoordinateDistance: 3000\n)\n\n\nSee Also\nCreating a camera zoom range\ninit?(minCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying the minimum distance from your map view’s center coordinate, measured in meters.\ninit?(maxCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying the maximum distance from your map view’s center coordinate, measured in meters.\nlet MKMapCameraZoomDefault: CLLocationDistance\nA constant value used to represent the default value for zooming in or out on a map."
  },
  {
    "title": "minCenterCoordinateDistance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/camerazoomrange/3114300-mincentercoordinatedistance",
    "html": "See Also\nAccessing zoom range values\nvar maxCenterCoordinateDistance: CLLocationDistance\nThe maximum distance of the camera to the center of the map, measured in meters."
  },
  {
    "title": "init(minCenterCoordinateDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/camerazoomrange/3237246-init",
    "html": "Parameters\nminDistance\n\nThe minimum distance the user can zoom in on a map based on its center point, measured in meters.\n\nTo increase how far in the user can zoom, use a shorter distance value. To decrease how far in the user can zoom, use a larger distance value.\n\nDiscussion\n\nTo specify MapKit's default minimum distance from the center coordinate, use the MKMapCameraZoomDefault constant, that allows the user to zoom to any level that MapKit supports.\n\nThe following example prevents the user from zooming closer than 1000 meters from the map’s center coordinate:\n\nMKMapView.CameraZoomRange(\n    minCenterCoordinateDistance: 1000\n)\n\n\nSee Also\nCreating a camera zoom range\ninit?(minCenterCoordinateDistance: CLLocationDistance, maxCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying a minimum and maximum distance from your map view’s center coordinates, measured in meters.\ninit?(maxCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying the maximum distance from your map view’s center coordinate, measured in meters.\nlet MKMapCameraZoomDefault: CLLocationDistance\nA constant value used to represent the default value for zooming in or out on a map."
  },
  {
    "title": "enabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452411-enabled",
    "html": "Discussion\n\nThe default value of this property is YES. If the value of this property is NO, the annotation view ignores touch events and isn’t selectable. Subclasses may also display the annotation contents differently depending on the value of this property.\n\nSee Also\nGetting and setting attributes\nimage\nThe image the annotation view displays.\nhighlighted\nA Boolean value that indicates whether the map view highlights the annotation view.\nannotation\nThe annotation object associated with the view.\ncenterOffset\nThe offset (in points) at which to display the view.\ncalloutOffset\nThe offset (in points) at which to place the callout.\nreuseIdentifier\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "highlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452047-highlighted",
    "html": "Discussion\n\nDon’t set the value of this property directly. The map view sets it in response to touch events entering or exiting the annotation view’s bounds.\n\nSee Also\nGetting and setting attributes\nenabled\nA Boolean value that indicates whether the annotation is in an enabled state.\nimage\nThe image the annotation view displays.\nannotation\nThe annotation object associated with the view.\ncenterOffset\nThe offset (in points) at which to display the view.\ncalloutOffset\nThe offset (in points) at which to place the callout.\nreuseIdentifier\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "selected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452777-selected",
    "html": "Discussion\n\nDon’t set the value of this property directly. If the property contains YES, the annotation view is displaying a callout.\n\nSee Also\nManaging the selection state\n- setSelected:animated:\nSets the selection state of the annotation view."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1827527-initwithcoder",
    "html": "Parameters\naDecoder\n\nThe unarchiver to read data from.\n\nSee Also\nCreating and preparing an annotation view\n- initWithAnnotation:reuseIdentifier:\nCreates and returns a new annotation view.\n- prepareForReuse\nCalls this method when removing the view from the reuse queue.\n- prepareForDisplay\nNotifies the annotation view that the map view is about to display it."
  },
  {
    "title": "maxCenterCoordinateDistance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/camerazoomrange/3114299-maxcentercoordinatedistance",
    "html": "See Also\nAccessing zoom range values\nvar minCenterCoordinateDistance: CLLocationDistance\nThe minimum distance of the camera to the center of the map, measured in meters."
  },
  {
    "title": "minCenterCoordinateDistance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomrange/3114300-mincentercoordinatedistance",
    "html": "See Also\nAccessing zoom range values\nmaxCenterCoordinateDistance\nThe maximum distance of the camera to the center of the map, measured in meters."
  },
  {
    "title": "MKOverlayLevelAboveRoads | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaylevel/mkoverlaylevelaboveroads",
    "html": "Discussion\n\nMKMapView displays graphics in layers. The value MKOverlayLevelAboveRoads places a layer in the map view above roadways but below map labels."
  },
  {
    "title": "initWithAnnotation:reuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452779-initwithannotation",
    "html": "Parameters\nannotation\n\nThe annotation object to associate with the new view.\n\nreuseIdentifier\n\nIf you plan to reuse the annotation view for similar types of annotations, pass a string to identify it. Although you can pass nil if you don’t intend to reuse the view, reusing annotation views is generally best practice.\n\nReturn Value\n\nThe initialized annotation view, or nil if there’s a problem initializing the object.\n\nDiscussion\n\nThe reuse identifier provides a way for you to improve performance by recycling annotation views as the map scrolls on and off of the map. As MapKit no longer needs views, the map view moves them to a reuse queue. When a new annotation becomes visible, your app can request a view for that annotation by passing the appropriate reuse identifier string to the dequeueReusableAnnotationViewWithIdentifier: method of MKMapView.\n\nSee Also\nCreating and preparing an annotation view\n- initWithCoder:\nCreates an annotation view using data from the specified unarchiver.\n- prepareForReuse\nCalls this method when removing the view from the reuse queue.\n- prepareForDisplay\nNotifies the annotation view that the map view is about to display it.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "mapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcameraboundary/3141911-maprect",
    "html": "Discussion\n\nBoth the mapRect and the region represent the same camera boundary.\n\nSee Also\nAccessing the boundary\nregion\nThe coordinate region that describes the camera boundary."
  },
  {
    "title": "MKMapCameraZoomDefault | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomdefault",
    "html": "Discussion\n\nUse MKMapCameraZoomDefault for the minimum or maximum zoom range when you create an instance of MKMapView.CameraZoomRange to allow the user to zoom to any level that MapKit supports.\n\nSee Also\nCreating a camera zoom range\ninit?(minCenterCoordinateDistance: CLLocationDistance, maxCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying a minimum and maximum distance from your map view’s center coordinates, measured in meters.\ninit?(minCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying the minimum distance from your map view’s center coordinate, measured in meters.\ninit?(maxCenterCoordinateDistance: CLLocationDistance)\nCreate a camera zoom range by specifying the maximum distance from your map view’s center coordinate, measured in meters."
  },
  {
    "title": "initWithCoder: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcameraboundary/3141908-initwithcoder",
    "html": "Parameters\ncoder\n\nThe decoder to use during initialization.\n\nSee Also\nCreating a camera boundary\n- initWithCoordinateRegion:\nCreates a camera boundary using the provided coordinate region.\n- initWithMapRect:\nCreates a camera boundary using the provided map rectangle."
  },
  {
    "title": "initWithCoordinateRegion: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcameraboundary/3141909-initwithcoordinateregion",
    "html": "Parameters\nregion\n\nThe MKCoordinateRegion region that describes the camera boundary.\n\nSee Also\nCreating a camera boundary\n- initWithCoder:\nCreates a camera boundary using the provided coder.\n- initWithMapRect:\nCreates a camera boundary using the provided map rectangle."
  },
  {
    "title": "initWithMapRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcameraboundary/3141910-initwithmaprect",
    "html": "Parameters\nmapRect\n\nThe MKMapRect that describes the camera boundary.\n\nSee Also\nCreating a camera boundary\n- initWithCoder:\nCreates a camera boundary using the provided coder.\n- initWithCoordinateRegion:\nCreates a camera boundary using the provided coordinate region."
  },
  {
    "title": "registerClass:forAnnotationViewWithReuseIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/2887124-registerclass",
    "html": "Parameters\nviewClass\n\nThe class of an annotation view that you use in your map. The class needs to be a subclass of MKAnnotationView.\n\nidentifier\n\nThe reuse identifier to associate with the specified class. This parameter can’t be nil or an empty string.\n\nDiscussion\n\nUse this method to register one or more views that you use to display annotations on your map. Register your classes before adding any annotations to the map.\n\nWhen you register an annotation view class using this method, the dequeueReusableAnnotationViewWithIdentifier:forAnnotation: method uses the provided identifier to create the view that you register. It creates a new view only if an existing view isn’t available for reuse.\n\nSee Also\nCreating annotation views\n- dequeueReusableAnnotationViewWithIdentifier:forAnnotation:\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\n- dequeueReusableAnnotationViewWithIdentifier:\nReturns a reusable annotation view using its identifier.\n- viewForAnnotation:\nReturns the annotation view associated with the specified annotation object, if any.\nMKMapViewDefaultAnnotationViewReuseIdentifier\nThe default reuse identifier for your map’s annotation views.\nMKMapViewDefaultClusterAnnotationViewReuseIdentifier\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcameraboundary/3141912-region",
    "html": "Discussion\n\nBoth the mapRect and the region represent the same camera boundary.\n\nSee Also\nAccessing the boundary\nmapRect\nThe map rectangle that describes the camera boundary."
  },
  {
    "title": "initWithMinCenterCoordinateDistance: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomrange/3237246-initwithmincentercoordinatedista",
    "html": "Parameters\nminDistance\n\nThe minimum distance the user can zoom in on a map based on its center point, measured in meters.\n\nTo increase how far in the user can zoom, use a shorter distance value. To decrease how far in the user can zoom, use a larger distance value.\n\nDiscussion\n\nTo specify MapKit's default minimum distance from the center coordinate, use the MKMapCameraZoomDefault constant, that allows the user to zoom to any level that MapKit supports.\n\nThe following example prevents the user from zooming closer than 1000 meters from the map’s center coordinate:\n\nMKMapView.CameraZoomRange(\n    minCenterCoordinateDistance: 1000\n)\n\n\nSee Also\nCreating a camera zoom range\n- initWithMinCenterCoordinateDistance:maxCenterCoordinateDistance:\nCreate a camera zoom range by specifying a minimum and maximum distance from your map view’s center coordinates, measured in meters.\n- initWithMaxCenterCoordinateDistance:\nCreate a camera zoom range by specifying the maximum distance from your map view’s center coordinate, measured in meters.\nMKMapCameraZoomDefault\nA constant value used to represent the default value for zooming in or out on a map."
  },
  {
    "title": "dequeueReusableAnnotationViewWithIdentifier:forAnnotation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/2887123-dequeuereusableannotationviewwit",
    "html": "Parameters\nidentifier\n\nA string identifying the annotation view to create.\n\nannotation\n\nThe annotation the map is displaying. This method automatically assigns this annotation object to the returned annotation view.\n\nReturn Value\n\nAn annotation view with the specified identifier.\n\nDiscussion\n\nFor performance reasons, be sure to reuse MKAnnotationView objects in your map views. As annotation views move offscreen, the map view moves them to an internally managed reuse queue. As new annotations move onscreen, and the map view prompts your code to provide a corresponding annotation view, use this method to dequeue an existing view. Dequeueing saves time and memory during performance-critical operations, such as scrolling.\n\nIf the map view can dequeue an existing view, this method tries to create one from the specified identifier. Before this can happen, you need to register an annotation view class using the registerClass:forAnnotationViewWithReuseIdentifier: method. If there’s no registered class with the appropriate identifier, this method throws an exception.\n\nSee Also\nCreating annotation views\n- registerClass:forAnnotationViewWithReuseIdentifier:\nRegisters an annotation view class that the map can create automatically.\n- dequeueReusableAnnotationViewWithIdentifier:\nReturns a reusable annotation view using its identifier.\n- viewForAnnotation:\nReturns the annotation view associated with the specified annotation object, if any.\nMKMapViewDefaultAnnotationViewReuseIdentifier\nThe default reuse identifier for your map’s annotation views.\nMKMapViewDefaultClusterAnnotationViewReuseIdentifier\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "annotationsInMapRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452279-annotationsinmaprect",
    "html": "Parameters\nmapRect\n\nThe portion of the map that you want to search for annotations.\n\nReturn Value\n\nThe set of annotation objects within mapRect.\n\nDiscussion\n\nThis method offers a fast way to retrieve the annotation objects in a particular portion of the map. It’s much faster than doing a linear search of the objects in the annotations property yourself.\n\nSee Also\nAnnotating the map\nannotations\nThe annotations associated with the map view.\n- addAnnotation:\nAdds the specified annotation to the map view.\n- addAnnotations:\nAdds an array of annotation objects to the map view.\n- removeAnnotation:\nRemoves the specified annotation object from the map view.\n- removeAnnotations:\nRemoves an array of annotation objects from the map view."
  },
  {
    "title": "userLocationVisible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452040-userlocationvisible",
    "html": "Discussion\n\nWhen determining whether the user’s location is visible, this property factors in the horizontal accuracy of the location data. Specifically, if the rectangle that the user’s location represents, plus or minus the horizontal accuracy of that location, intersects the map’s visible rectangle, this property contains the value YES. If that location rectangle doesn’t intersect the map’s visible rectangle, this property contains the value NO.\n\nWhen the user’s location is unknown, this property contains the value NO.\n\nSee Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nshowsUserLocation\nA Boolean value that indicates whether the map tries to display the user’s location.\nuserLocation\nThe annotation object that represents the user’s location.\nuserTrackingMode\nThe mode to use for tracking the user’s location.\n- setUserTrackingMode:animated:\nSets the mode to use for tracking the user’s location, with optional animation.\nMKUserTrackingMode\nThe mode to use for tracking the user’s location on the map."
  },
  {
    "title": "maxCenterCoordinateDistance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomrange/3114299-maxcentercoordinatedistance",
    "html": "See Also\nAccessing zoom range values\nminCenterCoordinateDistance\nThe minimum distance of the camera to the center of the map, measured in meters."
  },
  {
    "title": "initWithMaxCenterCoordinateDistance: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomrange/3237245-initwithmaxcentercoordinatedista",
    "html": "Parameters\nmaxDistance\n\nThe maximum distance the user can zoom out on a map based on its center point, measured in meters.\n\nTo increase how far out the user can zoom, use a larger distance value. To decrease how far out the user can zoom, use a smaller distance value.\n\nDiscussion\n\nThe constant, MKMapCameraZoomDefault, specifies the default distance for maxCenterCoordinateDistance.\n\nSee Also\nCreating a camera zoom range\n- initWithMinCenterCoordinateDistance:maxCenterCoordinateDistance:\nCreate a camera zoom range by specifying a minimum and maximum distance from your map view’s center coordinates, measured in meters.\n- initWithMinCenterCoordinateDistance:\nCreate a camera zoom range by specifying the minimum distance from your map view’s center coordinate, measured in meters.\nMKMapCameraZoomDefault\nA constant value used to represent the default value for zooming in or out on a map."
  },
  {
    "title": "initWithMinCenterCoordinateDistance:maxCenterCoordinateDistance: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomrange/3114298-initwithmincentercoordinatedista",
    "html": "Parameters\nminDistance\n\nThe minimum distance the user can zoom in on a map based on its center point, measured in meters.\n\nTo increase how far in the user can zoom, use a shorter distance value. To decrease how far in the user can zoom, use a larger distance value.\n\nmaxDistance\n\nThe maximum distance the user can zoom out on a map based on its center point, measured in meters.\n\nTo increase how far out the user can zoom, use a larger distance value. To decrease how far out the user can zoom, use a smaller distance value.\n\nDiscussion\n\nSpecify the camera zoom range by providing the minimum and maximum distance values, in meters, from the center coordinate to constrain your map view’s zoom range.\n\nTo specify MapKit's default minimum or maximum center coordinate distance, use the MKMapCameraZoomDefault constant, that allows the user to zoom to any level that MapKit supports.\n\nThe following example creates a zoom range that allows the map to zoom from 1000 – 3000 meters:\n\nMKMapView.CameraZoomRange(\n    minCenterCoordinateDistance: 1000,\n    maxCenterCoordinateDistance: 3000\n)\n\n\nSee Also\nCreating a camera zoom range\n- initWithMinCenterCoordinateDistance:\nCreate a camera zoom range by specifying the minimum distance from your map view’s center coordinate, measured in meters.\n- initWithMaxCenterCoordinateDistance:\nCreate a camera zoom range by specifying the maximum distance from your map view’s center coordinate, measured in meters.\nMKMapCameraZoomDefault\nA constant value used to represent the default value for zooming in or out on a map."
  },
  {
    "title": "MKOverlayLevelAboveLabels | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaylevel/mkoverlaylevelabovelabels",
    "html": "Discussion\n\nMKMapView displays graphics in layers. The value MKOverlayLevelAboveLabels places a layer in the map view above roadways and map labels."
  },
  {
    "title": "dequeueReusableAnnotationViewWithIdentifier: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452672-dequeuereusableannotationviewwit",
    "html": "Parameters\nidentifier\n\nA string identifying the annotation view for the map view to reuse. This string is the same one you specify when initializing the annotation view using the initWithAnnotation:reuseIdentifier: method.\n\nReturn Value\n\nAn annotation view with the specified identifier, or nil if no such object exists in the reuse queue.\n\nDiscussion\n\nFor performance reasons, it’s best practice to reuse MKAnnotationView objects in your map views. As annotation views move offscreen, the map view moves them to an internally managed reuse queue. As new annotations move onscreen, and the map view prompts your code to provide a corresponding annotation view, attempt to dequeue an existing view before creating a new one. Dequeueing saves time and memory during performance-critical operations like scrolling.\n\nSee Also\nCreating annotation views\n- registerClass:forAnnotationViewWithReuseIdentifier:\nRegisters an annotation view class that the map can create automatically.\n- dequeueReusableAnnotationViewWithIdentifier:forAnnotation:\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\n- viewForAnnotation:\nReturns the annotation view associated with the specified annotation object, if any.\nMKMapViewDefaultAnnotationViewReuseIdentifier\nThe default reuse identifier for your map’s annotation views.\nMKMapViewDefaultClusterAnnotationViewReuseIdentifier\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "placemark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618481-placemark",
    "html": "Deprecated\n\nUse the CLGeocoder class instead. Note that placemarks in CLGeocoder always come back to the coordinate of the place, not the requested coordinate.\n\nDiscussion\n\nThe value of this property is nil by default. After a successful reverse-geocoding operation, it is set to the placemark object that was generated.\n\nSee Also\nAccessing Reverse Geocoder Attributes\ndelegate\nThe reverse geocoder’s delegate object.\nDeprecated\ncoordinate\nThe coordinate whose placemark data you want to retrieve.\nDeprecated"
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618477-coordinate",
    "html": "Deprecated\n\nUse the CLGeocoder class instead.\n\nSee Also\nAccessing Reverse Geocoder Attributes\ndelegate\nThe reverse geocoder’s delegate object.\nDeprecated\nplacemark\nThe result of the reverse-geocoding operation.\nDeprecated"
  },
  {
    "title": "MKMapCameraBoundary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcameraboundary",
    "html": "Overview\n\nThe constraints of the camera boundary restrict the center point of your map.\n\nTopics\nCreating a camera boundary\n- initWithCoder:\nCreates a camera boundary using the provided coder.\n- initWithCoordinateRegion:\nCreates a camera boundary using the provided coordinate region.\n- initWithMapRect:\nCreates a camera boundary using the provided map rectangle.\nAccessing the boundary\nmapRect\nThe map rectangle that describes the camera boundary.\nregion\nThe coordinate region that describes the camera boundary.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\n- setCameraBoundary:animated:\nSets the camera boundary for the map view, specifying whether to use animation.\ncameraBoundary\nThe boundary of the area within which the map view’s center needs to remain.\n- setCameraZoomRange:animated:\nSets the camera zoom range for the map view, specifying whether to use animation.\ncameraZoomRange\nThe zoom range to apply to the map view.\nMKMapCameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom."
  },
  {
    "title": "convertPoint:toCoordinateFromView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452503-convertpoint",
    "html": "Parameters\npoint\n\nThe point you want to convert.\n\nview\n\nThe view that serves as the reference coordinate system for the point parameter.\n\nReturn Value\n\nThe map coordinate at the specified point.\n\nSee Also\nConverting map coordinates\n- convertCoordinate:toPointToView:\nConverts a map coordinate to a point in the specified view.\n- convertRegion:toRectToView:\nConverts a map region to a rectangle in the specified view.\n- convertRect:toRegionFromView:\nConverts a rectangle in the specified view’s coordinate system to a map region."
  },
  {
    "title": "MKMapCameraZoomRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamerazoomrange",
    "html": "Overview\n\nCreate a camera zoom range to limit the distance to which the user can zoom. After you create the camera zoom range, you can apply it to multiple map views. If you don’t create a camera zoom range, your map view allows the user to zoom to MapKit’s capabilities.\n\nTopics\nCreating a camera zoom range\n- initWithMinCenterCoordinateDistance:maxCenterCoordinateDistance:\nCreate a camera zoom range by specifying a minimum and maximum distance from your map view’s center coordinates, measured in meters.\n- initWithMinCenterCoordinateDistance:\nCreate a camera zoom range by specifying the minimum distance from your map view’s center coordinate, measured in meters.\n- initWithMaxCenterCoordinateDistance:\nCreate a camera zoom range by specifying the maximum distance from your map view’s center coordinate, measured in meters.\nMKMapCameraZoomDefault\nA constant value used to represent the default value for zooming in or out on a map.\nAccessing zoom range values\nmaxCenterCoordinateDistance\nThe maximum distance of the camera to the center of the map, measured in meters.\nminCenterCoordinateDistance\nThe minimum distance of the camera to the center of the map, measured in meters.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\n- setCameraBoundary:animated:\nSets the camera boundary for the map view, specifying whether to use animation.\ncameraBoundary\nThe boundary of the area within which the map view’s center needs to remain.\n- setCameraZoomRange:animated:\nSets the camera zoom range for the map view, specifying whether to use animation.\ncameraZoomRange\nThe zoom range to apply to the map view.\nMKMapCameraBoundary\nA boundary of an area within which the map’s center needs to remain."
  },
  {
    "title": "MKErrorLoadingThrottled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerrorcode/mkerrorloadingthrottled",
    "html": "Discussion\n\nThis error can occur if an app makes frequent requests for data over a short period of time."
  },
  {
    "title": "reverseGeocoder:didFailWithError: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoderdelegate/1618473-reversegeocoder",
    "html": "Required\n\nDeprecated\n\nUse the CLGeocoder class instead.\n\nParameters\ngeocoder\n\nThe reverse geocoder object that was unable to complete its request.\n\nerror\n\nAn error object indicating the reason the request did not succeed.\n\nSee Also\nProcessing placemark searches\n- reverseGeocoder:didFindPlacemark:\nTells the delegate that a reverse geocoder successfully obtained placemark information for its coordinate.\n\nRequired\n\nDeprecated"
  },
  {
    "title": "reverseGeocoder:didFindPlacemark: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoderdelegate/1618476-reversegeocoder",
    "html": "Required\n\nDeprecated\n\nUse the CLGeocoder class instead.\n\nParameters\ngeocoder\n\nThe reverse geocoder object that completed its request successfully.\n\nplacemark\n\nThe object containing the placemark data.\n\nDiscussion\n\nYou can get the map coordinate for the associated request from either the reverse geocoder object or from the placemark object, which itself supports the MKAnnotation protocol.\n\nSee Also\nProcessing placemark searches\n- reverseGeocoder:didFailWithError:\nTells the delegate that the specified reverse geocoder failed to obtain information about its coordinate.\n\nRequired\n\nDeprecated\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "exchangeOverlayAtIndex:withOverlayAtIndex: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452575-exchangeoverlayatindex",
    "html": "Parameters\nindex1\n\nThe index of an overlay in the MKOverlayLevelAboveLabels map level.\n\nindex2\n\nThe index of another overlay in the MKOverlayLevelAboveLabels map level.\n\nDiscussion\n\nIf you need to exchange overlays in other map levels, use the exchangeOverlay:withOverlay: method.\n\nSee Also\nAdding and inserting overlays\n- addOverlay:level:\nAdds the overlay object to the map at the specified level.\n- addOverlays:level:\nAdds an array of overlay objects to the map at the specified level.\n- addOverlay:\nAdds a single overlay object to the map.\n- addOverlays:\nAdds an array of overlay objects to the map.\n- insertOverlay:atIndex:level:\nInserts an overlay object into the level at the specified index.\n- insertOverlay:atIndex:\nInserts an overlay object into the list associated with the map.\n- insertOverlay:aboveOverlay:\nInserts one overlay object above another.\n- insertOverlay:belowOverlay:\nInserts one overlay object below another.\n- exchangeOverlay:withOverlay:\nExchanges the positions of two overlay objects."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618478-delegate",
    "html": "Deprecated\n\nUse the CLGeocoder class instead.\n\nDiscussion\n\nA reverse-geocoder object sends messages to its delegate regarding the successful (or unsuccessful) acquisition of placemark data. You must provide a delegate object to receive this data.\n\nFor more information about the MKReverseGeocoderDelegate protocol, see MKReverseGeocoderDelegate.\n\nSee Also\nAccessing Reverse Geocoder Attributes\ncoordinate\nThe coordinate whose placemark data you want to retrieve.\nDeprecated\nplacemark\nThe result of the reverse-geocoding operation.\nDeprecated"
  },
  {
    "title": "convertCoordinate:toPointToView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452694-convertcoordinate",
    "html": "Parameters\ncoordinate\n\nThe map coordinate that you want to find the corresponding point for.\n\nview\n\nThe view where you want to locate the specified map coordinate. If this parameter is nil, the method specifies the returned point in the window’s coordinate system. If view isn’t nil, the point belongs to the same window as the map view.\n\nReturn Value\n\nThe point (in the appropriate view or window coordinate system) corresponding to the specified latitude and longitude value.\n\nSee Also\nConverting map coordinates\n- convertPoint:toCoordinateFromView:\nConverts a point in the specified view’s coordinate system to a map coordinate.\n- convertRegion:toRectToView:\nConverts a map region to a rectangle in the specified view.\n- convertRect:toRegionFromView:\nConverts a rectangle in the specified view’s coordinate system to a map region."
  },
  {
    "title": "querying | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618474-querying",
    "html": "Deprecated\n\nUse the CLGeocoder class instead.\n\nDiscussion\n\nThis property contains YES if the process is ongoing or NO if the process is done or has not yet been initiated.\n\nSee Also\nManaging the Search\n- start\nStarts the reverse-geocoding process asynchronously.\nDeprecated\n- cancel\nCancels a pending reverse-geocoding request.\nDeprecated"
  },
  {
    "title": "viewForAnnotation: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452512-viewforannotation",
    "html": "Parameters\nannotation\n\nThe annotation object whose view you want.\n\nReturn Value\n\nThe annotation view or nil if the view has not yet been created. This method may also return nil if the annotation is not in the visible map region and therefore does not have an associated annotation view.\n\nSee Also\nCreating annotation views\n- registerClass:forAnnotationViewWithReuseIdentifier:\nRegisters an annotation view class that the map can create automatically.\n- dequeueReusableAnnotationViewWithIdentifier:forAnnotation:\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\n- dequeueReusableAnnotationViewWithIdentifier:\nReturns a reusable annotation view using its identifier.\nMKMapViewDefaultAnnotationViewReuseIdentifier\nThe default reuse identifier for your map’s annotation views.\nMKMapViewDefaultClusterAnnotationViewReuseIdentifier\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "initWithCoordinate: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618471-initwithcoordinate",
    "html": "Deprecated\n\nUse the CLGeocoder class instead.\n\nParameters\ncoordinate\n\nThe map coordinate whose placemark information you want to retrieve.\n\nReturn Value\n\nAn initialized MKReverseGeocoder object.\n\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "rendererForOverlay: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452464-rendererforoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object whose renderer you want.\n\nReturn Value\n\nThe renderer object in use for the specified overlay or nil if the overlay is not onscreen.\n\nDiscussion\n\nThis method returns the renderer object that your map delegate provided in its mapView:rendererForOverlay: method.\n\nSee Also\nAccessing overlays\noverlays\nThe overlay objects associated with the map view.\n- overlaysInLevel:\nReturns overlay objects in the specified level of the map.\nMKOverlayLevel\nConstants that indicate the position of overlays relative to other content.\n- viewForOverlay:\nReturns the view associated with the overlay object, if any.\nDeprecated"
  },
  {
    "title": "overlaysInLevel: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452757-overlaysinlevel",
    "html": "Parameters\nlevel\n\nThe map level whose overlays you want. For a list of possible values for this parameter, see MKOverlayLevel.\n\nReturn Value\n\nAn array of objects conforming to the MKOverlay protocol that display in the specified map level. If there are no overlays at the specified level, this method returns an empty array.\n\nDiscussion\n\nYou can use this method to get all of the overlays assigned to a specific map level, which might be a subset of the complete set of overlay objects. For overlapping overlay objects, the order of objects in the array represents their visual order when displayed on the map, with objects in the beginning of the array located behind those at later indexes.\n\nSee Also\nAccessing overlays\noverlays\nThe overlay objects associated with the map view.\n- rendererForOverlay:\nReturns the renderer object for drawing the contents of the specified overlay object.\nMKOverlayLevel\nConstants that indicate the position of overlays relative to other content.\n- viewForOverlay:\nReturns the view associated with the overlay object, if any.\nDeprecated\nRelated Documentation\n- addOverlays:level:\nAdds an array of overlay objects to the map at the specified level.\n- addOverlay:level:\nAdds the overlay object to the map at the specified level."
  },
  {
    "title": "cancel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618479-cancel",
    "html": "Deprecated\n\nUse the CLGeocoder class instead.\n\nDiscussion\n\nYou can use this method to cancel a pending request and free up the resources associated with that request. If the request has already returned or has not yet begun, calling this method has no effect.\n\nSee Also\nManaging the Search\n- start\nStarts the reverse-geocoding process asynchronously.\nDeprecated\nquerying\nA Boolean value indicating whether the receiver is in the middle of reverse-geocoding its coordinate.\nDeprecated"
  },
  {
    "title": "start | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder/1618480-start",
    "html": "Deprecated\n\nUse the CLGeocoder class instead.\n\nDiscussion\n\nYou should call this method only once to begin the reverse-geocoding process. This method submits the coordinate value to the map server asynchronously and returns. Once the process is complete, the results are delivered to the associated delegate object.\n\nSee Also\nManaging the Search\nquerying\nA Boolean value indicating whether the receiver is in the middle of reverse-geocoding its coordinate.\nDeprecated\n- cancel\nCancels a pending reverse-geocoding request.\nDeprecated"
  },
  {
    "title": "convert(_:toRectTo:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452055-convert",
    "html": "Parameters\nregion\n\nThe map region that you want to find the corresponding view rectangle for.\n\nview\n\nThe view where you want to locate the specified map region. If this parameter is nil, the method specifies the returned rectangle in the window’s coordinate system. If view isn’t nil, the rectangle belongs to the same window as the map view.\n\nReturn Value\n\nThe rectangle corresponding to the specified map region.\n\nSee Also\nConverting map coordinates\nfunc convert(CLLocationCoordinate2D, toPointTo: UIView?) -> CGPoint\nConverts a map coordinate to a point in the specified view.\nfunc convert(CGPoint, toCoordinateFrom: UIView?) -> CLLocationCoordinate2D\nConverts a point in the specified view’s coordinate system to a map coordinate.\nfunc convert(CGRect, toRegionFrom: UIView?) -> MKCoordinateRegion\nConverts a rectangle in the specified view’s coordinate system to a map region."
  },
  {
    "title": "convertRect:toRegionFromView: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452305-convertrect",
    "html": "Parameters\nrect\n\nThe rectangle you want to convert.\n\nview\n\nThe view that serves as the reference coordinate system for the rect parameter.\n\nReturn Value\n\nThe map region corresponding to the specified view rectangle.\n\nSee Also\nConverting map coordinates\n- convertCoordinate:toPointToView:\nConverts a map coordinate to a point in the specified view.\n- convertPoint:toCoordinateFromView:\nConverts a point in the specified view’s coordinate system to a map coordinate.\n- convertRegion:toRectToView:\nConverts a map region to a rectangle in the specified view."
  },
  {
    "title": "MKLocalSearch.Request | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request",
    "html": "Overview\n\nYou create an MKLocalSearch.Request object when you want to search for map locations based on a natural language string. For example, if your interface allows the user to type in addresses, place the typed text in this object and pass it to an MKLocalSearch object to begin the search process. When specifying your search strings, include a map region to narrow the search results to the specified geographical area.\n\nWhen creating an MKLocalSearch.Request object yourself, set the naturalLanguageQuery property to an appropriate search string, as in the following example:\n\nlet searchRequest = MKLocalSearch.Request()\nsearchRequest.naturalLanguageQuery = \"coffee\"\n\n\n// Set the region to an associated map view's region.\nsearchRequest.region = myMapView.region\n\n\nlet search = MKLocalSearch(request: searchRequest)\nsearch.start { (response, error) in\n    guard let response = response else {\n        // Handle the error.\n    }\n    \n    for item in response.mapItems {\n        if let name = item.name,\n            let location = item.placemark.location {\n            print(\"\\(name): \\(location.coordinate.latitude),\\(location.coordinate.longitude)\")\n        }\n    }\n}\n\n\nIf your app uses an MKLocalSearchCompleter object to implement autocomplete support for user-supplied search strings, initialize your search request using the search completion that the user selects. In that case, use the init(completion:) method instead of the init() method to initialize your search request object. The completion object automatically provides the value for the naturalLanguageQuery property.\n\nTopics\nCreating a local search request\ninit()\nCreates a local search request.\ninit(completion: MKLocalSearchCompletion)\nCreates and returns a search request based on the specified search completion data.\nConfiguring the search parameters\nvar naturalLanguageQuery: String?\nA string containing the desired search item.\nvar region: MKCoordinateRegion\nA map region that provides a hint as to where to search.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point-of-interest categories to include or exclude in search results.\nvar resultTypes: MKLocalSearch.ResultType\nThe types of items to include in the search results.\ntypealias MKLocalSearch.Request.ResultType\nOptions that indicate types of search results.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nCreating a search request\ninit(request: MKLocalSearch.Request)\nCreates and returns a search object with the specified parameters.\ninit(request: MKLocalPointsOfInterestRequest)\nCreates and returns a search object for fetching points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "setCenterCoordinate:animated: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451976-setcentercoordinate",
    "html": "Parameters\ncoordinate\n\nThe new center coordinate for the map.\n\nanimated\n\nSpecify YES if you want the map view to scroll to the new location or NO if you want the map to display the new location immediately.\n\nDiscussion\n\nChanging the center coordinate centers the map on the new coordinate without changing the current zoom level. It also updates the value in the region property to reflect the new center coordinate and the new span values needed to maintain the current zoom level.\n\nSee Also\nManipulating the visible portion of the map\nregion\nThe area the map view displays.\n- setRegion:animated:\nChanges the currently visible region, and optionally animates the change.\ncenterCoordinate\nThe map coordinate at the center of the map view.\n- showAnnotations:animated:\nSets the visible region so that the map displays the specified annotations.\nvisibleMapRect\nThe area visible in the map view.\n- setVisibleMapRect:animated:\nChanges the currently visible portion of the map, and optionally animates the change.\n- setVisibleMapRect:edgePadding:animated:\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "rotateEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452274-rotateenabled",
    "html": "Discussion\n\nWhen this property is YES and the framework associates a valid camera with the map, the map uses the camera’s heading angle to rotate the plane of the map around its center point. When this property is NO, the map view ignores the camera’s heading angle and the map orients so that the map view situates true north at the top.\n\nSee Also\nAccessing map properties\nMKMapType\nThe type of map to display.\nzoomEnabled\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nscrollEnabled\nA Boolean value that determines whether the user may scroll around the map.\npitchEnabled\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nmapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "MKLocalSearchResultTypeAddress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchresulttype/mklocalsearchresulttypeaddress",
    "html": "See Also\nSpecifying types of search results\nMKLocalSearchResultTypePointOfInterest\nA value that indicates that search results include points of interest."
  },
  {
    "title": "MKLocalSearchResultTypePointOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchresulttype/mklocalsearchresulttypepointofinterest",
    "html": "See Also\nSpecifying types of search results\nMKLocalSearchResultTypeAddress\nA value that indicates that search results include addresses."
  },
  {
    "title": "pitchEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452265-pitchenabled",
    "html": "Discussion\n\nWhen this property is YES and the framework associates a valid camera with the map, the map view uses the camera’s pitch angle to tilt the plane of the map. When this property is NO, the map ignores the camera’s pitch angle and the map displays as if the user is looking straight down onto it.\n\nIn an app, be sure to check the value of this property to determine whether a map can support 3D.\n\nSee Also\nAccessing map properties\nMKMapType\nThe type of map to display.\nzoomEnabled\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nscrollEnabled\nA Boolean value that determines whether the user may scroll around the map.\nrotateEnabled\nA Boolean value that indicates whether the map uses the camera’s heading information.\nmapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "x | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath/1452608-x",
    "html": "See Also\nInstance properties\nvar y: Int\nThe index of the tile along the y-axis of the map.\nvar z: Int\nThe index of the tile along the z-axis of the map.\nvar contentScaleFactor: CGFloat\nThe tile’s intended screen scale factor."
  },
  {
    "title": "init(center:latitudinalMeters:longitudinalMeters:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452245-init",
    "html": "Parameters\ncenterCoordinate\n\nThe center point of the new coordinate region.\n\nlatitudinalMeters\n\nThe north-to-south span of the region (measured in meters) specified as the distance from the center point to the bounds along the north-to-south axis.\n\nlongitudinalMeters\n\nThe east-to-west span of the region (measured in meters) specified as the distance from the center point to the bounds along the east-to-west axis.\n\nReturn Value\n\nA region with the specified values.\n\nSee Also\nCreating a region\ninit()\nCreates a coordinate region.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle.\ninit(center: CLLocationCoordinate2D, span: MKCoordinateSpan)\nCreates a coordinate region with a span around the specified center coordinate."
  },
  {
    "title": "scrollEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451998-scrollenabled",
    "html": "Discussion\n\nThis property controls only user interactions with the map. If you set the value of this property to NO, you may still change the map location programmatically by changing the value in the region property.\n\nThe default value of this property is YES.\n\nSee Also\nAccessing map properties\nMKMapType\nThe type of map to display.\nzoomEnabled\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\npitchEnabled\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nrotateEnabled\nA Boolean value that indicates whether the map uses the camera’s heading information.\nmapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "zoomEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452577-zoomenabled",
    "html": "Discussion\n\nThis property controls only user interactions with the map. If you set the value of this property to NO, you may still change the zoom level programmatically by changing the value in the region property.\n\nThe default value of this property is YES.\n\nSee Also\nAccessing map properties\nMKMapType\nThe type of map to display.\nscrollEnabled\nA Boolean value that determines whether the user may scroll around the map.\npitchEnabled\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nrotateEnabled\nA Boolean value that indicates whether the map uses the camera’s heading information.\nmapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452514-init",
    "html": "Parameters\ncoordinate\n\nThe coordinate containing the latitude and longitude values for the desired point.\n\nReturn Value\n\nThe map point value that corresponds to the specified coordinate on a two-dimensional map projection.\n\nSee Also\nCreating a map point\ninit()\nCreates a map point at an unspecified point.\ninit(x: Double, y: Double)\nCreates a new map point structure from the specified values."
  },
  {
    "title": "contentScaleFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath/1452481-contentscalefactor",
    "html": "Discussion\n\nThis value is typically either 1.0 (for standard resolution displays) or 2.0 (for Retina displays).\n\nSee Also\nInstance properties\nvar x: Int\nThe index of the tile along the x-axis of the map.\nvar y: Int\nThe index of the tile along the y-axis of the map.\nvar z: Int\nThe index of the tile along the z-axis of the map."
  },
  {
    "title": "setNeedsDisplayInMapRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613866-setneedsdisplayinmaprect",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nmapRect\n\nThe portion of the overlay that needs to be updated. This value is specified using a map rectangle and not view coordinates. You can convert from a view rectangle to a map rectangle using the mapRectForRect: method.\n\nDiscussion\n\nMarking a rectangle as invalid causes that portion of the view to be redrawn during the next update cycle. This method invalidates the overlay regardless of the current zoom scale associated with the map.\n\nSee Also\nDrawing the overlay\n- canDrawMapRect:zoomScale:\nReturns a Boolean value indicating whether the overlay view is ready to draw its content.\nDeprecated\n- drawMapRect:zoomScale:inContext:\nDraws the contents of the overlay view.\nDeprecated\n- setNeedsDisplayInMapRect:zoomScale:\nInvalidates the view in the given map rectangle but only at the specified zoom scale.\nDeprecated"
  },
  {
    "title": "MKErrorCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerrorcode",
    "html": "Topics\nConstants\nMKErrorDecodingFailed\nGeoJSON decoding failed.\nMKErrorDirectionsNotFound\nThe framework couldn’t find the specified directions.\nMKErrorLoadingThrottled\nThe data didn’t load because data throttling is in effect.\nMKErrorPlacemarkNotFound\nThe specified placemark could not be found.\nMKErrorServerFailure\nThe map server was unable to return the desired information.\nMKErrorUnknown\nAn unknown error occurred.\nSee Also\nErrors\nMKErrorDomain\nThe error domain for MapKit."
  },
  {
    "title": "MKMapSnapshotter.Snapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/snapshot",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you use an MKMapSnapshotter object to capture the map contents asynchronously. An MKMapSnapshotter.Snapshot object contains the image that the snapshotter generates from the map contents.\n\nSnapshot images don’t include any custom overlays or annotations that your app adds to the map view. If you want your annotations and overlays to appear on the final image, you need to draw them yourself. To position those items correctly on the image, use the point(for:) method of this class to translate the overlay or annotation coordinate value to an appropriate location inside the image’s coordinate space.\n\nTopics\nGetting the snapshot image\nvar image: UIImage\nThe image of the map’s content.\nvar appearance: NSAppearance\nThe visual style that MapKit uses when rendering the snapshot.\nGetting points on the image\nfunc point(for: CLLocationCoordinate2D) -> CGPoint\nConverts the specified map coordinate to a point in the coordinate space of the image.\nGetting appearance traits\nvar traitCollection: UITraitCollection\nTraits to use when creating the snapshot.\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "MKLocalSearchCompleterResultTypeQuery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterresulttype/mklocalsearchcompleterresulttypequery",
    "html": "Discussion\n\nFor example, the search string cof yields a completion for coffee.\n\nSee Also\nType properties\nMKLocalSearchCompleterResultTypeAddress\nA value that indicates that the search completer includes address completions in results.\nMKLocalSearchCompleterResultTypePointOfInterest\nA value that indicates that the search completer includes point-of-interest completions in results."
  },
  {
    "title": "MKLocalSearchCompleterResultTypeAddress | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterresulttype/mklocalsearchcompleterresulttypeaddress",
    "html": "See Also\nType properties\nMKLocalSearchCompleterResultTypePointOfInterest\nA value that indicates that the search completer includes point-of-interest completions in results.\nMKLocalSearchCompleterResultTypeQuery\nA value that indicates that the search completer includes query completions in results."
  },
  {
    "title": "MKLocalSearchCompleterResultTypePointOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterresulttype/mklocalsearchcompleterresulttypepointofinterest",
    "html": "See Also\nType properties\nMKLocalSearchCompleterResultTypeAddress\nA value that indicates that the search completer includes address completions in results.\nMKLocalSearchCompleterResultTypeQuery\nA value that indicates that the search completer includes query completions in results."
  },
  {
    "title": "setCoordinate: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotation/1429528-setcoordinate",
    "html": "Parameters\nnewCoordinate\n\nThe new center point for the annotation.\n\nDiscussion\n\nAnnotations that support dragging should implement this method to update the position of the annotation.\n\nIf you implement this method, you must update the value of the coordinate in a key-value observing (KVO) compliant way. For more information on how to implement support for KVO, see Key-Value Observing Programming Guide.\n\nSee Also\nPosition attributes\ncoordinate\nThe center point (specified as a map coordinate) of the annotation.\n\nRequired"
  },
  {
    "title": "initWithOverlay: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613884-initwithoverlay",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\noverlay\n\nThe overlay object to use when drawing the overlay on the map. This object provides the data needed to draw the overlay’s shape. This object is retained by the overlay view.\n\nReturn Value\n\nAn initialized overlay object.\n\nDiscussion\n\nUpon initialization, the frame of the overlay view is set to CGRectZero. The map view sets the size and position of the view at display time, and you should not change those values yourself.\n\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "mapType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452341-maptype",
    "html": "Deprecated\n\nUse preferredConfiguration instead.\n\nDiscussion\n\nThe default value of this property is MKMapType.standard.\n\nSee Also\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated"
  },
  {
    "title": "z | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath/1452379-z",
    "html": "See Also\nInstance properties\nvar x: Int\nThe index of the tile along the x-axis of the map.\nvar y: Int\nThe index of the tile along the y-axis of the map.\nvar contentScaleFactor: CGFloat\nThe tile’s intended screen scale factor."
  },
  {
    "title": "overlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613872-overlay",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead."
  },
  {
    "title": "pointForMapPoint: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613874-pointformappoint",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nmapPoint\n\nA point on the two-dimensional map projection. If you have a coordinate value (latitude and longitude), you can use the MKMapPointForCoordinate function to convert that coordinate to a map point.\n\nReturn Value\n\nThe point in the receiver’s coordinate system that corresponds to the map point.\n\nDiscussion\n\nBecause the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s drawMapRect:zoomScale:inContext: method.\n\nSee Also\nConverting points on the map\n- mapPointForPoint:\nReturns the map point that corresponds to the specified point in the overlay view.\nDeprecated\n- rectForMapRect:\nReturns the rectangle in the overlay view that corresponds to the specified rectangle on the map.\nDeprecated\n- mapRectForRect:\nReturns the map rectangle that corresponds to the rectangle in the overlay view’s coordinate system.\nDeprecated"
  },
  {
    "title": "showsPointsOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452316-showspointsofinterest",
    "html": "Deprecated\n\nUse pointOfInterestFilter instead.\n\nDiscussion\n\nWhen this property is set to true, the map displays icons and labels for restaurants, schools, and other relevant points of interest. The default value of this property is true.\n\nSee Also\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated"
  },
  {
    "title": "mapPointForPoint: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613878-mappointforpoint",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\npoint\n\nThe point in the view’s coordinate system that you want to convert.\n\nReturn Value\n\nThe point on the two-dimensional map projection corresponding to the specified point.\n\nDiscussion\n\nBecause the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s drawMapRect:zoomScale:inContext: method.\n\nSee Also\nConverting points on the map\n- pointForMapPoint:\nReturns the point in the overlay view that corresponds to specified point on the map.\nDeprecated\n- rectForMapRect:\nReturns the rectangle in the overlay view that corresponds to the specified rectangle on the map.\nDeprecated\n- mapRectForRect:\nReturns the map rectangle that corresponds to the rectangle in the overlay view’s coordinate system.\nDeprecated"
  },
  {
    "title": "MKReverseGeocoder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoder",
    "html": "Overview\n\nA reverse geocoder object is a single-shot object that works with a network-based map service to look up placemark information for its specified coordinate value.\n\nThe Google terms of service require that the reverse geocoding service be used in conjunction with a Google map; take this into account when designing your application’s user interface.\n\nEach Map Kit application has a limited amount of reverse geocoding capacity, so it is to your advantage to use reverse geocode requests sparingly. Here are some rules of thumb for using this class most effectively:\n\nSend at most one reverse-geocoding request for any one user action.\n\nIf the user performs multiple actions that involve reverse-geocoding the same location, reuse the results from the initial reverse-geocoding request instead of starting individual requests for each action.\n\nWhen you want to update the location automatically (such as when the user is moving), reissue the reverse-geocoding request only when the user’s location has moved a significant distance and after a reasonable amount of time has passed. For example, in a typical situation, you should not send more than one reverse-geocode request per minute.\n\nDo not start a reverse-geocoding request at a time when the user will not see the results immediately. For example, do not start a request if your application recently resigned the active state (possibly because of an interruption such as a phone call) and is waiting to become active again.\n\nAn iOS-based device must have access to the network in order for the reverse geocoder object to return valid information. The reverse geocoder returns information through its associated delegate object, which is an object that conforms to the MKReverseGeocoderDelegate protocol. If the reverse geocoder is unable to retrieve the requested information, it similarly reports the error to its delegate object. For more information on this protocol, see MKReverseGeocoderDelegate.\n\nThis class is deprecated in iOS 5.0. Use the CLGeocoder class instead.\n\nTopics\nInitializing the Reverse Geocoder\n- initWithCoordinate:\nInitializes the reverse geocoder with the specified coordinate value.\nAccessing Reverse Geocoder Attributes\ndelegate\nThe reverse geocoder’s delegate object.\ncoordinate\nThe coordinate whose placemark data you want to retrieve.\nplacemark\nThe result of the reverse-geocoding operation.\nManaging the Search\n- start\nStarts the reverse-geocoding process asynchronously.\nquerying\nA Boolean value indicating whether the receiver is in the middle of reverse-geocoding its coordinate.\n- cancel\nCancels a pending reverse-geocoding request.\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "viewForOverlay: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1616201-viewforoverlay",
    "html": "Deprecated\n\nUse the rendererForOverlay: method instead.\n\nParameters\noverlay\n\nThe overlay object whose view you want.\n\nReturn Value\n\nThe view associated with the overlay object or nil if the overlay is not onscreen.\n\nSee Also\nAccessing overlays\noverlays\nThe overlay objects associated with the map view.\n- overlaysInLevel:\nReturns overlay objects in the specified level of the map.\n- rendererForOverlay:\nReturns the renderer object for drawing the contents of the specified overlay object.\nMKOverlayLevel\nConstants that indicate the position of overlays relative to other content."
  },
  {
    "title": "MKDirections.Request | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request",
    "html": "Overview\n\nYou use an MKDirections.Request object when requesting or providing directions. If your app provides directions, use this class to decode the URL that the Maps app sends to you. If you need to request directions from Apple, pass an instance of this class to an MKDirections object. For example, an app that provides subway directions might request walking directions to and from relevant subway stations.\n\nPrior to iOS 14, for apps that provide directions, you receive direction-related URLs in your app delegate’s application(_:open:options:)method. Upon receiving a URL, call the isDirectionsRequest(_:) method of this class to determine whether the URL relates to routing directions. If it does, create an instance of this class using the provided URL and extract the map items associated with the start and end points.\n\nNote\n\nPrior to iOS 14, to provide routing directions, your app needs to include special keys in its Info.plist file and be able to handle URLs that the Maps app sends to it. These keys indicate a special URL type that you app needs to handle. For information about how to implement this support, see Location and Maps Programming Guide.\n\nTopics\nCreating a directions request object\nclass func isDirectionsRequest(URL) -> Bool\nReturns a Boolean value that indicates whether the specified URL contains a directions request.\ninit(contentsOf: URL)\nCreates and returns a directions request object using the specified URL.\nAccessing the start and end points\nvar source: MKMapItem?\nThe starting point for routing directions.\nvar destination: MKMapItem?\nThe end point for routing directions.\nSpecifying transportation options\nvar transportType: MKDirectionsTransportType\nThe type of conveyance that the directions apply to.\nvar highwayPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework uses or avoids highways when providing directions.\nvar tollPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework avoids routes that have tolls when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar requestsAlternateRoutes: Bool\nA Boolean value that indicates whether your app requests multiple routes when they’re available.\nvar departureDate: Date?\nThe departure date for the trip.\nvar arrivalDate: Date?\nThe arrival date for the trip.\nConstants\nstruct MKDirectionsTransportType\nConstants that specify the type of conveyance to use.\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information.\nRelationships\nInherits From\nNSObject\nSee Also\nCreating a directions object\ninit(request: MKDirections.Request)\nCreates and returns a directions object using the specified request.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions."
  },
  {
    "title": "MKLocalSearchCompleter.FilterType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/filtertype",
    "html": "Deprecated\n\nUse MKLocalSearchCompleter.ResultType instead.\n\nTopics\nConstants\ncase locationsAndQueries\nPoints of interest and query suggestions. Specify this value when you want both map-based points of interest and common query terms used to find locations. For example, the search string cof yields a completion for coffee.\ncase locationsOnly\nPoints of interest only. Specify this value when you want the search string to yield completions that correspond to a specific point-of-interest on the map.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "MKRoute.Step | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step",
    "html": "Overview\n\nEach MKRoute.Step object corresponds to a single instruction that the person needs to follow when navigating between two points. For example, a step might involve following a single road until continuing along the route requires a turn.\n\nYou don’t create instances of this class directly. An MKRoute object contains the MKRoute.Step objects associated with a route. For more information about requesting directions, see MKDirections.\n\nTopics\nGetting the step geometry\nvar polyline: MKPolyline\nThe detailed step geometry.\nGetting additional step details\nvar instructions: String\nThe written instructions for following the path that the step represents.\nvar notice: String?\nAdditional notices that apply to the step.\nvar distance: CLLocationDistance\nThe step distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe transport type of the step.\nRelationships\nInherits From\nNSObject\nSee Also\nGetting the route geometry\nvar polyline: MKPolyline\nThe detailed route geometry.\nvar steps: [MKRoute.Step]\nThe array of steps that create the overall route."
  },
  {
    "title": "MapKit Functions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_functions",
    "html": "Overview\n\nImportant\n\nIn iOS 5.1 and earlier, the MapKit framework uses the Google Mobile Maps (GMM) service to provide map data. For apps that run in iOS 5.1 and earlier, use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service. You can find these terms of service at http://code.google.com/apis/maps/iphone/terms.html.\n\nTopics\nFunctions\nMKCoordinateRegionMake\nCreates a new coordinate region from the specified coordinate and span values.\nMKCoordinateRegionMakeWithDistance\nCreates a new coordinate region from the specified coordinate and distance values.\nMKCoordinateSpanMake\nCreates a new MKCoordinateSpan from the specified values.\nMKMapPointForCoordinate\nCreates the map point data structure that corresponds to the specified coordinate.\nMKMapPointMake\nCreates a new map point structure from the specified values.\nMKMapSizeMake\nCreates a new map size structure from the specified values.\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "MKDirections.ETAResponse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you initiate a request for the travel time by calling the calculateETA(completionHandler:) method of an MKDirections object. The completion handler you pass to that method receives an MKDirections.ETAResponse object with the results.\n\nTopics\nGetting the end points\nvar source: MKMapItem\nThe start point of the route.\nvar destination: MKMapItem\nThe end point of the route.\nGetting the travel information\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar expectedDepartureDate: Date\nThe expected departure time.\nvar expectedArrivalDate: Date\nThe expected arrival time.\nvar distance: CLLocationDistance\nThe expected travel distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe type of conveyance to use for determining the travel time.\nRelationships\nInherits From\nNSObject\nSee Also\nGetting the ETA\nfunc calculateETA(completionHandler: MKDirections.ETAHandler)\nBegins calculating the requested travel-time information asynchronously.\ntypealias MKDirections.ETAHandler\nThe block to use for processing travel-time information."
  },
  {
    "title": "MKDirections.Response | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/response",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you initiate a request for directions by calling the calculate(completionHandler:) method of an MKDirections object. The completion handler you pass to that method receives an MKDirections.Response object with the results.\n\nTopics\nGetting the end points\nvar source: MKMapItem\nThe start point of the route.\nvar destination: MKMapItem\nThe end point of the route.\nGetting the route information\nvar routes: [MKRoute]\nAn array of route objects representing the directions between the start and end points.\nRelationships\nInherits From\nNSObject\nSee Also\nGetting the directions\nfunc calculate(completionHandler: MKDirections.DirectionsHandler)\nBegins calculating the requested route information asynchronously.\ntypealias MKDirections.DirectionsHandler\nThe block to use for processing the requested route information."
  },
  {
    "title": "defaultSelected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority/3547915-defaultselected",
    "html": "See Also\nPriorities\nstatic let defaultUnselected: MKAnnotationViewZPriority\nThe default view overlapping priority for an unselected view.\nstatic let max: MKAnnotationViewZPriority\nThe maximum allowed priority for overlapping views.\nstatic let min: MKAnnotationViewZPriority\nThe minimum allowed priority for overlapping views."
  },
  {
    "title": "min | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority/3547918-min",
    "html": "See Also\nPriorities\nstatic let defaultSelected: MKAnnotationViewZPriority\nThe default view overlapping priority for a selected view.\nstatic let defaultUnselected: MKAnnotationViewZPriority\nThe default view overlapping priority for an unselected view.\nstatic let max: MKAnnotationViewZPriority\nThe maximum allowed priority for overlapping views."
  },
  {
    "title": "defaultUnselected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority/3547916-defaultunselected",
    "html": "See Also\nPriorities\nstatic let defaultSelected: MKAnnotationViewZPriority\nThe default view overlapping priority for a selected view.\nstatic let max: MKAnnotationViewZPriority\nThe maximum allowed priority for overlapping views.\nstatic let min: MKAnnotationViewZPriority\nThe minimum allowed priority for overlapping views."
  },
  {
    "title": "locationsAtPointIndexes: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint/3571237-locationsatpointindexes",
    "html": "Parameters\nindexes\n\nA set of map point indexes associated with the shape.\n\nReturn Value\n\nAn NSIndexSet that corresponds to the point indexes along the shape.\n\nSee Also\nAccessing the points in the shape\n- points\nReturns an array of map points associated with the shape.\npointCount\nThe number of points associated with the shape.\n- locationAtPointIndex:\nTranslates a point index into a unit distance along the shape."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority/3548826-init",
    "html": "Parameters\nrawValue\n\nA value between min and max."
  },
  {
    "title": "locationAtPointIndex: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint/3571236-locationatpointindex",
    "html": "Parameters\nindex\n\nThe index of the map point associated with the shape.\n\nReturn Value\n\nA CGFloat value that indicates the unit distance along the shape.\n\nSee Also\nAccessing the points in the shape\n- points\nReturns an array of map points associated with the shape.\npointCount\nThe number of points associated with the shape.\n- locationsAtPointIndexes:\nReturns a set of unit distance values that correspond to the point indexes along the shape."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturedisplaypriority/2890110-init",
    "html": "Parameters\nrawValue\n\nThe floating point value of the feature display priority.\n\nSee Also\nCreating Feature Display Priorities\ninit(Float)\nCreates a feature display priority using the specified floating point value."
  },
  {
    "title": "init(x:y:z:contentScaleFactor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath/2963396-init",
    "html": "Parameters\nx\n\nThe index of the tile along the x-axis of the map.\n\ny\n\nThe index of the tile along the y-axis of the map.\n\nz\n\nThe index of the tile along the z-axis of the map.\n\ncontentScaleFactor\n\nThe screen scale that the framework shows the tile. This value is typically either 1.0 (for standard resolution displays) or 2.0 (for Retina displays).\n\nSee Also\nCreating a tile overlay path\ninit()\nCreates a new tile overlay path."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority/3548825-init",
    "html": "Parameters\nrawValue\n\nA value between min and max."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath/1452267-init",
    "html": "See Also\nCreating a tile overlay path\ninit(x: Int, y: Int, z: Int, contentScaleFactor: CGFloat)\nCreates a new overlay path with the specified indexes and content scale factor."
  },
  {
    "title": "locations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer/3571234-locations",
    "html": "See Also\nAccessing the gradient colors\n- setColors:atLocations:\nSets the colors and corresponding unit distance values to create gradients.\ncolors\nAn array that represents the gradient’s color transition points."
  },
  {
    "title": "MKLocalSearchResultType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchresulttype",
    "html": "Overview\n\nThese options configure the types of search results you want to receive from MKLocalSearchRequest, including points of interest and addresses.\n\nTopics\nSpecifying types of search results\nMKLocalSearchResultTypeAddress\nA value that indicates that search results include addresses.\nMKLocalSearchResultTypePointOfInterest\nA value that indicates that search results include points of interest.\nSee Also\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nMKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nMKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nMKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nMKLocalSearchCompleterResultType\nOptions that indicate types of search completions.\nMKLocalSearchCompletion\nA fully formed string that completes a partial string."
  },
  {
    "title": "MKReverseGeocoderDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkreversegeocoderdelegate",
    "html": "Overview\n\nYou use this protocol to receive the placemark information for a given coordinate or to retrieve any errors that occurred during the reverse-geocoding process.\n\nDelegates must implement both methods of this protocol.\n\nThe Google terms of service require that the reverse geocoding service be used in conjunction with a Google map; take this into account when designing your application’s user interface.\n\nEach Map Kit application has a limited amount of reverse geocoding capacity, so it is to your advantage to use reverse geocode requests sparingly. For more information about when to initiate reverse-geocoding requests, see MKReverseGeocoder.\n\nThis protocol is deprecated in iOS 5.0. Use the CLGeocoder class instead.\n\nTopics\nProcessing placemark searches\n- reverseGeocoder:didFindPlacemark:\nTells the delegate that a reverse geocoder successfully obtained placemark information for its coordinate.\n\nRequired\n\n- reverseGeocoder:didFailWithError:\nTells the delegate that the specified reverse geocoder failed to obtain information about its coordinate.\n\nRequired\n\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "max | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority/3547917-max",
    "html": "See Also\nPriorities\nstatic let defaultSelected: MKAnnotationViewZPriority\nThe default view overlapping priority for a selected view.\nstatic let defaultUnselected: MKAnnotationViewZPriority\nThe default view overlapping priority for an unselected view.\nstatic let min: MKAnnotationViewZPriority\nThe minimum allowed priority for overlapping views."
  },
  {
    "title": "MKLocalSearchCompleterResultType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterresulttype",
    "html": "Topics\nType properties\nMKLocalSearchCompleterResultTypeAddress\nA value that indicates that the search completer includes address completions in results.\nMKLocalSearchCompleterResultTypePointOfInterest\nA value that indicates that the search completer includes point-of-interest completions in results.\nMKLocalSearchCompleterResultTypeQuery\nA value that indicates that the search completer includes query completions in results.\nSee Also\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nMKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nMKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nMKLocalSearchResultType\nOptions that indicate types of search results.\nMKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nMKLocalSearchCompletion\nA fully formed string that completes a partial string."
  },
  {
    "title": "MKStandardMapConfiguration.EmphasisStyle.muted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/emphasisstyle/muted",
    "html": "See Also\nControlling the map’s emphasis\ncase `default`\nThe default level of emphasis."
  },
  {
    "title": "MKStandardMapConfiguration.EmphasisStyle.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/emphasisstyle/default",
    "html": "See Also\nControlling the map’s emphasis\ncase muted\nThe muted level of emphasis."
  },
  {
    "title": "MKAnnotationView.DragState.starting | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate/starting",
    "html": "Discussion\n\nA user action causes the view to begin the drag operation. The map view automatically moves annotation views to this state in response to appropriate user actions."
  },
  {
    "title": "y | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath/1452764-y",
    "html": "See Also\nInstance properties\nvar x: Int\nThe index of the tile along the x-axis of the map.\nvar z: Int\nThe index of the tile along the z-axis of the map.\nvar contentScaleFactor: CGFloat\nThe tile’s intended screen scale factor."
  },
  {
    "title": "canDrawMapRect:zoomScale: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613864-candrawmaprect",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nmapRect\n\nThe map rectangle that needs to be updated.\n\nzoomScale\n\nThe current scale factor applied to the map.\n\nReturn Value\n\nYES if this view is ready to draw its contents or NO if it is not.\n\nDiscussion\n\nOverlay views can override this method in situations where they may depend on the availability of other information to draw their contents. For example, an overlay view showing traffic information might want to delay drawing until it has all of the traffic data it needs. In such a case, it can return NO from this method to indicate that it is not ready.\n\nIf you return NO from this method, your application is responsible for calling the setNeedsDisplayInMapRect:zoomScale: method when the overlay view subsequently becomes ready to draw its contents.\n\nThe default implementation of this method returns YES.\n\nSee Also\nDrawing the overlay\n- drawMapRect:zoomScale:inContext:\nDraws the contents of the overlay view.\nDeprecated\n- setNeedsDisplayInMapRect:\nInvalidates the view in the given map rectangle at all zoom scales.\nDeprecated\n- setNeedsDisplayInMapRect:zoomScale:\nInvalidates the view in the given map rectangle but only at the specified zoom scale.\nDeprecated"
  },
  {
    "title": "mapRectForRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613882-maprectforrect",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nrect\n\nThe rectangle specified in the receiver’s coordinate system.\n\nReturn Value\n\nThe rectangle on the two-dimensional map project that corresponds to the specified view rectangle.\n\nDiscussion\n\nBecause the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s drawMapRect:zoomScale:inContext: method.\n\nSee Also\nConverting points on the map\n- pointForMapPoint:\nReturns the point in the overlay view that corresponds to specified point on the map.\nDeprecated\n- mapPointForPoint:\nReturns the map point that corresponds to the specified point in the overlay view.\nDeprecated\n- rectForMapRect:\nReturns the rectangle in the overlay view that corresponds to the specified rectangle on the map.\nDeprecated"
  },
  {
    "title": "setNeedsDisplayInMapRect:zoomScale: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613876-setneedsdisplayinmaprect",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nmapRect\n\nThe portion of the overlay that needs to be updated. This value is specified using a map rectangle and not view coordinates. You can convert from a view rectangle to a map rectangle using the mapRectForRect: method.\n\nzoomScale\n\nThe zoom scale for which you want to invalidate the overlay.\n\nDiscussion\n\nMarking a rectangle as invalid causes that portion of the view to be redrawn during the next update cycle. This method invalidates the overlay only when it is drawn at the specified zoom scale.\n\nSee Also\nDrawing the overlay\n- canDrawMapRect:zoomScale:\nReturns a Boolean value indicating whether the overlay view is ready to draw its content.\nDeprecated\n- drawMapRect:zoomScale:inContext:\nDraws the contents of the overlay view.\nDeprecated\n- setNeedsDisplayInMapRect:\nInvalidates the view in the given map rectangle at all zoom scales.\nDeprecated"
  },
  {
    "title": "rectForMapRect: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613870-rectformaprect",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nmapRect\n\nA rectangle on the two-dimensional map projection.\n\nReturn Value\n\nThe rectangle specified in the receiver’s coordinate system.\n\nDiscussion\n\nBecause the bounds and frame rectangles of an overlay view do not change after the view has been created, you may call this method from multiple threads simultaneously. Therefore, you may call this method safely from your view’s drawMapRect:zoomScale:inContext: method.\n\nSee Also\nConverting points on the map\n- pointForMapPoint:\nReturns the point in the overlay view that corresponds to specified point on the map.\nDeprecated\n- mapPointForPoint:\nReturns the map point that corresponds to the specified point in the overlay view.\nDeprecated\n- mapRectForRect:\nReturns the map rectangle that corresponds to the rectangle in the overlay view’s coordinate system.\nDeprecated"
  },
  {
    "title": "MapUserTrackingMode.follow | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/follow",
    "html": "See Also\nSetting the user tracking mode\ncase none\nThe map doesn’t update based on the person’s location.\nDeprecated\ncase followWithHeading\nThe map updates by following the person’s heading.\nDeprecated"
  },
  {
    "title": "lookAroundViewControllerDidDismissFullScreen(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate/4066960-lookaroundviewcontrollerdiddismi",
    "html": "Parameters\nviewController\n\nThe MKLookAroundViewController.\n\nSee Also\nEntering and exiting full-screen modes\nfunc lookAroundViewControllerWillPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to enter full-screen mode.\nfunc lookAroundViewControllerDidPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller enters full-screen mode.\nfunc lookAroundViewControllerWillDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to exit full-screen mode."
  },
  {
    "title": "lookAroundViewControllerWillPresentFullScreen(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate/4066963-lookaroundviewcontrollerwillpres",
    "html": "Parameters\nviewController\n\nThe MKLookAroundViewController.\n\nSee Also\nEntering and exiting full-screen modes\nfunc lookAroundViewControllerDidPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller enters full-screen mode.\nfunc lookAroundViewControllerWillDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to exit full-screen mode.\nfunc lookAroundViewControllerDidDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller exits full-screen mode."
  },
  {
    "title": "lookAroundViewControllerWillUpdateScene(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate/3951148-lookaroundviewcontrollerwillupda",
    "html": "Parameters\nviewController\n\nThe MKLookAroundViewController.\n\nSee Also\nResponding to scene changes\nfunc lookAroundViewControllerDidUpdateScene(MKLookAroundViewController)\nTells the delegate that the scene updated."
  },
  {
    "title": "applyFillProperties(to:atZoomScale:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452281-applyfillproperties",
    "html": "Parameters\ncontext\n\nThe graphics context used to draw the view’s contents.\n\nzoomScale\n\nThe current zoom scale used for drawing.\n\nDiscussion\n\nThis is a convenience method for applying all of the drawing properties used when filling a path. This method applies the current fill color to the specified graphics context.\n\nSee Also\nDrawing the path\nfunc applyStrokeProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the renderer’s stroke-related drawing properties to the specified graphics context.\nfunc strokePath(CGPath, in: CGContext)\nDraws a line along the specified path.\nfunc fillPath(CGPath, in: CGContext)\nFills the area that the specified path encloses.\nvar shouldRasterize: Bool\nA Boolean value that determines whether the overlay path renderer renders the overlay as a bitmap before compositing."
  },
  {
    "title": "applyStrokeProperties(to:atZoomScale:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452713-applystrokeproperties",
    "html": "Parameters\ncontext\n\nThe graphics context for drawing the view’s contents.\n\nzoomScale\n\nThe zoom scale for drawing.\n\nDiscussion\n\nThis is a convenience method for applying all of the drawing properties MapKit uses when stroking a path. This method applies the stroke color, line width, line join, line cap, miter limit, line dash phase, and line dash attributes to the specified graphics context. This method applies the scale factor in the zoomScale parameter to the line width and line dash pattern automatically so that lines scale appropriately.\n\nThis method doesn’t save the current graphics state before applying the new attributes. If you want to preserve the existing state, save it and restore it later when you finish drawing.\n\nSee Also\nDrawing the path\nfunc applyFillProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the receiver’s fill-related drawing properties to the specified graphics context.\nfunc strokePath(CGPath, in: CGContext)\nDraws a line along the specified path.\nfunc fillPath(CGPath, in: CGContext)\nFills the area that the specified path encloses.\nvar shouldRasterize: Bool\nA Boolean value that determines whether the overlay path renderer renders the overlay as a bitmap before compositing."
  },
  {
    "title": "lineDashPhase | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452363-linedashphase",
    "html": "Discussion\n\nUse this property to start drawing a dashed line partway through a segment or gap. For example, a phase value of 6 for the pattern 5-2-3-2 would cause drawing to begin in the middle of the first gap.\n\nThe default value of this property is 0.\n\nSee Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path."
  },
  {
    "title": "miterLimit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452395-miterlimit",
    "html": "Discussion\n\nThe miter limit helps you avoid spikes in paths that use the CGLineJoin.miter join style. If the ratio of the miter length to the line thickness — the diagonal length of the miter join — exceeds the miter limit, the renderer converts the joint to a bevel join. The default miter limit is 10, which results in the conversion of miters with an angle at the joint of less than 11 degrees.\n\nSee Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path."
  },
  {
    "title": "lineJoin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452031-linejoin",
    "html": "Discussion\n\nThe default line join style is CGLineJoin.round.\n\nSee Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path."
  },
  {
    "title": "lineWidth | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452441-linewidth",
    "html": "Discussion\n\nThe default value of this property is 0.\n\nSee Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturedisplaypriority/2890109-init",
    "html": "Parameters\nrawValue\n\nThe floating point value of the feature display priority.\n\nSee Also\nCreating Feature Display Priorities\ninit(rawValue: Float)\nCreates a feature display priority using the specified raw floating point value."
  },
  {
    "title": "init(tileOverlay:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlayrenderer/1452303-init",
    "html": "Parameters\noverlay\n\nThe tile overlay object whose contents you want to draw.\n\nReturn Value\n\nAn initialized tile renderer object.\n\nDiscussion\n\nThe returned renderer object works with the tile overlay object to coordinate the loading and display of its map tiles.\n\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "required | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturedisplaypriority/2867301-required",
    "html": "Discussion\n\nAn annotation view with this priority does not participate in clustering.\n\nSee Also\nPriorities\nstatic let defaultHigh: MKFeatureDisplayPriority\nA constant indicating that the item's display priority is high.\nstatic let defaultLow: MKFeatureDisplayPriority\nA constant indicating that the item's display priority is low."
  },
  {
    "title": "setColors:atLocations: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer/3571235-setcolors",
    "html": "Parameters\ncolors\n\nAn array of colors making up the transition points of the gradient.\n\nlocations\n\nAn array of unit distance values that correspond to the provided colors.\n\nDiscussion\n\nThe unit distance value of 0 represents the start of the polyline, and 1 represents the end of the polyline. A gradient may have any number of steps along the length of the polyline.\n\nTo determine a location along the polyline, use locationAtPointIndex:, or retrieve a set of locations using locationsAtPointIndexes:.\n\nSee Also\nAccessing the gradient colors\ncolors\nAn array that represents the gradient’s color transition points.\nlocations\nAn array of location indices corresponding to their respective colors."
  },
  {
    "title": "colors | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer/3571233-colors",
    "html": "See Also\nAccessing the gradient colors\nfunc setColors([UIColor], locations: [CGFloat])\nSets the iOS colors and corresponding unit distance values to create gradients.\nfunc setColors([NSColor], locations: [CGFloat])\nSets the macOS colors and corresponding unit distance values to create gradients.\nvar locations: [CGFloat]\nAn array of location indexes that correspond to their respective colors."
  },
  {
    "title": "setColors(_:locations:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer/3603644-setcolors",
    "html": "Parameters\ncolors\n\nAn array of colors making up the transition points of the gradient.\n\nlocations\n\nAn array of unit distance values that correspond to the provided colors.\n\nDiscussion\n\nThe unit distance value of 0 represents the start of the polyline, and 1 represents the end of the polyline. A gradient may have any number of steps along the length of the polyline.\n\nTo determine a location along the polyline, use location(atPointIndex:), or retrieve a set of locations using locations.\n\nSee Also\nAccessing the gradient colors\nfunc setColors([UIColor], locations: [CGFloat])\nSets the iOS colors and corresponding unit distance values to create gradients.\nvar colors: [UIColor]\nAn array that represents the gradient’s color transition points.\nvar locations: [CGFloat]\nAn array of location indexes that correspond to their respective colors."
  },
  {
    "title": "MKAnnotationView.DragState.ending | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate/ending",
    "html": "Discussion\n\nA user action indicates the user dropped the view. The map view automatically moves annotation views to this state in response to appropriate user actions."
  },
  {
    "title": "MKAnnotationView.DragState.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate/none",
    "html": "Discussion\n\nThe view isn’t involved in a drag operation. The annotation view is responsible for returning itself to this state when a drag ends or cancels."
  },
  {
    "title": "MKAnnotationView.DragState.canceling | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate/canceling",
    "html": "Discussion\n\nA user action causes the view to cancel the drag operation. You can put an annotation view into this state to abort the operation."
  },
  {
    "title": "MKAnnotationView.DragState.dragging | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate/dragging",
    "html": "Discussion\n\nThe view is in the middle of a drag operation and is tracking progress."
  },
  {
    "title": "reloadData() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlayrenderer/1452676-reloaddata",
    "html": "Discussion\n\nUse this method to remove the overlay’s existing tile images and reload them from the original source. This method automatically causes the renderer to redraw the new tiles as soon as it loads them into memory."
  },
  {
    "title": "clusteringIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/2867297-clusteringidentifier",
    "html": "Discussion\n\nThe default value of this property is nil, which prevents MapKit from clustering the annotation view with other annotation views. Setting the property to a non-nil value enables it to participate in clustering.\n\nClustering occurs when there’s a collision between multiple annotation views with the same identifier on the map surface. MapKit removes the annotation views involved in the collision from the map view and replaces them with a clustering annotation view, which displays the title from one of the annotations and provides access to the other annotations.\n\nSee Also\nClustering annotation views\nDecluttering a Map with MapKit Annotation Clustering\nEnhance the readability of a map by replacing overlapping annotations with a clustering annotation view.\nvar cluster: MKAnnotationView?\nThe clustering annotation view that replaces the annotation view."
  },
  {
    "title": "prepareForReuse() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1451907-prepareforreuse",
    "html": "Discussion\n\nThe default implementation of this method does nothing. You can override it in your custom annotation views and use it to put the view in a known state before the map view returns it to your map view delegate.\n\nSee Also\nCreating and preparing an annotation view\ninit(annotation: MKAnnotation?, reuseIdentifier: String?)\nCreates and returns a new annotation view.\ninit?(coder: NSCoder)\nCreates an annotation view using data from the specified unarchiver.\nfunc prepareForDisplay()\nNotifies the annotation view that the map view is about to display it.\nRelated Documentation\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier."
  },
  {
    "title": "strokeEnd | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcirclerenderer/3573870-strokeend",
    "html": "Discussion\n\nUse this property and strokeStart to render a portion of the line. As a unit distance, strokeEnd must be a value between 0 and 1. A unit distance of 0 represents the top of the circle and the stroke draws in a clockwise direction.\n\nSee Also\nAccessing the stroke\nvar strokeStart: CGFloat\nThe unit distance along the circle where the stroke starts."
  },
  {
    "title": "any | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirectionstransporttype/1451972-any",
    "html": "See Also\nTransport types\nstatic var automobile: MKDirectionsTransportType\nDirections suitable for use while driving.\nstatic var walking: MKDirectionsTransportType\nDirections suitable for a pedestrian.\nstatic var transit: MKDirectionsTransportType\nDirections suitable for public transportation."
  },
  {
    "title": "location(atPointIndex:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint/3571236-location",
    "html": "Parameters\nindex\n\nThe index of the map point associated with the shape.\n\nReturn Value\n\nA CGFloat value that indicates the unit distance along the shape.\n\nSee Also\nAccessing the points in the shape\nfunc points() -> UnsafeMutablePointer<MKMapPoint>\nReturns an array of map points associated with the shape.\nvar pointCount: Int\nThe number of points associated with the shape.\nfunc locations(at: IndexSet) -> [CGFloat]\nTranslates a point index set into a unit distance along the shape."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452094-image",
    "html": "Discussion\n\nAssigning a new image to this property also changes the size of the view’s frame so that it matches the width and height of the new image. The position of the view’s frame doesn’t change.\n\nSee Also\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "completer(_:didFailWithError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterdelegate/1451885-completer",
    "html": "Parameters\ncompleter\n\nThe search completer object reporting the error.\n\nerror\n\nThe error object containing the reason for the failure.\n\nDiscussion\n\nUse this object to process any errors that occur while generating search results. Even when an error occurs, the search completer starts a new search if it already has a new search string. Depending on the error, you might do nothing or let the user know that you were unable to obtain a list of search completions.\n\nSee Also\nGetting the search results\nfunc completerDidUpdateResults(MKLocalSearchCompleter)\nTells the method when the specified search completer updates its array of search completions."
  },
  {
    "title": "invalidatePath() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452076-invalidatepath",
    "html": "Discussion\n\nCall this method when a change in the path information would require you to recreate the overlay’s path. This method sets the path property to nil and tells the overlay renderer to redisplay its contents.\n\nSee Also\nCreating and managing the path\nvar path: CGPath!\nThe path representing the overlay’s shape.\nfunc createPath()\nCreates the path for the overlay."
  },
  {
    "title": "completerDidUpdateResults(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterdelegate/1452209-completerdidupdateresults",
    "html": "Parameters\ncompleter\n\nThe search completer object with updated results.\n\nDiscussion\n\nAfter receiving results from a query, the search completer updates its results property with the new MKLocalSearchCompletion objects and calls this method. Use this method to update your app’s interface based on the new search results. For example, you might update a table that you use to display search results to the user.\n\nSee Also\nGetting the search results\nfunc completer(MKLocalSearchCompleter, didFailWithError: Error)\nTells the method when the specified search completer is unable to generate a list of search results."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolygon/3088835-init",
    "html": "Parameters\npolygons\n\nAn array of polygons to initialize the array with."
  },
  {
    "title": "MKLookAroundBadgePosition.topTrailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundbadgeposition/toptrailing",
    "html": "See Also\nBadge positions\ncase bottomTrailing\nThe value that indicates the bottom-right badge position.\ncase topLeading\nThe value that indicates the top-left badge position."
  },
  {
    "title": "createPath() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452686-createpath",
    "html": "Discussion\n\nThe default implementation of this method does nothing. Subclasses can override it and use it to create the CGPath data type the subclass uses for drawing. After creating the path, your implementation needs to assign it to the path property.\n\nSee Also\nCreating and managing the path\nvar path: CGPath!\nThe path representing the overlay’s shape.\nfunc invalidatePath()\nUpdates the path associated with the overlay renderer."
  },
  {
    "title": "path | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1451875-path",
    "html": "Discussion\n\nGetting the value of this property causes the method to create the path (using the createPath() method) if it doesn’t already exist. You can assign a path object to this property explicitly. When assigning a new path object to this property, the overlay renderer stores a strong reference to the path you provide.\n\nSee Also\nCreating and managing the path\nfunc createPath()\nCreates the path for the overlay.\nfunc invalidatePath()\nUpdates the path associated with the overlay renderer."
  },
  {
    "title": "MKLookAroundBadgePosition.bottomTrailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundbadgeposition/bottomtrailing",
    "html": "See Also\nBadge positions\ncase topLeading\nThe value that indicates the top-left badge position.\ncase topTrailing\nThe value that indicates the top-right badge position."
  },
  {
    "title": "MKLookAroundBadgePosition.topLeading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundbadgeposition/topleading",
    "html": "See Also\nBadge positions\ncase bottomTrailing\nThe value that indicates the bottom-right badge position.\ncase topTrailing\nThe value that indicates the top-right badge position."
  },
  {
    "title": "canReplaceMapContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452604-canreplacemapcontent",
    "html": "Discussion\n\nIf the tile content you provide can cover the entire drawing area with opaque content, set this property to true. Doing so serves as a hint to the map view that it doesn’t need to draw any additional content underneath your tiles. Set this property to false if your tiles contain any transparency.\n\nThe default value for this property is false.\n\nSee Also\nAccessing the tile attributes\nvar tileSize: CGSize\nThe size (in pixels) of your tile images.\nvar isGeometryFlipped: Bool\nA Boolean value that indicates the orientation of tile indexes along the y-axis.\nvar minimumZ: Int\nThe minimum zoom level that the tiles of this overlay object support.\nvar maximumZ: Int\nThe maximum zoom level that the tiles of this overlay object support."
  },
  {
    "title": "init(urlTemplate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452705-init",
    "html": "Parameters\nURLTemplate\n\nA string that you can use to build a URL to access your tile images. The string you specify can point to a local file or to an image on a remote server. To facilitate retrieving multiple tiles using the string, use the placeholder values {x}, {y}, {z}, and {scale} as stand-ins for the x and y tile indexes, the zoom level, and the resolution of the tile image. If this parameter is nil, you need to provide custom implementations for the tile-loading methods of this class.\n\nReturn Value\n\nAn initialized tile overlay object.\n\nDiscussion\n\nThe default tile overlay object uses the template string you specify to request tiles. This template string needs to incorporate the {x}, {y}, {z}, and {scale} placeholder strings to facilitate the creation of a URL for requesting the appropriate tile. For example, if you have a server that vends tiles when you provide a URL in the form of http://myserver/tile?x=0&y=0&z=0&scale=1.0, you specify a template string of http://myserver/tile?x={x}&y={y}&z={z}&scale={scale}. The tile overlay object substitutes actual index values for your template’s placeholders before requesting the tile.\n\nSee Also\nRelated Documentation\nfunc url(forTilePath: MKTileOverlayPath) -> URL\nReturns the URL to use to access the specified tile.\nLocation and Maps Programming Guide"
  },
  {
    "title": "MKFeatureVisibility.adaptive | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturevisibility/adaptive",
    "html": "Discussion\n\nThe framework displays title text and hides subtitle text for features in the normal state. When selected, the framework hides the feature’s title and subtitle text when the feature requires a callout.\n\nSee Also\nVisibility options\ncase hidden\nA constant indicating that the feature is hidden.\ncase visible\nA constant indicating that the feature is visible."
  },
  {
    "title": "MKFeatureVisibility.visible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturevisibility/visible",
    "html": "See Also\nVisibility options\ncase adaptive\nA constant indicating that the feature adapts to the current map state.\ncase hidden\nA constant indicating that the feature is hidden."
  },
  {
    "title": "tileSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452108-tilesize",
    "html": "Discussion\n\nOn Retina displays, the system renders images pixel for pixel and doesn’t scale them. This means that if the tile size is 256 x 256 pixels and the scale factor is 2.0, the system renders the image as if it is 128 x 128 points in size. This behavior causes the tile to appear smaller, but preserves the original image data.\n\nThe default tile size is 256 x 256 pixels.\n\nSee Also\nAccessing the tile attributes\nvar isGeometryFlipped: Bool\nA Boolean value that indicates the orientation of tile indexes along the y-axis.\nvar minimumZ: Int\nThe minimum zoom level that the tiles of this overlay object support.\nvar maximumZ: Int\nThe maximum zoom level that the tiles of this overlay object support.\nvar canReplaceMapContent: Bool\nA Boolean value that indicates whether the tile content is fully opaque."
  },
  {
    "title": "isGeometryFlipped | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452251-isgeometryflipped",
    "html": "Discussion\n\nWhen set to false, tile indexes start in the upper-left corner of the map and proceed down and to the right. Thus, the tile at (0, 0)is in the upper-left corner of the map, the tile at (1, 0) is to its immediate right and the tile at (0, 1) is immediately below it. Setting this property to true causes the map to start indexes at the lower-left corner of the map and proceed up and to the right.\n\nThe default value of this property is false.\n\nSee Also\nAccessing the tile attributes\nvar tileSize: CGSize\nThe size (in pixels) of your tile images.\nvar minimumZ: Int\nThe minimum zoom level that the tiles of this overlay object support.\nvar maximumZ: Int\nThe maximum zoom level that the tiles of this overlay object support.\nvar canReplaceMapContent: Bool\nA Boolean value that indicates whether the tile content is fully opaque."
  },
  {
    "title": "urlTemplate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452256-urltemplate",
    "html": "Discussion\n\nYou specify this string at initialization time.\n\nSee Also\nCustomizing the loading of tiles\nfunc url(forTilePath: MKTileOverlayPath) -> URL\nReturns the URL to use to access the specified tile.\nfunc loadTile(at: MKTileOverlayPath, result: (Data?, Error?) -> Void)\nLoads the specified tile asynchronously.\nstruct MKTileOverlayPath\nValues that specify the path indexes for a single overlay tile.\nRelated Documentation\ninit(urlTemplate: String?)\nCreates and returns a tile overlay object using the specified tile-access template."
  },
  {
    "title": "minimumZ | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452199-minimumz",
    "html": "Discussion\n\nIf you use different overlay objects to represent different tiles at different zoom levels, use this property to specify the minimum zoom level supported by this overlay’s tiles. At zoom level 0, tiles cover the entire world map; at zoom level 1, tiles cover 1/4 of the world; at zoom level 2, tiles cover 1/16 of the world, and so on. The map never tries to load tiles for a zoom level less than the value specified by this property.\n\nThe default value of this property is 0.\n\nSee Also\nAccessing the tile attributes\nvar tileSize: CGSize\nThe size (in pixels) of your tile images.\nvar isGeometryFlipped: Bool\nA Boolean value that indicates the orientation of tile indexes along the y-axis.\nvar maximumZ: Int\nThe maximum zoom level that the tiles of this overlay object support.\nvar canReplaceMapContent: Bool\nA Boolean value that indicates whether the tile content is fully opaque."
  },
  {
    "title": "MKFeatureVisibility.hidden | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturevisibility/hidden",
    "html": "See Also\nVisibility options\ncase adaptive\nA constant indicating that the feature adapts to the current map state.\ncase visible\nA constant indicating that the feature is visible."
  },
  {
    "title": "url(forTilePath:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452606-url",
    "html": "Parameters\npath\n\nThe path structure that identifies the specific tile you want. This structure incorporates the tile’s x-y coordinate at a given zoom level and scale factor.\n\nReturn Value\n\nThe URL to use to retrieve the tile.\n\nDiscussion\n\nThe default implementation of this method uses the template string you provide at initialization time to build a URL to the specified tile image. Subclasses can override this method and use a different scheme to provide URLs for tiles. You can locate the tiles either on a local file system or on a remote server.\n\nSee Also\nCustomizing the loading of tiles\nvar urlTemplate: String?\nThe template for generating tile image URLs.\nfunc loadTile(at: MKTileOverlayPath, result: (Data?, Error?) -> Void)\nLoads the specified tile asynchronously.\nstruct MKTileOverlayPath\nValues that specify the path indexes for a single overlay tile.\nRelated Documentation\ninit(urlTemplate: String?)\nCreates and returns a tile overlay object using the specified tile-access template."
  },
  {
    "title": "preferredConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/4114115-preferredconfiguration",
    "html": "Discussion\n\nSet this property to one of the MKMapConfiguration subclasses to configure the map style to use when making map snapshots.\n\nSee Also\nConfiguring the map data\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated"
  },
  {
    "title": "MKTileOverlayPath | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlaypath",
    "html": "Topics\nCreating a tile overlay path\ninit()\nCreates a new tile overlay path.\ninit(x: Int, y: Int, z: Int, contentScaleFactor: CGFloat)\nCreates a new overlay path with the specified indexes and content scale factor.\nInstance properties\nvar x: Int\nThe index of the tile along the x-axis of the map.\nvar y: Int\nThe index of the tile along the y-axis of the map.\nvar z: Int\nThe index of the tile along the z-axis of the map.\nvar contentScaleFactor: CGFloat\nThe tile’s intended screen scale factor.\nSee Also\nCustomizing the loading of tiles\nvar urlTemplate: String?\nThe template for generating tile image URLs.\nfunc url(forTilePath: MKTileOverlayPath) -> URL\nReturns the URL to use to access the specified tile.\nfunc loadTile(at: MKTileOverlayPath, result: (Data?, Error?) -> Void)\nLoads the specified tile asynchronously."
  },
  {
    "title": "reuseIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452060-reuseidentifier",
    "html": "Discussion\n\nYou specify the reuse identifier when you create the view. You use this type to retrieve an annotation view that MapKit isn’t currently using because its annotation isn’t onscreen.\n\nIf you define distinctly different types of annotations (with distinctly different annotation views to go with them), you can differentiate between the annotation types by specifying different reuse identifiers for each one.\n\nSee Also\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar image: UIImage?\nThe image the annotation view displays.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout."
  },
  {
    "title": "showsBuildings | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452191-showsbuildings",
    "html": "Deprecated\n\nMapKit no longer supports this option.\n\nDiscussion\n\nWhen you set this property to true and the camera has a pitch angle greater than 0, the map extrudes buildings so that they appear to extend above the map plane, creating a 3D effect. You need to set the mapType property must to MKMapType.standard for the map to display extruded buildings. The default value of this property is true.\n\nSee Also\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated"
  },
  {
    "title": "appearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/2981023-appearance",
    "html": "Discussion\n\nUse this property to specify a light or dark appearance for the map in the resulting snapshot image. When the value of this property is nil (the default), the snapshotter derives the appropriate appearance based on the following logic:\n\nIf the user specifically disables Dark Mode for map content in the Maps app, the snapshot uses a light appearance.\n\nThe snapshot uses your app’s appearance.\n\nThe snapshot uses the system appearance.\n\nSee Also\nConfiguring the image output\nvar traitCollection: UITraitCollection\nTraits that determine the appearance of the map snapshot.\nvar size: CGSize\nThe size of the image that you want to create.\nvar scale: CGFloat\nThe scale factor to use when creating the image.\nDeprecated"
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452323-region",
    "html": "Discussion\n\nUse this property to specify the map using geographical coordinates. If you assign a value for this property, the snapshotter updates the value in the mapRect property to match the corresponding area as closely as possible.\n\nThe snapshotter sets the default value of this property to an area that encompasses the user’s country or region, based on the current locale information.\n\nSee Also\nConfiguring the snapshot region\nvar mapRect: MKMapRect\nThe map rectangle that you want to capture.\nvar camera: MKMapCamera\nThe camera to use when taking the map snapshot."
  },
  {
    "title": "scale | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1615960-scale",
    "html": "Deprecated\n\nUse traitCollection instead.\n\nDiscussion\n\nThe value of this property is either 1.0 or 2.0, depending on whether the device has a standard or Retina display. Set the value to 1.0 if you want to display the resulting image on a standard resolution display. Set the value to 2.0 if you want to display the image on a Retina display or want to use the image for printing.\n\nThis snapshotter sets this property to a default value that corresponds to the resolution of the current device’s display. You can change the value as needed to generate an image suitable for display on a different device.\n\nSee Also\nConfiguring the image output\nvar traitCollection: UITraitCollection\nTraits that determine the appearance of the map snapshot.\nvar size: CGSize\nThe size of the image that you want to create.\nvar appearance: NSAppearance?\nThe visual style (light or dark) to apply to the map when rendering the snapshot image."
  },
  {
    "title": "MKMapFeatureAnnotation.FeatureType.pointOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation/featuretype/pointofinterest",
    "html": "See Also\nKinds of annotations\ncase physicalFeature\nA physical feature on the Earth such as a mountain range, river, or ocean basin.\ncase territory\nA territorial or regional boundary, such as a national border, a state boundary, or a neighborhood."
  },
  {
    "title": "init(multiPolyline:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolylinerenderer/3088844-init",
    "html": "Parameters\nmultiPolyline\n\nThe collection of polyline shapes to render."
  },
  {
    "title": "MKMapFeatureAnnotation.FeatureType.territory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation/featuretype/territory",
    "html": "See Also\nKinds of annotations\ncase physicalFeature\nA physical feature on the Earth such as a mountain range, river, or ocean basin.\ncase pointOfInterest\nA point of interest, such as a museum, cafe, park, or school."
  },
  {
    "title": "size | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/options/3951130-size",
    "html": "See Also\nCustomizing Snaphot Appearance\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter to use to customize what map features are visible in the snapshot.\nvar traitCollection: UITraitCollection\nA collection of traits that describes orientation and other characteristics of the snapshot."
  },
  {
    "title": "init(coordinate:tint:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapmarker/3601335-init",
    "html": "Parameters\ncoordinate\n\nThe location of the specified marker.\n\ntint\n\nThe color of the marker."
  },
  {
    "title": "subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkshape/1437592-subtitle",
    "html": "Discussion\n\nThe shape displays this string in the callout for the associated annotation view. The default value of this property is nil.\n\nSee Also\nAccessing the shape attributes\nvar title: String?\nThe title of the shape annotation."
  },
  {
    "title": "init(points:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolyline/1452773-init",
    "html": "Parameters\npoints\n\nThe array of map points defining the shape. The initializer copies the data in this array to the new object.\n\ncount\n\nThe number of items in the points array.\n\nReturn Value\n\nA new polyline object.\n\nSee Also\nCreating a polyline overlay\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates a polyline object from the specified set of coordinates.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "boundingMapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcircle/1411065-boundingmaprect",
    "html": "Discussion\n\nAs latitude values move away from the equator and toward the poles, the physical distance between map points gets smaller. This means that the map needs more map points to represent the same distance. As a result, the bounding rectangle of a circle overlay gets larger as the center point of that circle moves away from the equator and toward the poles.\n\nSee Also\nAccessing the overlay’s attributes\nvar coordinate: CLLocationCoordinate2D\nThe center point of the circular area, specified as a latitude and longitude.\nvar radius: CLLocationDistance\nThe radius of the circular area, in meters."
  },
  {
    "title": "init(points:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeodesicpolyline/1452053-init",
    "html": "Parameters\npoints\n\nA pointer to the array of map points that define the path.\n\ncount\n\nThe number of items in the points array.\n\nReturn Value\n\nA new geodesic polyline object.\n\nSee Also\nCreating a geodesic polyline overlay\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates and returns a geodesic polyline using the specified coordinates."
  },
  {
    "title": "MKAnnotationView.DragState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/dragstate",
    "html": "Relationships\nConforms To\nSendable"
  },
  {
    "title": "drawMapRect:zoomScale:inContext: | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview/1613868-drawmaprect",
    "html": "Deprecated\n\nUse an MKOverlayRenderer object instead.\n\nParameters\nmapRect\n\nThe map rectangle that needs to be updated. You can use this rectangle to limit drawing to only the portion of the view that changed.\n\nzoomScale\n\nThe current scale factor applied to the map content. You can use this value for configuring the stroke width of lines or other attributes that might be affected by the scale of the view’s content.\n\ncontext\n\nThe graphics context to use for drawing the view’s content.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses are expected to override this method (instead of the drawRect: method) and use it to draw the contents of the view.\n\nIn your drawing code, you should specify the position of any rendered content relative to the map itself and not relative to the view’s bounds or frame. In other words, compute the position and size of any overlay content using map points and map rectangles, convert those values to CGPoint and CGRect types (using the methods of this class), and then use the converted points to build paths or specify the rendering location for items.\n\nYou should also not make assumptions that the view’s frame matches the bounding rectangle of the overlay. The view’s frame is actually bigger than the bounding rectangle to allow you to draw lines for things like roads that might be located directly on the border of that rectangle. For some types of content, such as gradients, this also means that you might need to apply a clipping rectangle to context to ensure drawing is contained to the correct area.\n\nIt is recommended that you use Core Graphics to draw any content for your overlays. If you choose to use UIKit classes and methods for drawing instead, you must push the specified graphics context onto the context stack (using the UIGraphicsPushContext function) before making any drawing calls. When you are done drawing, you must similarly pop the graphics context off the stack using the UIGraphicsPopContext. During drawing, you may draw content normally but should avoid manipulating views and other classes that are safe to use only from the application’s main thread.\n\nTo improve drawing performance, the map view may tile overlays that become large enough and render the tiles from separate threads. Your implementation of this method must therefore be capable of safely running from multiple threads simultaneously. In addition, you should avoid drawing the entire contents of the overlay each time this method is called. Instead, your implementation should always take the mapRect parameter into consideration and avoid drawing content outside that rectangle. Failure to do so could lead to performance problems.\n\nSee Also\nDrawing the overlay\n- canDrawMapRect:zoomScale:\nReturns a Boolean value indicating whether the overlay view is ready to draw its content.\nDeprecated\n- setNeedsDisplayInMapRect:\nInvalidates the view in the given map rectangle at all zoom scales.\nDeprecated\n- setNeedsDisplayInMapRect:zoomScale:\nInvalidates the view in the given map rectangle but only at the specified zoom scale.\nDeprecated\nRelated Documentation\n- pointForMapPoint:\nReturns the point in the overlay view that corresponds to specified point on the map.\n- rectForMapRect:\nReturns the rectangle in the overlay view that corresponds to the specified rectangle on the map."
  },
  {
    "title": "MapUserTrackingMode.none | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/none",
    "html": "See Also\nSetting the user tracking mode\ncase follow\nThe map updates by following a person’s location.\nDeprecated\ncase followWithHeading\nThe map updates by following the person’s heading.\nDeprecated"
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/3601338",
    "html": "Parameters\nlhs\n\nThe first tracking mode.\n\nrhs\n\nThe tracking mode.\n\nReturn Value\n\nThe Boolean value true if the two modes are not equal.\n\nSee Also\nComparing modes\nstatic func == (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are equal.\nDeprecated\nvar hashValue: Int\nAn integer that represents the hashed value of the tracking mode.\nDeprecated\nfunc hash(into: inout Hasher)\nHashes the essential components of the tracking mode by senindg them to the given hash function.\nDeprecated"
  },
  {
    "title": "MapUserTrackingMode.followWithHeading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/followwithheading",
    "html": "See Also\nSetting the user tracking mode\ncase none\nThe map doesn’t update based on the person’s location.\nDeprecated\ncase follow\nThe map updates by following a person’s location.\nDeprecated"
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/3601339",
    "html": "Parameters\na\n\nThe first tracking mode.\n\nb\n\nThe tracking mode.\n\nReturn Value\n\nThe Boolean value true if the two modes are equal.\n\nSee Also\nComparing modes\nstatic func != (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are not equal.\nDeprecated\nvar hashValue: Int\nAn integer that represents the hashed value of the tracking mode.\nDeprecated\nfunc hash(into: inout Hasher)\nHashes the essential components of the tracking mode by senindg them to the given hash function.\nDeprecated"
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/3601342-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nComparing modes\nstatic func == (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are equal.\nDeprecated\nstatic func != (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are not equal.\nDeprecated\nfunc hash(into: inout Hasher)\nHashes the essential components of the tracking mode by senindg them to the given hash function.\nDeprecated"
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode/3601341-hash",
    "html": "Parameters\nhasher\n\nThe function you use to hash when combining the components of the tracking mode.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nComparing modes\nstatic func == (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are equal.\nDeprecated\nstatic func != (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are not equal.\nDeprecated\nvar hashValue: Int\nAn integer that represents the hashed value of the tracking mode.\nDeprecated"
  },
  {
    "title": "lookAroundViewControllerWillDismissFullScreen(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate/4066962-lookaroundviewcontrollerwilldism",
    "html": "Parameters\nviewController\n\nThe MKLookAroundViewController.\n\nSee Also\nEntering and exiting full-screen modes\nfunc lookAroundViewControllerWillPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to enter full-screen mode.\nfunc lookAroundViewControllerDidPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller enters full-screen mode.\nfunc lookAroundViewControllerDidDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller exits full-screen mode."
  },
  {
    "title": "lookAroundViewControllerDidPresentFullScreen(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate/4066961-lookaroundviewcontrollerdidprese",
    "html": "Parameters\nviewController\n\nThe MKLookAroundViewController.\n\nSee Also\nEntering and exiting full-screen modes\nfunc lookAroundViewControllerWillPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to enter full-screen mode.\nfunc lookAroundViewControllerWillDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to exit full-screen mode.\nfunc lookAroundViewControllerDidDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller exits full-screen mode."
  },
  {
    "title": "fillPath(_:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452100-fillpath",
    "html": "Parameters\npath\n\nThe path to fill.\n\ncontext\n\nThe graphics context in which to draw the path.\n\nDiscussion\n\nYou must set the current fill color before calling this method. Typically you do this by calling the applyFillProperties(to:atZoomScale:) method prior to drawing. If the fillColor property is currently nil, this method does nothing.\n\nSee Also\nDrawing the path\nfunc applyStrokeProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the renderer’s stroke-related drawing properties to the specified graphics context.\nfunc applyFillProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the receiver’s fill-related drawing properties to the specified graphics context.\nfunc strokePath(CGPath, in: CGContext)\nDraws a line along the specified path.\nvar shouldRasterize: Bool\nA Boolean value that determines whether the overlay path renderer renders the overlay as a bitmap before compositing."
  },
  {
    "title": "MKPinAnnotationColor.green | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationcolor/green",
    "html": "Discussion\n\nThe head of the pin is green. Green pins indicate starting points on the map."
  },
  {
    "title": "strokePath(_:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452549-strokepath",
    "html": "Parameters\npath\n\nThe path to draw.\n\ncontext\n\nThe graphics context in which to draw the path.\n\nDiscussion\n\nYou must set the current stroke color before calling this method. Typically you do this by calling the applyStrokeProperties(to:atZoomScale:) method prior to drawing. If the strokeColor property is currently nil, this method does nothing.\n\nSee Also\nDrawing the path\nfunc applyStrokeProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the renderer’s stroke-related drawing properties to the specified graphics context.\nfunc applyFillProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the receiver’s fill-related drawing properties to the specified graphics context.\nfunc fillPath(CGPath, in: CGContext)\nFills the area that the specified path encloses.\nvar shouldRasterize: Bool\nA Boolean value that determines whether the overlay path renderer renders the overlay as a bitmap before compositing."
  },
  {
    "title": "lookAroundViewControllerDidUpdateScene(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate/3951147-lookaroundviewcontrollerdidupdat",
    "html": "Parameters\nviewController\n\nThe MKLookAroundViewController.\n\nSee Also\nResponding to scene changes\nfunc lookAroundViewControllerWillUpdateScene(MKLookAroundViewController)\nTells the delegate that the scene is about to update."
  },
  {
    "title": "MKPinAnnotationColor.purple | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationcolor/purple",
    "html": "Discussion\n\nThe head of the pin is purple. Purple pins indicate user-specified points on the map."
  },
  {
    "title": "MKPinAnnotationColor.red | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationcolor/red",
    "html": "Deprecated\n\nUse the pinTintColor property to set the pin color instead.\n\nDiscussion\n\nThe head of the pin is red. Red pins indicate destination points on the map."
  },
  {
    "title": "lineCap | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452556-linecap",
    "html": "Discussion\n\nThe line cap style applies to the start and end points of any open subpaths. This property doesn’t affect closed subpaths. The default line cap style is CGLineCap.round.\n\nSee Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path."
  },
  {
    "title": "fillColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452668-fillcolor",
    "html": "See Also\nAccessing the drawing attributes\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "strokeColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452175-strokecolor",
    "html": "See Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path."
  },
  {
    "title": "calloutOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452771-calloutoffset",
    "html": "Discussion\n\nThis property determines the additional distance by which to move the callout. When this property is (0, 0), the map view places the anchor point of the callout on the top-center point of the annotation view’s frame. Specifying positive offset values moves the callout down and to the right, and specifying negative values moves it up and to the left.\n\nMapKit doesn’t use the calloutOffset property in macOS apps. Instead, macOS apps use leftCalloutOffset and rightCalloutOffset.\n\nSee Also\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar image: UIImage?\nThe image the annotation view displays.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "rightCalloutOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452036-rightcalloutoffset",
    "html": "Discussion\n\nThis property specifies where the map view shows the anchor of the callout when it orients off the right side of the annotation view.\n\nSee Also\nManaging callout views\nvar canShowCallout: Bool\nA Boolean value that indicates whether the annotation view is able to display extra information in a callout.\nvar leftCalloutAccessoryView: UIView?\nThe view to display on the left side of the standard callout.\nvar rightCalloutAccessoryView: UIView?\nThe view to display on the right side of the standard callout.\nvar detailCalloutAccessoryView: UIView?\nThe detail accessory view to use in the standard callout.\nvar leftCalloutOffset: CGPoint\nThe offset in points from the middle-left of the annotation view."
  },
  {
    "title": "cluster | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/2867294-cluster",
    "html": "Discussion\n\nWhen the map is displaying this annotation view, the value of this property is nil.\n\nSee Also\nClustering annotation views\nDecluttering a Map with MapKit Annotation Clustering\nEnhance the readability of a map by replacing overlapping annotations with a clustering annotation view.\nvar clusteringIdentifier: String?\nAn identifier that determines whether the annotation view participates in clustering."
  },
  {
    "title": "setColors(_:locations:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer/3600700-setcolors",
    "html": "Parameters\ncolors\n\nAn array of colors making up the transition points of the gradient.\n\nlocations\n\nAn array of unit distance values that correspond to the provided colors.\n\nDiscussion\n\nThe unit distance value of 0 represents the start of the polyline, and 1 represents the end of the polyline. A gradient may have any number of steps along the length of the polyline.\n\nTo determine a location along the polyline, use location(atPointIndex:), or retrieve a set of locations using locations.\n\nSee Also\nAccessing the gradient colors\nfunc setColors([NSColor], locations: [CGFloat])\nSets the macOS colors and corresponding unit distance values to create gradients.\nvar colors: [UIColor]\nAn array that represents the gradient’s color transition points.\nvar locations: [CGFloat]\nAn array of location indexes that correspond to their respective colors."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcircle/1411074-coordinate",
    "html": "See Also\nAccessing the overlay’s attributes\nvar radius: CLLocationDistance\nThe radius of the circular area, in meters.\nvar boundingMapRect: MKMapRect\nThe bounding rectangle of the circular area."
  },
  {
    "title": "init(mapRect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcircle/1411072-init",
    "html": "Parameters\nmapRect\n\nThe map rectangle that determines the circular area. The initializer uses the center point of the rectangle as the center point of the circle. If the rectangle isn’t a square, the method uses the longest side of the rectangle to define the radius of the resulting circle.\n\nReturn Value\n\nA circle overlay object.\n\nSee Also\nCreating a circle overlay\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates and returns a circle object using the specified coordinate and radius."
  },
  {
    "title": "strokeStart | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolylinerenderer/3573875-strokestart",
    "html": "Discussion\n\nUse this property and strokeEnd to render a portion of the line. Use location(atPointIndex:) to get unit distance locations for point indices along the line.\n\nSee Also\nAccessing the stroke\nvar strokeEnd: CGFloat\nThe unit distance along the line where the stroke ends."
  },
  {
    "title": "automobile | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirectionstransporttype/1452629-automobile",
    "html": "See Also\nTransport types\nstatic var walking: MKDirectionsTransportType\nDirections suitable for a pedestrian.\nstatic var transit: MKDirectionsTransportType\nDirections suitable for public transportation.\nstatic var any: MKDirectionsTransportType\nDirections suitable for any transportation option."
  },
  {
    "title": "walking | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirectionstransporttype/1452633-walking",
    "html": "See Also\nTransport types\nstatic var automobile: MKDirectionsTransportType\nDirections suitable for use while driving.\nstatic var transit: MKDirectionsTransportType\nDirections suitable for public transportation.\nstatic var any: MKDirectionsTransportType\nDirections suitable for any transportation option."
  },
  {
    "title": "transit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirectionstransporttype/1452697-transit",
    "html": "Discussion\n\nThis type is only supported for estimating time of arrival.\n\nSee Also\nTransport types\nstatic var automobile: MKDirectionsTransportType\nDirections suitable for use while driving.\nstatic var walking: MKDirectionsTransportType\nDirections suitable for a pedestrian.\nstatic var any: MKDirectionsTransportType\nDirections suitable for any transportation option."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirectionstransporttype/1452602-init",
    "html": "Parameters\nrawValue\n\nThe unsigned integer value of the direction transport type."
  },
  {
    "title": "strokeStart | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcirclerenderer/3573871-strokestart",
    "html": "Discussion\n\nUse this property and strokeEnd to render a portion of the line. As a unit distance, strokeStart must be a value between 0 and 1. A unit distance of 0 represents the top of the circle and the stroke draws in a clockwise direction.\n\nSee Also\nAccessing the stroke\nvar strokeEnd: CGFloat\nThe unit distance along the circle where the stroke ends."
  },
  {
    "title": "init(circle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcirclerenderer/1452547-init",
    "html": "Parameters\ncircle\n\nThe circle overlay containing the information about the circular area for the renderer to draw. The renderer maintains a strong reference to the object you provide. This parameter can’t be nil.\n\nReturn Value\n\nAn initialized circle renderer object."
  },
  {
    "title": "maximumZ | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452660-maximumz",
    "html": "Discussion\n\nIf you use different overlay objects to represent different tiles at different zoom levels, use this property to specify the maximum zoom level that this overlay’s tiles support. At zoom level 0, tiles cover the entire world map; at zoom level 1, tiles cover 1/4 of the world; at zoom level 2, tiles cover 1/16 of the world, and so on. The map doesn’t attempt to load tiles for a zoom level greater than the value that this property specifies.\n\nThe default value of this property is 21. Setting the value of this property to a number greater than the default doesn’t ensure the use of those extra zoom levels.\n\nSee Also\nAccessing the tile attributes\nvar tileSize: CGSize\nThe size (in pixels) of your tile images.\nvar isGeometryFlipped: Bool\nA Boolean value that indicates the orientation of tile indexes along the y-axis.\nvar minimumZ: Int\nThe minimum zoom level that the tiles of this overlay object support.\nvar canReplaceMapContent: Bool\nA Boolean value that indicates whether the tile content is fully opaque."
  },
  {
    "title": "size | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452485-size",
    "html": "Discussion\n\nThe default value of this property is 256 by 256 points.\n\nSee Also\nConfiguring the image output\nvar traitCollection: UITraitCollection\nTraits that determine the appearance of the map snapshot.\nvar appearance: NSAppearance?\nThe visual style (light or dark) to apply to the map when rendering the snapshot image.\nvar scale: CGFloat\nThe scale factor to use when creating the image.\nDeprecated"
  },
  {
    "title": "MKScaleView.Alignment.leading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview/alignment/leading",
    "html": "Discussion\n\nThis value causes the scale view to place the value 0 at the leading edge of the view. The scale view places the distance representing the current scale of the map at the trailing edge of the view.\n\nSee Also\nAlignment options\ncase trailing\nScale measurements begin at the trailing edge of the view."
  },
  {
    "title": "MKScaleView.Alignment.trailing | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview/alignment/trailing",
    "html": "Discussion\n\nThis value causes the scale view to place the value 0 at the trailing edge of the view. The scale places the distance representing the current scale of the map at the leading edge of the view.\n\nSee Also\nAlignment options\ncase leading\nScale measurements begin at the leading edge of the view."
  },
  {
    "title": "camera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452082-camera",
    "html": "Discussion\n\nSpecify a camera object if you want to change the pitch, altitude, or heading information applied to the map.\n\nSee Also\nConfiguring the snapshot region\nvar region: MKCoordinateRegion\nThe area of the map that you want to capture.\nvar mapRect: MKMapRect\nThe map rectangle that you want to capture."
  },
  {
    "title": "mapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452727-maprect",
    "html": "Discussion\n\nUse this property to specify the map using map view points. If you assign a value for this property, the snapshotter updates the value in the region property to match the corresponding map rectangle as closely as possible.\n\nThe snapshotter sets the default value of this property to a map rectangle that encompasses the user’s country or region, based on the current locale information.\n\nSee Also\nConfiguring the snapshot region\nvar region: MKCoordinateRegion\nThe area of the map that you want to capture.\nvar camera: MKMapCamera\nThe camera to use when taking the map snapshot."
  },
  {
    "title": "traitCollection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/3152864-traitcollection",
    "html": "See Also\nConfiguring the image output\nvar size: CGSize\nThe size of the image that you want to create.\nvar appearance: NSAppearance?\nThe visual style (light or dark) to apply to the map when rendering the snapshot image.\nvar scale: CGFloat\nThe scale factor to use when creating the image.\nDeprecated"
  },
  {
    "title": "MKMapFeatureAnnotation.FeatureType.physicalFeature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation/featuretype/physicalfeature",
    "html": "See Also\nKinds of annotations\ncase pointOfInterest\nA point of interest, such as a museum, cafe, park, or school.\ncase territory\nA territorial or regional boundary, such as a national border, a state boundary, or a neighborhood."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/options/3951129-pointofinterestfilter",
    "html": "See Also\nCustomizing Snaphot Appearance\nvar size: CGSize\nThe requested size of the snapshot image.\nvar traitCollection: UITraitCollection\nA collection of traits that describes orientation and other characteristics of the snapshot."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkshape/1437594-title",
    "html": "Discussion\n\nThe shape displays this string in the callout for the associated annotation view. The default value of this property is nil.\n\nSee Also\nAccessing the shape attributes\nvar subtitle: String?\nThe subtitle of the shape annotation.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "traitCollection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/options/3951131-traitcollection",
    "html": "See Also\nCustomizing Snaphot Appearance\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter to use to customize what map features are visible in the snapshot.\nvar size: CGSize\nThe requested size of the snapshot image."
  },
  {
    "title": "MKUserTrackingMode.followWithHeading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkusertrackingmode/followwithheading",
    "html": "Discussion\n\nThis mode requires the device to have an available magnetometer. This mode isn’t available for compatible iPad or iPhone apps running in visionOS."
  },
  {
    "title": "init(coordinates:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeodesicpolyline/1452314-init",
    "html": "Parameters\ncoords\n\nA pointer to the array of coordinates that define the path.\n\ncount\n\nThe number of items in the coords array.\n\nReturn Value\n\nA new geodesic polyline object.\n\nSee Also\nCreating a geodesic polyline overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates and returns a geodesic polyline using the specified map points."
  },
  {
    "title": "init(coordinates:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolyline/1452205-init",
    "html": "Parameters\ncoords\n\nThe array of coordinates defining the shape. The initializer copies the data in this array to the new object.\n\ncount\n\nThe number of items in the coords array.\n\nReturn Value\n\nA new polyline object.\n\nSee Also\nCreating a polyline overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates a polyline object from the specified set of map points."
  },
  {
    "title": "radius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcircle/1411067-radius",
    "html": "See Also\nAccessing the overlay’s attributes\nvar coordinate: CLLocationCoordinate2D\nThe center point of the circular area, specified as a latitude and longitude.\nvar boundingMapRect: MKMapRect\nThe bounding rectangle of the circular area."
  },
  {
    "title": "detailCalloutAccessoryView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452543-detailcalloutaccessoryview",
    "html": "See Also\nManaging callout views\nvar canShowCallout: Bool\nA Boolean value that indicates whether the annotation view is able to display extra information in a callout.\nvar leftCalloutAccessoryView: UIView?\nThe view to display on the left side of the standard callout.\nvar rightCalloutAccessoryView: UIView?\nThe view to display on the right side of the standard callout.\nvar leftCalloutOffset: CGPoint\nThe offset in points from the middle-left of the annotation view.\nvar rightCalloutOffset: CGPoint\nThe offset in points from the middle-right of the annotation view."
  },
  {
    "title": "strokeEnd | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygonrenderer/3573872-strokeend",
    "html": "Discussion\n\nUse this property and strokeStart to render a portion of the polygon. Use location(atPointIndex:) to get unit distance locations for point indices along the polygon.\n\nSee Also\nAccessing the stroke\nvar strokeStart: CGFloat\nThe unit distance along the polygon where the stroke starts."
  },
  {
    "title": "init(coordinate:addressDictionary:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkplacemark/1451895-init",
    "html": "Parameters\ncoordinate\n\nThe geographic coordinate to associate with the placemark.\n\naddressDictionary\n\nA dictionary containing keys and values from an Address Book record. For a list of strings that you can use for the keys of this dictionary, see the “Address Property” constants in ABPerson. All of the keys in should be at the top level of the dictionary.\n\nReturn Value\n\nAn initialized MKPlacemark object.\n\nDiscussion\n\nYou can create placemark objects manually for entities for which you already have address information, such as contacts in the Address Book. Creating a placemark object explicitly avoids the need to query the reverse geocoder object for the same information.\n\nSee Also\nCreating a placemark object\ninit(coordinate: CLLocationCoordinate2D)\nCreates and returns a placemark object using the specified coordinate.\ninit(coordinate: CLLocationCoordinate2D, postalAddress: CNPostalAddress)\nCreates and returns a placemark object with the specified coordinate and postal address from the user’s Contacts database.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "init(coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkplacemark/2172460-init",
    "html": "Parameters\ncoordinate\n\nThe geographic coordinate to associate with the placemark.\n\nReturn Value\n\nAn initialized MKPlacemark object.\n\nDiscussion\n\nThis method doesn’t fill in any of the other inherited properties describing the location.\n\nSee Also\nCreating a placemark object\ninit(coordinate: CLLocationCoordinate2D, postalAddress: CNPostalAddress)\nCreates and returns a placemark object with the specified coordinate and postal address from the user’s Contacts database.\ninit(coordinate: CLLocationCoordinate2D, addressDictionary: [String : Any]?)\nCreates and returns a placemark object using the specified coordinate and Address Book dictionary."
  },
  {
    "title": "init(coordinate:postalAddress:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkplacemark/2172461-init",
    "html": "Parameters\ncoordinate\n\nThe geographic coordinate to associate with the placemark.\n\npostalAddress\n\nAn object containing the address information from the Contacts framework.\n\nReturn Value\n\nAn initialized MKPlacemark object.\n\nSee Also\nCreating a placemark object\ninit(coordinate: CLLocationCoordinate2D)\nCreates and returns a placemark object using the specified coordinate.\ninit(coordinate: CLLocationCoordinate2D, addressDictionary: [String : Any]?)\nCreates and returns a placemark object using the specified coordinate and Address Book dictionary."
  },
  {
    "title": "init(points:count:interiorPolygons:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygon/1451945-init",
    "html": "Parameters\npoints\n\nThe array of map points defining the shape. The new object copy the data in this array.\n\ncount\n\nThe number of items in the points array.\n\ninteriorPolygons\n\nAn array of MKPolygon objects that define one or more cutout regions for the receiver’s polygon.\n\nReturn Value\n\nA new polygon object.\n\nSee Also\nCreating a polygon overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates and returns a polygon object from the specified set of map points.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates and returns a polygon object from the specified set of coordinates.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of coordinates and interior polygons."
  },
  {
    "title": "init(points:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygon/1452247-init",
    "html": "Parameters\npoints\n\nThe array of map points defining the shape. The new object copy the data in this array.\n\ncount\n\nThe number of items in the points array.\n\nReturn Value\n\nA new polygon object.\n\nSee Also\nCreating a polygon overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of map points and interior polygons.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates and returns a polygon object from the specified set of coordinates.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of coordinates and interior polygons.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "MKLocalSearchCompleter.FilterType.locationsAndQueries | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/filtertype/locationsandqueries",
    "html": "Deprecated\n\nUse one of the options available in MKLocalSearchCompleter.ResultType instead."
  },
  {
    "title": "init(coordinates:count:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygon/1452497-init",
    "html": "Parameters\ncoords\n\nThe array of coordinates defining the shape. The new object copies the data in this array.\n\ncount\n\nThe number of items in the coords array.\n\nReturn Value\n\nA new polygon object.\n\nSee Also\nCreating a polygon overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates and returns a polygon object from the specified set of map points.\ninit(points: UnsafePointer<MKMapPoint>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of map points and interior polygons.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of coordinates and interior polygons."
  },
  {
    "title": "MKLocalSearchCompleter.FilterType.locationsOnly | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/filtertype/locationsonly",
    "html": "Deprecated\n\nUse one of the options available in MKLocalSearchCompleter.ResultType instead."
  },
  {
    "title": "countryCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkplacemark/1451952-countrycode",
    "html": "Discussion\n\nThis string is the standard abbreviation used to refer to the country or region. For example, if the placemark location was Apple’s headquarters, the value for this property would be the string “US”."
  },
  {
    "title": "interiorPolygons | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygon/1452521-interiorpolygons",
    "html": "Discussion\n\nWhen the screen renders a polygon, the renderer masks the area that any interior polygons occupy so they aren’t part of the polygon."
  },
  {
    "title": "loadTile(at:result:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay/1452445-loadtile",
    "html": "Parameters\npath\n\nThe path structure that identifies the specific tile you want. This structure incorporates the tile’s x-y coordinate at a given zoom level and scale factor.\n\nresult\n\nThe completion block to call when the tile data is available. The method can execute this block on any queue and takes the following parameters:\n\nThe tileData parameter contains the raw data that loads from the corresponding image file. You can use this data to initialize an image object. If an error occurs, this parameter is nil.\n\nThe error parameter contains an error object if there is a problem loading the tile image. If no errors occur, this parameter is nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc loadTile(at path: MKTileOverlayPath) async throws -> Data\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThe default implementation of this method uses the url(forTilePath:) method to retrieve the URL for the specified tile and then loads that tile into memory asynchronously using a URLSession object. The specified tile may be located either on the local file system or on a remote server. Subclasses may override this method and implement their own custom tile-loading behavior.\n\nWhen a tile overlay renderer (that is, an instance of MKTileOverlayRenderer) needs to display tiles, it uses this method to request the data for each tile.\n\nSee Also\nCustomizing the loading of tiles\nvar urlTemplate: String?\nThe template for generating tile image URLs.\nfunc url(forTilePath: MKTileOverlayPath) -> URL\nReturns the URL to use to access the specified tile.\nstruct MKTileOverlayPath\nValues that specify the path indexes for a single overlay tile."
  },
  {
    "title": "shouldRasterize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/3088846-shouldrasterize",
    "html": "Discussion\n\nThe default value is false.\n\nWhenever possible, MapKit vectorizes overlay shapes by default so that they scale along with the map and remain sharp. In some cases, you may want to force the rasterization of an overlay and not vectorize it. Set this variable to true to force the overlay path renderer to render the overlay as a bitmap.\n\nSee Also\nDrawing the path\nfunc applyStrokeProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the renderer’s stroke-related drawing properties to the specified graphics context.\nfunc applyFillProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the receiver’s fill-related drawing properties to the specified graphics context.\nfunc strokePath(CGPath, in: CGContext)\nDraws a line along the specified path.\nfunc fillPath(CGPath, in: CGContext)\nFills the area that the specified path encloses."
  },
  {
    "title": "subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocation/1452562-subtitle",
    "html": "See Also\nAccessing the user’s location annotation\nvar title: String?\nThe title to display for the user’s location annotation."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocation/1452058-title",
    "html": "See Also\nAccessing the user’s location annotation\nvar subtitle: String?\nThe subtitle to display for the user’s location annotation."
  },
  {
    "title": "lineDashPattern | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer/1452493-linedashpattern",
    "html": "Discussion\n\nThe array contains one or more NSNumber objects that indicate the lengths (in points) of the line segments and gaps in the pattern. The values in the array alternate, starting with the first line segment length, followed by the first gap length, followed by the second line segment length, and so on.\n\nThis property is nil by default, which indicates no line dash pattern.\n\nSee Also\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern."
  },
  {
    "title": "defaultHigh | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturedisplaypriority/2867300-defaulthigh",
    "html": "Discussion\n\nAn annotation view with this priority is removed from the map when its bounds collide with the bounds of another view with a higher priority. If the priorities of the two views are equal, the view furthest from the center of the map's visible region is hidden first.\n\nSee Also\nPriorities\nstatic let required: MKFeatureDisplayPriority\nA constant indicating that the item is required.\nstatic let defaultLow: MKFeatureDisplayPriority\nA constant indicating that the item's display priority is low."
  },
  {
    "title": "location | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocation/1452415-location",
    "html": "Discussion\n\nThis property contains nil if the map view isn’t showing the user’s location, or if the map view is still determining the user’s location.\n\nSee Also\nDetermining the user’s location\nvar isUpdating: Bool\nA Boolean value that indicates whether the map view is updating the user’s location.\nvar heading: CLHeading?\nThe heading of the user’s location.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "isUpdating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocation/1452084-isupdating",
    "html": "See Also\nDetermining the user’s location\nvar location: CLLocation?\nThe location of the device.\nvar heading: CLHeading?\nThe heading of the user’s location."
  },
  {
    "title": "animatesDrop | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview/1452654-animatesdrop",
    "html": "Discussion\n\nWhen this property is true, the map view animates the appearance of pin annotation views by making them appear to drop onto the map at the target point. This animation occurs whenever the view transitions from offscreen to onscreen.\n\nSee Also\nGetting and Setting Attributes\nvar pinTintColor: UIColor!\nThe color of the pin head.\nDeprecated\nvar pinColor: MKPinAnnotationColor\nThe color of the pin head.\nDeprecated"
  },
  {
    "title": "init(annotation:reuseIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452779-init",
    "html": "Parameters\nannotation\n\nThe annotation object to associate with the new view.\n\nreuseIdentifier\n\nIf you plan to reuse the annotation view for similar types of annotations, pass a string to identify it. Although you can pass nil if you don’t intend to reuse the view, reusing annotation views is generally best practice.\n\nReturn Value\n\nThe initialized annotation view, or nil if there’s a problem initializing the object.\n\nDiscussion\n\nThe reuse identifier provides a way for you to improve performance by recycling annotation views as the map scrolls on and off of the map. As MapKit no longer needs views, the map view moves them to a reuse queue. When a new annotation becomes visible, your app can request a view for that annotation by passing the appropriate reuse identifier string to the dequeueReusableAnnotationView(withIdentifier:) method of MKMapView.\n\nSee Also\nCreating and preparing an annotation view\ninit?(coder: NSCoder)\nCreates an annotation view using data from the specified unarchiver.\nfunc prepareForReuse()\nCalls this method when removing the view from the reuse queue.\nfunc prepareForDisplay()\nNotifies the annotation view that the map view is about to display it.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "strokeEnd | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolylinerenderer/3573874-strokeend",
    "html": "Discussion\n\nUse this property and strokeStart to render a portion of the line. Use location(atPointIndex:) to get unit distance locations for point indices along the line.\n\nSee Also\nAccessing the stroke\nvar strokeStart: CGFloat\nThe unit distance along the line where the stroke starts."
  },
  {
    "title": "locations(at:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint/3600701-locations",
    "html": "Parameters\nindexes\n\nThe index set of map points associated with the shape.\n\nReturn Value\n\nAn array of CGFloat values.\n\nSee Also\nAccessing the points in the shape\nfunc points() -> UnsafeMutablePointer<MKMapPoint>\nReturns an array of map points associated with the shape.\nvar pointCount: Int\nThe number of points associated with the shape.\nfunc location(atPointIndex: Int) -> CGFloat\nTranslates a point index into a unit distance along the shape."
  },
  {
    "title": "pointCount | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint/1452179-pointcount",
    "html": "See Also\nAccessing the points in the shape\nfunc points() -> UnsafeMutablePointer<MKMapPoint>\nReturns an array of map points associated with the shape.\nfunc location(atPointIndex: Int) -> CGFloat\nTranslates a point index into a unit distance along the shape.\nfunc locations(at: IndexSet) -> [CGFloat]\nTranslates a point index set into a unit distance along the shape."
  },
  {
    "title": "points() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint/1452425-points",
    "html": "Return Value\n\nAn unsafe mutable array of MKMapPoint structures.\n\nDiscussion\n\nThe pointCount property specifies the number of points in the array.\n\nSee Also\nAccessing the points in the shape\nvar pointCount: Int\nThe number of points associated with the shape.\nfunc location(atPointIndex: Int) -> CGFloat\nTranslates a point index into a unit distance along the shape.\nfunc locations(at: IndexSet) -> [CGFloat]\nTranslates a point index set into a unit distance along the shape.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "init(polyline:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolylinerenderer/1452074-init",
    "html": "Parameters\npolyline\n\nThe polyline overlay containing information about the area the renderer draws. This object requires at least two points defining the line segment to draw. This parameter can’t be nil.\n\nReturn Value\n\nAn initialized polyline renderer object."
  },
  {
    "title": "MKDirections.RoutePreference.any | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/routepreference/any",
    "html": "See Also\nRoute selection options\ncase avoid\nThe option that requests the framework avoid certain routes."
  },
  {
    "title": "MKDirections.RoutePreference.avoid | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/routepreference/avoid",
    "html": "See Also\nRoute selection options\ncase any\nThe option that specifies any available route."
  },
  {
    "title": "init(multiPolygon:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolygonrenderer/3088838-init",
    "html": "Parameters\nmultiPolygon\n\nAn MKMultiPolygon to initialize the renderer with."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolyline/3088841-init",
    "html": "Parameters\npolylines\n\nAn array of MKPolyline objects to initialize the object with."
  },
  {
    "title": "mapView(_:annotationView:calloutAccessoryControlTapped:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1616211-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the specified annotation view.\n\nview\n\nThe annotation view with the button that the person taps.\n\ncontrol\n\nThe control that the person taps.\n\nDiscussion\n\nAccessory views contain custom content and the map view positions it on either side of the annotation title text. If a view you specify is a descendant of the UIControl class, the map view calls this method as a convenience whenever the user taps your view. You can use this method to respond to taps and perform any actions associated with that control. For example, if your control displays additional information about the annotation, you can use this method to present a modal panel with that information.\n\nIf your custom accessory views aren’t descendants of the UIControl class, the map view doesn’t call this method.\n\nSee Also\nManaging annotation views\nfunc mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?\nReturns the view associated with the specified annotation object.\nfunc mapView(MKMapView, didAdd: [MKAnnotationView])\nTells the delegate when the map view adds one or more annotation views to the map.\nfunc mapView(MKMapView, clusterAnnotationForMemberAnnotations: [MKAnnotation]) -> MKClusterAnnotation\nAsks the delegate to provide a cluster annotation object for the specified annotations."
  },
  {
    "title": "mapView(_:rendererFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452203-mapview",
    "html": "Parameters\nmapView\n\nThe map view that requests the renderer object.\n\noverlay\n\nThe overlay object that the map view is about to display.\n\nReturn Value\n\nThe renderer to use when presenting the specified overlay on the map.\n\nDiscussion\n\nImplement this method and use it to provide an appropriate renderer object for your overlays. The renderer object is responsible for drawing the contents of your overlay when the map view requests it to. MapKit supports many different types of standard renderer objects and you may also define your own custom renderers.\n\nSee Also\nManaging the display of overlays\nfunc mapView(MKMapView, didAdd: [MKOverlayRenderer])\nTells the delegate when the map view adds one or more renderer objects to the map.\nfunc mapView(MKMapView, viewFor: MKOverlay) -> MKOverlayView\nAsks the delegate for the overlay view to use when displaying the specified overlay object.\nDeprecated\nfunc mapView(MKMapView, didAddOverlayViews: [Any])\nTells the delegate when the map adds one or more overlay views to the map.\nDeprecated"
  },
  {
    "title": "zPriority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/3547913-zpriority",
    "html": "Discussion\n\nThe constant defaultUnselected is the default value for zPriority.\n\nSee Also\nSetting the priority for display\nvar displayPriority: MKFeatureDisplayPriority\nThe display priority of the annotation view.\nstruct MKFeatureDisplayPriority\nConstants that indicates the display priority for annotations.\nvar selectedZPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in a selected state with respect to its ordering along the z-axis.\nstruct MKAnnotationViewZPriority\nConstants that indicates the priority for ordering overlapping annotation views."
  },
  {
    "title": "selectedZPriority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/3547912-selectedzpriority",
    "html": "Discussion\n\nThe constant defaultSelected is the default value for selectedZPriority.\n\nSee Also\nSetting the priority for display\nvar displayPriority: MKFeatureDisplayPriority\nThe display priority of the annotation view.\nstruct MKFeatureDisplayPriority\nConstants that indicates the display priority for annotations.\nvar zPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in an unselected state with respect to its ordering along the z-axis.\nstruct MKAnnotationViewZPriority\nConstants that indicates the priority for ordering overlapping annotation views."
  },
  {
    "title": "mapView(_:didChange:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1616202-mapview",
    "html": "Parameters\nmapView\n\nThe map view where the user-tracking mode changes.\n\nmode\n\nThe mode to use for tracking the user’s location.\n\nanimated\n\nIf true, the map animates the change from the current mode to the new mode; otherwise, the map doesn’t animate the change. This parameter affects only tracking-mode changes. The map animates all changes to the user’s location and heading.\n\nSee Also\nTracking the user’s location\nfunc mapViewWillStartLocatingUser(MKMapView)\nTells the delegate that the map view is about to start tracking the user’s location.\nfunc mapViewDidStopLocatingUser(MKMapView)\nTells the delegate when the map view stops tracking the user’s location.\nfunc mapView(MKMapView, didUpdate: MKUserLocation)\nTells the delegate when the map view updates the user’s location.\nfunc mapView(MKMapView, didFailToLocateUserWithError: Error)\nTells the delegate when an attempt to locate the user’s location fails.\nRelated Documentation\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation."
  },
  {
    "title": "isEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452411-isenabled",
    "html": "Discussion\n\nThe default value of this property is true. If the value of this property is false, the annotation view ignores touch events and isn’t selectable. Subclasses may also display the annotation contents differently depending on the value of this property.\n\nSee Also\nGetting and setting attributes\nvar image: UIImage?\nThe image the annotation view displays.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "MKAnnotationViewZPriority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationviewzpriority",
    "html": "Topics\nPriorities\nstatic let defaultSelected: MKAnnotationViewZPriority\nThe default view overlapping priority for a selected view.\nstatic let defaultUnselected: MKAnnotationViewZPriority\nThe default view overlapping priority for an unselected view.\nstatic let max: MKAnnotationViewZPriority\nThe maximum allowed priority for overlapping views.\nstatic let min: MKAnnotationViewZPriority\nThe minimum allowed priority for overlapping views.\nInitializers\ninit(Float)\nCreates an overlapping priority from the value.\ninit(rawValue: Float)\nCreates an overlapping priority from the value.\nRelationships\nConforms To\nHashable\nRawRepresentable\nSendable\nSee Also\nSetting the priority for display\nvar displayPriority: MKFeatureDisplayPriority\nThe display priority of the annotation view.\nstruct MKFeatureDisplayPriority\nConstants that indicates the display priority for annotations.\nvar zPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in an unselected state with respect to its ordering along the z-axis.\nvar selectedZPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in a selected state with respect to its ordering along the z-axis."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkhybridmapconfiguration/3930219-init",
    "html": "See Also\nCreating a hybrid map configuration\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new hybrid map configuration with the specified elevation style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style."
  },
  {
    "title": "isHighlighted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452047-ishighlighted",
    "html": "Discussion\n\nDon’t set the value of this property directly. The map view sets it in response to touch events entering or exiting the annotation view’s bounds.\n\nSee Also\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar image: UIImage?\nThe image the annotation view displays.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "setSelected(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452381-setselected",
    "html": "Parameters\nselected\n\nContains the value true if the view displays in a selected state.\n\nanimated\n\nSet to true if the map view animates the change in selection state.\n\nDiscussion\n\nDont call this method directly. An MKMapView object calls this method in response to user interactions with the annotation.\n\nSee Also\nManaging the selection state\nvar isSelected: Bool\nA Boolean value that indicates whether the annotation view is in a selected state.\nRelated Documentation\nfunc selectAnnotation(MKAnnotation, animated: Bool)\nSelects the specified annotation and displays a callout view for it."
  },
  {
    "title": "annotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452613-annotation",
    "html": "Discussion\n\nDon’t change the value of this property directly. This property contains a non-nil value only while the annotation view is visible on the map. If the map view queues this annotation view and is waiting to reuse it, the value is nil.\n\nSee Also\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar image: UIImage?\nThe image the annotation view displays.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "centerOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452144-centeroffset",
    "html": "Discussion\n\nBy default, the map view places the center point of an annotation view at the coordinate point of the associated annotation. You can use this property to reposition the annotation view as necessary. MapKit measures the x- and y-offset values in points. Positive offset values move the annotation view down and to the right, and negative values move it up and to the left.\n\nSee Also\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar image: UIImage?\nThe image the annotation view displays.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable."
  },
  {
    "title": "isSelected | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452777-isselected",
    "html": "Discussion\n\nDon’t set the value of this property directly. If the property contains true, the annotation view is displaying a callout.\n\nSee Also\nManaging the selection state\nfunc setSelected(Bool, animated: Bool)\nSets the selection state of the annotation view."
  },
  {
    "title": "leftCalloutAccessoryView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452423-leftcalloutaccessoryview",
    "html": "Discussion\n\nThe default value of this property is nil. Typically, you use the left callout view to display information about the annotation or to link to custom information that your app provides.\n\nIn an iOS app, if the view you specify is also a descendant of the UIControl class, you can use the map view’s delegate to receive notifications when the user taps your control. If it doesn’t descend from UIControl, your view is responsible for handling any touch events within its bounds.\n\nIn a macOS app, the callout view’s view controller can implement an action method that responds when the user clicks the control in a callout view.\n\nSee Also\nManaging callout views\nvar canShowCallout: Bool\nA Boolean value that indicates whether the annotation view is able to display extra information in a callout.\nvar rightCalloutAccessoryView: UIView?\nThe view to display on the right side of the standard callout.\nvar detailCalloutAccessoryView: UIView?\nThe detail accessory view to use in the standard callout.\nvar leftCalloutOffset: CGPoint\nThe offset in points from the middle-left of the annotation view.\nvar rightCalloutOffset: CGPoint\nThe offset in points from the middle-right of the annotation view."
  },
  {
    "title": "canShowCallout | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452451-canshowcallout",
    "html": "Discussion\n\nIf the value of this property is true, the map view shows a standard callout when the user taps a selected annotation view. The callout uses the title and subtitle text from the associated annotation object. If there’s no title text, the map view treats the annotation view as if its isEnabled property is false. The callout also displays any custom callout views in the leftCalloutAccessoryView and rightCalloutAccessoryView properties.\n\nIf the value of this property is false, the map view ignores the value of the title and subtitle strings, and the annotation view remains in an enabled state by default. You can still disable the view explicitly using the isEnabled property.\n\nSee Also\nManaging callout views\nvar leftCalloutAccessoryView: UIView?\nThe view to display on the left side of the standard callout.\nvar rightCalloutAccessoryView: UIView?\nThe view to display on the right side of the standard callout.\nvar detailCalloutAccessoryView: UIView?\nThe detail accessory view to use in the standard callout.\nvar leftCalloutOffset: CGPoint\nThe offset in points from the middle-left of the annotation view.\nvar rightCalloutOffset: CGPoint\nThe offset in points from the middle-right of the annotation view."
  },
  {
    "title": "leftCalloutOffset | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452545-leftcalloutoffset",
    "html": "Discussion\n\nThis property specifies where the map view shows the anchor of the callout when it orients off the left side of the annotation view.\n\nSee Also\nManaging callout views\nvar canShowCallout: Bool\nA Boolean value that indicates whether the annotation view is able to display extra information in a callout.\nvar leftCalloutAccessoryView: UIView?\nThe view to display on the left side of the standard callout.\nvar rightCalloutAccessoryView: UIView?\nThe view to display on the right side of the standard callout.\nvar detailCalloutAccessoryView: UIView?\nThe detail accessory view to use in the standard callout.\nvar rightCalloutOffset: CGPoint\nThe offset in points from the middle-right of the annotation view."
  },
  {
    "title": "rightCalloutAccessoryView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452233-rightcalloutaccessoryview",
    "html": "Discussion\n\nThis property is nil by default. Typically, you use the right callout view to link to more detailed information about the annotation. In an iOS app, a common view to specify for this property is a button object with a type of UIButton.ButtonType.detailDisclosure.\n\nIn an iOS app, if the view you specify is also a descendant of the UIControl class, you can use the map view’s delegate to receive notifications when a person taps your control. If it doesn’t descend from UIControl, your view is responsible for handling any touch events within its bounds.\n\nIn a macOS app, the callout view’s view controller can implement an action method that responds when a user clicks the control in a callout view.\n\nSee Also\nManaging callout views\nvar canShowCallout: Bool\nA Boolean value that indicates whether the annotation view is able to display extra information in a callout.\nvar leftCalloutAccessoryView: UIView?\nThe view to display on the left side of the standard callout.\nvar detailCalloutAccessoryView: UIView?\nThe detail accessory view to use in the standard callout.\nvar leftCalloutOffset: CGPoint\nThe offset in points from the middle-left of the annotation view.\nvar rightCalloutOffset: CGPoint\nThe offset in points from the middle-right of the annotation view."
  },
  {
    "title": "setDragState(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452639-setdragstate",
    "html": "Parameters\nnewDragState\n\nThe new drag state for the annotation view.\n\nanimated\n\nIf true, the map view animates the change to the new drag state; otherwise, the map view makes the change without animations.\n\nDiscussion\n\nApps can override this method and use it to implement drag support for custom annotation views. As the system detects user actions that indicate a drag, it calls this method to update the drag state. In response to these changes, your custom implementation of this method needs to do the following:\n\nWhen the drag state changes to MKAnnotationView.DragState.starting, set the state to MKAnnotationView.DragState.dragging. If you perform an animation to indicate the beginning of a drag, and the animated parameter is true, perform that animation before changing the state.\n\nWhen the state changes to either MKAnnotationView.DragState.canceling or MKAnnotationView.DragState.ending, set the state to MKAnnotationView.DragState.none. If you perform an animation at the end of a drag, and the animated parameter is true, perform that animation before changing the state.\n\nThe default implementation of this method sets the value of the dragState property to the value in the newDragState parameter only. Therefore, direct subclasses can call the inherited version of this method to change the drag state; otherwise, change the value in the isDraggable property directly.\n\nChanging the state to MKAnnotationView.DragState.dragging or MKAnnotationView.DragState.none is the way to signal to the map view when you finish performing animations. For example, when a drag operation begins for an annotation, the class executes an animation to lift the view off the map. Similarly, when the user drops the annotation, the class performs a drop animation. Even if you don’t perform any animations, call the inherited version of this method to update the dragState property.\n\nDon’t try to stop a new drag operation by changing the state from MKAnnotationView.DragState.starting to MKAnnotationView.DragState.none. If you don’t want your annotation view to be draggable, set the isDraggable property to false.\n\nSee Also\nSupporting drag operations\nvar isDraggable: Bool\nA Boolean value that indicates whether the annotation view is draggable.\nvar dragState: MKAnnotationView.DragState\nThe drag state of the annotation view."
  },
  {
    "title": "union(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601330-union",
    "html": "Parameters\nother\n\nAn option set.\n\nReturn Value\n\nA new option set made up of the elements contained in this set, in other, or in both.\n\nDiscussion\n\nThis example uses the union(_:) method to add two more shipping options to the default set.\n\nlet defaultShipping = ShippingOptions.standard\nlet memberShipping = defaultShipping.union([.secondDay, .priority])\nprint(memberShipping.contains(.priority))\n// Prints \"true\"\n\nSee Also\nCombining sets of modes\nfunc intersection(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with only the elements contained in both this set and the given set.\nfunc subtracting(MapInteractionModes) -> MapInteractionModes\nReturns a new set containing the elements of this set that do not occur in the given set.\nfunc symmetricDifference(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with the elements contained in this set or in the given set, but not in both."
  },
  {
    "title": "isDraggable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1452401-isdraggable",
    "html": "Discussion\n\nSetting this property to true makes an annotation draggable by the user. If true, the associated annotation object needs to also implement the setCoordinate: method. The default value of this property is false.\n\nSetting this property to true lets the map view know that the annotation is draggable. You can’t conditionalize drag operations by attempting to stop an operation the user initiates. Doing so can lead to undefined behavior. After it begins, the drag operation needs to continue to completion.\n\nSee Also\nSupporting drag operations\nfunc setDragState(MKAnnotationView.DragState, animated: Bool)\nSets the drag state for the annotation view.\nvar dragState: MKAnnotationView.DragState\nThe drag state of the annotation view."
  },
  {
    "title": "strokeStart | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygonrenderer/3573873-strokestart",
    "html": "Discussion\n\nUse this property and strokeEnd to render a portion of the polygon. Use location(atPointIndex:) to get unit distance locations for point indices along the polygon.\n\nSee Also\nAccessing the stroke\nvar strokeEnd: CGFloat\nThe unit distance along the polygon where the stroke ends."
  },
  {
    "title": "init(polygon:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygonrenderer/1448129-init",
    "html": "Parameters\npolygon\n\nThe polygon overlay containing information about the area the polygon renderer draws. This object requires at least three points defining the polygon to draw. This parameter can’t be nil.\n\nReturn Value\n\nAn initialized polygon renderer object."
  },
  {
    "title": "init(coordinate:anchorPoint:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapannotation/3601286-init",
    "html": "Parameters\ncoordinate\n\nThe location of the specified annotation.\n\nanchorPoint\n\nA CGPoint value in unit coordinate space that aligns the coordinate location of the annotation with view created. The default value 0.5, which represents the center of the view.\n\ncontent\n\nThe closure that returns a custom annotation view.\n\nDiscussion\n\nUse the anchor point to align the SwiftUI view you return in content to the coordinate represented on the map. Anchor point uses unit coordinate space, that represents the distance between the frame edges as values between 0 and 1. For example, to align the top-right or bottom-middle of the view with the coordinate location on the map use CGPoint(1,0) or CGPoint(0.5,1), respectively."
  },
  {
    "title": "init(memberAnnotations:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkclusterannotation/2866567-init",
    "html": "Parameters\nmemberAnnotations\n\nThe annotations to group together as a single entity.\n\nReturn Value\n\nAn initialized MKClusterAnnotation object or nil if the object could not be created."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkclusterannotation/2866569-title",
    "html": "Discussion\n\nThe cluster annotation object automatically sets this string to the title of one of the annotations in its group.\n\nSee Also\nGetting the cluster attributes\nvar subtitle: String?\nThe subtitle string to display for the group of annotations."
  },
  {
    "title": "subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkclusterannotation/2866570-subtitle",
    "html": "Discussion\n\nThe cluster annotation object sets this property to a string that conveys how many additional annotations the group includes, except for the annotation with the title that the title property displays.\n\nSee Also\nGetting the cluster attributes\nvar title: String?\nThe title string to display for the group of annotations."
  },
  {
    "title": "redPinColor() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview/1451990-redpincolor",
    "html": "Return Value\n\nThe red pin color.\n\nDiscussion\n\nThe system uses red pins to indicate destination points on the map.\n\nSee Also\nGetting Standard Pin Colors\nclass func greenPinColor() -> UIColor\nReturns the standard color for green pins.\nDeprecated\nclass func purplePinColor() -> UIColor\nReturns the standard color for purple pins.\nDeprecated\nenum MKPinAnnotationColor\nThe supported colors for pin annotations.\nDeprecated"
  },
  {
    "title": "locations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer/3600699-locations",
    "html": "See Also\nAccessing the gradient colors\nfunc setColors([UIColor], locations: [CGFloat])\nSets the iOS colors and corresponding unit distance values to create gradients.\nfunc setColors([NSColor], locations: [CGFloat])\nSets the macOS colors and corresponding unit distance values to create gradients.\nvar colors: [UIColor]\nAn array that represents the gradient’s color transition points."
  },
  {
    "title": "collisionMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/2873315-collisionmode",
    "html": "See Also\nManaging collisions between annotation views\nenum MKAnnotationView.CollisionMode\nConstants that indicates how to interpret the collision frame rectangle of an annotation view."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointannotation/1452620-coordinate",
    "html": "See Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "MKFeatureDisplayPriority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturedisplaypriority",
    "html": "Topics\nPriorities\nstatic let required: MKFeatureDisplayPriority\nA constant indicating that the item is required.\nstatic let defaultHigh: MKFeatureDisplayPriority\nA constant indicating that the item's display priority is high.\nstatic let defaultLow: MKFeatureDisplayPriority\nA constant indicating that the item's display priority is low.\nCreating Feature Display Priorities\ninit(Float)\nCreates a feature display priority using the specified floating point value.\ninit(rawValue: Float)\nCreates a feature display priority using the specified raw floating point value.\nRelationships\nConforms To\nHashable\nRawRepresentable\nSendable\nSee Also\nSetting the priority for display\nvar displayPriority: MKFeatureDisplayPriority\nThe display priority of the annotation view.\nvar zPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in an unselected state with respect to its ordering along the z-axis.\nvar selectedZPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in a selected state with respect to its ordering along the z-axis.\nstruct MKAnnotationViewZPriority\nConstants that indicates the priority for ordering overlapping annotation views."
  },
  {
    "title": "MKAnnotationView.CollisionMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/collisionmode",
    "html": "Topics\nEnumeration Cases\ncase rectangle\nA constant that indicates that the annotation view uses the full collision frame rectangle for detecting collisions.\ncase circle\nA constant that indicates that the annotation view uses an inscribed circle in the collision frame rectangle to determine collisions.\ncase none\nA constant indicating that collisions can’t occur.\nRelationships\nConforms To\nSendable\nSee Also\nManaging collisions between annotation views\nvar collisionMode: MKAnnotationView.CollisionMode\nThe collision mode to use when interpreting the collision frame rectangle."
  },
  {
    "title": "pinTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview/1452042-pintintcolor",
    "html": "Discussion\n\nUse this property to specify custom a custom color for your pin. You can also specify one of the standard pin colors.\n\nSee Also\nGetting and Setting Attributes\nvar animatesDrop: Bool\nA Boolean value indicating whether the annotation view is animated onto the screen.\nDeprecated\nvar pinColor: MKPinAnnotationColor\nThe color of the pin head.\nDeprecated\nRelated Documentation\nclass func greenPinColor() -> UIColor\nReturns the standard color for green pins.\nclass func purplePinColor() -> UIColor\nReturns the standard color for purple pins.\nclass func redPinColor() -> UIColor\nReturns the standard color for red pins.\nLocation and Maps Programming Guide"
  },
  {
    "title": "purplePinColor() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview/1452110-purplepincolor",
    "html": "Return Value\n\nThe purple pin color.\n\nDiscussion\n\nThe system uses purple pins to indicate user-specified points on the map.\n\nSee Also\nGetting Standard Pin Colors\nclass func redPinColor() -> UIColor\nReturns the standard color for red pins.\nDeprecated\nclass func greenPinColor() -> UIColor\nReturns the standard color for green pins.\nDeprecated\nenum MKPinAnnotationColor\nThe supported colors for pin annotations.\nDeprecated"
  },
  {
    "title": "prepareForDisplay() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/2921514-preparefordisplay",
    "html": "Discussion\n\nUse this method to prepare the content of your annotation view.\n\nSee Also\nCreating and preparing an annotation view\ninit(annotation: MKAnnotation?, reuseIdentifier: String?)\nCreates and returns a new annotation view.\ninit?(coder: NSCoder)\nCreates an annotation view using data from the specified unarchiver.\nfunc prepareForReuse()\nCalls this method when removing the view from the reuse queue."
  },
  {
    "title": "greenPinColor() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview/1452568-greenpincolor",
    "html": "Return Value\n\nThe green pin color.\n\nDiscussion\n\nThe system uses green pins to indicate starting points on the map.\n\nSee Also\nGetting Standard Pin Colors\nclass func redPinColor() -> UIColor\nReturns the standard color for red pins.\nDeprecated\nclass func purplePinColor() -> UIColor\nReturns the standard color for purple pins.\nDeprecated\nenum MKPinAnnotationColor\nThe supported colors for pin annotations.\nDeprecated"
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1827527-init",
    "html": "Parameters\naDecoder\n\nThe unarchiver to read data from.\n\nSee Also\nCreating and preparing an annotation view\ninit(annotation: MKAnnotation?, reuseIdentifier: String?)\nCreates and returns a new annotation view.\nfunc prepareForReuse()\nCalls this method when removing the view from the reuse queue.\nfunc prepareForDisplay()\nNotifies the annotation view that the map view is about to display it."
  },
  {
    "title": "setNeedsDisplay(_:zoomScale:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452793-setneedsdisplay",
    "html": "Parameters\nmapRect\n\nThe portion of the overlay to update. Specify this value using a map coordinates.\n\nzoomScale\n\nThe zoom scale for which you want to invalidate the overlay.\n\nDiscussion\n\nMarking a rectangle as invalid causes that portion of the overlay to be redrawn during the next update cycle. This method invalidates the overlay only at the specified zoom scale.\n\nSee Also\nDrawing the overlay\nfunc canDraw(MKMapRect, zoomScale: MKZoomScale) -> Bool\nReturns a Boolean value that indicates whether the overlay view is ready to draw its content.\nfunc draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)\nDraws the overlay’s contents at the specified location on the map.\nfunc setNeedsDisplay()\nInvalidates the entire contents of the overlay for all zoom scales.\nfunc setNeedsDisplay(MKMapRect)\nInvalidates the specified portion of the overlay at all zoom scales."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotation/1429522-title",
    "html": "Discussion\n\nUse this optional property to supply a string that the annotation displays in the callout for the associated annotation view. If you specify a detailCalloutAccessoryView object, setting the title isn’t required.\n\nSee Also\nTitle attributes\nvar subtitle: String?\nThe string containing the annotation’s subtitle."
  },
  {
    "title": "physicalFeature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/featurekind/4232956-physicalfeature",
    "html": "Discussion\n\nA physical feature on Earth, such as a mountain range, river, or ocean basin.\n\nSee Also\nKinds of features\nstatic var pointOfInterest: MapFeature.FeatureKind\nA point of interest.\nstatic var territory: MapFeature.FeatureKind\nA territory or political boundary."
  },
  {
    "title": "mapView(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452311-mapview",
    "html": "Parameters\nmapView\n\nThe map view that adds the annotation views.\n\nviews\n\nAn array of MKAnnotationView objects representing the views that the map view adds.\n\nDiscussion\n\nBy the time the map view calls this method, MapKit has added the specified views to the map.\n\nSee Also\nManaging annotation views\nfunc mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?\nReturns the view associated with the specified annotation object.\nfunc mapView(MKMapView, annotationView: MKAnnotationView, calloutAccessoryControlTapped: UIControl)\nTells the delegate when the user taps one of the annotation view’s accessory buttons.\nfunc mapView(MKMapView, clusterAnnotationForMemberAnnotations: [MKAnnotation]) -> MKClusterAnnotation\nAsks the delegate to provide a cluster annotation object for the specified annotations."
  },
  {
    "title": "mapView(_:didFailToLocateUserWithError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452211-mapview",
    "html": "Parameters\nmapView\n\nThe map view that’s tracking the user’s location.\n\nerror\n\nAn error object containing the reason why location tracking fails.\n\nSee Also\nTracking the user’s location\nfunc mapViewWillStartLocatingUser(MKMapView)\nTells the delegate that the map view is about to start tracking the user’s location.\nfunc mapViewDidStopLocatingUser(MKMapView)\nTells the delegate when the map view stops tracking the user’s location.\nfunc mapView(MKMapView, didUpdate: MKUserLocation)\nTells the delegate when the map view updates the user’s location.\nfunc mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)\nTells the delegate when the user-tracking mode changes."
  },
  {
    "title": "showsTraffic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/3930239-showstraffic",
    "html": "See Also\nCustomizing the map display\nvar emphasisStyle: MKStandardMapConfiguration.EmphasisStyle\nThe value that indicates how the framework emphasizes map features.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map."
  },
  {
    "title": "init(elevationStyle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkimagerymapconfiguration/4010596-init",
    "html": "Parameters\nelevationStyle\n\nOne of the MKMapConfiguration.ElevationStyle elevation styles.\n\nSee Also\nCreating a map imagery configuration\ninit()\nCreates a new imagery based map configuration."
  },
  {
    "title": "MKStandardMapConfiguration.EmphasisStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/emphasisstyle",
    "html": "Topics\nControlling the map’s emphasis\ncase `default`\nThe default level of emphasis.\ncase muted\nThe muted level of emphasis.\nRelationships\nConforms To\nSendable\nSee Also\nCustomizing the map display\nvar emphasisStyle: MKStandardMapConfiguration.EmphasisStyle\nThe value that indicates how the framework emphasizes map features.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsTraffic: Bool\nA Boolean value that controls whether the map displays traffic conditions."
  },
  {
    "title": "MKDistanceFormatter.DistanceUnitStyle.abbreviated | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/distanceunitstyle/abbreviated",
    "html": "Discussion\n\nFor example, if the units are metric the map displays “km” instead of “kilometer.”"
  },
  {
    "title": "mapViewDidStopLocatingUser(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452715-mapviewdidstoplocatinguser",
    "html": "Parameters\nmapView\n\nThe map view that stops tracking the user’s location.\n\nDiscussion\n\nThe map view calls this method when the value of the showsUserLocation property changes to false.\n\nSee Also\nTracking the user’s location\nfunc mapViewWillStartLocatingUser(MKMapView)\nTells the delegate that the map view is about to start tracking the user’s location.\nfunc mapView(MKMapView, didUpdate: MKUserLocation)\nTells the delegate when the map view updates the user’s location.\nfunc mapView(MKMapView, didFailToLocateUserWithError: Error)\nTells the delegate when an attempt to locate the user’s location fails.\nfunc mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)\nTells the delegate when the user-tracking mode changes."
  },
  {
    "title": "mapViewWillStartLocatingUser(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452171-mapviewwillstartlocatinguser",
    "html": "Parameters\nmapView\n\nThe map view that’s tracking the user’s location.\n\nDiscussion\n\nThe map view calls this method when the value of the showsUserLocation property changes to true.\n\nSee Also\nTracking the user’s location\nfunc mapViewDidStopLocatingUser(MKMapView)\nTells the delegate when the map view stops tracking the user’s location.\nfunc mapView(MKMapView, didUpdate: MKUserLocation)\nTells the delegate when the map view updates the user’s location.\nfunc mapView(MKMapView, didFailToLocateUserWithError: Error)\nTells the delegate when an attempt to locate the user’s location fails.\nfunc mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)\nTells the delegate when the user-tracking mode changes."
  },
  {
    "title": "mapViewDidFinishRenderingMap(_:fullyRendered:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1451897-mapviewdidfinishrenderingmap",
    "html": "Parameters\nmapView\n\nThe map view rendering its tiles.\n\nfullyRendered\n\nThis parameter is true if the map view is able to render all tiles completely, or false if errors prevent the map view from rendering all tiles.\n\nDiscussion\n\nThis method lets you know when the map view finishes rendering all of the currently visible tiles to the best of its ability. The map view calls this method regardless of whether the view renders all tiles successfully. If there are errors loading one or more tiles that prevent the map view from rendering them, MapKit sets the fullyRendered parameter to false.\n\nSee Also\nLoading the map data\nfunc mapViewWillStartLoadingMap(MKMapView)\nTells the delegate that the specified map view is about to retrieve some map data.\nfunc mapViewDidFinishLoadingMap(MKMapView)\nTells the delegate when the specified map view successfully loads the needed map data.\nfunc mapViewDidFailLoadingMap(MKMapView, withError: Error)\nTells the delegate that the specified view is unable to load the map data.\nfunc mapViewWillStartRenderingMap(MKMapView)\nTells the delegate that the map view is about to start rendering some of its tiles."
  },
  {
    "title": "mapViewWillStartRenderingMap(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1451970-mapviewwillstartrenderingmap",
    "html": "Parameters\nmapView\n\nThe map view that’s about to start rendering.\n\nDiscussion\n\nThe map view calls this method when the map reveals one or more tiles that require rendering.\n\nSee Also\nLoading the map data\nfunc mapViewWillStartLoadingMap(MKMapView)\nTells the delegate that the specified map view is about to retrieve some map data.\nfunc mapViewDidFinishLoadingMap(MKMapView)\nTells the delegate when the specified map view successfully loads the needed map data.\nfunc mapViewDidFailLoadingMap(MKMapView, withError: Error)\nTells the delegate that the specified view is unable to load the map data.\nfunc mapViewDidFinishRenderingMap(MKMapView, fullyRendered: Bool)\nTells the delegate when the map view finishes rendering all visible tiles."
  },
  {
    "title": "mapViewDidFailLoadingMap(_:withError:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452327-mapviewdidfailloadingmap",
    "html": "Parameters\nmapView\n\nThe map view that starts the load operation.\n\nerror\n\nThe reason that the map view can’t load the map data.\n\nDiscussion\n\nThe map view might call this method in situations where the device doesn’t have access to the network or is unable to load the map data for some reason. The map view may also call this method if a request for additional map tiles comes in while a previous request for tiles is pending. You can use this message to notify the user that the map data is unavailable.\n\nSee Also\nLoading the map data\nfunc mapViewWillStartLoadingMap(MKMapView)\nTells the delegate that the specified map view is about to retrieve some map data.\nfunc mapViewDidFinishLoadingMap(MKMapView)\nTells the delegate when the specified map view successfully loads the needed map data.\nfunc mapViewWillStartRenderingMap(MKMapView)\nTells the delegate that the map view is about to start rendering some of its tiles.\nfunc mapViewDidFinishRenderingMap(MKMapView, fullyRendered: Bool)\nTells the delegate when the map view finishes rendering all visible tiles."
  },
  {
    "title": "mapViewDidFinishLoadingMap(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452291-mapviewdidfinishloadingmap",
    "html": "Parameters\nmapView\n\nThe map view that starts the load operation.\n\nDiscussion\n\nThe map view calls this method when it finishes reloading the map tiles associated with the current request. The map view requests map tiles when a new visible area scrolls into view and tiles aren’t already available. The map may also request map tiles for portions of the map that aren’t currently visible. For example, the map view may load tiles immediately surrounding the currently visible area as needed to handle small pans by the user.\n\nSee Also\nLoading the map data\nfunc mapViewWillStartLoadingMap(MKMapView)\nTells the delegate that the specified map view is about to retrieve some map data.\nfunc mapViewDidFailLoadingMap(MKMapView, withError: Error)\nTells the delegate that the specified view is unable to load the map data.\nfunc mapViewWillStartRenderingMap(MKMapView)\nTells the delegate that the map view is about to start rendering some of its tiles.\nfunc mapViewDidFinishRenderingMap(MKMapView, fullyRendered: Bool)\nTells the delegate when the map view finishes rendering all visible tiles."
  },
  {
    "title": "mapViewWillStartLoadingMap(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452744-mapviewwillstartloadingmap",
    "html": "Parameters\nmapView\n\nThe map view that begins loading the data.\n\nDiscussion\n\nThe map view calls this method whenever it needs to download a new group of map tiles from the server. This typically occurs whenever you expose portions of the map by panning or zooming the content. You can use this method to mark the time that it takes for the map view to load the data.\n\nSee Also\nLoading the map data\nfunc mapViewDidFinishLoadingMap(MKMapView)\nTells the delegate when the specified map view successfully loads the needed map data.\nfunc mapViewDidFailLoadingMap(MKMapView, withError: Error)\nTells the delegate that the specified view is unable to load the map data.\nfunc mapViewWillStartRenderingMap(MKMapView)\nTells the delegate that the map view is about to start rendering some of its tiles.\nfunc mapViewDidFinishRenderingMap(MKMapView, fullyRendered: Bool)\nTells the delegate when the map view finishes rendering all visible tiles."
  },
  {
    "title": "mapViewDidChangeVisibleRegion(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/2998428-mapviewdidchangevisibleregion",
    "html": "Parameters\nmapView\n\nThe map view with the visible region that changes.\n\nDiscussion\n\nUse this method to update the map in response to intermediate changes to the region. The map view calls this method each time the value of its visible region changes.\n\nImportant\n\nBecause the map may call this method many times during the scrolling of the map, your implementation needs to be lightweight. Use this method to record the new region values or to make fast updates to your app’s interface. Don’t start any long-running synchronous tasks in this method.\n\nSee Also\nResponding to map position changes\nfunc mapView(MKMapView, regionWillChangeAnimated: Bool)\nTells the delegate when the region the map view is displaying is about to change.\nfunc mapView(MKMapView, regionDidChangeAnimated: Bool)\nTells the delegate when the region the map view is displaying changes."
  },
  {
    "title": "showsTraffic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkhybridmapconfiguration/3930222-showstraffic",
    "html": "See Also\nControlling what the map displays\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter the framework uses to determine the points of interest to show on the map."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/cameraboundary/3141912-region",
    "html": "Discussion\n\nBoth the mapRect and the region represent the same camera boundary.\n\nSee Also\nAccessing the boundary\nvar mapRect: MKMapRect\nThe map rectangle that describes the camera boundary."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkhybridmapconfiguration/3930221-pointofinterestfilter",
    "html": "See Also\nControlling what the map displays\nvar showsTraffic: Bool\nA Boolean value that indicates whether the maps shows traffic conditions."
  },
  {
    "title": "init(elevationStyle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkhybridmapconfiguration/4010595-init",
    "html": "Parameters\nelevationStyle\n\nOne of the MKMapConfiguration.ElevationStyle elevation styles.\n\nSee Also\nCreating a hybrid map configuration\ninit()\nCreates a new hybrid map configuration.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style."
  },
  {
    "title": "MKOverlayLevel.aboveRoads | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaylevel/aboveroads",
    "html": "Discussion\n\nMKMapView displays graphics in layers. The value MKOverlayLevel.aboveRoads places a layer in the map view above roadways but below map labels."
  },
  {
    "title": "MKOverlayLevel.aboveLabels | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaylevel/abovelabels",
    "html": "Discussion\n\nMKMapView displays graphics in layers. The value MKOverlayLevel.aboveLabels places a layer in the map view above roadways and map labels."
  },
  {
    "title": "mapView(_:didUpdate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452086-mapview",
    "html": "Parameters\nmapView\n\nThe map view that’s tracking the user’s location.\n\nuserLocation\n\nThe location object representing the user’s latest location. This property may be nil.\n\nDiscussion\n\nWhile the showsUserLocation property is true, the map view calls this method whenever it receives a new location update. It also calls this method if the map view’s user-tracking mode is MKUserTrackingMode.followWithHeading and the heading changes.\n\nThe.map view doesn’t call this method if the app is running in the background. If you want to receive location updates while running in the background, use the Core Location framework.\n\nSee Also\nTracking the user’s location\nfunc mapViewWillStartLocatingUser(MKMapView)\nTells the delegate that the map view is about to start tracking the user’s location.\nfunc mapViewDidStopLocatingUser(MKMapView)\nTells the delegate when the map view stops tracking the user’s location.\nfunc mapView(MKMapView, didFailToLocateUserWithError: Error)\nTells the delegate when an attempt to locate the user’s location fails.\nfunc mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)\nTells the delegate when the user-tracking mode changes."
  },
  {
    "title": "heading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocation/1452721-heading",
    "html": "Discussion\n\nThis property is nil if the user’s location tracking mode isn’t MKUserTrackingMode.followWithHeading.\n\nSee Also\nDetermining the user’s location\nvar location: CLLocation?\nThe location of the device.\nvar isUpdating: Bool\nA Boolean value that indicates whether the map view is updating the user’s location."
  },
  {
    "title": "elevationStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapconfiguration/4010597-elevationstyle",
    "html": "See Also\nControlling the elevation style\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style."
  },
  {
    "title": "rect(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452738-rect",
    "html": "Parameters\nmapRect\n\nA rectangle on the two-dimensional map projection.\n\nReturn Value\n\nThe rectangle in the overlay’s drawing area that corresponds to the map rectangle.\n\nDiscussion\n\nYou may call this method safely from your view’s draw(_:zoomScale:in:) method.\n\nSee Also\nConverting points on the map\nfunc point(for: MKMapPoint) -> CGPoint\nReturns the point in the overlay renderer’s drawing area corresponding to the specified point on the map.\nfunc mapPoint(for: CGPoint) -> MKMapPoint\nReturns the point on the map that corresponds to the specified point in the overlay renderer’s drawing area.\nfunc mapRect(for: CGRect) -> MKMapRect\nReturns the rectangle on the map that corresponds to the specified rectangle in the overlay renderer’s drawing area."
  },
  {
    "title": "MKDistanceFormatter.Units.default | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/units/default",
    "html": "Discussion\n\nSome locales mix metric and imperial units so don’t assume this means one or the other."
  },
  {
    "title": "canDraw(_:zoomScale:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1451891-candraw",
    "html": "Parameters\nmapRect\n\nThe map rectangle that the renderer needs to update.\n\nzoomScale\n\nThe current scale factor applied to the map.\n\nReturn Value\n\ntrue if this overlay renderer is ready to draw its contents on the map or false if it is not.\n\nDiscussion\n\nOverlay renderers can override this method in situations where they may depend on the availability of other information to draw their contents. For example, a renderer showing traffic information might want to delay drawing until it has all of the traffic data it needs. In such a case, it can return false from this method to indicate that it’s not ready. An overlay renderer might also return false if it doesn’t draw content in the specified rectangle.\n\nIf you return false from this method, your application is responsible for calling the setNeedsDisplay(_:zoomScale:) method when the overlay renderer subsequently becomes ready to draw its contents.\n\nThe default implementation of this method returns true.\n\nSee Also\nDrawing the overlay\nfunc draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)\nDraws the overlay’s contents at the specified location on the map.\nfunc setNeedsDisplay()\nInvalidates the entire contents of the overlay for all zoom scales.\nfunc setNeedsDisplay(MKMapRect)\nInvalidates the specified portion of the overlay at all zoom scales.\nfunc setNeedsDisplay(MKMapRect, zoomScale: MKZoomScale)\nInvalidates the specified portion of the overlay, but only at the specified zoom scale."
  },
  {
    "title": "mapRect(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452680-maprect",
    "html": "Parameters\nrect\n\nThe rectangle in the overlay’s drawing area that you want to convert.\n\nReturn Value\n\nThe rectangle on the two-dimensional map projection corresponding to the specified rectangle.\n\nDiscussion\n\nYou may call this method safely from your view’s draw(_:zoomScale:in:) method.\n\nSee Also\nConverting points on the map\nfunc point(for: MKMapPoint) -> CGPoint\nReturns the point in the overlay renderer’s drawing area corresponding to the specified point on the map.\nfunc mapPoint(for: CGPoint) -> MKMapPoint\nReturns the point on the map that corresponds to the specified point in the overlay renderer’s drawing area.\nfunc rect(for: MKMapRect) -> CGRect\nReturns the rectangle in the overlay renderer’s drawing area corresponding to the specified rectangle on the map."
  },
  {
    "title": "dragState | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/1451941-dragstate",
    "html": "Discussion\n\nIf your app runs in iOS 4.2 or later, override the setDragState(_:animated:) method and use it to manage the drag state instead.\n\nTo support drag operations, override the implementation of this property and update the drag state at the following times:\n\nWhen the drag state changes to MKAnnotationView.DragState.starting, set the state to MKAnnotationView.DragState.dragging. If you perform an animation to indicate the beginning of a drag, perform that animation before changing the state. Changing the state to the new value lets the map know when your animations complete.\n\nWhen the state changes to either MKAnnotationView.DragState.canceling or MKAnnotationView.DragState.ending, set the state to MKAnnotationView.DragState.none. If you perform an animation at the end of a drag, perform that animation before changing the state.\n\nChanging the state to the MKAnnotationView.DragState.dragging or MKAnnotationView.DragState.none value is the way to signal to the map view when you finish performing animations. For example, when a drag operation begins for an annotation, the class executes an animation to lift the view off the map. Similarly, when the user drops the annotation, the class performs a drop animation. Even if you don’t perform any animations, it’s best practice to change the value of this property to reflect the correct state.\n\nDon’t try to stop a new drag operation by changing the state from MKAnnotationView.DragState.starting to MKAnnotationView.DragState.none. If you don’t want your annotation view to be draggable, set the isDraggable property to false.\n\nSee Also\nSupporting drag operations\nvar isDraggable: Bool\nA Boolean value that indicates whether the annotation view is draggable.\nfunc setDragState(MKAnnotationView.DragState, animated: Bool)\nSets the drag state for the annotation view."
  },
  {
    "title": "defaultLow | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturedisplaypriority/2867295-defaultlow",
    "html": "Discussion\n\nAn annotation view with this priority is removed from the map when its bounds collide with the bounds of another view with a higher priority. If the priorities of the two views are equal, the view furthest from the center of the map's visible region is hidden first.\n\nSee Also\nPriorities\nstatic let required: MKFeatureDisplayPriority\nA constant indicating that the item is required.\nstatic let defaultHigh: MKFeatureDisplayPriority\nA constant indicating that the item's display priority is high."
  },
  {
    "title": "displayPriority | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/2867298-displaypriority",
    "html": "Discussion\n\nAn annotation view with a priority of required is always visible on the map, whereas other priorities may result in a hidden annotation view. Defaults to required.\n\nSee Also\nSetting the priority for display\nstruct MKFeatureDisplayPriority\nConstants that indicates the display priority for annotations.\nvar zPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in an unselected state with respect to its ordering along the z-axis.\nvar selectedZPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in a selected state with respect to its ordering along the z-axis.\nstruct MKAnnotationViewZPriority\nConstants that indicates the priority for ordering overlapping annotation views."
  },
  {
    "title": "markerTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873822-markertintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which applies the standard color that’s appropriate for the current map style."
  },
  {
    "title": "glyphText | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873817-glyphtext",
    "html": "Discussion\n\nUse this property or the glyphText property to specify the marker balloon content. If you specify both an image and text, MapKit displays the text.\n\nMapKit limits the amount of space available for displaying your glyph text. Specify no more than two or three characters for any strings you assign to this property.\n\nSee Also\nSetting the Marker Content\nvar glyphImage: UIImage?\nAn image to display in the marker balloon.\nvar glyphTintColor: UIColor?\nThe color to apply to the glyph text or image.\nvar selectedGlyphImage: UIImage?\nAn image to display when the user selects the marker."
  },
  {
    "title": "glyphTintColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873824-glyphtintcolor",
    "html": "Discussion\n\nThe default value of this property is nil, which applies the standard tint color for the current map style.\n\nSee Also\nSetting the Marker Content\nvar glyphText: String?\nThe text to display in the marker balloon.\nvar glyphImage: UIImage?\nAn image to display in the marker balloon.\nvar selectedGlyphImage: UIImage?\nAn image to display when the user selects the marker."
  },
  {
    "title": "selectedGlyphImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873815-selectedglyphimage",
    "html": "Discussion\n\nMapKit displays the glyph image when the marker is in the selected state. If you specify an image for this property, you should also specify an image in the glyphImage property.\n\nCreate glyph images as template images so that MapKit can apply the glyph tint color to the image. Set the size of this image to 40 by 40 points on iOS and 60 by 40 points on tvOS. MapKit scales images that are larger or smaller than those sizes.\n\nSee Also\nSetting the Marker Content\nvar glyphText: String?\nThe text to display in the marker balloon.\nvar glyphImage: UIImage?\nAn image to display in the marker balloon.\nvar glyphTintColor: UIColor?\nThe color to apply to the glyph text or image."
  },
  {
    "title": "subtitleVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873813-subtitlevisibility",
    "html": "Discussion\n\nMapKit shows the text when the user selects a marker.\n\nSee Also\nSetting the Visibility\nvar titleVisibility: MKFeatureVisibility\nThe visibility of the title text rendered beneath the marker balloon.\nenum MKFeatureVisibility\nConstants that indicate the visibility of different map features."
  },
  {
    "title": "glyphImage | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873823-glyphimage",
    "html": "Discussion\n\nUse this property or the glyphText property to specify the marker balloon content. If you specify both an image and text, MapKit displays the text.\n\nMapKit displays the glyph image when the marker is in the normal state. Create glyph images as template images so that MapKit can apply the glyph tint color to the image. Normally, you set the size of this image to 20 by 20 points on iOS and 40 by 40 points on tvOS. However, if you don’t provide a separate selected image in the selectedGlyphImage property, make the size of this image 40 by 40 points on iOS and 60 by 40 points on tvOS instead. MapKit scales images that are larger or smaller than those sizes.\n\nSee Also\nSetting the Marker Content\nvar glyphText: String?\nThe text to display in the marker balloon.\nvar glyphTintColor: UIColor?\nThe color to apply to the glyph text or image.\nvar selectedGlyphImage: UIImage?\nAn image to display when the user selects the marker."
  },
  {
    "title": "mapView(_:didDeselect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452707-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the annotation view.\n\nview\n\nThe deselected annotation view.\n\nDiscussion\n\nYou can use this method to track changes in the selection state of annotation views.\n\nSee Also\nSelecting annotations and annotations views\nfunc mapView(MKMapView, didSelect: MKAnnotationView)\nTells the delegate when the user selects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotation)\nTells the delegate when the user deselects one or more annotations.\nfunc mapView(MKMapView, didSelect: MKAnnotation)\nTells the delegate when the user selects one or more annotations."
  },
  {
    "title": "animatesWhenAdded | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873821-animateswhenadded",
    "html": "Discussion\n\nThe default value of this property is false."
  },
  {
    "title": "titleVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview/2873816-titlevisibility",
    "html": "See Also\nSetting the Visibility\nvar subtitleVisibility: MKFeatureVisibility\nThe visibility of the subtitle text rendered beneath the marker balloon.\nenum MKFeatureVisibility\nConstants that indicate the visibility of different map features."
  },
  {
    "title": "mapView(_:didSelect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/3975752-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the annotation view.\n\nannotation\n\nThe selected annotation view.\n\nSee Also\nSelecting annotations and annotations views\nfunc mapView(MKMapView, didSelect: MKAnnotationView)\nTells the delegate when the user selects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotationView)\nTells the delegate when the user deselects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotation)\nTells the delegate when the user deselects one or more annotations."
  },
  {
    "title": "mapView(_:didAdd:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452609-mapview",
    "html": "Parameters\nmapView\n\nThe map view that adds the renderer objects.\n\nrenderers\n\nThe renderer objects that the map view adds.\n\nDiscussion\n\nThe map view adds renderer objects when it needs them to draw their contents, which might be prior to those contents appearing onscreen. It calls this method to let you know that the renderer is active and in use. By the time the map view calls this method, it has already added specified renderers to the map.\n\nSee Also\nManaging the display of overlays\nfunc mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer\nAsks the delegate for a renderer object to use when drawing the specified overlay.\nfunc mapView(MKMapView, viewFor: MKOverlay) -> MKOverlayView\nAsks the delegate for the overlay view to use when displaying the specified overlay object.\nDeprecated\nfunc mapView(MKMapView, didAddOverlayViews: [Any])\nTells the delegate when the map adds one or more overlay views to the map.\nDeprecated"
  },
  {
    "title": "mapView(_:didSelect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452393-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the annotation view.\n\nview\n\nThe selected annotation view.\n\nDiscussion\n\nYou can use this method to track changes in the selection state of annotation views.\n\nSee Also\nSelecting annotations and annotations views\nfunc mapView(MKMapView, didDeselect: MKAnnotationView)\nTells the delegate when the user deselects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotation)\nTells the delegate when the user deselects one or more annotations.\nfunc mapView(MKMapView, didSelect: MKAnnotation)\nTells the delegate when the user selects one or more annotations."
  },
  {
    "title": "mapView(_:didDeselect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/3975751-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the annotation view.\n\nannotation\n\nThe deselected annotation view.\n\nSee Also\nSelecting annotations and annotations views\nfunc mapView(MKMapView, didSelect: MKAnnotationView)\nTells the delegate when the user selects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotationView)\nTells the delegate when the user deselects one or more of its annotation views.\nfunc mapView(MKMapView, didSelect: MKAnnotation)\nTells the delegate when the user selects one or more annotations."
  },
  {
    "title": "mapView(_:annotationView:didChange:fromOldState:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452229-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the annotation view.\n\nannotationView\n\nThe annotation view whose drag state changed.\n\nnewState\n\nThe new drag state of the annotation view.\n\noldState\n\nThe previous drag state of the annotation view.\n\nDiscussion\n\nThe drag state typically changes in response to user interactions with the annotation view. However, the annotation view itself is responsible for changing that state as well."
  },
  {
    "title": "isDisjoint(with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601309-isdisjoint",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nReturn Value\n\ntrue if the set has no elements in common with other; otherwise, false.\n\nDiscussion\n\nIn the following example, the employees set is disjoint with the visitors set because no name appears in both sets.\n\nlet employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet visitors: Set = [\"Marcia\", \"Nathaniel\", \"Olivia\"]\nprint(employees.isDisjoint(with: visitors))\n// Prints \"true\"\n\nSee Also\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set."
  },
  {
    "title": "formUnion(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601298-formunion",
    "html": "Parameters\nother\n\nAn option set.\n\nDiscussion\n\nThis method is implemented as a | (bitwise OR) operation on the two sets’ raw values.\n\nSee Also\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set."
  },
  {
    "title": "remove(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601322-remove",
    "html": "Parameters\nmember\n\nThe element of the set to remove.\n\nReturn Value\n\nThe intersection of [member] and the set, if the intersection was nonempty; otherwise, nil.\n\nDiscussion\n\nIn the following example, the .priority shipping option is removed from the options option set. Attempting to remove the same shipping option a second time results in nil, because options no longer contains .priority as a member.\n\nvar options: ShippingOptions = [.secondDay, .priority]\nlet priorityOption = options.remove(.priority)\nprint(priorityOption == .priority)\n// Prints \"true\"\n\n\nprint(options.remove(.priority))\n// Prints \"nil\"\n\n\nIn the next example, the .express element is passed to remove(_:). Although .express is not a member of options, .express subsumes the remaining .secondDay element of the option set. Therefore, options is emptied and the intersection between .express and options is returned.\n\nlet expressOption = options.remove(.express)\nprint(expressOption == .express)\n// Prints \"false\"\nprint(expressOption == .secondDay)\n// Prints \"true\"\n\nSee Also\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set."
  },
  {
    "title": "init(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/3601277-init",
    "html": "Deprecated\n\nUse Map initializers that take a MapContentBuilder instead.\n\nParameters\ncoordinateRegion\n\nA binding to a region that corresponds to an area to display on the map.\n\ninteractionModes\n\nAn enumeration that indicates the user interactions to which the map responds.\n\nshowsUserLocation\n\nA Boolean value that indicates the option to display a person’s location on a map. The map displays the location only if they authorized the app to access their location.\n\nuserTrackingMode\n\nA binding to a tracking mode that determines how the map responds to location updates."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601299-init",
    "html": "Discussion\n\nThis initializer creates an option set with a raw value of zero.\n\nSee Also\nCreating interaction modes\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction."
  },
  {
    "title": "pan | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601320-pan",
    "html": "See Also\nDeclared interaction modes\nstatic let all: MapInteractionModes\nThe map allows all interaction modes.\nstatic let zoom: MapInteractionModes\nThe map allows people to zoom in or out on map locations.\nstatic let pitch: MapInteractionModes\nThe map allows people to set the map’s pitch to view the map from different angles.\nstatic let rotate: MapInteractionModes\nThe map allows people to rotate the map."
  },
  {
    "title": "MKRoadWidthAtZoomScale(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452156-mkroadwidthatzoomscale",
    "html": "Parameters\nzoomScale\n\nThe scale factor currently applied to the map view.\n\nReturn Value\n\nThe width of roads, measured in screen points. You can use the returned value to set the width of lines in drawing code that traces the path of a road.\n\nSee Also\nTypes\ntypealias MKZoomScale\nA scale factor to use in conjunction with a map."
  },
  {
    "title": "MKZoomScale | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkzoomscale",
    "html": "See Also\nTypes\nfunc MKRoadWidthAtZoomScale(MKZoomScale) -> CGFloat\nReturns the width (in screen points) of roads on a map at the specified zoom level."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601300-init",
    "html": "Parameters\nsequence\n\nThe elements to use as members of the new set.\n\nDiscussion\n\nUse this initializer to create a new set from an existing sequence, like an array or a range:\n\nlet validIndices = Set(0..<7).subtracting([2, 4, 5])\nprint(validIndices)\n// Prints \"[6, 0, 1, 3]\"\n\nSee Also\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotation/1429524-coordinate",
    "html": "Required\n\nDiscussion\n\nYour implementation of this property must be key-value observing (KVO) compliant. For more information on how to implement support for KVO, see Key-Value Observing Programming Guide.\n\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlay/1452113-coordinate",
    "html": "Required\n\nDiscussion\n\nThis point is typically set to the center point of the map’s bounding rectangle. The overlay uses it as the anchor point for any callouts that display for the annotation.\n\nSee Also\nDescribing the overlay geometry\nvar boundingMapRect: MKMapRect\nThe projected rectangle that encompasses the overlay.\n\nRequired\n\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/standardemphasis/4234782-automatic",
    "html": "See Also\nControlling the map’s emphasis\nstatic var muted: MapStyle.StandardEmphasis\nA muted emphasis style, that deemphasizes the map’s imagery."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/3930237-pointofinterestfilter",
    "html": "See Also\nCustomizing the map display\nvar emphasisStyle: MKStandardMapConfiguration.EmphasisStyle\nThe value that indicates how the framework emphasizes map features.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features.\nvar showsTraffic: Bool\nA Boolean value that controls whether the map displays traffic conditions."
  },
  {
    "title": "emphasisStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/4018382-emphasisstyle",
    "html": "See Also\nCustomizing the map display\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsTraffic: Bool\nA Boolean value that controls whether the map displays traffic conditions."
  },
  {
    "title": "MKMapConfiguration.ElevationStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapconfiguration/elevationstyle",
    "html": "Topics\nConstants\ncase flat\nThe value that represents the flat map elevation style.\ncase realistic\nThe value that represents a map elevation style with realistic ground contours.\nRelationships\nConforms To\nSendable\nSee Also\nControlling the elevation style\nvar elevationStyle: MKMapConfiguration.ElevationStyle\nThe value that indicates the map’s elevation style."
  },
  {
    "title": "pointOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/featurekind/4232957-pointofinterest",
    "html": "Discussion\n\nA point of interest, such as a museum, café, park, or school.\n\nSee Also\nKinds of features\nstatic var physicalFeature: MapFeature.FeatureKind\nA physical map feature.\nstatic var territory: MapFeature.FeatureKind\nA territory or political boundary."
  },
  {
    "title": "init(emphasisStyle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/4018384-init",
    "html": "Parameters\nemphasisStyle\n\nOne of the MKStandardMapConfiguration.EmphasisStyle styles.\n\nSee Also\nCreating a standard map configuration\ninit()\nCreates a new standard map configuration.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new standard map configuration with the specified elevation style.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle, emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified elevation and emphasis styles.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "territory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/featurekind/4232958-territory",
    "html": "Discussion\n\nA territorial or regional boundary, such as a national border, a state boundary, or a neighborhood.\n\nSee Also\nKinds of features\nstatic var physicalFeature: MapFeature.FeatureKind\nA physical map feature.\nstatic var pointOfInterest: MapFeature.FeatureKind\nA point of interest."
  },
  {
    "title": "mapView(_:clusterAnnotationForMemberAnnotations:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/2867923-mapview",
    "html": "Parameters\nmapView\n\nThe map view containing the specified annotations.\n\nmemberAnnotations\n\nThe annotations for the map to cluster together. The returned MKClusterAnnotation object needs to include the specific annotations in this parameter.\n\nReturn Value\n\nThe cluster annotation object.\n\nDiscussion\n\nUse this method to customize the cluster annotations that display on your map. Typically, MapKit creates cluster annotation objects automatically when one or more annotations with the same cluster identifier are too close together. However, you can implement this method and return a custom cluster annotation object for the specified set of annotations.\n\nSee Also\nManaging annotation views\nfunc mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?\nReturns the view associated with the specified annotation object.\nfunc mapView(MKMapView, didAdd: [MKAnnotationView])\nTells the delegate when the map view adds one or more annotation views to the map.\nfunc mapView(MKMapView, annotationView: MKAnnotationView, calloutAccessoryControlTapped: UIControl)\nTells the delegate when the user taps one of the annotation view’s accessory buttons."
  },
  {
    "title": "init(elevationStyle:emphasisStyle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/4018383-init",
    "html": "Parameters\nelevationStyle\n\nOne of the MKMapConfiguration.ElevationStyle modes.\n\nemphasisStyle\n\nOne of the MKStandardMapConfiguration.EmphasisStyle styles.\n\nSee Also\nCreating a standard map configuration\ninit()\nCreates a new standard map configuration.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new standard map configuration with the specified elevation style.\ninit(emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified emphasis style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "init(elevationStyle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/4010602-init",
    "html": "Parameters\nelevationStyle\n\nOne of the MKMapConfiguration.ElevationStyle modes.\n\nSee Also\nCreating a standard map configuration\ninit()\nCreates a new standard map configuration.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle, emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified elevation and emphasis styles.\ninit(emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified emphasis style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkimagerymapconfiguration/3930224-init",
    "html": "See Also\nCreating a map imagery configuration\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new imagery based map configuration with the specified elevation style."
  },
  {
    "title": "MKDistanceFormatter.DistanceUnitStyle.full | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/distanceunitstyle/full",
    "html": "Discussion\n\nFor example, your map displays “kilometer” instead of the abbreviation “km.”"
  },
  {
    "title": "location | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userlocation/4235447-location",
    "html": "See Also\nAccessing the user’s location and heading\nvar heading: CLHeading?\nA value that indicates the heading of the person’s device."
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/cameraboundary/3141908-init",
    "html": "Parameters\ncoder\n\nThe decoder to use during initialization.\n\nSee Also\nCreating a camera boundary\ninit?(coordinateRegion: MKCoordinateRegion)\nCreates a camera boundary using the provided coordinate region.\ninit?(mapRect: MKMapRect)\nCreates a camera boundary using the provided map rectangle."
  },
  {
    "title": "mapPoint(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452670-mappoint",
    "html": "Parameters\npoint\n\nThe point in the overlay’s drawing area that you want to convert.\n\nReturn Value\n\nThe point on the two-dimensional map projection corresponding to the specified point.\n\nDiscussion\n\nYou may call this method safely from your view’s draw(_:zoomScale:in:) method.\n\nSee Also\nConverting points on the map\nfunc point(for: MKMapPoint) -> CGPoint\nReturns the point in the overlay renderer’s drawing area corresponding to the specified point on the map.\nfunc rect(for: MKMapRect) -> CGRect\nReturns the rectangle in the overlay renderer’s drawing area corresponding to the specified rectangle on the map.\nfunc mapRect(for: CGRect) -> MKMapRect\nReturns the rectangle on the map that corresponds to the specified rectangle in the overlay renderer’s drawing area."
  },
  {
    "title": "init(mapRect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/cameraboundary/3141910-init",
    "html": "Parameters\nmapRect\n\nThe MKMapRect that describes the camera boundary.\n\nSee Also\nCreating a camera boundary\ninit?(coder: NSCoder)\nCreates a camera boundary using the provided coder.\ninit?(coordinateRegion: MKCoordinateRegion)\nCreates a camera boundary using the provided coordinate region."
  },
  {
    "title": "init(coordinateRegion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/cameraboundary/3141909-init",
    "html": "Parameters\nregion\n\nThe MKCoordinateRegion region that describes the camera boundary.\n\nSee Also\nCreating a camera boundary\ninit?(coder: NSCoder)\nCreates a camera boundary using the provided coder.\ninit?(mapRect: MKMapRect)\nCreates a camera boundary using the provided map rectangle."
  },
  {
    "title": "mapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/cameraboundary/3141911-maprect",
    "html": "Discussion\n\nBoth the mapRect and the region represent the same camera boundary.\n\nSee Also\nAccessing the boundary\nvar region: MKCoordinateRegion\nThe coordinate region that describes the camera boundary."
  },
  {
    "title": "init(overlay:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1451915-init",
    "html": "Parameters\noverlay\n\nThe overlay object to use when drawing the overlay content on the map. This object provides the data needed to draw the overlay’s shape. The overlay renderer stores a strong reference to this object.\n\nReturn Value\n\nAn initialized overlay renderer object.\n\nDiscussion\n\nInitially, the overlay renderer assumes that the overlay is fully opaque and that it has a content scale factor of 1.0. You can change these values as needed using the alpha and contentScaleFactor properties."
  },
  {
    "title": "overlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452307-overlay",
    "html": "Discussion\n\nThe overlay object contains the coordinate at which to draw the overlay and other information that your app provides.\n\nSee Also\nAttributes of the overlay\nvar alpha: CGFloat\nThe amount of transparency to apply to the overlay.\nvar contentScaleFactor: CGFloat\nThe scale factor for drawing the overlay’s content.\nvar blendMode: CGBlendMode\nThe blend mode to apply to the overlay."
  },
  {
    "title": "alpha | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452699-alpha",
    "html": "Discussion\n\nThe value in this property can be in the range 0.0 to 1.0, where 0.0 represents total transparency and 1.0 represents total opacity. The default value of this property is 1.0.\n\nSee Also\nAttributes of the overlay\nvar overlay: MKOverlay\nThe overlay object containing the data for drawing.\nvar contentScaleFactor: CGFloat\nThe scale factor for drawing the overlay’s content.\nvar blendMode: CGBlendMode\nThe blend mode to apply to the overlay."
  },
  {
    "title": "blendMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/3941884-blendmode",
    "html": "Discussion\n\nChoose the blend mode from one of the possible CGBlendMode enumerations.\n\nSee Also\nAttributes of the overlay\nvar overlay: MKOverlay\nThe overlay object containing the data for drawing.\nvar alpha: CGFloat\nThe amount of transparency to apply to the overlay.\nvar contentScaleFactor: CGFloat\nThe scale factor for drawing the overlay’s content."
  },
  {
    "title": "canReplaceMapContent() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlay/1452399-canreplacemapcontent",
    "html": "Return Value\n\ntrue if the map view can skip the loading and drawing of the underlying map tiles, or false if the map view needs to draw the tiles.\n\nDiscussion\n\nThe map view uses the return value of this method as a hint to determine whether it loads and renders its tiles. If your overlay covers its designated region entirely with opaque content, and effectively replaces the content of underlying map tiles, implement this method and return true. Doing so alleviates the need for the map to render its tiles.\n\nIf you don’t implement this method, or if you return false from it, the map view continues to load and render its tiles."
  },
  {
    "title": "intersects(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlay/1452138-intersects",
    "html": "Parameters\nmapRect\n\nThe rectangle to intersect with the overlay’s area.\n\nReturn Value\n\ntrue if any part of the map rectangle intersects the receiver’s shape, or false if it doesn’t.\n\nDiscussion\n\nYou can implement this method to provide more specific bounds-checking for an overlay. If you don’t implement it, the method uses the bounding rectangle to detect intersections."
  },
  {
    "title": "draw(_:zoomScale:in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452184-draw",
    "html": "Parameters\nmapRect\n\nThe map rectangle that the renderer needs to update. Your drawing code needs to avoid drawing outside of this rectangle.\n\nzoomScale\n\nThe zoom factor to apply to the map content. You can use this value for configuring the stroke width of lines or other attributes that the scale of the map’s contents might affect.\n\ncontext\n\nThe graphics context to use for drawing the overlay’s contents.\n\nDiscussion\n\nThe default implementation of this method does nothing. Subclasses can override this method and use it to draw the overlay’s contents.\n\nWhen determining where to draw content, make your initial calculations relative to the map itself. Compute the position and size of any overlay content using map points and map rectangles, convert those values to regular CGPoint and CGRect types using the methods of this class, and then pass the converted points to any drawing primitives.\n\nUse Core Graphics to draw any content for your overlays. If you choose to draw using UIKit classes and methods instead, push the specified graphics context onto the context stack (using the UIGraphicsPushContext(_:) function) before making any drawing calls. When you finish drawing, you need to similarly pop the graphics context off the stack using the UIGraphicsPopContext(). Overlay drawing typically occurs on background threads to improve performance, so don’t manipulate UIKit views or other objects that you can only manipulate on the app’s main thread.\n\nTo improve drawing performance, the map view may divide your overlay into multiple tiles and render each one on a separate thread. Therefore, your implementation of this method needs to be capable of safely running multiple threads simultaneously. In addition, avoid drawing the entire contents of the overlay each time the overlay renderer calls this method. Instead, be sure to take the mapRect parameter into consideration and avoid drawing content outside that rectangle.\n\nSee Also\nDrawing the overlay\nfunc canDraw(MKMapRect, zoomScale: MKZoomScale) -> Bool\nReturns a Boolean value that indicates whether the overlay view is ready to draw its content.\nfunc setNeedsDisplay()\nInvalidates the entire contents of the overlay for all zoom scales.\nfunc setNeedsDisplay(MKMapRect)\nInvalidates the specified portion of the overlay at all zoom scales.\nfunc setNeedsDisplay(MKMapRect, zoomScale: MKZoomScale)\nInvalidates the specified portion of the overlay, but only at the specified zoom scale."
  },
  {
    "title": "setNeedsDisplay(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452564-setneedsdisplay",
    "html": "Parameters\nmapRect\n\nThe portion of the overlay to update. Specify this value using a map coordinates.\n\nDiscussion\n\nMarking a rectangle as invalid causes that portion of the overlay to be redrawn during the next update cycle. This method invalidates the overlay regardless of the current zoom scale associated with the map.\n\nSee Also\nDrawing the overlay\nfunc canDraw(MKMapRect, zoomScale: MKZoomScale) -> Bool\nReturns a Boolean value that indicates whether the overlay view is ready to draw its content.\nfunc draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)\nDraws the overlay’s contents at the specified location on the map.\nfunc setNeedsDisplay()\nInvalidates the entire contents of the overlay for all zoom scales.\nfunc setNeedsDisplay(MKMapRect, zoomScale: MKZoomScale)\nInvalidates the specified portion of the overlay, but only at the specified zoom scale."
  },
  {
    "title": "point(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1451899-point",
    "html": "Parameters\nmapPoint\n\nA point on the two-dimensional map projection. If you have a coordinate value (latitude and longitude), you can use the init(_:) function to convert that coordinate to a map point.\n\nReturn Value\n\nThe point in the overlay’s drawing area that corresponds to the map point.\n\nDiscussion\n\nYou may call this method safely from your view’s draw(_:zoomScale:in:) method.\n\nSee Also\nConverting points on the map\nfunc mapPoint(for: CGPoint) -> MKMapPoint\nReturns the point on the map that corresponds to the specified point in the overlay renderer’s drawing area.\nfunc rect(for: MKMapRect) -> CGRect\nReturns the rectangle in the overlay renderer’s drawing area corresponding to the specified rectangle on the map.\nfunc mapRect(for: CGRect) -> MKMapRect\nReturns the rectangle on the map that corresponds to the specified rectangle in the overlay renderer’s drawing area."
  },
  {
    "title": "contentScaleFactor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1451931-contentscalefactor",
    "html": "Discussion\n\nThe scale factor determines how the overlay renders map content from the logical coordinate space (in points) to the device coordinate space (in pixels). This value is typically either 1.0 or 2.0. Higher scale factors indicate that each point represents more than one pixel on the screen. For example, if the scale factor is 2.0 and the drawing rectangle size is 50 x 50 points, the size of the underlying area is 100 x 100 pixels.\n\nWhen drawing the content for your overlays, you can use this value to determine how best to render your content.\n\nSee Also\nAttributes of the overlay\nvar overlay: MKOverlay\nThe overlay object containing the data for drawing.\nvar alpha: CGFloat\nThe amount of transparency to apply to the overlay.\nvar blendMode: CGBlendMode\nThe blend mode to apply to the overlay."
  },
  {
    "title": "setNeedsDisplay() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer/1452104-setneedsdisplay",
    "html": "Discussion\n\nThis method causes the entire contents of the overlay to be redrawn during the next update cycle. This method invalidates the overlay regardless of the current zoom scale associated with the map.\n\nSee Also\nDrawing the overlay\nfunc canDraw(MKMapRect, zoomScale: MKZoomScale) -> Bool\nReturns a Boolean value that indicates whether the overlay view is ready to draw its content.\nfunc draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)\nDraws the overlay’s contents at the specified location on the map.\nfunc setNeedsDisplay(MKMapRect)\nInvalidates the specified portion of the overlay at all zoom scales.\nfunc setNeedsDisplay(MKMapRect, zoomScale: MKZoomScale)\nInvalidates the specified portion of the overlay, but only at the specified zoom scale."
  },
  {
    "title": "boundingMapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlay/1452791-boundingmaprect",
    "html": "Required\n\nDiscussion\n\nThis property contains the smallest rectangle that completely encompasses the overlay. Implementers of this protocol need to set this area when implementing their overlay class, and after setting it, not change it. Specify the rectangle using projected coordinates — that is, coordinates you obtain by projecting the globe onto a two-dimensional surface.\n\nSee Also\nDescribing the overlay geometry\nvar coordinate: CLLocationCoordinate2D\nThe approximate center point of the overlay area.\n\nRequired"
  },
  {
    "title": "winery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143460-winery",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/1451919-region",
    "html": "Discussion\n\nYou can use this parameter to narrow the list of search results to those inside or close to the specified region. Specifying a region doesn’t ensure that the results are all inside the region. It’s merely a hint to the search engine.\n\nSee Also\nConfiguring the search parameters\nvar naturalLanguageQuery: String?\nA string containing the desired search item.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point-of-interest categories to include or exclude in search results.\nvar resultTypes: MKLocalSearch.ResultType\nThe types of items to include in the search results.\ntypealias MKLocalSearch.Request.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4233580-init",
    "html": "Parameters\nroute\n\nThe MKRoute to trace.\n\nSee Also\nCreating a polyline\ninit(MKPolyline)\nCreates a polyline from polyline you provide.\ninit(coordinates: [CLLocationCoordinate2D], contourStyle: MapPolyline.ContourStyle)\nCreates a polyline that traces a path between the given coordinates using the specifed contour style.\ninit(points: [MKMapPoint], contourStyle: MapPolyline.ContourStyle)\nCreates a new polyline that traces a path between the provided points using the specifed contour style."
  },
  {
    "title": "campground | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143429-campground",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "MKOverlayView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayview",
    "html": "Overview\n\nAn overlay view provides the visual representation of an overlay object—that is, an object that conforms to the MKOverlay protocol. This class defines the drawing infrastructure used by the map view but does not do any actual drawing. Subclasses are expected to override the draw(_:zoomScale:in:) method in order to draw the contents of the overlay view.\n\nThe Map Kit framework provides several concrete instances of overlay views. Specifically, it provides overlay views for each of the concrete overlay objects. You can use one of these existing overlay views or define your own subclass if you want to draw the overlay contents differently.\n\nIn iOS 7 and later, use the MKOverlayRenderer class to display overlays instead.\n\nSubclassing notes\n\nYou can subclass MKOverlayView to create overlays based on custom shapes and content. The only method subclasses are expected to override is the draw(_:zoomScale:in:) method. However, if your class contains content that may not be ready for drawing right away, you should also override the canDraw(_:zoomScale:) method and use it to report when your class is ready and able to draw.\n\nThe implementation of your draw(_:zoomScale:in:) method must be safe to run from multiple threads simultaneously. To improve performance, the map view may tile overlays that are large enough and distribute the rendering of each tile to separate threads.\n\nRelationships\nInherits From\nUIView"
  },
  {
    "title": "update(with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601332-update",
    "html": "Return Value\n\nThe intersection of [newMember] and the set if the intersection was nonempty; otherwise, nil.\n\nDiscussion\n\nIf newMember is not contained in the set but subsumes current members of the set, the subsumed members are returned.\n\nvar options: ShippingOptions = [.secondDay, .priority]\nlet replaced = options.update(with: .express)\nprint(replaced == .secondDay)\n// Prints \"true\"\n\nSee Also\nUpdating the modes\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set."
  },
  {
    "title": "isSubset(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601316-issubset",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nReturn Value\n\ntrue if the set is a subset of other; otherwise, false.\n\nDiscussion\n\nSet A is a subset of another set B if every member of A is also a member of B.\n\nlet employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]\nprint(attendees.isSubset(of: employees))\n// Prints \"true\"\n\nSee Also\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set."
  },
  {
    "title": "police | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143449-police",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "nationalPark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143443-nationalpark",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "museum | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143442-museum",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "isStrictSuperset(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601314-isstrictsuperset",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nReturn Value\n\ntrue if the set is a strict superset of other; otherwise, false.\n\nDiscussion\n\nSet A is a strict superset of another set B if every member of B is also a member of A and A contains at least one element that is not a member of B.\n\nlet employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]\nprint(employees.isStrictSuperset(of: attendees))\n// Prints \"true\"\n\n\n// A set is never a strict superset of itself:\nprint(employees.isStrictSuperset(of: employees))\n// Prints \"false\"\n\nSee Also\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set."
  },
  {
    "title": "naturalLanguageQuery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/1452353-naturallanguagequery",
    "html": "Discussion\n\nYou specify this parameter as a string describing the map-based item you want to look for. The text is equivalent to what the user would type in a search field in the Maps app. For example, the text might contain all or part of an address or it might contain the name of a point of interest.\n\nSee Also\nConfiguring the search parameters\nvar region: MKCoordinateRegion\nA map region that provides a hint as to where to search.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point-of-interest categories to include or exclude in search results.\nvar resultTypes: MKLocalSearch.ResultType\nThe types of items to include in the search results.\ntypealias MKLocalSearch.Request.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "store | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143457-store",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "intersection(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601307-intersection",
    "html": "Parameters\nother\n\nAn option set.\n\nReturn Value\n\nA new option set with only the elements contained in both this set and other.\n\nDiscussion\n\nThis example uses the intersection(_:) method to limit the available shipping options to what can be used with a PO Box destination.\n\n// Can only ship standard or priority to PO Boxes\nlet poboxShipping: ShippingOptions = [.standard, .priority]\nlet memberShipping: ShippingOptions =\n        [.standard, .priority, .secondDay]\n\n\nlet availableOptions = memberShipping.intersection(poboxShipping)\nprint(availableOptions.contains(.priority))\n// Prints \"true\"\nprint(availableOptions.contains(.secondDay))\n// Prints \"false\"\n\nSee Also\nCombining sets of modes\nfunc union(MapInteractionModes) -> MapInteractionModes\nReturns a new option set of the elements contained in this set, in the given set, or in both.\nfunc subtracting(MapInteractionModes) -> MapInteractionModes\nReturns a new set containing the elements of this set that do not occur in the given set.\nfunc symmetricDifference(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with the elements contained in this set or in the given set, but not in both."
  },
  {
    "title": "rotate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/4232968-rotate",
    "html": "See Also\nDeclared interaction modes\nstatic let all: MapInteractionModes\nThe map allows all interaction modes.\nstatic let pan: MapInteractionModes\nThe map allows a person to pan around to different areas of the map.\nstatic let zoom: MapInteractionModes\nThe map allows people to zoom in or out on map locations.\nstatic let pitch: MapInteractionModes\nThe map allows people to set the map’s pitch to view the map from different angles."
  },
  {
    "title": "heading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userlocation/4235445-heading",
    "html": "See Also\nAccessing the user’s location and heading\nvar location: CLLocation?\nAn object that describes the current location of the persons’s device, including the latitude and longitude."
  },
  {
    "title": "errorCode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2887434-errorcode",
    "html": "See Also\nAccessing error properties\nvar code: Code\nThe error code within the domain.\nvar userInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar errorUserInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar localizedDescription: String\nA string that contains a localized description of the error, appropriate for displaying to the user.\nstatic var errorDomain: String\nThe error domain."
  },
  {
    "title": "formIntersection(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601296-formintersection",
    "html": "Parameters\nother\n\nAn option set.\n\nDiscussion\n\nThis method is implemented as a & (bitwise AND) operation on the two sets’ raw values.\n\nSee Also\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set."
  },
  {
    "title": "formSymmetricDifference(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601297-formsymmetricdifference",
    "html": "Parameters\nother\n\nAn option set.\n\nDiscussion\n\nThis method is implemented as a ^ (bitwise XOR) operation on the two sets’ raw values.\n\nSee Also\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set."
  },
  {
    "title": "insert(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601305-insert",
    "html": "Parameters\nnewMember\n\nThe element to insert.\n\nReturn Value\n\n(true, newMember) if newMember was not contained in self. Otherwise, returns (false, oldMember), where oldMember is the member of the set equal to newMember.\n\nDiscussion\n\nIn the following example, the .secondDay shipping option is added to the freeOptions option set if purchasePrice is greater than 50.0. For the ShippingOptions declaration, see the OptionSet protocol discussion.\n\nlet purchasePrice = 87.55\n\n\nvar freeOptions: ShippingOptions = [.standard, .priority]\nif purchasePrice > 50 {\n    freeOptions.insert(.secondDay)\n}\nprint(freeOptions.contains(.secondDay))\n// Prints \"true\"\n\nSee Also\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set."
  },
  {
    "title": "MapInteractionModes.Element | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/element",
    "html": "See Also\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601289",
    "html": "Parameters\nlhs\n\nThe first set of interaction modes.\n\nrhs\n\nThe second set of interaction modes.\n\nReturn Value\n\nA Boolean value set to true if the two modes are not equal.\n\nSee Also\nComparing sets of modes\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set."
  },
  {
    "title": "init(arrayLiteral:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601302-init",
    "html": "Parameters\narrayLiteral\n\nA list of elements of the new set.\n\nDiscussion\n\nDo not call this initializer directly. It is used by the compiler when you use an array literal. Instead, create a new set using an array literal as its value by enclosing a comma-separated list of values in square brackets. You can use an array literal anywhere a set is expected by the type context.\n\nHere, a set of strings is created from an array literal holding only strings:\n\nlet ingredients: Set = [\"cocoa beans\", \"sugar\", \"cocoa butter\", \"salt\"]\nif ingredients.isSuperset(of: [\"sugar\", \"salt\"]) {\n    print(\"Whatever it is, it's bound to be delicious!\")\n}\n// Prints \"Whatever it is, it's bound to be delicious!\"\n\nSee Also\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction."
  },
  {
    "title": "pitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/4232967-pitch",
    "html": "See Also\nDeclared interaction modes\nstatic let all: MapInteractionModes\nThe map allows all interaction modes.\nstatic let pan: MapInteractionModes\nThe map allows a person to pan around to different areas of the map.\nstatic let zoom: MapInteractionModes\nThe map allows people to zoom in or out on map locations.\nstatic let rotate: MapInteractionModes\nThe map allows people to rotate the map."
  },
  {
    "title": "userInfo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3726620-userinfo",
    "html": "See Also\nAccessing error properties\nvar code: Code\nThe error code within the domain.\nvar errorCode: Int\nThe error code within the domain.\nvar errorUserInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar localizedDescription: String\nA string that contains a localized description of the error, appropriate for displaying to the user.\nstatic var errorDomain: String\nThe error domain."
  },
  {
    "title": "isEmpty | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601311-isempty",
    "html": "See Also\nAccessing members\nlet rawValue: Int\nAn integer representing the combined modes of the set."
  },
  {
    "title": "MapInteractionModes.RawValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/rawvalue",
    "html": "See Also\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes."
  },
  {
    "title": "init(nibName:bundle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951140-init",
    "html": "Parameters\nnibNameOrNil\n\nThe name of the nib file.\n\nnibBundleOrNil\n\nThe Bundle file.\n\nSee Also\nCreating a LookAround controller\ninit?(coder: NSCoder)\nCreates a new LookAround view controller object from a coder object provided by a storyboard or nib file.\ninit(scene: MKLookAroundScene)\nCreates a new LookAround view controller with the specified scene."
  },
  {
    "title": "MapInteractionModes.ArrayLiteralElement | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/arrayliteralelement",
    "html": "See Also\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601304-init",
    "html": "Parameters\nrawValue\n\nAn integer value that represents the interaction modes.\n\nRelationships\nFrom Protocol\nOptionSet\nRawRepresentable\nSee Also\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction."
  },
  {
    "title": "showsRoadLabels | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951145-showsroadlabels",
    "html": "See Also\nCustomizing the LookAround display\nvar isNavigationEnabled: Bool\nA Boolean value that indicates whether the map’s navigation controls are visible.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar badgePosition: MKLookAroundBadgePosition\nA value that indicates the badge’s position on the LookAround view.\nenum MKLookAroundBadgePosition\nConstants that control the position of badges on LookAround views."
  },
  {
    "title": "zoom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601334-zoom",
    "html": "See Also\nDeclared interaction modes\nstatic let all: MapInteractionModes\nThe map allows all interaction modes.\nstatic let pan: MapInteractionModes\nThe map allows a person to pan around to different areas of the map.\nstatic let pitch: MapInteractionModes\nThe map allows people to set the map’s pitch to view the map from different angles.\nstatic let rotate: MapInteractionModes\nThe map allows people to rotate the map."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2947100",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nDiscussion\n\nInequality is the inverse of equality. For any values a and b, a != b implies that a == b is false.\n\nThis is the default implementation of the not-equal-to operator (!=) for any type that conforms to Equatable.\n\nSee Also\nComparing errors\nstatic func == (MKError, MKError) -> Bool\nIndicates whether two errors are equivalent.\nvar hashValue: Int\nThe hash value of the error.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "muted | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/standardemphasis/4234783-muted",
    "html": "Discussion\n\nUse this style to highlight content you place on the map.\n\nSee Also\nControlling the map’s emphasis\nstatic var automatic: MapStyle.StandardEmphasis\nThe default level of emphasis."
  },
  {
    "title": "isNavigationEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951142-isnavigationenabled",
    "html": "See Also\nCustomizing the LookAround display\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsRoadLabels: Bool\nA Boolean value that indicates whether the map display road labels.\nvar badgePosition: MKLookAroundBadgePosition\nA value that indicates the badge’s position on the LookAround view.\nenum MKLookAroundBadgePosition\nConstants that control the position of badges on LookAround views."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/3235755-init",
    "html": "See Also\nCreating a local search request\ninit(completion: MKLocalSearchCompletion)\nCreates and returns a search request based on the specified search completion data."
  },
  {
    "title": "subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotation/1429520-subtitle",
    "html": "Discussion\n\nThis is the string the annotation displays in the callout for the annotation view.\n\nSee Also\nTitle attributes\nvar title: String?\nThe string containing the annotation’s title."
  },
  {
    "title": "errorDomain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2887432-errordomain",
    "html": "See Also\nAccessing error properties\nvar code: Code\nThe error code within the domain.\nvar errorCode: Int\nThe error code within the domain.\nvar userInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar errorUserInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar localizedDescription: String\nA string that contains a localized description of the error, appropriate for displaying to the user."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3726618-hashvalue",
    "html": "See Also\nComparing errors\nstatic func != (MKError, MKError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nstatic func == (MKError, MKError) -> Bool\nIndicates whether two errors are equivalent.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "unknown | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2330511-unknown",
    "html": "See Also\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nenum MKError.Code\nError constants for the MapKit framework."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration/3930233-init",
    "html": "See Also\nCreating a standard map configuration\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new standard map configuration with the specified elevation style.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle, emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified elevation and emphasis styles.\ninit(emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified emphasis style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "errorUserInfo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2887433-erroruserinfo",
    "html": "See Also\nAccessing error properties\nvar code: Code\nThe error code within the domain.\nvar errorCode: Int\nThe error code within the domain.\nvar userInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar localizedDescription: String\nA string that contains a localized description of the error, appropriate for displaying to the user.\nstatic var errorDomain: String\nThe error domain."
  },
  {
    "title": "stadium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143456-stadium",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "publicTransport | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143451-publictransport",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "MKError.Code | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/code",
    "html": "Topics\nConstants\ncase decodingFailed\nGeoJSON decoding failed.\ncase directionsNotFound\nThe framework couldn’t find the specified directions.\ncase loadingThrottled\nThe data didn’t load because data throttling is in effect.\ncase placemarkNotFound\nThe specified placemark could not be found.\ncase serverFailure\nThe map server was unable to return the desired information.\ncase unknown\nAn unknown error occurred.\nRelationships\nConforms To\nSendable\nSee Also\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nstatic var unknown: MKError.Code\nAn unknown error occurred."
  },
  {
    "title": "hospital | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143436-hospital",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3726615",
    "html": "Parameters\nlhs\n\nAn error to compare.\n\nrhs\n\nAnother error to compare.\n\nReturn Value\n\nA Boolean value that indicate if two errors are equivalent.\n\nSee Also\nComparing errors\nstatic func != (MKError, MKError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nvar hashValue: Int\nThe hash value of the error.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher."
  },
  {
    "title": "init(mapRect:interactionModes:showsUserLocation:userTrackingMode:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/3601279-init",
    "html": "Parameters\nmapRect\n\nA binding to a rectangle on the map that corresponds to an area to display on the map.\n\ninteractionModes\n\nAn enumeration that indicates the user interactions to which the map responds.\n\nshowsUserLocation\n\nA Boolean value that indicates the option to display a person’s location on a map. The map displays the location only if they authorized the app to access their location.\n\nuserTrackingMode\n\nA binding to a tracking mode that determines how the map responds to location updates."
  },
  {
    "title": "init(mapRect:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/3601280-init",
    "html": "Deprecated\n\nUse Map initializers that take a MapContentBuilder instead.\n\nParameters\nmapRect\n\nThe map rectangle defining the area to display.\n\ninteractionModes\n\nAn enumeration that indicates the user interactions to which the map responds.\n\nshowsUserLocation\n\nA Boolean value that indicates the option to display a person’s location on a map. The map displays the location only if they authorized the app to access their location.\n\nuserTrackingMode\n\nA binding to a tracking mode that determines how the map responds to location updates.\n\nannotationItems\n\nThe collection of data that the view uses to display annotations.\n\nannotationContent\n\nA closure that produces the annotation content."
  },
  {
    "title": "init(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/3601278-init",
    "html": "Deprecated\n\nUse Map initializers that take a MapContentBuilder instead.\n\nParameters\ncoordinateRegion\n\nA binding to a region that corresponds to an area to display on the map.\n\ninteractionModes\n\nAn enumeration that indicates the user interactions to which the map responds.\n\nshowsUserLocation\n\nA Boolean value that indicates the option to display a person’s location on a map. The map displays the location only if they authorized the app to access their location.\n\nuserTrackingMode\n\nA binding to a tracking mode that determines how the map responds to location updates.\n\nannotationItems\n\nThe collection of data that the view uses to display annotations.\n\nannotationContent\n\nA closure that produces the annotation content."
  },
  {
    "title": "MapUserTrackingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapusertrackingmode",
    "html": "Deprecated\n\nUse Map initializers that take a position parameter along with MapCameraPosition.userLocation to configure how the camera follows the user.\n\nTopics\nSetting the user tracking mode\ncase none\nThe map doesn’t update based on the person’s location.\ncase follow\nThe map updates by following a person’s location.\ncase followWithHeading\nThe map updates by following the person’s heading.\nComparing modes\nstatic func == (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are equal.\nstatic func != (MapUserTrackingMode, MapUserTrackingMode) -> Bool\nDetermines whether two tracking modes are not equal.\nvar hashValue: Int\nAn integer that represents the hashed value of the tracking mode.\nfunc hash(into: inout Hasher)\nHashes the essential components of the tracking mode by senindg them to the given hash function."
  },
  {
    "title": "subtracting(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601327-subtracting",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nReturn Value\n\nA new set.\n\nDiscussion\n\nIn the following example, the nonNeighbors set is made up of the elements of the employees set that are not elements of neighbors:\n\nlet employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]\nlet nonNeighbors = employees.subtracting(neighbors)\nprint(nonNeighbors)\n// Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\"\n\nSee Also\nCombining sets of modes\nfunc union(MapInteractionModes) -> MapInteractionModes\nReturns a new option set of the elements contained in this set, in the given set, or in both.\nfunc intersection(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with only the elements contained in both this set and the given set.\nfunc symmetricDifference(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with the elements contained in this set or in the given set, but not in both."
  },
  {
    "title": "symmetricDifference(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601329-symmetricdifference",
    "html": "Parameters\nother\n\nAn option set.\n\nReturn Value\n\nA new option set with only the elements contained in either this set or other, but not in both.\n\nSee Also\nCombining sets of modes\nfunc union(MapInteractionModes) -> MapInteractionModes\nReturns a new option set of the elements contained in this set, in the given set, or in both.\nfunc intersection(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with only the elements contained in both this set and the given set.\nfunc subtracting(MapInteractionModes) -> MapInteractionModes\nReturns a new set containing the elements of this set that do not occur in the given set."
  },
  {
    "title": "subtract(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601325-subtract",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nDiscussion\n\nIn the following example, the elements of the employees set that are also members of the neighbors set are removed. In particular, the names \"Bethany\" and \"Eric\" are removed from employees.\n\nvar employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet neighbors: Set = [\"Bethany\", \"Eric\", \"Forlani\", \"Greta\"]\nemployees.subtract(neighbors)\nprint(employees)\n// Prints \"[\"Diana\", \"Chris\", \"Alicia\"]\"\n\nSee Also\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set."
  },
  {
    "title": "isSuperset(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601318-issuperset",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nReturn Value\n\ntrue if the set is a superset of other; otherwise, false.\n\nDiscussion\n\nSet A is a superset of another set B if every member of B is also a member of A.\n\nlet employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]\nprint(employees.isSuperset(of: attendees))\n// Prints \"true\"\n\nSee Also\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set."
  },
  {
    "title": "isStrictSubset(of:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601312-isstrictsubset",
    "html": "Parameters\nother\n\nA set of the same type as the current set.\n\nReturn Value\n\ntrue if the set is a strict subset of other; otherwise, false.\n\nDiscussion\n\nSet A is a strict subset of another set B if every member of A is also a member of B and B contains at least one element that is not a member of A.\n\nlet employees: Set = [\"Alicia\", \"Bethany\", \"Chris\", \"Diana\", \"Eric\"]\nlet attendees: Set = [\"Alicia\", \"Bethany\", \"Diana\"]\nprint(attendees.isStrictSubset(of: employees))\n// Prints \"true\"\n\n\n// A set is never a strict subset of itself:\nprint(attendees.isStrictSubset(of: attendees))\n// Prints \"false\"\n\nSee Also\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set."
  },
  {
    "title": "contains(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601294-contains",
    "html": "Parameters\nmember\n\nThe element to look for in the option set.\n\nReturn Value\n\ntrue if the option set contains member; otherwise, false.\n\nDiscussion\n\nThis example uses the contains(_:) method to check whether next-day shipping is in the availableOptions instance.\n\nlet availableOptions = ShippingOptions.express\nif availableOptions.contains(.nextDay) {\n    print(\"Next day shipping available\")\n}\n// Prints \"Next day shipping available\"\n\nSee Also\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set."
  },
  {
    "title": "rawValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601321-rawvalue",
    "html": "Relationships\nFrom Protocol\nRawRepresentable\nSee Also\nAccessing members\nvar isEmpty: Bool\nA Boolean value that indicates whether the set has no elements."
  },
  {
    "title": "init(completion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/1452301-init",
    "html": "Parameters\ncompletion\n\nA search completion object that MapKit obtains from an MKLocalSearchCompleter object. The search request uses the provided object to set the value of the naturalLanguageQuery property.\n\nReturn Value\n\nAn initialized search request.\n\nDiscussion\n\nUse this method when initializing your object from MKLocalSearchCompleter objects. You don’t need to use this method if you intend to provide the search string and region information yourself.\n\nSee Also\nCreating a local search request\ninit()\nCreates a local search request.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "all | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes/3601293-all",
    "html": "See Also\nDeclared interaction modes\nstatic let pan: MapInteractionModes\nThe map allows a person to pan around to different areas of the map.\nstatic let zoom: MapInteractionModes\nThe map allows people to zoom in or out on map locations.\nstatic let pitch: MapInteractionModes\nThe map allows people to set the map’s pitch to view the map from different angles.\nstatic let rotate: MapInteractionModes\nThe map allows people to rotate the map."
  },
  {
    "title": "realistic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/elevation/4234780-realistic",
    "html": "See Also\nElevation styles\nstatic var automatic: MapStyle.Elevation\nThe default elevation style, that renders a flat, 2D map.\nstatic var flat: MapStyle.Elevation\nA value that renders a flat, 2D map."
  },
  {
    "title": "automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/elevation/4234778-automatic",
    "html": "Discussion\n\nThe default elevation style appropriate for a specific\n\nSee Also\nElevation styles\nstatic var flat: MapStyle.Elevation\nA value that renders a flat, 2D map.\nstatic var realistic: MapStyle.Elevation\nA value that renders a realistic, 3D map."
  },
  {
    "title": "flat | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/elevation/4234779-flat",
    "html": "See Also\nElevation styles\nstatic var automatic: MapStyle.Elevation\nThe default elevation style, that renders a flat, 2D map.\nstatic var realistic: MapStyle.Elevation\nA value that renders a realistic, 3D map."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951143-pointofinterestfilter",
    "html": "See Also\nCustomizing the LookAround display\nvar isNavigationEnabled: Bool\nA Boolean value that indicates whether the map’s navigation controls are visible.\nvar showsRoadLabels: Bool\nA Boolean value that indicates whether the map display road labels.\nvar badgePosition: MKLookAroundBadgePosition\nA value that indicates the badge’s position on the LookAround view.\nenum MKLookAroundBadgePosition\nConstants that control the position of badges on LookAround views."
  },
  {
    "title": "MKLookAroundViewControllerDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontrollerdelegate",
    "html": "Topics\nResponding to scene changes\nfunc lookAroundViewControllerWillUpdateScene(MKLookAroundViewController)\nTells the delegate that the scene is about to update.\nfunc lookAroundViewControllerDidUpdateScene(MKLookAroundViewController)\nTells the delegate that the scene updated.\nEntering and exiting full-screen modes\nfunc lookAroundViewControllerWillPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to enter full-screen mode.\nfunc lookAroundViewControllerDidPresentFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller enters full-screen mode.\nfunc lookAroundViewControllerWillDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller is about to exit full-screen mode.\nfunc lookAroundViewControllerDidDismissFullScreen(MKLookAroundViewController)\nTells the delegate when the view controller exits full-screen mode.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nInteracting with the controller\nvar delegate: MKLookAroundViewControllerDelegate?\nAn object you provide to receive events related to the user’s interaction with the LookAround view controller."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951138-delegate",
    "html": "See Also\nInteracting with the controller\nprotocol MKLookAroundViewControllerDelegate\nMethods you implement to respond to changes in the LookAround view controller."
  },
  {
    "title": "badgePosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/4027499-badgeposition",
    "html": "See Also\nCustomizing the LookAround display\nvar isNavigationEnabled: Bool\nA Boolean value that indicates whether the map’s navigation controls are visible.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsRoadLabels: Bool\nA Boolean value that indicates whether the map display road labels.\nenum MKLookAroundBadgePosition\nConstants that control the position of badges on LookAround views."
  },
  {
    "title": "localizedDescription | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2887431-localizeddescription",
    "html": "See Also\nAccessing error properties\nvar code: Code\nThe error code within the domain.\nvar errorCode: Int\nThe error code within the domain.\nvar userInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar errorUserInfo: [String : Any]\nA dictionary that contains information about to the error.\nstatic var errorDomain: String\nThe error domain."
  },
  {
    "title": "init(scene:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951141-init",
    "html": "Parameters\nscene\n\nA MKLookAroundScene.\n\nSee Also\nCreating a LookAround controller\ninit?(coder: NSCoder)\nCreates a new LookAround view controller object from a coder object provided by a storyboard or nib file.\ninit(nibName: String?, bundle: Bundle?)\nCreates a new LookAround view controller from the specified nib and bundle."
  },
  {
    "title": "mapView(_:viewFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1452045-mapview",
    "html": "Parameters\nmapView\n\nThe map view that requests the annotation view.\n\nannotation\n\nThe object representing the annotation that the map view is about to display. In addition to your custom annotations, this object might be an MKUserLocation object representing the user’s location.\n\nReturn Value\n\nThe annotation view to display for the specified annotation, or nil if you want to display a standard annotation view.\n\nDiscussion\n\nRather than create a new view each time the map view calls this method, call the dequeueReusableAnnotationView(withIdentifier:) method of the MKMapView class to see if an existing annotation view of the desired type already exists. If one exists, update the returned view to reflect the attributes of the specified annotation and return it. If a view of the appropriate type doesn’t exist, create one, configure it with the needed annotation data, and return it.\n\nIf the object in the annotation parameter is an instance of the MKUserLocation class, you can provide a custom view to denote the user’s location. To display the user’s location using the default system view, return nil.\n\nIf you don’t implement this method, or if you return nil from your implementation for annotations other than the user location annotation, the map view uses a standard pin annotation view.\n\nSee Also\nManaging annotation views\nfunc mapView(MKMapView, didAdd: [MKAnnotationView])\nTells the delegate when the map view adds one or more annotation views to the map.\nfunc mapView(MKMapView, annotationView: MKAnnotationView, calloutAccessoryControlTapped: UIControl)\nTells the delegate when the user taps one of the annotation view’s accessory buttons.\nfunc mapView(MKMapView, clusterAnnotationForMemberAnnotations: [MKAnnotation]) -> MKClusterAnnotation\nAsks the delegate to provide a cluster annotation object for the specified annotations."
  },
  {
    "title": "centerCoordinateDistance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/3114295-centercoordinatedistance",
    "html": "See Also\nConfiguring the viewing angle\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar heading: CLLocationDirection\nThe heading of the camera (in degrees) relative to true north.\nvar pitch: CGFloat\nThe viewing angle of the camera, in degrees.\nvar altitude: CLLocationDistance\nThe altitude above the ground, in meters.\nDeprecated"
  },
  {
    "title": "altitude | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/1411078-altitude",
    "html": "Deprecated\n\nUse centerCoordinateDistance instead.\n\nDiscussion\n\nThe value you specify for this property can’t be less than 0.\n\nChanging this property may also change the maximum pitch for the map. If the current pitch value exceeds the new maximum, the class clamps the pitch property to the new maximum.\n\nSee Also\nConfiguring the viewing angle\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar heading: CLLocationDirection\nThe heading of the camera (in degrees) relative to true north.\nvar centerCoordinateDistance: CLLocationDistance\nThe distance from the center point of the map to the camera, in meters.\nvar pitch: CGFloat\nThe viewing angle of the camera, in degrees."
  },
  {
    "title": "pitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/1411083-pitch",
    "html": "Discussion\n\nA value of 0 results in a camera that points straight down at the map. Angles greater than 0 result in a camera that pitches toward the horizon by the specified number of degrees. If the map type is MKMapType.satellite or MKMapType.hybrid, the object clamps the pitch value to 0.\n\nThe class may clamp the value in this property to a maximum value to maintain map readability. There’s no fixed maximum value, though, because the actual maximum value is dependent on the altitude of the camera.\n\nSee Also\nConfiguring the viewing angle\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar heading: CLLocationDirection\nThe heading of the camera (in degrees) relative to true north.\nvar centerCoordinateDistance: CLLocationDistance\nThe distance from the center point of the map to the camera, in meters.\nvar altitude: CLLocationDistance\nThe altitude above the ground, in meters.\nDeprecated"
  },
  {
    "title": "heading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/1411087-heading",
    "html": "Discussion\n\nThe value 0 means that the top edge of the map view corresponds to true north. The value 90 means the top of the map is pointing due east. The value 180 means the top of the map points due south, and so on.\n\nSee Also\nConfiguring the viewing angle\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar centerCoordinateDistance: CLLocationDistance\nThe distance from the center point of the map to the camera, in meters.\nvar pitch: CGFloat\nThe viewing angle of the camera, in degrees.\nvar altitude: CLLocationDistance\nThe altitude above the ground, in meters.\nDeprecated"
  },
  {
    "title": "excluding(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories/4235410-excluding",
    "html": "Parameters\ncategories\n\nAn array of points of interest categories to exclude.\n\nReturn Value\n\nReturns a set of point of interest categories to exclude.\n\nSee Also\nModifying the categories to include or exclude\nstatic func excluding(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the list you provide.\nstatic func including([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided array.\nstatic func including(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided list."
  },
  {
    "title": "latitudeDelta | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinatespan/1452417-latitudedelta",
    "html": "Discussion\n\nUnlike longitudinal distances, which vary based on the latitude, one degree of latitude is always approximately 111 kilometers (69 miles).\n\nSee Also\nGetting the span coordinates\nvar longitudeDelta: CLLocationDegrees\nThe amount of east-to-west distance (measured in degrees) to display for the map region.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "longitudeDelta | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinatespan/1452573-longitudedelta",
    "html": "Discussion\n\nThe number of kilometers spanned by a longitude range varies based on the current latitude. For example, one degree of longitude spans a distance of approximately 111 kilometers (69 miles) at the equator but shrinks to 0 kilometers at the poles.\n\nSee Also\nGetting the span coordinates\nvar latitudeDelta: CLLocationDegrees\nThe amount of north-to-south distance (measured in degrees) to display on the map."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinatespan/1452560-init",
    "html": "See Also\nCreating a coordinate span\ninit(latitudeDelta: CLLocationDegrees, longitudeDelta: CLLocationDegrees)\nCreates a new MKCoordinateSpan from the specified values."
  },
  {
    "title": "including(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories/4235413-including",
    "html": "Parameters\ncategories\n\nAn array of point of interest categories to include.\n\nReturn Value\n\nReturns the points of interest to include.\n\nSee Also\nModifying the categories to include or exclude\nstatic func excluding([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the array you provide.\nstatic func excluding(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the list you provide.\nstatic func including(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided list."
  },
  {
    "title": "all | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories/4235409-all",
    "html": "See Also\nCategories to include or exclude\nstatic var excludingAll: PointOfInterestCategories\nA list of point of interest categories to exclude from display on the map."
  },
  {
    "title": "excludingAll | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories/4235412-excludingall",
    "html": "See Also\nCategories to include or exclude\nstatic var all: PointOfInterestCategories\nA list of all points of interest categories, both included and excluded."
  },
  {
    "title": "mapOverlayLevel(level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4233583-mapoverlaylevel",
    "html": "Parameters\nlevel\n\nOne of the MKOverlayLevel levels.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the positioning level you specified."
  },
  {
    "title": "strokeStyle(style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4233587-strokestyle",
    "html": "Parameters\nstyle\n\nThe shape style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the StrokeStyle you specified.\n\nSee Also\nStyling the polyline\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nstruct MapPolyline.ContourStyle\nValues that define how MapKit styles lines to represent the contour of the Earth."
  },
  {
    "title": "stroke(lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4233586-stroke",
    "html": "Parameters\nlineWidth\n\nThe line width of the stroke.\n\nReturn Value\n\nReturns MapContent with overlays drawn with lineWidth you specified.\n\nSee Also\nStyling the polyline\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays.\nstruct MapPolyline.ContourStyle\nValues that define how MapKit styles lines to represent the contour of the Earth."
  },
  {
    "title": "stroke(_:style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4233585-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nstyle\n\nThe stroke style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the ShapeStyle and StrokeStyle you specified.\n\nDiscussion\n\nNote\n\nThe only gradient type this modifier supports is Gradient, all other gradient types resolve to a solid fallback color.\n\nSee Also\nStyling the polyline\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays.\nstruct MapPolyline.ContourStyle\nValues that define how MapKit styles lines to represent the contour of the Earth."
  },
  {
    "title": "stroke(_:lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4233584-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nlineWidth\n\nThe line width to draw the stroke with.\n\nReturn Value\n\nReturns MapContent drawn with the ShapeStyle and lineWidth you specified.\n\nSee Also\nStyling the polyline\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays.\nstruct MapPolyline.ContourStyle\nValues that define how MapKit styles lines to represent the contour of the Earth."
  },
  {
    "title": "zoo | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143461-zoo",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries."
  },
  {
    "title": "amusementPark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143422-amusementpark",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "init(points:contourStyle:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline/4277961-init",
    "html": "Parameters\npoints\n\nThe points to trace the path between.\n\ncontourStyle\n\nThe MapPolyline.ContourStyle to use.\n\nSee Also\nCreating a polyline\ninit(MKPolyline)\nCreates a polyline from polyline you provide.\ninit(MKRoute)\nCreates a polyline that traces the route you provide.\ninit(coordinates: [CLLocationCoordinate2D], contourStyle: MapPolyline.ContourStyle)\nCreates a polyline that traces a path between the given coordinates using the specifed contour style."
  },
  {
    "title": "airport | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143421-airport",
    "html": "See Also\nPoint of interest categories\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "university | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143459-university",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "aquarium | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143423-aquarium",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "bakery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143424-bakery",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "theater | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143458-theater",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "resultTypes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/3143411-resulttypes",
    "html": "See Also\nConfiguring the search parameters\nvar naturalLanguageQuery: String?\nA string containing the desired search item.\nvar region: MKCoordinateRegion\nA map region that provides a hint as to where to search.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point-of-interest categories to include or exclude in search results.\ntypealias MKLocalSearch.Request.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "MKLocalSearch.Request.ResultType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/resulttype",
    "html": "See Also\nConfiguring the search parameters\nvar naturalLanguageQuery: String?\nA string containing the desired search item.\nvar region: MKCoordinateRegion\nA map region that provides a hint as to where to search.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point-of-interest categories to include or exclude in search results.\nvar resultTypes: MKLocalSearch.ResultType\nThe types of items to include in the search results."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request/3143410-pointofinterestfilter",
    "html": "See Also\nConfiguring the search parameters\nvar naturalLanguageQuery: String?\nA string containing the desired search item.\nvar region: MKCoordinateRegion\nA map region that provides a hint as to where to search.\nvar resultTypes: MKLocalSearch.ResultType\nThe types of items to include in the search results.\ntypealias MKLocalSearch.Request.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "mapItems | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/response/1451939-mapitems",
    "html": "Discussion\n\nThis property contains an array of MKMapItem objects, each of which represents a returned search result. You can use these objects to retrieve information about the search result, such as the name of the point of interest, the address, the geographic location, and so on.\n\nSee Also\nGetting the search results\nvar boundingRegion: MKCoordinateRegion\nThe map region that encloses the returned search results.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "boundingRegion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/response/1452501-boundingregion",
    "html": "Discussion\n\nThe returned region is the smallest bounding box that encloses all of the map items. If there’s only one search result, the size of the region may be (0, 0).\n\nSee Also\nGetting the search results\nvar mapItems: [MKMapItem]\nAn array of map items representing the search results."
  },
  {
    "title": "MKCircleView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcircleview",
    "html": "Overview\n\nThis view fills and strokes the circle represented by the annotation. You can change the color and other drawing attributes of the circle by modifying the properties inherited from the MKOverlayPathView class. This class is typically used as is and not subclassed.\n\nUse of this class is discouraged in iOS 7 and later. Use the MKCircleRenderer class instead.\n\nRelationships\nInherits From\nMKOverlayPathView"
  },
  {
    "title": "MKPolygonView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygonview",
    "html": "Overview\n\nThis view fills and strokes the area represented by the annotation. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the MKOverlayPathView class. This class is typically used as is and not subclassed.\n\nIn iOS 7 and later, use the MKPolygonRenderer class to display polygon overlays instead.\n\nRelationships\nInherits From\nMKOverlayPathView"
  },
  {
    "title": "MKPolylineView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolylineview",
    "html": "Overview\n\nThis view strokes the path represented by the annotation. (This class does not fill the area enclosed by the path.) You can change the color and other drawing attributes of the path by modifying the properties inherited from the MKOverlayPathView class. This class is typically used as is and not subclassed.\n\nIn iOS 7 and later, use the MKPolylineRenderer class to display polyline overlays instead.\n\nRelationships\nInherits From\nMKOverlayPathView"
  },
  {
    "title": "mapView(_:didAddOverlayViews:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1616206-mapview",
    "html": "Deprecated\n\nImplement the mapView(_:didAdd:) method instead.\n\nParameters\nmapView\n\nThe map view that adds the overlay views.\n\noverlayViews\n\nAn array of MKOverlayView objects representing the views that the map view adds.\n\nDiscussion\n\nBy the time the map view calls this method, MapKit has added the specified views to the map.\n\nSee Also\nManaging the display of overlays\nfunc mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer\nAsks the delegate for a renderer object to use when drawing the specified overlay.\nfunc mapView(MKMapView, didAdd: [MKOverlayRenderer])\nTells the delegate when the map view adds one or more renderer objects to the map.\nfunc mapView(MKMapView, viewFor: MKOverlay) -> MKOverlayView\nAsks the delegate for the overlay view to use when displaying the specified overlay object.\nDeprecated"
  },
  {
    "title": "pinColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview/1452530-pincolor",
    "html": "Deprecated\n\nUse pinTintColor instead.\n\nDiscussion\n\nThe Maps application uses different pin colors for different types of map annotations. Your own map annotation should use the available pin colors in the same way. For a description of when to use each type of pin, see the constants of MKPinAnnotationColor.\n\nSee Also\nGetting and Setting Attributes\nvar pinTintColor: UIColor!\nThe color of the pin head.\nDeprecated\nvar animatesDrop: Bool\nA Boolean value indicating whether the annotation view is animated onto the screen.\nDeprecated"
  },
  {
    "title": "mapView(_:viewFor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate/1616210-mapview",
    "html": "Deprecated\n\nImplement the mapView(_:rendererFor:) method instead.\n\nParameters\nmapView\n\nThe map view that requests the overlay view.\n\noverlay\n\nThe object representing the overlay that the map view is about to display.\n\nReturn Value\n\nThe view to use when presenting the specified overlay on the map. If you return nil, no view displays for the specified overlay object.\n\nSee Also\nManaging the display of overlays\nfunc mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer\nAsks the delegate for a renderer object to use when drawing the specified overlay.\nfunc mapView(MKMapView, didAdd: [MKOverlayRenderer])\nTells the delegate when the map view adds one or more renderer objects to the map.\nfunc mapView(MKMapView, didAddOverlayViews: [Any])\nTells the delegate when the map adds one or more overlay views to the map.\nDeprecated"
  },
  {
    "title": "init(coder:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller/3951139-init",
    "html": "Parameters\ncoder\n\nThe NSCoder object\n\nSee Also\nCreating a LookAround controller\ninit(nibName: String?, bundle: Bundle?)\nCreates a new LookAround view controller from the specified nib and bundle.\ninit(scene: MKLookAroundScene)\nCreates a new LookAround view controller with the specified scene."
  },
  {
    "title": "getSnapshotWithCompletionHandler(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/3951134-getsnapshotwithcompletionhandler",
    "html": "Parameters\ncompletionHandler\n\nA completion handler the framework calls to indicate the success or failure of the snapshot request.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can access it as an asynchronous property that has the following declaration:\n\nvar snapshot: MKLookAroundSnapshotter.Snapshot { get async throws }\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nStarting and stopping a snapshot\nfunc cancel()\nCancels an in-progress snapshot request."
  },
  {
    "title": "MKPinAnnotationColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationcolor",
    "html": "Topics\nConstants\ncase red\ncase green\ncase purple\nRelationships\nConforms To\nSendable\nSee Also\nGetting Standard Pin Colors\nclass func redPinColor() -> UIColor\nReturns the standard color for red pins.\nDeprecated\nclass func greenPinColor() -> UIColor\nReturns the standard color for green pins.\nDeprecated\nclass func purplePinColor() -> UIColor\nReturns the standard color for purple pins.\nDeprecated"
  },
  {
    "title": "mapType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452341-maptype",
    "html": "Deprecated\n\nUse preferredConfiguration instead.\n\nDiscussion\n\nThe default value of this property is MKMapType.standard.\n\nSee Also\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated"
  },
  {
    "title": "showsPointsOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/1452316-showspointsofinterest",
    "html": "Deprecated\n\nUse pointOfInterestFilter instead.\n\nDiscussion\n\nWhen this property is set to true, the map displays icons and labels for restaurants, schools, and other relevant points of interest. The default value of this property is true.\n\nSee Also\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated"
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options/3172734-pointofinterestfilter",
    "html": "See Also\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated"
  },
  {
    "title": "getSceneWithCompletionHandler(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951121-getscenewithcompletionhandler",
    "html": "Parameters\ncompletionHandler\n\nA completion handler the framework calls when the scene request completes to indicate the success or failure of the request.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can access it as an asynchronous property that has the following declaration:\n\nvar scene: MKLookAroundScene? { get async throws }\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nStarting and stopping scene requests\nfunc cancel()\nCancels the pending scene request."
  },
  {
    "title": "address | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/resulttype/3143407-address",
    "html": "See Also\nType properties\nstatic var pointOfInterest: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes point-of-interest completions in results.\nstatic var query: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes query completions in results."
  },
  {
    "title": "cancel() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/3951133-cancel",
    "html": "See Also\nStarting and stopping a snapshot\nfunc getSnapshotWithCompletionHandler((MKLookAroundSnapshotter.Snapshot?, Error?) -> Void)\nRequests a new snapshot and calls the completion handler you provide."
  },
  {
    "title": "isLoading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951124-isloading",
    "html": "See Also\nMonitoring the progress of scene requests\nvar isCancelled: Bool\nA Boolean value that indicates if the cancellation of a scene request was successful."
  },
  {
    "title": "MKLaunchOptionsDirectionsModeKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsdirectionsmodekey",
    "html": "Discussion\n\nThe value of this key is an NSString corresponding to one of the values described in Directions mode values. You specify this key to tell the Maps app which mode of transport to use when generating directions.\n\nSee Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "MKLocalSearchCompleterDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleterdelegate",
    "html": "Overview\n\nYou use this protocol when implementing an autocomplete solution for a map in your app. As the user types search terms, use an MKLocalSearchCompleter object to start searching for valid completions. The delegate you assign to that object needs to conform to this protocol. As it receives completions, the local search completer calls the methods of this protocol to deliver the results.\n\nTopics\nGetting the search results\nfunc completerDidUpdateResults(MKLocalSearchCompleter)\nTells the method when the specified search completer updates its array of search completions.\nfunc completer(MKLocalSearchCompleter, didFailWithError: Error)\nTells the method when the specified search completer is unable to generate a list of search results.\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nReceiving the search results\nvar delegate: MKLocalSearchCompleterDelegate?\nThe object that receives the completion results."
  },
  {
    "title": "MKDirections.ETAHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etahandler",
    "html": "Parameters\nresponse\n\nThe response parameter contains the travel-time response. If an error occurs or the framework can’t determine the travel time, this parameter is nil.\n\nerror\n\nThe error parameter contains information about any errors that occur. If no errors occur, this parameter is nil.\n\nDiscussion\n\nThe implementation of your block needs to check for a value in the error parameter and, if that parameter is nil, incorporate the travel-time information from the response parameter.\n\nSee Also\nGetting the ETA\nfunc calculateETA(completionHandler: MKDirections.ETAHandler)\nBegins calculating the requested travel-time information asynchronously.\nclass MKDirections.ETAResponse\nThe travel-time information that Apple servers return."
  },
  {
    "title": "tollPreference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/3951110-tollpreference",
    "html": "See Also\nSpecifying transportation options\nvar transportType: MKDirectionsTransportType\nThe type of conveyance that the directions apply to.\nvar highwayPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework uses or avoids highways when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar requestsAlternateRoutes: Bool\nA Boolean value that indicates whether your app requests multiple routes when they’re available.\nvar departureDate: Date?\nThe departure date for the trip.\nvar arrivalDate: Date?\nThe arrival date for the trip."
  },
  {
    "title": "requestsAlternateRoutes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433154-requestsalternateroutes",
    "html": "Discussion\n\nWhen this property is false, the server returns a single route between the start and end points. When this property is true, the server may return additional routes for the user to follow. The server returns additional routes only if they’re available and represent a reasonable path that the user might take.\n\nThe default value of this property is false.\n\nSee Also\nSpecifying transportation options\nvar transportType: MKDirectionsTransportType\nThe type of conveyance that the directions apply to.\nvar highwayPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework uses or avoids highways when providing directions.\nvar tollPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework avoids routes that have tolls when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar departureDate: Date?\nThe departure date for the trip.\nvar arrivalDate: Date?\nThe arrival date for the trip."
  },
  {
    "title": "query | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/resulttype/3143409-query",
    "html": "Discussion\n\nFor example, the search string cof yields a completion for coffee.\n\nSee Also\nType properties\nstatic var address: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes address completions in results.\nstatic var pointOfInterest: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes point-of-interest completions in results."
  },
  {
    "title": "MKOverlayPathRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaypathrenderer",
    "html": "Overview\n\nUse this renderer when a CGPath object defines your overlay’s shape. By default, this renderer fills the overlay’s shape and represents the strokes of the path using its current attributes.\n\nYou can use this class as-is or subclass it to define additional drawing behaviors. If you subclass it, override the createPath() method and use that method to build the appropriate path object. To change the path, invalidate it and recreate the path using the new data your subclass obtains.\n\nTopics\nCreating and managing the path\nvar path: CGPath!\nThe path representing the overlay’s shape.\nfunc createPath()\nCreates the path for the overlay.\nfunc invalidatePath()\nUpdates the path associated with the overlay renderer.\nAccessing the drawing attributes\nvar fillColor: UIColor?\nThe fill color to use for the path.\nvar strokeColor: UIColor?\nThe stroke color to use for the path.\nvar lineWidth: CGFloat\nThe stroke width to use for the path.\nvar lineJoin: CGLineJoin\nThe line join style to apply to the corners of the path.\nvar lineCap: CGLineCap\nThe line cap style to apply to the open ends of the path.\nvar miterLimit: CGFloat\nThe limiting value that helps avoid spikes at junctions between connected line segments.\nvar lineDashPhase: CGFloat\nThe offset (in points) at which to start drawing the dash pattern.\nvar lineDashPattern: [NSNumber]?\nAn array of numbers specifying the dash pattern to use for the path.\nDrawing the path\nfunc applyStrokeProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the renderer’s stroke-related drawing properties to the specified graphics context.\nfunc applyFillProperties(to: CGContext, atZoomScale: MKZoomScale)\nApplies the receiver’s fill-related drawing properties to the specified graphics context.\nfunc strokePath(CGPath, in: CGContext)\nDraws a line along the specified path.\nfunc fillPath(CGPath, in: CGContext)\nFills the area that the specified path encloses.\nvar shouldRasterize: Bool\nA Boolean value that determines whether the overlay path renderer renders the overlay as a bitmap before compositing.\nRelationships\nInherits From\nMKOverlayRenderer\nSee Also\nCustom shape overlays\nclass MKPolygon\nA closed polygon overlay.\nclass MKPolygonRenderer\nThe visual representation of a single polygon overlay.\nclass MKMultiPolygon\nA collection of multiple closed polygon overlays.\nclass MKMultiPolygonRenderer\nThe visual representation of multiple polygon overlays."
  },
  {
    "title": "MKLookAroundBadgePosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundbadgeposition",
    "html": "Topics\nBadge positions\ncase bottomTrailing\nThe value that indicates the bottom-right badge position.\ncase topLeading\nThe value that indicates the top-left badge position.\ncase topTrailing\nThe value that indicates the top-right badge position.\nRelationships\nConforms To\nSendable\nSee Also\nCustomizing the LookAround display\nvar isNavigationEnabled: Bool\nA Boolean value that indicates whether the map’s navigation controls are visible.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsRoadLabels: Bool\nA Boolean value that indicates whether the map display road labels.\nvar badgePosition: MKLookAroundBadgePosition\nA value that indicates the badge’s position on the LookAround view."
  },
  {
    "title": "init(lookingAtCenter:fromDistance:pitch:heading:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/1411079-init",
    "html": "Parameters\ncenterCoordinate\n\nThe coordinate point on which the framework centers the map.\n\ndistance\n\nThe line-of-sight distance from the camera to the center coordinate of the map.\n\npitch\n\nThe viewing angle of the camera, in degrees. A value of 0 results in a camera that points straight down at the map. Angles greater than 0 result in a camera that pitches toward the horizon by the specified number of degrees.\n\nheading\n\nThe heading of the camera (in degrees) relative to true north. The value 0 means that the top edge of the map view corresponds to true north. The value 90 means the top of the map points due east. The value 180 means the top of the map points due south, and so on.\n\nReturn Value\n\nA new camera object that initializes with the specified information.\n\nDiscussion\n\nYou can obtain the altitude of the camera by multiplying distance by the cosine of the pitch value.\n\nSee Also\nGetting a camera object\ninit(lookingAtCenter: CLLocationCoordinate2D, fromEyeCoordinate: CLLocationCoordinate2D, eyeAltitude: CLLocationDistance)\nReturns a new camera object using the specified viewing angle information.\ninit(lookingAt: MKMapItem, forViewSize: CGSize, allowPitch: Bool)\nReturns a new camera object using the specified map item, view size, and pitch."
  },
  {
    "title": "init(lookingAt:forViewSize:allowPitch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/3975730-init",
    "html": "Parameters\nmapItem\n\nAn MKMapItem that indicates the location of the camera.\n\nviewSize\n\nThe view’s size.\n\nallowPitch\n\nA Boolean value that indicates if the camera should the use map’s pitch angle.\n\nSee Also\nGetting a camera object\ninit(lookingAtCenter: CLLocationCoordinate2D, fromEyeCoordinate: CLLocationCoordinate2D, eyeAltitude: CLLocationDistance)\nReturns a new camera object using the specified viewing angle information.\ninit(lookingAtCenter: CLLocationCoordinate2D, fromDistance: CLLocationDistance, pitch: CGFloat, heading: CLLocationDirection)\nReturns a new camera object using the specified distance, pitch, and heading information."
  },
  {
    "title": "init(lookingAtCenter:fromEyeCoordinate:eyeAltitude:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/1411092-init",
    "html": "Parameters\ncenterCoordinate\n\nThe coordinate point on which the framework centers the map.\n\neyeCoordinate\n\nThe coordinate point at which to place the camera. If the value for this parameter is equal to the value in the centerCoordinate parameter, the framework displays the map as if the camera is looking straight down. If this point is offset from the centerCoordinate value, the framework displays the map with an appropriate heading and pitch angle.\n\neyeAltitude\n\nThe altitude (in meters) above the ground at which to place the camera.\n\nReturn Value\n\nA new camera object that initializes with the specified information.\n\nDiscussion\n\nThis method calculates the required pitch and heading angles to accommodate the specified eye position and altitude.\n\nSee Also\nGetting a camera object\ninit(lookingAtCenter: CLLocationCoordinate2D, fromDistance: CLLocationDistance, pitch: CGFloat, heading: CLLocationDirection)\nReturns a new camera object using the specified distance, pitch, and heading information.\ninit(lookingAt: MKMapItem, forViewSize: CGSize, allowPitch: Bool)\nReturns a new camera object using the specified map item, view size, and pitch."
  },
  {
    "title": "MKFeatureVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkfeaturevisibility",
    "html": "Topics\nVisibility options\ncase adaptive\nA constant indicating that the feature adapts to the current map state.\ncase hidden\nA constant indicating that the feature is hidden.\ncase visible\nA constant indicating that the feature is visible.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the compass attributes\nvar mapView: MKMapView?\nThe map view that provides the heading information for the compass button.\nvar compassVisibility: MKFeatureVisibility\nThe visibility of the compass button."
  },
  {
    "title": "centerCoordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera/1411081-centercoordinate",
    "html": "Discussion\n\nThis point represents the coordinate on which the framework centers the map. When the camera pitch is 0, this property also corresponds to the geographic position of the camera. Changing the pitch to a nonzero value moves the camera, but doesn’t affect this property.\n\nSee Also\nConfiguring the viewing angle\nvar heading: CLLocationDirection\nThe heading of the camera (in degrees) relative to true north.\nvar centerCoordinateDistance: CLLocationDistance\nThe distance from the center point of the map to the camera, in meters.\nvar pitch: CGFloat\nThe viewing angle of the camera, in degrees.\nvar altitude: CLLocationDistance\nThe altitude above the ground, in meters.\nDeprecated"
  },
  {
    "title": "init(latitudeDelta:longitudeDelta:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinatespan/1452462-init",
    "html": "Parameters\nlatitudeDelta\n\nThe amount of north-to-south distance (measured in degrees) to use for the span. Unlike longitudinal distances, which vary based on the latitude, one degree of latitude is approximately 111 kilometers (69 miles) at all times.\n\nlongitudeDelta\n\nThe amount of east-to-west distance (measured in degrees) to use for the span. The number of kilometers spanned by a longitude range varies based on the current latitude. For example, one degree of longitude spans a distance of approximately 111 kilometers (69 miles) at the equator but shrinks to 0 kilometers at the poles.\n\nReturn Value\n\nA span with the specified delta values.\n\nSee Also\nCreating a coordinate span\ninit()\nCreates a coordinate span that represents a width and height on a map."
  },
  {
    "title": "excluding(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories/4235411-excluding",
    "html": "Parameters\ncategories\n\nThe points of interest categories to exclude.\n\nReturn Value\n\nReturns a set of point of interest categories to exclude.\n\nSee Also\nModifying the categories to include or exclude\nstatic func excluding([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the array you provide.\nstatic func including([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided array.\nstatic func including(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided list."
  },
  {
    "title": "including(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories/4235414-including",
    "html": "Parameters\ncategories\n\nThe points of interest categories to include.\n\nReturn Value\n\nReturns the points of interest to include.\n\nSee Also\nModifying the categories to include or exclude\nstatic func excluding([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the array you provide.\nstatic func excluding(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the list you provide.\nstatic func including([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided array."
  },
  {
    "title": "MKTileOverlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlay",
    "html": "Overview\n\nYou use tile overlay objects to represent your own tile-based content and to coordinate the display of that content in a map view. Your tiles can supplement the underlying map content or replace it completely. A tile overlay object coordinates the loading and management of the tiles, and a corresponding MKTileOverlayRenderer object handles the actual drawing of the tiles on the map.\n\nYou can use a single tile overlay object to represent all of the tiles at one or more zoom levels of the map. The default tile overlay object uses a template string to build URLs so that it can locate the map tiles it needs. Each URL incorporates the x and y index of the map tile, the zoom level it’s intended for, and the scale factor corresponding to the screen resolution on which to display the tile. The default class lets you specify map tiles with indexes that start in either the upper-left corner or lower-left corner of the map. If you use a different indexing scheme for your tiles, you can also subclass and override the url(forTilePath:) or loadTile(at:result:) methods to map between the requested tile and your custom indexing scheme.\n\nTopics\nCreating a tile overlay\ninit(urlTemplate: String?)\nCreates and returns a tile overlay object using the specified tile-access template.\nAccessing the tile attributes\nvar tileSize: CGSize\nThe size (in pixels) of your tile images.\nvar isGeometryFlipped: Bool\nA Boolean value that indicates the orientation of tile indexes along the y-axis.\nvar minimumZ: Int\nThe minimum zoom level that the tiles of this overlay object support.\nvar maximumZ: Int\nThe maximum zoom level that the tiles of this overlay object support.\nvar canReplaceMapContent: Bool\nA Boolean value that indicates whether the tile content is fully opaque.\nCustomizing the loading of tiles\nvar urlTemplate: String?\nThe template for generating tile image URLs.\nfunc url(forTilePath: MKTileOverlayPath) -> URL\nReturns the URL to use to access the specified tile.\nfunc loadTile(at: MKTileOverlayPath, result: (Data?, Error?) -> Void)\nLoads the specified tile asynchronously.\nstruct MKTileOverlayPath\nValues that specify the path indexes for a single overlay tile.\nRelationships\nInherits From\nNSObject\nConforms To\nMKOverlay\nSee Also\nTiled image overlays\nclass MKTileOverlayRenderer\nThe renderer for a tile overlay that handles the drawing of bitmap images on the map surface."
  },
  {
    "title": "MKScaleView.Alignment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview/alignment",
    "html": "Topics\nAlignment options\ncase leading\nScale measurements begin at the leading edge of the view.\ncase trailing\nScale measurements begin at the trailing edge of the view.\nRelationships\nConforms To\nSendable\nSee Also\nGetting the scale view attributes\nvar mapView: MKMapView?\nThe map view that provides the scale information to the scale view.\nvar scaleVisibility: MKFeatureVisibility\nThe visibility of the scale view.\nvar legendAlignment: MKScaleView.Alignment\nThe alignment of the distance information in the scale view."
  },
  {
    "title": "results | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/1452295-results",
    "html": "Discussion\n\nThis property is nil initially. After a successful query, the search completer sets this property to the array of MKLocalSearchCompletion objects that the query returns. Each new successful query replaces the previous value of this property."
  },
  {
    "title": "polyline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step/1452223-polyline",
    "html": "Discussion\n\nThe polyline object in this property contains the geometry for this step. You can use the polyline object as an overlay in a map view."
  },
  {
    "title": "transportType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step/1452051-transporttype",
    "html": "Discussion\n\nThis property reflects the transport type employed by the step and may differ from the transport type of the overall route.\n\nSee Also\nGetting additional step details\nvar instructions: String\nThe written instructions for following the path that the step represents.\nvar notice: String?\nAdditional notices that apply to the step.\nvar distance: CLLocationDistance\nThe step distance, in meters."
  },
  {
    "title": "geometry | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsonfeature/3113996-geometry",
    "html": "See Also\nFeature properties\nvar identifier: String?\nAn optional identifier the class returns as a string.\nvar properties: Data?\nOptional serialized JSON data that corresponds to the properties key."
  },
  {
    "title": "MKMapSnapshotter.Options | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/options",
    "html": "Overview\n\nAfter creating and configuring an instance of this class, you pass that instance to an MKMapSnapshotter object. The snapshotter uses the configuration options to determine which portion of the map to capture, the viewing angle to use for the camera, and the map’s overall appearance.\n\nIn macOS 10.14 and later, you can apply a light or dark appearance to your map snapshots by modifying the appearance property of your snapshot options. Even if you specify a custom appearance, users can use the Maps app to force all maps to adopt a light appearance.\n\nTopics\nConfiguring the snapshot region\nvar region: MKCoordinateRegion\nThe area of the map that you want to capture.\nvar mapRect: MKMapRect\nThe map rectangle that you want to capture.\nvar camera: MKMapCamera\nThe camera to use when taking the map snapshot.\nConfiguring the map data\nvar preferredConfiguration: MKMapConfiguration\nThe map configuration style to use for snapshots.\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nvar showsBuildings: Bool\nA Boolean that indicates whether the map displays extruded building information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear in the snapshot.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nConfiguring the image output\nvar traitCollection: UITraitCollection\nTraits that determine the appearance of the map snapshot.\nvar size: CGSize\nThe size of the image that you want to create.\nvar appearance: NSAppearance?\nThe visual style (light or dark) to apply to the map when rendering the snapshot image.\nvar scale: CGFloat\nThe scale factor to use when creating the image.\nDeprecated\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nCreating a snapshotter object\ninit(options: MKMapSnapshotter.Options)\nCreates and returns a snapshotter object based on the specified options."
  },
  {
    "title": "cancel() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/1452388-cancel",
    "html": "Discussion\n\nIf the snapshotter isn’t in the process of generating the snapshot, calling this method does nothing.\n\nSee Also\nGenerating a snapshot\nfunc start(completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and delivers the results to the specified block.\nfunc start(with: dispatch_queue_t, completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and executes the resulting block on the specified queue.\ntypealias MKMapSnapshotter.CompletionHandler\nA block that processes the results of a snapshot request.\nvar isLoading: Bool\nA Boolean value that indicates whether the snapshotter is generating an image."
  },
  {
    "title": "init(feature:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/4289034-init",
    "html": "Parameters\nfeature\n\nThe MapFeature to use to initialize the map item request."
  },
  {
    "title": "appearance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/snapshot/3013837-appearance",
    "html": "Discussion\n\nUse this property to determine whether MapKit applied a light or dark appearance to your map.\n\nSee Also\nGetting the snapshot image\nvar image: UIImage\nThe image of the map’s content."
  },
  {
    "title": "traitCollection | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/snapshot/3152226-traitcollection",
    "html": "Discussion\n\nYou configure the traits when you create snapshotter options. See traitCollection."
  },
  {
    "title": "init(including:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter/3143468-init",
    "html": "Parameters\ncategories\n\nAn array of categories to include.\n\nSee Also\nCreating filters\nclass var excludingAll: MKPointOfInterestFilter\nA filter that excludes all point of interest categories.\nclass var includingAll: MKPointOfInterestFilter\nA filter that includes all point of interest categories.\ninit(excluding: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to exclude."
  },
  {
    "title": "feature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/4289033-feature",
    "html": "See Also\nConfiguring the item request\nvar featureAnnotation: MKMapFeatureAnnotation\nThe feature annotation this map item represents."
  },
  {
    "title": "excludes(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter/3143463-excludes",
    "html": "Parameters\ncategory\n\nA point of interest category that the method checks for exclusion in the filter.\n\nReturn Value\n\ntrue if the filter excludes the point of interest category; otherwise, false.\n\nSee Also\nQuerying filter behavior\nfunc includes(MKPointOfInterestCategory) -> Bool\nReturns a Boolean value indicating whether the filter includes the point of interest category."
  },
  {
    "title": "cancel() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/3975740-cancel",
    "html": "See Also\nStarting and stopping requests\nfunc getMapItem(completionHandler: (MKMapItem?, Error?) -> Void)\nRequests a map item and calls the provided completion handler."
  },
  {
    "title": "featureAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/3975742-featureannotation",
    "html": "See Also\nConfiguring the item request\nvar feature: MapFeature\nThe map feature."
  },
  {
    "title": "includes(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter/3143466-includes",
    "html": "Parameters\ncategory\n\nA point of interest category that the method checks for inclusion in the filter.\n\nReturn Value\n\ntrue if the filter includes the point of interest category; otherwise, false.\n\nSee Also\nQuerying filter behavior\nfunc excludes(MKPointOfInterestCategory) -> Bool\nReturns a Boolean value indicating whether the filter excludes the point of interest category."
  },
  {
    "title": "isCancelled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/3975741-iscancelled",
    "html": "See Also\nChecking the status of a request\nvar isLoading: Bool\nA Boolean value that indicates if the request is loading."
  },
  {
    "title": "getMapItem(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/3975743-getmapitem",
    "html": "Parameters\ncompletionHandler\n\nA completion handler the framework calls to indicate the success or failure of the map item request.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can access it as an asynchronous property that has the following declaration:\n\nvar mapItem: MKMapItem { get async throws }\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nStarting and stopping requests\nfunc cancel()\nCancels an in-progress map item request."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureoptions/3976492-init",
    "html": "Parameters\nrawValue\n\nAn integer value that represents one of the available map features."
  },
  {
    "title": "isLoading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/3975745-isloading",
    "html": "See Also\nChecking the status of a request\nvar isCancelled: Bool\nA Boolean value that indicates if the cancellation of the request was successful."
  },
  {
    "title": "featureType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation/3975732-featuretype",
    "html": "See Also\nCustomizing the annotation\nenum MKMapFeatureAnnotation.FeatureType\nValues that describe the kinds of features visible on the map.\nvar iconStyle: MKIconStyle?\nThe icon style of a feature annotation.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe feature annotation’s point of interest category."
  },
  {
    "title": "MKMapFeatureAnnotation.FeatureType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation/featuretype",
    "html": "Topics\nKinds of annotations\ncase physicalFeature\nA physical feature on the Earth such as a mountain range, river, or ocean basin.\ncase pointOfInterest\nA point of interest, such as a museum, cafe, park, or school.\ncase territory\nA territorial or regional boundary, such as a national border, a state boundary, or a neighborhood.\nRelationships\nConforms To\nSendable\nSee Also\nCustomizing the annotation\nvar featureType: MKMapFeatureAnnotation.FeatureType\nThe type of map feature this annotation represents.\nvar iconStyle: MKIconStyle?\nThe icon style of a feature annotation.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe feature annotation’s point of interest category."
  },
  {
    "title": "init(coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951122-init",
    "html": "Parameters\ncoordinate\n\nA CLLocationCoordinate2D coordinate that indicates the location for the LookAround scene.\n\nSee Also\nCreating a LookAround scene\ninit(mapItem: MKMapItem)\nCreates a LookAround scene with the location described by the specified map item."
  },
  {
    "title": "init(mapItem:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951123-init",
    "html": "Parameters\nmapItem\n\nAn MKMapItem that describes the location for the LookAround scene.\n\nSee Also\nCreating a LookAround scene\ninit(coordinate: CLLocationCoordinate2D)\nCreates a LookAround scene at the specified coordinates."
  },
  {
    "title": "pointOfInterestCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation/3975734-pointofinterestcategory",
    "html": "See Also\nCustomizing the annotation\nvar featureType: MKMapFeatureAnnotation.FeatureType\nThe type of map feature this annotation represents.\nenum MKMapFeatureAnnotation.FeatureType\nValues that describe the kinds of features visible on the map.\nvar iconStyle: MKIconStyle?\nThe icon style of a feature annotation."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951120-coordinate",
    "html": "See Also\nSpecifying the request’s location\nvar mapItem: MKMapItem?\nA map item that describes the location of the LookAround scene."
  },
  {
    "title": "mapItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951125-mapitem",
    "html": "See Also\nSpecifying the request’s location\nvar coordinate: CLLocationCoordinate2D\nA coordinate value that describes the location of the LookAround scene."
  },
  {
    "title": "cancel() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951118-cancel",
    "html": "See Also\nStarting and stopping scene requests\nfunc getSceneWithCompletionHandler((MKLookAroundScene?, Error?) -> Void)\nRequests a LookAround scene and calls the specified completion handler."
  },
  {
    "title": "init(scene:options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/3951135-init",
    "html": "Parameters\nscene\n\nThe MKLookAroundScene to use as the source for the snapshot.\n\noptions\n\nThe available MKLookAroundSnapshotter.Options."
  },
  {
    "title": "MKLookAroundSnapshotter.Options | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/options",
    "html": "Topics\nCustomizing Snaphot Appearance\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter to use to customize what map features are visible in the snapshot.\nvar size: CGSize\nThe requested size of the snapshot image.\nvar traitCollection: UITraitCollection\nA collection of traits that describes orientation and other characteristics of the snapshot.\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "MKLookAroundSnapshotter.Snapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter/snapshot",
    "html": "Topics\nAccessing the Snapshot Image\nvar image: UIImage\nThe image returned by the snapshot request.\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "cafe | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143428-cafe",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "evCharger | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143431-evcharger",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "fitnessCenter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143433-fitnesscenter",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "gasStation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143435-gasstation",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "marina | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143440-marina",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "hotel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143437-hotel",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "laundry | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143438-laundry",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "library | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143439-library",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "movieTheater | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143441-movietheater",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "park | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143445-park",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "parking | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143446-parking",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "postOffice | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143450-postoffice",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "restaurant | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143453-restaurant",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "loadingThrottled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2330508-loadingthrottled",
    "html": "Discussion\n\nThis error can occur if an app makes frequent requests for data over a short period of time.\n\nSee Also\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nstatic var unknown: MKError.Code\nAn unknown error occurred.\nenum MKError.Code\nError constants for the MapKit framework."
  },
  {
    "title": "restroom | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143454-restroom",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "school | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory/3143455-school",
    "html": "See Also\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos."
  },
  {
    "title": "directionsNotFound | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2330510-directionsnotfound",
    "html": "See Also\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nstatic var unknown: MKError.Code\nAn unknown error occurred.\nenum MKError.Code\nError constants for the MapKit framework."
  },
  {
    "title": "decodingFailed | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3113878-decodingfailed",
    "html": "See Also\nError codes\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nstatic var unknown: MKError.Code\nAn unknown error occurred.\nenum MKError.Code\nError constants for the MapKit framework."
  },
  {
    "title": "placemarkNotFound | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2330509-placemarknotfound",
    "html": "See Also\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nstatic var unknown: MKError.Code\nAn unknown error occurred.\nenum MKError.Code\nError constants for the MapKit framework."
  },
  {
    "title": "serverFailure | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/2330512-serverfailure",
    "html": "See Also\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var unknown: MKError.Code\nAn unknown error occurred.\nenum MKError.Code\nError constants for the MapKit framework."
  },
  {
    "title": "code | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3726616-code",
    "html": "See Also\nAccessing error properties\nvar errorCode: Int\nThe error code within the domain.\nvar userInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar errorUserInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar localizedDescription: String\nA string that contains a localized description of the error, appropriate for displaying to the user.\nstatic var errorDomain: String\nThe error domain."
  },
  {
    "title": "MapMarker | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapmarker",
    "html": "Deprecated\n\nUse Marker along with Map initializers that take a MapContentBuilder instead.\n\nOverview\n\nCreate a Map and display marker annotations by returning a view that conforms to MapAnnotationProtocol, such as MapMarker, from the trailing closure of init(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:) or init(mapRect:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:). Items you provide as a collection to the source annotations need to conform to Identifiable.\n\nFor example, the following code displays a map with a marker annotation:\n\nstruct IdentifiablePlace: Identifiable {\n    let id: UUID\n    let location: CLLocationCoordinate2D\n    init(id: UUID = UUID(), lat: Double, long: Double) {\n        self.id = id\n        self.location = CLLocationCoordinate2D(\n            latitude: lat,\n            longitude: long)\n    }\n}\n\n\nstruct PinAnnotationMapView: View {\n    let place: IdentifiablePlace\n    @State var region: MKCoordinateRegion\n\n\n    var body: some View {\n        Map(coordinateRegion: $region,\n            annotationItems: [place])\n        { place in\n            MapMarker(coordinate: place.location,\n                   tint: Color.purple)\n        }\n    }\n}\n\n\n\n\nTopics\nCreating a map marker\ninit(coordinate: CLLocationCoordinate2D, tint: Color?)\nCreates a marker annotation at the map location you specify.\nRelationships\nConforms To\nMapAnnotationProtocol\nSee Also\nAnnotations in SwiftUI\nstruct MapPin\nA pin-shaped annotation used to indicate a location on a map.\nDeprecated\nstruct MapAnnotation\nA customizable annotation that marks a map location.\nDeprecated\nprotocol MapAnnotationProtocol\nA protocol that represents the possible return types of annotations."
  },
  {
    "title": "Annotating a Map with Custom Data | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/mapkit_annotations/annotating_a_map_with_custom_data",
    "html": "Overview\n\nThis sample code project demonstrates how to display a map with custom annotations, each with a customized callout provided by its MKAnnotationView. In addition, the Map Callouts sample project shows how you can extend annotations with custom views, strings, and callout accessory views using MKAnnotation and MKAnnotationView.\n\nProvide an Annotation\n\nAnnotations offer a way to highlight specific coordinates on a map and provide additional information. You can use annotations to call out addresses, points of interest, and particular destinations.\n\nTo display an annotation on a map, your app must provide two distinct objects: an annotation object and an annotation view.\n\nAn annotation object conforms to the MKAnnotation protocol and manages the data for the annotation, such as the coordinate, title, and subtitle properties as shown in this section of the sample code.\n\nclass SanFranciscoAnnotation: NSObject, MKAnnotation {\n    \n    // This property must be key-value observable, which the `@objc dynamic` attributes provide.\n    @objc dynamic var coordinate = CLLocationCoordinate2D(latitude: 37.779_379, longitude: -122.418_433)\n    \n    // Required if you set the annotation view's `canShowCallout` property to `true`\n    var title: String? = NSLocalizedString(\"SAN_FRANCISCO_TITLE\", comment: \"SF annotation\")\n    \n    // This property defined by `MKAnnotation` is not required.\n    var subtitle: String? = NSLocalizedString(\"SAN_FRANCISCO_SUBTITLE\", comment: \"SF annotation\")\n}\n\n\nDerived from the MKAnnotationView class, an annotation view draws the visual representation of the annotation on the map surface. Register annotation views with the MKMapView so the map view can create and efficiently reuse them. Use a default annotation view if you need to customize the content with a callout, or change the default marker. Use a custom annotation view if you want to have a completely custom view appear for the annotation.\n\nprivate func registerMapAnnotationViews() {\n    mapView.register(MKMarkerAnnotationView.self, forAnnotationViewWithReuseIdentifier: NSStringFromClass(BridgeAnnotation.self))\n    mapView.register(CustomAnnotationView.self, forAnnotationViewWithReuseIdentifier: NSStringFromClass(CustomAnnotation.self))\n    mapView.register(MKAnnotationView.self, forAnnotationViewWithReuseIdentifier: NSStringFromClass(SanFranciscoAnnotation.self))\n    mapView.register(MKMarkerAnnotationView.self, forAnnotationViewWithReuseIdentifier: NSStringFromClass(FerryBuildingAnnotation.self))\n}\n\n\nWhen an annotation comes into view, the map view asks the MKMapViewDelegate to provide the appropriate annotation view.\n\nfunc mapView(_ mapView: MKMapView, viewFor annotation: MKAnnotation) -> MKAnnotationView? {\n    \n    guard !annotation.isKind(of: MKUserLocation.self) else {\n        // Make a fast exit if the annotation is the `MKUserLocation`, as it's not an annotation view we wish to customize.\n        return nil\n    }\n    \n    var annotationView: MKAnnotationView?\n    \n    if let annotation = annotation as? BridgeAnnotation {\n        annotationView = setupBridgeAnnotationView(for: annotation, on: mapView)\n    } else if let annotation = annotation as? CustomAnnotation {\n        annotationView = setupCustomAnnotationView(for: annotation, on: mapView)\n    } else if let annotation = annotation as? SanFranciscoAnnotation {\n        annotationView = setupSanFranciscoAnnotationView(for: annotation, on: mapView)\n    } else if let annotation = annotation as? FerryBuildingAnnotation {\n        annotationView = setupFerryBuildingAnnotationView(for: annotation, on: mapView)\n    }\n    \n    return annotationView\n}\n\n\nBefore returning from the delegate call providing the annotation view, you configure the annotation view with any customizations required for the annotation. For example, use a flag icon for an annotation view representing San Francisco.\n\nprivate func setupSanFranciscoAnnotationView(for annotation: SanFranciscoAnnotation, on mapView: MKMapView) -> MKAnnotationView {\n    let reuseIdentifier = NSStringFromClass(SanFranciscoAnnotation.self)\n    let flagAnnotationView = mapView.dequeueReusableAnnotationView(withIdentifier: reuseIdentifier, for: annotation)\n    \n    flagAnnotationView.canShowCallout = true\n    \n    // Provide the annotation view's image.\n    let image = #imageLiteral(resourceName: \"flag\")\n    flagAnnotationView.image = image\n    \n    // Provide the left image icon for the annotation.\n    flagAnnotationView.leftCalloutAccessoryView = UIImageView(image: #imageLiteral(resourceName: \"sf_icon\"))\n    \n    // Offset the flag annotation so that the flag pole rests on the map coordinate.\n    let offset = CGPoint(x: image.size.width / 2, y: -(image.size.height / 2) )\n    flagAnnotationView.centerOffset = offset\n    \n    return flagAnnotationView\n}\n\n\nCreate Callouts\n\nA callout is a standard or custom view that can appear with an annotation view. A standard callout displays the annotation’s title, and it can display additional content such as a subtitle, images, and a control.\n\nA callout can be customized in multiple ways. To place a disclosure button inside a callout:\n\nlet rightButton = UIButton(type: .detailDisclosure)\nmarkerAnnotationView.rightCalloutAccessoryView = rightButton\n\n\nWhen the disclosure button is tapped, MapKit calls mapView(_:annotationView:calloutAccessoryControlTapped:) for the app to handle the tap event.\n\nCallouts can also include images, such as the detailCalloutAccessoryView:\n\n// Provide an image view to use as the accessory view's detail view.\nmarkerAnnotationView.detailCalloutAccessoryView = UIImageView(image: #imageLiteral(resourceName: \"ferry_building\"))\n\n\nSee Also\nLocation annotations\nclass MKPointAnnotation\nA string-based piece of location-specific data that you apply to a specific point on a map.\nclass MKMarkerAnnotationView\nAn annotation view that displays a balloon-shaped marker at the designated location.\nclass MKPinAnnotationView\nAn annotation view that displays a pin image on the map.\nDeprecated"
  },
  {
    "title": "MKMultiPolylineRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolylinerenderer",
    "html": "Overview\n\nUse the multipolyline renderer to provide the styling of multiple polylines that you create using MKMultiPolyline.\n\nTopics\nCreating a multipolyline renderer\ninit(multiPolyline: MKMultiPolyline)\nCreates an object that renders a visual representation of multiple polyline objects.\nAccessing the multipolyline object\nvar multiPolyline: MKMultiPolyline\nAn object that represents multiple polyline shapes, each consisting of one or more connected line segments.\nRelationships\nInherits From\nMKOverlayPathRenderer\nSee Also\nMultiple segment lines\nclass MKPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nclass MKGeodesicPolyline\nAn open polygon overlay consisting of line segments that follow the contours of the Earth to create the shortest path between the specified points.\nclass MKMultiPolyline\nA collection of multipolyline shapes, each consisting of one or more connected line segments.\nclass MKPolylineRenderer\nA visual representation of any polyline overlay object.\nclass MKGradientPolylineRenderer\nA visual representation of any polyline overlay object with a gradient."
  },
  {
    "title": "isDirectionsRequest(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433150-isdirectionsrequest",
    "html": "Parameters\nurl\n\nThe URL the system provides to your app.\n\nReturn Value\n\ntrue if the URL contains a directions request that your app needs to display to the user, or false if it doesn’t.\n\nSee Also\nCreating a directions request object\ninit(contentsOf: URL)\nCreates and returns a directions request object using the specified URL.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "init(contentsOf:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433158-init",
    "html": "Parameters\nurl\n\nThe URL provided to your app.\n\nReturn Value\n\nAn initialized directions request object.\n\nDiscussion\n\nYou should use the isDirectionsRequest(_:) method to verify that the specified URL is of the correct format before calling this method to initialize the object.\n\nSee Also\nCreating a directions request object\nclass func isDirectionsRequest(URL) -> Bool\nReturns a Boolean value that indicates whether the specified URL contains a directions request."
  },
  {
    "title": "cancel() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/1452656-cancel",
    "html": "Discussion\n\nAfter canceling a request, you can call the calculate(completionHandler:) method again (if you want) to restart the request process.\n\nSee Also\nManaging the request\nvar isCalculating: Bool\nA Boolean value that indicates whether a request is in process."
  },
  {
    "title": "calculateETA(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/1452736-calculateeta",
    "html": "Parameters\ncompletionHandler\n\nThe block to execute when the travel-time estimate is ready or when an error occurs. This parameter can’t be nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc calculateETA() async throws -> MKDirections.ETAResponse\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThis method initiates a request for a travel-time estimate and calls your completion handler block with the results. Travel-time estimates take much less time to generate than directions, so use this method in situations where you want a time estimate only. The method executes your completion handler on your app’s main thread. The implementation of your handler needs to check for errors and then incorporate the response data as appropriate.\n\nIf you call this method while a previous request is in process, this method calls your completion handler with an error. You can determine whether a request is in process by checking the value of the isCalculating property. You can also cancel a request as necessary.\n\nSee Also\nGetting the ETA\ntypealias MKDirections.ETAHandler\nThe block to use for processing travel-time information.\nclass MKDirections.ETAResponse\nThe travel-time information that Apple servers return."
  },
  {
    "title": "MKShape | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkshape",
    "html": "Overview\n\nYou can’t instantiate this class directly; use a subclass instead. Subclasses are responsible for defining the geometry of the shape and providing an appropriate value for the coordinate property they inherit from the MKAnnotation protocol.\n\nTopics\nAccessing the shape attributes\nvar title: String?\nThe title of the shape annotation.\nvar subtitle: String?\nThe subtitle of the shape annotation.\nRelationships\nInherits From\nNSObject\nConforms To\nMKAnnotation\nSee Also\nShared behavior\nprotocol MKOverlay\nAn interface for associating content with a specific map region.\nclass MKOverlayRenderer\nThe shared infrastructure for drawing overlays on the map surface.\nclass MKMultiPoint\nAn abstract class that defines the common behavior that open and closed polygon overlays share.\nclass MKPlacemark\nA user-friendly description of a location on the map."
  },
  {
    "title": "calculate(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/1452078-calculate",
    "html": "Parameters\ncompletionHandler\n\nThe block to execute when the directions are ready or when an error occurs. This parameter can’t be nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc calculate() async throws -> MKDirections.Response\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nThis method initiates the request for directions and calls your completion handler block with the results. The method executes your completion handler on your app’s main thread. The implementation of your handler needs to check for errors and then incorporate the response data as appropriate.\n\nIf you call this method while a previous request is in process, this method calls your completion handler with an error. You can determine whether a request is in process by checking the value of the isCalculating property. You can also cancel a request as necessary.\n\nSee Also\nGetting the directions\ntypealias MKDirections.DirectionsHandler\nThe block to use for processing the requested route information.\nclass MKDirections.Response\nThe route information that Apple servers return in response to your request for directions.\nRelated Documentation\nvar isCalculating: Bool\nA Boolean value that indicates whether a request is in process.\nfunc cancel()\nCancels a pending request."
  },
  {
    "title": "MKPolyline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolyline",
    "html": "Overview\n\nThe points connect end-to-end in the order that you provide them. The first and last points don’t automatically connect to each other.\n\nTopics\nCreating a polyline overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates a polyline object from the specified set of map points.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates a polyline object from the specified set of coordinates.\nRelationships\nInherits From\nMKMultiPoint\nConforms To\nMKGeoJSONObject\nMKOverlay\nSee Also\nMultiple segment lines\nclass MKGeodesicPolyline\nAn open polygon overlay consisting of line segments that follow the contours of the Earth to create the shortest path between the specified points.\nclass MKMultiPolyline\nA collection of multipolyline shapes, each consisting of one or more connected line segments.\nclass MKPolylineRenderer\nA visual representation of any polyline overlay object.\nclass MKMultiPolylineRenderer\nA visual representation of multiple polyline overlay objects.\nclass MKGradientPolylineRenderer\nA visual representation of any polyline overlay object with a gradient."
  },
  {
    "title": "MKGeodesicPolyline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeodesicpolyline",
    "html": "Overview\n\nA geodesic polyline contains a set of points that connect end-to-end in the order that you provide them. The first and last points don’t automatically connect to each other. When displaying on a two-dimensional map view, the line segment between any two points may appear curved.\n\nTopics\nCreating a geodesic polyline overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates and returns a geodesic polyline using the specified map points.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates and returns a geodesic polyline using the specified coordinates.\nRelationships\nInherits From\nMKPolyline\nSee Also\nMultiple segment lines\nclass MKPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nclass MKMultiPolyline\nA collection of multipolyline shapes, each consisting of one or more connected line segments.\nclass MKPolylineRenderer\nA visual representation of any polyline overlay object.\nclass MKMultiPolylineRenderer\nA visual representation of multiple polyline overlay objects.\nclass MKGradientPolylineRenderer\nA visual representation of any polyline overlay object with a gradient."
  },
  {
    "title": "MKCircle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcircle",
    "html": "Overview\n\nThis class defines the portion of the map that the overlay covers. To draw the region, return an MKCircleRenderer object from the mapView(_:rendererFor:) method of your map view delegate.\n\nTopics\nCreating a circle overlay\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates and returns a circle object using the specified coordinate and radius.\ninit(mapRect: MKMapRect)\nCreates and returns a circle object that derives the circular area from the specified rectangle.\nAccessing the overlay’s attributes\nvar coordinate: CLLocationCoordinate2D\nThe center point of the circular area, specified as a latitude and longitude.\nvar radius: CLLocationDistance\nThe radius of the circular area, in meters.\nvar boundingMapRect: MKMapRect\nThe bounding rectangle of the circular area.\nRelationships\nInherits From\nMKShape\nConforms To\nMKOverlay\nSee Also\nCircular overlays\nclass MKCircleRenderer\nThe visual representation of a circular overlay."
  },
  {
    "title": "MKCircleRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcirclerenderer",
    "html": "Overview\n\nThis renderer fills and strokes the circular region that the overlay object represents. You can change the color and other drawing attributes of the circle by modifying the properties it inherits from the main class. You typically use this class as-is and don’t subclass it.\n\nYou create an instance of this class in your map view delegate’s mapView(_:rendererFor:) method.\n\nTopics\nCreating a circle renderer\ninit(circle: MKCircle)\nCreates a new overlay view using the specified circle overlay object.\nAccessing the overlay object\nvar circle: MKCircle\nThe circle overlay object that contains the information for drawing the overlay.\nAccessing the stroke\nvar strokeStart: CGFloat\nThe unit distance along the circle where the stroke starts.\nvar strokeEnd: CGFloat\nThe unit distance along the circle where the stroke ends.\nRelationships\nInherits From\nMKOverlayPathRenderer\nSee Also\nCircular overlays\nclass MKCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate."
  },
  {
    "title": "pointOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/resulttype/3143408-pointofinterest",
    "html": "See Also\nType properties\nstatic var address: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes address completions in results.\nstatic var query: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes query completions in results."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/resulttype/3143823-init",
    "html": "Parameters\nrawValue\n\nThe unsigned integer value of the direction transport type."
  },
  {
    "title": "subtitleHighlightRanges | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompletion/1452489-subtitlehighlightranges",
    "html": "Discussion\n\nThis property contains an array of NSValue objects, each of which contains an NSRange type defining a range of characters in the subtitle string. Use this property to identify the ranges of characters in the subtitle string that you want to highlight. Highlighting the matching text of a search completion is optional, but it’s a best practice for providing helpful information to the user.\n\nSee Also\nGetting the search completions\nvar title: String\nThe title string associated with the point of interest.\nvar subtitle: String\nThe subtitle (if any) associated with the point of interest.\nvar titleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the title string."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1452684-name",
    "html": "Discussion\n\nThe framework localizes the string in this property according to the user’s language preferences. You can display this string to the user from your app’s user interface so that the user can distinguish one route from another.\n\nThe string itself describes the route using one of the route’s significant features. For example, a route that uses a major highway for a significant portion of the route might use that highway for its name.\n\nSee Also\nGetting additional route details\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type."
  },
  {
    "title": "resultTypes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/3143405-resulttypes",
    "html": "See Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "filterType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/1452150-filtertype",
    "html": "Deprecated\n\nUse resultTypes instead.\n\nDiscussion\n\nUse this property to determine whether you want completions that represent points-of-interest or whether completions might yield additional relevant query strings.\n\nSee Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "isSearching | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/1452272-issearching",
    "html": "See Also\nCanceling the query\nfunc cancel()\nCancels an in-progress search operation."
  },
  {
    "title": "instructions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step/1452447-instructions",
    "html": "Discussion\n\nThe framework localizes the string in this property according to the user’s language preferences. You can present this string to the user from your app’s interface.\n\nSee Also\nGetting additional step details\nvar notice: String?\nAdditional notices that apply to the step.\nvar distance: CLLocationDistance\nThe step distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe transport type of the step."
  },
  {
    "title": "notice | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step/1452347-notice",
    "html": "Discussion\n\nNotices may include legal information or warning notices that apply to the step. For example, if the step crosses railroad tracks, it might contain a notice that warns the user not to cross the tracks when the lights are flashing.\n\nSee Also\nGetting additional step details\nvar instructions: String\nThe written instructions for following the path that the step represents.\nvar distance: CLLocationDistance\nThe step distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe transport type of the step."
  },
  {
    "title": "decode(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsondecoder/3113994-decode",
    "html": "Parameters\ndata\n\nAn NSData object that contains the JSON to decode.\n\nReturn Value\n\nAn array of MKGeoJSONObject objects, or an error if the decoder encounters an issue."
  },
  {
    "title": "properties | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsonfeature/3113998-properties",
    "html": "Discussion\n\nMapKit exposes these optional properties but treats them as opaque.\n\nSee Also\nFeature properties\nvar geometry: [MKShape & MKGeoJSONObject]\nThe shape or shapes associated with the GeoJSON feature.\nvar identifier: String?\nAn optional identifier the class returns as a string."
  },
  {
    "title": "transportType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1452674-transporttype",
    "html": "Discussion\n\nThis property reflects the primary transport type used for the route. Individual steps of the route might use different transport types.\n\nSee Also\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds."
  },
  {
    "title": "identifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsonfeature/3113997-identifier",
    "html": "Discussion\n\nNote that the GeoJSON specification states that the identifier can be a number or a string. However, this identifier returns as a string.\n\nSee Also\nFeature properties\nvar geometry: [MKShape & MKGeoJSONObject]\nThe shape or shapes associated with the GeoJSON feature.\nvar properties: Data?\nOptional serialized JSON data that corresponds to the properties key."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3726617-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nSee Also\nComparing errors\nstatic func != (MKError, MKError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nstatic func == (MKError, MKError) -> Bool\nIndicates whether two errors are equivalent.\nvar hashValue: Int\nThe hash value of the error."
  },
  {
    "title": "init(_:userInfo:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/3726619-init",
    "html": "Parameters\ncode\n\nThe error code.\n\nuserInfo\n\nKeys and values for the error."
  },
  {
    "title": "init(options:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/1452090-init",
    "html": "Parameters\noptions\n\nThe options to use when capturing the map imagery. See MKMapSnapshotter.Options. This parameter may not be nil.\n\nReturn Value\n\nAn initialized snapshotter object.\n\nSee Also\nCreating a snapshotter object\nclass MKMapSnapshotter.Options\nThe options the snapshotter initializer uses to create a snapshotter to capture map-based imagery."
  },
  {
    "title": "init(excluding:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter/3143467-init",
    "html": "Parameters\ncategories\n\nAn array of categories to exclude.\n\nSee Also\nCreating filters\nclass var excludingAll: MKPointOfInterestFilter\nA filter that excludes all point of interest categories.\nclass var includingAll: MKPointOfInterestFilter\nA filter that includes all point of interest categories.\ninit(including: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to include."
  },
  {
    "title": "start(with:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/1452419-start",
    "html": "Parameters\nqueue\n\nThe dispatch queue on which to execute the block that the completionHandler parameter specifies.\n\ncompletionHandler\n\nThe block to call with the resulting snapshot. This block can’t be nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc start(with queue: dispatch_queue_t) async throws -> MKMapSnapshotter.Snapshot\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nCall this method to begin generating a snapshot image based on the specified parameters. This method executes the request asynchronously. When rendering is complete, the snapshotter delivers the results to your block on the dispatch queue in the queue parameter.\n\nThe snapshotter delivers the final image to your app only when it’s running in the foreground. The snapshotter needs to render the final image while your app is in the foreground. If you start generating a snapshot while the app is in the background, or if your app moves to the background while a snapshot is in progress, this behavior delays the delivery of the snapshot until your app returns to the foreground.\n\nIn macOS, this method creates both standard and high-resolution representations of the map data and includes both in the returned image object. In iOS, you need to specify the image scale you want using the snapshot options, which defaults to the scale on the current device.\n\nSee Also\nGenerating a snapshot\nfunc start(completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and delivers the results to the specified block.\ntypealias MKMapSnapshotter.CompletionHandler\nA block that processes the results of a snapshot request.\nfunc cancel()\nCancels the request to create a snapshot.\nvar isLoading: Bool\nA Boolean value that indicates whether the snapshotter is generating an image."
  },
  {
    "title": "MKMapSnapshotter.CompletionHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/completionhandler",
    "html": "Parameters\nsnapshot\n\nThe image data that the snapshotter generates, or nil if an error occurs.\n\nerror\n\nThe error that occurs, or nil if the framework generates the snapshot successfully.\n\nSee Also\nGenerating a snapshot\nfunc start(completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and delivers the results to the specified block.\nfunc start(with: dispatch_queue_t, completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and executes the resulting block on the specified queue.\nfunc cancel()\nCancels the request to create a snapshot.\nvar isLoading: Bool\nA Boolean value that indicates whether the snapshotter is generating an image."
  },
  {
    "title": "start(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/1452479-start",
    "html": "Parameters\ncompletionHandler\n\nThe block to call with the resulting snapshot. This snapshotter executes this block on the app’s main thread and can’t be nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc start() async throws -> MKMapSnapshotter.Snapshot\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nCall this method to begin generating a snapshot image based on the specified parameters. This method executes the request asynchronously.\n\nThe snapshotter delivers the final image to your app only when it’s running in the foreground. The snapshotter needs to render the final image while your app is in the foreground. If you start generating a snapshot while the app is in the background, or if your app moves to the background while a snapshot is in progress, this behavior delays the delivery of the snapshot until your app returns to the foreground.\n\nIn macOS, this method creates both standard and high-resolution representations of the map data and includes both in the returned image object. In iOS, you need to specify the image scale you want using the snapshot options, which defaults to the scale on the current device.\n\nSee Also\nGenerating a snapshot\nfunc start(with: dispatch_queue_t, completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and executes the resulting block on the specified queue.\ntypealias MKMapSnapshotter.CompletionHandler\nA block that processes the results of a snapshot request.\nfunc cancel()\nCancels the request to create a snapshot.\nvar isLoading: Bool\nA Boolean value that indicates whether the snapshotter is generating an image."
  },
  {
    "title": "isLoading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/1451960-isloading",
    "html": "See Also\nGenerating a snapshot\nfunc start(completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and delivers the results to the specified block.\nfunc start(with: dispatch_queue_t, completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and executes the resulting block on the specified queue.\ntypealias MKMapSnapshotter.CompletionHandler\nA block that processes the results of a snapshot request.\nfunc cancel()\nCancels the request to create a snapshot."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/snapshot/1452701-image",
    "html": "Discussion\n\nThe image object contains representations appropriate for display on both Retina and standard displays.\n\nSee Also\nGetting the snapshot image\nvar appearance: NSAppearance\nThe visual style that MapKit uses when rendering the snapshot."
  },
  {
    "title": "point(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/snapshot/1452523-point",
    "html": "Parameters\ncoordinate\n\nA map coordinate that you want to convert.\n\nReturn Value\n\nThe point in the image’s coordinate space that corresponds to the map location.\n\nDiscussion\n\nIf you want to display additional views or content on top of the image, you can use this method to find an appropriate point at which to draw those items."
  },
  {
    "title": "includingAll | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter/3143465-includingall",
    "html": "Discussion\n\nYou can use includingAll to include all points of interest in your map view without listing all the categories individually.\n\nSee Also\nCreating filters\nclass var excludingAll: MKPointOfInterestFilter\nA filter that excludes all point of interest categories.\ninit(excluding: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to exclude.\ninit(including: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to include."
  },
  {
    "title": "excludingAll | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter/3143464-excludingall",
    "html": "Discussion\n\nYou can use excludingAll to remove all points of interest from your map view without listing all the categories individually.\n\nSee Also\nCreating filters\nclass var includingAll: MKPointOfInterestFilter\nA filter that includes all point of interest categories.\ninit(excluding: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to exclude.\ninit(including: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to include."
  },
  {
    "title": "physicalFeatures | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureoptions/3975747-physicalfeatures",
    "html": "See Also\nSelecting interactive map features\nstatic var pointsOfInterest: MKMapFeatureOptions\nThe option that represents points of interest such as museums, cafes, parks, or schools.\nstatic var territories: MKMapFeatureOptions\nThe option that represents territorial boundaries such as a national border, a state boundary, or a neighborhood."
  },
  {
    "title": "territories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureoptions/3975749-territories",
    "html": "See Also\nSelecting interactive map features\nstatic var physicalFeatures: MKMapFeatureOptions\nThe option that represents physical map features such as mountain ranges, rivers, and ocean basins.\nstatic var pointsOfInterest: MKMapFeatureOptions\nThe option that represents points of interest such as museums, cafes, parks, or schools."
  },
  {
    "title": "init(mapFeatureAnnotation:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest/3975744-init",
    "html": "Parameters\nmapFeatureAnnotation\n\nThe MKMapFeatureAnnotation to use to initialize the map item request."
  },
  {
    "title": "pointsOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureoptions/3975748-pointsofinterest",
    "html": "See Also\nSelecting interactive map features\nstatic var physicalFeatures: MKMapFeatureOptions\nThe option that represents physical map features such as mountain ranges, rivers, and ocean basins.\nstatic var territories: MKMapFeatureOptions\nThe option that represents territorial boundaries such as a national border, a state boundary, or a neighborhood."
  },
  {
    "title": "isCancelled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest/3951119-iscancelled",
    "html": "See Also\nMonitoring the progress of scene requests\nvar isLoading: Bool\nA Boolean value that indicates whether a scene request is loading."
  },
  {
    "title": "MKLaunchOptionsShowsTrafficKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsshowstraffickey",
    "html": "Discussion\n\nThe value of this key is an NSNumber object that contains a Boolean value. If you don’t specify this key, the Maps app uses its current settings to determine whether to display traffic.\n\nSee Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display."
  },
  {
    "title": "transportType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1452616-transporttype",
    "html": "Discussion\n\nYou specify the desired transportation type in your MKDirections.Request object. If you specified any, this property contains the transportation type used to generate the estimated information.\n\nSee Also\nGetting the travel information\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar expectedDepartureDate: Date\nThe expected departure time.\nvar expectedArrivalDate: Date\nThe expected arrival time.\nvar distance: CLLocationDistance\nThe expected travel distance, in meters."
  },
  {
    "title": "source | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/response/1452261-source",
    "html": "Discussion\n\nThe item in this property may contain additional details that aren’t in the original item you use to create the MKDirections.Request object.\n\nSee Also\nGetting the end points\nvar destination: MKMapItem\nThe end point of the route."
  },
  {
    "title": "scaleVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview/2890254-scalevisibility",
    "html": "Discussion\n\nYou can configure a scale view to be visible all the time or only when the scale of the map changes.\n\nSee Also\nGetting the scale view attributes\nvar mapView: MKMapView?\nThe map view that provides the scale information to the scale view.\nvar legendAlignment: MKScaleView.Alignment\nThe alignment of the distance information in the scale view.\nenum MKScaleView.Alignment\nConstants indicating whether measurements begin at the leading or trailing edge of the view."
  },
  {
    "title": "mapView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview/2890257-mapview",
    "html": "See Also\nGetting the scale view attributes\nvar scaleVisibility: MKFeatureVisibility\nThe visibility of the scale view.\nvar legendAlignment: MKScaleView.Alignment\nThe alignment of the distance information in the scale view.\nenum MKScaleView.Alignment\nConstants indicating whether measurements begin at the leading or trailing edge of the view."
  },
  {
    "title": "MKDirectionsTransportType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirectionstransporttype",
    "html": "Topics\nTransport types\nstatic var automobile: MKDirectionsTransportType\nDirections suitable for use while driving.\nstatic var walking: MKDirectionsTransportType\nDirections suitable for a pedestrian.\nstatic var transit: MKDirectionsTransportType\nDirections suitable for public transportation.\nstatic var any: MKDirectionsTransportType\nDirections suitable for any transportation option.\nCreating direction transport types\ninit(rawValue: UInt)\nCreates a direction transport type using a raw unsigned integer value.\nRelationships\nConforms To\nOptionSet\nSendable"
  },
  {
    "title": "init(mapView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview/2890255-init",
    "html": "Parameters\nmapView\n\nThe map to associate with the scale view. The scale view automatically updates to reflect the scale of this map.\n\nReturn Value\n\nAn initialized scale view."
  },
  {
    "title": "source | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433144-source",
    "html": "Discussion\n\nUse the setter method setSource: to set this property.\n\nSee Also\nAccessing the start and end points\nvar destination: MKMapItem?\nThe end point for routing directions."
  },
  {
    "title": "MKError.Code.loadingThrottled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror/code/loadingthrottled",
    "html": "Discussion\n\nThis error can occur if an app makes frequent requests for data over a short period of time."
  },
  {
    "title": "destination | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433146-destination",
    "html": "Discussion\n\nUse the setter method setDestination: to set this property.\n\nSee Also\nAccessing the start and end points\nvar source: MKMapItem?\nThe starting point for routing directions."
  },
  {
    "title": "highwayPreference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/3951109-highwaypreference",
    "html": "See Also\nSpecifying transportation options\nvar transportType: MKDirectionsTransportType\nThe type of conveyance that the directions apply to.\nvar tollPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework avoids routes that have tolls when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar requestsAlternateRoutes: Bool\nA Boolean value that indicates whether your app requests multiple routes when they’re available.\nvar departureDate: Date?\nThe departure date for the trip.\nvar arrivalDate: Date?\nThe arrival date for the trip."
  },
  {
    "title": "transportType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433152-transporttype",
    "html": "Discussion\n\nYou can use this property to specify whether you want directions suited to a particular type of transportation. For example, you can use this to specify that you want walking directions or driving directions.\n\nThe default value of this property is any.\n\nSee Also\nSpecifying transportation options\nvar highwayPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework uses or avoids highways when providing directions.\nvar tollPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework avoids routes that have tolls when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar requestsAlternateRoutes: Bool\nA Boolean value that indicates whether your app requests multiple routes when they’re available.\nvar departureDate: Date?\nThe departure date for the trip.\nvar arrivalDate: Date?\nThe arrival date for the trip."
  },
  {
    "title": "MKDirections.DirectionsHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/directionshandler",
    "html": "Parameters\nresponse\n\nThe response parameter contains the route information for the request. If an error occurs or the framework can’t determine a route, this parameter is nil.\n\nerror\n\nThe error parameter contains information about any errors that occur. If no errors occur, this parameter is nil.\n\nDiscussion\n\nThe implementation of your block needs to check for a value in the error parameter and, if that parameter is nil, incorporate the route information from the response parameter.\n\nSee Also\nGetting the directions\nfunc calculate(completionHandler: MKDirections.DirectionsHandler)\nBegins calculating the requested route information asynchronously.\nclass MKDirections.Response\nThe route information that Apple servers return in response to your request for directions."
  },
  {
    "title": "MKPolylineRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolylinerenderer",
    "html": "Overview\n\nThis renderer strokes the line only; it doesn’t fill it. You can change the color and other drawing attributes of the polyline by modifying the properties it inherits from the main class. You typically use this class as-is and don’t subclass it.\n\nTopics\nCreating a polyline renderer\ninit(polyline: MKPolyline)\nCreates a new overlay view using the specified polyline overlay object.\nAccessing the polyline overlay\nvar polyline: MKPolyline\nThe polyline overlay object that contains the information for drawing the overlay.\nAccessing the stroke\nvar strokeStart: CGFloat\nThe unit distance along the line where the stroke starts.\nvar strokeEnd: CGFloat\nThe unit distance along the line where the stroke ends.\nRelationships\nInherits From\nMKOverlayPathRenderer\nSee Also\nMultiple segment lines\nclass MKPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nclass MKGeodesicPolyline\nAn open polygon overlay consisting of line segments that follow the contours of the Earth to create the shortest path between the specified points.\nclass MKMultiPolyline\nA collection of multipolyline shapes, each consisting of one or more connected line segments.\nclass MKMultiPolylineRenderer\nA visual representation of multiple polyline overlay objects.\nclass MKGradientPolylineRenderer\nA visual representation of any polyline overlay object with a gradient."
  },
  {
    "title": "MKMultiPoint | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipoint",
    "html": "Overview\n\nDon’t create instances of this class directly. Instead, create instances of the MKPolygon or MKPolyline classes. However, you can use the methods and property of this class to access information about the specific points associated with the line or polygon.\n\nTopics\nAccessing the points in the shape\nfunc points() -> UnsafeMutablePointer<MKMapPoint>\nReturns an array of map points associated with the shape.\nvar pointCount: Int\nThe number of points associated with the shape.\nfunc location(atPointIndex: Int) -> CGFloat\nTranslates a point index into a unit distance along the shape.\nfunc locations(at: IndexSet) -> [CGFloat]\nTranslates a point index set into a unit distance along the shape.\nGetting coordinate values\nfunc getCoordinates(UnsafeMutablePointer<CLLocationCoordinate2D>, range: NSRange)\nRetrieves one or more points associated with the shape and converts them to coordinate values.\nRelationships\nInherits From\nMKShape\nConforms To\nMKGeoJSONObject\nSee Also\nShared behavior\nprotocol MKOverlay\nAn interface for associating content with a specific map region.\nclass MKOverlayRenderer\nThe shared infrastructure for drawing overlays on the map surface.\nclass MKShape\nAn abstract class that defines the basic properties for all shape-based overlay objects.\nclass MKPlacemark\nA user-friendly description of a location on the map."
  },
  {
    "title": "init(request:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/1452197-init",
    "html": "Parameters\nrequest\n\nThe request object containing the start and end points of the route. This parameter must not be nil.\n\nReturn Value\n\nAn initialized directions object.\n\nDiscussion\n\nAfter initializing your directions object, you must call the calculate(completionHandler:) or calculateETA(completionHandler:) method to perform the request.\n\nSee Also\nCreating a directions object\nclass MKDirections.Request\nThe start and end points of a route, along with the planned mode of transportation.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "MKDirections.RoutePreference | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/routepreference",
    "html": "Topics\nRoute selection options\ncase any\nThe option that specifies any available route.\ncase avoid\nThe option that requests the framework avoid certain routes.\nRelationships\nConforms To\nSendable\nSee Also\nCreating a directions object\ninit(request: MKDirections.Request)\nCreates and returns a directions object using the specified request.\nclass MKDirections.Request\nThe start and end points of a route, along with the planned mode of transportation."
  },
  {
    "title": "MKMultiPolygon | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolygon",
    "html": "Overview\n\nUse a MKMultiPolygon when you have multiple distinct polygon shapes that you intend to render using the same style.\n\nTopics\nCreating a multipolygon\ninit([MKPolygon])\nCreates a multipolygon object using the provided polygons.\nAccessing polygons\nvar polygons: [MKPolygon]\nAn array containing the polygons that make up the multipolygon object.\nRelationships\nInherits From\nMKShape\nConforms To\nMKGeoJSONObject\nMKOverlay\nSee Also\nCustom shape overlays\nclass MKPolygon\nA closed polygon overlay.\nclass MKPolygonRenderer\nThe visual representation of a single polygon overlay.\nclass MKMultiPolygonRenderer\nThe visual representation of multiple polygon overlays.\nclass MKOverlayPathRenderer\nThe visual representation of a path-based overlay."
  },
  {
    "title": "MKMultiPolygonRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolygonrenderer",
    "html": "Overview\n\nUse this renderer to provide the style for multiple polygons created using MKMultiPolygon.\n\nTopics\nCreating a multipolygon renderer\ninit(multiPolygon: MKMultiPolygon)\nCreates and returns a renderer that handles drawing for the specified multipolygon overlay object.\nAccessing the multipolygon object\nvar multiPolygon: MKMultiPolygon\nThe multipolygon object that the renderer uses to draw the overlay’s contents.\nRelationships\nInherits From\nMKOverlayPathRenderer\nSee Also\nCustom shape overlays\nclass MKPolygon\nA closed polygon overlay.\nclass MKPolygonRenderer\nThe visual representation of a single polygon overlay.\nclass MKMultiPolygon\nA collection of multiple closed polygon overlays.\nclass MKOverlayPathRenderer\nThe visual representation of a path-based overlay."
  },
  {
    "title": "MKMultiPolyline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmultipolyline",
    "html": "Overview\n\nUse a MKMultiPolyline object when you have multiple distinct polyline shapes that you intend to render using the same style.\n\nTopics\nCreating a multipolyline object\ninit([MKPolyline])\nCreates a multipolyline object using the provided polylines.\nAccessing polyline objects\nvar polylines: [MKPolyline]\nAn array containing the polyline objects that make up the multipolyline object.\nRelationships\nInherits From\nMKShape\nConforms To\nMKGeoJSONObject\nMKOverlay\nSee Also\nMultiple segment lines\nclass MKPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nclass MKGeodesicPolyline\nAn open polygon overlay consisting of line segments that follow the contours of the Earth to create the shortest path between the specified points.\nclass MKPolylineRenderer\nA visual representation of any polyline overlay object.\nclass MKMultiPolylineRenderer\nA visual representation of multiple polyline overlay objects.\nclass MKGradientPolylineRenderer\nA visual representation of any polyline overlay object with a gradient."
  },
  {
    "title": "MKPolygonRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygonrenderer",
    "html": "Overview\n\nThis renderer creates the polygon overlay by first filling the shape and then representing its outline with strokes. You can change the color and other drawing attributes of the polygon by modifying the properties inherited from the parent class.\n\nTopics\nCreating a polygon renderer\ninit(polygon: MKPolygon)\nCreates a new renderer that handles drawing for the specified polygon overlay object.\nAccessing the polygon overlay object\nvar polygon: MKPolygon\nThe polygon object that contains the information used to draw the overlay’s contents.\nAccessing the stroke\nvar strokeStart: CGFloat\nThe unit distance along the polygon where the stroke starts.\nvar strokeEnd: CGFloat\nThe unit distance along the polygon where the stroke ends.\nRelationships\nInherits From\nMKOverlayPathRenderer\nSee Also\nCustom shape overlays\nclass MKPolygon\nA closed polygon overlay.\nclass MKMultiPolygon\nA collection of multiple closed polygon overlays.\nclass MKMultiPolygonRenderer\nThe visual representation of multiple polygon overlays.\nclass MKOverlayPathRenderer\nThe visual representation of a path-based overlay."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/1451923-region",
    "html": "Discussion\n\nUse this property to limit search results to the specified geographic area. The default value of this property is a region that spans the entire world.\n\nSee Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "titleHighlightRanges | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompletion/1451935-titlehighlightranges",
    "html": "Discussion\n\nThis property contains an array of NSValue objects, each of which contains an NSRange type defining a range of characters in the title string. Use this property to identify the ranges of characters in the title string that you want to highlight. Highlighting the matching text of a search completion is optional, but it’s a best practice for providing helpful information to the user.\n\nSee Also\nGetting the search completions\nvar title: String\nThe title string associated with the point of interest.\nvar subtitle: String\nThe subtitle (if any) associated with the point of interest.\nvar subtitleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the subtitle string."
  },
  {
    "title": "MKPolygon | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpolygon",
    "html": "Overview\n\nThe points you add to this overlay connect end-to-end in the order you provide them. The first and last points connect to each other to create a closed shape.\n\nWhen creating a polygon, you can mask out portions of the polygon by specifying one or more interior polygons. For the polygons you specify, this class uses the even-odd fill rule to determine the final occupied area. When applied to overlapping polygons, this rule can cause the framework to mask specific regions out and thereby remove them from the total occupied area. For more information about how fill rules apply to paths, see Paths in Quartz 2D Programming Guide.\n\nTopics\nCreating a polygon overlay\ninit(points: UnsafePointer<MKMapPoint>, count: Int)\nCreates and returns a polygon object from the specified set of map points.\ninit(points: UnsafePointer<MKMapPoint>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of map points and interior polygons.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int)\nCreates and returns a polygon object from the specified set of coordinates.\ninit(coordinates: UnsafePointer<CLLocationCoordinate2D>, count: Int, interiorPolygons: [MKPolygon]?)\nCreates and returns a polygon object from the specified set of coordinates and interior polygons.\nAccessing the interior polygons\nvar interiorPolygons: [MKPolygon]?\nThe array of polygons that nest inside the enclosing polygon.\nRelationships\nInherits From\nMKMultiPoint\nConforms To\nMKGeoJSONObject\nMKOverlay\nSee Also\nCustom shape overlays\nclass MKPolygonRenderer\nThe visual representation of a single polygon overlay.\nclass MKMultiPolygon\nA collection of multiple closed polygon overlays.\nclass MKMultiPolygonRenderer\nThe visual representation of multiple polygon overlays.\nclass MKOverlayPathRenderer\nThe visual representation of a path-based overlay."
  },
  {
    "title": "cameraBoundary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3143416-cameraboundary",
    "html": "See Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nfunc setCameraBoundary(MKMapView.CameraBoundary?, animated: Bool)\nSets the camera boundary for the map view, specifying whether to use animation.\nfunc setCameraZoomRange(MKMapView.CameraZoomRange?, animated: Bool)\nSets the camera zoom range for the map view, specifying whether to use animation.\nvar cameraZoomRange: MKMapView.CameraZoomRange!\nThe zoom range to apply to the map view.\nclass MKMapView.CameraBoundary\nA boundary of an area within which the map’s center needs to remain.\nclass MKMapView.CameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom."
  },
  {
    "title": "Displaying an updating path of a user’s location history | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/mapkit_overlays/displaying_an_updating_path_of_a_user_s_location_history",
    "html": "Overview\n\nTravel History is a sample app that allows a user to track their location history, and displays a live-updating path of that history on a map. The app combines location updates from Core Location with a custom MapKit overlay for the location history. MapKit draws the user’s path using a custom MapKit overlay renderer.\n\nFor this sample app to show a path, it needs to receive a stream of location updates. Install the app on a device, and take a walk with it recording locations. Alternately, use one of the routes in the iOS simulator, such as Freeway Drive or City Bicycle Ride. To set a route in the iOS simulator, see Set a location or route.\n\nConfigure a location manager to receive location updates\n\nBefore recording the user’s path, the app asks the user for permission to access location data while the app is running. After the user grants location authorization, a CLLocationManager receives a stream of location updates as the user travels. The app also receives location updates while in the background by setting the allowsBackgroundLocationUpdates property of CLLocationManager to true. This combination of when-in-use authorization and background updates allows the app to receive location updates while in the background, and the system displays a location service indicator when the app isn’t in the foreground.\n\nlocationManager.requestWhenInUseAuthorization()\n\n\n/// Enable the app to collect location updates while it's in the background.\nlocationManager.allowsBackgroundLocationUpdates = true\n\n\nThe app sets a default value for the desiredAccuracy property on the location manager. This value is customizable in a menu to demonstrate how the value of this property affects the accuracy of the recorded data. Lower accuracy values allow the device to conserve power and have less impact on the device’s battery life. For example, if this app is for hiking, it needs high-accuracy data to capture a detailed path for the user’s hiking route, requiring kCLLocationAccuracyBest to facilitate the required detail. In contrast, if the app tracks overall progress between a start and end point without needing the exact path taken, using a lower accuracy value, such as kCLLocationAccuracyKilometer or kCLLocationAccuracyThreeKilometers, is a better choice because it conserves power.\n\nThe app also sets a default value for the activityType property, and is configurable in a menu. This property provides a hint to Core Location about the type of travel the device encounters while monitoring location. For example, if someone uses this app often while running, it sets activityType to CLActivityType.fitness. If they use it for providing driving directions, it sets activityType to CLActivityType.automotiveNavigation so that Core Location makes small adjustments to the reported location to match known roads.\n\nlocationManager.requestWhenInUseAuthorization()\n\n\n/// Enable the app to collect location updates while it's in the background.\nlocationManager.allowsBackgroundLocationUpdates = true\n\n\nAfter the app calls startUpdatingLocation() on the location manager, Core Location provides location updates to the location manager’s delegate. Then the app forwards the location updates to other functions in the app responsible for maintaining the user’s location history.\n\nfunc locationManager(_ manager: CLLocationManager, didUpdateLocations locations: [CLLocation]) {\n    \n    // Play a sound so it's easy to tell when a location update occurs while the app is in the background.\n    if chimeOnLocationUpdate && !locations.isEmpty {\n        setSessionActiveWithMixing(true) // Ducks the audio of other apps when playing the chime.\n        playSound()\n    }\n    \n    // Always process all of the provided locations. Don't assume the array only contains a single location.\n    for location in locations {\n        displayNewBreadcrumbOnMap(location)\n    }\n}\n\n\nDefine a custom map overlay data object\n\nMapKit treats overlay data as static when using the system-provided overlay classes, such as MKPolyline. For example, apps that only need to show a path with a static set of coordinates, such as the path a user took in the distant past, can use MKPolyline. Because this app continually updates with new data, it implements its own data class, called BreadcrumbPath, conforming to the MKOverlay protocol, rather than using MKPolyline. BreadcrumbPath maintains an array of location crumbs comprising the user’s location history.\n\nWhen drawing an overlay on the map, MapKit uses the overlay’s boundingMapRect to determine when the overlay is visible. Because this app can’t determine the extent of the path the user might track on the map, BreadcrumbPath declares its boundingMapRect as world. In an app that has well-defined usage patterns, such as a hiking app for use within a national park, the boundingMapRect might consist of a large area the path is likely to remain within, such as the bounds of the national park.\n\nWhen the app adds a new location, BreadcrumbPath validates that the information in CLLocation is usable for its purposes. Each app that maintains a location history needs to define criteria for ensuring a location update is usable based on the app’s specific needs.\n\nprivate func isNewLocationUsable(_ newLocation: CLLocation, breadcrumbData: BreadcrumbData) -> Bool {\n    /**\n     Always check the timestamp of a location value to ensure the location is recent, such as within the last 60 seconds. When starting\n     location updates, the values that return may reflect cached values while the device works to acquire updated locations according to\n     the accuracy level of the location manager. For some apps, the cached values may be sufficient, but in an app that draws a map of\n     a user's travel path, values that are too old may deviate too far from the user's actual path.\n     */\n    let now = Date()\n    let locationAge = now.timeIntervalSince(newLocation.timestamp)\n    guard locationAge < 60 else { return false }\n    \n    /**\n     An app might keep the first few updates before applying any further filtering, such as to ensure there is an intial set of\n     locations while waiting for the location accuracy to increase to the requested level.\n     */\n    guard breadcrumbData.locations.count > 10 else { return true }\n    \n    /**\n     Identify locations that shouldn't be part of the breadcrumb data, such as locations that are too close together.\n     Get the distance between this new location and the previous location, and use a minimum threshold\n     to determine if keeping the location is useful. For example, a location update that is just a few meters from the\n     prior location might represent a user that hasn't moved.\n     \n     Your app may apply other criteria. For example, an app tracking a user at walking speed may discard updates that show the user\n     moving at car speeds because that might indicate the user forgot to stop recording their location after completing the walk.\n     Consider comparing an average value over the last several location updates, such as the user's average speed.\n     \n     If using the location accuracy properties as criteria for determining a usable location, expect the values to vary, and don't\n     throw away low-accuracy values by expecting only high-accuracy values. Discarding locations due to lower than expected accuracy\n     can cause the user's location to appear to jump if the user is moving.\n     */\n    let minimumDistanceBetweenLocationsInMeters = 10.0\n    let previousLocation = breadcrumbData.locations.last!\n    let metersApart = newLocation.distance(from: previousLocation)\n    return metersApart > minimumDistanceBetweenLocationsInMeters\n}\n\n\nAfter BreadcrumbPath validates that a location is usable, it updates its data structures to include the new location. One of the properties of BreadcrumbPath is pathBounds, the bounding rectangle containing all of the locations for the overlay. Unlike boundingMapRect, pathBounds changes its value as the app adds locations to the overlay. A custom overlay renderer reads the value of pathBounds from multiple threads concurrently, so BreadcrumbPath uses OSAllocatedUnfairLock to protect reading of this property from data races.\n\n/// This is a lock protecting the `locations` and `bounds` properties that define the breadcrumb path from data races.\nprivate let protectedBreadcrumbData = OSAllocatedUnfairLock(initialState: BreadcrumbData())\n\n\n/**\n This is a rectangle encompassing the breadcrumb path, including a reasonable amount of padding. The value of this property changes\n when adding a new location to the breadcrumb path that’s outside of the existing `pathBounds`.\n */\nvar pathBounds: MKMapRect {\n    /**\n     The app accesses this property from the main thread in `BreadcrumbViewController`, and multiple\n     background threads running in parallel, through the `canDraw(_:zoomScale)` method.\n     Using a lock for access avoids data races.\n     */\n    return protectedBreadcrumbData.withLock { breadcrumbData in\n        return breadcrumbData.bounds\n    }\n}\n\n\nImplement a custom overlay renderer to display the path\n\nTo implement a custom overlay renderer object that complements the custom overlay data object, the app subclasses MKOverlayRenderer. To determine whether an overlay has content to draw, MapKit queries the canDraw(_:zoomScale:) method of an overlay renderer. The BreadcrumbPathRenderer class in this sample overrides this method to check whether the provided MKMapRect intersects the pathBounds property of the BreadcrumbPath object.\n\noverride func canDraw(_ mapRect: MKMapRect, zoomScale: MKZoomScale) -> Bool {\n    return crumbs.pathBounds.intersects(mapRect)\n}\n\n\nA custom overlay renderer also needs to implement the draw(_:zoomScale:in:) method to draw the requested section of the overlay. The app draws only the portion of the overlay within the bounds of the provided MKMapRect into the provided CGContext.\n\noverride func draw(_ mapRect: MKMapRect, zoomScale: MKZoomScale, in context: CGContext) {\n    /// Scale the width of the line to match the width of a road.\n    let lineWidth = MKRoadWidthAtZoomScale(zoomScale)\n    \n    /// Outset `mapRect` by the line width to include points just outside of the current rectangle in the generated path.\n    let clipRect = mapRect.insetBy(dx: -lineWidth, dy: -lineWidth)\n    \n    /**\n     Because the system might call this function on multiple background threads simultaneously,\n     and the `locations` property of the `BreadcrumbPath` updates frequently,\n     `locations` needs to guard against data races. See the comments in `BreadcrumbPath` for details.\n     */\n    let points = crumbs.locations.map { MKMapPoint($0.coordinate) }\n    if let path = pathForPoints(points, mapRect: clipRect, zoomScale: zoomScale) {\n        context.addPath(path)\n        context.setStrokeColor(UIColor.systemBlue.withAlphaComponent(0.5).cgColor)\n        context.setLineJoin(.round)\n        context.setLineCap(.round)\n        context.setLineWidth(lineWidth)\n        context.strokePath()\n    }\n}\n\n\nRequest that the map update the overlay\n\nWhen the sample app receives a location update, it adds the location to the custom overlay by calling a method that BreadcrumbPath defines. This method returns information indicating the result of adding the location to the overlay. When successful, the app calls setNeedsDisplay(_:) on the custom overlay renderer to trigger a redraw of the overlay within the region of the map where the user traveled.\n\n/**\n If the `BreadcrumbPath` model object determines that the current location moves far enough from the previous location,\n use the returned updateRect to redraw just the changed area.\n*/\nlet result = breadcrumbs.addLocation(newLocation)\n\n\n/**\n If the `BreadcrumbPath` model object sucessfully adds the location to the path,\n update the rendering of the path to include the new location.\n */\n if result.locationAdded {\n    // Compute the currently visible map zoom scale.\n    let currentZoomScale = mapView.bounds.size.width / mapView.visibleMapRect.size.width\n    \n    /**\n     Find out the line width at this zoom scale and outset the `pathBounds` by that amount to ensure the full line width draws.\n     This covers situations where the new location is right on the edge of the provided `pathBounds`, and only part of the line width\n     is within the bounds.\n    */\n    let lineWidth = MKRoadWidthAtZoomScale(currentZoomScale)\n    var areaToRedisplay = breadcrumbs.pathBounds\n    areaToRedisplay = areaToRedisplay.insetBy(dx: -lineWidth, dy: -lineWidth)\n    \n    /**\n     Tell the overlay view to update just the changed area, including the area that the line width covers.\n     Use `setNeedsDisplay(_:)` to only redraw the changed area of a breadcrumb overlay. For this sample,\n     the changed area includes the entire overlay because if the app was recently in the background, the breadcrumb path\n     that's visible when the app returns to the foreground might change significantly.\n\n     In general, avoid calling `setNeedsDisplay()` on the overlay renderer without a map rectangle, as that may cause a render\n     pass for the entire visible map, only some of which may contain updated data in the overlay.\n     \n     To avoid an expensive operation, call `setNeedsDisplay(_:)` instead of removing the overlay from the map and then immediately\n     adding it back to trigger a render pass when the data is changing often. The rendering of an overlay after adding it to the\n     map is not instantaneous, so removing and adding an overlay may cause a visual flicker as the system updates the map view\n     without the overlay, and then updates it again with the overlay. This is especially true if the map is displaying more than\n     one overlay or updating the overlay data often, such as on each location update.\n    */\n    breadcrumbPathRenderer?.setNeedsDisplay(areaToRedisplay)\n}\n\n\nSee Also\nSamples\nDisplaying overlays on a map\nAdd regions of layered content to a map view."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompletion/1452455-title",
    "html": "Discussion\n\nThe local search completion object ensures this string isn’t empty.\n\nSee Also\nGetting the search completions\nvar subtitle: String\nThe subtitle (if any) associated with the point of interest.\nvar titleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the title string.\nvar subtitleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the subtitle string."
  },
  {
    "title": "subtitle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompletion/1452566-subtitle",
    "html": "Discussion\n\nThe string in this property may be empty.\n\nSee Also\nGetting the search completions\nvar title: String\nThe title string associated with the point of interest.\nvar titleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the title string.\nvar subtitleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the subtitle string."
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/1452106-delegate",
    "html": "Discussion\n\nYou must provide a delegate object to receive completion results and to handle any errors that might occur. For more information about the methods of the delegate protocol, see MKLocalSearchCompleterDelegate.\n\nSee Also\nReceiving the search results\nprotocol MKLocalSearchCompleterDelegate\nMethods the delegate calls with search completion data."
  },
  {
    "title": "queryFragment | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/1452555-queryfragment",
    "html": "Discussion\n\nAssigning a string to this property initiates a search based on that string. The completer object waits a short amount of time before initiating new searches. This delay gives you enough time to update the search string based on typed input from the user. For example, if you’re using a text field to manage the input from the user, use the textField(_:shouldChangeCharactersIn:replacementString:) method of the text field’s delegate to update the value of this property, as the following example shows:\n\n- (BOOL)textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range\n         replacementString:(NSString *)string {\n    self.completer.queryFragment = textField.text;\n \n    return YES;\n}\n\nSee Also\nSpecifying the query attributes\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/3143404-pointofinterestfilter",
    "html": "See Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "MKLocalSearchCompleter.FilterType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/filtertype",
    "html": "Deprecated\n\nUse MKLocalSearchCompleter.ResultType instead.\n\nTopics\nConstants\ncase locationsAndQueries\nPoints of interest and query suggestions. Specify this value when you want both map-based points of interest and common query terms used to find locations. For example, the search string cof yields a completion for coffee.\ncase locationsOnly\nPoints of interest only. Specify this value when you want the search string to yield completions that correspond to a specific point-of-interest on the map.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "distance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step/1452004-distance",
    "html": "Discussion\n\nThis property reflects the distance that the user covers while traversing the path of the step. It isn’t a lilnear distance between the start and end points of the step.\n\nSee Also\nGetting additional step details\nvar instructions: String\nThe written instructions for following the path that the step represents.\nvar notice: String?\nAdditional notices that apply to the step.\nvar transportType: MKDirectionsTransportType\nThe transport type of the step."
  },
  {
    "title": "hasHighways | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/3951114-hashighways",
    "html": "See Also\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type."
  },
  {
    "title": "expectedTravelTime | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1452297-expectedtraveltime",
    "html": "Discussion\n\nThis expected travel time reflects the time it takes to traverse the route under ideal conditions. The actual amount of time may vary based on conditions.\n\nSee Also\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type."
  },
  {
    "title": "hasTolls | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/3951115-hastolls",
    "html": "See Also\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type."
  },
  {
    "title": "polyline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1451943-polyline",
    "html": "Discussion\n\nThe polyline object in this property reflects the complete path of the route, including all of its steps. You can use the polyline object as an overlay in a map view.\n\nSee Also\nGetting the route geometry\nvar steps: [MKRoute.Step]\nThe array of steps that create the overall route.\nclass MKRoute.Step\nOne portion of an overall route."
  },
  {
    "title": "steps | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1452173-steps",
    "html": "Discussion\n\nThe array contains one or more MKRoute.Step objects representing distinct portions of the route. Each step corresponds to a single direction that must be followed along the route.\n\nSee Also\nGetting the route geometry\nvar polyline: MKPolyline\nThe detailed route geometry.\nclass MKRoute.Step\nOne portion of an overall route."
  },
  {
    "title": "distance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1452405-distance",
    "html": "Discussion\n\nThis property reflects the distance that the user covers while traversing the path of the route. It’s not a linear distance between the start and end points of the route.\n\nSee Also\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type."
  },
  {
    "title": "advisoryNotices | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/1452359-advisorynotices",
    "html": "Discussion\n\nThis property contains an array of NSString objects. The framework localizes each string according to the user’s language preferences. The strings contain additional information that’s important for the user to know about the route. For example, a string might note the closing of a portion of the route during the winter or after big storms.\n\nSee Also\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type."
  },
  {
    "title": "insertOverlay(_:at:level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452723-insertoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object to insert.\n\nindex\n\nThe index at which to insert the overlay object. If this value is greater than the number of objects in the overlays property, this method appends the object to the end of the array.\n\nlevel\n\nThe map level at which to place the overlay. For a list of possible values for this parameter, see MKOverlayLevel.\n\nDiscussion\n\nInserting an overlay at a specific level places that overlay’s visual representation in front of or behind other map content such as map labels and point-of-interest icons.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index."
  },
  {
    "title": "dequeueReusableAnnotationView(withIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452672-dequeuereusableannotationview",
    "html": "Parameters\nidentifier\n\nA string identifying the annotation view for the map view to reuse. This string is the same one you specify when initializing the annotation view using the init(annotation:reuseIdentifier:) method.\n\nReturn Value\n\nAn annotation view with the specified identifier, or nil if no such object exists in the reuse queue.\n\nDiscussion\n\nFor performance reasons, it’s best practice to reuse MKAnnotationView objects in your map views. As annotation views move offscreen, the map view moves them to an internally managed reuse queue. As new annotations move onscreen, and the map view prompts your code to provide a corresponding annotation view, attempt to dequeue an existing view before creating a new one. Dequeueing saves time and memory during performance-critical operations like scrolling.\n\nSee Also\nCreating annotation views\nfunc register(AnyClass?, forAnnotationViewWithReuseIdentifier: String)\nRegisters an annotation view class that the map can create automatically.\nfunc dequeueReusableAnnotationView(withIdentifier: String, for: MKAnnotation) -> MKAnnotationView\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\nfunc view(for: MKAnnotation) -> MKAnnotationView?\nReturns the annotation view associated with the specified annotation object, if any.\nlet MKMapViewDefaultAnnotationViewReuseIdentifier: String\nThe default reuse identifier for your map’s annotation views.\nlet MKMapViewDefaultClusterAnnotationViewReuseIdentifier: String\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "overlays | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452784-overlays",
    "html": "Discussion\n\nThis property contains the union of all overlays at the different levels of the map. The objects in this array adopt the MKOverlay protocol. If the map view has no associated no overlays, the value of this property is an empty array.\n\nThe order of the objects in this array doesn’t necessarily reflect their visual order on the map.\n\nSee Also\nAccessing overlays\nfunc overlays(in: MKOverlayLevel) -> [MKOverlay]\nReturns overlay objects in the specified level of the map.\nfunc renderer(for: MKOverlay) -> MKOverlayRenderer?\nReturns the renderer object for drawing the contents of the specified overlay object.\nenum MKOverlayLevel\nConstants that indicate the position of overlays relative to other content.\nfunc view(for: MKOverlay) -> MKOverlayView\nReturns the view associated with the overlay object, if any.\nDeprecated"
  },
  {
    "title": "height | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsize/1452241-height",
    "html": "See Also\nGetting the width and height\nvar width: Double\nThe width of the specified area, measured in map points."
  },
  {
    "title": "showsBuildings | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452483-showsbuildings",
    "html": "Deprecated\n\nUse MKStandardMapConfiguration instead.\n\nDiscussion\n\nNote\n\nIn iOS 16 and macOS 13, and later, when overlay content is present, this property has no effect and the map renders buildings and trees as transparent. This enables content to be clearly visible while preserving the context of the surroundings.\n\nWhen this property is true and the camera has a pitch angle greater than zero, the map extrudes buildings so that they extend above the map plane, creating a 3D effect. The default value of this property is true.\n\nTo display extruded buildings, set the mapType property to MKMapType.standard or MKMapType.mutedStandard.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "annotationVisibleRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452717-annotationvisiblerect",
    "html": "See Also\nManaging annotation selections\nvar selectedAnnotations: [MKAnnotation]\nThe selected annotations.\nfunc selectAnnotation(MKAnnotation, animated: Bool)\nSelects the specified annotation and displays a callout view for it.\nfunc deselectAnnotation(MKAnnotation?, animated: Bool)\nDeselects the specified annotation and hides its callout view."
  },
  {
    "title": "init(width:height:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsize/1452006-init",
    "html": "Parameters\nwidth\n\nThe width of the specified area, measured in map points.\n\nheight\n\nThe height of the specified area, measured in map points.\n\nSee Also\nCreating a map size\ninit()\nCreates a map size that represents an empty area on a two-dimensional projection of a map."
  },
  {
    "title": "showsZoomControls | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451958-showszoomcontrols",
    "html": "Discussion\n\nIn macOS, use this property to show or hide the controls that let users change the zoom level of the map.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "MKPlacemark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkplacemark",
    "html": "Overview\n\nPlacemark data includes information like the country or region, state, city, and street address associated with the specified coordinate. A placemark is a concrete annotation object and conforms to the MKAnnotation protocol. Because it’s an annotation, you can add a placemark directly to the map view’s list of annotations.\n\nTopics\nCreating a placemark object\ninit(coordinate: CLLocationCoordinate2D)\nCreates and returns a placemark object using the specified coordinate.\ninit(coordinate: CLLocationCoordinate2D, postalAddress: CNPostalAddress)\nCreates and returns a placemark object with the specified coordinate and postal address from the user’s Contacts database.\ninit(coordinate: CLLocationCoordinate2D, addressDictionary: [String : Any]?)\nCreates and returns a placemark object using the specified coordinate and Address Book dictionary.\nAccessing the placemark attributes\nvar countryCode: String?\nThe abbreviated country or region name.\nRelationships\nInherits From\nCLPlacemark\nConforms To\nMKAnnotation\nSee Also\nShared behavior\nprotocol MKOverlay\nAn interface for associating content with a specific map region.\nclass MKOverlayRenderer\nThe shared infrastructure for drawing overlays on the map surface.\nclass MKShape\nAn abstract class that defines the basic properties for all shape-based overlay objects.\nclass MKMultiPoint\nAn abstract class that defines the common behavior that open and closed polygon overlays share."
  },
  {
    "title": "showsPitchControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3567212-showspitchcontrol",
    "html": "See Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "MapAnnotationProtocol | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapannotationprotocol",
    "html": "Overview\n\nDon’t create types conforming to this protocol. Instead, use one of the framework-provided types MapAnnotation, MapMarker, and MapPin.\n\nRelationships\nConforming Types\nMapAnnotation\nMapMarker\nMapPin\nSee Also\nAnnotations in SwiftUI\nstruct MapMarker\nA balloon-shaped annotation used to indicate the location on a map.\nDeprecated\nstruct MapPin\nA pin-shaped annotation used to indicate a location on a map.\nDeprecated\nstruct MapAnnotation\nA customizable annotation that marks a map location.\nDeprecated"
  },
  {
    "title": "Displaying overlays on a map | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/mapkit_overlays/displaying_overlays_on_a_map",
    "html": "Overview\n\nOverlays offer a way to layer content over regions of a map and have that content scale with the map. This sample code project demonstrates how to draw common shapes, how to perform custom drawing outside of a common shape, and how to use map tiles from additional data sources.\n\nDefine overlays with geographic coordinates\n\nOverlays are data objects that represent geographic information. Most overlays use geographic coordinates to create contiguous or noncontiguous sets of lines, rectangles, circles, and other shapes. For example, this sample app defines a rectangular area enclosing San Francisco as an array of CLLocationCoordinate2D coordinates.\n\n/// A rectangular area containing San Francisco.\nstatic let sanFranciscoRectangle = [\n    CLLocationCoordinate2D(latitude: 37.816_41, longitude: -122.522_62),\n    CLLocationCoordinate2D(latitude: 37.816_41, longitude: -122.355_54),\n    CLLocationCoordinate2D(latitude: 37.702_08, longitude: -122.355_54),\n    CLLocationCoordinate2D(latitude: 37.702_08, longitude: -122.522_62)\n]\n\n\nThe app creates the overlay objects by providing the coordinate data to an object that conforms to the MKOverlay protocol. This data object is responsible for managing the data that defines the overlay. MapKit defines several concrete overlay objects for specifying different types of standard shapes, such as circles and polygons. The app uses the coordinate array above to create one of these provided overlay objects — a polygon.\n\n/// Creates a rectangle polygon.\nvar rectangleOverlay: MKPolygon {\n    return MKPolygon(coordinates: LocationData.sanFranciscoRectangle, count: LocationData.sanFranciscoRectangle.count)\n}\n\n\nBecause MapKit defines overlays using a protocol, any class in an app can be an overlay object by conforming to the MKOverlay protocol, or by subclassing MKShape or MKMultiPoint. For example, PeakGroundAccelerationGrid in this sample app is a custom data class representing an overlay, so it subclasses MKShape.\n\nAn overlay contains two key properties, a coordinate that defines the center point of the overlay, and the boundingMapRect that the system expresses as an MKMapRect that completely encompasses the overlay’s content. When the app uses system-provided overlay objects, the system automatically computes the values of these properties. When defining a custom overlay object, the class needs to implement these properties and return appropriate values, as the PeakGroundAccelerationGrid class in this app demonstrates.\n\nLoad overlay data using GeoJSON\n\nGeoJSON is a standards-based data format for representing geographic data, and apps often receive overlay data from a server in GeoJSON format. Rather than connect to a server, this app uses a local GeoJSON file containing MultiPolygon features into an MKMultiPolygon by using MKGeoJSONDecoder.\n\ninit() {\n    /// In a real app, the event data probably downloads from a server. This sample loads GeoJSON data from a local file instead.\n    if let jsonUrl = Bundle.main.url(forResource: \"event\", withExtension: \"json\") {\n        do {\n            let eventData = try Data(contentsOf: jsonUrl)\n\n\n            // Use the `MKGeoJSONDecoder` to convert the JSON data into MapKit objects, such as `MKGeoJSONFeature`.\n            let decoder = MKGeoJSONDecoder()\n            let jsonObjects = try decoder.decode(eventData)\n\n\n            parse(jsonObjects)\n        } catch {\n            print(\"Error decoding GeoJSON: \\(error).\")\n        }\n    }\n}\n\n\nprivate func parse(_ jsonObjects: [MKGeoJSONObject]) {\n    for object in jsonObjects {\n\n\n        /**\n         In this sample's GeoJSON data, there are only GeoJSON features at the top level, so this parse method only checks for those. An\n         implementation that parses arbitrary GeoJSON files needs to check for GeoJSON geometry objects too.\n        */\n        if let feature = object as? MKGeoJSONFeature {\n            for geometry in feature.geometry {\n\n\n                /**\n                 Separate annotation objects from overlay objects because you add them to the map view in different ways. This sample\n                 GeoJSON only contains `Point` and `MultiPolygon` geometry. In a generic parser, check for all possible geometry types.\n                */\n                if let multiPolygon = geometry as? MKMultiPolygon {\n                    overlays.append(multiPolygon)\n                } else if let point = geometry as? MKPointAnnotation {\n                     // The name of the annotation passes in the feature properties.\n                     // Parse the name and apply it to the annotation.\n                    configure(annotation: point, using: feature.properties)\n                    annotations.append(point)\n                }\n            }\n        }\n    }\n}\n\n\nDisplay overlays on a map view\n\nThe app adds the overlay data objects to the map in a specific order to ensure that certain overlays display on top of others. To specify whether an overlay is above or below content that the map provides, such as roads and labels, the app calls addOverlay(_:level:) with the level parameter as a value that MKOverlayLevel provides.\n\nmapView.addOverlay(reliefTileOverlay, level: .aboveLabels)\n\n\nThe overlay data object doesn’t draw the overlay on the map. A second object, called an overlay renderer, handles the drawing responsibilities for displaying the overlay on the map view. After adding an overlay, the map view calls mapView(_:rendererFor:) on its delegate to create an appropriate renderer object. Because this app demonstrates many different overlays, its implementation of mapView(_:rendererFor:) creates many different types of overlay renderers. Most apps only use a small number of overlay types, so this function only needs to create the small number of corresponding overlay renderer types.\n\nfunc mapView(_ mapView: MKMapView, rendererFor overlay: MKOverlay) -> MKOverlayRenderer {\n    switch overlay {\n    case let overlay as MKCircle:\n        return createCircleRenderer(for: overlay)\n    case let overlay as MKGeodesicPolyline:\n        return createGeodesicPolylineRenderer(for: overlay)\n    case let overlay as MKPolyline where currentExample == .gradientPolyline:\n        return createGradientPolylineRenderer(for: overlay)\n    case let overlay as MKPolyline:\n        return createPolylineRenderer(for: overlay)\n    case let overlay as MKPolygon where currentExample == .blendModes:\n        return createBlendModesPolygonRenderer(for: overlay)\n    case let overlay as MKPolygon:\n        return createPolygonRenderer(for: overlay)\n    case let overlay as MKMultiPolygon:\n        return createMultiPolylineRenderer(for: overlay)\n    case let overlay as PeakGroundAccelerationGrid:\n        return createCustomRenderer(for: overlay)\n    case let overlay as MKTileOverlay:\n        return createTileRenderer(for: overlay)\n    default:\n        return MKOverlayRenderer(overlay: overlay)\n    }\n}\n\n\nAfter the app creates the renderer and returns it from mapView(_:rendererFor:), the map view uses the boundingMapRect property on the overlay data object to determine when the returned overlay renderer draws the overlay on the map.\n\nThe overlays property of MKMapView stores the registered overlays, but the order of the array doesn’t necessarily reflect their visual order on the map. To understand the rendering order of overlays at a specific level, see overlays(in:).\n\nUse the standard overlay objects for common shapes\n\nThe app highlights specific map regions with basic shapes by using the standard overlay classes, including MKCircle, MKPolyline, and MKPolygon. For example, it creates a circle overlay using MKCircle with a center coordinate and a radius specified in meters to highlight San Francisco.\n\n/// Create a circle overlay that centers on San Francisco.\nlet circleOverlay = MKCircle(center: LocationData.sanFranciscoGeographicCenter, radius: 9000)\nmapView.addOverlay(circleOverlay, level: overlayLevel)\n\n\nThe standard overlay classes define the basic shape of the overlay, and the app uses them in conjunction with the MKCircleRenderer, MKPolylineRenderer, or MKPolygonRenderer classes to handle the rendering of that shape on the map. The app creates a renderer for the circle described above with the following code:\n\nfunc createCircleRenderer(for circle: MKCircle) -> MKCircleRenderer {\n    /**\n     Some of the most common customizations for an `MKOverlayRenderer` include customizing drawing settings, such as the\n     fill color of an enclosed shape, or the stroke color for the edge of the shape.\n     */\n    let renderer = MKCircleRenderer(circle: circle)\n    renderer.lineWidth = 2\n    renderer.strokeColor = .systemBlue\n    renderer.fillColor = .systemTeal\n    renderer.alpha = 0.5\n    \n    return renderer\n}\n\n\nWhen the app uses the provided renderer classes for common shapes, MapKit vectorizes overlay shapes so that they always remain sharp while the map scales. The app doesn’t change the default value of the shouldRasterize property, so the standard overlay shapes always remain sharp. Subclassing any of the provided renderer objects and providing a custom implementation of draw(_:zoomScale:in:), like the PeakGroundAccelerationOverlayRenderer class, automatically enables rasterized rendering.\n\nSet drawing properties to customize the overlay rendering\n\nThe standard overlay renderers allow customization of common drawing properties for the fill and edges. For example, the app displays an MKPolyline overlay using dashes instead of a solid line, and sets a customized dash pattern using the lineDashPattern property of an MKPolylineRenderer.\n\n/**\n Apply a custom pattern to the line, alternating dash length with space length in drawing points.\n The pattern repeats for the length of the polyline.\n */\nrenderer.lineDashPattern = [20 as NSNumber,   // Long dash\n                            10 as NSNumber,   // Space\n                             5 as NSNumber,   // Shorter dash\n                            10 as NSNumber,   // Space\n                             1 as NSNumber,   // Dot\n                            10 as NSNumber]   // Space\n\n\nMapKit also provides MKGradientPolylineRenderer to draw a polyline with a color gradient. The app configures a gradient renderer in the following way:\n\nfunc createGradientPolylineRenderer(for line: MKPolyline) -> MKGradientPolylineRenderer {\n    let renderer = MKGradientPolylineRenderer(polyline: line)\n    \n    let colorPalette: [UIColor] = [.systemPurple, .systemMint, .systemOrange, .systemTeal, .systemRed]\n    \n    /**\n     Gradient polylines take an array of colors and an array of locations to place each color within the gradient.\n     The system describes the location values as a fractional distance along the polyline between 0.0 (representing the first point) and\n     1.0 (representing the last point).\n     \n     For apps that add a color to the gradient per point in the polyline, `MKPolyline` offers the `location(atPointIndex:)` function to\n     compute the location value for use with the gradient polyline.\n     */\n    var unitDistances = [CGFloat]()\n    var colors = [UIColor]()\n    var index = 0\n    while index < line.pointCount {\n        // Figure out the location of a point in the polyline as a fraction of unit distance between 0 and 1.\n        unitDistances.append(line.location(atPointIndex: index))\n        \n        // Pick a color to add to the gradient.\n        colors.append(colorPalette[index % colorPalette.count])\n        \n        index += 1\n    }\n    \n    renderer.setColors(colors, locations: unitDistances)\n    renderer.lineWidth = 2\n    \n    return renderer\n}\n\n\nRender multiple overlays with the same style efficiently\n\nIt’s common to have multiple related overlays appear on the map with an identical visual style. For example, the app displays a map of an outdoor event that uses multiple overlays to show where the stage is located in relation to different event booths. Because the app shows each of these overlays using the same color scheme, it groups the individual overlay objects together using an MKMultiPolygon object.\n\nThe app then adds the grouped overlay to the map view, rather than adding the individual overlays, to avoid requesting a separate renderer for each overlay from its delegate. Instead, the app returns an MKMultiPolygonRenderer from the delegate. This returned renderer applies the same drawing properties to all overlays within the MKMultiPolygon. This is more efficient than creating a renderer for each overlay.\n\nfunc createMultiPolylineRenderer(for multiPolygon: MKMultiPolygon) -> MKMultiPolygonRenderer {\n    let renderer = MKMultiPolygonRenderer(multiPolygon: multiPolygon)\n    renderer.fillColor = UIColor(named: \"MultiPolygonOverlayFill\")\n    renderer.strokeColor = UIColor(named: \"MultiPolygonOverlayStroke\")\n    renderer.lineWidth = 2.0\n\n\n    return renderer\n}\n\n\nNote\n\nTo maximize rendering efficiency, developers need to group overlays using MKMultiPolyline or MKMultiPolygon whenever the visual style is the same. This is especially important when an app displays significant numbers of visually identical overlays.\n\nCreate visual effects using blend modes\n\nBlend modes relate the content that draws in an overlay to the content that draws behind the overlay. This enables creating visual effects on the map by adding overlays with a specific Z-order and applying a blend mode on the different overlays. For example, the app highlights a park hosting an outdoor event by using blend modes to lighten the map areas outside the park and to amplify the colors within the park.\n\nTo create such an effect, the app uses two overlays. The first overlay covers the entire map except for an inner polygon for the park, and the second overlay is a polygon outlining only the park.\n\n/// Turn an array of points into a polygon. You can also load the polygon from a GeoJSON file by using `MKGeoJSONDecoder`.\nlet parkPolygon = MKPolygon(coordinates: LocationData.plazaDeCesarChavezParkOutline,\n                                 count: LocationData.plazaDeCesarChavezParkOutline.count)\n\n\n/// Create an overlay polygon that covers the entire world, except for a cutout of the highlighted park.\nlet worldPoints = [MKMapRect.world.origin,\n                   MKMapPoint(x: MKMapRect.world.origin.x, y: MKMapRect.world.origin.y + MKMapRect.world.size.height),\n                   MKMapPoint(x: MKMapRect.world.origin.x + MKMapRect.world.size.width, y: MKMapRect.world.origin.y),\n                   MKMapPoint(x: MKMapRect.world.origin.x + MKMapRect.world.size.width,\n                              y: MKMapRect.world.origin.y + MKMapRect.world.size.height)]\nlet desaturatedBase = MKPolygon(points: worldPoints, count: worldPoints.count, interiorPolygons: [parkPolygon])\n\n\nWhen the map view requests renderer objects from the map delegate for these overlay objects, the app configures the blendMode property with the CGBlendMode.screen blend mode to lighten the map area outside the park, and the CGBlendMode.colorBurn blend mode to darken the colors within the park.\n\nfunc createBlendModesPolygonRenderer(for overlay: MKPolygon) -> MKPolygonRenderer {\n    let renderer = MKPolygonRenderer(polygon: overlay)\n    \n    if overlay.interiorPolygons == nil {\n        /// An overlay without `interiorPolygons` is the overlay highlighting the park.\n        renderer.fillColor = traitCollection.userInterfaceStyle == .light ? .darkGray : .white\n        renderer.blendMode = .colorBurn\n    } else {\n        /// An overlay with `interiorPolygons` is the background overlay to desaturate.\n        renderer.fillColor = .gray\n        renderer.blendMode = .screen\n    }\n    return renderer\n}\n\n\nFor further information on blend modes, see “Setting Blend Modes” and “Using Blend Modes with Images” in Quartz 2D Programming Guide.\n\nDefine a custom overlay renderer\n\nTo draw complex overlays that go beyond drawing boundaries and filling standard overlay shapes, this sample code project creates a custom overlay renderer. The app contains data related to earthquake hazards, and defines a custom MKOverlay to represent that hazard data. It also defines a custom overlay renderer to draw a color-coded, shaded map of hazards based on the data.\n\nTo create a custom overlay renderer, the app subclasses MKOverlayRenderer and implements draw(_:zoomScale:in:) to draw the earthquake data into the provided CGContext. MapKit calls this method concurrently on multiple background queues for the app to draw the overlay, with each call rendering a specific section of the overlay within the bounds of the mapRect parameter.\n\noverride func draw(_ mapRect: MKMapRect, zoomScale: MKZoomScale, in context: CGContext) {\n    // Don't draw anything that doesn't intersect the data set.\n    guard mapRect.intersects(data.boundingMapRect) else { return }\n    \n    /**\n     Determine the section of the overlay to render. MapKit breaks overlays into multiple rectangles for rendering on multiple threads.\n     Each call to `draw(_:zoomScale:in:)` should only render within bounds of the provided `mapRect`.\n     If your drawing implementation needs to draw content outside of the provided `mapRect` as part of its drawing algorithm, apply a clipping\n     rectangle by calling `clip(to:)` on the `CGContext`.\n     */\n    let intersection = mapRect.intersection(data.boundingMapRect)\n\n\nWhen the app draws the custom overlay, it uses MKMapPoint data associated with the overlay to define shapes. When it needs to convert data between MapKit geometry and Core Graphics geometry, it uses point(for:).\n\nlet point1Conversion = point(for: coord1.mapPoint)\n\n\nMapKit also provides mapRect(for:) for converting rectangles between MapKit geometry and Core Graphics geometry. When implementing a custom renderer, the app doesn’t use the bounds or frame of the MKMapView as reference points during drawing.\n\nLoad custom map tiles\n\nMapKit supports using custom bitmap map tiles to provide an underlying map that’s customizable. For example, this app displays map tiles that emphasize rivers and mountains.\n\nTo use a custom bitmap map tile overlay, the app uses MKTileOverlay to manage loading the tile data and MKTileOverlayRenderer to render the map tiles. When creating the tile overlay, the app provides a URL template with placeholder values for the tile position, zoom level, and scale factor to the MKTileOverlay. When the tile overlay loads the data, MapKit replaces the placeholder values with the required values to load tiles for a specific map region according to the EPSG:3857 spherical Mercator projection coordinate system.\n\nThe URL template can be either an HTTP URL or a file URL, and this app uses both. For example, it loads some map tiles bundled with the app and specifies a file URL template that locates the map tiles within the app’s bundle.\n\nlet tileDirectoryName = \"tileData\"\nguard let resourcePath = Bundle.main.resourcePath else { return }\nlet localPath = \"file://\\(resourcePath)/\\(tileDirectoryName)/{z}/{x}/{y}.jpg\"\nlet tileOverlay = MKTileOverlay(urlTemplate: localPath)\n\n\nWhen the app loads tiles from a server, it also does so with a URL template, replacing the file URL with an HTTP URL.\n\nThe CustomLoadingTileOverlay class in this sample code project implements loadTile(at:result:) to show how to customize tile-loading behavior for specialized loading needs.\n\nUse an overlay as an annotation\n\nThe MKOverlay protocol conforms to the MKAnnotation protocol. As a result, all overlay objects are also annotation objects. When adding an overlay as an annotation to the map, MKMapView displays it at the overlay’s coordinate property. For example, the app uses a polygon outlining the park for an outdoor concert as an annotation to label the concert location.\n\n/**\n Types that derive from `MKOverlay`, such as `MKPolygon`, also conform to `MKAnnotation`, enabling you to add them to the map as an overlay,\n as well as place an annotation on the overlay to label it.\n */\nparkPolygon.title = \"Concert Location\"\nmapView.addAnnotation(parkPolygon)\n\n\nBecause the app treats the overlay object as both an overlay and an annotation, it’s responsible for adding and removing the object from the map view as both an annotation and as an overlay.\n\nSee Also\nSamples\nDisplaying an updating path of a user’s location history\nContinually update a MapKit overlay displaying the path a user travels."
  },
  {
    "title": "MKUserLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocation",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you retrieve an existing MKUserLocation object from the userLocation property of the map view that displays in your app.\n\nTopics\nDetermining the user’s location\nvar location: CLLocation?\nThe location of the device.\nvar isUpdating: Bool\nA Boolean value that indicates whether the map view is updating the user’s location.\nvar heading: CLHeading?\nThe heading of the user’s location.\nAccessing the user’s location annotation\nvar title: String?\nThe title to display for the user’s location annotation.\nvar subtitle: String?\nThe subtitle to display for the user’s location annotation.\nRelationships\nInherits From\nNSObject\nConforms To\nMKAnnotation\nSee Also\nUser location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nclass MKUserLocationView\nA configurable annotation that shows the user’s location using the default MapKit style."
  },
  {
    "title": "MapAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapannotation",
    "html": "Deprecated\n\nUse Annotation along with Map initializers that take a MapContentBuilder instead.\n\nOverview\n\nUse MapAnnotation to declare the layout of the view that MapKit uses for the annotation. Create a Map and display annotations by returning a view that conforms to MapAnnotationProtocol from the trailing closure of init(coordinateRegion:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:) or init(mapRect:interactionModes:showsUserLocation:userTrackingMode:annotationItems:annotationContent:). Items you provide as a collection to the source annotations need to conform to Identifiable.\n\nFor example, the following code displays a map and a single annotation:\n\nstruct IdentifiablePlace: Identifiable {\n    let id: UUID\n    let location: CLLocationCoordinate2D\n    init(id: UUID = UUID(), lat: Double, long: Double) {\n        self.id = id\n        self.location = CLLocationCoordinate2D(\n            latitude: lat,\n            longitude: long)\n    }\n}\n\n\nstruct CustomAnnotationMapView: View {\n    let place: IdentifiablePlace\n    @State var region: MKCoordinateRegion\n\n\n    var body: some View {\n        Map(coordinateRegion: $region,\n            annotationItems: [place]\n        ) { place in\n            MapAnnotation(coordinate: place.location) {\n                Rectangle().stroke(Color.blue)\n                .frame(width: 20, height: 20)\n            }\n        }\n    }\n}\n\n\nTopics\nCreating a map annotation\ninit(coordinate: CLLocationCoordinate2D, anchorPoint: CGPoint, content: () -> Content)\nCreates a custom annotation that provides a SwiftUI view to display at the map location that you specify.\nRelationships\nConforms To\nMapAnnotationProtocol\nSee Also\nAnnotations in SwiftUI\nstruct MapMarker\nA balloon-shaped annotation used to indicate the location on a map.\nDeprecated\nstruct MapPin\nA pin-shaped annotation used to indicate a location on a map.\nDeprecated\nprotocol MapAnnotationProtocol\nA protocol that represents the possible return types of annotations."
  },
  {
    "title": "MKUserLocationView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkuserlocationview",
    "html": "Overview\n\nIf you don’t need additional configuration, you can show an annotation with the user’s location by setting showsUserLocation on the map to true.\n\nIf you want to specify additional configuration, such as zPriority, create this annotation view directly. To display the annotation view, return the instance from mapView(_:viewFor:).\n\nThe user location view provides the MapKit default style and behavior. The visual display varies with the level of authorization the user grants your app.\n\nRelationships\nInherits From\nMKAnnotationView\nSee Also\nUser location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nclass MKUserLocation\nAn annotation that reflects the user’s location on the map."
  },
  {
    "title": "MKClusterAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkclusterannotation",
    "html": "Overview\n\nA cluster annotation object stands in for the group of annotations. Cluster views promote legibility of the underlying annotations by displaying a single annotation that takes it’s title from one annotation and includes a subtitle that indicates how many additional annotations belong to the group.\n\nMapKit automatically creates cluster annotations when two or more annotation views group too closely together on the map surface. To customize the cluster annotations that display on your map, implement the mapView(_:clusterAnnotationForMemberAnnotations:) method in your map’s delegate.\n\nTopics\nCreating a cluster annotation\ninit(memberAnnotations: [MKAnnotation])\nCreates a cluster annotation with the specified individual annotations.\nGetting the cluster attributes\nvar title: String?\nThe title string to display for the group of annotations.\nvar subtitle: String?\nThe subtitle string to display for the group of annotations.\nGetting the annotations\nvar memberAnnotations: [MKAnnotation]\nThe annotations that the cluster contains.\nRelationships\nInherits From\nNSObject\nConforms To\nMKAnnotation\nSee Also\nGrouped annotations\nDecluttering a Map with MapKit Annotation Clustering\nEnhance the readability of a map by replacing overlapping annotations with a clustering annotation view."
  },
  {
    "title": "Decluttering a Map with MapKit Annotation Clustering | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview/decluttering_a_map_with_mapkit_annotation_clustering",
    "html": "Overview\n\nTANDm is a fictional bike sharing app that uses annotation clustering to provide an uncluttered map. The app shows how MapKit automatically groups two or more annotations into a single annotation when spacing on the map doesn’t permit each annotation to be visible without overlapping. This enhances the readability of the map by replacing overlapping annotations with a clustering annotation view.\n\nAnnotation Clustering\n\nTo group annotations into a cluster, set the clusteringIdentifier property to the same value on each annotation view in the group. For example, to show overlapping unicycle annotations in a clustering annotation view, TANDm sets clusteringIdentifier on each instance of UnicycleAnnotationView to \"unicycle\".\n\noverride init(annotation: MKAnnotation?, reuseIdentifier: String?) {\n    super.init(annotation: annotation, reuseIdentifier: reuseIdentifier)\n    clusteringIdentifier = \"unicycle\"\n}\n\n\nDisplay Priority\n\nTo determine how an annotation view behaves when it overlaps another annotation view, set its displayPriority property. In the sample app, the map view is likely to hide the unicycle annotation if it overlaps with another annotation because the unicycle annotation view has a display priority of defaultLow, while the display priorities for bicycle and tricycle are set to defaultHigh. Here’s an example of setting the display priority while preparing an instance of BicycleAnnotationView for reuse:\n\noverride func prepareForDisplay() {\n    super.prepareForDisplay()\n    displayPriority = .defaultHigh\n    markerTintColor = UIColor.bicycleColor\n    glyphImage = #imageLiteral(resourceName: \"bicycle\")\n}\n\n\nCustom Clustering Annotation Views\n\nCustomize the behavior and appearance of a clustering annotation view by subclassing MKAnnotationView; for instance, to display hints about the annotations within the cluster. TANDm, for example, uses the custom clustering annotation view ClusterAnnotationView to show the ratio between bicycles and tricycles at a location.\n\noverride func prepareForDisplay() {\n    super.prepareForDisplay()\n    \n    if let cluster = annotation as? MKClusterAnnotation {\n        let totalBikes = cluster.memberAnnotations.count\n        \n        if count(cycleType: .unicycle) > 0 {\n            image = drawUnicycleCount(count: totalBikes)\n        } else {\n            let tricycleCount = count(cycleType: .tricycle)\n            image = drawRatioBicycleToTricycle(tricycleCount, to: totalBikes)\n        }\n        \n        if count(cycleType: .unicycle) > 0 {\n            displayPriority = .defaultLow\n        } else {\n            displayPriority = .defaultHigh\n        }\n    }\n}\n\n\nSee Also\nGrouped annotations\nclass MKClusterAnnotation\nAn annotation that groups two or more distinct annotations into a single entity."
  },
  {
    "title": "MKPinAnnotationView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpinannotationview",
    "html": "Deprecated\n\nIn iOS 16 and macOS 13 and later use an MKAnnotationView to create a custom map annotation\n\nOverview\n\nReturn instances of this class from the mapView(_:viewFor:) method of your map view delegate when you want to display a pin for one of your annotations. The pins displayed by this view are the same ones found in the Maps application. You can specify the type of pin you want to display and whether you want the pin to be animated into place.\n\nNote\n\nIn iOS 5.1 and earlier, the MapKit framework uses the Google Mobile Maps (GMM) service to provide map data. Use of specific classes of this framework (and their associated interfaces) is subject to the Google Mobile Maps terms of service, found at http://code.google.com/apis/maps/iphone/terms.html.\n\nTopics\nGetting Standard Pin Colors\nclass func redPinColor() -> UIColor\nReturns the standard color for red pins.\nclass func greenPinColor() -> UIColor\nReturns the standard color for green pins.\nclass func purplePinColor() -> UIColor\nReturns the standard color for purple pins.\nenum MKPinAnnotationColor\nThe supported colors for pin annotations.\nGetting and Setting Attributes\nvar pinTintColor: UIColor!\nThe color of the pin head.\nvar animatesDrop: Bool\nA Boolean value indicating whether the annotation view is animated onto the screen.\nvar pinColor: MKPinAnnotationColor\nThe color of the pin head.\nRelationships\nInherits From\nMKAnnotationView\nSee Also\nLocation annotations\nAnnotating a Map with Custom Data\nAnnotate a map with location-specific data using default and customized annotation views and callouts.\nclass MKPointAnnotation\nA string-based piece of location-specific data that you apply to a specific point on a map.\nclass MKMarkerAnnotationView\nAn annotation view that displays a balloon-shaped marker at the designated location."
  },
  {
    "title": "MKPointAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointannotation",
    "html": "Overview\n\nYou use this class, rather than define a custom annotation object, in situations where all you want to do is display a title string at the specified point on the map.\n\nTopics\nCreating a Point Annotation\ninit()\nCreates a map annotation that shows a title string at a point on a map.\nAccessing the Annotation’s Location\nvar coordinate: CLLocationCoordinate2D\nThe coordinate point of the annotation.\nRelationships\nInherits From\nMKShape\nConforms To\nMKGeoJSONObject\nSee Also\nLocation annotations\nAnnotating a Map with Custom Data\nAnnotate a map with location-specific data using default and customized annotation views and callouts.\nclass MKMarkerAnnotationView\nAn annotation view that displays a balloon-shaped marker at the designated location.\nclass MKPinAnnotationView\nAn annotation view that displays a pin image on the map.\nDeprecated"
  },
  {
    "title": "locale | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/1452235-locale",
    "html": "Discussion\n\nIf you don’t specify an explicit locale, the formatter uses the user’s current locale information.\n\nSee Also\nSpecifying the format\nvar units: MKDistanceFormatter.Units\nThe measuring system — imperial or metric — to use for units.\nenum MKDistanceFormatter.Units\nConstants that reflect the type of units to use in the string.\nvar unitStyle: MKDistanceFormatter.DistanceUnitStyle\nThe preferred style for units.\nenum MKDistanceFormatter.DistanceUnitStyle\nConstants that indicate the format style to use for strings."
  },
  {
    "title": "setCamera(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452476-setcamera",
    "html": "Parameters\ncamera\n\nThe camera object containing the viewing angle information. This parameter can’t be nil.\n\nanimated\n\nSpecify true if you want the map view to animate the change in viewing angle, or false if you want the map to reflect the changes without animations.\n\nSee Also\nConfiguring the map display\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "cameraZoomRange | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3114301-camerazoomrange",
    "html": "See Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nfunc setCameraBoundary(MKMapView.CameraBoundary?, animated: Bool)\nSets the camera boundary for the map view, specifying whether to use animation.\nvar cameraBoundary: MKMapView.CameraBoundary?\nThe boundary of the area within which the map view’s center needs to remain.\nfunc setCameraZoomRange(MKMapView.CameraZoomRange?, animated: Bool)\nSets the camera zoom range for the map view, specifying whether to use animation.\nclass MKMapView.CameraBoundary\nA boundary of an area within which the map’s center needs to remain.\nclass MKMapView.CameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom."
  },
  {
    "title": "maxY | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452237-maxy",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe maximum y-axis value.\n\nSee Also\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle.\nvar height: Double\nReturns the height of the map rectangle."
  },
  {
    "title": "destination | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1452611-destination",
    "html": "Discussion\n\nThe item in this property may contain additional details that aren’t in the original item you use to create the MKDirections.Request object.\n\nSee Also\nGetting the end points\nvar source: MKMapItem\nThe start point of the route."
  },
  {
    "title": "source | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1451947-source",
    "html": "Discussion\n\nThis item in this property may contain additional details that aren’t in the original item you use to create the MKDirections.Request object.\n\nSee Also\nGetting the end points\nvar destination: MKMapItem\nThe end point of the route.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "expectedTravelTime | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1452551-expectedtraveltime",
    "html": "Discussion\n\nThe expected travel time reflects the time it takes to traverse the route, taking expected traffic into account. The actual amount of time may vary based on changes in traffic and other travel conditions.\n\nSee Also\nGetting the travel information\nvar expectedDepartureDate: Date\nThe expected departure time.\nvar expectedArrivalDate: Date\nThe expected arrival time.\nvar distance: CLLocationDistance\nThe expected travel distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe type of conveyance to use for determining the travel time."
  },
  {
    "title": "expectedDepartureDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1452644-expecteddeparturedate",
    "html": "Discussion\n\nThe value of this property is dependent on whether you specify a departure date or arrival date in your MKDirections.Request object. If you specify a departure date, the framework copies that date to this property. If you specify an arrival date, but not a departure date, the framework computes the departure date by subtracting the expected travel time from your arrival date. If you don’t specify an arrival date or departure date, the framework sets this property to the current time.\n\nSee Also\nGetting the travel information\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar expectedArrivalDate: Date\nThe expected arrival time.\nvar distance: CLLocationDistance\nThe expected travel distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe type of conveyance to use for determining the travel time."
  },
  {
    "title": "expectedArrivalDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1451881-expectedarrivaldate",
    "html": "Discussion\n\nThe value of this property is dependent on whether you specify a departure date or arrival date in your MKDirections.Request object. If you specify a departure date, the framework computes the date in this property by starting at your departure date and adding the expected travel time. If you specify an arrival time, but not a departure date, the framework sets this property to your arrival time. If you don’t specify an arrival date or departure date, the framework sets this property to the date that results by adding the travel time to the current time.\n\nSee Also\nGetting the travel information\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar expectedDepartureDate: Date\nThe expected departure time.\nvar distance: CLLocationDistance\nThe expected travel distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe type of conveyance to use for determining the travel time."
  },
  {
    "title": "distance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse/1452164-distance",
    "html": "Discussion\n\nThis property contains the overall distance traversed by the route.\n\nSee Also\nGetting the travel information\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar expectedDepartureDate: Date\nThe expected departure time.\nvar expectedArrivalDate: Date\nThe expected arrival time.\nvar transportType: MKDirectionsTransportType\nThe type of conveyance to use for determining the travel time."
  },
  {
    "title": "MKLaunchOptionsMapTypeKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsmaptypekey",
    "html": "Discussion\n\nThe value of this key is an NSNumber object whose value is an integer corresponding to an MKMapType value.\n\nSee Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "destination | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/response/1451981-destination",
    "html": "Discussion\n\nThe item in this property may contain additional details that aren’t in the original item you use to create the MKDirections.Request object.\n\nSee Also\nGetting the end points\nvar source: MKMapItem\nThe start point of the route."
  },
  {
    "title": "MKLaunchOptionsMapCenterKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsmapcenterkey",
    "html": "Discussion\n\nThe value of this key is an NSValue object that contains an encoded CLLocationCoordinate2D structure.\n\nSee Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "MKLaunchOptionsDirectionsModeWalking | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsdirectionsmodewalking",
    "html": "See Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "MKLaunchOptionsDirectionsModeTransit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsdirectionsmodetransit",
    "html": "See Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "MKLaunchOptionsDirectionsModeDriving | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionsdirectionsmodedriving",
    "html": "See Also\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "MKLaunchOptionsCameraKey | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklaunchoptionscamerakey",
    "html": "Discussion\n\nThe value of this key is an MKMapCamera object that describes a virtual camera that can specify a 3D perspective for the map. If you don’t specify this key, the Maps app uses its current settings to define the appearance of the map.\n\nSee Also\nLaunch options\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information."
  },
  {
    "title": "departureDate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request/1433155-departuredate",
    "html": "Discussion\n\nSpecifying a departure date provides the server with extra information that it can use to optimize the returned routes. For example, for a trip that takes place during commute hours, the server might consider alternatives to routes that are typically congested at that time.\n\nThe use of this property is optional.\n\nSee Also\nSpecifying transportation options\nvar transportType: MKDirectionsTransportType\nThe type of conveyance that the directions apply to.\nvar highwayPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework uses or avoids highways when providing directions.\nvar tollPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework avoids routes that have tolls when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar requestsAlternateRoutes: Bool\nA Boolean value that indicates whether your app requests multiple routes when they’re available.\nvar arrivalDate: Date?\nThe arrival date for the trip."
  },
  {
    "title": "isCalculating | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/1452217-iscalculating",
    "html": "See Also\nManaging the request\nfunc cancel()\nCancels a pending request."
  },
  {
    "title": "MKGradientPolylineRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgradientpolylinerenderer",
    "html": "Overview\n\nThis renderer only applies a stroke to the line; it doesn’t fill it. Set the gradients with setColors:atLocations: and pair colors to locations that MapKit represents as unit distance values along the distance of the polyline. Don’t subclass MKGradientPolylineRenderer. Use the class as-is.\n\nThe gradient displays itself along the direction of the line.\n\nTopics\nAccessing the gradient colors\nfunc setColors([UIColor], locations: [CGFloat])\nSets the iOS colors and corresponding unit distance values to create gradients.\nfunc setColors([NSColor], locations: [CGFloat])\nSets the macOS colors and corresponding unit distance values to create gradients.\nvar colors: [UIColor]\nAn array that represents the gradient’s color transition points.\nvar locations: [CGFloat]\nAn array of location indexes that correspond to their respective colors.\nRelationships\nInherits From\nMKPolylineRenderer\nSee Also\nMultiple segment lines\nclass MKPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nclass MKGeodesicPolyline\nAn open polygon overlay consisting of line segments that follow the contours of the Earth to create the shortest path between the specified points.\nclass MKMultiPolyline\nA collection of multipolyline shapes, each consisting of one or more connected line segments.\nclass MKPolylineRenderer\nA visual representation of any polyline overlay object.\nclass MKMultiPolylineRenderer\nA visual representation of multiple polyline overlay objects."
  },
  {
    "title": "MKTileOverlayRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mktileoverlayrenderer",
    "html": "Overview\n\nYou create instances of this class when tile overlays become visible on the map view. A renderer works closely with its associated tile overlay object to coordinate the loading and drawing of tiles at appropriate times.\n\nFor information about how to specify the tiles to display on the map, see MKTileOverlay.\n\nTopics\nCreating a tile renderer\ninit(tileOverlay: MKTileOverlay)\nInitializes and returns a tile renderer with the specified overlay object.\nReloading the tile data\nfunc reloadData()\nForces the tile overlay renderer to reload and redisplay the tiles.\nRelationships\nInherits From\nMKOverlayRenderer\nSee Also\nTiled image overlays\nclass MKTileOverlay\nAn overlay that covers an area of the map with tiles of bitmap images."
  },
  {
    "title": "MKAnnotationView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotationview",
    "html": "Overview\n\nAnnotation views are loosely coupled to a corresponding annotation object, which is an object that conforms to the MKAnnotation protocol. When an annotation’s coordinate point is in the map’s visible region, the map view asks its delegate to provide a corresponding annotation view. MapKit may recycle annotation views and put them into a reuse queue that the map view maintains.\n\nThe most efficient way to provide the content for an annotation view is to set its image property. The annotation view sizes itself automatically to the image you specify and draws that image for its contents. Because it’s a view, you can also override the draw(_:) method and draw your view’s content manually. If you choose to override draw(_:) directly and you don’t specify a custom image in the image property, the annotation view sets the width and height of the annotation view’s frame to 0 by default. Before the framework can draw your custom content, you need to set the width and height to nonzero values by modifying the view’s frame property. In general, if your content consists entirely of static images, it’s more efficient to set the image property and change it as necessary than to draw the images yourself.\n\nAnnotation views anchor to the map at the point that their associated annotation object specifies. Although they scroll with the map contents, annotation views reside in a separate display layer and don’t scale when the size of the visible map region changes.\n\nAdditionally, annotation views support the concept of a selection state, which determines whether the map displays the annotation view as unselected, selected, or selected and displaying a standard callout view. The user toggles between the selection states through interactions with the annotation view. In the unselected state, the map displays the annotation view, but doesn’t highlight it. In the selected state, the framework highlights the annotation, but doesn’t display the callout. Finally, the map view can display the annotation with both a highlight and a callout. The callout view displays additional information, such as a title string and controls for viewing more information. The annotation object provides the title information, but your annotation view is responsible for providing any custom controls. For more information, see the Subclassing notes section below.\n\nReuse annotation views\n\nThe design of annotation views enables their reuse as the user (or your app) changes the visible map region. The reuse of annotation views provides significant performance improvements during scrolling by avoiding the creation of new view objects during this time-critical operation. For this reason, don’t tightly couple annotation views to the contents of their associated annotation. Instead, use the properties of an annotation view (or setter methods) to configure the view for a new annotation object.\n\nWhenever you initialize a new annotation view, specify a reuse identifier for that view. When the framework no longer needs annotation views, the map view may put them into a reuse queue. As the framework adds new annotations to the map view, the delegate object can then dequeue and reconfigure an existing view (rather than create a new one) using the dequeueReusableAnnotationView(withIdentifier:) method of MKMapView.\n\nSubclassing notes\n\nYou can use the MKAnnotationView class as-is or subclass it to provide custom behavior as necessary. The image property of the class lets you set the appearance of the annotation view without subclassing directly. You might also create custom subclasses as a convenience and use them to put the annotation view in a known state.\n\nThere are no special requirements for subclassing MKAnnotationView. However, the following list includes some reasons you might want to subclass, and the methods to override to implement the desired behavior:\n\nTo put the annotation view into a consistent state, provide a custom initialization method. Your custom initialization method then calls init(annotation:reuseIdentifier:) to initialize the superclass.\n\nTo provide custom callout views, override the leftCalloutAccessoryView method and use it to return the views.\n\nIf you support draggable annotation views in iOS, your subclass is responsible for changing the value in the dragState property to appropriate values at key transition points in the drag operation. For more information, see the description of that property.\n\nTopics\nCreating and preparing an annotation view\ninit(annotation: MKAnnotation?, reuseIdentifier: String?)\nCreates and returns a new annotation view.\ninit?(coder: NSCoder)\nCreates an annotation view using data from the specified unarchiver.\nfunc prepareForReuse()\nCalls this method when removing the view from the reuse queue.\nfunc prepareForDisplay()\nNotifies the annotation view that the map view is about to display it.\nSetting the priority for display\nvar displayPriority: MKFeatureDisplayPriority\nThe display priority of the annotation view.\nstruct MKFeatureDisplayPriority\nConstants that indicates the display priority for annotations.\nvar zPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in an unselected state with respect to its ordering along the z-axis.\nvar selectedZPriority: MKAnnotationViewZPriority\nThe relative importance of the annotation view when in a selected state with respect to its ordering along the z-axis.\nstruct MKAnnotationViewZPriority\nConstants that indicates the priority for ordering overlapping annotation views.\nGetting and setting attributes\nvar isEnabled: Bool\nA Boolean value that indicates whether the annotation is in an enabled state.\nvar image: UIImage?\nThe image the annotation view displays.\nvar isHighlighted: Bool\nA Boolean value that indicates whether the map view highlights the annotation view.\nvar annotation: MKAnnotation?\nThe annotation object associated with the view.\nvar centerOffset: CGPoint\nThe offset (in points) at which to display the view.\nvar calloutOffset: CGPoint\nThe offset (in points) at which to place the callout.\nvar reuseIdentifier: String?\nThe string that identifies that the annotation view is reusable.\nManaging the selection state\nfunc setSelected(Bool, animated: Bool)\nSets the selection state of the annotation view.\nvar isSelected: Bool\nA Boolean value that indicates whether the annotation view is in a selected state.\nManaging callout views\nvar canShowCallout: Bool\nA Boolean value that indicates whether the annotation view is able to display extra information in a callout.\nvar leftCalloutAccessoryView: UIView?\nThe view to display on the left side of the standard callout.\nvar rightCalloutAccessoryView: UIView?\nThe view to display on the right side of the standard callout.\nvar detailCalloutAccessoryView: UIView?\nThe detail accessory view to use in the standard callout.\nvar leftCalloutOffset: CGPoint\nThe offset in points from the middle-left of the annotation view.\nvar rightCalloutOffset: CGPoint\nThe offset in points from the middle-right of the annotation view.\nSupporting drag operations\nvar isDraggable: Bool\nA Boolean value that indicates whether the annotation view is draggable.\nfunc setDragState(MKAnnotationView.DragState, animated: Bool)\nSets the drag state for the annotation view.\nvar dragState: MKAnnotationView.DragState\nThe drag state of the annotation view.\nManaging collisions between annotation views\nvar collisionMode: MKAnnotationView.CollisionMode\nThe collision mode to use when interpreting the collision frame rectangle.\nenum MKAnnotationView.CollisionMode\nConstants that indicates how to interpret the collision frame rectangle of an annotation view.\nClustering annotation views\nDecluttering a Map with MapKit Annotation Clustering\nEnhance the readability of a map by replacing overlapping annotations with a clustering annotation view.\nvar clusteringIdentifier: String?\nAn identifier that determines whether the annotation view participates in clustering.\nvar cluster: MKAnnotationView?\nThe clustering annotation view that replaces the annotation view.\nNotifications\nstatic let MKAnnotationCalloutInfoDidChange: NSNotification.Name\nA property to observe to determine when the title or subtitle information of an annotation object changes.\nRelationships\nInherits From\nNSView\nUIView\nSee Also\nShared behavior\nclass MKPlacemark\nA user-friendly description of a location on the map.\nprotocol MKAnnotation\nAn interface for associating your content with a specific map location."
  },
  {
    "title": "MKMarkerAnnotationView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmarkerannotationview",
    "html": "Overview\n\nReturn an instance of this class from the mapView(_:viewFor:) method of your map view delegate when you want to display the same types of markers used in the Maps app.\n\nThe default displayPriority for an instance of this class is defaultLow.\n\nTopics\nSetting the Marker Color\nvar markerTintColor: UIColor?\nThe background color of the marker balloon.\nSetting the Marker Content\nvar glyphText: String?\nThe text to display in the marker balloon.\nvar glyphImage: UIImage?\nAn image to display in the marker balloon.\nvar glyphTintColor: UIColor?\nThe color to apply to the glyph text or image.\nvar selectedGlyphImage: UIImage?\nAn image to display when the user selects the marker.\nSetting the Visibility\nvar titleVisibility: MKFeatureVisibility\nThe visibility of the title text rendered beneath the marker balloon.\nvar subtitleVisibility: MKFeatureVisibility\nThe visibility of the subtitle text rendered beneath the marker balloon.\nenum MKFeatureVisibility\nConstants that indicate the visibility of different map features.\nAnimating the Marker onto the Screen\nvar animatesWhenAdded: Bool\nA Boolean that indicates whether the marker animates into position onscreen.\nRelationships\nInherits From\nMKAnnotationView\nSee Also\nLocation annotations\nAnnotating a Map with Custom Data\nAnnotate a map with location-specific data using default and customized annotation views and callouts.\nclass MKPointAnnotation\nA string-based piece of location-specific data that you apply to a specific point on a map.\nclass MKPinAnnotationView\nAn annotation view that displays a pin image on the map.\nDeprecated"
  },
  {
    "title": "visibleMapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452732-visiblemaprect",
    "html": "Discussion\n\nThis property represents the same basic information as the region property but specified as a map rectangle instead of a region.\n\nChanging the value of this property updates the map view immediately. If you want to animate the change, use the setVisibleMapRect(_:animated:) method instead.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "setCenter(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451976-setcenter",
    "html": "Parameters\ncoordinate\n\nThe new center coordinate for the map.\n\nanimated\n\nSpecify true if you want the map view to scroll to the new location or false if you want the map to display the new location immediately.\n\nDiscussion\n\nChanging the center coordinate centers the map on the new coordinate without changing the current zoom level. It also updates the value in the region property to reflect the new center coordinate and the new span values needed to maintain the current zoom level.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "showAnnotations(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452309-showannotations",
    "html": "Parameters\nannotations\n\nThe annotations that you want to be visible on the map.\n\nanimated\n\nSpecify true if you want the map view to animate the region change, or false if you want the map to display the new region immediately without animations.\n\nDiscussion\n\nCalling this method updates the value in the region property, and potentially other properties, to reflect the new map region.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "centerCoordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451901-centercoordinate",
    "html": "Discussion\n\nChanging the value in this property centers the map on the new coordinate without changing the current zoom level. It also updates the values in the region property to reflect the new center coordinate and the new span values needed to maintain the current zoom level.\n\nChanging the value of this property updates the map view immediately. If you want to animate the change, use the setCenter(_:animated:) method instead.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "setRegion(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452768-setregion",
    "html": "Parameters\nregion\n\nThe new region to display in the map view.\n\nanimated\n\nSpecify true if you want the map view to animate the transition to the new region, or false if you want the map to center on the specified region immediately.\n\nDiscussion\n\nChanging just the center coordinate of the region can still cause the span values to change implicitly. The span values might change because the distances that a span repesents change at different latitudes and longitudes, and the map view may need to adjust the span to account for the new location. If you want to change the center coordinate without changing the zoom level, use the setCenter(_:animated:) instead.\n\nWhen setting a new region, the map may adjust the value in the region parameter so that it fits the visible area of the map precisely. This adjustment ensures that the value in the region property reflects the visible portion of the map. However, it does mean that if you get the value of that property right after calling this method, the returned value may not match the value you set. You can use the regionThatFits(_:) method to determine the region that the map sets.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452709-region",
    "html": "Discussion\n\nThe region encompasses both the latitude and longitude center point of the map, and the span of coordinates to display. The span values provide an implicit zoom value for the map. The larger the displayed area, the lower the amount of zoom. Similarly, the smaller the displayed area, the greater the amount of zoom.\n\nChanging only the center coordinate of the region can still cause the span to change implicitly. The span might change because the distances that a span represents change at different latitudes and longitudes, and the map view may need to adjust the span to account for the new location. If you want to change the center coordinate without changing the zoom level, use the centerCoordinate instead.\n\nChanging the value of this property updates the map view immediately. When setting this property, the map may adjust the new region value so that it fits the visible area of the map precisely. This ensures that the value in this property reflects the visible portion of the map. However, it does mean that if you get the value of this property right after setting it, the returned value may not match the value you set. You can use the regionThatFits(_:) method to determine the region that the map sets.\n\nIf you want to animate the change in region, use the setRegion(_:animated:) method instead.\n\nSee Also\nManipulating the visible portion of the map\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "isRotateEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452274-isrotateenabled",
    "html": "Discussion\n\nWhen this property is true and the framework associates a valid camera with the map, the map uses the camera’s heading angle to rotate the plane of the map around its center point. When this property is false, the map view ignores the camera’s heading angle and the map orients so that the map view situates true north at the top.\n\nSee Also\nAccessing map properties\nenum MKMapType\nThe type of map to display.\nvar isZoomEnabled: Bool\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nvar isScrollEnabled: Bool\nA Boolean value that determines whether the user may scroll around the map.\nvar isPitchEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nvar mapType: MKMapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "isPitchEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452265-ispitchenabled",
    "html": "Discussion\n\nWhen this property is true and the framework associates a valid camera with the map, the map view uses the camera’s pitch angle to tilt the plane of the map. When this property is false, the map ignores the camera’s pitch angle and the map displays as if the user is looking straight down onto it.\n\nIn an app, be sure to check the value of this property to determine whether a map can support 3D.\n\nSee Also\nAccessing map properties\nenum MKMapType\nThe type of map to display.\nvar isZoomEnabled: Bool\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nvar isScrollEnabled: Bool\nA Boolean value that determines whether the user may scroll around the map.\nvar isRotateEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s heading information.\nvar mapType: MKMapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "MKMapViewDelegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdelegate",
    "html": "Overview\n\nBecause many map operations require the MKMapView class to load data asynchronously, the map view calls these methods to notify your app when specific operations complete. The map view also uses these methods to request annotation and overlay views, and to manage interactions with those views.\n\nBefore releasing an MKMapView object that you set a delegate for, remember to set that object’s delegate property to nil. MapKit calls all of your delegate methods on the app’s main thread.\n\nTopics\nResponding to map position changes\nfunc mapView(MKMapView, regionWillChangeAnimated: Bool)\nTells the delegate when the region the map view is displaying is about to change.\nfunc mapViewDidChangeVisibleRegion(MKMapView)\nTells the delegate when the map view’s visible region changes.\nfunc mapView(MKMapView, regionDidChangeAnimated: Bool)\nTells the delegate when the region the map view is displaying changes.\nLoading the map data\nfunc mapViewWillStartLoadingMap(MKMapView)\nTells the delegate that the specified map view is about to retrieve some map data.\nfunc mapViewDidFinishLoadingMap(MKMapView)\nTells the delegate when the specified map view successfully loads the needed map data.\nfunc mapViewDidFailLoadingMap(MKMapView, withError: Error)\nTells the delegate that the specified view is unable to load the map data.\nfunc mapViewWillStartRenderingMap(MKMapView)\nTells the delegate that the map view is about to start rendering some of its tiles.\nfunc mapViewDidFinishRenderingMap(MKMapView, fullyRendered: Bool)\nTells the delegate when the map view finishes rendering all visible tiles.\nTracking the user’s location\nfunc mapViewWillStartLocatingUser(MKMapView)\nTells the delegate that the map view is about to start tracking the user’s location.\nfunc mapViewDidStopLocatingUser(MKMapView)\nTells the delegate when the map view stops tracking the user’s location.\nfunc mapView(MKMapView, didUpdate: MKUserLocation)\nTells the delegate when the map view updates the user’s location.\nfunc mapView(MKMapView, didFailToLocateUserWithError: Error)\nTells the delegate when an attempt to locate the user’s location fails.\nfunc mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)\nTells the delegate when the user-tracking mode changes.\nManaging annotation views\nfunc mapView(MKMapView, viewFor: MKAnnotation) -> MKAnnotationView?\nReturns the view associated with the specified annotation object.\nfunc mapView(MKMapView, didAdd: [MKAnnotationView])\nTells the delegate when the map view adds one or more annotation views to the map.\nfunc mapView(MKMapView, annotationView: MKAnnotationView, calloutAccessoryControlTapped: UIControl)\nTells the delegate when the user taps one of the annotation view’s accessory buttons.\nfunc mapView(MKMapView, clusterAnnotationForMemberAnnotations: [MKAnnotation]) -> MKClusterAnnotation\nAsks the delegate to provide a cluster annotation object for the specified annotations.\nDragging an annotation view\nfunc mapView(MKMapView, annotationView: MKAnnotationView, didChange: MKAnnotationView.DragState, fromOldState: MKAnnotationView.DragState)\nTells the delegate when the drag state of one of its annotation views changes.\nSelecting annotations and annotations views\nfunc mapView(MKMapView, didSelect: MKAnnotationView)\nTells the delegate when the user selects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotationView)\nTells the delegate when the user deselects one or more of its annotation views.\nfunc mapView(MKMapView, didDeselect: MKAnnotation)\nTells the delegate when the user deselects one or more annotations.\nfunc mapView(MKMapView, didSelect: MKAnnotation)\nTells the delegate when the user selects one or more annotations.\nManaging the display of overlays\nfunc mapView(MKMapView, rendererFor: MKOverlay) -> MKOverlayRenderer\nAsks the delegate for a renderer object to use when drawing the specified overlay.\nfunc mapView(MKMapView, didAdd: [MKOverlayRenderer])\nTells the delegate when the map view adds one or more renderer objects to the map.\nfunc mapView(MKMapView, viewFor: MKOverlay) -> MKOverlayView\nAsks the delegate for the overlay view to use when displaying the specified overlay object.\nDeprecated\nfunc mapView(MKMapView, didAddOverlayViews: [Any])\nTells the delegate when the map adds one or more overlay views to the map.\nDeprecated\nRelationships\nInherits From\nNSObjectProtocol\nSee Also\nCustomizing the map view behavior\nvar delegate: MKMapViewDelegate?\nThe receiver’s delegate.\nvar selectableMapFeatures: MKMapFeatureOptions\nThe property that describes which selectable features the map responds to."
  },
  {
    "title": "isZoomEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452577-iszoomenabled",
    "html": "Discussion\n\nThis property controls only user interactions with the map. If you set the value of this property to false, you may still change the zoom level programmatically by changing the value in the region property.\n\nThe default value of this property is true.\n\nSee Also\nAccessing map properties\nenum MKMapType\nThe type of map to display.\nvar isScrollEnabled: Bool\nA Boolean value that determines whether the user may scroll around the map.\nvar isPitchEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nvar isRotateEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s heading information.\nvar mapType: MKMapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "delegate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452115-delegate",
    "html": "Discussion\n\nA map view sends messages to its delegate regarding the loading of map data and changes in the portion of the map it displays. The delegate also manages the annotation views that highlight points of interest on the map.\n\nThe delegate needs to implement the methods of the MKMapViewDelegate protocol.\n\nSee Also\nCustomizing the map view behavior\nprotocol MKMapViewDelegate\nOptional methods that you use to receive map-related update messages.\nvar selectableMapFeatures: MKMapFeatureOptions\nThe property that describes which selectable features the map responds to."
  },
  {
    "title": "MKHybridMapConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkhybridmapconfiguration",
    "html": "Topics\nCreating a hybrid map configuration\ninit()\nCreates a new hybrid map configuration.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new hybrid map configuration with the specified elevation style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nControlling what the map displays\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter the framework uses to determine the points of interest to show on the map.\nvar showsTraffic: Bool\nA Boolean value that indicates whether the maps shows traffic conditions.\nRelationships\nInherits From\nMKMapConfiguration\nSee Also\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery."
  },
  {
    "title": "MKMapConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapconfiguration",
    "html": "Topics\nControlling the elevation style\nvar elevationStyle: MKMapConfiguration.ElevationStyle\nThe value that indicates the map’s elevation style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery."
  },
  {
    "title": "preferredConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/4010601-preferredconfiguration",
    "html": "See Also\nConfiguring the map appearance\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery."
  },
  {
    "title": "showsUserTrackingButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/4284036-showsusertrackingbutton",
    "html": "See Also\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery."
  },
  {
    "title": "pitchButtonVisibility | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/4284035-pitchbuttonvisibility",
    "html": "Discussion\n\nUse this button to display or hide a button that allows a person to set the map to a pleasing pitch or return the map to a flat appearance.\n\nSee Also\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery."
  },
  {
    "title": "MKStringFromMapSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452351-mkstringfrommapsize",
    "html": "Parameters\nsize\n\nThe map size to format.\n\nReturn Value\n\nA formatted string containing the width and height values of the map size."
  },
  {
    "title": "MKMapSizeEqualToSize(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452146-mkmapsizeequaltosize",
    "html": "Parameters\nsize1\n\nThe first map size.\n\nsize2\n\nThe second map size.\n\nReturn Value\n\ntrue if the width and height values in both sizes are exactly the same, or false if one or both values are different."
  },
  {
    "title": "width | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsize/1451927-width",
    "html": "See Also\nGetting the width and height\nvar height: Double\nThe height of the specified area, measured in map points."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsize/1452750-init",
    "html": "See Also\nCreating a map size\ninit(width: Double, height: Double)\nCreates a map size that represents an area on a two-dimensional projection of a map with the specified width and height."
  },
  {
    "title": "init(mapView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkusertrackingbarbuttonitem/1620146-init",
    "html": "Parameters\nmapView\n\nThe map view used by this bar button item.\n\nReturn Value\n\nThe initialized bar button item.\n\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "init(mapView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpitchcontrol/3567215-init",
    "html": "Parameters\nmapView\n\nThe map to associate with the zoom control."
  },
  {
    "title": "mapRectThatFits(_:edgePadding:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452625-maprectthatfits",
    "html": "Parameters\nmapRect\n\nThe initial map rectangle with the width and height you want to adjust.\n\ninsets\n\nThe distance (in screen points) by which to inset the returned rectangle from the actual boundaries of the map view’s frame.\n\nReturn Value\n\nMapKit centers the map rectangle on the same point of the map, and adjusts the width and height to fit in the map view’s frame, minus its inset values.\n\nSee Also\nAdjusting map regions and rectangles\nfunc regionThatFits(MKCoordinateRegion) -> MKCoordinateRegion\nAdjusts the aspect ratio of the specified region to ensure that it fits in the map view’s frame.\nfunc mapRectThatFits(MKMapRect) -> MKMapRect\nReturns a centered map rectangle with the same aspect ratio as the map view’s frame."
  },
  {
    "title": "regionThatFits(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452371-regionthatfits",
    "html": "Parameters\nregion\n\nThe initial region whose span you want to adjust.\n\nReturn Value\n\nA region that is still centered on the same point of the map but whose span values are adjusted to fit in the map view’s frame.\n\nDiscussion\n\nYou can use this method to normalize the region values before displaying them in the map. This method returns a new region that both contains the specified region and fits neatly inside the map view’s frame.\n\nSee Also\nAdjusting map regions and rectangles\nfunc mapRectThatFits(MKMapRect) -> MKMapRect\nReturns a centered map rectangle with the same aspect ratio as the map view’s frame.\nfunc mapRectThatFits(MKMapRect, edgePadding: UIEdgeInsets) -> MKMapRect\nReturns a centered, inset map rectangle with the same aspect ratio as the map view’s frame."
  },
  {
    "title": "init(mapView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkzoomcontrol/3567218-init",
    "html": "Parameters\nmapView\n\nThe map to associate with the zoom control."
  },
  {
    "title": "convert(_:toRegionFrom:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452305-convert",
    "html": "Parameters\nrect\n\nThe rectangle you want to convert.\n\nview\n\nThe view that serves as the reference coordinate system for the rect parameter.\n\nReturn Value\n\nThe map region corresponding to the specified view rectangle.\n\nSee Also\nConverting map coordinates\nfunc convert(CLLocationCoordinate2D, toPointTo: UIView?) -> CGPoint\nConverts a map coordinate to a point in the specified view.\nfunc convert(CGPoint, toCoordinateFrom: UIView?) -> CLLocationCoordinate2D\nConverts a point in the specified view’s coordinate system to a map coordinate.\nfunc convert(MKCoordinateRegion, toRectTo: UIView?) -> CGRect\nConverts a map region to a rectangle in the specified view."
  },
  {
    "title": "mapRectThatFits(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452169-maprectthatfits",
    "html": "Parameters\nmapRect\n\nThe initial map rectangle whose width and height you want to adjust to the view frame.\n\nReturn Value\n\nMapKit centers the map rectangle on the same point of the map, and adjusts the width and height to fit in the map view’s frame.\n\nDiscussion\n\nReturns a map rectangle with the same aspect ratio as the map view’s frame, centered at the same location as the specified map rectangle.\n\nYou can use this method to normalize map rectangle values before displaying the corresponding area. This method returns a new map rectangle that both contains the specified rectangle and fits neatly inside the map view’s frame.\n\nSee Also\nAdjusting map regions and rectangles\nfunc regionThatFits(MKCoordinateRegion) -> MKCoordinateRegion\nAdjusts the aspect ratio of the specified region to ensure that it fits in the map view’s frame.\nfunc mapRectThatFits(MKMapRect, edgePadding: UIEdgeInsets) -> MKMapRect\nReturns a centered, inset map rectangle with the same aspect ratio as the map view’s frame."
  },
  {
    "title": "convert(_:toRectTo:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452055-convert",
    "html": "Parameters\nregion\n\nThe map region that you want to find the corresponding view rectangle for.\n\nview\n\nThe view where you want to locate the specified map region. If this parameter is nil, the method specifies the returned rectangle in the window’s coordinate system. If view isn’t nil, the rectangle belongs to the same window as the map view.\n\nReturn Value\n\nThe rectangle corresponding to the specified map region.\n\nSee Also\nConverting map coordinates\nfunc convert(CLLocationCoordinate2D, toPointTo: UIView?) -> CGPoint\nConverts a map coordinate to a point in the specified view.\nfunc convert(CGPoint, toCoordinateFrom: UIView?) -> CLLocationCoordinate2D\nConverts a point in the specified view’s coordinate system to a map coordinate.\nfunc convert(CGRect, toRegionFrom: UIView?) -> MKCoordinateRegion\nConverts a rectangle in the specified view’s coordinate system to a map region."
  },
  {
    "title": "convert(_:toCoordinateFrom:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452503-convert",
    "html": "Parameters\npoint\n\nThe point you want to convert.\n\nview\n\nThe view that serves as the reference coordinate system for the point parameter.\n\nReturn Value\n\nThe map coordinate at the specified point.\n\nSee Also\nConverting map coordinates\nfunc convert(CLLocationCoordinate2D, toPointTo: UIView?) -> CGPoint\nConverts a map coordinate to a point in the specified view.\nfunc convert(MKCoordinateRegion, toRectTo: UIView?) -> CGRect\nConverts a map region to a rectangle in the specified view.\nfunc convert(CGRect, toRegionFrom: UIView?) -> MKCoordinateRegion\nConverts a rectangle in the specified view’s coordinate system to a map region."
  },
  {
    "title": "removeOverlays(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452719-removeoverlays",
    "html": "Parameters\noverlays\n\nAn array of objects, each of which conforms to the MKOverlay protocol.\n\nDiscussion\n\nThis method removes the specified overlays regardless of which level each one is in. Removing an overlay also removes its corresponding renderer, if one is in use. The method ignores an overlay object if it isn’t associated with the map view.\n\nSee Also\nRemoving overlays\nfunc removeOverlay(MKOverlay)\nRemoves a single overlay object from the map.\nRelated Documentation\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map."
  },
  {
    "title": "convert(_:toPointTo:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452694-convert",
    "html": "Parameters\ncoordinate\n\nThe map coordinate that you want to find the corresponding point for.\n\nview\n\nThe view where you want to locate the specified map coordinate. If this parameter is nil, the method specifies the returned point in the window’s coordinate system. If view isn’t nil, the point belongs to the same window as the map view.\n\nReturn Value\n\nThe point (in the appropriate view or window coordinate system) corresponding to the specified latitude and longitude value.\n\nSee Also\nConverting map coordinates\nfunc convert(CGPoint, toCoordinateFrom: UIView?) -> CLLocationCoordinate2D\nConverts a point in the specified view’s coordinate system to a map coordinate.\nfunc convert(MKCoordinateRegion, toRectTo: UIView?) -> CGRect\nConverts a map region to a rectangle in the specified view.\nfunc convert(CGRect, toRegionFrom: UIView?) -> MKCoordinateRegion\nConverts a rectangle in the specified view’s coordinate system to a map region."
  },
  {
    "title": "exchangeOverlay(at:withOverlayAt:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452575-exchangeoverlay",
    "html": "Parameters\nindex1\n\nThe index of an overlay in the MKOverlayLevel.aboveLabels map level.\n\nindex2\n\nThe index of another overlay in the MKOverlayLevel.aboveLabels map level.\n\nDiscussion\n\nIf you need to exchange overlays in other map levels, use the exchangeOverlay(_:with:) method.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects."
  },
  {
    "title": "insertOverlay(_:below:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452526-insertoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object to insert.\n\nsibling\n\nAn existing object in the overlays array. This object needs to exist in the array and can’t be nil.\n\nDiscussion\n\nThis method inserts the overlay into the MKOverlayLevel.aboveLabels level and positions it relative to the specified sibling. When displaying it, the map view displays the overlay’s contents beneath that of its sibling. If the sibling isn’t in the same map level, this method appends the overlay to the end of the list of overlays at the indicated level.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index."
  },
  {
    "title": "addOverlays(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452335-addoverlays",
    "html": "Parameters\noverlays\n\nAn array of objects, each of which needs to conform to the MKOverlay protocol.\n\nDiscussion\n\nThe map view adds the specified objects to the group of overlay objects in the MKOverlayLevel.aboveLabels level. Adding an overlay causes the map view to begin monitoring the area that the overlay represents. As soon as the bounding rectangle of the overlay intersects the visible portion of the map, the map view tries to draw the overlay, or adds the corresponding overlay view to the map. Implement the mapView(_:rendererFor:) method of the map view’s delegate object to provide the overlay view.\n\nTo remove multiple overlays from a map, use the removeOverlays(_:) method.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index.\nRelated Documentation\nfunc removeOverlay(MKOverlay)\nRemoves a single overlay object from the map.\nfunc removeOverlays([MKOverlay])\nRemoves one or more overlay objects from the map."
  },
  {
    "title": "addOverlay(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451964-addoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object to add. This object needs to conform to the MKOverlay protocol.\n\nDiscussion\n\nThe map view adds the specified object to the group of overlay objects in the MKOverlayLevel.aboveLabels level. Adding an overlay causes the map view to begin monitoring the area that the overlay represents. As soon as the bounding rectangle of an overlay intersects the visible portion of the map, the map view adds a corresponding overlay view to the map. Implement the mapView(_:rendererFor:) method of the map view’s delegate object to provide the overlay view.\n\nTo remove an overlay from a map, use the removeOverlay(_:) method.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index.\nRelated Documentation\nfunc removeOverlay(MKOverlay)\nRemoves a single overlay object from the map.\nfunc removeOverlays([MKOverlay])\nRemoves one or more overlay objects from the map."
  },
  {
    "title": "addOverlays(_:level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452518-addoverlays",
    "html": "Parameters\noverlays\n\nThe array of overlay objects to add. Each object in the array must conform to the MKOverlay protocol.\n\nlevel\n\nThe map level at which to place the overlays. For a list of possible values for this parameter, see MKOverlayLevel.\n\nDiscussion\n\nPositioning an overlay at a specific level places that overlay’s visual representation in front of or behind other map content such as map labels and point-of-interest icons.\n\nThis method adds the specified overlays to the end of the list of overlay objects at the given level. Adding the overlays also causes the map view to begin monitoring the area they represent. As soon as the bounding rectangle of an overlay intersects the visible portion of the map, the map view calls your delegate’s mapView(_:rendererFor:) method to get the renderer object to use when drawing that overlay.\n\nTo remove multiple overlays from a map, use the removeOverlays(_:) method.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index."
  },
  {
    "title": "addOverlay(_:level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452635-addoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object to add. This object needs to conform to the MKOverlay protocol.\n\nlevel\n\nThe map level at which to place the overlay. For a list of possible values for this parameter, see MKOverlayLevel.\n\nDiscussion\n\nPositioning an overlay at a specific level places that overlay’s visual representation in front of or behind other map content such as map labels and point-of-interest icons.\n\nThis method adds the specified overlay to the end of the list of overlay objects at the given level. Adding an overlay also causes the map view to begin monitoring the area they represent. As soon as the bounding rectangle of the overlay intersects the visible portion of the map, the map view calls your delegate’s mapView(_:rendererFor:) method to get the renderer object to use when drawing the overlay.\n\nTo remove an overlay from a map, use the removeOverlay(_:) method.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index."
  },
  {
    "title": "view(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1616201-view",
    "html": "Deprecated\n\nUse the renderer(for:) method instead.\n\nParameters\noverlay\n\nThe overlay object whose view you want.\n\nReturn Value\n\nThe view associated with the overlay object or nil if the overlay is not onscreen.\n\nSee Also\nAccessing overlays\nvar overlays: [MKOverlay]\nThe overlay objects associated with the map view.\nfunc overlays(in: MKOverlayLevel) -> [MKOverlay]\nReturns overlay objects in the specified level of the map.\nfunc renderer(for: MKOverlay) -> MKOverlayRenderer?\nReturns the renderer object for drawing the contents of the specified overlay object.\nenum MKOverlayLevel\nConstants that indicate the position of overlays relative to other content."
  },
  {
    "title": "MKOverlayLevel | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlaylevel",
    "html": "Topics\nConstants\ncase aboveRoads\nPlace the overlay above roadways but below map labels, shields, or point-of-interest icons.\ncase aboveLabels\nPlace the overlay above map labels, shields, or point-of-interest icons but below annotations and 3D projections of buildings.\nRelationships\nConforms To\nSendable\nSee Also\nAccessing overlays\nvar overlays: [MKOverlay]\nThe overlay objects associated with the map view.\nfunc overlays(in: MKOverlayLevel) -> [MKOverlay]\nReturns overlay objects in the specified level of the map.\nfunc renderer(for: MKOverlay) -> MKOverlayRenderer?\nReturns the renderer object for drawing the contents of the specified overlay object.\nfunc view(for: MKOverlay) -> MKOverlayView\nReturns the view associated with the overlay object, if any.\nDeprecated"
  },
  {
    "title": "overlays(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452757-overlays",
    "html": "Parameters\nlevel\n\nThe map level whose overlays you want. For a list of possible values for this parameter, see MKOverlayLevel.\n\nReturn Value\n\nAn array of objects conforming to the MKOverlay protocol that display in the specified map level. If there are no overlays at the specified level, this method returns an empty array.\n\nDiscussion\n\nYou can use this method to get all of the overlays assigned to a specific map level, which might be a subset of the complete set of overlay objects. For overlapping overlay objects, the order of objects in the array represents their visual order when displayed on the map, with objects in the beginning of the array located behind those at later indexes.\n\nSee Also\nAccessing overlays\nvar overlays: [MKOverlay]\nThe overlay objects associated with the map view.\nfunc renderer(for: MKOverlay) -> MKOverlayRenderer?\nReturns the renderer object for drawing the contents of the specified overlay object.\nenum MKOverlayLevel\nConstants that indicate the position of overlays relative to other content.\nfunc view(for: MKOverlay) -> MKOverlayView\nReturns the view associated with the overlay object, if any.\nDeprecated\nRelated Documentation\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level."
  },
  {
    "title": "renderer(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452464-renderer",
    "html": "Parameters\noverlay\n\nThe overlay object whose renderer you want.\n\nReturn Value\n\nThe renderer object in use for the specified overlay or nil if the overlay is not onscreen.\n\nDiscussion\n\nThis method returns the renderer object that your map delegate provided in its mapView(_:rendererFor:) method.\n\nSee Also\nAccessing overlays\nvar overlays: [MKOverlay]\nThe overlay objects associated with the map view.\nfunc overlays(in: MKOverlayLevel) -> [MKOverlay]\nReturns overlay objects in the specified level of the map.\nenum MKOverlayLevel\nConstants that indicate the position of overlays relative to other content.\nfunc view(for: MKOverlay) -> MKOverlayView\nReturns the view associated with the overlay object, if any.\nDeprecated"
  },
  {
    "title": "MKMapViewDefaultClusterAnnotationViewReuseIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdefaultclusterannotationviewreuseidentifier",
    "html": "Discussion\n\nUse this constant to register a default annotation view to use for clusters of annotations. The map view uses this cluster annotation view when your map view’s delegate doesn’t implement the mapView(_:viewFor:) method, or when that method returns nil.\n\nSee Also\nCreating annotation views\nfunc register(AnyClass?, forAnnotationViewWithReuseIdentifier: String)\nRegisters an annotation view class that the map can create automatically.\nfunc dequeueReusableAnnotationView(withIdentifier: String, for: MKAnnotation) -> MKAnnotationView\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier.\nfunc view(for: MKAnnotation) -> MKAnnotationView?\nReturns the annotation view associated with the specified annotation object, if any.\nlet MKMapViewDefaultAnnotationViewReuseIdentifier: String\nThe default reuse identifier for your map’s annotation views."
  },
  {
    "title": "MKMapViewDefaultAnnotationViewReuseIdentifier | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapviewdefaultannotationviewreuseidentifier",
    "html": "Discussion\n\nUse this constant to register a default annotation view. This map view uses this default annotation view when your map view’s delegate doesn’t implement the mapView(_:viewFor:) method, or when that method returns nil.\n\nSee Also\nCreating annotation views\nfunc register(AnyClass?, forAnnotationViewWithReuseIdentifier: String)\nRegisters an annotation view class that the map can create automatically.\nfunc dequeueReusableAnnotationView(withIdentifier: String, for: MKAnnotation) -> MKAnnotationView\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier.\nfunc view(for: MKAnnotation) -> MKAnnotationView?\nReturns the annotation view associated with the specified annotation object, if any.\nlet MKMapViewDefaultClusterAnnotationViewReuseIdentifier: String\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "view(for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452512-view",
    "html": "Parameters\nannotation\n\nThe annotation object whose view you want.\n\nReturn Value\n\nThe annotation view or nil if the view has not yet been created. This method may also return nil if the annotation is not in the visible map region and therefore does not have an associated annotation view.\n\nSee Also\nCreating annotation views\nfunc register(AnyClass?, forAnnotationViewWithReuseIdentifier: String)\nRegisters an annotation view class that the map can create automatically.\nfunc dequeueReusableAnnotationView(withIdentifier: String, for: MKAnnotation) -> MKAnnotationView\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier.\nlet MKMapViewDefaultAnnotationViewReuseIdentifier: String\nThe default reuse identifier for your map’s annotation views.\nlet MKMapViewDefaultClusterAnnotationViewReuseIdentifier: String\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "dequeueReusableAnnotationView(withIdentifier:for:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/2887123-dequeuereusableannotationview",
    "html": "Parameters\nidentifier\n\nA string identifying the annotation view to create.\n\nannotation\n\nThe annotation the map is displaying. This method automatically assigns this annotation object to the returned annotation view.\n\nReturn Value\n\nAn annotation view with the specified identifier.\n\nDiscussion\n\nFor performance reasons, be sure to reuse MKAnnotationView objects in your map views. As annotation views move offscreen, the map view moves them to an internally managed reuse queue. As new annotations move onscreen, and the map view prompts your code to provide a corresponding annotation view, use this method to dequeue an existing view. Dequeueing saves time and memory during performance-critical operations, such as scrolling.\n\nIf the map view can dequeue an existing view, this method tries to create one from the specified identifier. Before this can happen, you need to register an annotation view class using the register(_:forAnnotationViewWithReuseIdentifier:) method. If there’s no registered class with the appropriate identifier, this method throws an exception.\n\nSee Also\nCreating annotation views\nfunc register(AnyClass?, forAnnotationViewWithReuseIdentifier: String)\nRegisters an annotation view class that the map can create automatically.\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier.\nfunc view(for: MKAnnotation) -> MKAnnotationView?\nReturns the annotation view associated with the specified annotation object, if any.\nlet MKMapViewDefaultAnnotationViewReuseIdentifier: String\nThe default reuse identifier for your map’s annotation views.\nlet MKMapViewDefaultClusterAnnotationViewReuseIdentifier: String\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "register(_:forAnnotationViewWithReuseIdentifier:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/2887124-register",
    "html": "Parameters\nviewClass\n\nThe class of an annotation view that you use in your map. The class needs to be a subclass of MKAnnotationView.\n\nidentifier\n\nThe reuse identifier to associate with the specified class. This parameter can’t be nil or an empty string.\n\nDiscussion\n\nUse this method to register one or more views that you use to display annotations on your map. Register your classes before adding any annotations to the map.\n\nWhen you register an annotation view class using this method, the dequeueReusableAnnotationView(withIdentifier:for:) method uses the provided identifier to create the view that you register. It creates a new view only if an existing view isn’t available for reuse.\n\nSee Also\nCreating annotation views\nfunc dequeueReusableAnnotationView(withIdentifier: String, for: MKAnnotation) -> MKAnnotationView\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier.\nfunc view(for: MKAnnotation) -> MKAnnotationView?\nReturns the annotation view associated with the specified annotation object, if any.\nlet MKMapViewDefaultAnnotationViewReuseIdentifier: String\nThe default reuse identifier for your map’s annotation views.\nlet MKMapViewDefaultClusterAnnotationViewReuseIdentifier: String\nThe default reuse identifier for the annotation view representing a cluster of annotations."
  },
  {
    "title": "deselectAnnotation(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451988-deselectannotation",
    "html": "Parameters\nannotation\n\nThe annotation object to deselect.\n\nanimated\n\nIf true, the map view animates the callout view offscreen.\n\nSee Also\nManaging annotation selections\nvar annotationVisibleRect: CGRect\nThe visible rectangle where the map is displaying annotation views.\nvar selectedAnnotations: [MKAnnotation]\nThe selected annotations.\nfunc selectAnnotation(MKAnnotation, animated: Bool)\nSelects the specified annotation and displays a callout view for it."
  },
  {
    "title": "annotations(in:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452279-annotations",
    "html": "Parameters\nmapRect\n\nThe portion of the map that you want to search for annotations.\n\nReturn Value\n\nThe set of annotation objects within mapRect.\n\nDiscussion\n\nThis method offers a fast way to retrieve the annotation objects in a particular portion of the map. It’s much faster than doing a linear search of the objects in the annotations property yourself.\n\nSee Also\nAnnotating the map\nvar annotations: [MKAnnotation]\nThe annotations associated with the map view.\nfunc addAnnotation(MKAnnotation)\nAdds the specified annotation to the map view.\nfunc addAnnotations([MKAnnotation])\nAdds an array of annotation objects to the map view.\nfunc removeAnnotation(MKAnnotation)\nRemoves the specified annotation object from the map view.\nfunc removeAnnotations([MKAnnotation])\nRemoves an array of annotation objects from the map view."
  },
  {
    "title": "selectAnnotation(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451950-selectannotation",
    "html": "Parameters\nannotation\n\nThe annotation object to select.\n\nanimated\n\nIf true, the map view animates the callout view into position.\n\nDiscussion\n\nIf the specified annotation isn’t onscreen, and, therefore, doesn’t have an associated annotation view, this method has no effect.\n\nSee Also\nManaging annotation selections\nvar annotationVisibleRect: CGRect\nThe visible rectangle where the map is displaying annotation views.\nvar selectedAnnotations: [MKAnnotation]\nThe selected annotations.\nfunc deselectAnnotation(MKAnnotation?, animated: Bool)\nDeselects the specified annotation and hides its callout view."
  },
  {
    "title": "selectedAnnotations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452570-selectedannotations",
    "html": "Discussion\n\nAssigning a new array to this property selects only the first annotation in the array.\n\nSee Also\nManaging annotation selections\nvar annotationVisibleRect: CGRect\nThe visible rectangle where the map is displaying annotation views.\nfunc selectAnnotation(MKAnnotation, animated: Bool)\nSelects the specified annotation and displays a callout view for it.\nfunc deselectAnnotation(MKAnnotation?, animated: Bool)\nDeselects the specified annotation and hides its callout view."
  },
  {
    "title": "removeAnnotation(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452409-removeannotation",
    "html": "Parameters\nannotation\n\nThe annotation object to remove. This object needs to conform to the MKAnnotation protocol.\n\nDiscussion\n\nIf the annotation is associated with an annotation view, and that view has a reuse identifier, this method removes the annotation view and queues it internally for later reuse. You can retrieve queued annotation views (and associate them with new annotations) using the dequeueReusableAnnotationView(withIdentifier:) method.\n\nRemoving an annotation object disassociates it from the map view entirely, preventing the map view from displaying it on the map. Typically, you call this method only when you want to hide or delete a specified annotation.\n\nSee Also\nAnnotating the map\nvar annotations: [MKAnnotation]\nThe annotations associated with the map view.\nfunc addAnnotation(MKAnnotation)\nAdds the specified annotation to the map view.\nfunc addAnnotations([MKAnnotation])\nAdds an array of annotation objects to the map view.\nfunc removeAnnotations([MKAnnotation])\nRemoves an array of annotation objects from the map view.\nfunc annotations(in: MKMapRect) -> Set<AnyHashable>\nReturns the annotation objects within the specified map rectangle."
  },
  {
    "title": "setUserTrackingMode(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1616205-setusertrackingmode",
    "html": "Parameters\nmode\n\nThe mode for tracking the user’s location. MKUserTrackingMode describes the possible values.\n\nanimated\n\nIf true, the map animates the change from the current mode to the new mode; otherwise, it doesn’t. This parameter affects only tracking-mode changes. Changes to the user’s location or heading use animation.\n\nDiscussion\n\nSetting the tracking mode to MKUserTrackingMode.follow or MKUserTrackingMode.followWithHeading causes the map view to center the map on that location and begin tracking the user’s location. If it’s zoomed out, the map view automatically zooms in on the user’s location, effectively changing the current visible region.\n\nSee Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar showsUserLocation: Bool\nA Boolean value that indicates whether the map tries to display the user’s location.\nvar isUserLocationVisible: Bool\nA Boolean value that indicates whether the user’s location is visible in the map view.\nvar userLocation: MKUserLocation\nThe annotation object that represents the user’s location.\nvar userTrackingMode: MKUserTrackingMode\nThe mode to use for tracking the user’s location.\nenum MKUserTrackingMode\nThe mode to use for tracking the user’s location on the map.\nRelated Documentation\nfunc mapView(MKMapView, didChange: MKUserTrackingMode, animated: Bool)\nTells the delegate when the user-tracking mode changes.\nfunc mapView(MKMapView, didUpdate: MKUserLocation)\nTells the delegate when the map view updates the user’s location.\nvar heading: CLHeading?\nThe heading of the user’s location."
  },
  {
    "title": "addAnnotations(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451889-addannotations",
    "html": "Parameters\nannotations\n\nAn array of annotation objects. Each object in the array must conform to the MKAnnotation protocol. The map view retains the individual annotation objects.\n\nSee Also\nAnnotating the map\nvar annotations: [MKAnnotation]\nThe annotations associated with the map view.\nfunc addAnnotation(MKAnnotation)\nAdds the specified annotation to the map view.\nfunc removeAnnotation(MKAnnotation)\nRemoves the specified annotation object from the map view.\nfunc removeAnnotations([MKAnnotation])\nRemoves an array of annotation objects from the map view.\nfunc annotations(in: MKMapRect) -> Set<AnyHashable>\nReturns the annotation objects within the specified map rectangle."
  },
  {
    "title": "addAnnotation(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452069-addannotation",
    "html": "Parameters\nannotation\n\nThe annotation object to add to the receiver. This object must conform to the MKAnnotation protocol. The map view retains the specified object.\n\nSee Also\nAnnotating the map\nvar annotations: [MKAnnotation]\nThe annotations associated with the map view.\nfunc addAnnotations([MKAnnotation])\nAdds an array of annotation objects to the map view.\nfunc removeAnnotation(MKAnnotation)\nRemoves the specified annotation object from the map view.\nfunc removeAnnotations([MKAnnotation])\nRemoves an array of annotation objects from the map view.\nfunc annotations(in: MKMapRect) -> Set<AnyHashable>\nReturns the annotation objects within the specified map rectangle."
  },
  {
    "title": "MKUserTrackingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkusertrackingmode",
    "html": "Topics\nConstants\ncase none\nThe map doesn’t follow the user’s location.\ncase follow\nThe map follows the user location.\ncase followWithHeading\nThe map follows the user’s location and rotates when the heading changes.\nRelationships\nConforms To\nSendable\nSee Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar showsUserLocation: Bool\nA Boolean value that indicates whether the map tries to display the user’s location.\nvar isUserLocationVisible: Bool\nA Boolean value that indicates whether the user’s location is visible in the map view.\nvar userLocation: MKUserLocation\nThe annotation object that represents the user’s location.\nvar userTrackingMode: MKUserTrackingMode\nThe mode to use for tracking the user’s location.\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation."
  },
  {
    "title": "userLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452459-userlocation",
    "html": "See Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar showsUserLocation: Bool\nA Boolean value that indicates whether the map tries to display the user’s location.\nvar isUserLocationVisible: Bool\nA Boolean value that indicates whether the user’s location is visible in the map view.\nvar userTrackingMode: MKUserTrackingMode\nThe mode to use for tracking the user’s location.\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation.\nenum MKUserTrackingMode\nThe mode to use for tracking the user’s location on the map."
  },
  {
    "title": "annotations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452593-annotations",
    "html": "Discussion\n\nThe objects in this array adopt the MKAnnotation protocol. If the map view has no associated annotations, the value of this property is an empty array.\n\nSee Also\nAnnotating the map\nfunc addAnnotation(MKAnnotation)\nAdds the specified annotation to the map view.\nfunc addAnnotations([MKAnnotation])\nAdds an array of annotation objects to the map view.\nfunc removeAnnotation(MKAnnotation)\nRemoves the specified annotation object from the map view.\nfunc removeAnnotations([MKAnnotation])\nRemoves an array of annotation objects from the map view.\nfunc annotations(in: MKMapRect) -> Set<AnyHashable>\nReturns the annotation objects within the specified map rectangle."
  },
  {
    "title": "userTrackingMode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1616208-usertrackingmode",
    "html": "Discussion\n\nSetting the tracking mode to MKUserTrackingMode.follow or MKUserTrackingMode.followWithHeading causes the map view to center the map on that location and begin tracking the user’s location. If it’s zoomed out, the map view automatically zooms in on the user’s location, effectively changing the current visible region.\n\nFor possible values, see MKUserTrackingMode.\n\nSee Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar showsUserLocation: Bool\nA Boolean value that indicates whether the map tries to display the user’s location.\nvar isUserLocationVisible: Bool\nA Boolean value that indicates whether the user’s location is visible in the map view.\nvar userLocation: MKUserLocation\nThe annotation object that represents the user’s location.\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation.\nenum MKUserTrackingMode\nThe mode to use for tracking the user’s location on the map."
  },
  {
    "title": "isUserLocationVisible | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452040-isuserlocationvisible",
    "html": "Discussion\n\nWhen determining whether the user’s location is visible, this property factors in the horizontal accuracy of the location data. Specifically, if the rectangle that the user’s location represents, plus or minus the horizontal accuracy of that location, intersects the map’s visible rectangle, this property contains the value true. If that location rectangle doesn’t intersect the map’s visible rectangle, this property contains the value false.\n\nWhen the user’s location is unknown, this property contains the value false.\n\nSee Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar showsUserLocation: Bool\nA Boolean value that indicates whether the map tries to display the user’s location.\nvar userLocation: MKUserLocation\nThe annotation object that represents the user’s location.\nvar userTrackingMode: MKUserTrackingMode\nThe mode to use for tracking the user’s location.\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation.\nenum MKUserTrackingMode\nThe mode to use for tracking the user’s location on the map."
  },
  {
    "title": "showsTraffic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452433-showstraffic",
    "html": "Deprecated\n\nUse MKStandardMapConfiguration or MKHybridMapConfiguration and configure the showsTraffic property instead.\n\nDiscussion\n\nThe mapType property must be set to MKMapType.standard or MKMapType.hybrid for traffic information to be shown. The default value of this property is false.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated"
  },
  {
    "title": "showsUserLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452682-showsuserlocation",
    "html": "Discussion\n\nThis property doesn’t indicate whether the user’s location is actually visible on the map, only whether the map view tries to display it. Setting this property to true causes the map view to use the Core Location framework to find the user’s location and try to display it on the map. While this property is true, the map view continues to track the user’s location and update it periodically. The default value of this property is false.\n\nShowing the user’s location doesn’t ensure that it’s visible on the map. The user might scroll the map to a different point, causing the location to be offscreen. To determine whether the user’s location displays on the map, use the isUserLocationVisible property.\n\nSee Also\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar isUserLocationVisible: Bool\nA Boolean value that indicates whether the user’s location is visible in the map view.\nvar userLocation: MKUserLocation\nThe annotation object that represents the user’s location.\nvar userTrackingMode: MKUserTrackingMode\nThe mode to use for tracking the user’s location.\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation.\nenum MKUserTrackingMode\nThe mode to use for tracking the user’s location on the map."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3143417-pointofinterestfilter",
    "html": "Deprecated\n\nUse one of the map configurations that support an MKPointOfInterestFilter, such as MKStandardMapConfiguration or MKHybridMapConfiguration instead.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "removeOverlay(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451921-removeoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object to remove.\n\nDiscussion\n\nThis method removes the overlay regardless of the level that it’s in. Removing an overlay also removes its corresponding renderer, if one is in use. If the specified overlay isn’t associated with the map view, this method does nothing.\n\nSee Also\nRemoving overlays\nfunc removeOverlays([MKOverlay])\nRemoves one or more overlay objects from the map.\nRelated Documentation\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map."
  },
  {
    "title": "insertOverlay(_:above:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452427-insertoverlay",
    "html": "Parameters\noverlay\n\nThe overlay object to insert.\n\nsibling\n\nAn existing object in the overlays array. This object needs to exist in the array and can’t be nil.\n\nDiscussion\n\nThis method inserts the overlay into the MKOverlayLevel.aboveLabels level and positions it relative to the specified sibling. When displaying it, the map view displays the overlay’s contents above that of its sibling. If the sibling isn’t in the same map level, this method appends the overlay to the end of the list of overlays at the indicated level.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index."
  },
  {
    "title": "exchangeOverlay(_:with:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452491-exchangeoverlay",
    "html": "Parameters\noverlay1\n\nThe first overlay object.\n\noverlay2\n\nThe second overlay object.\n\nDiscussion\n\nIf the overlays are in the same map level, they exchange positions within that level’s array of overlay objects. If they’re in different map levels, the two objects also swap levels. Swapping the position of the overlays affects their visibility in the map view.\n\nSee Also\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index."
  },
  {
    "title": "removeAnnotations(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452130-removeannotations",
    "html": "Parameters\nannotations\n\nThe array of annotations to remove. Objects in the array need to conform to the MKAnnotation protocol.\n\nDiscussion\n\nIf any annotation object in the array has an associated annotation view, and if that view has a reuse identifier, this method removes the annotation view and queues it internally for later reuse. You can retrieve queued annotation views (and associate them with new annotations) using the dequeueReusableAnnotationView(withIdentifier:) method.\n\nRemoving annotation objects disassociates them from the map view entirely, preventing the map view from displaying them on the map. Typically, you call this method only when you want to hide or delete the specified annotations.\n\nSee Also\nAnnotating the map\nvar annotations: [MKAnnotation]\nThe annotations associated with the map view.\nfunc addAnnotation(MKAnnotation)\nAdds the specified annotation to the map view.\nfunc addAnnotations([MKAnnotation])\nAdds an array of annotation objects to the map view.\nfunc removeAnnotation(MKAnnotation)\nRemoves the specified annotation object from the map view.\nfunc annotations(in: MKMapRect) -> Set<AnyHashable>\nReturns the annotation objects within the specified map rectangle."
  },
  {
    "title": "showsPointsOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452102-showspointsofinterest",
    "html": "Deprecated\n\nUse pointOfInterestFilter instead.\n\nDiscussion\n\nWhen this property is set to true, the map displays icons and labels for restaurants, schools, and other relevant points of interest. The mapType property must be set to MKMapType.standard or MKMapType.hybrid for points of interest to be displayed.The default value of this property is true.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232701-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "unitStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/1452128-unitstyle",
    "html": "Discussion\n\nYou can abbreviate or fully spell out units. The default value of this property is MKDistanceFormatter.DistanceUnitStyle.default, which bases the style on the user’s locale and language settings.\n\nSee Also\nSpecifying the format\nvar locale: Locale!\nThe locale to use when formatting strings.\nvar units: MKDistanceFormatter.Units\nThe measuring system — imperial or metric — to use for units.\nenum MKDistanceFormatter.Units\nConstants that reflect the type of units to use in the string.\nenum MKDistanceFormatter.DistanceUnitStyle\nConstants that indicate the format style to use for strings."
  },
  {
    "title": "MKDistanceFormatter.Units | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/units",
    "html": "Topics\nConstants\ncase `default`\nThe format uses the locale information to determine which units to use.\ncase metric\nThe format uses metric units.\ncase imperial\nThe format uses imperial units.\ncase imperialWithYards\nThe format uses imperial units that include measurements in yards.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying the format\nvar locale: Locale!\nThe locale to use when formatting strings.\nvar units: MKDistanceFormatter.Units\nThe measuring system — imperial or metric — to use for units.\nvar unitStyle: MKDistanceFormatter.DistanceUnitStyle\nThe preferred style for units.\nenum MKDistanceFormatter.DistanceUnitStyle\nConstants that indicate the format style to use for strings."
  },
  {
    "title": "units | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/1452775-units",
    "html": "Discussion\n\nYou can use this property to explicitly set the measuring system for units. The default value of this property is MKDistanceFormatter.Units.default, which bases the measuring system on the user’s locale.\n\nSee Also\nSpecifying the format\nvar locale: Locale!\nThe locale to use when formatting strings.\nenum MKDistanceFormatter.Units\nConstants that reflect the type of units to use in the string.\nvar unitStyle: MKDistanceFormatter.DistanceUnitStyle\nThe preferred style for units.\nenum MKDistanceFormatter.DistanceUnitStyle\nConstants that indicate the format style to use for strings."
  },
  {
    "title": "MKMapPointsPerMeterAtLatitude(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452154-mkmappointspermeteratlatitude",
    "html": "Parameters\nlatitude\n\nThe latitude for which to return the value.\n\nReturn Value\n\nThe number of map points that span one meter.\n\nDiscussion\n\nThe number of map points per meter increases as the latitude approaches the poles.\n\nSee Also\nGetting the distance between points\nfunc distance(to: MKMapPoint) -> CLLocationDistance\nReturns the number of meters between two map points.\nfunc MKMetersPerMapPointAtLatitude(CLLocationDegrees) -> CLLocationDistance\nReturns the distance that one map point spans at the specified latitude."
  },
  {
    "title": "distance(from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/1452766-distance",
    "html": "Parameters\ndistance\n\nA formatted string that specifies a distance.\n\nReturn Value\n\nThe distance value represented by the string or -1.0 if the string does not contain a recognized distance value.\n\nDiscussion\n\nThis method searches the provided string for a number that could represent a distance. Specify distances as purely numerical values. Don’t specify distances as fractions such as “1/4 mile,” use distances and standard distance designations instead, such as “0.25 miles,” “1.2 km,” “120 yards,” and so on.\n\nSee Also\nConverting distances\nfunc string(fromDistance: CLLocationDistance) -> String\nCreates a string representation of the specified distance."
  },
  {
    "title": "string(fromDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/1451994-string",
    "html": "Parameters\ndistance\n\nThe distance value that you want to convert to a string.\n\nReturn Value\n\nA user-readable string that describes the distance based on the formatter settings.\n\nSee Also\nConverting distances\nfunc distance(from: String) -> CLLocationDistance\nReturns the distance value parsed from the specified string."
  },
  {
    "title": "MKMetersPerMapPointAtLatitude(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452467-mkmeterspermappointatlatitude",
    "html": "Parameters\nlatitude\n\nThe latitude for which to return the value.\n\nReturn Value\n\nThe distance (in meters) spanned by a single map point.\n\nDiscussion\n\nThe distance between map points decreases as the latitude approaches the poles. This relationship parallels the relationship between longitudinal coordinates at different latitudes.\n\nSee Also\nGetting the distance between points\nfunc distance(to: MKMapPoint) -> CLLocationDistance\nReturns the number of meters between two map points.\nfunc MKMapPointsPerMeterAtLatitude(CLLocationDegrees) -> Double\nReturns the number of map points that represent one meter at the specified latitude."
  },
  {
    "title": "distance(to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452729-distance",
    "html": "Parameters\na\n\nThe first map point.\n\nb\n\nThe second map point.\n\nReturn Value\n\nThe number of meters between the specified map points.\n\nDiscussion\n\nThis distance reflects the actual distance between the two points on the surface of the globe, taking into account the curvature of the Earth.\n\nSee Also\nGetting the distance between points\nfunc MKMetersPerMapPointAtLatitude(CLLocationDegrees) -> CLLocationDistance\nReturns the distance that one map point spans at the specified latitude.\nfunc MKMapPointsPerMeterAtLatitude(CLLocationDegrees) -> Double\nReturns the number of map points that represent one meter at the specified latitude."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452534-coordinate",
    "html": "Parameters\nmapPoint\n\nThe map point value that corresponds to the desired point on a two-dimensional map projection.\n\nReturn Value\n\nThe coordinate structure containing the latitude and longitude values for the specified point.\n\nSee Also\nGetting the point coordinates\nvar x: Double\nThe location of the point along the x-axis of the map.\nvar y: Double\nThe location of the point along the y-axis of the map."
  },
  {
    "title": "y | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452781-y",
    "html": "See Also\nGetting the point coordinates\nvar x: Double\nThe location of the point along the x-axis of the map.\nvar coordinate: CLLocationCoordinate2D\nA 2D coordinate that corresponds to the latitude and longitude of the specified map point."
  },
  {
    "title": "x | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452365-x",
    "html": "See Also\nGetting the point coordinates\nvar y: Double\nThe location of the point along the y-axis of the map.\nvar coordinate: CLLocationCoordinate2D\nA 2D coordinate that corresponds to the latitude and longitude of the specified map point."
  },
  {
    "title": "init(x:y:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452538-init",
    "html": "Parameters\nx\n\nThe point along the east-west axis of the map projection.\n\ny\n\nThe point along the north-south axis of the map projection.\n\nReturn Value\n\nA map point with the specified values.\n\nSee Also\nCreating a map point\ninit()\nCreates a map point at an unspecified point.\ninit(CLLocationCoordinate2D)\nCreates the map point data structure that corresponds to the specified coordinate."
  },
  {
    "title": "offsetBy(dx:dy:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452407-offsetby",
    "html": "Parameters\nrect\n\nThe original rectangle.\n\ndx\n\nThe amount (in map points) to shift the x-coordinate of the origin point.\n\ndy\n\nThe amount (in map points) to shift the y-coordinate of the origin point.\n\nReturn Value\n\nThe offset rectangle. If the original rectangle is null, that rectangle returns instead.\n\nSee Also\nModifying the rectangle\nfunc union(MKMapRect) -> MKMapRect\nReturns a rectangle that represents the union of two rectangles.\nfunc intersection(MKMapRect) -> MKMapRect\nReturns the rectangle that represents the intersection of two rectangles.\nfunc insetBy(dx: Double, dy: Double) -> MKMapRect\nReturns the specified rectangle with an inset by the specified amounts.\nfunc MKMapRectDivide(MKMapRect, UnsafeMutablePointer<MKMapRect>, UnsafeMutablePointer<MKMapRect>, Double, CGRectEdge)\nDivides the specified rectangle into two smaller rectangles."
  },
  {
    "title": "intersects(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452221-intersects",
    "html": "Parameters\nrect1\n\nThe first rectangle.\n\nrect2\n\nThe second rectangle.\n\nReturn Value\n\ntrue if rect1 and rect2 intersect each other, or false if they don’t intersect or either rectangle is null.\n\nDiscussion\n\nThe rectangles aren’t intersecting if the only intersection occurs along an edge. For a true intersection, the rectangles both need to enclose a single rectangular area with a width and height that are both greater than 0.\n\nSee Also\nIntersecting the rectangle\nfunc contains(MKMapPoint) -> Bool\nReturns a Boolean value that indicates whether the specified map point lies within the rectangle.\nfunc contains(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether one rectangle contains another."
  },
  {
    "title": "contains(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452213-contains",
    "html": "Parameters\nrect1\n\nThe containing rectangle.\n\nrect2\n\nThe rectangle that rect1 might contain.\n\nReturn Value\n\ntrue if rect2 is null or lies entirely inside rect1; otherwise, returns false if rect1 is null or doesn’t completely enclose rect2.\n\nSee Also\nIntersecting the rectangle\nfunc contains(MKMapPoint) -> Bool\nReturns a Boolean value that indicates whether the specified map point lies within the rectangle.\nfunc intersects(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two rectangles intersect each other."
  },
  {
    "title": "remainder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452558-remainder",
    "html": "Parameters\nrect\n\nThe rectangle to check.\n\nDiscussion\n\nFor a rectangle that lies on the 180th meridian, this function isolates the portion that lies outside the boundary, wraps it to the opposite side of the map, and returns that rectangle.\n\nSee Also\nComparing rectangles\nvar isNull: Bool\nA Boolean value that indicates whether the specified rectangle is null.\nfunc MKMapRectEqualToRect(MKMapRect, MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two map rectangles are equal.\nvar isEmpty: Bool\nA Boolean value that indicates whether the specified rectangle has no area.\nvar spans180thMeridian: Bool\nA Boolean value that indicates whether the specified map rectangle crosses the 180th meridian."
  },
  {
    "title": "spans180thMeridian | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452269-spans180thmeridian",
    "html": "Parameters\nrect\n\nThe rectangle to test.\n\nReturn Value\n\ntrue if the rectangle spans the 180th meridian or false if it is contained wholly within the world map.\n\nSee Also\nComparing rectangles\nvar isNull: Bool\nA Boolean value that indicates whether the specified rectangle is null.\nfunc MKMapRectEqualToRect(MKMapRect, MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two map rectangles are equal.\nvar isEmpty: Bool\nA Boolean value that indicates whether the specified rectangle has no area.\nvar remainder: MKMapRect\nA rectangle that represents the normalized portion of the specified rectangle that lies outside the world map boundaries."
  },
  {
    "title": "width | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1451917-width",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe rectangle’s width.\n\nSee Also\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar height: Double\nReturns the height of the map rectangle."
  },
  {
    "title": "camera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452277-camera",
    "html": "Discussion\n\nA camera object defines a point above the map’s surface from which to view the map. Applying a camera to a map can have the effect of giving the map a 3D-like appearance. You can use a camera to rotate the map so that it orients to match the user’s heading or to apply a pitch angle to tilt the plane of the map. You can check the map’s isPitchEnabled property to determine whether the map can use pitch.\n\nAssigning a new camera to this property updates the map immediately and without animating the change. If you want to animate changes in camera position, use the setCamera(_:animated:) method instead.\n\nDon’t set this property to nil. To restore the map to a flat appearance, apply a camera with a pitch angle of 0, which yields a camera looking straight down onto the map surface.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "showsCompass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451879-showscompass",
    "html": "Discussion\n\nUse this property to show or hide a control that lets users change the heading orientation of the map.\n\nSee Also\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated"
  },
  {
    "title": "maxX | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1451968-maxx",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe maximum x-axis value.\n\nSee Also\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle.\nvar height: Double\nReturns the height of the map rectangle."
  },
  {
    "title": "MKMapView.CameraBoundary | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/cameraboundary",
    "html": "Overview\n\nThe constraints of the camera boundary restrict the center point of your map.\n\nTopics\nCreating a camera boundary\ninit?(coder: NSCoder)\nCreates a camera boundary using the provided coder.\ninit?(coordinateRegion: MKCoordinateRegion)\nCreates a camera boundary using the provided coordinate region.\ninit?(mapRect: MKMapRect)\nCreates a camera boundary using the provided map rectangle.\nAccessing the boundary\nvar mapRect: MKMapRect\nThe map rectangle that describes the camera boundary.\nvar region: MKCoordinateRegion\nThe coordinate region that describes the camera boundary.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nfunc setCameraBoundary(MKMapView.CameraBoundary?, animated: Bool)\nSets the camera boundary for the map view, specifying whether to use animation.\nvar cameraBoundary: MKMapView.CameraBoundary?\nThe boundary of the area within which the map view’s center needs to remain.\nfunc setCameraZoomRange(MKMapView.CameraZoomRange?, animated: Bool)\nSets the camera zoom range for the map view, specifying whether to use animation.\nvar cameraZoomRange: MKMapView.CameraZoomRange!\nThe zoom range to apply to the map view.\nclass MKMapView.CameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom."
  },
  {
    "title": "setCameraZoomRange(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3114302-setcamerazoomrange",
    "html": "Parameters\ncameraZoomRange\n\nThe MKMapView.CameraZoomRange.\n\nanimated\n\nA Boolean value that indicates whether the framework animates the transition of the map view to the new zoom range.\n\nSee Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nfunc setCameraBoundary(MKMapView.CameraBoundary?, animated: Bool)\nSets the camera boundary for the map view, specifying whether to use animation.\nvar cameraBoundary: MKMapView.CameraBoundary?\nThe boundary of the area within which the map view’s center needs to remain.\nvar cameraZoomRange: MKMapView.CameraZoomRange!\nThe zoom range to apply to the map view.\nclass MKMapView.CameraBoundary\nA boundary of an area within which the map’s center needs to remain.\nclass MKMapView.CameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom."
  },
  {
    "title": "MKOverlay | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlay",
    "html": "Overview\n\nOverlay objects are data objects that define the geographic data to cover. MapKit defines several concrete classes that adopt this protocol and define standard shapes like rectangles, circles, and polygons. You might use overlays to define the geographic boundaries of a national park or trace a bus route along city streets. You add an overlay to your map view by calling its addOverlay(_:) method or any other map view method for adding overlays to the map. When the overlay’s region intersects the visible portion of the map, the map view calls the mapView(_:rendererFor:) method of its delegate to obtain the renderer object responsible for drawing the overlay.\n\nIf you add an overlay to a map view as an annotation, instead of adding it as an overlay, the map view treats your overlay as an annotation. Specifically, it displays your overlay only when its coordinate is in the visible map region, rather than displaying the overlay when any portion of its covered area is visible.\n\nTopics\nDescribing the overlay geometry\nvar coordinate: CLLocationCoordinate2D\nThe approximate center point of the overlay area.\n\nRequired\n\nvar boundingMapRect: MKMapRect\nThe projected rectangle that encompasses the overlay.\n\nRequired\n\nDetermining map intersections\nfunc intersects(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether the specified rectangle intersects the overlay’s shape.\nOptimizing map rendering\nfunc canReplaceMapContent() -> Bool\nReturns a Boolean value that indicates whether the overlay content replaces the underlying map content.\nRelationships\nInherits From\nMKAnnotation\nConforming Types\nMKCircle\nMKMultiPolygon\nMKMultiPolyline\nMKPolygon\nMKPolyline\nMKTileOverlay\nSee Also\nShared behavior\nclass MKOverlayRenderer\nThe shared infrastructure for drawing overlays on the map surface.\nclass MKShape\nAn abstract class that defines the basic properties for all shape-based overlay objects.\nclass MKMultiPoint\nAn abstract class that defines the common behavior that open and closed polygon overlays share.\nclass MKPlacemark\nA user-friendly description of a location on the map."
  },
  {
    "title": "MKOverlayRenderer | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkoverlayrenderer",
    "html": "Overview\n\nAn overlay renderer draws the visual representation of an overlay object — that is, an object that conforms to the MKOverlay protocol. This class defines the drawing infrastructure the map view uses. Subclasses need to override the draw(_:zoomScale:in:) method to draw the contents of the overlay.\n\nThe MapKit framework provides several concrete instances of overlay renderers. Specifically, it provides renderers for each of the concrete overlay objects. You can use one of these existing renderers or define your own subclasses if you want to draw the overlay contents differently.\n\nYou can subclass MKOverlayRenderer to create overlays based on custom shapes, content, or drawing techniques. The only method subclasses need to override is the draw(_:zoomScale:in:) method. However, if your class contains content that may not be ready for drawing right away, you need to also override the canDraw(_:zoomScale:) method and use it to report when your class is ready and able to draw.\n\nThe map view may tile large overlays and distribute the rendering of each tile to separate threads. Therefore, the implementation of your draw(_:zoomScale:in:) method needs to be safe to run from background threads and from multiple threads simultaneously.\n\nTopics\nCreating an overlay view\ninit(overlay: MKOverlay)\nCreates and returns the overlay renderer and associates it with the specified overlay object.\nAttributes of the overlay\nvar overlay: MKOverlay\nThe overlay object containing the data for drawing.\nvar alpha: CGFloat\nThe amount of transparency to apply to the overlay.\nvar contentScaleFactor: CGFloat\nThe scale factor for drawing the overlay’s content.\nvar blendMode: CGBlendMode\nThe blend mode to apply to the overlay.\nConverting points on the map\nfunc point(for: MKMapPoint) -> CGPoint\nReturns the point in the overlay renderer’s drawing area corresponding to the specified point on the map.\nfunc mapPoint(for: CGPoint) -> MKMapPoint\nReturns the point on the map that corresponds to the specified point in the overlay renderer’s drawing area.\nfunc rect(for: MKMapRect) -> CGRect\nReturns the rectangle in the overlay renderer’s drawing area corresponding to the specified rectangle on the map.\nfunc mapRect(for: CGRect) -> MKMapRect\nReturns the rectangle on the map that corresponds to the specified rectangle in the overlay renderer’s drawing area.\nDrawing the overlay\nfunc canDraw(MKMapRect, zoomScale: MKZoomScale) -> Bool\nReturns a Boolean value that indicates whether the overlay view is ready to draw its content.\nfunc draw(MKMapRect, zoomScale: MKZoomScale, in: CGContext)\nDraws the overlay’s contents at the specified location on the map.\nfunc setNeedsDisplay()\nInvalidates the entire contents of the overlay for all zoom scales.\nfunc setNeedsDisplay(MKMapRect)\nInvalidates the specified portion of the overlay at all zoom scales.\nfunc setNeedsDisplay(MKMapRect, zoomScale: MKZoomScale)\nInvalidates the specified portion of the overlay, but only at the specified zoom scale.\nTypes\ntypealias MKZoomScale\nA scale factor to use in conjunction with a map.\nfunc MKRoadWidthAtZoomScale(MKZoomScale) -> CGFloat\nReturns the width (in screen points) of roads on a map at the specified zoom level.\nRelationships\nInherits From\nNSObject\nSee Also\nShared behavior\nprotocol MKOverlay\nAn interface for associating content with a specific map region.\nclass MKShape\nAn abstract class that defines the basic properties for all shape-based overlay objects.\nclass MKMultiPoint\nAn abstract class that defines the common behavior that open and closed polygon overlays share.\nclass MKPlacemark\nA user-friendly description of a location on the map."
  },
  {
    "title": "MKAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkannotation",
    "html": "Overview\n\nAn object that adopts this protocol manages the data that you want to display on the map surface. It doesn’t provide the visual representation that the map displays. Instead, your map view’s delegate provides the MKAnnotationView objects necessary to display the content of your annotations. When you want to display content at a specific point on the map, add an annotation object to the map view. When the annotation’s coordinate is visible on the map, the map view asks its delegate to provide an appropriate view to display any content associated with the annotation. You implement the mapView(_:viewFor:) method of the delegate to provide that view.\n\nAn object that adopts this protocol needs to implement the coordinate property. The other methods of this protocol are optional.\n\nTopics\nPosition attributes\nvar coordinate: CLLocationCoordinate2D\nThe center point (specified as a map coordinate) of the annotation.\n\nRequired\n\nTitle attributes\nvar title: String?\nThe string containing the annotation’s title.\nvar subtitle: String?\nThe string containing the annotation’s subtitle.\nRelationships\nInherits From\nNSObjectProtocol\nInherited By\nMKOverlay\nConforming Types\nMKClusterAnnotation\nMKMapFeatureAnnotation\nMKPlacemark\nMKShape\nMKUserLocation\nSee Also\nShared behavior\nclass MKPlacemark\nA user-friendly description of a location on the map.\nclass MKAnnotationView\nThe visual representation of one of your annotation objects."
  },
  {
    "title": "setVisibleMapRect(_:edgePadding:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452461-setvisiblemaprect",
    "html": "Parameters\nmapRect\n\nThe map rectangle to make visible in the map view.\n\ninsets\n\nThe amount of additional space (measured in screen points) to make visible around the specified rectangle.\n\nanimate\n\nSpecify true if you want the map view to animate the transition to the new map rectangle or false if you want the map to center on the specified rectangle immediately.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change."
  },
  {
    "title": "setVisibleMapRect(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452658-setvisiblemaprect",
    "html": "Parameters\nmapRect\n\nThe map rectangle to make visible in the map view.\n\nanimate\n\nSpecify true if you want the map view to animate the transition to the new map rectangle or false if you want the map to center on the specified rectangle immediately.\n\nSee Also\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges."
  },
  {
    "title": "setCameraBoundary(_:animated:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3143418-setcameraboundary",
    "html": "Parameters\ncameraBoundary\n\nThe new MKMapView.CameraBoundary.\n\nanimated\n\nA Boolean value that indicates whether the framework animates the transition of the map view to the new boundary.\n\nSee Also\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nvar cameraBoundary: MKMapView.CameraBoundary?\nThe boundary of the area within which the map view’s center needs to remain.\nfunc setCameraZoomRange(MKMapView.CameraZoomRange?, animated: Bool)\nSets the camera zoom range for the map view, specifying whether to use animation.\nvar cameraZoomRange: MKMapView.CameraZoomRange!\nThe zoom range to apply to the map view.\nclass MKMapView.CameraBoundary\nA boundary of an area within which the map’s center needs to remain.\nclass MKMapView.CameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom."
  },
  {
    "title": "mapType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1452742-maptype",
    "html": "Deprecated\n\nUse the map view’s preferredConfiguration property with an MKMapConfiguration subclass to specify how the framework presents the map instead.\n\nDiscussion\n\nChanging the value in this property may cause the receiver to begin loading new map content. For example, changing from MKMapType.standard to MKMapType.satellite might cause it to begin loading the satellite imagery for the map. If the map needs new data, however, it loads asynchronously and MapKit sends appropriate messages to the receiver’s delegate indicating the status of the operation.\n\nSee Also\nAccessing map properties\nenum MKMapType\nThe type of map to display.\nvar isZoomEnabled: Bool\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nvar isScrollEnabled: Bool\nA Boolean value that determines whether the user may scroll around the map.\nvar isPitchEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nvar isRotateEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s heading information.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "isScrollEnabled | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/1451998-isscrollenabled",
    "html": "Discussion\n\nThis property controls only user interactions with the map. If you set the value of this property to false, you may still change the map location programmatically by changing the value in the region property.\n\nThe default value of this property is true.\n\nSee Also\nAccessing map properties\nenum MKMapType\nThe type of map to display.\nvar isZoomEnabled: Bool\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nvar isPitchEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nvar isRotateEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s heading information.\nvar mapType: MKMapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "MKMapType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaptype",
    "html": "Deprecated\n\nUse the map view’s preferredConfiguration property with one of the MKMapConfiguration subclasses to select a specific map style instead.\n\nTopics\nConstants\ncase standard\nA street map that shows the position of all roads and some road names.\ncase satellite\nSatellite imagery of the area.\ncase hybrid\nA satellite image of the area with road and road name information layered on top.\ncase satelliteFlyover\nA satellite image of the area with flyover data where available.\ncase hybridFlyover\nA hybrid satellite image with flyover data where available.\ncase mutedStandard\nA street map where MapKit emphasizes your data over the underlying map details.\nRelationships\nConforms To\nSendable\nSee Also\nAccessing map properties\nvar isZoomEnabled: Bool\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nvar isScrollEnabled: Bool\nA Boolean value that determines whether the user may scroll around the map.\nvar isPitchEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nvar isRotateEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s heading information.\nvar mapType: MKMapType\nThe type of data the map view displays.\nDeprecated"
  },
  {
    "title": "selectableMapFeatures | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/3975750-selectablemapfeatures",
    "html": "See Also\nCustomizing the map view behavior\nvar delegate: MKMapViewDelegate?\nThe receiver’s delegate.\nprotocol MKMapViewDelegate\nOptional methods that you use to receive map-related update messages."
  },
  {
    "title": "MKStandardMapConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkstandardmapconfiguration",
    "html": "Topics\nCreating a standard map configuration\ninit()\nCreates a new standard map configuration.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new standard map configuration with the specified elevation style.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle, emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified elevation and emphasis styles.\ninit(emphasisStyle: MKStandardMapConfiguration.EmphasisStyle)\nCreates a standard map configuration with the specified emphasis style.\nenum MKMapConfiguration.ElevationStyle\nValues that control the map’s elevation style.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features.\nCustomizing the map display\nvar emphasisStyle: MKStandardMapConfiguration.EmphasisStyle\nThe value that indicates how the framework emphasizes map features.\nenum MKStandardMapConfiguration.EmphasisStyle\nValues that control how the framework emphasizes map features.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsTraffic: Bool\nA Boolean value that controls whether the map displays traffic conditions.\nRelationships\nInherits From\nMKMapConfiguration\nSee Also\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery."
  },
  {
    "title": "MKImageryMapConfiguration | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkimagerymapconfiguration",
    "html": "Topics\nCreating a map imagery configuration\ninit()\nCreates a new imagery based map configuration.\ninit(elevationStyle: MKMapConfiguration.ElevationStyle)\nCreates a new imagery based map configuration with the specified elevation style.\nRelationships\nInherits From\nMKMapConfiguration\nSee Also\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top."
  },
  {
    "title": "midX | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452225-midx",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe midpoint value along the x-axis.\n\nSee Also\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle.\nvar height: Double\nReturns the height of the map rectangle."
  },
  {
    "title": "minY | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452540-miny",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe minimum y-axis value.\n\nSee Also\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle.\nvar height: Double\nReturns the height of the map rectangle."
  },
  {
    "title": "minX | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452519-minx",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe minimum x-axis value.\n\nSee Also\nGetting the boundaries\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle.\nvar height: Double\nReturns the height of the map rectangle."
  },
  {
    "title": "size | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452182-size",
    "html": "See Also\nGetting the rectangle coordinates\nvar origin: MKMapPoint\nThe origin point of the rectangle."
  },
  {
    "title": "origin | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452283-origin",
    "html": "See Also\nGetting the rectangle coordinates\nvar size: MKMapSize\nThe width and height of the rectangle, starting from the origin point."
  },
  {
    "title": "world | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452627-world",
    "html": "See Also\nGetting standard map rectangles\nstatic let null: MKMapRect\nThe null map rectangle."
  },
  {
    "title": "null | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452528-null",
    "html": "Discussion\n\nYou can use this constant when you want to specify an invalid map rectangle.\n\nSee Also\nGetting standard map rectangles\nstatic let world: MKMapRect\nThe map rectangle that represents the world in the two-dimensional map projection."
  },
  {
    "title": "init(x:y:width:height:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452453-init",
    "html": "Parameters\nx\n\nThe point along the east-west axis of the map projection to use for the origin.\n\ny\n\nThe point along the north-south axis of the map projection to use for the origin.\n\nwidth\n\nThe width of the rectangle (measured using map points).\n\nheight\n\nThe height of the rectangle (measured using map points).\n\nReturn Value\n\nA map rectangle with the specified values.\n\nSee Also\nCreating a map rectangle\ninit()\nCreates the rectangle with an empty region.\ninit(origin: MKMapPoint, size: MKMapSize)\nCreates the map rectangle with the specified point and size.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle."
  },
  {
    "title": "init(origin:size:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452688-init",
    "html": "Parameters\norigin\n\nThe origin of the map rectangle as an MKMapPoint.\n\nsize\n\nThe size of the map rectangle as an MKMapSize.\n\nSee Also\nCreating a map rectangle\ninit()\nCreates the rectangle with an empty region.\ninit(x: Double, y: Double, width: Double, height: Double)\nCreates a new map rectangle structure from the specified values.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle."
  },
  {
    "title": "mapStyle(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233935-mapstyle",
    "html": "Parameters\nvalue\n\nThe MapStyle to apply to the map.\n\nReturn Value\n\nReturns a view styled with the MapStyle you specified."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452162-init",
    "html": "Discussion\n\nThis method sets the origin point to (0, 0) and the size to (0, 0).\n\nSee Also\nCreating a map rectangle\ninit(origin: MKMapPoint, size: MKMapSize)\nCreates the map rectangle with the specified point and size.\ninit(x: Double, y: Double, width: Double, height: Double)\nCreates a new map rectangle structure from the specified values.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle."
  },
  {
    "title": "MapReader.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233934-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "mapFeatureSelectionDisabled(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233933-mapfeatureselectiondisabled",
    "html": "Parameters\nselectionDisabled\n\nDetermines if MapKit disables selection for a given map feature.\n\nReturn Value\n\nReturns a Boolean value that indicates whether the feature is in a disabled state.\n\nSee Also\nManaging feature selection\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nSpecifies a custom presentation for the currently selected feature."
  },
  {
    "title": "mapFeatureSelectionContent(content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233932-mapfeatureselectioncontent",
    "html": "Parameters\ncontent\n\nGenerates the custom presentation for a given map feature.\n\nReturn Value\n\nReturns customized Annotation or Marker content\n\nSee Also\nManaging feature selection\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nSpecifies which map features should have selection disabled."
  },
  {
    "title": "onMapCameraChange(frequency:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4234003-onmapcamerachange",
    "html": "Parameters\nfrequency\n\nHow frequently the framework should perform the action during a camera interaction.\n\naction\n\nA closure to the framework calls when the camera framing changes.\n\nSee Also\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nAnimates the camera of a map using the given keyframes when the value provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when map camera framing changes and calls a closure with the map camera and the area the camera frames."
  },
  {
    "title": "onMapCameraChange(frequency:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4234002-onmapcamerachange",
    "html": "Parameters\nfrequency\n\nA MapCameraUpdateFrequency value that indicates how frequently the framework should perform action during a camera interaction.\n\naction\n\nA closure to run when the camera framing changes.\n\nThe closure takes a MapCameraUpdateContext parameter that indicates the camera and the framed area.\n\nSee Also\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nAnimates the camera of a map using the given keyframes when the value provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action at a frequency you specify when the map camera framing changes."
  },
  {
    "title": "mapCameraKeyframeAnimator(trigger:keyframes:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233929-mapcamerakeyframeanimator",
    "html": "Parameters\ntrigger\n\nA value to observe for changes.\n\nkeyframes\n\nA keyframes builder closure the framework calls when starting a new keyframe animation.\n\nReturn Value\n\nA series of Keyframes\n\nDiscussion\n\nWhen the trigger value changes, the map calls the keyframes closure to generate the keyframes that animate the camera. The animation continues for the duration of the keyframes that you specify.\n\nIf the user performs a gesture, such as pinch to zoom, while the animation is in progress, the animation is immediately removed, allowing the interaction to take control of the camera.\n\nSee Also\nManaging the camera\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when map camera framing changes and calls a closure with the map camera and the area the camera frames.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action at a frequency you specify when the map camera framing changes."
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233931-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder returning the controls to display on the Map.\n\nReturn Value\n\nReturns a view with the specified map controls.\n\nSee Also\nManaging map controls\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233930-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nSee Also\nManaging map controls\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard size and position controls."
  },
  {
    "title": "lookAroundViewer(isPresented:scene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233927-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a property that determines the if the Look Around viewer is visible.\n\nscene\n\nA binding to a variable with the MKLookAroundScene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around view allows a person to navigate to new locations inside view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around view displays road labels.\n\npointsOfInterest\n\nA structure that enumerates point of interest categories to include or exclude from the map display.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around view.\n\nSee Also\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics your provide."
  },
  {
    "title": "lookAroundViewer(isPresented:initialScene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233926-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a property that determines the if the Look Around viewer is visible.\n\ninitialScene\n\nThe MKLookAroundScene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around view allows a person to navigate to new locations inside view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around view displays road labels.\n\npointsOfInterest\n\nA structure that enumerates points of interest categories to include or exclude from the map display.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around view.\n\nSee Also\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a look around view with a binding to a scene, navigation, road label, and points of interest characteristics your provide."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233726-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "init(content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader/4233884-init",
    "html": "Parameters\ncontent\n\nThe content of the map reader uses to retrieve information about, it uses the first map the content contains.\n\nReturn Value\n\nReturns a MapProxy that allows you to introspect the content of a map."
  },
  {
    "title": "span | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452293-span",
    "html": "Discussion\n\nThe span also defines the current zoom level used by the map view object.\n\nSee Also\nGetting the region coordinates\nvar center: CLLocationCoordinate2D\nThe center point of the region."
  },
  {
    "title": "center | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452536-center",
    "html": "See Also\nGetting the region coordinates\nvar span: MKCoordinateSpan\nThe horizontal and vertical span representing the amount of map to display."
  },
  {
    "title": "init(center:latitudinalMeters:longitudinalMeters:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452245-init",
    "html": "Parameters\ncenterCoordinate\n\nThe center point of the new coordinate region.\n\nlatitudinalMeters\n\nThe north-to-south span of the region (measured in meters) specified as the distance from the center point to the bounds along the north-to-south axis.\n\nlongitudinalMeters\n\nThe east-to-west span of the region (measured in meters) specified as the distance from the center point to the bounds along the east-to-west axis.\n\nReturn Value\n\nA region with the specified values.\n\nSee Also\nCreating a region\ninit()\nCreates a coordinate region.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle.\ninit(center: CLLocationCoordinate2D, span: MKCoordinateSpan)\nCreates a coordinate region with a span around the specified center coordinate."
  },
  {
    "title": "Directions mode values | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/directions_mode_values",
    "html": "Overview\n\nFor a list of possible values, see the MKLaunchOptionsDirectionsModeKey documentation.\n\nTopics\nDirections keys\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nSee Also\nOpening items at launch time\nLaunch options dictionary keys\nLaunch options to specify when opening map items in the Maps app."
  },
  {
    "title": "openInMaps(launchOptions:from:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/3395859-openinmaps",
    "html": "Parameters\nlaunchOptions\n\nA dictionary of launch options to pass to the Maps app.\n\nscene\n\nThe scene where the user interaction takes place.\n\ncompletion\n\nA completion block the system calls that indicates whether the request was successful.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc openInMaps(launchOptions: [String : Any]? = nil, from scene: UIScene?) async -> Bool\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nLaunching the Maps app\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the specified map items.\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified map items and options.\nfunc openInMaps(launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the map item."
  },
  {
    "title": "MKDistanceFormatter.DistanceUnitStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter/distanceunitstyle",
    "html": "Topics\nConstants\ncase `default`\nBases the determination to abbreviate on the current locale and user language settings.\ncase abbreviated\nAbbreviates units.\ncase full\nSpells out units in full.\nRelationships\nConforms To\nSendable\nSee Also\nSpecifying the format\nvar locale: Locale!\nThe locale to use when formatting strings.\nvar units: MKDistanceFormatter.Units\nThe measuring system — imperial or metric — to use for units.\nenum MKDistanceFormatter.Units\nConstants that reflect the type of units to use in the string.\nvar unitStyle: MKDistanceFormatter.DistanceUnitStyle\nThe preferred style for units."
  },
  {
    "title": "MKStringFromMapPoint(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1451962-mkstringfrommappoint",
    "html": "Parameters\npoint\n\nThe map point to format.\n\nReturn Value\n\nA formatted string containing the x and y coordinates of the map point."
  },
  {
    "title": "MKMapPointEqualToPoint(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452637-mkmappointequaltopoint",
    "html": "Parameters\npoint1\n\nThe first map point.\n\npoint2\n\nThe second point.\n\nReturn Value\n\ntrue if the x and y values in both points are exactly the same, or false if one or both values are different."
  },
  {
    "title": "MKMapRectDivide(_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452231-mkmaprectdivide",
    "html": "Parameters\nrect\n\nThe rectangle to divide.\n\nslice\n\nOn input, a pointer to a map rectangle. On output, this parameter contains the portion of rect that the method removes.\n\nremainder\n\nOn input, a pointer to a map rectangle. On output, this parameter contains the remaining portion of rect that the method doesn’t remove.\n\namount\n\nThe amount of rect to remove along the specified edge. If this value is negative, the system sets it to 0.\n\nedge\n\nThe edge from which to remove the specified amount.\n\nSee Also\nModifying the rectangle\nfunc union(MKMapRect) -> MKMapRect\nReturns a rectangle that represents the union of two rectangles.\nfunc intersection(MKMapRect) -> MKMapRect\nReturns the rectangle that represents the intersection of two rectangles.\nfunc insetBy(dx: Double, dy: Double) -> MKMapRect\nReturns the specified rectangle with an inset by the specified amounts.\nfunc offsetBy(dx: Double, dy: Double) -> MKMapRect\nReturns a rectangle with an origin point that shifts by the specified amount."
  },
  {
    "title": "MKStringFromMapRect(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1451996-mkstringfrommaprect",
    "html": "Parameters\nrect\n\nThe map rectangle to format.\n\nReturn Value\n\nA formatted string containing the origin and size values of the map rectangle."
  },
  {
    "title": "intersection(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452443-intersection",
    "html": "Parameters\nrect1\n\nThe first rectangle.\n\nrect2\n\nThe second rectangle.\n\nReturn Value\n\nThe rectangle representing the intersection of the two rectangles, or null if there’s no intersection.\n\nSee Also\nModifying the rectangle\nfunc union(MKMapRect) -> MKMapRect\nReturns a rectangle that represents the union of two rectangles.\nfunc insetBy(dx: Double, dy: Double) -> MKMapRect\nReturns the specified rectangle with an inset by the specified amounts.\nfunc offsetBy(dx: Double, dy: Double) -> MKMapRect\nReturns a rectangle with an origin point that shifts by the specified amount.\nfunc MKMapRectDivide(MKMapRect, UnsafeMutablePointer<MKMapRect>, UnsafeMutablePointer<MKMapRect>, Double, CGRectEdge)\nDivides the specified rectangle into two smaller rectangles."
  },
  {
    "title": "insetBy(dx:dy:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1451956-insetby",
    "html": "Parameters\nrect\n\nThe original rectangle.\n\ndx\n\nThe amount (in map points) to subtract from both sides along the x-axis.\n\ndy\n\nThe amount (in map points) to subtract from both sides along the y-axis.\n\nReturn Value\n\nThe inset rectangle. If the original rectangle was null, that rectangle is returned instead.\n\nSee Also\nModifying the rectangle\nfunc union(MKMapRect) -> MKMapRect\nReturns a rectangle that represents the union of two rectangles.\nfunc intersection(MKMapRect) -> MKMapRect\nReturns the rectangle that represents the intersection of two rectangles.\nfunc offsetBy(dx: Double, dy: Double) -> MKMapRect\nReturns a rectangle with an origin point that shifts by the specified amount.\nfunc MKMapRectDivide(MKMapRect, UnsafeMutablePointer<MKMapRect>, UnsafeMutablePointer<MKMapRect>, Double, CGRectEdge)\nDivides the specified rectangle into two smaller rectangles."
  },
  {
    "title": "union(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452123-union",
    "html": "Parameters\nrect1\n\nThe first rectangle.\n\nrect2\n\nThe second rectangle.\n\nReturn Value\n\nA rectangle with an area that encompasses the two rectangles and the space between them.\n\nDiscussion\n\nIf either rectangle is null, this method returns the other rectangle. This method sets the origin point of the returned rectangle to the smaller of the x and y values for the two rectangles. Similarly, the method computes the size and width of the rectangle by taking the maximum x and y values and subtracting the x and y values for the new origin point.\n\nSee Also\nModifying the rectangle\nfunc intersection(MKMapRect) -> MKMapRect\nReturns the rectangle that represents the intersection of two rectangles.\nfunc insetBy(dx: Double, dy: Double) -> MKMapRect\nReturns the specified rectangle with an inset by the specified amounts.\nfunc offsetBy(dx: Double, dy: Double) -> MKMapRect\nReturns a rectangle with an origin point that shifts by the specified amount.\nfunc MKMapRectDivide(MKMapRect, UnsafeMutablePointer<MKMapRect>, UnsafeMutablePointer<MKMapRect>, Double, CGRectEdge)\nDivides the specified rectangle into two smaller rectangles."
  },
  {
    "title": "contains(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452487-contains",
    "html": "Parameters\nrect\n\nThe map rectangle the method is checking.\n\npoint\n\nThe point to check.\n\nReturn Value\n\ntrue if the rectangle isn’t null or empty and the point is inside the rectangle; otherwise, false.\n\nDiscussion\n\nFor this method, a point is inside the rectangle if its coordinates lie inside the rectangle or on the minimum X or minimum Y edge.\n\nSee Also\nIntersecting the rectangle\nfunc contains(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether one rectangle contains another.\nfunc intersects(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two rectangles intersect each other."
  },
  {
    "title": "MKMapRectEqualToRect(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/1452589-mkmaprectequaltorect",
    "html": "Parameters\nrect1\n\nThe first map rectangle.\n\nrect2\n\nThe second map rectangle.\n\nReturn Value\n\ntrue if the rectangles are exactly the same, or false if the origin point or size values are different.\n\nSee Also\nComparing rectangles\nvar isNull: Bool\nA Boolean value that indicates whether the specified rectangle is null.\nvar isEmpty: Bool\nA Boolean value that indicates whether the specified rectangle has no area.\nvar spans180thMeridian: Bool\nA Boolean value that indicates whether the specified map rectangle crosses the 180th meridian.\nvar remainder: MKMapRect\nA rectangle that represents the normalized portion of the specified rectangle that lies outside the world map boundaries."
  },
  {
    "title": "isEmpty | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452321-isempty",
    "html": "Parameters\nrect\n\nThe rectangle to check.\n\nReturn Value\n\ntrue if the rectangle is null or its width or height are equal to 0; otherwise, false.\n\nSee Also\nComparing rectangles\nvar isNull: Bool\nA Boolean value that indicates whether the specified rectangle is null.\nfunc MKMapRectEqualToRect(MKMapRect, MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two map rectangles are equal.\nvar spans180thMeridian: Bool\nA Boolean value that indicates whether the specified map rectangle crosses the 180th meridian.\nvar remainder: MKMapRect\nA rectangle that represents the normalized portion of the specified rectangle that lies outside the world map boundaries."
  },
  {
    "title": "isNull | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1451933-isnull",
    "html": "Parameters\nrect\n\nThe rectangle to check.\n\nReturn Value\n\ntrue if the rectangle is null, or false if it isn’t null.\n\nDiscussion\n\nFor this class, a rectangle is null if its origin point contains an invalid or infinite value.\n\nSee Also\nComparing rectangles\nfunc MKMapRectEqualToRect(MKMapRect, MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two map rectangles are equal.\nvar isEmpty: Bool\nA Boolean value that indicates whether the specified rectangle has no area.\nvar spans180thMeridian: Bool\nA Boolean value that indicates whether the specified map rectangle crosses the 180th meridian.\nvar remainder: MKMapRect\nA rectangle that represents the normalized portion of the specified rectangle that lies outside the world map boundaries."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452514-init",
    "html": "Parameters\ncoordinate\n\nThe coordinate containing the latitude and longitude values for the desired point.\n\nReturn Value\n\nThe map point value that corresponds to the specified coordinate on a two-dimensional map projection.\n\nSee Also\nCreating a map point\ninit()\nCreates a map point at an unspecified point.\ninit(x: Double, y: Double)\nCreates a new map point structure from the specified values."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint/1452429-init",
    "html": "See Also\nCreating a map point\ninit(x: Double, y: Double)\nCreates a new map point structure from the specified values.\ninit(CLLocationCoordinate2D)\nCreates the map point data structure that corresponds to the specified coordinate."
  },
  {
    "title": "height | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect/1452215-height",
    "html": "Parameters\nrect\n\nThe map rectangle to test.\n\nReturn Value\n\nThe rectangle’s height.\n\nSee Also\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle."
  },
  {
    "title": "openInMaps(launchOptions:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452239-openinmaps",
    "html": "Parameters\nlaunchOptions\n\nAdditional information that the Maps app can use to configure the map display. For example, you can use the launch options to specify the visible map region and the map type. For a list of keys you can put into this dictionary, see Launch options dictionary keys.\n\nThis parameter may be nil.\n\nReturn Value\n\ntrue if the Maps app successfully opens the map item, or false if there’s an error.\n\nDiscussion\n\nYou use this method to pass the map item to the Maps app. If your map item contains descriptive information about the location (such as a name or URL), the Maps app displays that information at the specified coordinate.\n\nIf you specify the MKLaunchOptionsDirectionsModeKey option in the launchOptions dictionary, the Maps app interprets that as an attempt to map from the user’s current location to the location that the map item specifies.\n\nNote\n\nThis is a blocking call and the system suspends interaction with your app until the Maps app finishes launching.\n\nIf you don’t include the MKLaunchOptionsMapCenterKey and MKLaunchOptionsMapSpanKey keys in your launchOptions dictionary, the Maps app constructs a region around the map item. It uses that region to set the visible portion of the map.\n\nSee Also\nLaunching the Maps app\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the specified map items.\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified map items and options.\nfunc openInMaps(launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified options."
  },
  {
    "title": "openMaps(with:launchOptions:from:completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/3395860-openmaps",
    "html": "Parameters\nmapItems\n\nAn array of map items to open in the Maps app.\n\nlaunchOptions\n\nA dictionary of launch options to pass to the Maps app.\n\nscene\n\nThe scene where the user interaction takes place.\n\ncompletion\n\nA completion block the system calls that indicates whether the request was successful.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nclass func openMaps(with mapItems: [MKMapItem], launchOptions: [String : Any]? = nil, from scene: UIScene?) async -> Bool\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nSee Also\nLaunching the Maps app\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the specified map items.\nfunc openInMaps(launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the map item.\nfunc openInMaps(launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified options."
  },
  {
    "title": "timeZone | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452431-timezone",
    "html": "Discussion\n\nWhen you search for map items, MapKit populates this field with the time zone information as a convenience. You may also set the time zone for any map items you create.\n\nSee Also\nAccessing the map item attributes\nvar placemark: MKPlacemark\nThe placemark object containing the location information.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point-of-interest category for the map item.\nvar isCurrentLocation: Bool\nA Boolean value that indicates whether the map item represents the user’s location.\nvar name: String?\nThe descriptive name associated with the map item.\nvar phoneNumber: String?\nThe phone number associated with a business at the specified location.\nvar url: URL?\nThe URL associated with the specified location."
  },
  {
    "title": "openMaps(with:launchOptions:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452207-openmaps",
    "html": "Parameters\nmapItems\n\nAn array containing one or more MKMapItem objects representing the items you want to display on the map.\n\nlaunchOptions\n\nAdditional information that the Maps app can use to configure the map display. For example, you can use the launch options to specify the visible map region, a 3D perspective, and the map type. For a list of keys you can put into this dictionary, see Launch options dictionary keys.\n\nYou may specify nil for this parameter.\n\nReturn Value\n\ntrue if the Maps app successfully opens the maps items, or false if there’s an error.\n\nDiscussion\n\nYou use this method to pass one or more map items to the Maps app. For example, you might use this method to ask the Maps app to display location-based search results that your app generates. The Maps app displays pins at each location you specify and uses the contents of each map item object to display additional information.\n\nIf you specify the MKLaunchOptionsDirectionsModeKey option in the launchOptions dictionary, the mapItems array may have no more than two items in it. If the array contains one item, the Maps app generates directions from the user’s location to the location that the map item specifies. If the array contains two items, the Maps app generates directions from the location of the first item to the location of the second item in the array.\n\nIf you don’t include the MKLaunchOptionsMapCenterKey and MKLaunchOptionsMapSpanKey keys in your launchOptions dictionary, the Maps app constructs a region that encompasses the provided items. It uses this region to set the visible portion of the map.\n\nSee Also\nLaunching the Maps app\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified map items and options.\nfunc openInMaps(launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the map item.\nfunc openInMaps(launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified options."
  },
  {
    "title": "phoneNumber | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452088-phonenumber",
    "html": "Discussion\n\nIf there’s a relevant phone number associated with the location, such as for a business at the location, use this property to specify that value.\n\nSee Also\nAccessing the map item attributes\nvar placemark: MKPlacemark\nThe placemark object containing the location information.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point-of-interest category for the map item.\nvar isCurrentLocation: Bool\nA Boolean value that indicates whether the map item represents the user’s location.\nvar name: String?\nThe descriptive name associated with the map item.\nvar url: URL?\nThe URL associated with the specified location.\nvar timeZone: TimeZone?\nThe time zone of the specified location."
  },
  {
    "title": "isCurrentLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452319-iscurrentlocation",
    "html": "Discussion\n\nIf the value of this property is true, the map item represents the user’s location, and the value in the placemark property is nil.\n\nSee Also\nAccessing the map item attributes\nvar placemark: MKPlacemark\nThe placemark object containing the location information.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point-of-interest category for the map item.\nvar name: String?\nThe descriptive name associated with the map item.\nvar phoneNumber: String?\nThe phone number associated with a business at the specified location.\nvar url: URL?\nThe URL associated with the specified location.\nvar timeZone: TimeZone?\nThe time zone of the specified location."
  },
  {
    "title": "placemark | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452134-placemark",
    "html": "Discussion\n\nIf you create the map item using the forCurrentLocation() method, the value of this property is nil and the isCurrentLocation property is true.\n\nSee Also\nAccessing the map item attributes\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point-of-interest category for the map item.\nvar isCurrentLocation: Bool\nA Boolean value that indicates whether the map item represents the user’s location.\nvar name: String?\nThe descriptive name associated with the map item.\nvar phoneNumber: String?\nThe phone number associated with a business at the specified location.\nvar url: URL?\nThe URL associated with the specified location.\nvar timeZone: TimeZone?\nThe time zone of the specified location."
  },
  {
    "title": "init(placemark:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452285-init",
    "html": "Parameters\nplacemark\n\nThe placemark object corresponding to the desired map location. This parameter can’t be nil.\n\nReturn Value\n\nAn initialized map item object.\n\nDiscussion\n\nUse this method to create a map item for an existing placemark. Don’t use it to create a map item representing the user’s location. To do that, use the forCurrentLocation() method instead.\n\nSee Also\nCreating map items\nclass func forCurrentLocation() -> MKMapItem\nCreates and returns a singleton map item object representing the user’s location."
  },
  {
    "title": "forCurrentLocation() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452002-forcurrentlocation",
    "html": "Return Value\n\nAn MKMapItem object representing the user’s location.\n\nDiscussion\n\nFor privacy reasons, and because the user’s location can change, the map item that this method returns doesn’t contain any coordinate data. When you need the actual location of the user, use the Core Location framework to retrieve it.\n\nSee Also\nCreating map items\ninit(placemark: MKPlacemark)\nCreates and returns a map item object using the specified placemark object.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "MapContentView.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "onMapCameraChange(frequency:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232769-onmapcamerachange",
    "html": "Parameters\nfrequency\n\nA MapCameraUpdateFrequency value that indicates how frequently the framework should perform action during a camera interaction.\n\naction\n\nA closure to run when the camera framing changes.\n\nThe closure takes a MapCameraUpdateContext parameter that indicates the camera and the framed area.\n\nSee Also\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nUses the keyframes you provide to animate the camera of a map when the value you provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action when Map camera framing changes."
  },
  {
    "title": "annotationSubtitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/emptymapcontent/4231053-annotationsubtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic, which results in the subtitle being visible only when the annotation is in a selected state.\n\nReturn Value\n\nReturns MapContent whose subtitles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations."
  },
  {
    "title": "annotationTitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/emptymapcontent/4231054-annotationtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic visibility, that results in the title always being visible.\n\nReturn Value\n\nReturns MapContent whose titles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations."
  },
  {
    "title": "mapCameraKeyframeAnimator(trigger:keyframes:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232696-mapcamerakeyframeanimator",
    "html": "Parameters\ntrigger\n\nA value to observe for changes.\n\nkeyframes\n\nA keyframes builder closure the framework calls when starting a new keyframe animation. The framework provides current map camera as the only parameter.\n\nReturn Value\n\nA series of Keyframes.\n\nDiscussion\n\nWhen the trigger value changes, the map calls the keyframes closure to generate the keyframes that animate the camera. The animation continues for the duration of the keyframes that you specify.\n\nIf the user performs a gesture, such as pinch to zoom, while the animation is in progress, the animation is immediately removed, allowing the interaction to take control of the camera.\n\nSee Also\nManaging the camera\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when Map camera framing changes that calls a closure that provides the map camera and the area the camera frames.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action when Map camera framing changes."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232697-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {\n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\n\n\nOther controls don’t have an automatic visibility behavior, so they’ll always be visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232698-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames an alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControls(.visible)\n            MapPitchButton()\n                 .buttonBorderShape(.circular)\n                 .tint(.purple)\n         }\n        .controlSize(.large)\n\n\nIn watchOS, space is at a premium. When using the mapControls(_:) modifier, MapKit automatically combines MapUserLocationButton and MapCompass, if present:\n\n    Map()\n    .mapControls {\n        MapUserLocationButton()\n        MapCompass()\n    }\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility."
  },
  {
    "title": "lookAroundViewer(isPresented:scene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232694-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a Boolean property that determines if the Look Around viewer is visible.\n\nscene\n\nA binding to a property that determines the Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around viewer allows a person to navigate to new locations inside the view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around view shows road labels.\n\npointsOfInterest\n\nThe point of interest categories to include or exclude from the Look Around viewer. The default is to include all categories.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around viewer with the characteristics you specified.\n\nSee Also\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics you provide."
  },
  {
    "title": "lookAroundViewer(isPresented:initialScene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232693-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a property that determines if the Look Around viewer is visible.\n\ninitialScene\n\nThe Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around view allows a person to navigate to new locations inside the view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around view shows road labels.\n\npointsOfInterest\n\nThe point of interest categories to include or exclude from the Look Around viewer. The default is to include all categories.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around viewer with the characteristics you specified.\n\nSee Also\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with a binding to a scene, and navigation, road label, and points of interest characteristics you provide."
  },
  {
    "title": "camera(framing:allowPitch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapproxy/4233593-camera",
    "html": "Parameters\nitem\n\nThe MKMapItem to frame.\n\nallowPitch\n\nA Boolean value that indicates whether you can pitch the camera to frame the content.\n\nReturn Value\n\nReturns a MapCamera with the framing region and pitch you specified.\n\nSee Also\nCreating a camera proxy\nfunc camera(framing: MKCoordinateRegion) -> MapCamera\nCreates a camera in the context of the map that frames the given coordinate region.\nfunc camera(framing: MKMapRect) -> MapCamera\nCreates a camera in the context of the map that frames the given map rectangle."
  },
  {
    "title": "mapFeatureSelectionContent(content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232699-mapfeatureselectioncontent",
    "html": "Parameters\ncontent\n\nGenerates the custom presentation for a given map feature.\n\nReturn Value\n\nReturns customized Annotation or Marker content\n\nDiscussion\n\nThe supported presentation options are Annotation and Marker. The framework ignores other types of map content and handles the result as though the method returned no content.\n\nIf the method returns empty map content, MapKit uses the system presentation.\n\nSee Also\nManaging feature selection\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nSpecifies which map features should have selection disabled."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232494-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "camera(framing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapproxy/4233592-camera",
    "html": "Parameters\nrect\n\nThe map rectangle to frame.\n\nReturn Value\n\nReturns a MapCamera that frames the rectangle you specified.\n\nSee Also\nCreating a camera proxy\nfunc camera(framing: MKCoordinateRegion) -> MapCamera\nCreates a camera in the context of the map that frames the given coordinate region.\nfunc camera(framing: MKMapItem, allowPitch: Bool) -> MapCamera\nCreates a camera in the context of the map that frames the given map item."
  },
  {
    "title": "camera(framing:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapproxy/4233591-camera",
    "html": "Parameters\nregion\n\nThe coordinate region to frame.\n\nReturn Value\n\nReturns a MapCamera with the framing region you specified.\n\nSee Also\nCreating a camera proxy\nfunc camera(framing: MKMapRect) -> MapCamera\nCreates a camera in the context of the map that frames the given map rectangle.\nfunc camera(framing: MKMapItem, allowPitch: Bool) -> MapCamera\nCreates a camera in the context of the map that frames the given map item."
  },
  {
    "title": "convert(_:to:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapproxy/4282660-convert",
    "html": "Parameters\ncoordinate\n\nThe map coordinate to find the corresponding point for.\n\nspace\n\nThe reference coordinate space for the returned point.\n\nReturn Value\n\nReturns a CGPoint; otherwise nil, if coordinate isn’t represented by a point in the MapReader associated with a Map.\n\nSee Also\nConverting between coordinate spaces\nfunc convert(CGPoint, from: some CoordinateSpaceProtocol) -> CLLocationCoordinate2D?\nConverts a point in the specified coordinate space to a map coordinate."
  },
  {
    "title": "init(center:span:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452227-init",
    "html": "Parameters\ncenter\n\nThe center of the coordinate region.\n\nspan\n\nThe span around the center of the coordinate region.\n\nSee Also\nCreating a region\ninit()\nCreates a coordinate region.\ninit(center: CLLocationCoordinate2D, latitudinalMeters: CLLocationDistance, longitudinalMeters: CLLocationDistance)\nCreates a new coordinate region from the specified coordinate and distance values.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle."
  },
  {
    "title": "Launch options dictionary keys | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/launch_options_dictionary_keys",
    "html": "Overview\n\nYou specify these keys in the launch options dictionary for the openMaps(with:launchOptions:) or openInMaps(launchOptions:) method.\n\nTopics\nLaunch options\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information.\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nSee Also\nOpening items at launch time\nDirections mode values\nStrings that represent the possible values of the launch options direction mode key."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452357-init",
    "html": "Parameters\nrect\n\nThe map rectangle that corresponds to the desired region on a two-dimensional map projection.\n\nReturn Value\n\nThe region structure specifying the latitude, longitude, and span values for the specified rectangle.\n\nSee Also\nCreating a region\ninit()\nCreates a coordinate region.\ninit(center: CLLocationCoordinate2D, latitudinalMeters: CLLocationDistance, longitudinalMeters: CLLocationDistance)\nCreates a new coordinate region from the specified coordinate and distance values.\ninit(center: CLLocationCoordinate2D, span: MKCoordinateSpan)\nCreates a coordinate region with a span around the specified center coordinate."
  },
  {
    "title": "userLocation(followsHeading:fallback:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231718-userlocation",
    "html": "Parameters\nfollowsHeading\n\nA Boolean value that indicates whether the camera follows the person’s heading.\n\nfallback\n\nA fallback position to use if the map hasn’t resolved the person’s location.\n\nReturn Value\n\nA new MapCameraPosition.\n\nSee Also\nCreating a camera position\nstatic func camera(MapCamera) -> MapCameraPosition\nCreates a new camera position from an existing map camera you provide.\nstatic func item(MKMapItem, allowsAutomaticPitch: Bool) -> MapCameraPosition\nCreates a new camera position centered on a map item and automatic pitch selection you provide.\nstatic func rect(MKMapRect) -> MapCameraPosition\nCreates a new camera position with the map boundaries you provide.\nstatic func region(MKCoordinateRegion) -> MapCameraPosition\nCreates a new camera position the coordinate region you provide."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion/1452524-init",
    "html": "See Also\nCreating a region\ninit(center: CLLocationCoordinate2D, latitudinalMeters: CLLocationDistance, longitudinalMeters: CLLocationDistance)\nCreates a new coordinate region from the specified coordinate and distance values.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle.\ninit(center: CLLocationCoordinate2D, span: MKCoordinateSpan)\nCreates a coordinate region with a span around the specified center coordinate."
  },
  {
    "title": "followsUserLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231710-followsuserlocation",
    "html": "See Also\nAccessing information about someone’s location\nvar followsUserHeading: Bool\nA Boolean value that indicates whether the map is following someone’s heading."
  },
  {
    "title": "hashValue | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232962-hashvalue",
    "html": "Relationships\nFrom Protocol\nHashable\nSee Also\nHash functions\nfunc hash(into: inout Hasher)\nComputes the essential components of a value by sending them into the given hasher."
  },
  {
    "title": "buildBlock() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232346-buildblock",
    "html": "Return Value\n\nReturns EmptyMapContent.\n\nSee Also\nMap content builders\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232348-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nReturn Value\n\nReturns the MapContent with the two elements you provided.\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232347-buildblock",
    "html": "Parameters\ncontent\n\nThe view content to add to the block.\n\nReturn Value\n\nReturns the MapContent with the single element you provided.\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232350-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nReturn Value\n\nReturns the MapContent with the four elements you provided.\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232349-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nReturn Value\n\nReturns the MapContent with the three elements you provided.\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232351-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nc4\n\nThe fifth content element.\n\nReturn Value\n\nReturns the MapContent with the five elements you provided.\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:_:_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232356-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nc4\n\nThe fifth content element.\n\nc5\n\nThe sixth content element.\n\nc6\n\nThe seventh content element.\n\nc7\n\nThe eighth content element.\n\nc8\n\nThe ninth content element.\n\nc9\n\nThe tenth content element.\n\nReturn Value\n\nReturns the MapContent with the ten elements you provided\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232353-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nc4\n\nThe fifth content element.\n\nc5\n\nThe sixth content element.\n\nc6\n\nThe seventh content element.\n\nReturn Value\n\nReturns the MapContent with the seven elements you provided\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232355-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nc4\n\nThe fifth content element.\n\nc5\n\nThe sixth content element.\n\nc6\n\nThe seventh content element.\n\nc7\n\nThe eighth content element.\n\nc8\n\nThe ninth content element.\n\nReturn Value\n\nReturns the MapContent with the nine elements you provided\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232352-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nc4\n\nThe fifth content element.\n\nc5\n\nThe sixth content element.\n\nReturn Value\n\nReturns the MapContent with the six elements you provided\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildBlock(_:_:_:_:_:_:_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232354-buildblock",
    "html": "Parameters\nc0\n\nThe first content element.\n\nc1\n\nThe second content element.\n\nc2\n\nThe third content element.\n\nc3\n\nThe fourth content element.\n\nc4\n\nThe fifth content element.\n\nc5\n\nThe sixth content element.\n\nc6\n\nThe seventh content element.\n\nc7\n\nThe eighth content element.\n\nReturn Value\n\nReturns the MapContent with the eight elements you provided\n\nSee Also\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide."
  },
  {
    "title": "buildEither(second:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232358-buildeither",
    "html": "Parameters\nsecond\n\nThe content that represents the false content element to compare against.\n\nReturn Value\n\nReturns the conditional map content that meets the conditions the content builder expresses.\n\nSee Also\nConditionally building map content\nstatic func buildEither<TrueContent, FalseContent>(first: TrueContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the first argument you provide evaluates to  true.\nstatic func buildExpression<Content>(Content) -> Content\nBuilds an expression within the map content builder.\nstatic func buildIf<Content>(Content?) -> Content?\nCompares content in a multistatement closure, that produces an optional view that’s visible if the argument you provide evaluates to true.\nstatic func buildLimitedAvailability<Content>(Content) -> MapContent\nProvides support for “if” statements with “available” macro clauses in multi-statement closures, producing conditional content for the “then” branch, such the conditionally-available branch."
  },
  {
    "title": "buildEither(first:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232357-buildeither",
    "html": "Parameters\nfirst\n\nThe content that represents the true content element to compare against.\n\nReturn Value\n\nReturns the conditional map content that meets the conditions the content builder expresses.\n\nSee Also\nConditionally building map content\nstatic func buildEither<TrueContent, FalseContent>(second: FalseContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the second argument you provide evaluates to true.\nstatic func buildExpression<Content>(Content) -> Content\nBuilds an expression within the map content builder.\nstatic func buildIf<Content>(Content?) -> Content?\nCompares content in a multistatement closure, that produces an optional view that’s visible if the argument you provide evaluates to true.\nstatic func buildLimitedAvailability<Content>(Content) -> MapContent\nProvides support for “if” statements with “available” macro clauses in multi-statement closures, producing conditional content for the “then” branch, such the conditionally-available branch."
  },
  {
    "title": "buildExpression(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232359-buildexpression",
    "html": "Parameters\ncontent\n\nThe map builder content the expression builder operates on.\n\nReturn Value\n\nReturns the conditional map content that meets the conditions the content builder expresses.\n\nSee Also\nConditionally building map content\nstatic func buildEither<TrueContent, FalseContent>(first: TrueContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the first argument you provide evaluates to  true.\nstatic func buildEither<TrueContent, FalseContent>(second: FalseContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the second argument you provide evaluates to true.\nstatic func buildIf<Content>(Content?) -> Content?\nCompares content in a multistatement closure, that produces an optional view that’s visible if the argument you provide evaluates to true.\nstatic func buildLimitedAvailability<Content>(Content) -> MapContent\nProvides support for “if” statements with “available” macro clauses in multi-statement closures, producing conditional content for the “then” branch, such the conditionally-available branch."
  },
  {
    "title": "buildIf(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232360-buildif",
    "html": "Parameters\ncontent\n\nThe map builder content the expression builder operates on.\n\nReturn Value\n\nReturns the conditional map content that meets the conditions the content builder expresses.\n\nSee Also\nConditionally building map content\nstatic func buildEither<TrueContent, FalseContent>(first: TrueContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the first argument you provide evaluates to  true.\nstatic func buildEither<TrueContent, FalseContent>(second: FalseContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the second argument you provide evaluates to true.\nstatic func buildExpression<Content>(Content) -> Content\nBuilds an expression within the map content builder.\nstatic func buildLimitedAvailability<Content>(Content) -> MapContent\nProvides support for “if” statements with “available” macro clauses in multi-statement closures, producing conditional content for the “then” branch, such the conditionally-available branch."
  },
  {
    "title": "pointOfInterestCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/3143415-pointofinterestcategory",
    "html": "Discussion\n\nIf the map item doesn’t correspond to a point of interest, or if the point of interest isn’t one of the known values in MKPointOfInterestCategory, pointOfInterestCategory is nil.\n\nSee Also\nAccessing the map item attributes\nvar placemark: MKPlacemark\nThe placemark object containing the location information.\nvar isCurrentLocation: Bool\nA Boolean value that indicates whether the map item represents the user’s location.\nvar name: String?\nThe descriptive name associated with the map item.\nvar phoneNumber: String?\nThe phone number associated with a business at the specified location.\nvar url: URL?\nThe URL associated with the specified location.\nvar timeZone: TimeZone?\nThe time zone of the specified location."
  },
  {
    "title": "name | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem/1452339-name",
    "html": "Discussion\n\nUse this property to specify the name associated with the location. For example, if there’s a business at the specified location, use this property to specify the name of the business.\n\nIf this map item represents the user’s location, the value in this property is a localized version of Current Location.\n\nSee Also\nAccessing the map item attributes\nvar placemark: MKPlacemark\nThe placemark object containing the location information.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point-of-interest category for the map item.\nvar isCurrentLocation: Bool\nA Boolean value that indicates whether the map item represents the user’s location.\nvar phoneNumber: String?\nThe phone number associated with a business at the specified location.\nvar url: URL?\nThe URL associated with the specified location.\nvar timeZone: TimeZone?\nThe time zone of the specified location."
  },
  {
    "title": "mapStyle(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232702-mapstyle",
    "html": "Parameters\nvalue\n\nThe MapStyle to apply to the map.\n\nReturn Value\n\nReturns a view styled with the MapStyle you specified."
  },
  {
    "title": "onMapCameraChange(frequency:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232770-onmapcamerachange",
    "html": "Parameters\nfrequency\n\nA MapCameraUpdateFrequency value that indicates how frequently the framework should perform action during a camera interaction.\n\naction\n\nA closure to run when the camera framing changes.\n\nSee Also\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nUses the keyframes you provide to animate the camera of a map when the value you provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when Map camera framing changes that calls a closure that provides the map camera and the area the camera frames."
  },
  {
    "title": "mapFeatureSelectionDisabled(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview/4232700-mapfeatureselectiondisabled",
    "html": "Parameters\nselectionDisabled\n\nDetermines if MapKit disables selection for a given map feature.\n\nReturn Value\n\nReturns a Boolean value that indicates whether the feature is in a disabled state.\n\nSee Also\nManaging feature selection\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nSpecifies a custom presentation for the currently selected feature."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/defaultuserannotationcontent/4288567-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "convert(_:from:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapproxy/4282659-convert",
    "html": "Parameters\npoint\n\nThe point to convert.\n\nspace\n\nThe reference coordinate space for point.\n\nReturn Value\n\nReturns a CLLocationCoordinate2D; or nil, if the specified point isn’t represented by a point in the MapReader associated with a Map.\n\nSee Also\nConverting between coordinate spaces\nfunc convert(CLLocationCoordinate2D, to: some CoordinateSpaceProtocol) -> CGPoint?\nConverts a map coordinate to a point in the specified coordinate space."
  },
  {
    "title": "tag(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/emptymapcontent/4231062-tag",
    "html": "Parameters\ntag\n\nA Hashable value to use as the map content’s tag.\n\nReturn Value\n\nReturns MapContent with the tag set to value you specified."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231694-init",
    "html": "Parameters\ncamera\n\nAn MKMapCamera object.\n\nSee Also\nCreating a map camera\ninit(centerCoordinate: CLLocationCoordinate2D, distance: Double, heading: Double, pitch: Double)\nCreates a camera using the specified distance, pitch, and heading information."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/4237567-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "tint(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4235349-tint",
    "html": "Parameters\ntint\n\nThe tint Color to apply.\n\nReturn Value\n\nReturns the MapUserLocationButton tinted with the color you specified.\n\nSee Also\nSetting the tint and border shape\nfunc buttonBorderShape(ButtonBorderShape) -> View\nSets the border shape for buttons in this view."
  },
  {
    "title": "heading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231693-heading",
    "html": "See Also\nAccessing the camera properties\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar distance: Double\nThe distance from the center point of the map to the camera, in meters.\nvar pitch: Double\nThe viewing angle of the camera, in degrees."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/4234521-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {\n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\nOther controls don’t have an automatic visibility behavior, so they’ll always be visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "strokeStyle(style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232342-strokestyle",
    "html": "Parameters\nstyle\n\nThe stroke style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the StrokeStyle you specified.\n\nSee Also\nSetting stroke properties\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stoke drawn map overlays using the line width you specify."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232336-body",
    "html": "Required"
  },
  {
    "title": "annotationSubtitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232334-annotationsubtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic, which results in the subtitle being visible only when the annotation is in a selected state.\n\nReturn Value\n\nReturns MapContent whose subtitles have the visibility setting you specified.\n\nSee Also\nSupplying annotation titles\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility of titles for markers and annotations."
  },
  {
    "title": "stroke(lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232341-stroke",
    "html": "Parameters\nlineWidth\n\nThe line width to draw the stroke with.\n\nReturn Value\n\nReturns MapContent with overlays drawn with lineWidth you specified.\n\nSee Also\nSetting stroke properties\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232333-body",
    "html": "Required"
  },
  {
    "title": "camera(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231707-camera",
    "html": "Parameters\ncamera\n\nThe map camera to convert.\n\nReturn Value\n\nReturns a new camera position.\n\nSee Also\nCreating a camera position\nstatic func item(MKMapItem, allowsAutomaticPitch: Bool) -> MapCameraPosition\nCreates a new camera position centered on a map item and automatic pitch selection you provide.\nstatic func rect(MKMapRect) -> MapCameraPosition\nCreates a new camera position with the map boundaries you provide.\nstatic func region(MKCoordinateRegion) -> MapCameraPosition\nCreates a new camera position the coordinate region you provide.\nstatic func userLocation(followsHeading: Bool, fallback: MapCameraPosition) -> MapCameraPosition\nCreates a camera position with the specific fallback position and optionally follows the user’s heading."
  },
  {
    "title": "data | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/dynamicmapcontent/4231050-data",
    "html": "Required"
  },
  {
    "title": "continuous | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatefrequency/4231724-continuous",
    "html": "See Also\nTiming of camera updates\nstatic var onEnd: MapCameraUpdateFrequency\nA value that indicates the camera updates when map interactions are complete."
  },
  {
    "title": "Data | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/dynamicmapcontent/4231049-data",
    "html": "Required"
  },
  {
    "title": "onEnd | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatefrequency/4231725-onend",
    "html": "See Also\nTiming of camera updates\nstatic var continuous: MapCameraUpdateFrequency\nA value that indicates that all camera updates are continuous, including while interactions are taking place."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatecontext/4231722-region",
    "html": "See Also\nAccessing information about the camera\nlet camera: MapCamera\nThe current map camera.\nlet rect: MKMapRect\nA map rectangle that approximates the view of the map’s camera."
  },
  {
    "title": "rect(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231715-rect",
    "html": "Parameters\nrect\n\nAn MKMapRect that describes the camera boundaries.\n\nSee Also\nCreating a camera position\nstatic func camera(MapCamera) -> MapCameraPosition\nCreates a new camera position from an existing map camera you provide.\nstatic func item(MKMapItem, allowsAutomaticPitch: Bool) -> MapCameraPosition\nCreates a new camera position centered on a map item and automatic pitch selection you provide.\nstatic func region(MKCoordinateRegion) -> MapCameraPosition\nCreates a new camera position the coordinate region you provide.\nstatic func userLocation(followsHeading: Bool, fallback: MapCameraPosition) -> MapCameraPosition\nCreates a camera position with the specific fallback position and optionally follows the user’s heading."
  },
  {
    "title": "allowsAutomaticPitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231704-allowsautomaticpitch",
    "html": "See Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "camera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231706-camera",
    "html": "See Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "automatic | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231705-automatic",
    "html": "See Also\nInformation about camera position and framing\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "init(minimumDistance:maximumDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamerabounds/4231700-init",
    "html": "Parameters\nminimumDistance\n\nThe minimum distance someone can zoom in on a map based on its center point, measured in meters.\n\nmaximumDistance\n\nThe maximum distance someone can zoom out on a map based on its center point, measured in meters.\n\nSee Also\nCreating a map camera bounds\ninit(centerCoordinateBounds: MKCoordinateRegion, minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the specified region boundary and zoom ranges.\ninit(centerCoordinateBounds: MKMapRect, minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the specified map rectangle boundary and zoom ranges."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231716-region",
    "html": "See Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle."
  },
  {
    "title": "rect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231714-rect",
    "html": "See Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "followsUserHeading | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231709-followsuserheading",
    "html": "See Also\nAccessing information about someone’s location\nvar followsUserLocation: Bool\nA Boolean value that indicates whether the map is following someone’s location."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232954",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nReturn Value\n\nReturns true if the MapFeature values are equal. Otherwise, returns false\n\nSee Also\nComparison functions\nstatic func != (MapFeature, MapFeature) -> Bool\nReturns a Boolean value that indicates whether two values are not equal."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231702",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nReturn Value\n\nReturns true if the camera positions are not equal; otherwise, returns false."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231703",
    "html": "Parameters\na\n\nA value to compare.\n\nb\n\nAnother value to compare.\n\nReturn Value\n\nReturns true if the camera positions are are equal; otherwise, false."
  },
  {
    "title": "init(centerCoordinateBounds:minimumDistance:maximumDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamerabounds/4231699-init",
    "html": "Parameters\ncenterCoordinateBounds\n\nAn MKMapRect that specifies a boundary of an area that the map’s center needs to remain in.\n\nminimumDistance\n\nThe minimum distance someone can zoom in on a map based on its center point, measured in meters.\n\nmaximumDistance\n\nThe maximum distance the user can zoom out on a map based on its center point, measured in meters.\n\nSee Also\nCreating a map camera bounds\ninit(centerCoordinateBounds: MKCoordinateRegion, minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the specified region boundary and zoom ranges.\ninit(minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the zoom ranges you specify."
  },
  {
    "title": "hash(into:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232961-hash",
    "html": "Parameters\nhasher\n\nThe hasher to use when combining the components of this instance.\n\nRelationships\nFrom Protocol\nHashable\nSee Also\nHash functions\nvar hashValue: Int\nAn integer value that uniquely identifies this object."
  },
  {
    "title": "init(centerCoordinateBounds:minimumDistance:maximumDistance:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamerabounds/4231698-init",
    "html": "Parameters\ncenterCoordinateBounds\n\nA boundary of an area within which the map’s center needs to remain.\n\nminimumDistance\n\nThe minimum distance someone can zoom in on a map based on its center point, measured in meters.\n\nmaximumDistance\n\nThe maximum distance someone can zoom out on a map based on its center point, measured in meters.\n\nSee Also\nCreating a map camera bounds\ninit(centerCoordinateBounds: MKMapRect, minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the specified map rectangle boundary and zoom ranges.\ninit(minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the zoom ranges you specify."
  },
  {
    "title": "pointOfInterestCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232965-pointofinterestcategory",
    "html": "Discussion\n\nIf the feature doesn’t have a point of interest category, this value is nil.\n\nSee Also\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar title: String?\nThe title of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar image: Image?\nAn image associated with the map feature."
  },
  {
    "title": "MapFeature.FeatureKind | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/featurekind",
    "html": "Topics\nKinds of features\nstatic var physicalFeature: MapFeature.FeatureKind\nA physical map feature.\nstatic var pointOfInterest: MapFeature.FeatureKind\nA point of interest.\nstatic var territory: MapFeature.FeatureKind\nA territory or political boundary.\nSee Also\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar title: String?\nThe title of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar image: Image?\nAn image associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature."
  },
  {
    "title": "title | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232966-title",
    "html": "Discussion\n\nIf the feature doesn’t have a title this property is nil.\n\nSee Also\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar image: Image?\nAn image associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232953",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nSee Also\nComparison functions\nstatic func == (MapFeature, MapFeature) -> Bool\nReturns a Boolean value that indicates whether two values are equal."
  },
  {
    "title": "image | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232963-image",
    "html": "Discussion\n\nIf this feature doesn’t have an associated image, this property is nil.\n\nSee Also\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar title: String?\nThe title of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232960-coordinate",
    "html": "See Also\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar title: String?\nThe title of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar image: Image?\nAn image associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature."
  },
  {
    "title": "kind | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232964-kind",
    "html": "See Also\nAccessing the feature’s properties\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar title: String?\nThe title of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar image: Image?\nAn image associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature."
  },
  {
    "title": "!=(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231689",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nReturn Value\n\nReturns true if the map camera structures are not equal; otherwise, returns false."
  },
  {
    "title": "pitch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231696-pitch",
    "html": "See Also\nAccessing the camera properties\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar distance: Double\nThe distance from the center point of the map to the camera, in meters.\nvar heading: Double\nThe heading of the camera, in degrees, relative to true North."
  },
  {
    "title": "DefaultUserAnnotationContent.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/defaultuserannotationcontent/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapOverlayLevel(level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233567-mapoverlaylevel",
    "html": "Parameters\nlevel\n\nOne of the MKOverlayLevel levels.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the positioning level you specified."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/4231873-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "init(_:image:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235388-init",
    "html": "Parameters\ntitleKey\n\nThe localized string key to use to lookup the title.\n\nimage\n\nThe name of the image resource to use as the marker balloon’s glyph.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "init(coordinate:label:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235394-init",
    "html": "Parameters\ncoordinate\n\nThe coordinate used to display the marker.\n\nlabel\n\nA label for the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "init(centerCoordinate:distance:heading:pitch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231695-init",
    "html": "Parameters\ncenterCoordinate\n\nThe map coordinate at the center of the map view.\n\ndistance\n\nThe distance from the center point of the map to the camera, in meters.\n\nheading\n\nThe heading of the camera, in degrees, relative to true North.\n\npitch\n\nThe viewing angle of the camera, in degrees.\n\nSee Also\nCreating a map camera\ninit(MKMapCamera)\nCreates a map camera from the given MapKit camera object."
  },
  {
    "title": "distance | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231692-distance",
    "html": "See Also\nAccessing the camera properties\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar heading: Double\nThe heading of the camera, in degrees, relative to true North.\nvar pitch: Double\nThe viewing angle of the camera, in degrees."
  },
  {
    "title": "init(_:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235387-init",
    "html": "Parameters\ntitle\n\nThe label for the marker.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "controlSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/4237612-controlsize",
    "html": "Parameters\ncontrolSize\n\nOne of the control sizes specified in the ControlSize enumeration.\n\nReturn Value\n\nReturns the view with the enclosed controls set to the size you specified, or appropriately sized for the current view.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/4237771-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace and that you use to associate this control with a map instance.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "MapZoomStepper.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/4237770-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames an alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControls(.visible)\n            MapPitchButton()\n                .buttonBorderShape(.circular)\n                .tint(.purple)\n        }\n        .controlSize(.large)\n\n\nIn watchOS, space is at a premium. When using the mapControls(_:) modifier, MapKit automatically combines MapUserLocationButton and MapCompass, if present:\n\n    Map()\n    .mapControls {\n        MapUserLocationButton()\n        MapCompass()\n    }\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/4237769-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {\n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\n\n\nOther controls don’t have an automatic visibility behavior, so they’ll always be visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "lookAroundViewer(isPresented:initialScene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/lookaroundpreview/4231402-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a property that determines if the Look Around viewer is visible.\n\ninitialScene\n\nThe look around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around viewer allows a person to navigate to new locations inside the view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around viewer shows road labels.\n\npointsOfInterest\n\nThe point of interest categories to include or exclude from the Look Around viewer. The default is to include all categories.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around viewer with the characteristics you specified.\n\nSee Also\nCreating a Look Around viewer\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with a binding to a scene, and navigation, road label, and points of interest characteristics you provide."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/lookaroundpreview/4231201-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4235127-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames an alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControlVisibility(.visible)\n            MapPitchButton()\n                .buttonBorderShape(.circular)\n                .tint(.purple)\n        }\n        .controlSize(.large)\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "controlSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4234967-controlsize",
    "html": "Parameters\ncontrolSize\n\nOne of the control sizes specified in the ControlSize enumeration.\n\nReturn Value\n\nReturns the view with the enclosed controls set to the size you specified, or appropriately sized for the current view.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4235126-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {\n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\n\n\nOther controls don’t have an automatic visibility behavior, so they’ll always be visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/4234525-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4234922-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/4234522-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames and alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControlVisibility(.visible)\n            MapPitchButton()\n                 .buttonBorderShape(.circular)\n                 .tint(.purple)\n         }\n        .controlSize(.large)\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "controlSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/4234362-controlsize",
    "html": "Parameters\ncontrolSize\n\nOne of the control sizes specified in the ControlSize enumeration.\n\nReturn Value\n\nReturns the view with the enclosed controls set to the size you specified, or appropriately sized for the current view.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "MapPitchToggle.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "controlSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/4280313-controlsize",
    "html": "Parameters\ncontrolSize\n\nOne of the control sizes specified in the ControlSize enumeration.\n\nReturn Value\n\nReturns the view with the enclosed controls set to the size you specified, or appropriate size for the current view.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have controls with standard sizes and positions."
  },
  {
    "title": "buildLimitedAvailability(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder/4232361-buildlimitedavailability",
    "html": "Parameters\ncontent\n\nThe map builder content the expression builder operates on.\n\nReturn Value\n\nReturns the conditional map content that meets the conditions the content builder expresses.\n\nSee Also\nConditionally building map content\nstatic func buildEither<TrueContent, FalseContent>(first: TrueContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the first argument you provide evaluates to  true.\nstatic func buildEither<TrueContent, FalseContent>(second: FalseContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the second argument you provide evaluates to true.\nstatic func buildExpression<Content>(Content) -> Content\nBuilds an expression within the map content builder.\nstatic func buildIf<Content>(Content?) -> Content?\nCompares content in a multistatement closure, that produces an optional view that’s visible if the argument you provide evaluates to true."
  },
  {
    "title": "annotationTitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232335-annotationtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic visibility, that results in the title always being visible.\n\nReturn Value\n\nReturns MapContent whose titles have the visibility setting you specified.\n\nSee Also\nSupplying annotation titles\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility of subtitles for markers and annotations."
  },
  {
    "title": "stroke(_:lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232339-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nlineWidth\n\nThe line width to draw the stroke with.\n\nReturn Value\n\nReturns MapContent drawn with the ShapeStyle and lineWidth you specified.\n\nSee Also\nSetting stroke properties\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stoke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "stroke(_:style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232340-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nstyle\n\nThe stroke style to apply.\n\nSee Also\nSetting stroke properties\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stoke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "foregroundStyle(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232337-foregroundstyle",
    "html": "Parameters\ncontent\n\nThe shape style to apply to the overlay.\n\nReturn Value\n\nReturns MapContent with the foreground style you specified.\n\nSee Also\nSetting the content style\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content."
  },
  {
    "title": "tint(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232344-tint",
    "html": "Parameters\ntint\n\nThe tint to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the ShapeStyle you specified.\n\nSee Also\nSetting the content style\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content in drawing map overlays."
  },
  {
    "title": "mapOverlayLevel(level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent/4232338-mapoverlaylevel",
    "html": "Parameters\nlevel\n\nOne of the MKOverlayLevel levels.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the positioning level you specified."
  },
  {
    "title": "item(_:allowsAutomaticPitch:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231712-item",
    "html": "Parameters\nitem\n\nThe MKMapItem to center the map on.\n\nallowsAutomaticPitch\n\nA Boolean value that indicates whether the camera selects a pitch automatically.\n\nReturn Value\n\nReturns a new MapCameraPosition.\n\nSee Also\nCreating a camera position\nstatic func camera(MapCamera) -> MapCameraPosition\nCreates a new camera position from an existing map camera you provide.\nstatic func rect(MKMapRect) -> MapCameraPosition\nCreates a new camera position with the map boundaries you provide.\nstatic func region(MKCoordinateRegion) -> MapCameraPosition\nCreates a new camera position the coordinate region you provide.\nstatic func userLocation(followsHeading: Bool, fallback: MapCameraPosition) -> MapCameraPosition\nCreates a camera position with the specific fallback position and optionally follows the user’s heading."
  },
  {
    "title": "camera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatecontext/4231720-camera",
    "html": "See Also\nAccessing information about the camera\nlet rect: MKMapRect\nA map rectangle that approximates the view of the map’s camera.\nlet region: MKCoordinateRegion\nA map region that approximates the view of the map’s camera."
  },
  {
    "title": "rect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatecontext/4231721-rect",
    "html": "See Also\nAccessing information about the camera\nlet camera: MapCamera\nThe current map camera.\nlet region: MKCoordinateRegion\nA map region that approximates the view of the map’s camera."
  },
  {
    "title": "region(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231717-region",
    "html": "Parameters\nregion\n\nAn MKCoordinateRegion that describes the camera boundaries.\n\nSee Also\nCreating a camera position\nstatic func camera(MapCamera) -> MapCameraPosition\nCreates a new camera position from an existing map camera you provide.\nstatic func item(MKMapItem, allowsAutomaticPitch: Bool) -> MapCameraPosition\nCreates a new camera position centered on a map item and automatic pitch selection you provide.\nstatic func rect(MKMapRect) -> MapCameraPosition\nCreates a new camera position with the map boundaries you provide.\nstatic func userLocation(followsHeading: Bool, fallback: MapCameraPosition) -> MapCameraPosition\nCreates a camera position with the specific fallback position and optionally follows the user’s heading."
  },
  {
    "title": "fallbackPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231708-fallbackposition",
    "html": "See Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "item | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231711-item",
    "html": "Discussion\n\nIf the map isn’t framing an item, this property is nil.\n\nSee Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "positionedByUser | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition/4231713-positionedbyuser",
    "html": "See Also\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame."
  },
  {
    "title": "backgroundColor | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature/4232959-backgroundcolor",
    "html": "Discussion\n\nIf this feature doesn’t have a background color this property is nil.\n\nSee Also\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar title: String?\nThe title of the map feature.\nvar image: Image?\nAn image associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature."
  },
  {
    "title": "==(_:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231690",
    "html": "Parameters\nlhs\n\nA value to compare.\n\nrhs\n\nAnother value to compare.\n\nReturn Value\n\nReturns true if the map camera structures are equal; otherwise, returns false."
  },
  {
    "title": "annotationTitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation/4231034-annotationtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic visibility, which results in the title always being visible.\n\nReturn Value\n\nReturns MapContent whose titles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations."
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/4237061-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/4232078-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames an alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControlVisibility(.visible)\n            MapPitchButton()\n                .buttonBorderShape(.circular)\n                .tint(.purple)\n        }\n        .controlSize(.large)\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "controlSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/4231918-controlsize",
    "html": "Parameters\ncontrolSize\n\nOne of the control sizes specified in the ControlSize enumeration.\n\nReturn Value\n\nReturns the view with the enclosed controls set to the size you specified, or an appropriately sized for the current view.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/4232081-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace that you use to associate this control with a map instance.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "init(scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/4232031-init",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies a namespace and that you use to associate this control with a map instance."
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass/4282462-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility."
  },
  {
    "title": "init(scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass/4282430-init",
    "html": "Parameters\nscope\n\nThe namespace the framework passes to the associated Map and mapScope(_:). For use outside of mapControls(_:).\n\nDiscussion"
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass/4282461-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that determine how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have controls with standard sizes and positions."
  },
  {
    "title": "MapPitchSlider.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/4237060-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames an alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControlVisibility(.visible)\n            MapPitchButton()\n                 .buttonBorderShape(.circular)\n                 .tint(.purple)\n         }\n        .controlSize(.large)\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/4237059-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {        \n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\nOther controls don’t have an automatic visibility behavior, so they’ll always be visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/4236857-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "tag(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235442-tag",
    "html": "Parameters\ntag\n\nA Hashable value to use as the map content’s tag.\n\nReturn Value\n\nReturns MapContent with the tag set to value you specified."
  },
  {
    "title": "tag(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235401-tag",
    "html": "Parameters\ntag\n\nA Hashable value to use as the map content’s tag.\n\nReturn Value\n\nReturns MapContent with the tag set to value you specified."
  },
  {
    "title": "init(scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/4237019-init",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace and that you use to associate this control with a map instance."
  },
  {
    "title": "mapOverlayLevel(level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235437-mapoverlaylevel",
    "html": "Parameters\nlevel\n\nOne of the MKOverlayLevel levels.\n\nReturn Value\n\nOne of the MKOverlayLevel levels."
  },
  {
    "title": "UserLocation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userlocation",
    "html": "Topics\nAccessing the user’s location and heading\nvar heading: CLHeading?\nA value that indicates the heading of the person’s device.\nvar location: CLLocation?\nAn object that describes the current location of the persons’s device, including the latitude and longitude."
  },
  {
    "title": "annotationTitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235432-annotationtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic visibility, which results in the title always being visible.\n\nReturn Value\n\nReturns MapContent whose titles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations."
  },
  {
    "title": "init(anchor:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235436-init",
    "html": "Parameters\nanchor\n\nHow to anchor the user location indicator around the person’s location. The default is center.\n\ncontent\n\nThe custom view used to indicate the person’s location.\n\nSee Also\nCreating a user annotation\ninit()\nCreates an annotation that displays the person’s current location.\ninit(anchor: UnitPoint)\nCreates an annotation that displays the person’s current location using the system styled user location indicator with the specified anchor point.\ninit(anchor: UnitPoint, content: (UserLocation) -> Content)\nCreates an annotation that displays a person’s current location using the system styled user location indicator with the specified anchor point using a custom view."
  },
  {
    "title": "init(anchor:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235434-init",
    "html": "Parameters\nanchor\n\nHow to anchor the user location indicator around the user’s location. The default is center.\n\nSee Also\nCreating a user annotation\ninit()\nCreates an annotation that displays the person’s current location.\ninit(anchor: UnitPoint, content: (UserLocation) -> Content)\nCreates an annotation that displays a person’s current location using the system styled user location indicator with the specified anchor point using a custom view.\ninit(anchor: UnitPoint, content: () -> Content)\nCreate an annotation that displays the person’s current location of the user using a custom view."
  },
  {
    "title": "init() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4289046-init",
    "html": "See Also\nCreating a user annotation\ninit(anchor: UnitPoint)\nCreates an annotation that displays the person’s current location using the system styled user location indicator with the specified anchor point.\ninit(anchor: UnitPoint, content: (UserLocation) -> Content)\nCreates an annotation that displays a person’s current location using the system styled user location indicator with the specified anchor point using a custom view.\ninit(anchor: UnitPoint, content: () -> Content)\nCreate an annotation that displays the person’s current location of the user using a custom view."
  },
  {
    "title": "init(item:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235395-init",
    "html": "Parameters\nitem\n\nAn MKMapItem that provides a label for the marker.\n\nDiscussion\n\nMapKit composes a label using available information, such as the name property of label.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label."
  },
  {
    "title": "init(_:systemImage:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235393-init",
    "html": "Parameters\ntitle\n\nThe title of the marker.\n\nsystemImage\n\nThe name of the system image or SF Symbol to use as the marker balloon’s glyph.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "init(_:monogram:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4289045-init",
    "html": "Parameters\ntitle\n\nThe title of the marker.\n\nmonogram\n\nA Text view that contains up to three characters to display on the marker’s balloon.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "centerCoordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera/4231691-centercoordinate",
    "html": "See Also\nAccessing the camera properties\nvar distance: Double\nThe distance from the center point of the map to the camera, in meters.\nvar heading: Double\nThe heading of the camera, in degrees, relative to true North.\nvar pitch: Double\nThe viewing angle of the camera, in degrees."
  },
  {
    "title": "init(_:monogram:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4289044-init",
    "html": "Parameters\ntitleKey\n\nThe localized string key to use to lookup the title.\n\nmonogram\n\nA Text view that contains up to three characters to display on the marker’s balloon.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "init(_:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235386-init",
    "html": "Parameters\ntitleKey\n\nThe localized string key to use to lookup the title.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "mapOverlayLevel(level:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231734-mapoverlaylevel",
    "html": "Parameters\nlevel\n\nOne of the MKOverlayLevel levels.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the positioning level you specified."
  },
  {
    "title": "strokeStyle(style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231738-strokestyle",
    "html": "Parameters\nstyle\n\nThe stroke style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the StrokeStyle you specified.\n\nSee Also\nStyling the circle\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nSets the line width used for drawing map overlays."
  },
  {
    "title": "stroke(lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231737-stroke",
    "html": "Parameters\nlineWidth\n\nThe line width of the stroke.\n\nReturn Value\n\nReturns MapContent with overlays drawn with lineWidth you specified.\n\nSee Also\nStyling the circle\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "stroke(_:style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231736-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nstyle\n\nThe stroke style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the ShapeStyle and StrokeStyle you specified.\n\nSee Also\nStyling the circle\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nSets the line width used for drawing map overlays.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "lookAroundViewer(isPresented:scene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/lookaroundpreview/4231403-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a Boolean property that determines if the Look Around viewer is visible.\n\nscene\n\nA binding to a property that determines the Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around viewer allows a person to navigate to new locations inside the view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around viewer shows road labels.\n\npointsOfInterest\n\nThe point of interest categories to include or exclude from the Look Around viewer. The default is to include all categories.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around viewer with the characteristics you specified.\n\nSee Also\nCreating a Look Around viewer\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics you provide."
  },
  {
    "title": "init(scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper/4237729-init",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace."
  },
  {
    "title": "MapUserLocationButton.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "init(scene:allowsNavigation:showsRoadLabels:pointsOfInterest:badgePosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/lookaroundpreview/4231360-init",
    "html": "Parameters\nscene\n\nA binding to the Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around scene allows navigation after the user taps the Look Around preview to enter the full screen Look Around viewer. MapKit never allows navigation on the Look Around preview itself.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around scene shows road labels after the user taps the Look Around preview to enter the full screen Look Around viewer. MapKit never shows road labels on the Look Around preview itself.\n\npointsOfInterest\n\nThe categories of points of interest to display after the user taps the Look Around preview to enter the full screen Look Around viewer. MapKit never displays points of interest on the Look Around preview itself. By default, MapKit displays all points of interest categories.\n\nbadgePosition\n\nA value that controls the position of a badge on the Look Around preview.\n\nDiscussion\n\nNavigation refers to the ability to tap-to-navigate to a different vantage point in the Look Around scene and what a person can control through the use of the allowsNavigation property. The framework refers to the ability to pan and zoom around the Look Around scene is as exploring and you can’t restrict it while in the Look Around viewer.\n\nThe Look Around viewer isn’t available on macOS and allowsNavigation has no effect; in iOS, exploration is always available in the Look Around viewer and you can’t disable it.\n\nSee Also\nCreating a Look Around preview\ninit(initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, badgePosition: MKLookAroundBadgePosition)\nCreates a Look Around preview with an initial scene, navigation, road label, points of interest, and badge position you specify."
  },
  {
    "title": "init(initialScene:allowsNavigation:showsRoadLabels:pointsOfInterest:badgePosition:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/lookaroundpreview/4231359-init",
    "html": "Parameters\ninitialScene\n\nThe Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around scene allows navigation after the user taps the Look Around preview to enter the full screen Look Around viewer. MapKit never allows navigation on the Look Around preview itself.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around scene shows road labels after the user taps the Look Around preview to enter the full screen Look Around viewer. MapKit never shows road labels on the Look Around preview itself.\n\npointsOfInterest\n\nThe categories of points of interest to display after the user taps the Look Around preview to enter the full screen Look Around viewer. MapKit never displays points of interest on the Look Around preview itself. By default, MapKit displays all points of interest categories.\n\nbadgePosition\n\nA value that controls the position of a badge on the Look Around preview.\n\nDiscussion\n\nNavigation refers to the ability to tap-to-navigate to a different vantage point in the Look Around scene and what a person can control through the use of the allowsNavigation property. The framework refers to the ability to pan and zoom around the Look Around scene is as exploring and you can’t restrict it while in the Look Around viewer.\n\nThe Look Around viewer isn’t available on macOS and allowsNavigation has no effect; in iOS, exploration is always available in the Look Around viewer and you can’t disable it.\n\nSee Also\nCreating a Look Around preview\ninit(scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, badgePosition: MKLookAroundBadgePosition)\nCreates a Look Around preview with a binding to a scene, navigation, road label, points of interest, and badge position you specify."
  },
  {
    "title": "buttonBorderShape(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4234926-buttonbordershape",
    "html": "Parameters\nshape\n\nThe ButtonBorderShape to use.\n\nReturn Value\n\nReturns the MapUserLocationButton with the border shape you specify.\n\nSee Also\nSetting the tint and border shape\nfunc tint(Color?) -> View\nSets the tint color within this view."
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4235130-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace."
  },
  {
    "title": "init(scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton/4235080-init",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace and that you use to associate the user location indicator with a map instance."
  },
  {
    "title": "MapScaleView.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/4280480-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies the namespace you use to associate this control with a map instance.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/4234317-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/4280477-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/4280268-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "init(anchorEdge:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview/4234475-init",
    "html": "Parameters\nanchorEdge\n\nThe fixed edge the scale grows and shrinks from. Use this outside of mapControls(_:) view modifier.\n\nscope\n\nA Namespace.ID value that identifies this namespace and that you can use to associate this control with a map instance."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/4280476-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that determine how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have controls with standard sizes and positions.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "init(scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle/4280431-init",
    "html": "Parameters\nscope\n\nThe namespace the framework passes to the associated Map and mapScope(_:)."
  },
  {
    "title": "init(bounds:interactionModes:selection:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231663-init",
    "html": "Parameters\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "foregroundStyle(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231730-foregroundstyle",
    "html": "Parameters\ncontent\n\nThe shape style to apply to the overlay.\n\nReturn Value\n\nReturns MapContent with the foreground style you specified.\n\nSee Also\nStyling the circle\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nSets the line width used for drawing map overlays.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "init(center:radius:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231732-init",
    "html": "Parameters\ncoordinate\n\nThe location of the center of the circle.\n\nradius\n\nThe radius of the circle, in meters.\n\nSee Also\nCreating a map circle\ninit(MKCircle)\nCreates a circle overlay from an existing map circle object.\ninit(mapRect: MKMapRect)\nCreates the largest possible circle centered within the given map rectangle."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231731-init",
    "html": "Parameters\ncircle\n\nThe circle to convert.\n\nSee Also\nCreating a map circle\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates a circle with the center coordinate and radius you specify.\ninit(mapRect: MKMapRect)\nCreates the largest possible circle centered within the given map rectangle."
  },
  {
    "title": "tint(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233573-tint",
    "html": "Parameters\ntint\n\nThe tint ShapeStyle to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the ShapeStyle you specified.\n\nSee Also\nStyling the polygon\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style to use to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to draw map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the stroke style you provide to drawn map overlays."
  },
  {
    "title": "stroke(lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233570-stroke",
    "html": "Parameters\nlineWidth\n\nThe line width of the stroke.\n\nReturn Value\n\nReturns MapContent with overlays drawn with lineWidth you specified.\n\nSee Also\nStyling the polygon\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style to use to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to draw map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the stroke style you provide to drawn map overlays.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content."
  },
  {
    "title": "strokeStyle(style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233571-strokestyle",
    "html": "Parameters\nstyle\n\nThe stroke style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the StrokeStyle you specified.\n\nSee Also\nStyling the polygon\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style to use to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to draw map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content."
  },
  {
    "title": "foregroundStyle(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233564-foregroundstyle",
    "html": "Parameters\ncontent\n\nThe shape style to apply to the overlay.\n\nReturn Value\n\nReturns MapContent with the foreground style you specified.\n\nSee Also\nStyling the polygon\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to draw map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the stroke style you provide to drawn map overlays.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content."
  },
  {
    "title": "init(points:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233566-init",
    "html": "Parameters\npoints\n\nAn array of MKMapPoint points that make up the vertices of the polygon.\n\nSee Also\nCreating a map polygon\ninit(coordinates: [CLLocationCoordinate2D])\nCreates a polygon from a list of coordinates you provide.\ninit(MKPolygon)\nCreates a polygon from the polygon you provide."
  },
  {
    "title": "init(coordinates:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233565-init",
    "html": "Parameters\ncoordinates\n\nAn array of CLLocationCoordinate2D coordinates.\n\nSee Also\nCreating a map polygon\ninit(points: [MKMapPoint])\nCreates a polygon from a list of map points.\ninit(MKPolygon)\nCreates a polygon from the polygon you provide."
  },
  {
    "title": "Deprecated Symbols | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/deprecated_symbols",
    "html": "Topics\nInitializers\ninit(coordinateRegion: Binding<MKCoordinateRegion>, interactionModes: MapInteractionModes, showsUserLocation: Bool, userTrackingMode: Binding<MapUserTrackingMode>?)\nCreates a map that displays a coordinate region and optionally configures available interactions, user location, and tracking behavior.\nDeprecated\ninit<Items, Annotation>(coordinateRegion: Binding<MKCoordinateRegion>, interactionModes: MapInteractionModes, showsUserLocation: Bool, userTrackingMode: Binding<MapUserTrackingMode>?, annotationItems: Items, annotationContent: (Items.Element) -> Annotation)\nCreates a map that displays a coordinate region with annotations, and optionally configures available interactions, user location, and tracking behavior.\nDeprecated\ninit(mapRect: Binding<MKMapRect>, interactionModes: MapInteractionModes, showsUserLocation: Bool, userTrackingMode: Binding<MapUserTrackingMode>?)\nCreates a map that displays a map rectangle and optionally configures available interactions, user location, and tracking behavior.\nDeprecated\ninit<Items, Annotation>(mapRect: Binding<MKMapRect>, interactionModes: MapInteractionModes, showsUserLocation: Bool, userTrackingMode: Binding<MapUserTrackingMode>?, annotationItems: Items, annotationContent: (Items.Element) -> Annotation)\nCreates a map that displays a map rectangle with annotations, and optionally configures available interactions, user location, and tracking behavior.\nDeprecated\nStructures\nstruct MapAnnotation\nA customizable annotation that marks a map location.\nDeprecated\nstruct MapMarker\nA balloon-shaped annotation used to indicate the location on a map.\nDeprecated\nstruct MapPin\nA pin-shaped annotation used to indicate a location on a map.\nDeprecated\nEnumerations\nenum MapUserTrackingMode\nThe modes available for user tracking.\nDeprecated"
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231684-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies this namespace.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "mapStyle(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231685-mapstyle",
    "html": "Parameters\nvalue\n\nThe MapStyle to apply to the map.\n\nReturn Value\n\nReturns a view styled with the MapStyle you specified."
  },
  {
    "title": "lookAroundViewer(isPresented:initialScene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231677-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a property that determines if the Look Around viewer is visible.\n\ninitialScene\n\nThe Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around view allows a person to navigate to new locations inside the view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around view shows road labels.\n\npointsOfInterest\n\nThe point of interest categories to include or exclude from the Look Around viewer. The default is to include all categories.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nReturn Value\n\nReturns a Look Around viewer with the characteristics you specified.\n\nSee Also\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with a binding to a scene, and navigation, road label, and points of interest characteristics you provide."
  },
  {
    "title": "onMapCameraChange(frequency:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231687-onmapcamerachange",
    "html": "Parameters\nfrequency\n\nA MapCameraUpdateFrequency value that indicates how frequently the framework should perform action during a camera interaction.\n\naction\n\nA closure to run when the camera framing changes.\n\nSee Also\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nUses the keyframes you provide to animate the camera of a map when the value you provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when Map camera framing changes that calls a closure that provides the map camera and the area the camera frames."
  },
  {
    "title": "onMapCameraChange(frequency:_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231686-onmapcamerachange",
    "html": "Parameters\nfrequency\n\nA MapCameraUpdateFrequency value that indicates how frequently the framework should perform action during a camera interaction.\n\naction\n\nA closure to run when the camera framing changes.\n\nThe closure takes a MapCameraUpdateContext parameter that indicates the camera and the framed area.\n\nSee Also\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nUses the keyframes you provide to animate the camera of a map when the value you provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action when Map camera framing changes."
  },
  {
    "title": "mapCameraKeyframeAnimator(trigger:keyframes:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231679-mapcamerakeyframeanimator",
    "html": "Parameters\ntrigger\n\nA value to observe for changes.\n\nkeyframes\n\nA keyframes builder closure the framework calls when starting a new keyframe animation. The framework provides current map camera as the only parameter.\n\nReturn Value\n\nA series of Keyframes.\n\nDiscussion\n\nWhen the trigger value changes, the map calls the keyframes closure to generate the keyframes that animate the camera. The animation continues for the duration of the keyframes that you specify.\n\nIf the user performs a gesture, such as pinch to zoom, while the animation is in progress, the animation is immediately removed, allowing the interaction to take control of the camera.\n\nSee Also\nManaging the camera\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when Map camera framing changes that calls a closure that provides the map camera and the area the camera frames.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action when Map camera framing changes."
  },
  {
    "title": "mapControls(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231681-mapcontrols",
    "html": "Parameters\ncontent\n\nA view builder that returns the controls you select for your Map.\n\nReturn Value\n\nA view with map controls that have standard sizes and positions.\n\nDiscussion\n\nYou provide the controls that you want to appear on top of the map. When using a control with mapControls(_:) you don’t need to specify a scope. MapKit ignores views that aren’t MapKit controls.\n\n    Map()\n        .mapControls {\n            MapScaleView()\n            MapUserLocationButton()\n    }\n\n\nYou can modify controls individually or all at once. MapKit ignores custom frames an alignments set on controls:\n\n    Map()\n        .mapControls {\n            MapCompass()\n                .mapControls(.visible)\n            MapPitchButton()\n                 .buttonBorderShape(.circular)\n                 .tint(.purple)\n         }\n        .controlSize(.large)\n\n\nIn watchOS, space is at a premium. When using the mapControls(_:) modifier, MapKit automatically combines MapUserLocationButton and MapCompass, if present:\n\n    Map()\n    .mapControls {\n        MapUserLocationButton()\n        MapCompass()\n    }\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility."
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231680-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {\n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\n\n\nOther controls don’t have an automatic visibility behavior, so they’ll always be visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "lookAroundViewer(isPresented:scene:allowsNavigation:showsRoadLabels:pointsOfInterest:onDismiss:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231678-lookaroundviewer",
    "html": "Parameters\nisPresented\n\nA binding to a Boolean property that determines if the Look Around viewer is visible.\n\nscene\n\nA binding to a property that determines the Look Around scene to display.\n\nallowsNavigation\n\nA Boolean value that indicates whether the Look Around viewer allows a person to navigate to new locations inside the view.\n\nshowsRoadLabels\n\nA Boolean value that indicates whether the Look Around view shows road labels.\n\npointsOfInterest\n\nThe point of interest categories to include or exclude from the Look Around viewer. The default is to include all categories.\n\nonDismiss\n\nA closure to call when a person dismisses the Look Around viewer.\n\nSee Also\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics you provide."
  },
  {
    "title": "MapCompass.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "mapControlVisibility(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass/4232077-mapcontrolvisibility",
    "html": "Parameters\nvisibility\n\nOne of the Visibility values that controls how modified map controls show or hide.\n\nReturn Value\n\nA view where the map controls have the specified visibility.\n\nDiscussion\n\nMapCompass, MapScaleView, and MapPitchButton may automatically show and hide based on the current state of the map. That may not be appropriate for all cases, where always showing a control may be desirable. The following example shows how to set the state of a collection controls to Visibility.visible:\n\n    HStack {\n        MapCompass()\n        MapScaleView()\n        MapPitchButton()\n    }\n    .mapControlVisibility(.visible)\n\n\n\n\nOther controls don’t have an automatic visibility behavior, so they’re always visible when set to Visibility.automatic. You can hide other controls using this modifier when conditionalizing the view isn’t appropriate, as shown in the following example:\n\n    MapUserLocationButton()\n        .mapControlVisibility(.automatic)\n    MapZoomStepper()\n        .mapControlVisibility(.hidden)\n\n\n\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view."
  },
  {
    "title": "mapScope(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass/4282463-mapscope",
    "html": "Parameters\nscope\n\nA Namespace.ID value that identifies the namespace you use to associate this control with a map instance.\n\nReturn Value\n\nReturns the control with the scope set to the identifier you specified."
  },
  {
    "title": "MapLocationCompass.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "controlSize(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider/4236902-controlsize",
    "html": "Parameters\ncontrolSize\n\nOne of the control sizes specified in the ControlSize enumeration.\n\nReturn Value\n\nReturns the view with the enclosed controls set to the size you specified, or an appropriately sized for the current view.\n\nSee Also\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass/4282305-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "annotationSubtitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235431-annotationsubtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic, which results in the subtitle being visible only when the annotation is in a selected state.\n\nReturn Value\n\nReturns MapContent whose subtitles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations."
  },
  {
    "title": "annotationTitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235384-annotationtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic visibility, which results in the title always being visible.\n\nReturn Value\n\nReturns MapContent whose titles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations."
  },
  {
    "title": "annotationSubtitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235383-annotationsubtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic, which results in the subtitle being visible only when the annotation is in a selected state.\n\nReturn Value\n\nReturns MapContent whose subtitles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations."
  },
  {
    "title": "tint(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235402-tint",
    "html": "Parameters\ntint\n\nThe tint ShapeStyle to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the ShapeStyle you specified."
  },
  {
    "title": "init(anchor:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation/4235435-init",
    "html": "Parameters\nanchor\n\nA UnitPoint value that describes how to anchor the user location indicator to the person’s location. The default is center.\n\ncontent\n\nThe custom view to show at the person’s location.\n\nReturn Value\n\nReturns a UserAnnotation that displays a persons current location using the specified anchor location.\n\nSee Also\nCreating a user annotation\ninit()\nCreates an annotation that displays the person’s current location.\ninit(anchor: UnitPoint)\nCreates an annotation that displays the person’s current location using the system styled user location indicator with the specified anchor point.\ninit(anchor: UnitPoint, content: () -> Content)\nCreate an annotation that displays the person’s current location of the user using a custom view."
  },
  {
    "title": "init(_:image:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235389-init",
    "html": "Parameters\ntitle\n\nThe title of the marker.\n\nimage\n\nThe name of the image resource to use as the marker balloon’s glyph.\n\ncoordinate\n\nThe coordinate used to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "init(_:systemImage:coordinate:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker/4235392-init",
    "html": "Parameters\ntitleKey\n\nThe localized string key to use to lookup the title.\n\nsystemImage\n\nThe name of the system image or SF Symbol to use as the marker balloon’s glyph.\n\ncoordinate\n\nThe coordinate at which to display the marker.\n\nSee Also\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label."
  },
  {
    "title": "init(center:radius:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest/3564412-init",
    "html": "Parameters\ncoordinate\n\nThe center point of a circular region to search.\n\nradius\n\nThe radius of the region to search in meters.\n\nSee Also\nCreating a point of interest request\ninit(coordinateRegion: MKCoordinateRegion)\nCreates a points of interest search request based on existing region."
  },
  {
    "title": "MapInteractionModes | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapinteractionmodes",
    "html": "Overview\n\nA person can’t interact with a map if the option set is empty.\n\nTopics\nDeclared interaction modes\nstatic let all: MapInteractionModes\nThe map allows all interaction modes.\nstatic let pan: MapInteractionModes\nThe map allows a person to pan around to different areas of the map.\nstatic let zoom: MapInteractionModes\nThe map allows people to zoom in or out on map locations.\nstatic let pitch: MapInteractionModes\nThe map allows people to set the map’s pitch to view the map from different angles.\nstatic let rotate: MapInteractionModes\nThe map allows people to rotate the map.\nCreating interaction modes\ninit()\nCreates an empty option set.\ninit<S>(S)\nCreates a new set from a finite sequence of items.\ninit(arrayLiteral: MapInteractionModes...)\nCreates a set containing the elements of the given array literal.\ninit(rawValue: Int)\nCreates a set based on a provided raw value.\ntypealias MapInteractionModes.ArrayLiteralElement\nA type that represents a literal representation of a mode.\ntypealias MapInteractionModes.Element\nA type that represents the values for the modes.\ntypealias MapInteractionModes.RawValue\nA type that map uses to encode the raw values of the kinds of interaction.\nAccessing members\nvar isEmpty: Bool\nA Boolean value that indicates whether the set has no elements.\nlet rawValue: Int\nAn integer representing the combined modes of the set.\nComparing sets of modes\nstatic func != (MapInteractionModes, MapInteractionModes) -> Bool\nIndicates whether two sets of interaction modes are not equal.\nfunc contains(MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether a given element is a member of the option set.\nfunc isDisjoint(with: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set has no members in common with the given set.\nfunc isStrictSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict subset of the given set.\nfunc isStrictSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether this set is a strict superset of the given set.\nfunc isSubset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a subset of another set.\nfunc isSuperset(of: MapInteractionModes) -> Bool\nReturns a Boolean value that indicates whether the set is a superset of the given set.\nUpdating the modes\nfunc update(with: MapInteractionModes) -> MapInteractionModes?\nInserts the given element into the set.\nfunc insert(MapInteractionModes) -> (inserted: Bool, memberAfterInsert: MapInteractionModes)\nAdds the given element to the option set if it is not already a member.\nfunc remove(MapInteractionModes) -> MapInteractionModes?\nRemoves the given element and all elements subsumed by it.\nfunc formSymmetricDifference(MapInteractionModes)\nReplaces this set with a new set containing all elements contained in either this set or the given set, but not in both.\nfunc subtract(MapInteractionModes)\nRemoves the elements of the given set from this set.\nfunc formUnion(MapInteractionModes)\nInserts the elements of another set into this option set.\nfunc formIntersection(MapInteractionModes)\nRemoves all elements of this option set that are not also present in the given set.\nCombining sets of modes\nfunc union(MapInteractionModes) -> MapInteractionModes\nReturns a new option set of the elements contained in this set, in the given set, or in both.\nfunc intersection(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with only the elements contained in both this set and the given set.\nfunc subtracting(MapInteractionModes) -> MapInteractionModes\nReturns a new set containing the elements of this set that do not occur in the given set.\nfunc symmetricDifference(MapInteractionModes) -> MapInteractionModes\nReturns a new option set with the elements contained in this set or in the given set, but not in both.\nRelationships\nConforms To\nOptionSet\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide."
  },
  {
    "title": "init(position:bounds:interactionModes:selection:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231676-init",
    "html": "Parameters\nposition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(position:bounds:interactionModes:selection:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231675-init",
    "html": "Parameters\nposition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(initialPosition:bounds:interactionModes:selection:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231671-init",
    "html": "Parameters\ninitialPosition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(position:bounds:interactionModes:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231672-init",
    "html": "Parameters\nposition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(initialPosition:bounds:interactionModes:selection:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231669-init",
    "html": "Parameters\ninitialPosition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(bounds:interactionModes:selection:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231666-init",
    "html": "Parameters\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(bounds:interactionModes:selection:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231665-init",
    "html": "Parameters\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(initialPosition:bounds:interactionModes:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231668-init",
    "html": "Parameters\ninitialPosition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(bounds:interactionModes:selection:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231664-init",
    "html": "Parameters\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways the user can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "annotationSubtitles(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation/4231033-annotationsubtitles",
    "html": "Parameters\nvisibility\n\nOne of the Visibility settings. The default is Visibility.automatic, which results in the subtitle being visible only when the annotation is in a selected state.\n\nReturn Value\n\nReturns MapContent whose subtitles have the visibility setting you specified.\n\nSee Also\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations."
  },
  {
    "title": "init(_:coordinate:anchor:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation/4231037-init",
    "html": "Parameters\ntitle\n\nThe title of the annotation.\n\ncoordinate\n\nThe coordinate position of the annotation.\n\nanchor\n\nA UnitPoint value that indicates how to position the content around the provided coordinate.\n\ncontent\n\nThe view to place on the map.\n\nSee Also\nCreating annotations\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content)\nCreates an annotation that displays a view at a coordinate on the map.\ninit(coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content, label: () -> Label)\nCreates an annotation that displays a view on the map using coordinates, anchor location, view, and label you provide."
  },
  {
    "title": "init(coordinate:anchor:content:label:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation/4231038-init",
    "html": "Parameters\ncoordinate\n\nThe coordinate position of the annotation.\n\nanchor\n\nHow to place the content around the provided coordinate.\n\ncontent\n\nThe view to place on the map.\n\nlabel\n\nThe label for the annotation, including a title, and optional subtitle.\n\nSee Also\nCreating annotations\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content)\nCreates an annotation that displays a view at a coordinate on the map.\ninit<S>(S, coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content)\nCreates an annotation that displays a view at a coordinate on the map using a title key, coordinate, anchor location, and view you provide."
  },
  {
    "title": "init(_:coordinate:anchor:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation/4231036-init",
    "html": "Parameters\ntitleKey\n\nThe localized string key to use to look up the title.\n\ncoordinate\n\nThe coordinate position of the annotation.\n\nanchor\n\nA UnitPoint value that indicates how to position the content around the provided coordinate.\n\ncontent\n\nThe view to place on the map.\n\nSee Also\nCreating annotations\ninit<S>(S, coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content)\nCreates an annotation that displays a view at a coordinate on the map using a title key, coordinate, anchor location, and view you provide.\ninit(coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content, label: () -> Label)\nCreates an annotation that displays a view on the map using coordinates, anchor location, view, and label you provide."
  },
  {
    "title": "imagery | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/4234786-imagery",
    "html": "Discussion\n\nNote\n\nIn watchOS, depending on rendering calculations, MapKit may render the map using the Standard map style rather than requested Hybrid or Imagery styles.\n\nSee Also\nMap styles\nstatic var hybrid: MapStyle\nA map style that represents a satellite image of the area, including the paths of roads with their names layered on top.\nstatic var standard: MapStyle\nA map style that represents the default map presentation, which is a street map that shows the position of all roads and some road names, depending upon the zoom level of the map."
  },
  {
    "title": "standard | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/4234788-standard",
    "html": "See Also\nMap styles\nstatic var hybrid: MapStyle\nA map style that represents a satellite image of the area, including the paths of roads with their names layered on top.\nstatic var imagery: MapStyle\nA map style that represents a satellite image of the area the map displays."
  },
  {
    "title": "stroke(_:lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231735-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nlineWidth\n\nThe line width to draw the stroke with, in pixels.\n\nReturn Value\n\nReturns MapContent drawn with the ShapeStyle and lineWidth you specified.\n\nSee Also\nStyling the circle\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nSets the line width used for drawing map overlays.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays."
  },
  {
    "title": "init(mapRect:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle/4231733-init",
    "html": "Parameters\nmapRect\n\nThe rectangle to center the circle within.\n\nSee Also\nCreating a map circle\ninit(MKCircle)\nCreates a circle overlay from an existing map circle object.\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates a circle with the center coordinate and radius you specify."
  },
  {
    "title": "stroke(_:style:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233569-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nstyle\n\nThe stroke style to apply.\n\nReturn Value\n\nReturns MapContent with overlays drawn with the ShapeStyle and StrokeStyle you specified.\n\nSee Also\nStyling the polygon\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style to use to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to draw map overlays using the line width you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the stroke style you provide to drawn map overlays.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content."
  },
  {
    "title": "stroke(_:lineWidth:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon/4233568-stroke",
    "html": "Parameters\ncontent\n\nThe shape style to apply.\n\nlineWidth\n\nThe line width to draw the stroke with.\n\nReturn Value\n\nReturns MapContent drawn with the ShapeStyle and lineWidth you specified.\n\nSee Also\nStyling the polygon\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style to use to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the stroke style you provide to drawn map overlays.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content."
  },
  {
    "title": "Map.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "init(request:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/1452759-init",
    "html": "Parameters\nrequest\n\nThe search request information. This parameter can’t be nil.\n\nReturn Value\n\nAn initialized search object.\n\nDiscussion\n\nThis method stores a copy of the object in the request parameter. So, the object ignores any changes you make to your request object after calling this method.\n\nSee Also\nCreating a search request\ninit(request: MKLocalPointsOfInterestRequest)\nCreates and returns a search object for fetching points of interest.\nclass MKLocalSearch.Request\nThe parameters to use when searching for points of interest on the map.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nRelated Documentation\nLocation and Maps Programming Guide"
  },
  {
    "title": "hybrid | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/4234784-hybrid",
    "html": "Discussion\n\nNote\n\nIn watchOS, depending on rendering calculations, MapKit may render the map using the Standard map style rather than requested Hybrid or Imagery styles.\n\nSee Also\nMap styles\nstatic var imagery: MapStyle\nA map style that represents a satellite image of the area the map displays.\nstatic var standard: MapStyle\nA map style that represents the default map presentation, which is a street map that shows the position of all roads and some road names, depending upon the zoom level of the map."
  },
  {
    "title": "init(request:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/3564418-init",
    "html": "Parameters\nrequest\n\nThe search parameters to fetch points of interest.\n\nSee Also\nCreating a search request\ninit(request: MKLocalSearch.Request)\nCreates and returns a search object with the specified parameters.\nclass MKLocalSearch.Request\nThe parameters to use when searching for points of interest on the map.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "MapStyle.StandardEmphasis | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/standardemphasis",
    "html": "Topics\nControlling the map’s emphasis\nstatic var automatic: MapStyle.StandardEmphasis\nThe default level of emphasis.\nstatic var muted: MapStyle.StandardEmphasis\nA muted emphasis style, that deemphasizes the map’s imagery.\nSee Also\nCreating map styles\nstatic func hybrid(elevation: MapStyle.Elevation, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a hybrid map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstatic func imagery(elevation: MapStyle.Elevation) -> MapStyle\nCreates a map style based on satellite imagery with the elevation characteristics you specify.\nstatic func standard(elevation: MapStyle.Elevation, emphasis: MapStyle.StandardEmphasis, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a standard map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstruct MapStyle.Elevation\nValues you use to determine whether a map renders elevation."
  },
  {
    "title": "standard(elevation:emphasis:pointsOfInterest:showsTraffic:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/4234789-standard",
    "html": "Parameters\nelevation\n\nOne of the MapStyle.Elevation values that determines whether the framework renders map elevation.\n\nemphasis\n\nOne of the MapStyle.StandardEmphasis values that controls how the framework emphasizes map features.\n\npointsOfInterest\n\nA collection of PointOfInterestCategories displayed on the map.\n\nshowsTraffic\n\nA Boolean value that indicates whether the map displays traffic.\n\nReturn Value\n\nA MapStyle with the configuration you specified.\n\nSee Also\nCreating map styles\nstatic func hybrid(elevation: MapStyle.Elevation, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a hybrid map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstatic func imagery(elevation: MapStyle.Elevation) -> MapStyle\nCreates a map style based on satellite imagery with the elevation characteristics you specify.\nstruct MapStyle.Elevation\nValues you use to determine whether a map renders elevation.\nstruct MapStyle.StandardEmphasis\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "MapStyle.Elevation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/elevation",
    "html": "Topics\nElevation styles\nstatic var automatic: MapStyle.Elevation\nThe default elevation style, that renders a flat, 2D map.\nstatic var flat: MapStyle.Elevation\nA value that renders a flat, 2D map.\nstatic var realistic: MapStyle.Elevation\nA value that renders a realistic, 3D map.\nSee Also\nCreating map styles\nstatic func hybrid(elevation: MapStyle.Elevation, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a hybrid map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstatic func imagery(elevation: MapStyle.Elevation) -> MapStyle\nCreates a map style based on satellite imagery with the elevation characteristics you specify.\nstatic func standard(elevation: MapStyle.Elevation, emphasis: MapStyle.StandardEmphasis, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a standard map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstruct MapStyle.StandardEmphasis\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "MKLocalSearch.Request | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/request",
    "html": "Overview\n\nYou create an MKLocalSearch.Request object when you want to search for map locations based on a natural language string. For example, if your interface allows the user to type in addresses, place the typed text in this object and pass it to an MKLocalSearch object to begin the search process. When specifying your search strings, include a map region to narrow the search results to the specified geographical area.\n\nWhen creating an MKLocalSearch.Request object yourself, set the naturalLanguageQuery property to an appropriate search string, as in the following example:\n\nlet searchRequest = MKLocalSearch.Request()\nsearchRequest.naturalLanguageQuery = \"coffee\"\n\n\n// Set the region to an associated map view's region.\nsearchRequest.region = myMapView.region\n\n\nlet search = MKLocalSearch(request: searchRequest)\nsearch.start { (response, error) in\n    guard let response = response else {\n        // Handle the error.\n    }\n    \n    for item in response.mapItems {\n        if let name = item.name,\n            let location = item.placemark.location {\n            print(\"\\(name): \\(location.coordinate.latitude),\\(location.coordinate.longitude)\")\n        }\n    }\n}\n\n\nIf your app uses an MKLocalSearchCompleter object to implement autocomplete support for user-supplied search strings, initialize your search request using the search completion that the user selects. In that case, use the init(completion:) method instead of the init() method to initialize your search request object. The completion object automatically provides the value for the naturalLanguageQuery property.\n\nTopics\nCreating a local search request\ninit()\nCreates a local search request.\ninit(completion: MKLocalSearchCompletion)\nCreates and returns a search request based on the specified search completion data.\nConfiguring the search parameters\nvar naturalLanguageQuery: String?\nA string containing the desired search item.\nvar region: MKCoordinateRegion\nA map region that provides a hint as to where to search.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point-of-interest categories to include or exclude in search results.\nvar resultTypes: MKLocalSearch.ResultType\nThe types of items to include in the search results.\ntypealias MKLocalSearch.Request.ResultType\nOptions that indicate types of search results.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nCreating a search request\ninit(request: MKLocalSearch.Request)\nCreates and returns a search object with the specified parameters.\ninit(request: MKLocalPointsOfInterestRequest)\nCreates and returns a search object for fetching points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results."
  },
  {
    "title": "init(coordinateRegion:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest/3564413-init",
    "html": "Parameters\nregion\n\nThe region to search.\n\nSee Also\nCreating a point of interest request\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates a points of interest search request centered on the provided coordinate with the provided radius."
  },
  {
    "title": "imagery(elevation:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/4234787-imagery",
    "html": "Parameters\nelevation\n\nOne of the MapStyle.Elevation values that determines how the map renders elevation.\n\nReturn Value\n\nA MapStyle with the elevation style you specified.\n\nDiscussion\n\nNote\n\nIn watchOS, depending on rendering calculations, MapKit may render the map using the Standard map style rather than requested Hybrid or Imagery styles.\n\nSee Also\nCreating map styles\nstatic func hybrid(elevation: MapStyle.Elevation, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a hybrid map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstatic func standard(elevation: MapStyle.Elevation, emphasis: MapStyle.StandardEmphasis, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a standard map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstruct MapStyle.Elevation\nValues you use to determine whether a map renders elevation.\nstruct MapStyle.StandardEmphasis\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "hybrid(elevation:pointsOfInterest:showsTraffic:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle/4234785-hybrid",
    "html": "Parameters\nelevation\n\nOne of the MapStyle.Elevation values that determines whether the map renders elevation.\n\npointsOfInterest\n\nA collection of PointOfInterestCategories that the map displays.\n\nshowsTraffic\n\nA Boolean value that indicates whether the map displays traffic.\n\nReturn Value\n\nA MapStyle with the configuration you specified.\n\nDiscussion\n\nNote\n\nIn watchOS, depending on rendering calculations, MapKit may render the map using the Standard map style rather than requested Hybrid or Imagery styles.\n\nSee Also\nCreating map styles\nstatic func imagery(elevation: MapStyle.Elevation) -> MapStyle\nCreates a map style based on satellite imagery with the elevation characteristics you specify.\nstatic func standard(elevation: MapStyle.Elevation, emphasis: MapStyle.StandardEmphasis, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a standard map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstruct MapStyle.Elevation\nValues you use to determine whether a map renders elevation.\nstruct MapStyle.StandardEmphasis\nValues that control how the framework emphasizes map features."
  },
  {
    "title": "region | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest/3564416-region",
    "html": "See Also\nConfiguring the request parameters\nvar coordinate: CLLocationCoordinate2D\nThe center of the point of request as latitude and longitude.\nvar radius: CLLocationDistance\nThe distance provided in meters or the longest distance derived from the center point to the region’s bounding box.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists points of interest categories to include or exclude."
  },
  {
    "title": "coordinate | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest/3564411-coordinate",
    "html": "See Also\nConfiguring the request parameters\nvar region: MKCoordinateRegion\nThe region of the bounding box of the request provided or the derived bounding box of the circle created by the radius.\nvar radius: CLLocationDistance\nThe distance provided in meters or the longest distance derived from the center point to the region’s bounding box.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists points of interest categories to include or exclude."
  },
  {
    "title": "init(rawValue:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/resulttype/3143824-init",
    "html": "Parameters\nrawValue\n\nAn unsigned integer that represents the type of the requested search result."
  },
  {
    "title": "radius | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest/3564415-radius",
    "html": "See Also\nConfiguring the request parameters\nvar region: MKCoordinateRegion\nThe region of the bounding box of the request provided or the derived bounding box of the circle created by the radius.\nvar coordinate: CLLocationCoordinate2D\nThe center of the point of request as latitude and longitude.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists points of interest categories to include or exclude."
  },
  {
    "title": "address | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/resulttype/3143413-address",
    "html": "See Also\nSpecifying types of search results\nstatic var pointOfInterest: MKLocalSearch.ResultType\nA value that indicates that search results include points of interest."
  },
  {
    "title": "pointOfInterest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/resulttype/3143414-pointofinterest",
    "html": "See Also\nSpecifying types of search results\nstatic var address: MKLocalSearch.ResultType\nA value that indicates that search results include addresses."
  },
  {
    "title": "MKLocalSearch.Response | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/response",
    "html": "Overview\n\nYou don’t create instances of this class directly. After initiating a map search using an MKLocalSearch object, MapKit passes an instance of this class to your completion handler.\n\nTopics\nGetting the search results\nvar mapItems: [MKMapItem]\nAn array of map items representing the search results.\nvar boundingRegion: MKCoordinateRegion\nThe map region that encloses the returned search results.\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "start(completionHandler:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/1452652-start",
    "html": "Parameters\ncompletionHandler\n\nThe completion handler block that processes the results. This parameter can’t be nil.\n\nDiscussion\n\nConcurrency Note\n\nYou can call this method from synchronous code using a completion handler, as shown on this page, or you can call it as an asynchronous method that has the following declaration:\n\nfunc start() async throws -> MKLocalSearch.Response\n\n\nFor information about concurrency and asynchronous code in Swift, see Calling Objective-C APIs Asynchronously.\n\nYou use this method to initiate a map-based search operation. The search runs until the framework delivers the results, at which point the framework calls the specified completion handler.\n\nCall this method only once to start the search operation. Calling this method while the search is running doesn’t stop the original search operation from finishing. However, for each subsequent call, the search object executes your completion handler and passes an error object to it.\n\nThe provided completion handler executes on your app’s main thread. The local search object keeps a reference to the completion handler block until the search object delivers the results (or an error), at which point, it relinquishes that reference.\n\nSee Also\nPerforming the search\ntypealias MKLocalSearch.CompletionHandler\nA completion handler block for a search operation.\nvar isSearching: Bool\nA Boolean value that indicates whether the search is in progress.\nfunc cancel()\nCancels an in-progress search operation."
  },
  {
    "title": "init(mapView:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkusertrackingbutton/2867281-init",
    "html": "Parameters\nmapView\n\nThe mapView to associate with the button. Taps on the button change the appearance of this map view.\n\nReturn Value\n\nAn initialized MKUserTrackingButton object."
  },
  {
    "title": "mapFeatureSelectionDisabled(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231683-mapfeatureselectiondisabled",
    "html": "Parameters\nselectionDisabled\n\nDetermines if MapKit disables selection for a given map feature.\n\nReturn Value\n\nReturns a Boolean value that indicates whether the feature is in a disabled state.\n\nSee Also\nManaging feature selection\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nSpecifies a custom presentation for the currently selected feature."
  },
  {
    "title": "mapFeatureSelectionContent(content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231682-mapfeatureselectioncontent",
    "html": "Parameters\ncontent\n\nGenerates the custom presentation for a given map feature.\n\nReturn Value\n\nReturns customized Annotation or Marker content\n\nDiscussion\n\nThe supported presentation options are Annotation and Marker. The framework ignores other types of map content and handles the result as though the method returned no content.\n\nIf the method returns empty map content, MapKit uses the system presentation.\n\nSee Also\nManaging feature selection\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nSpecifies which map features should have selection disabled."
  },
  {
    "title": "init(position:bounds:interactionModes:selection:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231674-init",
    "html": "Parameters\nposition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/3593217-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "init(position:bounds:interactionModes:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231673-init",
    "html": "Parameters\nposition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(initialPosition:bounds:interactionModes:selection:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231670-init",
    "html": "Parameters\ninitialPosition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nselection\n\nA binding to a MapFeature that represents a person’s selection.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(initialPosition:bounds:interactionModes:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231667-init",
    "html": "Parameters\ninitialPosition\n\nThe initial MapCameraPosition.\n\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(bounds:interactionModes:scope:content:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231662-init",
    "html": "Parameters\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nscope\n\nThe map’s Namespace.ID.\n\ncontent\n\nA MapContent content builder that supplies the map’s content.\n\nSee Also\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "init(bounds:interactionModes:scope:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map/4231661-init",
    "html": "Parameters\nbounds\n\nThe MapCameraBounds that define the camera’s view of the map.\n\ninteractionModes\n\nThe MapInteractionModes that describe ways a person can interact with the map.\n\nscope\n\nThe map’s Namespace.ID.\n\nSee Also\nCreating a map\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to."
  },
  {
    "title": "tag(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation/4231044-tag",
    "html": "Parameters\ntag\n\nA Hashable value to use as the map content’s tag.\n\nReturn Value\n\nReturns MapContent with the tag set to value you specified."
  },
  {
    "title": "pointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest/3564414-pointofinterestfilter",
    "html": "See Also\nConfiguring the request parameters\nvar region: MKCoordinateRegion\nThe region of the bounding box of the request provided or the derived bounding box of the circle created by the radius.\nvar coordinate: CLLocationCoordinate2D\nThe center of the point of request as latitude and longitude.\nvar radius: CLLocationDistance\nThe distance provided in meters or the longest distance derived from the center point to the region’s bounding box."
  },
  {
    "title": "isSearching | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/1452349-issearching",
    "html": "Discussion\n\nThe search object sets the value of this property to true when you initiate a search. It remains in that state until the search object delivers search results (or an appropriate error), at which time the search object sets the value of the property to false.\n\nSee Also\nPerforming the search\nfunc start(completionHandler: MKLocalSearch.CompletionHandler)\nStarts the search and delivers the results to the specified completion handler.\ntypealias MKLocalSearch.CompletionHandler\nA completion handler block for a search operation.\nfunc cancel()\nCancels an in-progress search operation."
  },
  {
    "title": "cancel() | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/1452160-cancel",
    "html": "Discussion\n\nIf no search operation is in progress, this method does nothing.\n\nSee Also\nPerforming the search\nfunc start(completionHandler: MKLocalSearch.CompletionHandler)\nStarts the search and delivers the results to the specified completion handler.\ntypealias MKLocalSearch.CompletionHandler\nA completion handler block for a search operation.\nvar isSearching: Bool\nA Boolean value that indicates whether the search is in progress."
  },
  {
    "title": "MKLocalSearch.CompletionHandler | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/completionhandler",
    "html": "Discussion\n\nThis block takes two parameters:\n\nThe response parameter contains the search results. If an error occurs, this parameter is nil and the framework provides an appropriate error object in the error parameter.\n\nThe error parameter is nil if the search is successful. If an error occurs during the operation, the framework sets this parameter to an appropriate error object.\n\nThis block has no return value.\n\nSee Also\nPerforming the search\nfunc start(completionHandler: MKLocalSearch.CompletionHandler)\nStarts the search and delivers the results to the specified completion handler.\nvar isSearching: Bool\nA Boolean value that indicates whether the search is in progress.\nfunc cancel()\nCancels an in-progress search operation."
  },
  {
    "title": "Deprecated Symbols | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/deprecated_symbols",
    "html": "Topics\nClasses\nclass MKCircleView\nProvides the visual representation for an MKCircle annotation object.\nDeprecated\nclass MKOverlayView\nDefines the basic behavior associated with all overlay views.\nDeprecated\nclass MKOverlayPathView\nRepresents a generic overlay that draws its contents using a CGPath data type.\nDeprecated\nclass MKPolygonView\nProvides the visual representation for an MKPolygon annotation object.\nDeprecated\nclass MKPolylineView\nProvides the visual representation for an MKPolyline annotation object.\nDeprecated\nclass MKPinAnnotationView\nAn annotation view that displays a pin image on the map.\nDeprecated\nProperties\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nvar pinColor: MKPinAnnotationColor\nThe color of the pin head.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar mapType: MKMapType\nThe map’s visual style.\nDeprecated\nMethods\nfunc view(for: MKOverlay) -> MKOverlayView\nReturns the view associated with the overlay object, if any.\nDeprecated\nfunc mapView(MKMapView, didAddOverlayViews: [Any])\nTells the delegate when the map adds one or more overlay views to the map.\nDeprecated\nfunc mapView(MKMapView, viewFor: MKOverlay) -> MKOverlayView\nAsks the delegate for the overlay view to use when displaying the specified overlay object.\nDeprecated\nStructures\nstruct MapPin\nA pin-shaped annotation used to indicate a location on a map.\nDeprecated\nEnumerations\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nenum MKMapType\nThe type of map to display.\nenum MKPinAnnotationColor\nThe supported colors for pin annotations.\nDeprecated\nEntitlements\nMaps Entitlement\nA Boolean value that indicates whether the app may provide directions beyond what Maps supports, such as subway routes, hiking trails, and bike paths.\nKey: com.apple.developer.maps\nDeprecated"
  },
  {
    "title": "MKLookAroundViewController | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundviewcontroller",
    "html": "Topics\nCreating a LookAround controller\ninit?(coder: NSCoder)\nCreates a new LookAround view controller object from a coder object provided by a storyboard or nib file.\ninit(nibName: String?, bundle: Bundle?)\nCreates a new LookAround view controller from the specified nib and bundle.\ninit(scene: MKLookAroundScene)\nCreates a new LookAround view controller with the specified scene.\nCustomizing the LookAround display\nvar isNavigationEnabled: Bool\nA Boolean value that indicates whether the map’s navigation controls are visible.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter used to determine the points of interest shown on the map.\nvar showsRoadLabels: Bool\nA Boolean value that indicates whether the map display road labels.\nvar badgePosition: MKLookAroundBadgePosition\nA value that indicates the badge’s position on the LookAround view.\nenum MKLookAroundBadgePosition\nConstants that control the position of badges on LookAround views.\nInteracting with the controller\nvar delegate: MKLookAroundViewControllerDelegate?\nAn object you provide to receive events related to the user’s interaction with the LookAround view controller.\nprotocol MKLookAroundViewControllerDelegate\nMethods you implement to respond to changes in the LookAround view controller.\nAccessing the scene\nvar scene: MKLookAroundScene?\nThe LookAround scene.\nRelationships\nInherits From\nNSViewController\nUIViewController\nConforms To\nNSCoding\nNSSecureCoding\nSee Also\nExploring at street level\nExplore a location with a highly detailed map and Look Around\nDisplay a richly detailed map, and use Look Around to experience an interactive view of landmarks.\nclass MKLookAroundScene\nA utility class that encapsulates information the framework requires to retrieve and display a specific Look Around location’s imagery.\nclass MKLookAroundSceneRequest\nA class you use to request a LookAround scene at the location you specify.\nclass MKLookAroundSnapshotter\nA utility class that you use to create a static image from a LookAround scene."
  },
  {
    "title": "Interacting with nearby points of interest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/interacting_with_nearby_points_of_interest",
    "html": "Overview\n\nThe PointsOfInterest sample code project demonstrates how to programmatically search for map-based addresses and points of interest using a natural language string, and get more information for points of interest that the user selects on the map. The search results center around the user’s current location.\n\nRequest search completions\n\nMKLocalSearchCompleter retrieves autocomplete suggestions for a partial search query within a map region. A user can type “cof,” and a search completion suggests “coffee” as the query string. As the user types a query into a search bar, the sample app updates the queryFragment through the UISearchResultsUpdating protocol.\n\nfunc updateSearchResults(for searchController: UISearchController) {\n    // Ask `MKLocalSearchCompleter` for new completion suggestions based on the change in the text that the user enters in `UISearchBar`.\n    searchCompleter?.queryFragment = searchController.searchBar.text ?? \"\"\n}\n\n\nReceive completion results\n\nCompletion results represent fully formed query strings based on the query fragment the user types. The sample app uses completion results to populate UI elements, such as a table view, to quickly fill in a search query. The app receives the latest completion results as an array of MKLocalSearchCompletion objects by adopting the MKLocalSearchCompleterDelegate protocol.\n\nfunc completerDidUpdateResults(_ completer: MKLocalSearchCompleter) {\n    // As the user types, new completion suggestions continuously return to this method.\n    // Refresh the UI with the new results.\n    let results = completer.results.map { result in\n        return Row(searchCompletion: result)\n    }\n    updateCollectionViewSnapshot(results)\n}\n\n\nfunc completer(_ completer: MKLocalSearchCompleter, didFailWithError error: Error) {\n    // Handle any errors that `MKLocalSearchCompleter` returns.\n    if let error = error as NSError? {\n        print(\"MKLocalSearchCompleter encountered an error: \\(error.localizedDescription). The query fragment is: \\\"\\(completer.queryFragment)\\\"\")\n    }\n}\n\n\nHighlight the relationship of a query fragment to the suggestion\n\nWithin the UI elements that represent each query result, the sample code uses the titleHighlightRanges and subtitleHighlightRanges on an MKLocalSearchCompletion to show how the query the user enters relates to the suggested result. For example, the following code applies a highlight with NSAttributedString:\n\noverride func configureResultCell(_ cell: UICollectionViewCell, indexPath: IndexPath, item: Row) {\n    var content = UIListContentConfiguration.subtitleCell()\n\n\n    if let suggestion = item.searchCompletion {\n        // Each suggestion is an `MKLocalSearchCompletion` with a title, subtitle, and ranges that describe what part of the title\n        // and subtitle match the current query string. Use the ranges to apply helpful highlighting of the text in\n        // the completion suggestion that matches the current query fragment.\n        content.attributedText = createHighlightedString(text: suggestion.title, rangeValues: suggestion.titleHighlightRanges)\n        content.secondaryAttributedText = createHighlightedString(text: suggestion.subtitle, rangeValues: suggestion.subtitleHighlightRanges)\n    }\n\n\n    cell.contentConfiguration = content\n}\n\n\nprivate func createHighlightedString(text: String, rangeValues: [NSValue]) -> NSAttributedString {\n    let attributes = [NSAttributedString.Key.backgroundColor: UIColor(named: \"suggestionHighlight\")! ]\n    let highlightedString = NSMutableAttributedString(string: text)\n\n\n    // Each `NSValue` wraps an `NSRange` that functions as a style attribute's range with `NSAttributedString`.\n    let ranges = rangeValues.map { $0.rangeValue }\n    ranges.forEach { (range) in\n        highlightedString.addAttributes(attributes, range: range)\n    }\n\n\n    return highlightedString\n}\n\n\nSearch for map items\n\nAn MKLocalSearch.Request takes either an MKLocalSearchCompletion or a natural language query string, and returns an array of MKMapItem objects. Each MKMapItem represents a geographic location, like a specific address, that matches the search query. The sample code asynchronously retrieves the array of MKMapItem objects by calling start(completionHandler:) on MKLocalSearch.\n\nprivate func search(using searchRequest: MKLocalSearch.Request) {\n    // Confine the map search area to an area around the user's current location.\n    searchRequest.region = searchRegion\n    \n    // Include only point-of-interest results. This excludes results based on address matches.\n    searchRequest.resultTypes = .pointOfInterest\n    \n    localSearch = MKLocalSearch(request: searchRequest)\n    localSearch?.start { [unowned self] (response, error) in\n        guard error == nil else {\n            self.displaySearchError(error)\n            return\n        }\n        \n        self.places = response?.mapItems\n        \n        // This view controller sets the map view's region in `prepareForSegue` based on the search response's bounding region.\n        if let updatedRegion = response?.boundingRegion {\n            self.searchRegion = updatedRegion\n        }\n    }\n}\n\n\nAllow the user to select points of interest on the map\n\nIf a user is exploring the map, they can get information on a point of interest by tapping it. To enable these interactions, the sample code enables selectable map features as follows:\n\nmapView.selectableMapFeatures = [.pointsOfInterest]\n\n\n// Filter out any points of interest that aren't related to travel.\nlet mapConfiguration = MKStandardMapConfiguration()\nmapConfiguration.pointOfInterestFilter = MKPointOfInterestFilter(including: MKPointOfInterestCategory.travelPointsOfInterest)\n\n\nmapView.preferredConfiguration = mapConfiguration\n\n\nWhen the user taps a point of interest, the system calls mapView(_:viewFor:) on the MKMapViewDelegate with an MKMapFeatureAnnotation that represents the tapped item. The annotation is customizable using the MKIconStyle property of MKFeatureAnnotation.\n\nif let tappedFeatureColor = annotation.iconStyle?.backgroundColor,\n    let image = annotation.iconStyle?.image {\n    \n    markerAnnotationView.markerTintColor = tappedFeatureColor\n    infoButton.tintColor = tappedFeatureColor\n    \n    let imageView = UIImageView(image: image.withTintColor(tappedFeatureColor, renderingMode: .alwaysOriginal))\n    imageView.bounds = CGRect(origin: .zero, size: CGSize(width: 50, height: 50))\n    markerAnnotationView.leftCalloutAccessoryView = imageView\n}\n\n\nTo get detailed information on the point of interest, like when searching for the destination with MKLocalSearch, the sample code turns the MKFeatureAnnotation into an MKMapItem by using MKMapItemRequest.\n\nlet request = MKMapItemRequest(mapFeatureAnnotation: featureAnnotation)\nrequest.getMapItem { mapItem, error in\n    guard error == nil else {\n        self.displayError(error)\n        return\n    }\n    \n    if let mapItem {\n        // Pass the selected map item and the bounding region to the location details view controller,\n        // with the map centered on the placemark.\n        var region = self.mapView.region\n        region.center = mapItem.placemark.coordinate\n        detailViewController.display(mapItem, in: region)\n    }\n}\n\n\nSee Also\nLocal search\nclass MKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nclass MKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nclass MKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions.\nclass MKLocalSearchCompletion\nA fully formed string that completes a partial string."
  },
  {
    "title": "Explore a location with a highly detailed map and Look Around | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/explore_a_location_with_a_highly_detailed_map_and_look_around",
    "html": "Overview\n\nThis sample code project takes the user on a tour of landmarks in San Francisco, using MapKit to do the following:\n\nShow a highly detailed map, including trees, realistic elevation, and detailed building renderings for landmark locations\n\nNavigate between landmarks, with the navigation route following the elevation of the roads and blending with landscape features\n\nAnimate the map between landmarks\n\nDisplay the landmark using an interactive MKLookAroundViewController, as well as a snapshot of the landmark with MKLookAroundSnapshotter\n\nNote\n\nThis sample code project is associated with WWDC22 session 10035: What’s new in MapKit.\n\nSee Also\nExploring at street level\nclass MKLookAroundScene\nA utility class that encapsulates information the framework requires to retrieve and display a specific Look Around location’s imagery.\nclass MKLookAroundSceneRequest\nA class you use to request a LookAround scene at the location you specify.\nclass MKLookAroundViewController\nA class that manages the presentation and display of a LookAround view.\nclass MKLookAroundSnapshotter\nA utility class that you use to create a static image from a LookAround scene."
  },
  {
    "title": "MKMapCamera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapcamera",
    "html": "Overview\n\nA camera object defines a virtual viewpoint above the map surface and affects how MapKit presents the map to the user. You use a camera object to specify the location of the camera on the map, the compass heading indicating the camera’s viewing direction, the pitch of the camera relative to the map perpendicular, and the camera’s altitude above the map. These factors create a map view with a three-dimensional perspective.\n\nAfter creating an instance of this class, configure it with the desired attributes and assign it to your map view. When you assign a camera to your map view, MapKit centers the map using the value in your camera object’s centerCoordinate property, updating the map’s own region information in the process. The map also takes the camera’s pitch and altitude into account when calculating the visible region, ensuring that the region encompasses the visible content on the map.\n\nTopics\nGetting a camera object\ninit(lookingAtCenter: CLLocationCoordinate2D, fromEyeCoordinate: CLLocationCoordinate2D, eyeAltitude: CLLocationDistance)\nReturns a new camera object using the specified viewing angle information.\ninit(lookingAtCenter: CLLocationCoordinate2D, fromDistance: CLLocationDistance, pitch: CGFloat, heading: CLLocationDirection)\nReturns a new camera object using the specified distance, pitch, and heading information.\ninit(lookingAt: MKMapItem, forViewSize: CGSize, allowPitch: Bool)\nReturns a new camera object using the specified map item, view size, and pitch.\nConfiguring the viewing angle\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar heading: CLLocationDirection\nThe heading of the camera (in degrees) relative to true north.\nvar centerCoordinateDistance: CLLocationDistance\nThe distance from the center point of the map to the camera, in meters.\nvar pitch: CGFloat\nThe viewing angle of the camera, in degrees.\nvar altitude: CLLocationDistance\nThe altitude above the ground, in meters.\nDeprecated\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nMap customization\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MKCompassButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcompassbutton",
    "html": "Overview\n\nUse this class when you want to incorporate a standard compass button into your own view hierarchy. A compass button reflects the current orientation of its associated map view. Tapping the compass button reorients the map so that due north is at the top of the map view.\n\nTopics\nCreating a compass button\ninit(mapView: MKMapView?)\nCreates a compass button and associates it with the specified map view.\nGetting the compass attributes\nvar mapView: MKMapView?\nThe map view that provides the heading information for the compass button.\nvar compassVisibility: MKFeatureVisibility\nThe visibility of the compass button.\nenum MKFeatureVisibility\nConstants that indicate the visibility of different map features.\nRelationships\nInherits From\nNSView\nUIView\nSee Also\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MKCoordinateSpan | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinatespan",
    "html": "Overview\n\nYou use the delta values in this structure to indicate the desired zoom level of the map, with smaller delta values corresponding to a higher zoom level.\n\nTopics\nCreating a coordinate span\ninit()\nCreates a coordinate span that represents a width and height on a map.\ninit(latitudeDelta: CLLocationDegrees, longitudeDelta: CLLocationDegrees)\nCreates a new MKCoordinateSpan from the specified values.\nGetting the span coordinates\nvar latitudeDelta: CLLocationDegrees\nThe amount of north-to-south distance (measured in degrees) to display on the map.\nvar longitudeDelta: CLLocationDegrees\nThe amount of east-to-west distance (measured in degrees) to display for the map region.\nSee Also\nMap coordinates\nstruct MKCoordinateRegion\nA rectangular geographic region that centers around a specific latitude and longitude.\nstruct MKMapRect\nA rectangular area on a two-dimensional map projection.\nstruct MKMapPoint\nA point on a two-dimensional map projection.\nstruct MKMapSize\nWidth and height information on a two-dimensional map projection.\nclass MKDistanceFormatter\nA utility object that converts between a geographic distance and a string-based expression of that distance."
  },
  {
    "title": "PointOfInterestCategories | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/pointofinterestcategories",
    "html": "Topics\nCreating point of interest categories\ninit(arrayLiteral: MKPointOfInterestCategory...)\nCreates a point of interest category with the list of specific categories you provide.\nCategories to include or exclude\nstatic var all: PointOfInterestCategories\nA list of all points of interest categories, both included and excluded.\nstatic var excludingAll: PointOfInterestCategories\nA list of point of interest categories to exclude from display on the map.\nModifying the categories to include or exclude\nstatic func excluding([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the array you provide.\nstatic func excluding(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow all points of interest except those belonging to certain categories using the list you provide.\nstatic func including([MKPointOfInterestCategory]) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided array.\nstatic func including(MKPointOfInterestCategory...) -> PointOfInterestCategories\nShow only points of interest belonging to certain categories from the provided list.\nType aliases\ntypealias PointOfInterestCategories.ArrayLiteralElement\nThe type that represents a specific point of interest category.\nRelationships\nConforms To\nExpressibleByArrayLiteral"
  },
  {
    "title": "MapPolyline | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolyline",
    "html": "Overview\n\nUse this view to create map polylines instances in the closure you provide to the content parameter in the Map initializers.\n\nTopics\nCreating a polyline\ninit(MKPolyline)\nCreates a polyline from polyline you provide.\ninit(MKRoute)\nCreates a polyline that traces the route you provide.\ninit(coordinates: [CLLocationCoordinate2D], contourStyle: MapPolyline.ContourStyle)\nCreates a polyline that traces a path between the given coordinates using the specifed contour style.\ninit(points: [MKMapPoint], contourStyle: MapPolyline.ContourStyle)\nCreates a new polyline that traces a path between the provided points using the specifed contour style.\nStyling the polyline\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays.\nstruct MapPolyline.ContourStyle\nValues that define how MapKit styles lines to represent the contour of the Earth.\nSetting the overlay level\nfunc mapOverlayLevel(level: MKOverlayLevel) -> MapContent\nSpecifies the position of overlays relative to other map content.\nType aliases\ntypealias MapPolyline.Body\nThe type of view that represents the body of this view.\nRelationships\nConforms To\nMapContent\nSee Also\nAnnotations and overlays\nstruct Annotation\nA customizable annotation used to indicate a location on a map.\nstruct MapCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nstruct MapPolygon\nA closed polygon overlay.\nstruct Marker\nA balloon-shaped annotation that marks a map location.\nstruct UserAnnotation\nDisplays the person’s current location on the map."
  },
  {
    "title": "body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapselectablecontentview/4292775-body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "MapSelectableContentView.Body | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapselectablecontentview/body",
    "html": "Relationships\nFrom Protocol\nView"
  },
  {
    "title": "MKErrorDomain | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerrordomain",
    "html": "See Also\nErrors\nstruct MKError\nError constants for the MapKit framework."
  },
  {
    "title": "MKMapSnapshotter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter",
    "html": "Overview\n\nUse an MKMapSnapshotter object when you want to capture the system-provided map content, including the map tiles and imagery. The snapshotter object captures the best image possible by loading all of the available map tiles before capturing the image.\n\nConfigure a snapshotter object using an MKMapSnapshotter.Options object. The snapshot options specify the appearance of the map, including which portion of the map the snapshotter captures.\n\nNote\n\nSnapshotter objects don’t capture the visual representations of any overlays or annotations that your app creates. If you want those items to appear in the final snapshot, you must draw them on the resulting snapshot image. For more information about drawing custom content on map snapshots, see MKMapSnapshotter.Snapshot.\n\nTopics\nCreating a snapshotter object\ninit(options: MKMapSnapshotter.Options)\nCreates and returns a snapshotter object based on the specified options.\nclass MKMapSnapshotter.Options\nThe options the snapshotter initializer uses to create a snapshotter to capture map-based imagery.\nGenerating a snapshot\nfunc start(completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and delivers the results to the specified block.\nfunc start(with: dispatch_queue_t, completionHandler: MKMapSnapshotter.CompletionHandler)\nSubmits the request to create a snapshot and executes the resulting block on the specified queue.\ntypealias MKMapSnapshotter.CompletionHandler\nA block that processes the results of a snapshot request.\nfunc cancel()\nCancels the request to create a snapshot.\nvar isLoading: Bool\nA Boolean value that indicates whether the snapshotter is generating an image.\nSnapshot output\nclass MKMapSnapshotter.Snapshot\nAn image that a snapshotter object generates.\nRelationships\nInherits From\nNSObject\nSee Also\nStatic map snapshots\nclass MKMapSnapshotter.Snapshot\nAn image that a snapshotter object generates."
  },
  {
    "title": "MKPointOfInterestCategory | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestcategory",
    "html": "Topics\nPoint of interest categories\nstatic let airport: MKPointOfInterestCategory\nThe point of interest category for airports.\nstatic let amusementPark: MKPointOfInterestCategory\nThe point of interest category for amusement parks.\nstatic let aquarium: MKPointOfInterestCategory\nThe point of interest category for aquariums.\nstatic let atm: MKPointOfInterestCategory\nThe point of interest category for ATM machines.\nstatic let bakery: MKPointOfInterestCategory\nThe point of interest category for bakeries.\nstatic let bank: MKPointOfInterestCategory\nThe point of interest category for banks.\nstatic let beach: MKPointOfInterestCategory\nThe point of interest category for beaches.\nstatic let brewery: MKPointOfInterestCategory\nThe point of interest category for breweries.\nstatic let cafe: MKPointOfInterestCategory\nThe point of interest category for cafes.\nstatic let campground: MKPointOfInterestCategory\nThe point of interest category for campgrounds.\nstatic let carRental: MKPointOfInterestCategory\nThe point of interest category for car rentals.\nstatic let evCharger: MKPointOfInterestCategory\nThe point of interest category for EV chargers.\nstatic let fireStation: MKPointOfInterestCategory\nThe point of interest category for fire stations.\nstatic let fitnessCenter: MKPointOfInterestCategory\nThe point of interest category for fitness centers.\nstatic let foodMarket: MKPointOfInterestCategory\nThe point of interest category for food markets, supermarkets, grocery stores, and convenience stores.\nstatic let gasStation: MKPointOfInterestCategory\nThe point of interest category for gas stations.\nstatic let hospital: MKPointOfInterestCategory\nThe point of interest category for hospitals.\nstatic let hotel: MKPointOfInterestCategory\nThe point of interest category for hotels.\nstatic let laundry: MKPointOfInterestCategory\nThe point of interest category for laundries.\nstatic let library: MKPointOfInterestCategory\nThe point of interest category for libraries.\nstatic let marina: MKPointOfInterestCategory\nThe point of interest category for marinas.\nstatic let movieTheater: MKPointOfInterestCategory\nThe point of interest category for movie theaters.\nstatic let museum: MKPointOfInterestCategory\nThe point of interest category for museums.\nstatic let nationalPark: MKPointOfInterestCategory\nThe point of interest category for national parks.\nstatic let nightlife: MKPointOfInterestCategory\nThe point of interest category for nightlife.\nstatic let park: MKPointOfInterestCategory\nThe point of interest category for parks.\nstatic let parking: MKPointOfInterestCategory\nThe point of interest category for parking locations.\nstatic let pharmacy: MKPointOfInterestCategory\nThe point of interest category for pharmacies.\nstatic let police: MKPointOfInterestCategory\nThe point of interest category for police.\nstatic let postOffice: MKPointOfInterestCategory\nThe point of interest category for post offices.\nstatic let publicTransport: MKPointOfInterestCategory\nThe point of interest category for locations of public transportation.\nstatic let restaurant: MKPointOfInterestCategory\nThe point of interest category for restaurants.\nstatic let restroom: MKPointOfInterestCategory\nThe point of interest category for restrooms.\nstatic let school: MKPointOfInterestCategory\nThe point of interest category for schools.\nstatic let stadium: MKPointOfInterestCategory\nThe point of interest category for stadiums.\nstatic let store: MKPointOfInterestCategory\nThe point of interest category for stores.\nstatic let theater: MKPointOfInterestCategory\nThe point of interest category for theaters.\nstatic let university: MKPointOfInterestCategory\nThe point of interest category for universities.\nstatic let winery: MKPointOfInterestCategory\nThe point of interest category for wineries.\nstatic let zoo: MKPointOfInterestCategory\nThe point of interest category for zoos.\nInitializers\ninit(rawValue: String)\nCreates a point of interest category using the provided string.\nRelationships\nConforms To\nHashable\nRawRepresentable\nSendable\nSee Also\nPoints of interest\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nclass MKMapFeatureAnnotation\nA class that describes an annotation element on the map’s display such as a point of interest, territorial boundary, or physical feature.\nstruct MKMapFeatureOptions\nA structure you use to tell the map which kinds of features users can interact with.\nclass MKMapItemRequest\nA utility class you use to request additional information about a map feature.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nclass MKPointOfInterestFilter\nA filter that includes or excludes point of interest categories from a map view, local search, or local search completer."
  },
  {
    "title": "MKError | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkerror",
    "html": "Topics\nError codes\nstatic var decodingFailed: MKError.Code\nGeoJSON decoding failed.\nstatic var directionsNotFound: MKError.Code\nDirections to the specified location aren’t available.\nstatic var loadingThrottled: MKError.Code\nThe data didn’t load because data throttling is in effect.\nstatic var placemarkNotFound: MKError.Code\nThe framework couldn’t find the specified placemark.\nstatic var serverFailure: MKError.Code\nThe map server was unable to return the desired information.\nstatic var unknown: MKError.Code\nAn unknown error occurred.\nenum MKError.Code\nError constants for the MapKit framework.\nAccessing error properties\nvar code: Code\nThe error code within the domain.\nvar errorCode: Int\nThe error code within the domain.\nvar userInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar errorUserInfo: [String : Any]\nA dictionary that contains information about to the error.\nvar localizedDescription: String\nA string that contains a localized description of the error, appropriate for displaying to the user.\nstatic var errorDomain: String\nThe error domain.\nComparing errors\nstatic func != (MKError, MKError) -> Bool\nReturns a Boolean value indicating whether two values are not equal.\nstatic func == (MKError, MKError) -> Bool\nIndicates whether two errors are equivalent.\nvar hashValue: Int\nThe hash value of the error.\nfunc hash(into: inout Hasher)\nHashes the essential components of this value by feeding them into the given hasher.\nCreating errors\ninit(Code, userInfo: [String : Any])\nCreates an error using the specified code and user info dictionary.\nSee Also\nErrors\nlet MKErrorDomain: String\nThe error domain for MapKit."
  },
  {
    "title": "MKMapSnapshotter.Snapshot | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsnapshotter/snapshot",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you use an MKMapSnapshotter object to capture the map contents asynchronously. An MKMapSnapshotter.Snapshot object contains the image that the snapshotter generates from the map contents.\n\nSnapshot images don’t include any custom overlays or annotations that your app adds to the map view. If you want your annotations and overlays to appear on the final image, you need to draw them yourself. To position those items correctly on the image, use the point(for:) method of this class to translate the overlay or annotation coordinate value to an appropriate location inside the image’s coordinate space.\n\nTopics\nGetting the snapshot image\nvar image: UIImage\nThe image of the map’s content.\nvar appearance: NSAppearance\nThe visual style that MapKit uses when rendering the snapshot.\nGetting points on the image\nfunc point(for: CLLocationCoordinate2D) -> CGPoint\nConverts the specified map coordinate to a point in the coordinate space of the image.\nGetting appearance traits\nvar traitCollection: UITraitCollection\nTraits to use when creating the snapshot.\nRelationships\nInherits From\nNSObject"
  },
  {
    "title": "MKPointOfInterestFilter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpointofinterestfilter",
    "html": "Overview\n\nYou can apply a point of interest filter in a map view (pointOfInterestFilter), a local search request (pointOfInterestFilter), a search completer (pointOfInterestFilter), and in snapshot options (pointOfInterestFilter).\n\nTopics\nCreating filters\nclass var excludingAll: MKPointOfInterestFilter\nA filter that excludes all point of interest categories.\nclass var includingAll: MKPointOfInterestFilter\nA filter that includes all point of interest categories.\ninit(excluding: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to exclude.\ninit(including: [MKPointOfInterestCategory])\nInitialize the point of interest filter with a list of categories to include.\nQuerying filter behavior\nfunc excludes(MKPointOfInterestCategory) -> Bool\nReturns a Boolean value indicating whether the filter excludes the point of interest category.\nfunc includes(MKPointOfInterestCategory) -> Bool\nReturns a Boolean value indicating whether the filter includes the point of interest category.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nNSSecureCoding\nSee Also\nPoints of interest\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nclass MKMapFeatureAnnotation\nA class that describes an annotation element on the map’s display such as a point of interest, territorial boundary, or physical feature.\nstruct MKMapFeatureOptions\nA structure you use to tell the map which kinds of features users can interact with.\nclass MKMapItemRequest\nA utility class you use to request additional information about a map feature.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nstruct MKPointOfInterestCategory\nPoint of interest categories."
  },
  {
    "title": "MKMapFeatureOptions | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureoptions",
    "html": "Topics\nInitializers\ninit(rawValue: Int)\nCreates a new feature option structure with the specified value.\nSelecting interactive map features\nstatic var physicalFeatures: MKMapFeatureOptions\nThe option that represents physical map features such as mountain ranges, rivers, and ocean basins.\nstatic var pointsOfInterest: MKMapFeatureOptions\nThe option that represents points of interest such as museums, cafes, parks, or schools.\nstatic var territories: MKMapFeatureOptions\nThe option that represents territorial boundaries such as a national border, a state boundary, or a neighborhood.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nPoints of interest\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nclass MKMapFeatureAnnotation\nA class that describes an annotation element on the map’s display such as a point of interest, territorial boundary, or physical feature.\nclass MKMapItemRequest\nA utility class you use to request additional information about a map feature.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nclass MKPointOfInterestFilter\nA filter that includes or excludes point of interest categories from a map view, local search, or local search completer.\nstruct MKPointOfInterestCategory\nPoint of interest categories."
  },
  {
    "title": "MKMapItemRequest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitemrequest",
    "html": "Topics\nInitializers\ninit(mapFeatureAnnotation: MKMapFeatureAnnotation)\nCreates a new map item request with the specified feature annotation.\ninit(feature: MapFeature)\nCreates a new map item request with the specified map feature.\nConfiguring the item request\nvar featureAnnotation: MKMapFeatureAnnotation\nThe feature annotation this map item represents.\nvar feature: MapFeature\nThe map feature.\nStarting and stopping requests\nfunc cancel()\nCancels an in-progress map item request.\nfunc getMapItem(completionHandler: (MKMapItem?, Error?) -> Void)\nRequests a map item and calls the provided completion handler.\nChecking the status of a request\nvar isCancelled: Bool\nA Boolean value that indicates if the cancellation of the request was successful.\nvar isLoading: Bool\nA Boolean value that indicates if the request is loading.\nRelationships\nInherits From\nNSObject\nSee Also\nPoints of interest\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nclass MKMapFeatureAnnotation\nA class that describes an annotation element on the map’s display such as a point of interest, territorial boundary, or physical feature.\nstruct MKMapFeatureOptions\nA structure you use to tell the map which kinds of features users can interact with.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nclass MKPointOfInterestFilter\nA filter that includes or excludes point of interest categories from a map view, local search, or local search completer.\nstruct MKPointOfInterestCategory\nPoint of interest categories."
  },
  {
    "title": "MKMapFeatureAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapfeatureannotation",
    "html": "Topics\nCustomizing the annotation\nvar featureType: MKMapFeatureAnnotation.FeatureType\nThe type of map feature this annotation represents.\nenum MKMapFeatureAnnotation.FeatureType\nValues that describe the kinds of features visible on the map.\nvar iconStyle: MKIconStyle?\nThe icon style of a feature annotation.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe feature annotation’s point of interest category.\nRelationships\nInherits From\nNSObject\nConforms To\nMKAnnotation\nSee Also\nPoints of interest\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nstruct MKMapFeatureOptions\nA structure you use to tell the map which kinds of features users can interact with.\nclass MKMapItemRequest\nA utility class you use to request additional information about a map feature.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nclass MKPointOfInterestFilter\nA filter that includes or excludes point of interest categories from a map view, local search, or local search completer.\nstruct MKPointOfInterestCategory\nPoint of interest categories."
  },
  {
    "title": "MKLookAroundSceneRequest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscenerequest",
    "html": "Topics\nCreating a LookAround scene\ninit(coordinate: CLLocationCoordinate2D)\nCreates a LookAround scene at the specified coordinates.\ninit(mapItem: MKMapItem)\nCreates a LookAround scene with the location described by the specified map item.\nSpecifying the request’s location\nvar coordinate: CLLocationCoordinate2D\nA coordinate value that describes the location of the LookAround scene.\nvar mapItem: MKMapItem?\nA map item that describes the location of the LookAround scene.\nStarting and stopping scene requests\nfunc cancel()\nCancels the pending scene request.\nfunc getSceneWithCompletionHandler((MKLookAroundScene?, Error?) -> Void)\nRequests a LookAround scene and calls the specified completion handler.\nMonitoring the progress of scene requests\nvar isCancelled: Bool\nA Boolean value that indicates if the cancellation of a scene request was successful.\nvar isLoading: Bool\nA Boolean value that indicates whether a scene request is loading.\nRelationships\nInherits From\nNSObject\nSee Also\nExploring at street level\nExplore a location with a highly detailed map and Look Around\nDisplay a richly detailed map, and use Look Around to experience an interactive view of landmarks.\nclass MKLookAroundScene\nA utility class that encapsulates information the framework requires to retrieve and display a specific Look Around location’s imagery.\nclass MKLookAroundViewController\nA class that manages the presentation and display of a LookAround view.\nclass MKLookAroundSnapshotter\nA utility class that you use to create a static image from a LookAround scene."
  },
  {
    "title": "MKLookAroundSnapshotter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundsnapshotter",
    "html": "Topics\nCreating a snapshotter object\ninit(scene: MKLookAroundScene, options: MKLookAroundSnapshotter.Options)\nCreate a new snapshotter object with the scene and options you specify.\nStarting and stopping a snapshot\nfunc cancel()\nCancels an in-progress snapshot request.\nfunc getSnapshotWithCompletionHandler((MKLookAroundSnapshotter.Snapshot?, Error?) -> Void)\nRequests a new snapshot and calls the completion handler you provide.\nMonitoring the progress of a snaphot\nvar isLoading: Bool\nA Boolean value that indicates whether the snapshot request is loading.\nCustomizing the snapshot\nclass MKLookAroundSnapshotter.Options\nValues you use to customize LookAround snapshots.\nAccessing snapshot imagery\nclass MKLookAroundSnapshotter.Snapshot\nAn object that contains a snapshot image.\nRelationships\nInherits From\nNSObject\nSee Also\nExploring at street level\nExplore a location with a highly detailed map and Look Around\nDisplay a richly detailed map, and use Look Around to experience an interactive view of landmarks.\nclass MKLookAroundScene\nA utility class that encapsulates information the framework requires to retrieve and display a specific Look Around location’s imagery.\nclass MKLookAroundSceneRequest\nA class you use to request a LookAround scene at the location you specify.\nclass MKLookAroundViewController\nA class that manages the presentation and display of a LookAround view."
  },
  {
    "title": "Optimizing Map Views with Filtering and Camera Constraints | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview/optimizing_map_views_with_filtering_and_camera_constraints",
    "html": "Overview\n\nThis sample code demonstrates three features that can make a map relevant to your users:\n\nConstraining the map view’s visible region and zoom to keep the desired areas in view.\n\nFiltering the points of interest to reduce the clutter on the map view.\n\nFiltering search result types and points of interest to improve to search and autocompletion.\n\nNote\n\nThis sample code project is associated with WWDC 2019 session 236: What’s New in MapKit and MapKit JS.\n\nSee Also\nPoints of interest\nclass MKMapFeatureAnnotation\nA class that describes an annotation element on the map’s display such as a point of interest, territorial boundary, or physical feature.\nstruct MKMapFeatureOptions\nA structure you use to tell the map which kinds of features users can interact with.\nclass MKMapItemRequest\nA utility class you use to request additional information about a map feature.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nclass MKPointOfInterestFilter\nA filter that includes or excludes point of interest categories from a map view, local search, or local search completer.\nstruct MKPointOfInterestCategory\nPoint of interest categories."
  },
  {
    "title": "MKLocalSearchCompleter.ResultType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter/resulttype",
    "html": "Topics\nType properties\nstatic var address: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes address completions in results.\nstatic var pointOfInterest: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes point-of-interest completions in results.\nstatic var query: MKLocalSearchCompleter.ResultType\nA value that indicates that the search completer includes query completions in results.\nInitializers\ninit(rawValue: UInt)\nCreates a direction transport type using a raw unsigned integer value.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated"
  },
  {
    "title": "MKLookAroundScene | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklookaroundscene",
    "html": "Relationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nExploring at street level\nExplore a location with a highly detailed map and Look Around\nDisplay a richly detailed map, and use Look Around to experience an interactive view of landmarks.\nclass MKLookAroundSceneRequest\nA class you use to request a LookAround scene at the location you specify.\nclass MKLookAroundViewController\nA class that manages the presentation and display of a LookAround view.\nclass MKLookAroundSnapshotter\nA utility class that you use to create a static image from a LookAround scene."
  },
  {
    "title": "MKLocalSearchCompletion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompletion",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you use an MKLocalSearchCompleter to initiate a search based on a set of partial search strings. That object stores any matches in its results property. Retrieve any MKLocalSearchCompletion objects from that property and display the search terms in your interface, or use one to initiate a search for content based on that search term.\n\nWhen displaying text completions for a partial search term in your user interface, you might want to use a bold version of a font or add some other highlighting to the portion of the completion string that causes it to match the partial search term. To help you add this styling, the completion object includes highlight ranges for the title and subtitle strings.\n\nTopics\nGetting the search completions\nvar title: String\nThe title string associated with the point of interest.\nvar subtitle: String\nThe subtitle (if any) associated with the point of interest.\nvar titleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the title string.\nvar subtitleHighlightRanges: [NSValue]\nThe ranges of characters to highlight in the subtitle string.\nRelationships\nInherits From\nNSObject\nSee Also\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nclass MKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nclass MKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nclass MKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions."
  },
  {
    "title": "MKLocalSearchCompleter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearchcompleter",
    "html": "Overview\n\nYou use an MKLocalSearchCompleter object to retrieve auto-complete suggestions for your own map-based search controls. As the user types text, you feed the current text string into the search completer object, which delivers possible string completions that match locations or points of interest.\n\nYou create and configure MKLocalSearchCompleter objects yourself. You must always assign a delegate object to the search completer so that you can receive the search results that it generates. Specify a search region to restrict results to a designated area. The following code shows a simple example of a view controller that stores the MKLocalSearchCompleter object in a property. The view controller itself acts as the delegate for the completer and the view controller uses the region associated with an MKMapView object that’s part of the view controller’s interface. Completer objects are long-lived objects, so you can store strong references to them and reuse them later in your code.\n\nListing 1 Creating and configuring a search completer\noverride func viewDidLoad() {\n    super.viewDidLoad()\n\n\n    completer = MKLocalSearchCompleter()\n    completer.delegate = self\n      \n    // Limit search results to the map view's current region.\n    completer.region = myMapView.region\n}\n\n\nUpdate the value of the completer’s queryFragment property to begin a search query. You can update this property in real time as the user types new characters into a text field because the completer object waits a short amount of time for the query string to stabilize. When modifications to the query string stop, the completer initiates a new search and returns the results to your delegate as an array of MKLocalSearchCompletion objects.\n\nTopics\nReceiving the search results\nvar delegate: MKLocalSearchCompleterDelegate?\nThe object that receives the completion results.\nprotocol MKLocalSearchCompleterDelegate\nMethods the delegate calls with search completion data.\nSpecifying the query attributes\nvar queryFragment: String\nThe search string that you want completions for.\nvar region: MKCoordinateRegion\nThe region that defines the geographic scope of the search.\nvar resultTypes: MKLocalSearchCompleter.ResultType\nThe types of search completions to include.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists point of interest categories to include or exclude in the search.\nvar filterType: MKLocalSearchCompleter.FilterType\nThe filter options for the search results.\nDeprecated\nenum MKLocalSearchCompleter.FilterType\nConstants indicating the types of search completions to return.\nDeprecated\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions.\nCanceling the query\nfunc cancel()\nCancels an in-progress search operation.\nvar isSearching: Bool\nA Boolean value that indicates whether a search operation is in progress.\nGetting the current query results\nvar results: [MKLocalSearchCompletion]\nThe most recently received search completions.\nRelationships\nInherits From\nNSObject\nSee Also\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nclass MKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nclass MKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions.\nclass MKLocalSearchCompletion\nA fully formed string that completes a partial string."
  },
  {
    "title": "MKLocalSearch | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch",
    "html": "Overview\n\nUse an MKLocalSearch object to execute a single search request. You might use this class to search for addresses or points of interest on the map. Upon completion of the request, the object delivers the results to the completion handler that you provide.\n\nTopics\nCreating a search request\ninit(request: MKLocalSearch.Request)\nCreates and returns a search object with the specified parameters.\ninit(request: MKLocalPointsOfInterestRequest)\nCreates and returns a search object for fetching points of interest.\nclass MKLocalSearch.Request\nThe parameters to use when searching for points of interest on the map.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nPerforming the search\nfunc start(completionHandler: MKLocalSearch.CompletionHandler)\nStarts the search and delivers the results to the specified completion handler.\ntypealias MKLocalSearch.CompletionHandler\nA completion handler block for a search operation.\nvar isSearching: Bool\nA Boolean value that indicates whether the search is in progress.\nfunc cancel()\nCancels an in-progress search operation.\nGetting search results\nclass MKLocalSearch.Response\nThe results from a map-based search.\nRelationships\nInherits From\nNSObject\nSee Also\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nclass MKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nclass MKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions.\nclass MKLocalSearchCompletion\nA fully formed string that completes a partial string."
  },
  {
    "title": "MKGeoJSONObject | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsonobject",
    "html": "Overview\n\nClasses that conform to this protocol represent the types that the GeoJSON decoder can return.\n\nThere’s no reason to create your own classes that conform to this protocol; only MapKit can define classes that the GeoJSON decoder uses.\n\nRelationships\nInherits From\nNSObjectProtocol\nConforming Types\nMKGeoJSONFeature\nMKMultiPoint\nMKMultiPolygon\nMKMultiPolyline\nMKPointAnnotation\nMKPolygon\nMKPolyline\nSee Also\nGeographical features\nDisplaying an Indoor Map\nUse the Indoor Mapping Data Format (IMDF) to show an indoor map with custom overlays and points of interest.\nclass MKGeoJSONDecoder\nAn object that decodes GeoJSON objects into MapKit types.\nclass MKGeoJSONFeature\nThe decoded representation of a GeoJSON feature."
  },
  {
    "title": "MKRoute.Step | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute/step",
    "html": "Overview\n\nEach MKRoute.Step object corresponds to a single instruction that the person needs to follow when navigating between two points. For example, a step might involve following a single road until continuing along the route requires a turn.\n\nYou don’t create instances of this class directly. An MKRoute object contains the MKRoute.Step objects associated with a route. For more information about requesting directions, see MKDirections.\n\nTopics\nGetting the step geometry\nvar polyline: MKPolyline\nThe detailed step geometry.\nGetting additional step details\nvar instructions: String\nThe written instructions for following the path that the step represents.\nvar notice: String?\nAdditional notices that apply to the step.\nvar distance: CLLocationDistance\nThe step distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe transport type of the step.\nRelationships\nInherits From\nNSObject\nSee Also\nGetting the route geometry\nvar polyline: MKPolyline\nThe detailed route geometry.\nvar steps: [MKRoute.Step]\nThe array of steps that create the overall route."
  },
  {
    "title": "MKGeoJSONFeature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsonfeature",
    "html": "Overview\n\nA feature is an object with associated geometry and optional properties in JSON that you define. MapKit exposes these optional properties, but treats them as opaque. MKGeoJSONFeature is one of the classes that the GeoJSON decoder (MKGeoJSONDecoder) can return.\n\nSee the GeoJSON standards specification RFC 7946 for more information about Feature objects.\n\nTopics\nFeature properties\nvar geometry: [MKShape & MKGeoJSONObject]\nThe shape or shapes associated with the GeoJSON feature.\nvar identifier: String?\nAn optional identifier the class returns as a string.\nvar properties: Data?\nOptional serialized JSON data that corresponds to the properties key.\nRelationships\nInherits From\nNSObject\nConforms To\nMKGeoJSONObject\nSee Also\nGeographical features\nDisplaying an Indoor Map\nUse the Indoor Mapping Data Format (IMDF) to show an indoor map with custom overlays and points of interest.\nclass MKGeoJSONDecoder\nAn object that decodes GeoJSON objects into MapKit types.\nprotocol MKGeoJSONObject\nObjects that the GeoJSON decoder can return."
  },
  {
    "title": "MKGeoJSONDecoder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkgeojsondecoder",
    "html": "Overview\n\nThe GeoJSON decoder returns objects that conform to the MKGeoJSONObject protocol.\n\nTopics\nDecoding GeoJSON objects\nfunc decode(Data) -> [MKGeoJSONObject]\nDecodes the provided data into native MapKit types that a map can display.\nRelationships\nInherits From\nNSObject\nSee Also\nGeographical features\nDisplaying an Indoor Map\nUse the Indoor Mapping Data Format (IMDF) to show an indoor map with custom overlays and points of interest.\nclass MKGeoJSONFeature\nThe decoded representation of a GeoJSON feature.\nprotocol MKGeoJSONObject\nObjects that the GeoJSON decoder can return."
  },
  {
    "title": "MKRoute | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkroute",
    "html": "Overview\n\nAn MKRoute object defines the geometry for the route — that is, it contains line segments associated with specific map coordinates. A route object may also include other information, such as the name of the route, its distance, and the expected travel time.\n\nYou don’t create instances of this class directly. When you use an MKDirections object to request directions from Apple, the returned MKDirections.Response object contains the possible routes.\n\nTopics\nGetting the route geometry\nvar polyline: MKPolyline\nThe detailed route geometry.\nvar steps: [MKRoute.Step]\nThe array of steps that create the overall route.\nclass MKRoute.Step\nOne portion of an overall route.\nGetting additional route details\nvar name: String\nThe assigned name for the route.\nvar hasHighways: Bool\nA Boolean value that indicates whether the route contains highways.\nvar hasTolls: Bool\nA Boolean value that indicates whether the route has tolls.\nvar advisoryNotices: [String]\nAn array of advisory notice strings for the route.\nvar distance: CLLocationDistance\nThe route distance, in meters.\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar transportType: MKDirectionsTransportType\nThe overall route transport type.\nRelationships\nInherits From\nNSObject\nSee Also\nDirections\nclass MKDirections\nA utility object that computes directions and travel-time information based on the route information you provide.\nclass MKDirections.Request\nThe start and end points of a route, along with the planned mode of transportation.\nclass MKDirections.Response\nThe route information that Apple servers return in response to your request for directions.\nclass MKDirections.ETAResponse\nThe travel-time information that Apple servers return.\nclass MKRoute.Step\nOne portion of an overall route."
  },
  {
    "title": "Displaying an Indoor Map | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/displaying_an_indoor_map",
    "html": "Overview\n\nThe sample app demonstrates decoding, rendering, and styling of a small subset of the IMDF feature types and their properties. Use these examples to create your own indoor map with a style that’s consistent with your app’s design. You’ll need to handle feature categories that are specific to your venue, and configure the map style using your own colors, icons, and level picker.\n\nNote\n\nThis sample code project is associated with WWDC 2019 session 241: Adding Indoor Maps to your App and Website.\n\nSee Also\nGeographical features\nclass MKGeoJSONDecoder\nAn object that decodes GeoJSON objects into MapKit types.\nclass MKGeoJSONFeature\nThe decoded representation of a GeoJSON feature.\nprotocol MKGeoJSONObject\nObjects that the GeoJSON decoder can return."
  },
  {
    "title": "MKDirections.ETAResponse | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/etaresponse",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you initiate a request for the travel time by calling the calculateETA(completionHandler:) method of an MKDirections object. The completion handler you pass to that method receives an MKDirections.ETAResponse object with the results.\n\nTopics\nGetting the end points\nvar source: MKMapItem\nThe start point of the route.\nvar destination: MKMapItem\nThe end point of the route.\nGetting the travel information\nvar expectedTravelTime: TimeInterval\nThe expected travel time, in seconds.\nvar expectedDepartureDate: Date\nThe expected departure time.\nvar expectedArrivalDate: Date\nThe expected arrival time.\nvar distance: CLLocationDistance\nThe expected travel distance, in meters.\nvar transportType: MKDirectionsTransportType\nThe type of conveyance to use for determining the travel time.\nRelationships\nInherits From\nNSObject\nSee Also\nGetting the ETA\nfunc calculateETA(completionHandler: MKDirections.ETAHandler)\nBegins calculating the requested travel-time information asynchronously.\ntypealias MKDirections.ETAHandler\nThe block to use for processing travel-time information."
  },
  {
    "title": "MKScaleView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkscaleview",
    "html": "Overview\n\nUse this class when you want to incorporate a standard scale view into your own view hierarchy. A scale view displays a legend with distance information for its associated map view. As the map region changes, the scale view updates automatically to reflect any changes in scale.\n\nTopics\nCreating a scale view\ninit(mapView: MKMapView?)\nCreates a scale view and associates it with the specified map view.\nGetting the scale view attributes\nvar mapView: MKMapView?\nThe map view that provides the scale information to the scale view.\nvar scaleVisibility: MKFeatureVisibility\nThe visibility of the scale view.\nvar legendAlignment: MKScaleView.Alignment\nThe alignment of the distance information in the scale view.\nenum MKScaleView.Alignment\nConstants indicating whether measurements begin at the leading or trailing edge of the view.\nRelationships\nInherits From\nUIView\nSee Also\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MKDirections.Response | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/response",
    "html": "Overview\n\nYou don’t create instances of this class directly. Instead, you initiate a request for directions by calling the calculate(completionHandler:) method of an MKDirections object. The completion handler you pass to that method receives an MKDirections.Response object with the results.\n\nTopics\nGetting the end points\nvar source: MKMapItem\nThe start point of the route.\nvar destination: MKMapItem\nThe end point of the route.\nGetting the route information\nvar routes: [MKRoute]\nAn array of route objects representing the directions between the start and end points.\nRelationships\nInherits From\nNSObject\nSee Also\nGetting the directions\nfunc calculate(completionHandler: MKDirections.DirectionsHandler)\nBegins calculating the requested route information asynchronously.\ntypealias MKDirections.DirectionsHandler\nThe block to use for processing the requested route information."
  },
  {
    "title": "MKDirections.Request | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections/request",
    "html": "Overview\n\nYou use an MKDirections.Request object when requesting or providing directions. If your app provides directions, use this class to decode the URL that the Maps app sends to you. If you need to request directions from Apple, pass an instance of this class to an MKDirections object. For example, an app that provides subway directions might request walking directions to and from relevant subway stations.\n\nPrior to iOS 14, for apps that provide directions, you receive direction-related URLs in your app delegate’s application(_:open:options:)method. Upon receiving a URL, call the isDirectionsRequest(_:) method of this class to determine whether the URL relates to routing directions. If it does, create an instance of this class using the provided URL and extract the map items associated with the start and end points.\n\nNote\n\nPrior to iOS 14, to provide routing directions, your app needs to include special keys in its Info.plist file and be able to handle URLs that the Maps app sends to it. These keys indicate a special URL type that you app needs to handle. For information about how to implement this support, see Location and Maps Programming Guide.\n\nTopics\nCreating a directions request object\nclass func isDirectionsRequest(URL) -> Bool\nReturns a Boolean value that indicates whether the specified URL contains a directions request.\ninit(contentsOf: URL)\nCreates and returns a directions request object using the specified URL.\nAccessing the start and end points\nvar source: MKMapItem?\nThe starting point for routing directions.\nvar destination: MKMapItem?\nThe end point for routing directions.\nSpecifying transportation options\nvar transportType: MKDirectionsTransportType\nThe type of conveyance that the directions apply to.\nvar highwayPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework uses or avoids highways when providing directions.\nvar tollPreference: MKDirections.RoutePreference\nThe value that indicates whether the framework avoids routes that have tolls when providing directions.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nvar requestsAlternateRoutes: Bool\nA Boolean value that indicates whether your app requests multiple routes when they’re available.\nvar departureDate: Date?\nThe departure date for the trip.\nvar arrivalDate: Date?\nThe arrival date for the trip.\nConstants\nstruct MKDirectionsTransportType\nConstants that specify the type of conveyance to use.\nLaunch options\nlet MKLaunchOptionsCameraKey: String\nThe virtual camera to use for viewing the map.\nlet MKLaunchOptionsDirectionsModeDefault: String\nDirections that match the user’s preferred transportation type.\nlet MKLaunchOptionsDirectionsModeDriving: String\nDriving directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeKey: String\nThe mode of transportation.\nlet MKLaunchOptionsDirectionsModeTransit: String\nPublic transit directions between the specified start and end points.\nlet MKLaunchOptionsDirectionsModeWalking: String\nWalking directions between the specified start and end points.\nlet MKLaunchOptionsMapCenterKey: String\nThe coordinate value on which to center the map.\nlet MKLaunchOptionsMapSpanKey: String\nThe amount of the map to display.\nlet MKLaunchOptionsMapTypeKey: String\nThe type of map (standard, satellite, or hybrid) to display.\nlet MKLaunchOptionsShowsTrafficKey: String\nA Boolean value that indicates whether to display traffic information.\nRelationships\nInherits From\nNSObject\nSee Also\nCreating a directions object\ninit(request: MKDirections.Request)\nCreates and returns a directions object using the specified request.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions."
  },
  {
    "title": "MKDirections | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdirections",
    "html": "Overview\n\nYou use an MKDirections object to ask the Apple servers to provide walking or driving directions for a route, which you specify using an MKDirections.Request object. After making a request, MapKit delivers the results asynchronously to the completion handler that you provide. You can also get the estimated travel time for the route.\n\nEach MKDirections object handles a single request for directions, although you can cancel and restart that request as needed. You can create multiple instances of this class and process different route requests at the same time, but make requests only when you plan to present the corresponding route information to the user. Apps may receive an MKError.Code.loadingThrottled error if the device makes too many requests in too short a time period.\n\nTopics\nCreating a directions object\ninit(request: MKDirections.Request)\nCreates and returns a directions object using the specified request.\nclass MKDirections.Request\nThe start and end points of a route, along with the planned mode of transportation.\nenum MKDirections.RoutePreference\nOptions that modify how the framework selects routes when calculating directions.\nGetting the directions\nfunc calculate(completionHandler: MKDirections.DirectionsHandler)\nBegins calculating the requested route information asynchronously.\ntypealias MKDirections.DirectionsHandler\nThe block to use for processing the requested route information.\nclass MKDirections.Response\nThe route information that Apple servers return in response to your request for directions.\nGetting the ETA\nfunc calculateETA(completionHandler: MKDirections.ETAHandler)\nBegins calculating the requested travel-time information asynchronously.\ntypealias MKDirections.ETAHandler\nThe block to use for processing travel-time information.\nclass MKDirections.ETAResponse\nThe travel-time information that Apple servers return.\nManaging the request\nfunc cancel()\nCancels a pending request.\nvar isCalculating: Bool\nA Boolean value that indicates whether a request is in process.\nRelationships\nInherits From\nNSObject\nSee Also\nDirections\nclass MKDirections.Request\nThe start and end points of a route, along with the planned mode of transportation.\nclass MKDirections.Response\nThe route information that Apple servers return in response to your request for directions.\nclass MKDirections.ETAResponse\nThe travel-time information that Apple servers return.\nclass MKRoute\nA single route between a requested start and end point.\nclass MKRoute.Step\nOne portion of an overall route."
  },
  {
    "title": "MapKit overlays | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/mapkit_overlays",
    "html": "Topics\nSamples\nDisplaying overlays on a map\nAdd regions of layered content to a map view.\nDisplaying an updating path of a user’s location history\nContinually update a MapKit overlay displaying the path a user travels.\nCircular overlays\nclass MKCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nclass MKCircleRenderer\nThe visual representation of a circular overlay.\nCustom shape overlays\nclass MKPolygon\nA closed polygon overlay.\nclass MKPolygonRenderer\nThe visual representation of a single polygon overlay.\nclass MKMultiPolygon\nA collection of multiple closed polygon overlays.\nclass MKMultiPolygonRenderer\nThe visual representation of multiple polygon overlays.\nclass MKOverlayPathRenderer\nThe visual representation of a path-based overlay.\nMultiple segment lines\nclass MKPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nclass MKGeodesicPolyline\nAn open polygon overlay consisting of line segments that follow the contours of the Earth to create the shortest path between the specified points.\nclass MKMultiPolyline\nA collection of multipolyline shapes, each consisting of one or more connected line segments.\nclass MKPolylineRenderer\nA visual representation of any polyline overlay object.\nclass MKMultiPolylineRenderer\nA visual representation of multiple polyline overlay objects.\nclass MKGradientPolylineRenderer\nA visual representation of any polyline overlay object with a gradient.\nTiled image overlays\nclass MKTileOverlay\nAn overlay that covers an area of the map with tiles of bitmap images.\nclass MKTileOverlayRenderer\nThe renderer for a tile overlay that handles the drawing of bitmap images on the map surface.\nShared behavior\nprotocol MKOverlay\nAn interface for associating content with a specific map region.\nclass MKOverlayRenderer\nThe shared infrastructure for drawing overlays on the map surface.\nclass MKShape\nAn abstract class that defines the basic properties for all shape-based overlay objects.\nclass MKMultiPoint\nAn abstract class that defines the common behavior that open and closed polygon overlays share.\nclass MKPlacemark\nA user-friendly description of a location on the map.\nSee Also\nAnnotations and overlays\nMapKit annotations\nCreate annotations to add indicators and additional details for specific locations on a map."
  },
  {
    "title": "MapKit annotations | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/mapkit_annotations",
    "html": "Topics\nLocation annotations\nAnnotating a Map with Custom Data\nAnnotate a map with location-specific data using default and customized annotation views and callouts.\nclass MKPointAnnotation\nA string-based piece of location-specific data that you apply to a specific point on a map.\nclass MKMarkerAnnotationView\nAn annotation view that displays a balloon-shaped marker at the designated location.\nclass MKPinAnnotationView\nAn annotation view that displays a pin image on the map.\nDeprecated\nGrouped annotations\nDecluttering a Map with MapKit Annotation Clustering\nEnhance the readability of a map by replacing overlapping annotations with a clustering annotation view.\nclass MKClusterAnnotation\nAn annotation that groups two or more distinct annotations into a single entity.\nUser location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nclass MKUserLocation\nAn annotation that reflects the user’s location on the map.\nclass MKUserLocationView\nA configurable annotation that shows the user’s location using the default MapKit style.\nAnnotations in SwiftUI\nstruct MapMarker\nA balloon-shaped annotation used to indicate the location on a map.\nDeprecated\nstruct MapPin\nA pin-shaped annotation used to indicate a location on a map.\nDeprecated\nstruct MapAnnotation\nA customizable annotation that marks a map location.\nDeprecated\nprotocol MapAnnotationProtocol\nA protocol that represents the possible return types of annotations.\nShared behavior\nclass MKPlacemark\nA user-friendly description of a location on the map.\nprotocol MKAnnotation\nAn interface for associating your content with a specific map location.\nclass MKAnnotationView\nThe visual representation of one of your annotation objects.\nSee Also\nAnnotations and overlays\nMapKit overlays\nCreate overlays to highlight geographic regions or paths."
  },
  {
    "title": "MKPitchControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkpitchcontrol",
    "html": "Overview\n\nUse this class when you want to incorporate a standard, fixed-size pitch control into your own view hierarchy. A pitch control allows the user to change the pitch angle of its associated map view.\n\nTopics\nCreating a pitch control\ninit(mapView: MKMapView?)\nCreates a pitch control and associates it with the specified map view.\nAccessing the map view\nvar mapView: MKMapView?\nThe map view associated with this control.\nRelationships\nInherits From\nNSView\nUIView\nSee Also\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MKUserTrackingBarButtonItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkusertrackingbarbuttonitem",
    "html": "Overview\n\nTapping the button lets the user toggles between modes for displaying the map with and without the current heading applied. The button also reflects the current user tracking mode if set elsewhere. This bar button item is associated to a single map view.\n\nTopics\nCreating a user tracking bar button item\ninit(mapView: MKMapView?)\nInitializes a newly created bar button item with the specified map view.\nAccessing the owning map\nvar mapView: MKMapView?\nThe map view associated with this bar button item.\nRelationships\nInherits From\nUIBarButtonItem\nSee Also\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MKZoomControl | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkzoomcontrol",
    "html": "Overview\n\nUse this class when you want to incorporate a standard, fixed-size zoom control into your own view hierarchy. A zoom control enables the user to change the zoom level of its associated map view.\n\nTopics\nCreating a zoom control\ninit(mapView: MKMapView?)\nCreates a zoom control and associates it with the specified map view.\nAccessing the map view\nvar mapView: MKMapView?\nThe map view associated with this control.\nRelationships\nInherits From\nNSView\nUIView\nSee Also\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MKMapView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapview",
    "html": "Overview\n\nUse this class as-is to display map information and to manipulate the map contents from your app. The map view supports several display styles, including the MKStandardMapConfiguration that provides rich 2D and 3D presentations, an MKHybridMapConfiguration that provides a hybrid satellite map presentation, and MKImageryMapConfiguration that provides an imagery-based map presentation. Each of these map configurations support customization properties that refine specific elements of the map’s presentation.\n\nYou can center the map on specific coordinates, specify the size of the area you want to display, and annotate the map with custom information. When you initialize a map view, you specify the initial region for that map to display by setting the region property of the map. MapKit defines a region by a center point and a horizontal and vertical distance, referred to as the span. The span defines how much of the map is visible, and is also how you set the zoom level. For example, specifying a large span results in the user seeing a wide geographical area at a low zoom level, whereas specifying a small span results in a more narrow geographical area and a higher zoom level.\n\nIn addition to setting the span programmatically, the MKMapView class supports many standard interactions for changing the position and zoom level of the map. In particular, map views support flick and pinch gestures for scrolling around the map and zooming in and out. The map view enables support for these gestures by default. You can enable and disable them using the isScrollEnabled and isZoomEnabled properties.\n\nYou can also use projected map coordinates instead of regions to specify some values. When you project the curved surface of the globe onto a flat surface, you get a two-dimensional version of a map where longitude lines appear to be parallel. To specify locations and distances, you use the MKMapPoint, MKMapSize, and MKMapRect data types.\n\nDon’t subclass the MKMapView class itself. You can get information about the map view’s behavior by providing a delegate object. The map view calls the methods of your custom delegate to let it know about changes in the map status and to coordinate the display of custom annotations. The delegate object can be any object in your app as long as it conforms to the MKMapViewDelegate protocol. For more information about implementing the delegate object, see MKMapViewDelegate.\n\nIn macOS 10.14 and later, you can apply a light or dark appearance to your maps by modifying the appearance property of your map view (or one of its ancestor views). Even if you specify a custom appearance, users can use the Maps app to force all maps to adopt a light appearance. Use the map view’s effectiveAppearance property to determine the actual appearance of your map. For information about how to set view appearances, see Choosing a Specific Appearance for Your macOS App.\n\nAnnotating the map\n\nThe MKMapView class supports the ability to annotate the map with custom information. Because a map may have large numbers of annotations, map views differentiate between the annotation objects MapKit uses to manage the annotation data and the view objects for presenting that data on the map.\n\nAn annotation object is any object that conforms to the MKAnnotation protocol. Typically, you implement annotation objects using existing classes in your app’s data model. This allows you to manipulate the annotation data directly, but still make it available to the map view. Each annotation object contains information about the annotation’s location on the map, along with descriptive information that the map can display in a callout.\n\nAn annotation view, which is an instance of the MKAnnotationView class, handles the presentation of annotation objects on the screen. An annotation view is responsible for presenting the annotation data in a way that makes sense. For example, the Maps app uses a marker icon to denote specific points of interest on a map. The MapKit framework offers the MKMarkerAnnotationView class for similar annotations in your own apps. You can also create annotation views that cover larger portions of the map.\n\nBecause the map view needs annotation views only when they’re onscreen, the MKMapView class provides a mechanism for queueing annotation views that aren’t in use. The map view detaches annotation views with a reuse identifier and queues them internally when they move offscreen. This feature improves memory use by keeping only a small number of annotation views in memory at once, and by recycling the views you do have. It also improves scrolling performance by alleviating the need to create new views while the map is scrolling.\n\nWhen configuring your map interface, be sure to add all of your annotation objects right away. The map view uses the coordinate data in each annotation object to determine when the corresponding annotation view needs to appear onscreen. When an annotation moves onscreen, the map view asks its delegate to create a corresponding annotation view. If your app has different types of annotations, it can define different annotation view classes to represent each type.\n\nAdding overlays to the map\n\nYou can use overlays to layer content over a wide portion of the map. An overlay object is any object that conforms to the MKOverlay protocol. An overlay object is a data object that contains the points that specify the shape and size of the overlay and its location on the map. Overlays can represent shapes like circles, rectangles, multisegment lines, and simple or complex polygons. You can also define your own custom overlays to represent other shapes.\n\nOverlay renderer objects, which are instances of the MKOverlayRenderer class, handle the presentation of an overlay. The job of the renderer is to draw the overlay’s content onto the screen when the map view requests it. For example, if you have a simple overlay that represents a bus route, you can use a polyline renderer to draw the line segments that trace the route of the bus. You can also define a custom renderer that draws both the bus route and icons at the location of each bus stop. When specifying overlays, you can add them to specific levels of the map, which tells the map view to render them above or below other types of map content.\n\nWhen configuring your map interface, you can add overlay objects at any time. The map view uses the data in each overlay object to determine when the corresponding overlay view needs to appear onscreen. When an overlay moves onscreen, the map view asks its delegate to create a corresponding overlay renderer.\n\nAdding points of interest to the map\n\nIn iOS16 and macOS 13, and later, you can configure the map view to allow people to interact with a wide variety of points of interest (POIs) the map displays. These are instances of the MKMapFeatureAnnotation class, and cover a wide variety of elements visible on the map, including:\n\nPoints of interest, such as museums, cafes, parks, and schools.\n\nTerritorial boundaries, such as national borders, state boundaries, and neighborhoods.\n\nFeatures on the Earth’s surface, such as mountain ranges, rivers, and ocean basins.\n\nYou can control which features a person can interact with by configuring one of the MKMapConfiguration subclasses that defines the map’s presentation. Create an MKMapConfiguration with a set of MKMapFeatureOptions that describe the categories of POIs the map responds to. To further refine the specific kinds of points of interest the map display presents, use an MKPointOfInterestFilter.\n\nWhen a person interacts with a specific POI, the framework calls your delegate object with one of the MKMapViewDelegate protocol methods, depending on whether the person selects or deselects a specific POI. These methods give your app a chance to respond to the selection or deselection of an element. Depending on the kind of element, you can decide whether you want to customize the display characteristics in the case of a POI, or in the case of territories or geographic map features, you can create custom interactions to display information.\n\nAdding Look Around views to the map\n\niOS16 and macOS 13, and later, support the inclusion of a Look Around view within the map view. Look Around allows people to explore the environment at street level. You request a Look Around view by creating an MKLookAroundSceneRequest with either an MKMapItem or a CLLocationCoordinate2D, and if there’s Look Around imagery available for the specified location, the framework returns an MKLookAroundScene for you to display using an MKLookAroundViewController.\n\nTopics\nConfiguring the map appearance\nvar preferredConfiguration: MKMapConfiguration\nThe characteristics of the map view, including the map type and features the map displays.\nvar pitchButtonVisibility: MKFeatureVisibility\nA value that indicates whether the map’s pitch button is visible.\nvar showsUserTrackingButton: Bool\nA Boolean value that indicates whether the map displays the user tracking button.\nclass MKMapConfiguration\nAn abstract class that represents the shared elements of map configurations.\nclass MKStandardMapConfiguration\nThe class that represents the default map presentation, which is a street map that shows the position of all roads and some road names.\nclass MKHybridMapConfiguration\nThe class that represents a satellite image of the area with road and road name information layers on top.\nclass MKImageryMapConfiguration\nThe class that represents an imagery-based map presentation, such as one using satellite imagery.\nCustomizing the map view behavior\nvar delegate: MKMapViewDelegate?\nThe receiver’s delegate.\nprotocol MKMapViewDelegate\nOptional methods that you use to receive map-related update messages.\nvar selectableMapFeatures: MKMapFeatureOptions\nThe property that describes which selectable features the map responds to.\nAccessing map properties\nenum MKMapType\nThe type of map to display.\nvar isZoomEnabled: Bool\nA Boolean value that determines whether the user may use pinch gestures to zoom in and out of the map.\nvar isScrollEnabled: Bool\nA Boolean value that determines whether the user may scroll around the map.\nvar isPitchEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s pitch information.\nvar isRotateEnabled: Bool\nA Boolean value that indicates whether the map uses the camera’s heading information.\nvar mapType: MKMapType\nThe type of data the map view displays.\nDeprecated\nManipulating the visible portion of the map\nvar region: MKCoordinateRegion\nThe area the map view displays.\nfunc setRegion(MKCoordinateRegion, animated: Bool)\nChanges the currently visible region, and optionally animates the change.\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nfunc setCenter(CLLocationCoordinate2D, animated: Bool)\nChanges the center coordinate of the map, and optionally animates the change.\nfunc showAnnotations([MKAnnotation], animated: Bool)\nSets the visible region so that the map displays the specified annotations.\nvar visibleMapRect: MKMapRect\nThe area visible in the map view.\nfunc setVisibleMapRect(MKMapRect, animated: Bool)\nChanges the currently visible portion of the map, and optionally animates the change.\nfunc setVisibleMapRect(MKMapRect, edgePadding: UIEdgeInsets, animated: Bool)\nChanges the currently visible portion of the map, allowing you to specify additional space around the edges.\nConstraining the map view\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nfunc setCameraBoundary(MKMapView.CameraBoundary?, animated: Bool)\nSets the camera boundary for the map view, specifying whether to use animation.\nvar cameraBoundary: MKMapView.CameraBoundary?\nThe boundary of the area within which the map view’s center needs to remain.\nfunc setCameraZoomRange(MKMapView.CameraZoomRange?, animated: Bool)\nSets the camera zoom range for the map view, specifying whether to use animation.\nvar cameraZoomRange: MKMapView.CameraZoomRange!\nThe zoom range to apply to the map view.\nclass MKMapView.CameraBoundary\nA boundary of an area within which the map’s center needs to remain.\nclass MKMapView.CameraZoomRange\nA camera zoom range that limits the distances to which the user can zoom.\nConfiguring the map display\nfunc setCamera(MKMapCamera, animated: Bool)\nChanges the camera to use for determining the map’s viewing parameters, and optionally animates the change.\nvar camera: MKMapCamera\nThe camera to use for determining the appearance of the map.\nvar showsCompass: Bool\nA Boolean value that indicates whether the map displays a compass control.\nvar showsPitchControl: Bool\nA Boolean value that indicates whether the map displays the pitch control.\nvar showsScale: Bool\nA Boolean value that indicates whether the map shows scale information.\nvar showsZoomControls: Bool\nA Boolean value that indicates whether the map displays zoom controls.\nvar showsBuildings: Bool\nA Boolean value that indicates whether the map displays extruded building information on supported map types.\nDeprecated\nvar showsPointsOfInterest: Bool\nA Boolean value that indicates whether the map displays point-of-interest information.\nDeprecated\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nThe filter to use for determining the points of interest that appear on the map.\nDeprecated\nvar showsTraffic: Bool\nA Boolean value that indicates whether the map displays traffic information.\nDeprecated\nDisplaying the user’s location\nConverting a user's location to a descriptive placemark\nTransform the user’s location that displays on a map into an informative textual description by reverse geocoding.\nvar showsUserLocation: Bool\nA Boolean value that indicates whether the map tries to display the user’s location.\nvar isUserLocationVisible: Bool\nA Boolean value that indicates whether the user’s location is visible in the map view.\nvar userLocation: MKUserLocation\nThe annotation object that represents the user’s location.\nvar userTrackingMode: MKUserTrackingMode\nThe mode to use for tracking the user’s location.\nfunc setUserTrackingMode(MKUserTrackingMode, animated: Bool)\nSets the mode to use for tracking the user’s location, with optional animation.\nenum MKUserTrackingMode\nThe mode to use for tracking the user’s location on the map.\nAnnotating the map\nvar annotations: [MKAnnotation]\nThe annotations associated with the map view.\nfunc addAnnotation(MKAnnotation)\nAdds the specified annotation to the map view.\nfunc addAnnotations([MKAnnotation])\nAdds an array of annotation objects to the map view.\nfunc removeAnnotation(MKAnnotation)\nRemoves the specified annotation object from the map view.\nfunc removeAnnotations([MKAnnotation])\nRemoves an array of annotation objects from the map view.\nfunc annotations(in: MKMapRect) -> Set<AnyHashable>\nReturns the annotation objects within the specified map rectangle.\nManaging annotation selections\nvar annotationVisibleRect: CGRect\nThe visible rectangle where the map is displaying annotation views.\nvar selectedAnnotations: [MKAnnotation]\nThe selected annotations.\nfunc selectAnnotation(MKAnnotation, animated: Bool)\nSelects the specified annotation and displays a callout view for it.\nfunc deselectAnnotation(MKAnnotation?, animated: Bool)\nDeselects the specified annotation and hides its callout view.\nCreating annotation views\nfunc register(AnyClass?, forAnnotationViewWithReuseIdentifier: String)\nRegisters an annotation view class that the map can create automatically.\nfunc dequeueReusableAnnotationView(withIdentifier: String, for: MKAnnotation) -> MKAnnotationView\nReturns a reusable annotation view using the specified identifier with a specified existing annotation view, if possible.\nfunc dequeueReusableAnnotationView(withIdentifier: String) -> MKAnnotationView?\nReturns a reusable annotation view using its identifier.\nfunc view(for: MKAnnotation) -> MKAnnotationView?\nReturns the annotation view associated with the specified annotation object, if any.\nlet MKMapViewDefaultAnnotationViewReuseIdentifier: String\nThe default reuse identifier for your map’s annotation views.\nlet MKMapViewDefaultClusterAnnotationViewReuseIdentifier: String\nThe default reuse identifier for the annotation view representing a cluster of annotations.\nAccessing overlays\nvar overlays: [MKOverlay]\nThe overlay objects associated with the map view.\nfunc overlays(in: MKOverlayLevel) -> [MKOverlay]\nReturns overlay objects in the specified level of the map.\nfunc renderer(for: MKOverlay) -> MKOverlayRenderer?\nReturns the renderer object for drawing the contents of the specified overlay object.\nenum MKOverlayLevel\nConstants that indicate the position of overlays relative to other content.\nfunc view(for: MKOverlay) -> MKOverlayView\nReturns the view associated with the overlay object, if any.\nDeprecated\nAdding and inserting overlays\nfunc addOverlay(MKOverlay, level: MKOverlayLevel)\nAdds the overlay object to the map at the specified level.\nfunc addOverlays([MKOverlay], level: MKOverlayLevel)\nAdds an array of overlay objects to the map at the specified level.\nfunc addOverlay(MKOverlay)\nAdds a single overlay object to the map.\nfunc addOverlays([MKOverlay])\nAdds an array of overlay objects to the map.\nfunc insertOverlay(MKOverlay, at: Int, level: MKOverlayLevel)\nInserts an overlay object into the level at the specified index.\nfunc insertOverlay(MKOverlay, at: Int)\nInserts an overlay object into the list associated with the map.\nfunc insertOverlay(MKOverlay, above: MKOverlay)\nInserts one overlay object above another.\nfunc insertOverlay(MKOverlay, below: MKOverlay)\nInserts one overlay object below another.\nfunc exchangeOverlay(MKOverlay, with: MKOverlay)\nExchanges the positions of two overlay objects.\nfunc exchangeOverlay(at: Int, withOverlayAt: Int)\nExchanges the position of two overlay objects at the specified index.\nRemoving overlays\nfunc removeOverlay(MKOverlay)\nRemoves a single overlay object from the map.\nfunc removeOverlays([MKOverlay])\nRemoves one or more overlay objects from the map.\nConverting map coordinates\nfunc convert(CLLocationCoordinate2D, toPointTo: UIView?) -> CGPoint\nConverts a map coordinate to a point in the specified view.\nfunc convert(CGPoint, toCoordinateFrom: UIView?) -> CLLocationCoordinate2D\nConverts a point in the specified view’s coordinate system to a map coordinate.\nfunc convert(MKCoordinateRegion, toRectTo: UIView?) -> CGRect\nConverts a map region to a rectangle in the specified view.\nfunc convert(CGRect, toRegionFrom: UIView?) -> MKCoordinateRegion\nConverts a rectangle in the specified view’s coordinate system to a map region.\nAdjusting map regions and rectangles\nfunc regionThatFits(MKCoordinateRegion) -> MKCoordinateRegion\nAdjusts the aspect ratio of the specified region to ensure that it fits in the map view’s frame.\nfunc mapRectThatFits(MKMapRect) -> MKMapRect\nReturns a centered map rectangle with the same aspect ratio as the map view’s frame.\nfunc mapRectThatFits(MKMapRect, edgePadding: UIEdgeInsets) -> MKMapRect\nReturns a centered, inset map rectangle with the same aspect ratio as the map view’s frame.\nRelationships\nInherits From\nNSView\nUIView\nConforms To\nNSCoding\nSee Also\nEssentials\nEnabling Maps capability in Xcode\nConfigure your routing app to support providing directions.\nclass MKMapItem\nA point of interest on the map."
  },
  {
    "title": "MKMapSize | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapsize",
    "html": "Overview\n\nIf you project the curved surface of the globe onto a flat surface, what you get is a two-dimensional version of a map where longitude lines appear to be parallel. Such maps are often used to show the entire surface of the globe all at once. An MKMapSize data structure represents a horizontal and vertical distance as measured on this two-dimensional map.\n\nTopics\nCreating a map size\ninit()\nCreates a map size that represents an empty area on a two-dimensional projection of a map.\ninit(width: Double, height: Double)\nCreates a map size that represents an area on a two-dimensional projection of a map with the specified width and height.\nGetting standard map sizes\nstatic let world: MKMapSize\nThe width and height, in map points, of the world in a two-dimensional map projection.\nGetting the width and height\nvar height: Double\nThe height of the specified area, measured in map points.\nvar width: Double\nThe width of the specified area, measured in map points.\nComparing map sizes\nfunc MKMapSizeEqualToSize(MKMapSize, MKMapSize) -> Bool\nReturns a Boolean value that indicates whether two map sizes are equal.\nGetting a description of the size\nfunc MKStringFromMapSize(MKMapSize) -> String\nReturns a formatted string for the specified map size.\nSee Also\nMap coordinates\nstruct MKCoordinateRegion\nA rectangular geographic region that centers around a specific latitude and longitude.\nstruct MKCoordinateSpan\nThe width and height of a map region.\nstruct MKMapRect\nA rectangular area on a two-dimensional map projection.\nstruct MKMapPoint\nA point on a two-dimensional map projection.\nclass MKDistanceFormatter\nA utility object that converts between a geographic distance and a string-based expression of that distance."
  },
  {
    "title": "MKDistanceFormatter | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkdistanceformatter",
    "html": "Overview\n\nUse a distance formatter to display distances to the user or to parse user-specified text to obtain a numerical value for a distance. When formatting strings containing distances, a distance formatter object takes into account the user’s locale and language settings. You can also specify a custom locale or custom units for any distances that you format.\n\nTopics\nConverting distances\nfunc string(fromDistance: CLLocationDistance) -> String\nCreates a string representation of the specified distance.\nfunc distance(from: String) -> CLLocationDistance\nReturns the distance value parsed from the specified string.\nSpecifying the format\nvar locale: Locale!\nThe locale to use when formatting strings.\nvar units: MKDistanceFormatter.Units\nThe measuring system — imperial or metric — to use for units.\nenum MKDistanceFormatter.Units\nConstants that reflect the type of units to use in the string.\nvar unitStyle: MKDistanceFormatter.DistanceUnitStyle\nThe preferred style for units.\nenum MKDistanceFormatter.DistanceUnitStyle\nConstants that indicate the format style to use for strings.\nRelationships\nInherits From\nFormatter\nSee Also\nMap coordinates\nstruct MKCoordinateRegion\nA rectangular geographic region that centers around a specific latitude and longitude.\nstruct MKCoordinateSpan\nThe width and height of a map region.\nstruct MKMapRect\nA rectangular area on a two-dimensional map projection.\nstruct MKMapPoint\nA point on a two-dimensional map projection.\nstruct MKMapSize\nWidth and height information on a two-dimensional map projection."
  },
  {
    "title": "MKMapPoint | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmappoint",
    "html": "Overview\n\nIf you project the curved surface of the globe onto a flat surface, you get a two-dimensional version of a map where longitude lines appear to be parallel. An MKMapPoint data structure represents a point on this two-dimensional map.\n\nThe underlying units that MapKit uses to draw the contents of an MKMapView define the actual units of a map point, but you don’t need to worry about these units directly. You use map points primarily to simplify computations that are complex to do using coordinate values on a curved surface. By converting to map points, you can perform those calculations on a flat surface, which is generally much simpler, and then convert back as necessary. You can map between coordinate values and map points using the init(_:) and coordinate functions.\n\nWhen saving map-related data to a file, save coordinate values (latitude and longitude) rather than map points.\n\nTopics\nCreating a map point\ninit()\nCreates a map point at an unspecified point.\ninit(x: Double, y: Double)\nCreates a new map point structure from the specified values.\ninit(CLLocationCoordinate2D)\nCreates the map point data structure that corresponds to the specified coordinate.\nGetting the point coordinates\nvar x: Double\nThe location of the point along the x-axis of the map.\nvar y: Double\nThe location of the point along the y-axis of the map.\nvar coordinate: CLLocationCoordinate2D\nA 2D coordinate that corresponds to the latitude and longitude of the specified map point.\nComparing map points\nfunc MKMapPointEqualToPoint(MKMapPoint, MKMapPoint) -> Bool\nReturns a Boolean value that indicates whether two map points are equal.\nGetting the distance between points\nfunc distance(to: MKMapPoint) -> CLLocationDistance\nReturns the number of meters between two map points.\nfunc MKMetersPerMapPointAtLatitude(CLLocationDegrees) -> CLLocationDistance\nReturns the distance that one map point spans at the specified latitude.\nfunc MKMapPointsPerMeterAtLatitude(CLLocationDegrees) -> Double\nReturns the number of map points that represent one meter at the specified latitude.\nGetting a description of the point\nfunc MKStringFromMapPoint(MKMapPoint) -> String\nReturns a formatted string for the specified map point.\nSee Also\nMap coordinates\nstruct MKCoordinateRegion\nA rectangular geographic region that centers around a specific latitude and longitude.\nstruct MKCoordinateSpan\nThe width and height of a map region.\nstruct MKMapRect\nA rectangular area on a two-dimensional map projection.\nstruct MKMapSize\nWidth and height information on a two-dimensional map projection.\nclass MKDistanceFormatter\nA utility object that converts between a geographic distance and a string-based expression of that distance."
  },
  {
    "title": "MKMapRect | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmaprect",
    "html": "Overview\n\nIf you project the curved surface of the globe onto a flat surface, what you get is a two-dimensional version of a map where longitude lines appear to be parallel. Such maps are often used to show the entire surface of the globe all at once. An MKMapRect data structure represents a rectangular area as seen on this two-dimensional map.\n\nTopics\nCreating a map rectangle\ninit()\nCreates the rectangle with an empty region.\ninit(origin: MKMapPoint, size: MKMapSize)\nCreates the map rectangle with the specified point and size.\ninit(x: Double, y: Double, width: Double, height: Double)\nCreates a new map rectangle structure from the specified values.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle.\nGetting standard map rectangles\nstatic let null: MKMapRect\nThe null map rectangle.\nstatic let world: MKMapRect\nThe map rectangle that represents the world in the two-dimensional map projection.\nGetting the rectangle coordinates\nvar origin: MKMapPoint\nThe origin point of the rectangle.\nvar size: MKMapSize\nThe width and height of the rectangle, starting from the origin point.\nGetting the boundaries\nvar minX: Double\nReturns the minimum x-axis value of the specified rectangle.\nvar minY: Double\nReturns the minimum y-axis value of the specified rectangle.\nvar midX: Double\nReturns the mid-point along the x-axis of the specified rectangle.\nvar midY: Double\nReturns the mid-point along the y-axis of the specified rectangle.\nvar maxX: Double\nReturns the maximum x-axis value of the specified rectangle.\nvar maxY: Double\nReturns the maximum y-axis value of the specified rectangle.\nvar width: Double\nReturns the width of the map rectangle.\nvar height: Double\nReturns the height of the map rectangle.\nComparing rectangles\nvar isNull: Bool\nA Boolean value that indicates whether the specified rectangle is null.\nfunc MKMapRectEqualToRect(MKMapRect, MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two map rectangles are equal.\nvar isEmpty: Bool\nA Boolean value that indicates whether the specified rectangle has no area.\nvar spans180thMeridian: Bool\nA Boolean value that indicates whether the specified map rectangle crosses the 180th meridian.\nvar remainder: MKMapRect\nA rectangle that represents the normalized portion of the specified rectangle that lies outside the world map boundaries.\nIntersecting the rectangle\nfunc contains(MKMapPoint) -> Bool\nReturns a Boolean value that indicates whether the specified map point lies within the rectangle.\nfunc contains(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether one rectangle contains another.\nfunc intersects(MKMapRect) -> Bool\nReturns a Boolean value that indicates whether two rectangles intersect each other.\nModifying the rectangle\nfunc union(MKMapRect) -> MKMapRect\nReturns a rectangle that represents the union of two rectangles.\nfunc intersection(MKMapRect) -> MKMapRect\nReturns the rectangle that represents the intersection of two rectangles.\nfunc insetBy(dx: Double, dy: Double) -> MKMapRect\nReturns the specified rectangle with an inset by the specified amounts.\nfunc offsetBy(dx: Double, dy: Double) -> MKMapRect\nReturns a rectangle with an origin point that shifts by the specified amount.\nfunc MKMapRectDivide(MKMapRect, UnsafeMutablePointer<MKMapRect>, UnsafeMutablePointer<MKMapRect>, Double, CGRectEdge)\nDivides the specified rectangle into two smaller rectangles.\nGetting a description of the rectangle\nfunc MKStringFromMapRect(MKMapRect) -> String\nReturns a formatted string for the specified map rectangle.\nSee Also\nMap coordinates\nstruct MKCoordinateRegion\nA rectangular geographic region that centers around a specific latitude and longitude.\nstruct MKCoordinateSpan\nThe width and height of a map region.\nstruct MKMapPoint\nA point on a two-dimensional map projection.\nstruct MKMapSize\nWidth and height information on a two-dimensional map projection.\nclass MKDistanceFormatter\nA utility object that converts between a geographic distance and a string-based expression of that distance."
  },
  {
    "title": "MapReader | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapreader",
    "html": "Overview\n\nThe map reader’s content builder receives a MapProxy instance. You can use this instance to get the information you’ll need to convert between a MapCamera and a MKMapRect or MKCoordinateRegion.\n\nTopics\nCreating a map reader\ninit(content: (MapProxy) -> Content)\nCreates an instance that allows view content to reference information about a contained map.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics your provide.\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a look around view with a binding to a scene, navigation, road label, and points of interest characteristics your provide.\nManaging map controls\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard size and position controls.\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nAnimates the camera of a map using the given keyframes when the value provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when map camera framing changes and calls a closure with the map camera and the area the camera frames.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action at a frequency you specify when the map camera framing changes.\nManaging feature selection\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nSpecifies a custom presentation for the currently selected feature.\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nSpecifies which map features should have selection disabled.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType aliases\ntypealias MapReader.Body\nThe type of view representing the body of this view.\nSetting the map style\nfunc mapStyle(MapStyle) -> View\nSpecifies the map style to use.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView"
  },
  {
    "title": "MKCoordinateRegion | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkcoordinateregion",
    "html": "Topics\nCreating a region\ninit()\nCreates a coordinate region.\ninit(center: CLLocationCoordinate2D, latitudinalMeters: CLLocationDistance, longitudinalMeters: CLLocationDistance)\nCreates a new coordinate region from the specified coordinate and distance values.\ninit(MKMapRect)\nReturns the region that corresponds to the specified map rectangle.\ninit(center: CLLocationCoordinate2D, span: MKCoordinateSpan)\nCreates a coordinate region with a span around the specified center coordinate.\nGetting the region coordinates\nvar center: CLLocationCoordinate2D\nThe center point of the region.\nvar span: MKCoordinateSpan\nThe horizontal and vertical span representing the amount of map to display.\nSee Also\nMap coordinates\nstruct MKCoordinateSpan\nThe width and height of a map region.\nstruct MKMapRect\nA rectangular area on a two-dimensional map projection.\nstruct MKMapPoint\nA point on a two-dimensional map projection.\nstruct MKMapSize\nWidth and height information on a two-dimensional map projection.\nclass MKDistanceFormatter\nA utility object that converts between a geographic distance and a string-based expression of that distance."
  },
  {
    "title": "MKMapItem | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkmapitem",
    "html": "Overview\n\nA map item includes a geographic location and any interesting data that might apply to that location, such as the address at that location and the name of a business at that address. You can also create a special MKMapItem object representing the user’s location.\n\nUse this class to do the following:\n\nShare map-related data with the Maps app.\n\nHandle requests for directions that originate from the Maps app.\n\nTo display information in the Maps app, create an MKMapItem object with the information you want to display and call the openMaps(with:launchOptions:) method. The Maps app displays that location on the map and shows the information you provide.\n\nIf you implement a routing app, the Maps app provides two MKMapItem objects representing the start and end points. Use the information in those two objects to plot the route and generate directions.\n\nTopics\nCreating map items\nclass func forCurrentLocation() -> MKMapItem\nCreates and returns a singleton map item object representing the user’s location.\ninit(placemark: MKPlacemark)\nCreates and returns a map item object using the specified placemark object.\nAccessing the map item attributes\nvar placemark: MKPlacemark\nThe placemark object containing the location information.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point-of-interest category for the map item.\nvar isCurrentLocation: Bool\nA Boolean value that indicates whether the map item represents the user’s location.\nvar name: String?\nThe descriptive name associated with the map item.\nvar phoneNumber: String?\nThe phone number associated with a business at the specified location.\nvar url: URL?\nThe URL associated with the specified location.\nvar timeZone: TimeZone?\nThe time zone of the specified location.\nLaunching the Maps app\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the specified map items.\nclass func openMaps(with: [MKMapItem], launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified map items and options.\nfunc openInMaps(launchOptions: [String : Any]?) -> Bool\nOpens the Maps app and displays the map item.\nfunc openInMaps(launchOptions: [String : Any]?, from: UIScene?, completionHandler: ((Bool) -> Void)?)\nOpens the Maps app from a particular scene using the specified options.\nSerializing a map item\nlet MKMapItemTypeIdentifier: String\nA constant that indicates the type of a serialized map item.\nOpening items at launch time\nLaunch options dictionary keys\nLaunch options to specify when opening map items in the Maps app.\nDirections mode values\nStrings that represent the possible values of the launch options direction mode key.\nRelationships\nInherits From\nNSObject\nConforms To\nNSItemProviderReading\nNSItemProviderWriting\nNSSecureCoding\nSee Also\nEssentials\nEnabling Maps capability in Xcode\nConfigure your routing app to support providing directions.\nclass MKMapView\nAn embeddable map interface, similar to the one that the Maps app provides."
  },
  {
    "title": "Enabling Maps capability in Xcode | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit/enabling_maps_capability_in_xcode",
    "html": "Overview\n\nA routing app, an iOS app that provides point-to-point directions, requires Maps capability to make those directions available to Maps and other apps. Maps capability allows an app to provide specific directions beyond what the Maps app supports, including subway routes, hiking trails, and bike paths. Use Xcode to enable Maps capability and select the supported modes.\n\nAdd Maps Capability to Your Project\n\nOpen your project with Xcode. In the Project navigator, select your project.\n\nChoose the target for the app in the Targets section of the outline view.\n\nClick the Signing & Capabilities tab in the project editor.\n\nIn the toolbar, click the Library button (+) to open the Capabilities library and select Maps capability.\n\nSelect one or more routing modes using the checkboxes displayed under the Maps capability.\n\nThe screenshot below shows the Maps capability:\n\nFor more information on enabling capabilities in your app, see Adding capabilities to your app. For more information on providing directions in your app, see MKDirections.\n\nSee Also\nEssentials\nclass MKMapView\nAn embeddable map interface, similar to the one that the Maps app provides.\nclass MKMapItem\nA point of interest on the map."
  },
  {
    "title": "TupleMapContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/tuplemapcontent",
    "html": "Topics\nAccessing the tuple value\nvar value: T\nThe contents of the tuple.\nType aliases\ntypealias TupleMapContent.Body\nThe type of view representing the body of this view.\nRelationships\nConforms To\nMapContent"
  },
  {
    "title": "MapContentView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentview",
    "html": "Topics\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging feature selection\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nSpecifies a custom presentation for the currently selected feature.\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nSpecifies which map features should have selection disabled.\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics you provide.\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with a binding to a scene, and navigation, road label, and points of interest characteristics you provide.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nUses the keyframes you provide to animate the camera of a map when the value you provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when Map camera framing changes that calls a closure that provides the map camera and the area the camera frames.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action when Map camera framing changes.\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations.\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nSetting the map style\nfunc mapStyle(MapStyle) -> View\nSpecifies the map style to use.\nType aliases\ntypealias MapContentView.Body\nThe content and behavior of the view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView"
  },
  {
    "title": "MapProxy | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapproxy",
    "html": "Topics\nCreating a camera proxy\nfunc camera(framing: MKCoordinateRegion) -> MapCamera\nCreates a camera in the context of the map that frames the given coordinate region.\nfunc camera(framing: MKMapRect) -> MapCamera\nCreates a camera in the context of the map that frames the given map rectangle.\nfunc camera(framing: MKMapItem, allowPitch: Bool) -> MapCamera\nCreates a camera in the context of the map that frames the given map item.\nConverting between coordinate spaces\nfunc convert(CLLocationCoordinate2D, to: some CoordinateSpaceProtocol) -> CGPoint?\nConverts a map coordinate to a point in the specified coordinate space.\nfunc convert(CGPoint, from: some CoordinateSpaceProtocol) -> CLLocationCoordinate2D?\nConverts a point in the specified coordinate space to a map coordinate."
  },
  {
    "title": "EmptyMapContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/emptymapcontent",
    "html": "Topics\nCreating an empty map content structure\ninit()\nCreates an empty map content element.\nSetting the tag\nfunc tag<V>(V) -> MapContent\nA value associated with a map content element that the framework uses for determining the selected annotation on the map.\nType aliases\ntypealias EmptyMapContent.Body\nThe type of view representing the body of this view.\nRelationships\nConforms To\nMapContent"
  },
  {
    "title": "DefaultUserAnnotationContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/defaultuserannotationcontent",
    "html": "Overview\n\nDon’t use this type directly. Instead, MapKit creates this type on your behalf.\n\nTopics\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nType aliases\ntypealias DefaultUserAnnotationContent.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc frame(depth: CGFloat?, alignment: DepthAlignment) -> View\nfunc frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> View\nfunc glassBackgroundEffect(displayMode: GlassBackgroundDisplayMode) -> View\nfunc glassBackgroundEffect<S>(in: S, displayMode: GlassBackgroundDisplayMode) -> View\nfunc listRowHoverEffect(HoverEffect?) -> View\nfunc listRowHoverEffectDisabled(Bool) -> View\nfunc offset(z: CGFloat) -> View\nfunc ornament<Content>(visibility: Visibility, attachmentAnchor: OrnamentAttachmentAnchor, contentAlignment: Alignment, ornament: () -> Content) -> View\nfunc padding3D(CGFloat) -> View\nfunc padding3D(EdgeInsets3D) -> View\nfunc padding3D(Edge3D.Set, CGFloat?) -> View\nfunc perspectiveRotationEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> View\nfunc preferredSurroundingsEffect(SurroundingsEffect?) -> View\nfunc rotation3DEffect(Rotation3D, anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> View\nfunc scaleEffect(CGFloat, anchor: UnitPoint) -> ModifiedContent<DefaultUserAnnotationContent, _UniformScaleEffect>\nfunc scaleEffect(CGFloat, anchor: UnitPoint3D) -> View\nfunc scaleEffect(Size3D, anchor: UnitPoint3D) -> View\nfunc scaleEffect(x: CGFloat, y: CGFloat, z: CGFloat, anchor: UnitPoint3D) -> View\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nfunc transform3DEffect(AffineTransform3D) -> View\nfunc upperLimbVisibility(Visibility) -> View\nfunc visualEffect3D((EmptyVisualEffect, GeometryProxy3D) -> some VisualEffect) -> View\nRelationships\nConforms To\nView"
  },
  {
    "title": "MapContentBuilder | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontentbuilder",
    "html": "Overview\n\nThe buildBlock(_:) methods in this type create MapContent instances based on the number and types of sources you provide as parameters.\n\nYou don’t use this type directly. Instead, SwiftUI annotates the content parameter of the various MapView initializers with the @MapContentBuilder annotation, implicitly calling this builder for you.\n\nTopics\nMap content builders\nstatic func buildBlock() -> EmptyMapContent\nCreates an empty map content block that contains no statements.\nstatic func buildBlock<C>(C) -> C\nCreates a map content block that contains a single content result.\nstatic func buildBlock<C0, C1>(C0, C1) -> TupleMapContent<(C0, C1)>\nCreates a map content block that contains the two content elements you provide.\nstatic func buildBlock<C0, C1, C2>(C0, C1, C2) -> TupleMapContent<(C0, C1, C2)>\nCreates a map content block that contains the three content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3>(C0, C1, C2, C3) -> TupleMapContent<(C0, C1, C2, C3)>\nCreates a map content block that contains the four content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4>(C0, C1, C2, C3, C4) -> TupleMapContent<(C0, C1, C2, C3, C4)>\nCreates a map content block that contains the five content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5>(C0, C1, C2, C3, C4, C5) -> TupleMapContent<(C0, C1, C2, C3, C4, C5)>\nCreates a map content block that contains the six content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6>(C0, C1, C2, C3, C4, C5, C6) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6)>\nCreates a map content block that contains the seven content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7>(C0, C1, C2, C3, C4, C5, C6, C7) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7)>\nCreates a map content block that contains the eight content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8>(C0, C1, C2, C3, C4, C5, C6, C7, C8) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8)>\nCreates a map content block that contains the nine content elements you provide.\nstatic func buildBlock<C0, C1, C2, C3, C4, C5, C6, C7, C8, C9>(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9) -> TupleMapContent<(C0, C1, C2, C3, C4, C5, C6, C7, C8, C9)>\nCreates a map content block that contains the ten content elements you provide.\nConditionally building map content\nstatic func buildEither<TrueContent, FalseContent>(first: TrueContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the first argument you provide evaluates to  true.\nstatic func buildEither<TrueContent, FalseContent>(second: FalseContent) -> _ConditionalMapContent<TrueContent, FalseContent>\nCompares content in a multistatement closure, resulting in use of the conditional content if the second argument you provide evaluates to true.\nstatic func buildExpression<Content>(Content) -> Content\nBuilds an expression within the map content builder.\nstatic func buildIf<Content>(Content?) -> Content?\nCompares content in a multistatement closure, that produces an optional view that’s visible if the argument you provide evaluates to true.\nstatic func buildLimitedAvailability<Content>(Content) -> MapContent\nProvides support for “if” statements with “available” macro clauses in multi-statement closures, producing conditional content for the “then” branch, such the conditionally-available branch.\nType Methods\nstatic func buildBlock<each Content>(repeat each Content) -> TupleMapContent<(repeat each Content)>"
  },
  {
    "title": "MapContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcontent",
    "html": "Overview\n\nTopics\nAccessing the view body\nvar body: Self.Body\nThe content and behavior of the view.\n\nRequired\n\nSupplying annotation titles\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility of titles for markers and annotations.\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility of subtitles for markers and annotations.\nSetting the content style\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content in drawing map overlays.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content.\nSetting stroke properties\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stoke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays.\nSetting the overlay level\nfunc mapOverlayLevel(level: MKOverlayLevel) -> MapContent\nSpecifies the position of overlays relative to other map content.\nAssociated types\nassociatedtype Body\nThe content and behavior of the view.\n\nRequired\n\nRelationships\nInherited By\nDynamicMapContent\nConforming Types\nAnnotation\nEmptyMapContent\nForEach\nConforms when Data conforms to RandomAccessCollection, ID conforms to Hashable, and Content conforms to MapContent.\nGroup\nConforms when Content conforms to MapContent.\nMapCircle\nMapPolygon\nMapPolyline\nMarker\nModifiedContent\nConforms when Content conforms to MapContent and Modifier conforms to _MapContentModifier.\nNever\nOptional\nConforms when Wrapped conforms to MapContent.\nTupleMapContent\nUserAnnotation"
  },
  {
    "title": "DynamicMapContent | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/dynamicmapcontent",
    "html": "Topics\nAccessing the data\nvar data: Self.Data\nThe collection of underlying data.\n\nRequired\n\nAssociated types\nassociatedtype Data\nThe type represents the data this protocol contains.\n\nRequired\n\nRelationships\nInherits From\nMapContent\nConforming Types\nForEach\nConforms when Data conforms to RandomAccessCollection, ID conforms to Hashable, and Content conforms to MapContent.\nModifiedContent\nConforms when Content conforms to DynamicMapContent and Modifier conforms to _MapContentModifier."
  },
  {
    "title": "MapCameraUpdateFrequency | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatefrequency",
    "html": "Topics\nTiming of camera updates\nstatic var continuous: MapCameraUpdateFrequency\nA value that indicates that all camera updates are continuous, including while interactions are taking place.\nstatic var onEnd: MapCameraUpdateFrequency\nA value that indicates the camera updates when map interactions are complete.\nSee Also\nMap customization\nstruct MapCamera\nDefines a virtual viewpoint above the map surface.\nstruct MapCameraBounds\nDefines an optional boundary of an area within which the map’s center needs to remain.\nstruct MapCameraPosition\nA structure that describes how to position the map’s camera within the map.\nstruct MapCameraUpdateContext\nA structure that defines additional information about the map camera."
  },
  {
    "title": "MapCameraUpdateContext | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraupdatecontext",
    "html": "Topics\nAccessing information about the camera\nlet camera: MapCamera\nThe current map camera.\nlet rect: MKMapRect\nA map rectangle that approximates the view of the map’s camera.\nlet region: MKCoordinateRegion\nA map region that approximates the view of the map’s camera.\nSee Also\nMap customization\nstruct MapCamera\nDefines a virtual viewpoint above the map surface.\nstruct MapCameraBounds\nDefines an optional boundary of an area within which the map’s center needs to remain.\nstruct MapCameraPosition\nA structure that describes how to position the map’s camera within the map.\nstruct MapCameraUpdateFrequency\nA structure that describes when the map camera updates."
  },
  {
    "title": "MapCameraPosition | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcameraposition",
    "html": "Overview\n\nMapCameraPosition contains a variety of properties that you can use to control the semantic framings of the camera in relation to its position to the map, such as automatic, which frames the content of the map, and the camera property, which allows you to specify an explicit camera position.\n\nWhen you pass MapCameraPosition as a binding to a map, the map adjusts its camera to frame the requested content, or to exactly match the camera MapCameraPosition specifies. If a person interacts with the Map in a way that moves the map, the map resets the position to a value that specifies positionedByUser.\n\nTopics\nCreating a camera position\nstatic func camera(MapCamera) -> MapCameraPosition\nCreates a new camera position from an existing map camera you provide.\nstatic func item(MKMapItem, allowsAutomaticPitch: Bool) -> MapCameraPosition\nCreates a new camera position centered on a map item and automatic pitch selection you provide.\nstatic func rect(MKMapRect) -> MapCameraPosition\nCreates a new camera position with the map boundaries you provide.\nstatic func region(MKCoordinateRegion) -> MapCameraPosition\nCreates a new camera position the coordinate region you provide.\nstatic func userLocation(followsHeading: Bool, fallback: MapCameraPosition) -> MapCameraPosition\nCreates a camera position with the specific fallback position and optionally follows the user’s heading.\nInformation about camera position and framing\nstatic var automatic: MapCameraPosition\nThe position that frames the map’s content.\nvar allowsAutomaticPitch: Bool\nThe setting that allows the map’s camera to automatically set the pitch when framing the item.\nvar camera: MapCamera?\nA map camera that defines the camera positioning.\nvar fallbackPosition: MapCameraPosition?\nThe position to use if the framework hasn’t resolved the person’s location.\nvar item: MKMapItem?\nThe item the map is framing.\nvar positionedByUser: Bool\nA Boolean value that indicates whether the person specified the camera position by interacting with the map.\nvar rect: MKMapRect?\nThe position that frames the given map rectangle.\nvar region: MKCoordinateRegion?\nThe coordinate region to frame.\nAccessing information about someone’s location\nvar followsUserHeading: Bool\nA Boolean value that indicates whether the map is following someone’s heading.\nvar followsUserLocation: Bool\nA Boolean value that indicates whether the map is following someone’s location.\nOperators\nstatic func != (MapCameraPosition, MapCameraPosition) -> Bool\nReturns a Boolean value that indicates whether two camera positions are not equal.\nstatic func == (MapCameraPosition, MapCameraPosition) -> Bool\nReturns a Boolean value that indicates whether two camera positions are equal.\nSee Also\nMap customization\nstruct MapCamera\nDefines a virtual viewpoint above the map surface.\nstruct MapCameraBounds\nDefines an optional boundary of an area within which the map’s center needs to remain.\nstruct MapCameraUpdateContext\nA structure that defines additional information about the map camera.\nstruct MapCameraUpdateFrequency\nA structure that describes when the map camera updates."
  },
  {
    "title": "MapCameraBounds | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamerabounds",
    "html": "Overview\n\nUsing the MapCameraBounds initializers you can also define an optional camera zoom range that limits the distances that a person can zoom the map camera to.\n\nTopics\nCreating a map camera bounds\ninit(centerCoordinateBounds: MKCoordinateRegion, minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the specified region boundary and zoom ranges.\ninit(centerCoordinateBounds: MKMapRect, minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the specified map rectangle boundary and zoom ranges.\ninit(minimumDistance: Double?, maximumDistance: Double?)\nCreates a camera bounds with the zoom ranges you specify.\nSee Also\nMap customization\nstruct MapCamera\nDefines a virtual viewpoint above the map surface.\nstruct MapCameraPosition\nA structure that describes how to position the map’s camera within the map.\nstruct MapCameraUpdateContext\nA structure that defines additional information about the map camera.\nstruct MapCameraUpdateFrequency\nA structure that describes when the map camera updates."
  },
  {
    "title": "MapFeature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapfeature",
    "html": "Overview\n\nTappable map features can include single points of interest, such as hotels and restaurants, a territory, or a physical map feature such as an ocean, basin, river, or mountain range.\n\nTopics\nAccessing the feature’s properties\nvar kind: MapFeature.FeatureKind\nThe kind of feature represented by the map feature.\nstruct MapFeature.FeatureKind\nThe kind of feature represented by a map feature.\nvar coordinate: CLLocationCoordinate2D\nThe coordinate of the map feature.\nvar title: String?\nThe title of the map feature.\nvar backgroundColor: Color?\nThe background color associated with the map feature.\nvar image: Image?\nAn image associated with the map feature.\nvar pointOfInterestCategory: MKPointOfInterestCategory?\nThe point of interest category of the map feature.\nComparison functions\nstatic func != (MapFeature, MapFeature) -> Bool\nReturns a Boolean value that indicates whether two values are not equal.\nstatic func == (MapFeature, MapFeature) -> Bool\nReturns a Boolean value that indicates whether two values are equal.\nHash functions\nvar hashValue: Int\nAn integer value that uniquely identifies this object.\nfunc hash(into: inout Hasher)\nComputes the essential components of a value by sending them into the given hasher.\nRelationships\nConforms To\nHashable"
  },
  {
    "title": "MapCamera | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcamera",
    "html": "Overview\n\nMapCamera allows you to specify the viewpoint of a Map, as well as affect how MapKit presents the map to the user.\n\nTo create a map view with a 3D perspective, MapCamera takes input from the camera and device:\n\nThe location of the camera on the map.\n\nThe compass heading to indicate the camera’s viewing direction.\n\nThe pitch of the camera relative to the map perpendicular.\n\nThe camera’s distance from the target point.\n\nTopics\nCreating a map camera\ninit(MKMapCamera)\nCreates a map camera from the given MapKit camera object.\ninit(centerCoordinate: CLLocationCoordinate2D, distance: Double, heading: Double, pitch: Double)\nCreates a camera using the specified distance, pitch, and heading information.\nAccessing the camera properties\nvar centerCoordinate: CLLocationCoordinate2D\nThe map coordinate at the center of the map view.\nvar distance: Double\nThe distance from the center point of the map to the camera, in meters.\nvar heading: Double\nThe heading of the camera, in degrees, relative to true North.\nvar pitch: Double\nThe viewing angle of the camera, in degrees.\nOperators\nstatic func != (MapCamera, MapCamera) -> Bool\nReturns a Boolean value that indicates whether two camera objects are not equal.\nstatic func == (MapCamera, MapCamera) -> Bool\nReturns a Boolean value that indicates whether two camera objects are equal.\nSee Also\nMap customization\nstruct MapCameraBounds\nDefines an optional boundary of an area within which the map’s center needs to remain.\nstruct MapCameraPosition\nA structure that describes how to position the map’s camera within the map.\nstruct MapCameraUpdateContext\nA structure that defines additional information about the map camera.\nstruct MapCameraUpdateFrequency\nA structure that describes when the map camera updates."
  },
  {
    "title": "MapZoomStepper | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapzoomstepper",
    "html": "Overview\n\nYou typically use MapZoomStepper with Map as a stand alone view, as shown in the following example:\n\n    struct ZoomStepperTestView: View {\n        @Namespace var mapScope\n        var body: some View {\n            VStack {\n                Map(scope: mapScope)\n                MapZoomStepper(scope: mapScope)\n            }\n            .mapScope(mapScope)\n        }\n    }\n\n\nYou can also use a MapZoomStepper in conjunction with the mapControls(_:) modifier, as show in here:\n\n    Map()\n        .mapControls {\n            MapZoomStepper()\n        }\n\n\nTopics\nCreating a zoom stepper\ninit(scope: Namespace.ID?)\nCreates a new zoom stepper with the scope you specify.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view.\nSetting the namespace identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType aliases\ntypealias MapZoomStepper.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location."
  },
  {
    "title": "LookAroundPreview | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/lookaroundpreview",
    "html": "Overview\n\nUse a LookAroundPreview to create preview imagery for a specific geographic location on the map that you can place in your view. In the following example, a travel recommendations app displays and styles a stack of Look Around previews it generates from an array of ItineraryItem structures that contain the location’s title and Look Around scene:\n\n    struct LookAroundPreviewsView: View {\n        let itinerary: [ItineraryItem]\n        var body: some View {\n            ScrollView {\n                LazyVStack {\n                    ForEach(itinerary) { item in\n                        LookAroundPreview(initialScene: item.lookAroundScene)\n                            .frame(height: 128)\n                            .overlay(alignment: .bottomTrailing) {\n                                Text(item.title)\n                                    .font(.caption)\n                                    .foregroundColor(.white)\n                                    .padding()\n                            }\n                    }\n                }\n            }\n        }\n    }\n\n\nTo display a Look Around viewer a person can explore, apply a lookAroundViewer view modifier to a specific view, then add a control the user interacts with to display the Look Around viewer. In the following example, the lookAroundViewer view modifier observes a binding to Boolean value to determine whether to display the Look Around viewer.\n\n    var lookAroundScene: MKLookAroundScene?\n\n\n    @State private var isLookingAround: Bool = false\n\n\n    var body: some View {\n        MyInterestingView()\n            .lookAroundViewer(isPresented: $isLookingAround, initialScene: lookAroundScene)\n            .toolbar {\n                ToolbarItem {\n                    Button(action: { lookingAround = true }) {\n                        Image(systemName: \"binoculars\")\n                }\n            }\n        }   \n    }\n\n\nTopics\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nCreating a Look Around preview\ninit(initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, badgePosition: MKLookAroundBadgePosition)\nCreates a Look Around preview with an initial scene, navigation, road label, points of interest, and badge position you specify.\ninit(scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, badgePosition: MKLookAroundBadgePosition)\nCreates a Look Around preview with a binding to a scene, navigation, road label, points of interest, and badge position you specify.\nCreating a Look Around viewer\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics you provide.\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with a binding to a scene, and navigation, road label, and points of interest characteristics you provide.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView"
  },
  {
    "title": "MapUserLocationButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapuserlocationbutton",
    "html": "Overview\n\nUse MapUserLocationButton in conjunction with Map as a stand alone view, as shown in this example:\n\n    struct LocationButtonTestView: View {\n        @Namespace var mapScope\n        var body: some View {\n            VStack {\n                Map(scope: mapScope)\n                MapUserLocationButton(scope: mapScope)\n            }\n            .mapScope(mapScope)\n        }\n    }\n\n\nYou can also use MapUserLocationButton in conjunction with the mapControls(_:) modifier as shown in this example:\n\n    Map()\n        .mapControls {\n            MapUserLocationButton()\n        }\n\n\nTopics\nCreating a map user location button\ninit(scope: Namespace.ID?)\nCreates a new user location button with the scope you specify.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nSetting the tint and border shape\nfunc buttonBorderShape(ButtonBorderShape) -> View\nSets the border shape for buttons in this view.\nfunc tint(Color?) -> View\nSets the tint color within this view.\nType aliases\ntypealias MapUserLocationButton.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map."
  },
  {
    "title": "MapScaleView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapscaleview",
    "html": "Overview\n\nYou can use this with Map as a standalone view, for example:\n\n    struct ScaleTestView: View {\n        @Namespace var mapScope\n\n\n        var body: some View {\n            VStack {\n                Map(scope: mapScope)\n                MapCompass(scope: mapScope)\n            }\n            .mapScope(mapScope)\n        }\n    }\n\n\nThe scale indicator grows and shrinks (although visually, its frame is static) based on the zoom level of the map. By default the leading edge remains anchored and the trailing edge moves as the scale changes. If the scale is trailing aligned, then it may be more visually appealing to anchor the ScaleView to the trailing edge\n\n    ZStack(alignment: .trailing) {\n        Map(mapScope)\n        MapScaleView(anchorEdge: .trailing, scope: mapScope)\n    }\n    .mapScope(mapScope)\n\n\nYou can also use MapScaleView with the mapControls(_:) modifier, as shown in this example:\n\n    Map()\n        .mapControls {\n            MapScaleView()\n        }\n\n\nTopics\nCreating a map scale view\ninit(anchorEdge: HorizontalEdge, scope: Namespace.ID?)\nCreates a map scale view.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType alises\ntypealias MapScaleView.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map."
  },
  {
    "title": "MapPitchToggle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchtoggle",
    "html": "Overview\n\nThe MapPitchToggle control sets the pitch of the associated map to a pleasing angle if flat, or returns the map to flat if pitched.\n\nYou can use this control in conjunction with Map as a standalone view, as this example shows:\n\n    struct MyMapView: View {\n        @Namespace var mapScope\n\n\n        var body: some View {\n            VStack {\n                Map(scope: mapScope)\n                MapPitchToggle(scope: mapScope)\n            }\n            .mapScope(mapScope)\n        }\n    }\n\n\nAlternatively, use MapPitchToggle in conjunction with the mapControls(_:) modifier. For example:\n\n    Map()\n        .mapControls {\n            MapPitchToggle()\n        }\n\n\nTopics\nCreating a map pitch toggle\ninit(scope: Namespace.ID?)\nCreates a new map pitch toggle control with the provided scope.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have controls with standard sizes and positions.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType aliases\ntypealias MapPitchToggle.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map."
  },
  {
    "title": "MapCompass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcompass",
    "html": "Overview\n\nYou can use MapCompass with a Map as a stand alone view, as shown in the following example:\n\n    struct CompassButtonTestView: View {\n        @Namespace var mapScope\n        var body: some View {\n        VStack {\n                Map(scope: mapScope)\n                MapCompass(scope: mapScope)\n            }\n            .mapScope(mapScope)\n        }\n    }\n\n\nYou can also use MapCompass with the mapControls(_:), modifier, as shown below:\n\n    Map()\n        .mapControls {\n            MapCompass()\n        }\n\n\nTapping the compass reorients the map so that North is at the top of the Map view.\n\nTopics\nCreating a map compass\ninit(scope: Namespace.ID?)\nCreates a new map compass with the scope you specify.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType aliases\ntypealias MapCompass.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map."
  },
  {
    "title": "MapLocationCompass | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/maplocationcompass",
    "html": "Overview\n\nIn watchOS 10 and later, this view displays a combined MapUserLocationButton and MapCompass control. When the map camera has a heading of zero (where north is up), this view shows the user location button. When the map camera is in a rotated state, it shows a compass.\n\nUse MapLocationCompass in conjunction with Map as a standalone view, as shown in this example:\n\n    struct LocationCompassTestView: View {\n        @Namespace var mapScope\n\n\n        var body: some View {\n            VStack {\n                Map(scope: mapScope)\n                MapLocationCompass(scope: mapScope)\n            }\n            .mapScope(mapScope)\n        }\n    }\n\n\nYou can also use MapLocationCompass in conjunction with the mapControls(_:) modifier. For example:\n\n    Map()\n        .mapControls {\n            MapLocationCompass()\n        }\n\n\nTopics\nCreating a map loction compass\ninit(scope: Namespace.ID?)\nCreates a new map location compass with the provided scope.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have controls with standard sizes and positions.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType aliases\ntypealias MapLocationCompass.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map."
  },
  {
    "title": "MapPitchSlider | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappitchslider",
    "html": "Topics\nCreating a map pitch slider\ninit(scope: Namespace.ID?)\nCreates a new map pitch slider with the scope you specify.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nfunc controlSize(ControlSize) -> View\nSets the size for controls within this view.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nType aliases\ntypealias MapPitchSlider.Body\nThe type of view that represents the body of this view.\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map."
  },
  {
    "title": "UserAnnotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/userannotation",
    "html": "Overview\n\nDisplays the person’s current location using the system styled user location indicator.\n\nTopics\nCreating a user annotation\ninit()\nCreates an annotation that displays the person’s current location.\ninit(anchor: UnitPoint)\nCreates an annotation that displays the person’s current location using the system styled user location indicator with the specified anchor point.\ninit(anchor: UnitPoint, content: (UserLocation) -> Content)\nCreates an annotation that displays a person’s current location using the system styled user location indicator with the specified anchor point using a custom view.\ninit(anchor: UnitPoint, content: () -> Content)\nCreate an annotation that displays the person’s current location of the user using a custom view.\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations.\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations.\nInformation about a person’s location\nstruct UserLocation\nA structure that contains Information about the person’s current location.\nSetting the overlay level\nfunc mapOverlayLevel(level: MKOverlayLevel) -> MapContent\nSpecifies the position of overlays relative to other map content.\nSetting the tag\nfunc tag<V>(V) -> MapContent\nA value associated with a map content element that the framework uses to determine the selected annotation on the map.\nType aliases\ntypealias UserAnnotation.Body\nThe type of view that represents the body of this view.\nRelationships\nConforms To\nMapContent\nSee Also\nAnnotations and overlays\nstruct Annotation\nA customizable annotation used to indicate a location on a map.\nstruct MapCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nstruct MapPolygon\nA closed polygon overlay.\nstruct MapPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nstruct Marker\nA balloon-shaped annotation that marks a map location."
  },
  {
    "title": "Marker | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/marker",
    "html": "Overview\n\nUse this view to create marker instances in the closure you provide to the content parameter in the Map initializers.\n\nTopics\nCreating a marker\ninit<S>(S, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the label you provide.\ninit<S>(S, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and image resource to display as the balloon’s icon.\ninit<S>(S, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title and a system image the map displays as the balloon’s icon.\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the localized string key you provide.\ninit(LocalizedStringKey, image: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided localized title and image resource to display as the balloon’s icon.\ninit(LocalizedStringKey, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title key and monogram.\ninit<S>(S, monogram: Text, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with the provided title string and monogram.\ninit(LocalizedStringKey, systemImage: String, coordinate: CLLocationCoordinate2D)\nCreates a marker at the given location with a localized title, and a system image the map displays as the balloon’s icon.\ninit(coordinate: CLLocationCoordinate2D, label: () -> Label)\nCreates a marker at the given location with the provided label.\ninit(item: MKMapItem)\nCreates a marker for a given map item using a MapKit-provided label.\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations.\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations.\nStyling the marker\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content.\nSetting the tag\nfunc tag<V>(V) -> MapContent\nA value associated with a map content element that the framework uses to determine the selected annotation on the map.\nType aliases\ntypealias Marker.Body\nThe type of view that represents the body of this view.\nRelationships\nConforms To\nMapContent\nSee Also\nAnnotations and overlays\nstruct Annotation\nA customizable annotation used to indicate a location on a map.\nstruct MapCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nstruct MapPolygon\nA closed polygon overlay.\nstruct MapPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nstruct UserAnnotation\nDisplays the person’s current location on the map."
  },
  {
    "title": "MapCircle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapcircle",
    "html": "Overview\n\nUse this view to create circular overlays in the closure you provide to the content parameter in Map initializers.\n\nTopics\nCreating a map circle\ninit(MKCircle)\nCreates a circle overlay from an existing map circle object.\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates a circle with the center coordinate and radius you specify.\ninit(mapRect: MKMapRect)\nCreates the largest possible circle centered within the given map rectangle.\nStyling the circle\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style used to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to drawn map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nSets the line width used for drawing map overlays.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the given stroke style to drawn map overlays.\nSetting the overlay level\nfunc mapOverlayLevel(level: MKOverlayLevel) -> MapContent\nSpecifies the position of overlays relative to other map content.\nType aliases\ntypealias MapCircle.Body\nThe type of view that represents the body of this view.\nRelationships\nConforms To\nMapContent\nSee Also\nAnnotations and overlays\nstruct Annotation\nA customizable annotation used to indicate a location on a map.\nstruct MapPolygon\nA closed polygon overlay.\nstruct MapPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nstruct Marker\nA balloon-shaped annotation that marks a map location.\nstruct UserAnnotation\nDisplays the person’s current location on the map."
  },
  {
    "title": "MapPolygon | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mappolygon",
    "html": "Overview\n\nUse this view to create map polygons instances in the closure you provide to the content parameter in the Map initializers.\n\nTopics\nCreating a map polygon\ninit(coordinates: [CLLocationCoordinate2D])\nCreates a polygon from a list of coordinates you provide.\ninit(points: [MKMapPoint])\nCreates a polygon from a list of map points.\ninit(MKPolygon)\nCreates a polygon from the polygon you provide.\nStyling the polygon\nfunc foregroundStyle(some ShapeStyle) -> MapContent\nSpecifies the shape style to use to fill content when drawing map overlays.\nfunc stroke(some ShapeStyle, lineWidth: CGFloat) -> MapContent\nApplies the given shape style to draw map overlays using the line width you specify.\nfunc stroke(some ShapeStyle, style: StrokeStyle) -> MapContent\nApplies the given shape style to drawn map overlays using the stroke style you specify.\nfunc stroke(lineWidth: CGFloat) -> MapContent\nApplies the given stroke drawn map overlays using the line width you specify.\nfunc strokeStyle(style: StrokeStyle) -> MapContent\nApplies the stroke style you provide to drawn map overlays.\nfunc tint<S>(S) -> MapContent\nThe tint shape style to apply to map content.\nSetting the overlay level\nfunc mapOverlayLevel(level: MKOverlayLevel) -> MapContent\nSpecifies the position of overlays relative to other map content.\nType aliases\ntypealias MapPolygon.Body\nThe type of view representing the body of this view.\nRelationships\nConforms To\nMapContent\nSee Also\nAnnotations and overlays\nstruct Annotation\nA customizable annotation used to indicate a location on a map.\nstruct MapCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nstruct MapPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nstruct Marker\nA balloon-shaped annotation that marks a map location.\nstruct UserAnnotation\nDisplays the person’s current location on the map."
  },
  {
    "title": "Map | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/map",
    "html": "Overview\n\nUse this SwiftUI view to display a Map with markers, annotations, and custom content you provide. You can configure the Map to optionally display the user’s location, track a location, and display various controls to allow them to interact with and control the map’s display. The following example displays a map of downtown San Francisco that shows different markers, and an annotation with custom view content at specific locations:\n\n    struct ContentView: View {\n        var body: some View {\n            Map {\n                Marker(\"San Francisco City Hall\", coordinate: cityHallLocation)\n                    .tint(.orange)\n                Marker(\"San Francisco Public Library\", coordinate: publicLibraryLocation)\n                    .tint(.blue)\n                Annotation(\"Diller Civic Center Playground\", coordinate: playgroundLocation) {\n                    ZStack {\n                        RoundedRectangle(cornerRadius: 5)\n                            .fill(Color.yellow)\n                        Text(\"🛝\")\n                            .padding(5)\n                    }\n                }\n            }\n            .mapControlVisibility(.hidden)\n        }\n    }\n\n\nYou create markers, annotations, and overlays using MapContentBuilder with any of several MapContent types including:\n\nAnnotation\n\nUserAnnotation\n\nMarker\n\nMapCircle\n\nMapPolygon\n\nMapPolyline\n\nYou can also add a variety of controls to allow a person to interact with the map to change the map’s scale, display or hide the device’s current location, and so on:\n\nMapCompass\n\nMapPitchButton\n\nMapPitchSlider\n\nMapScaleView\n\nMapUserLocationButton\n\nMapZoomStepper\n\nTopics\nCreating a map\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, scope, and content you provide.\ninit(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, a binding to a map feature, and scope you provide.\ninit<SelectedValue>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?)\nCreates a new, empty map with the bounds, interaction modes, the selected map feature, and scope you provide.\ninit<C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected map feature, scope, and map content you provide.\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the bounds, interaction modes, selected value, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and map content you provide.\ninit(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, selected map feature, and scope you provide.\ninit<C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected map feature, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?)\nCreates a new, empty map with the initial camera position, bounds, interaction modes, and scope you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?)\nCreates a new map with the initial camera position, bounds, interaction modes, scope, and content you provide.\ninit<C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<MapFeature?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nCreates a new map with the initial camera position, bounds, interaction modes, selected feature, scope, and content you provide.\nstruct MapInteractionModes\nOptions that indicate the user interactions that the map responds to.\nAccessing the view body\nvar body: View\nThe content and behavior of the view.\nManaging feature selection\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nSpecifies a custom presentation for the currently selected feature.\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nSpecifies which map features should have selection disabled.\nManaging Look Around view presentation\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with the scene, navigation, road label, and points of interest characteristics you provide.\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nPresents a Look Around view with a binding to a scene, and navigation, road label, and points of interest characteristics you provide.\nManaging map control sizing and visibility\nfunc mapControlVisibility(Visibility) -> View\nConfigures all Map controls in the environment to have the specified visibility.\nfunc mapControls(() -> some View) -> View\nConfigures all map views in the associated environment to have standard sized and positioned controls.\nManaging the camera\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nUses the keyframes you provide to animate the camera of a map when the value you provide changes.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nPerforms an action when Map camera framing changes that calls a closure that provides the map camera and the area the camera frames.\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nPerforms an action when Map camera framing changes.\nSetting the namespace Identifier\nfunc mapScope(Namespace.ID) -> View\nCreates a namespace that SwiftUI uses to connect map controls to an associated map.\nSetting the map style\nfunc mapStyle(MapStyle) -> View\nSpecifies the map style to use.\nType aliases\ntypealias Map.Body\nThe content and behavior of the view.\nDeprecated\nDeprecated Symbols\nMap protocols and view modifiers that are no longer supported.\nInitializers\ninit<SelectedValue, C>(bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\ninit<SelectedValue, C>(initialPosition: MapCameraPosition, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\ninit<SelectedValue, C>(position: Binding<MapCameraPosition>, bounds: MapCameraBounds?, interactionModes: MapInteractionModes, selection: Binding<SelectedValue?>, scope: Namespace.ID?, content: () -> C)\nInstance Methods\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nRelationships\nConforms To\nView\nSee Also\nEssentials\nstruct MapStyle\nA style that you can apply to a map."
  },
  {
    "title": "Annotation | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/annotation",
    "html": "Overview\n\nUse this view to annotations in the closure you provide to the content parameter in the Map initializers.\n\nTopics\nCreating annotations\ninit(LocalizedStringKey, coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content)\nCreates an annotation that displays a view at a coordinate on the map.\ninit<S>(S, coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content)\nCreates an annotation that displays a view at a coordinate on the map using a title key, coordinate, anchor location, and view you provide.\ninit(coordinate: CLLocationCoordinate2D, anchor: UnitPoint, content: () -> Content, label: () -> Label)\nCreates an annotation that displays a view on the map using coordinates, anchor location, view, and label you provide.\nSetting the visibility of the title and subtitle\nfunc annotationTitles(Visibility) -> MapContent\nSets the visibility state of titles for markers and annotations.\nfunc annotationSubtitles(Visibility) -> MapContent\nSets the visibility state of subtitles for markers and annotations.\nSetting the tag\nfunc tag<V>(V) -> MapContent\nA value associated with a map content element that the framework uses to determine the selected annotation on the map.\nType aliases\ntypealias Annotation.Body\nThe type of view that represents the body of this view.\nRelationships\nConforms To\nMapContent\nSee Also\nAnnotations and overlays\nstruct MapCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nstruct MapPolygon\nA closed polygon overlay.\nstruct MapPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nstruct Marker\nA balloon-shaped annotation that marks a map location.\nstruct UserAnnotation\nDisplays the person’s current location on the map."
  },
  {
    "title": "MapStyle | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapstyle",
    "html": "Topics\nCreating map styles\nstatic func hybrid(elevation: MapStyle.Elevation, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a hybrid map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstatic func imagery(elevation: MapStyle.Elevation) -> MapStyle\nCreates a map style based on satellite imagery with the elevation characteristics you specify.\nstatic func standard(elevation: MapStyle.Elevation, emphasis: MapStyle.StandardEmphasis, pointsOfInterest: PointOfInterestCategories, showsTraffic: Bool) -> MapStyle\nCreates a standard map style that includes the elevation, point of interest, and traffic characteristics you specify.\nstruct MapStyle.Elevation\nValues you use to determine whether a map renders elevation.\nstruct MapStyle.StandardEmphasis\nValues that control how the framework emphasizes map features.\nMap styles\nstatic var hybrid: MapStyle\nA map style that represents a satellite image of the area, including the paths of roads with their names layered on top.\nstatic var imagery: MapStyle\nA map style that represents a satellite image of the area the map displays.\nstatic var standard: MapStyle\nA map style that represents the default map presentation, which is a street map that shows the position of all roads and some road names, depending upon the zoom level of the map.\nSee Also\nEssentials\nstruct Map\nA view that displays an embedded map interface."
  },
  {
    "title": "init(_:) | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapselectable/4292642-init",
    "html": "Required"
  },
  {
    "title": "feature | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapselectable/4292641-feature",
    "html": "Required"
  },
  {
    "title": "MKLocalPointsOfInterestRequest | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalpointsofinterestrequest",
    "html": "Overview\n\nYou create an MKLocalPointsOfInterestRequest to fetch points of interest within a rectangular bounding box or circular area.\n\nTo leverage the phone’s viewport to request points of interest, create a request with a rectangular bounding box using an MKCoordinateRegion. The request fetches points of interest within the rectangular region.\n\nTo retrieve points of interest nearby or “around the user,” create a request with a circular area defined by CLLocationCoordinate2D and a CLLocationDistance in meters. The fetch returns points of interest up to the maximum distance defined by maxRadius.\n\nYou may optionally specifying an MKPointOfInterestFilter describing categories to include or exclude. The default behavior of the fetch returns all points of interest.\n\nTopics\nCreating a point of interest request\ninit(center: CLLocationCoordinate2D, radius: CLLocationDistance)\nCreates a points of interest search request centered on the provided coordinate with the provided radius.\ninit(coordinateRegion: MKCoordinateRegion)\nCreates a points of interest search request based on existing region.\nConfiguring the request parameters\nvar region: MKCoordinateRegion\nThe region of the bounding box of the request provided or the derived bounding box of the circle created by the radius.\nvar coordinate: CLLocationCoordinate2D\nThe center of the point of request as latitude and longitude.\nvar radius: CLLocationDistance\nThe distance provided in meters or the longest distance derived from the center point to the region’s bounding box.\nvar pointOfInterestFilter: MKPointOfInterestFilter?\nA filter that lists points of interest categories to include or exclude.\nGetting the maximum radius\nclass let maxRadius: CLLocationDistance\nThe maximum distance respected for fetching points of interest from the center of the region.\nRelationships\nInherits From\nNSObject\nConforms To\nNSCopying\nSee Also\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nclass MKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nclass MKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions.\nclass MKLocalSearchCompletion\nA fully formed string that completes a partial string."
  },
  {
    "title": "MKLocalSearch.ResultType | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mklocalsearch/resulttype",
    "html": "Overview\n\nThese options configure the types of search results you want to receive from MKLocalSearch.Request, including points of interest and addresses.\n\nTopics\nInitializers\ninit(rawValue: UInt)\nCreates a search result type from the provided value.\nSpecifying types of search results\nstatic var address: MKLocalSearch.ResultType\nA value that indicates that search results include addresses.\nstatic var pointOfInterest: MKLocalSearch.ResultType\nA value that indicates that search results include points of interest.\nRelationships\nConforms To\nOptionSet\nSendable\nSee Also\nCreating a search request\ninit(request: MKLocalSearch.Request)\nCreates and returns a search object with the specified parameters.\ninit(request: MKLocalPointsOfInterestRequest)\nCreates and returns a search object for fetching points of interest.\nclass MKLocalSearch.Request\nThe parameters to use when searching for points of interest on the map."
  },
  {
    "title": "MKUserTrackingButton | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mkusertrackingbutton",
    "html": "Overview\n\nUse this class when you need a standard button that you can incorporate into your view hierarchy. Tapping the button lets the user toggles between modes for displaying the map with and without the current heading applied. The button also reflects the current user tracking mode if set elsewhere.\n\nTopics\nCreating a user tracking button\ninit(mapView: MKMapView?)\nInitializes the button with the map view that it should control.\nGetting the parent map\nvar mapView: MKMapView?\nThe map view associated with the button.\nRelationships\nInherits From\nUIView\nSee Also\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing."
  },
  {
    "title": "MapSelectableContentView | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapselectablecontentview",
    "html": "Topics\nType Aliases\ntypealias MapSelectableContentView.Body\nInstance Properties\nvar body: View\nInstance Methods\nfunc accentColor(Color?) -> View\nfunc accessibility(activationPoint: UnitPoint) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(activationPoint: CGPoint) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(addTraits: AccessibilityTraits) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(hidden: Bool) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(hint: Text) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(identifier: String) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(inputLabels: [Text]) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(label: Text) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(removeTraits: AccessibilityTraits) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(selectionIdentifier: AnyHashable) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nDeprecated\nfunc accessibility(sortPriority: Double) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibility(value: Text) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityAction(AccessibilityActionKind, () -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityAction<Label>(action: () -> Void, label: () -> Label) -> View\nfunc accessibilityAction(named: LocalizedStringKey, () -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityAction(named: Text, () -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityAction<S>(named: S, () -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityActions<Content>(() -> Content) -> View\nfunc accessibilityActivationPoint(UnitPoint) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityActivationPoint(CGPoint) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityAddTraits(AccessibilityTraits) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityAdjustableAction((AccessibilityAdjustmentDirection) -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityChartDescriptor<R>(R) -> View\nfunc accessibilityChildren<V>(children: () -> V) -> View\nfunc accessibilityCustomContent(AccessibilityCustomContentKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityCustomContent(AccessibilityCustomContentKey, Text?, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityCustomContent<V>(AccessibilityCustomContentKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityCustomContent(LocalizedStringKey, Text, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityCustomContent(LocalizedStringKey, LocalizedStringKey, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityCustomContent<V>(LocalizedStringKey, V, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityCustomContent(Text, Text, importance: AXCustomContent.Importance) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityDirectTouch(Bool, options: AccessibilityDirectTouchOptions) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityElement(children: AccessibilityChildBehavior) -> View\nfunc accessibilityFocused(AccessibilityFocusState<Bool>.Binding) -> View\nfunc accessibilityFocused<Value>(AccessibilityFocusState<Value>.Binding, equals: Value) -> View\nfunc accessibilityHeading(AccessibilityHeadingLevel) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityHidden(Bool) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityHint(LocalizedStringKey) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityHint(Text) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityHint<S>(S) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityIdentifier(String) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityIgnoresInvertColors(Bool) -> View\nfunc accessibilityInputLabels([LocalizedStringKey]) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityInputLabels([Text]) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityInputLabels<S>([S]) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityLabel(LocalizedStringKey) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityLabel(Text) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityLabel<S>(S) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityLabeledPair<ID>(role: AccessibilityLabeledPairRole, id: ID, in: Namespace.ID) -> View\nfunc accessibilityLinkedGroup<ID>(id: ID, in: Namespace.ID) -> View\nfunc accessibilityRemoveTraits(AccessibilityTraits) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityRepresentation<V>(representation: () -> V) -> View\nfunc accessibilityRespondsToUserInteraction(Bool) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityRotor<Content>(AccessibilitySystemRotor, entries: () -> Content) -> View\nfunc accessibilityRotor<Content>(LocalizedStringKey, entries: () -> Content) -> View\nfunc accessibilityRotor<Content>(Text, entries: () -> Content) -> View\nfunc accessibilityRotor<L, Content>(L, entries: () -> Content) -> View\nfunc accessibilityRotor<EntryModel, ID>(AccessibilitySystemRotor, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<EntryModel, ID>(LocalizedStringKey, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<EntryModel, ID>(Text, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<L, EntryModel, ID>(L, entries: [EntryModel], entryID: KeyPath<EntryModel, ID>, entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<EntryModel>(AccessibilitySystemRotor, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<EntryModel>(LocalizedStringKey, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<EntryModel>(Text, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor<L, EntryModel>(L, entries: [EntryModel], entryLabel: KeyPath<EntryModel, String>) -> View\nfunc accessibilityRotor(AccessibilitySystemRotor, textRanges: [Range<String.Index>]) -> View\nfunc accessibilityRotor(LocalizedStringKey, textRanges: [Range<String.Index>]) -> View\nfunc accessibilityRotor(Text, textRanges: [Range<String.Index>]) -> View\nfunc accessibilityRotor<L>(L, textRanges: [Range<String.Index>]) -> View\nfunc accessibilityRotorEntry<ID>(id: ID, in: Namespace.ID) -> View\nfunc accessibilityScrollAction((Edge) -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityShowsLargeContentViewer() -> View\nfunc accessibilityShowsLargeContentViewer<V>(() -> V) -> View\nfunc accessibilitySortPriority(Double) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityTextContentType(AccessibilityTextContentType) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityValue(LocalizedStringKey) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityValue(Text) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityValue<S>(S) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc accessibilityZoomAction((AccessibilityZoomGestureAction) -> Void) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, AccessibilityAttachmentModifier>\nfunc actionSheet(isPresented: Binding<Bool>, content: () -> ActionSheet) -> View\nfunc actionSheet<T>(item: Binding<T?>, content: (T) -> ActionSheet) -> View\nfunc alert<A>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A) -> View\nfunc alert<A>(Text, isPresented: Binding<Bool>, actions: () -> A) -> View\nfunc alert<S, A>(S, isPresented: Binding<Bool>, actions: () -> A) -> View\nfunc alert<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> View\nfunc alert<A, M>(Text, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> View\nfunc alert<S, A, M>(S, isPresented: Binding<Bool>, actions: () -> A, message: () -> M) -> View\nfunc alert<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> View\nfunc alert<A, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> View\nfunc alert<S, A, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A) -> View\nfunc alert<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> View\nfunc alert<A, M, T>(Text, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> View\nfunc alert<S, A, M, T>(S, isPresented: Binding<Bool>, presenting: T?, actions: (T) -> A, message: (T) -> M) -> View\nfunc alert(isPresented: Binding<Bool>, content: () -> Alert) -> View\nfunc alert<E, A>(isPresented: Binding<Bool>, error: E?, actions: () -> A) -> View\nfunc alert<E, A, M>(isPresented: Binding<Bool>, error: E?, actions: (E) -> A, message: (E) -> M) -> View\nfunc alert<Item>(item: Binding<Item?>, content: (Item) -> Alert) -> View\nfunc alignmentGuide(VerticalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> View\nfunc alignmentGuide(HorizontalAlignment, computeValue: (ViewDimensions) -> CGFloat) -> View\nfunc allowedDynamicRange(Image.DynamicRange?) -> View\nfunc allowsHitTesting(Bool) -> View\nfunc allowsTightening(Bool) -> View\nfunc anchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (Anchor<A>) -> K.Value) -> View\nfunc animation(Animation?) -> View\nDeprecated\nfunc animation<V>(Animation?, body: (PlaceholderContentView<MapSelectableContentView<SelectionValue, Content>>) -> V) -> View\nfunc animation<V>(Animation?, value: V) -> View\nfunc aspectRatio(CGFloat?, contentMode: ContentMode) -> View\nfunc aspectRatio(CGSize, contentMode: ContentMode) -> View\nfunc autocapitalization(UITextAutocapitalizationType) -> View\nfunc autocorrectionDisabled(Bool) -> View\nfunc background<Background>(Background, alignment: Alignment) -> View\nfunc background<S>(S, ignoresSafeAreaEdges: Edge.Set) -> View\nfunc background<S, T>(S, in: T, fillStyle: FillStyle) -> View\nfunc background<S, T>(S, in: T, fillStyle: FillStyle) -> View\nfunc background<V>(alignment: Alignment, content: () -> V) -> View\nfunc background(ignoresSafeAreaEdges: Edge.Set) -> View\nfunc background<S>(in: S, fillStyle: FillStyle) -> View\nfunc background<S>(in: S, fillStyle: FillStyle) -> View\nfunc backgroundPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> View\nfunc backgroundPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> View\nfunc backgroundStyle<S>(S) -> View\nfunc badge(LocalizedStringKey?) -> View\nfunc badge(Text?) -> View\nfunc badge(Int) -> View\nfunc badge<S>(S?) -> View\nfunc badgeProminence(BadgeProminence) -> View\nfunc baselineOffset(CGFloat) -> View\nfunc blendMode(BlendMode) -> View\nfunc blur(radius: CGFloat, opaque: Bool) -> View\nfunc bold(Bool) -> View\nfunc border<S>(S, width: CGFloat) -> View\nfunc brightness(Double) -> View\nfunc buttonBorderShape(ButtonBorderShape) -> View\nfunc buttonRepeatBehavior(ButtonRepeatBehavior) -> View\nfunc buttonStyle<S>(S) -> View\nfunc buttonStyle<S>(S) -> View\nfunc clipShape<S>(S, style: FillStyle) -> View\nfunc clipped(antialiased: Bool) -> View\nfunc colorEffect(Shader, isEnabled: Bool) -> View\nfunc colorInvert() -> View\nfunc colorMultiply(Color) -> View\nfunc colorScheme(ColorScheme) -> View\nfunc compositingGroup() -> View\nfunc confirmationDialog<A>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> View\nfunc confirmationDialog<A>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> View\nfunc confirmationDialog<S, A>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A) -> View\nfunc confirmationDialog<A, M>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> View\nfunc confirmationDialog<A, M>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> View\nfunc confirmationDialog<S, A, M>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, actions: () -> A, message: () -> M) -> View\nfunc confirmationDialog<A, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> View\nfunc confirmationDialog<A, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> View\nfunc confirmationDialog<S, A, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A) -> View\nfunc confirmationDialog<A, M, T>(LocalizedStringKey, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> View\nfunc confirmationDialog<A, M, T>(Text, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> View\nfunc confirmationDialog<S, A, M, T>(S, isPresented: Binding<Bool>, titleVisibility: Visibility, presenting: T?, actions: (T) -> A, message: (T) -> M) -> View\nfunc containerBackground<S>(S, for: ContainerBackgroundPlacement) -> View\nfunc containerBackground<V>(for: ContainerBackgroundPlacement, alignment: Alignment, content: () -> V) -> View\nfunc containerRelativeFrame(Axis.Set, alignment: Alignment) -> View\nfunc containerRelativeFrame(Axis.Set, alignment: Alignment, (CGFloat, Axis) -> CGFloat) -> View\nfunc containerRelativeFrame(Axis.Set, count: Int, span: Int, spacing: CGFloat, alignment: Alignment) -> View\nfunc containerShape<T>(T) -> View\nfunc contentMargins(Edge.Set, CGFloat?, for: ContentMarginPlacement) -> View\nfunc contentMargins(Edge.Set, EdgeInsets, for: ContentMarginPlacement) -> View\nfunc contentMargins(CGFloat, for: ContentMarginPlacement) -> View\nfunc contentShape<S>(ContentShapeKinds, S, eoFill: Bool) -> View\nfunc contentShape<S>(S, eoFill: Bool) -> View\nfunc contentTransition(ContentTransition) -> View\nfunc contextMenu<MenuItems>(ContextMenu<MenuItems>?) -> View\nfunc contextMenu<I, M>(forSelectionType: I.Type, menu: (Set<I>) -> M, primaryAction: ((Set<I>) -> Void)?) -> View\nfunc contextMenu<MenuItems>(menuItems: () -> MenuItems) -> View\nfunc contextMenu<M, P>(menuItems: () -> M, preview: () -> P) -> View\nfunc contrast(Double) -> View\nfunc controlGroupStyle<S>(S) -> View\nfunc controlSize(ControlSize) -> View\nfunc coordinateSpace(NamedCoordinateSpace) -> View\nfunc coordinateSpace<T>(name: T) -> View\nfunc cornerRadius(CGFloat, antialiased: Bool) -> View\nfunc datePickerStyle<S>(S) -> View\nfunc defaultAppStorage(UserDefaults) -> View\nfunc defaultFocus<V>(FocusState<V>.Binding, V, priority: DefaultFocusEvaluationPriority) -> View\nfunc defaultHoverEffect(HoverEffect?) -> View\nfunc defaultScrollAnchor(UnitPoint?) -> View\nfunc defersSystemGestures(on: Edge.Set) -> View\nfunc deleteDisabled(Bool) -> View\nfunc dialogIcon(Image?) -> View\nfunc dialogSuppressionToggle(LocalizedStringKey, isSuppressed: Binding<Bool>) -> View\nfunc dialogSuppressionToggle(Text, isSuppressed: Binding<Bool>) -> View\nfunc dialogSuppressionToggle<S>(S, isSuppressed: Binding<Bool>) -> View\nfunc dialogSuppressionToggle(isSuppressed: Binding<Bool>) -> View\nfunc disableAutocorrection(Bool?) -> View\nfunc disabled(Bool) -> View\nfunc disclosureGroupStyle<S>(S) -> View\nfunc distortionEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> View\nfunc draggable<T>(() -> T) -> View\nfunc draggable<V, T>(() -> T, preview: () -> V) -> View\nfunc drawingGroup(opaque: Bool, colorMode: ColorRenderingMode) -> View\nfunc dropDestination<T>(for: T.Type, action: ([T], CGPoint) -> Bool, isTargeted: (Bool) -> Void) -> View\nfunc dynamicTypeSize(DynamicTypeSize) -> View\nfunc edgesIgnoringSafeArea(Edge.Set) -> View\nfunc environment<T>(T?) -> View\nfunc environment<V>(WritableKeyPath<EnvironmentValues, V>, V) -> View\nfunc environmentObject<T>(T) -> View\nfunc fileDialogBrowserOptions(FileDialogBrowserOptions) -> View\nfunc fileDialogConfirmationLabel(LocalizedStringKey) -> View\nfunc fileDialogConfirmationLabel(Text?) -> View\nfunc fileDialogConfirmationLabel<S>(S) -> View\nfunc fileDialogCustomizationID(String) -> View\nfunc fileDialogDefaultDirectory(URL?) -> View\nfunc fileDialogImportsUnresolvedAliases(Bool) -> View\nfunc fileDialogMessage(LocalizedStringKey) -> View\nfunc fileDialogMessage(Text?) -> View\nfunc fileDialogMessage<S>(S) -> View\nfunc fileDialogURLEnabled(Predicate<URL>) -> View\nfunc fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> View\nfunc fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentType: UTType, defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void) -> View\nfunc fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<D>(isPresented: Binding<Bool>, document: D?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> View\nfunc fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentType: UTType, onCompletion: (Result<[URL], Error>) -> Void) -> View\nfunc fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<C>(isPresented: Binding<Bool>, documents: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<T>(isPresented: Binding<Bool>, item: T?, contentTypes: [UTType], defaultFilename: String?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporter<C, T>(isPresented: Binding<Bool>, items: C, contentTypes: [UTType], onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileExporterFilenameLabel(LocalizedStringKey) -> View\nfunc fileExporterFilenameLabel(Text?) -> View\nfunc fileExporterFilenameLabel<S>(S) -> View\nfunc fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void) -> View\nfunc fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], allowsMultipleSelection: Bool, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileImporter(isPresented: Binding<Bool>, allowedContentTypes: [UTType], onCompletion: (Result<URL, Error>) -> Void) -> View\nfunc fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void) -> View\nfunc fileMover(isPresented: Binding<Bool>, file: URL?, onCompletion: (Result<URL, Error>) -> Void, onCancellation: () -> Void) -> View\nfunc fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void) -> View\nfunc fileMover<C>(isPresented: Binding<Bool>, files: C, onCompletion: (Result<[URL], Error>) -> Void, onCancellation: () -> Void) -> View\nfunc findDisabled(Bool) -> View\nfunc findNavigator(isPresented: Binding<Bool>) -> View\nfunc fixedSize() -> View\nfunc fixedSize(horizontal: Bool, vertical: Bool) -> View\nfunc flipsForRightToLeftLayoutDirection(Bool) -> View\nfunc focusEffectDisabled(Bool) -> View\nfunc focusable(Bool) -> View\nfunc focusable(Bool, interactions: FocusInteractions) -> View\nfunc focused(FocusState<Bool>.Binding) -> View\nfunc focused<Value>(FocusState<Value>.Binding, equals: Value) -> View\nfunc focusedObject<T>(T) -> View\nfunc focusedObject<T>(T?) -> View\nfunc focusedSceneObject<T>(T) -> View\nfunc focusedSceneObject<T>(T?) -> View\nfunc focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T?) -> View\nfunc focusedSceneValue<T>(WritableKeyPath<FocusedValues, T?>, T) -> View\nfunc focusedValue<T>(T?) -> View\nfunc focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value?) -> View\nfunc focusedValue<Value>(WritableKeyPath<FocusedValues, Value?>, Value) -> View\nfunc font(Font?) -> View\nfunc fontDesign(Font.Design?) -> View\nfunc fontWeight(Font.Weight?) -> View\nfunc fontWidth(Font.Width?) -> View\nfunc foregroundColor(Color?) -> View\nfunc foregroundStyle<S>(S) -> View\nfunc foregroundStyle<S1, S2>(S1, S2) -> View\nfunc foregroundStyle<S1, S2, S3>(S1, S2, S3) -> View\nfunc formStyle<S>(S) -> View\nfunc frame() -> View\nDeprecated\nfunc frame(depth: CGFloat?, alignment: DepthAlignment) -> View\nfunc frame(minDepth: CGFloat?, idealDepth: CGFloat?, maxDepth: CGFloat?, alignment: DepthAlignment) -> View\nfunc frame(minWidth: CGFloat?, idealWidth: CGFloat?, maxWidth: CGFloat?, minHeight: CGFloat?, idealHeight: CGFloat?, maxHeight: CGFloat?, alignment: Alignment) -> View\nfunc frame(width: CGFloat?, height: CGFloat?, alignment: Alignment) -> View\nfunc fullScreenCover<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> View\nfunc fullScreenCover<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> View\nfunc gaugeStyle<S>(S) -> View\nfunc geometryGroup() -> View\nfunc gesture<T>(T, including: GestureMask) -> View\nfunc glassBackgroundEffect(displayMode: GlassBackgroundDisplayMode) -> View\nfunc glassBackgroundEffect<S>(in: S, displayMode: GlassBackgroundDisplayMode) -> View\nfunc grayscale(Double) -> View\nfunc gridCellAnchor(UnitPoint) -> View\nfunc gridCellColumns(Int) -> View\nfunc gridCellUnsizedAxes(Axis.Set) -> View\nfunc gridColumnAlignment(HorizontalAlignment) -> View\nfunc groupBoxStyle<S>(S) -> View\nfunc handlesExternalEvents(preferring: Set<String>, allowing: Set<String>) -> View\nfunc headerProminence(Prominence) -> View\nfunc help(LocalizedStringKey) -> View\nfunc help(Text) -> View\nfunc help<S>(S) -> View\nfunc hidden() -> View\nfunc highPriorityGesture<T>(T, including: GestureMask) -> View\nfunc hoverEffect(HoverEffect) -> View\nfunc hoverEffect(HoverEffect, isEnabled: Bool) -> View\nfunc hoverEffectDisabled(Bool) -> View\nfunc hueRotation(Angle) -> View\nfunc id<ID>(ID) -> View\nfunc ignoresSafeArea(SafeAreaRegions, edges: Edge.Set) -> View\nfunc imageScale(Image.Scale) -> View\nfunc indexViewStyle<S>(S) -> View\nfunc inspector<V>(isPresented: Binding<Bool>, content: () -> V) -> View\nfunc inspectorColumnWidth(CGFloat) -> View\nfunc inspectorColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> View\nfunc interactionActivityTrackingTag(String) -> View\nfunc interactiveDismissDisabled(Bool) -> View\nfunc invalidatableContent(Bool) -> View\nfunc italic(Bool) -> View\nfunc itemProvider(Optional<() -> NSItemProvider?>) -> View\nfunc kerning(CGFloat) -> View\nfunc keyboardShortcut(KeyboardShortcut) -> View\nfunc keyboardShortcut(KeyboardShortcut?) -> View\nfunc keyboardShortcut(KeyEquivalent, modifiers: EventModifiers) -> View\nfunc keyboardShortcut(KeyEquivalent, modifiers: EventModifiers, localization: KeyboardShortcut.Localization) -> View\nfunc keyboardType(UIKeyboardType) -> View\nfunc keyframeAnimator<Value>(initialValue: Value, repeating: Bool, content: (PlaceholderContentView<MapSelectableContentView<SelectionValue, Content>>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> View\nfunc keyframeAnimator<Value>(initialValue: Value, trigger: some Equatable, content: (PlaceholderContentView<MapSelectableContentView<SelectionValue, Content>>, Value) -> some View, keyframes: (Value) -> some Keyframes) -> View\nfunc labelStyle<S>(S) -> View\nfunc labeledContentStyle<S>(S) -> View\nfunc labelsHidden() -> View\nfunc layerEffect(Shader, maxSampleOffset: CGSize, isEnabled: Bool) -> View\nfunc layoutDirectionBehavior(LayoutDirectionBehavior) -> View\nfunc layoutPriority(Double) -> View\nfunc layoutValue<K>(key: K.Type, value: K.Value) -> View\nfunc lineLimit(ClosedRange<Int>) -> View\nfunc lineLimit(Int?) -> View\nfunc lineLimit(PartialRangeFrom<Int>) -> View\nfunc lineLimit(PartialRangeThrough<Int>) -> View\nfunc lineLimit(Int, reservesSpace: Bool) -> View\nfunc lineSpacing(CGFloat) -> View\nfunc listItemTint(ListItemTint?) -> View\nfunc listItemTint(Color?) -> View\nfunc listRowBackground<V>(V?) -> View\nfunc listRowHoverEffect(HoverEffect?) -> View\nfunc listRowHoverEffectDisabled(Bool) -> View\nfunc listRowInsets(EdgeInsets?) -> View\nfunc listRowSeparator(Visibility, edges: VerticalEdge.Set) -> View\nfunc listRowSeparatorTint(Color?, edges: VerticalEdge.Set) -> View\nfunc listRowSpacing(CGFloat?) -> View\nfunc listSectionSeparator(Visibility, edges: VerticalEdge.Set) -> View\nfunc listSectionSeparatorTint(Color?, edges: VerticalEdge.Set) -> View\nfunc listSectionSpacing(CGFloat) -> View\nfunc listSectionSpacing(ListSectionSpacing) -> View\nfunc listStyle<S>(S) -> View\nfunc lookAroundViewer(isPresented: Binding<Bool>, initialScene: MKLookAroundScene?, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nfunc lookAroundViewer(isPresented: Binding<Bool>, scene: Binding<MKLookAroundScene?>, allowsNavigation: Bool, showsRoadLabels: Bool, pointsOfInterest: PointOfInterestCategories, onDismiss: (() -> Void)?) -> View\nfunc luminanceToAlpha() -> View\nfunc mapCameraKeyframeAnimator(trigger: some Equatable, keyframes: (MapCamera) -> some Keyframes<MapCamera>) -> View\nfunc mapControlVisibility(Visibility) -> View\nfunc mapControls(() -> some View) -> View\nfunc mapFeatureSelectionContent(content: (MapFeature) -> some MapContent) -> View\nfunc mapFeatureSelectionDisabled((MapFeature) -> Bool) -> View\nfunc mapScope(Namespace.ID) -> View\nfunc mapStyle(MapStyle) -> View\nfunc mask<Mask>(Mask) -> View\nfunc mask<Mask>(alignment: Alignment, () -> Mask) -> View\nfunc matchedGeometryEffect<ID>(id: ID, in: Namespace.ID, properties: MatchedGeometryProperties, anchor: UnitPoint, isSource: Bool) -> View\nfunc menuActionDismissBehavior(MenuActionDismissBehavior) -> View\nfunc menuIndicator(Visibility) -> View\nfunc menuOrder(MenuOrder) -> View\nfunc menuStyle<S>(S) -> View\nfunc minimumScaleFactor(CGFloat) -> View\nfunc modifier<T>(T) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, T>\nfunc monospaced(Bool) -> View\nfunc monospacedDigit() -> View\nfunc moveDisabled(Bool) -> View\nfunc multilineTextAlignment(TextAlignment) -> View\nfunc navigationBarBackButtonHidden(Bool) -> View\nfunc navigationBarHidden(Bool) -> View\nfunc navigationBarItems<L>(leading: L) -> View\nfunc navigationBarItems<L, T>(leading: L, trailing: T) -> View\nfunc navigationBarItems<T>(trailing: T) -> View\nfunc navigationBarTitle(LocalizedStringKey) -> View\nfunc navigationBarTitle(Text) -> View\nfunc navigationBarTitle<S>(S) -> View\nfunc navigationBarTitle(LocalizedStringKey, displayMode: NavigationBarItem.TitleDisplayMode) -> View\nfunc navigationBarTitle(Text, displayMode: NavigationBarItem.TitleDisplayMode) -> View\nfunc navigationBarTitle<S>(S, displayMode: NavigationBarItem.TitleDisplayMode) -> View\nfunc navigationBarTitleDisplayMode(NavigationBarItem.TitleDisplayMode) -> View\nfunc navigationDestination<D, C>(for: D.Type, destination: (D) -> C) -> View\nfunc navigationDestination<V>(isPresented: Binding<Bool>, destination: () -> V) -> View\nfunc navigationDestination<D, C>(item: Binding<Optional<D>>, destination: (D) -> C) -> View\nfunc navigationDocument(URL) -> View\nfunc navigationDocument<D, I1, I2>(D, preview: SharePreview<I1, I2>) -> View\nfunc navigationDocument<D, I>(D, preview: SharePreview<I, Never>) -> View\nfunc navigationDocument<D>(D, preview: SharePreview<Never, Never>) -> View\nfunc navigationDocument<D, I>(D, preview: SharePreview<Never, I>) -> View\nfunc navigationSplitViewColumnWidth(CGFloat) -> View\nfunc navigationSplitViewColumnWidth(min: CGFloat?, ideal: CGFloat, max: CGFloat?) -> View\nfunc navigationSplitViewStyle<S>(S) -> View\nfunc navigationSubtitle(LocalizedStringKey) -> View\nfunc navigationSubtitle(Text) -> View\nfunc navigationSubtitle<S>(S) -> View\nfunc navigationTitle(LocalizedStringKey) -> View\nfunc navigationTitle(Text) -> View\nfunc navigationTitle(Binding<String>) -> View\nfunc navigationTitle<S>(S) -> View\nfunc navigationViewStyle<S>(S) -> View\nfunc offset(CGSize) -> View\nfunc offset(x: CGFloat, y: CGFloat) -> View\nfunc offset(z: CGFloat) -> View\nfunc onAppear(perform: (() -> Void)?) -> View\nfunc onChange<V>(of: V, initial: Bool, (V, V) -> Void) -> View\nfunc onChange<V>(of: V, initial: Bool, () -> Void) -> View\nfunc onChange<V>(of: V, perform: (V) -> Void) -> View\nDeprecated\nfunc onContinueUserActivity(String, perform: (NSUserActivity) -> ()) -> View\nfunc onContinuousHover(coordinateSpace: CoordinateSpace, perform: (HoverPhase) -> Void) -> View\nfunc onDisappear(perform: (() -> Void)?) -> View\nfunc onDrag(() -> NSItemProvider) -> View\nfunc onDrag<V>(() -> NSItemProvider, preview: () -> V) -> View\nfunc onDrop(of: [UTType], delegate: DropDelegate) -> View\nfunc onDrop(of: [String], delegate: DropDelegate) -> View\nfunc onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> View\nfunc onDrop(of: [UTType], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> View\nfunc onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider], CGPoint) -> Bool) -> View\nfunc onDrop(of: [String], isTargeted: Binding<Bool>?, perform: ([NSItemProvider]) -> Bool) -> View\nfunc onHover(perform: (Bool) -> Void) -> View\nfunc onKeyPress(KeyEquivalent, action: () -> KeyPress.Result) -> View\nfunc onKeyPress(KeyEquivalent, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onKeyPress(characters: CharacterSet, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onKeyPress(keys: Set<KeyEquivalent>, phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onKeyPress(phases: KeyPress.Phases, action: (KeyPress) -> KeyPress.Result) -> View\nfunc onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, perform: () -> Void, onPressingChanged: ((Bool) -> Void)?) -> View\nfunc onLongPressGesture(minimumDuration: Double, maximumDistance: CGFloat, pressing: ((Bool) -> Void)?, perform: () -> Void) -> View\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, (MapCameraUpdateContext) -> Void) -> View\nfunc onMapCameraChange(frequency: MapCameraUpdateFrequency, () -> Void) -> View\nfunc onOpenURL(perform: (URL) -> ()) -> View\nfunc onPreferenceChange<K>(K.Type, perform: (K.Value) -> Void) -> View\nfunc onReceive<P>(P, perform: (P.Output) -> Void) -> View\nfunc onSubmit(of: SubmitTriggers, (() -> Void)) -> View\nfunc onTapGesture(count: Int, coordinateSpace: CoordinateSpace, perform: (CGPoint) -> Void) -> View\nfunc onTapGesture(count: Int, perform: () -> Void) -> View\nfunc opacity(Double) -> View\nfunc ornament<Content>(visibility: Visibility, attachmentAnchor: OrnamentAttachmentAnchor, contentAlignment: Alignment, ornament: () -> Content) -> View\nfunc overlay<Overlay>(Overlay, alignment: Alignment) -> View\nfunc overlay<S>(S, ignoresSafeAreaEdges: Edge.Set) -> View\nfunc overlay<S, T>(S, in: T, fillStyle: FillStyle) -> View\nfunc overlay<V>(alignment: Alignment, content: () -> V) -> View\nfunc overlayPreferenceValue<Key, T>(Key.Type, (Key.Value) -> T) -> View\nfunc overlayPreferenceValue<K, V>(K.Type, alignment: Alignment, (K.Value) -> V) -> View\nfunc padding(CGFloat) -> View\nfunc padding(EdgeInsets) -> View\nfunc padding(Edge.Set, CGFloat?) -> View\nfunc padding3D(CGFloat) -> View\nfunc padding3D(EdgeInsets3D) -> View\nfunc padding3D(Edge3D.Set, CGFloat?) -> View\nfunc paletteSelectionEffect(PaletteSelectionEffect) -> View\nfunc persistentSystemOverlays(Visibility) -> View\nfunc perspectiveRotationEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> View\nfunc phaseAnimator<Phase>(some Sequence, content: (PlaceholderContentView<MapSelectableContentView<SelectionValue, Content>>, Phase) -> some View, animation: (Phase) -> Animation?) -> View\nfunc phaseAnimator<Phase>(some Sequence, trigger: some Equatable, content: (PlaceholderContentView<MapSelectableContentView<SelectionValue, Content>>, Phase) -> some View, animation: (Phase) -> Animation?) -> View\nfunc pickerStyle<S>(S) -> View\nfunc popover<Content>(isPresented: Binding<Bool>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: () -> Content) -> View\nfunc popover<Item, Content>(item: Binding<Item?>, attachmentAnchor: PopoverAttachmentAnchor, arrowEdge: Edge, content: (Item) -> Content) -> View\nfunc position(CGPoint) -> View\nfunc position(x: CGFloat, y: CGFloat) -> View\nfunc preference<K>(key: K.Type, value: K.Value) -> View\nfunc preferredColorScheme(ColorScheme?) -> View\nfunc preferredSurroundingsEffect(SurroundingsEffect?) -> View\nfunc presentationBackground<S>(S) -> View\nfunc presentationBackground<V>(alignment: Alignment, content: () -> V) -> View\nfunc presentationBackgroundInteraction(PresentationBackgroundInteraction) -> View\nfunc presentationCompactAdaptation(PresentationAdaptation) -> View\nfunc presentationCompactAdaptation(horizontal: PresentationAdaptation, vertical: PresentationAdaptation) -> View\nfunc presentationContentInteraction(PresentationContentInteraction) -> View\nfunc presentationCornerRadius(CGFloat?) -> View\nfunc presentationDetents(Set<PresentationDetent>) -> View\nfunc presentationDetents(Set<PresentationDetent>, selection: Binding<PresentationDetent>) -> View\nfunc presentationDragIndicator(Visibility) -> View\nfunc previewContext<C>(C) -> View\nfunc previewDevice(PreviewDevice?) -> View\nfunc previewDisplayName(String?) -> View\nfunc previewInterfaceOrientation(InterfaceOrientation) -> View\nfunc previewLayout(PreviewLayout) -> View\nfunc privacySensitive(Bool) -> View\nfunc progressViewStyle<S>(S) -> View\nfunc projectionEffect(ProjectionTransform) -> View\nfunc redacted(reason: RedactionReasons) -> View\nfunc refreshable(action: () -> Void) -> View\nfunc renameAction(FocusState<Bool>.Binding) -> View\nfunc renameAction(() -> Void) -> View\nfunc replaceDisabled(Bool) -> View\nfunc rotation3DEffect(Rotation3D, anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: RotationAxis3D, anchor: UnitPoint3D) -> View\nfunc rotation3DEffect(Angle, axis: (x: CGFloat, y: CGFloat, z: CGFloat), anchor: UnitPoint, anchorZ: CGFloat, perspective: CGFloat) -> View\nfunc rotationEffect(Angle, anchor: UnitPoint) -> View\nfunc safeAreaInset<V>(edge: VerticalEdge, alignment: HorizontalAlignment, spacing: CGFloat?, content: () -> V) -> View\nfunc safeAreaInset<V>(edge: HorizontalEdge, alignment: VerticalAlignment, spacing: CGFloat?, content: () -> V) -> View\nfunc safeAreaPadding(CGFloat) -> View\nfunc safeAreaPadding(EdgeInsets) -> View\nfunc safeAreaPadding(Edge.Set, CGFloat?) -> View\nfunc saturation(Double) -> View\nfunc scaleEffect(CGFloat, anchor: UnitPoint) -> View\nfunc scaleEffect(CGSize, anchor: UnitPoint) -> View\nfunc scaleEffect(CGFloat, anchor: UnitPoint) -> ModifiedContent<MapSelectableContentView<SelectionValue, Content>, _UniformScaleEffect>\nfunc scaleEffect(CGFloat, anchor: UnitPoint3D) -> View\nfunc scaleEffect(Size3D, anchor: UnitPoint3D) -> View\nfunc scaleEffect(x: CGFloat, y: CGFloat, anchor: UnitPoint) -> View\nfunc scaleEffect(x: CGFloat, y: CGFloat, z: CGFloat, anchor: UnitPoint3D) -> View\nfunc scaledToFill() -> View\nfunc scaledToFit() -> View\nfunc scenePadding(Edge.Set) -> View\nfunc scenePadding(ScenePadding, edges: Edge.Set) -> View\nfunc scrollBounceBehavior(ScrollBounceBehavior, axes: Axis.Set) -> View\nfunc scrollClipDisabled(Bool) -> View\nfunc scrollContentBackground(Visibility) -> View\nfunc scrollDisabled(Bool) -> View\nfunc scrollDismissesKeyboard(ScrollDismissesKeyboardMode) -> View\nfunc scrollIndicators(ScrollIndicatorVisibility, axes: Axis.Set) -> View\nfunc scrollIndicatorsFlash(onAppear: Bool) -> View\nfunc scrollIndicatorsFlash(trigger: some Equatable) -> View\nfunc scrollPosition(id: Binding<(some Hashable)?>, anchor: UnitPoint?) -> View\nfunc scrollTargetBehavior(some ScrollTargetBehavior) -> View\nfunc scrollTargetLayout(isEnabled: Bool) -> View\nfunc scrollTransition(ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> View\nfunc scrollTransition(topLeading: ScrollTransitionConfiguration, bottomTrailing: ScrollTransitionConfiguration, axis: Axis?, transition: (EmptyVisualEffect, ScrollTransitionPhase) -> some VisualEffect) -> View\nfunc searchCompletion(String) -> View\nfunc searchDictationBehavior(TextInputDictationBehavior) -> View\nfunc searchPresentationToolbarBehavior(SearchPresentationToolbarBehavior) -> View\nfunc searchScopes<V, S>(Binding<V>, activation: SearchScopeActivation, () -> S) -> View\nfunc searchScopes<V, S>(Binding<V>, scopes: () -> S) -> View\nfunc searchSuggestions<S>(() -> S) -> View\nfunc searchSuggestions(Visibility, for: SearchSuggestionsPlacement.Set) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable<C>(text: Binding<String>, editableTokens: Binding<C>, placement: SearchFieldPlacement, prompt: some StringProtocol, token: (Binding<C.Element>) -> some View) -> View\nfunc searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> View\nfunc searchable(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?) -> View\nfunc searchable<S>(text: Binding<String>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S) -> View\nfunc searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey) -> View\nfunc searchable(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?) -> View\nfunc searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S) -> View\nfunc searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, suggestions: () -> S) -> View\nfunc searchable<S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: Text?, suggestions: () -> S) -> View\nfunc searchable<V, S>(text: Binding<String>, placement: SearchFieldPlacement, prompt: S, suggestions: () -> V) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> View\nfunc searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> View\nfunc searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> View\nfunc searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, isPresented: Binding<Bool>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: LocalizedStringKey, token: (C.Element) -> T) -> View\nfunc searchable<C, T>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: Text?, token: (C.Element) -> T) -> View\nfunc searchable<C, T, S>(text: Binding<String>, tokens: Binding<C>, suggestedTokens: Binding<C>, placement: SearchFieldPlacement, prompt: S, token: (C.Element) -> T) -> View\nfunc selectionDisabled(Bool) -> View\nfunc sensoryFeedback<T>(SensoryFeedback, trigger: T) -> View\nfunc sensoryFeedback<T>(SensoryFeedback, trigger: T, condition: (T, T) -> Bool) -> View\nfunc sensoryFeedback<T>(trigger: T, (T, T) -> SensoryFeedback?) -> View\nfunc shadow(color: Color, radius: CGFloat, x: CGFloat, y: CGFloat) -> View\nfunc sheet<Content>(isPresented: Binding<Bool>, onDismiss: (() -> Void)?, content: () -> Content) -> View\nfunc sheet<Item, Content>(item: Binding<Item?>, onDismiss: (() -> Void)?, content: (Item) -> Content) -> View\nfunc simultaneousGesture<T>(T, including: GestureMask) -> View\nfunc speechAdjustedPitch(Double) -> View\nfunc speechAlwaysIncludesPunctuation(Bool) -> View\nfunc speechAnnouncementsQueued(Bool) -> View\nfunc speechSpellsOutCharacters(Bool) -> View\nfunc springLoadingBehavior(SpringLoadingBehavior) -> View\nfunc statusBar(hidden: Bool) -> View\nfunc statusBarHidden(Bool) -> View\nfunc strikethrough(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> View\nfunc submitLabel(SubmitLabel) -> View\nfunc submitScope(Bool) -> View\nfunc swipeActions<T>(edge: HorizontalEdge, allowsFullSwipe: Bool, content: () -> T) -> View\nfunc symbolEffect<T>(T, options: SymbolEffectOptions, isActive: Bool) -> View\nfunc symbolEffect<T, U>(T, options: SymbolEffectOptions, value: U) -> View\nfunc symbolEffectsRemoved(Bool) -> View\nfunc symbolRenderingMode(SymbolRenderingMode?) -> View\nfunc symbolVariant(SymbolVariants) -> View\nfunc tabItem<V>(() -> V) -> View\nfunc tabViewStyle<S>(S) -> View\nfunc tableColumnHeaders(Visibility) -> View\nfunc tableStyle<S>(S) -> View\nfunc tag<V>(V) -> View\nfunc task<T>(id: T, priority: TaskPriority, () -> Void) -> View\nfunc task(priority: TaskPriority, () -> Void) -> View\nfunc textCase(Text.Case?) -> View\nfunc textContentType(UITextContentType?) -> View\nfunc textEditorStyle(some TextEditorStyle) -> View\nfunc textFieldStyle<S>(S) -> View\nfunc textInputAutocapitalization(TextInputAutocapitalization?) -> View\nfunc textScale(Text.Scale, isEnabled: Bool) -> View\nfunc textSelection<S>(S) -> View\nfunc tint(Color?) -> View\nfunc toggleStyle<S>(S) -> View\nfunc toolbar(Visibility, for: ToolbarPlacement...) -> View\nfunc toolbar<Content>(content: () -> Content) -> View\nfunc toolbar<Content>(content: () -> Content) -> View\nfunc toolbar<Content>(id: String, content: () -> Content) -> View\nfunc toolbar(removing: ToolbarDefaultItemKind?) -> View\nfunc toolbarBackground(Visibility, for: ToolbarPlacement...) -> View\nfunc toolbarColorScheme(ColorScheme?, for: ToolbarPlacement...) -> View\nfunc toolbarRole(ToolbarRole) -> View\nfunc toolbarTitleDisplayMode(ToolbarTitleDisplayMode) -> View\nfunc toolbarTitleMenu<C>(content: () -> C) -> View\nfunc tracking(CGFloat) -> View\nfunc transaction((inout Transaction) -> Void) -> View\nfunc transaction<V>((inout Transaction) -> Void, body: (PlaceholderContentView<MapSelectableContentView<SelectionValue, Content>>) -> V) -> View\nfunc transaction(value: some Equatable, (inout Transaction) -> Void) -> View\nfunc transform3DEffect(AffineTransform3D) -> View\nfunc transformAnchorPreference<A, K>(key: K.Type, value: Anchor<A>.Source, transform: (inout K.Value, Anchor<A>) -> Void) -> View\nfunc transformEffect(CGAffineTransform) -> View\nfunc transformEnvironment<V>(WritableKeyPath<EnvironmentValues, V>, transform: (inout V) -> Void) -> View\nfunc transformPreference<K>(K.Type, (inout K.Value) -> Void) -> View\nfunc transition(AnyTransition) -> View\nfunc truncationMode(Text.TruncationMode) -> View\nfunc typeSelectEquivalent(LocalizedStringKey) -> View\nfunc typeSelectEquivalent(Text?) -> View\nfunc typeSelectEquivalent<S>(S) -> View\nfunc typesettingLanguage(Locale.Language, isEnabled: Bool) -> View\nfunc typesettingLanguage(TypesettingLanguage, isEnabled: Bool) -> View\nfunc underline(Bool, pattern: Text.LineStyle.Pattern, color: Color?) -> View\nfunc unredacted() -> View\nfunc upperLimbVisibility(Visibility) -> View\nfunc userActivity<P>(String, element: P?, (P, NSUserActivity) -> ()) -> View\nfunc userActivity(String, isActive: Bool, (NSUserActivity) -> ()) -> View\nfunc visualEffect((EmptyVisualEffect, GeometryProxy) -> some VisualEffect) -> View\nfunc visualEffect3D((EmptyVisualEffect, GeometryProxy3D) -> some VisualEffect) -> View\nfunc zIndex(Double) -> View\nRelationships\nConforms To\nView"
  },
  {
    "title": "MapKit for AppKit and UIKit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_appkit_and_uikit",
    "html": "Topics\nEssentials\nEnabling Maps capability in Xcode\nConfigure your routing app to support providing directions.\nclass MKMapView\nAn embeddable map interface, similar to the one that the Maps app provides.\nclass MKMapItem\nA point of interest on the map.\nMap coordinates\nstruct MKCoordinateRegion\nA rectangular geographic region that centers around a specific latitude and longitude.\nstruct MKCoordinateSpan\nThe width and height of a map region.\nstruct MKMapRect\nA rectangular area on a two-dimensional map projection.\nstruct MKMapPoint\nA point on a two-dimensional map projection.\nstruct MKMapSize\nWidth and height information on a two-dimensional map projection.\nclass MKDistanceFormatter\nA utility object that converts between a geographic distance and a string-based expression of that distance.\nMap customization\nclass MKMapCamera\nA virtual camera for defining the appearance of the map.\nclass MKCompassButton\nA specialized view that displays the compass heading for its associated map.\nclass MKScaleView\nA specialized view that displays the scale information for its associated map.\nclass MKZoomControl\nA specialized view that displays and controls the zoom level of the map view.\nclass MKPitchControl\nA specialized view that displays and controls the pitch angle of the map view.\nclass MKUserTrackingButton\nA specialized button that allows the user to toggle whether the map tracks to the heading the user is facing.\nclass MKUserTrackingBarButtonItem\nA specialized bar button item that allows the user to toggle whether the map tracks to the heading the user is facing.\nAnnotations and overlays\nMapKit annotations\nCreate annotations to add indicators and additional details for specific locations on a map.\nMapKit overlays\nCreate overlays to highlight geographic regions or paths.\nDirections\nclass MKDirections\nA utility object that computes directions and travel-time information based on the route information you provide.\nclass MKDirections.Request\nThe start and end points of a route, along with the planned mode of transportation.\nclass MKDirections.Response\nThe route information that Apple servers return in response to your request for directions.\nclass MKDirections.ETAResponse\nThe travel-time information that Apple servers return.\nclass MKRoute\nA single route between a requested start and end point.\nclass MKRoute.Step\nOne portion of an overall route.\nGeographical features\nDisplaying an Indoor Map\nUse the Indoor Mapping Data Format (IMDF) to show an indoor map with custom overlays and points of interest.\nclass MKGeoJSONDecoder\nAn object that decodes GeoJSON objects into MapKit types.\nclass MKGeoJSONFeature\nThe decoded representation of a GeoJSON feature.\nprotocol MKGeoJSONObject\nObjects that the GeoJSON decoder can return.\nLocal search\nInteracting with nearby points of interest\nProvide automatic search completions based on a user’s partial search query, search the map for relevant locations nearby, and retrieve details for selected points of interest.\nclass MKLocalSearch\nA utility object for initiating map-based searches and processing the results.\nclass MKLocalPointsOfInterestRequest\nA structured request to use when searching for points of interest.\nstruct MKLocalSearch.ResultType\nOptions that indicate types of search results.\nclass MKLocalSearchCompleter\nA utility object for generating a list of completion strings based on a partial search string that you provide.\nstruct MKLocalSearchCompleter.ResultType\nOptions that indicate types of search completions.\nclass MKLocalSearchCompletion\nA fully formed string that completes a partial string.\nExploring at street level\nExplore a location with a highly detailed map and Look Around\nDisplay a richly detailed map, and use Look Around to experience an interactive view of landmarks.\nclass MKLookAroundScene\nA utility class that encapsulates information the framework requires to retrieve and display a specific Look Around location’s imagery.\nclass MKLookAroundSceneRequest\nA class you use to request a LookAround scene at the location you specify.\nclass MKLookAroundViewController\nA class that manages the presentation and display of a LookAround view.\nclass MKLookAroundSnapshotter\nA utility class that you use to create a static image from a LookAround scene.\nPoints of interest\nOptimizing Map Views with Filtering and Camera Constraints\nDisplay a map that is relevant to the user by filtering points of interest and search results, and constraining the visible region.\nclass MKMapFeatureAnnotation\nA class that describes an annotation element on the map’s display such as a point of interest, territorial boundary, or physical feature.\nstruct MKMapFeatureOptions\nA structure you use to tell the map which kinds of features users can interact with.\nclass MKMapItemRequest\nA utility class you use to request additional information about a map feature.\nclass MKIconStyle\nA class you use to customize the annotation view icon of a point of interest (POI) on the map.\nclass MKPointOfInterestFilter\nA filter that includes or excludes point of interest categories from a map view, local search, or local search completer.\nstruct MKPointOfInterestCategory\nPoint of interest categories.\nStatic map snapshots\nclass MKMapSnapshotter\nA utility class for capturing a map and its content into an image.\nclass MKMapSnapshotter.Snapshot\nAn image that a snapshotter object generates.\nErrors\nlet MKErrorDomain: String\nThe error domain for MapKit.\nstruct MKError\nError constants for the MapKit framework.\nDeprecated\nDeprecated Symbols\nMapKit classes, protocols, and entitlements that are no longer supported.\nSee Also\nThe MapKit APIs\nMapKit for SwiftUI"
  },
  {
    "title": "MapKit for SwiftUI | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapkit_for_swiftui",
    "html": "Overview\n\nMapKit for SwiftUI allows you to build map-centric views and apps across Apple platforms. You can design expressive and highly interactive Maps with minimal code by composing views, using ViewBuilders and view modifiers.\n\nLike MapKit for AppKit and UIKit, MapKit for SwiftUI allows you to take advantage of map styles ranging from satellite imagery to rich, 3D perspective imagery to present vivid maps. Using MapContentBuilder you can configure your maps to show Marker and Annotation views, or — for more specialized content — you can design your own SwiftUI views to place on the map. To add even more interactivity, MapKit for SwiftUI supports overlays to highlight areas on the map, enabling you to animate paths and directions using MapPolyline, or make it easy for people to dig deeper into on the ground details with tappable points of interest. People who use you app can also explore at street level using Look Around previews and Look Around views.\n\nTopics\nEssentials\nstruct Map\nA view that displays an embedded map interface.\nstruct MapStyle\nA style that you can apply to a map.\nAnnotations and overlays\nstruct Annotation\nA customizable annotation used to indicate a location on a map.\nstruct MapCircle\nA circular overlay with a configurable radius that you center on a geographic coordinate.\nstruct MapPolygon\nA closed polygon overlay.\nstruct MapPolyline\nAn open polygon overlay consisting of one or more connected line segments.\nstruct Marker\nA balloon-shaped annotation that marks a map location.\nstruct UserAnnotation\nDisplays the person’s current location on the map.\nMap Controls\nstruct MapCompass\nA view that reflects the current orientation of the associated map.\nstruct MapLocationCompass\nA view that displays a combined user location button and map compass.\nstruct MapPitchSlider\nA slider control that allows a person to change the pitch of the map.\nstruct MapPitchToggle\nA button that sets the pitch of the associated map.\nstruct MapScaleView\nDisplays a legend with distance information for the associated map.\nstruct MapUserLocationButton\nA button that sets the framing of the associated map to the user location.\nstruct MapZoomStepper\nButtons a person uses to adjust the zoom level of the map.\nExploring at street level\nstruct LookAroundPreview\nA view that provides a Look Around preview for a specific geographic location.\nMap features\nstruct MapFeature\nA tappable map feature.\nMap customization\nstruct MapCamera\nDefines a virtual viewpoint above the map surface.\nstruct MapCameraBounds\nDefines an optional boundary of an area within which the map’s center needs to remain.\nstruct MapCameraPosition\nA structure that describes how to position the map’s camera within the map.\nstruct MapCameraUpdateContext\nA structure that defines additional information about the map camera.\nstruct MapCameraUpdateFrequency\nA structure that describes when the map camera updates.\nPoints of interest\nstruct PointOfInterestCategories\nA structure you use to define points of interest to include or exclude on a map.\nProtocols\nprotocol DynamicMapContent\nA  type of view that generates views from an underlying collection of data.\nprotocol MapContent\nA protocol used to construct map content such as controls, markers, and annotations.\nstruct MapContentBuilder\nA result builder that creates map content from closures you provide.\nstruct MapContentView\nA view that contains content that displays on a map at a specific position, and that responds to specific interactions you specify.\nStructures\nstruct DefaultUserAnnotationContent\nA structure that represents the view to show at the user’s location on the map.\nstruct EmptyMapContent\nA map content element that doesn’t contain any content.\nstruct MapProxy\nA proxy for accessing sizing information about a given map view.\nstruct MapReader\nA container view that defines its contents as a function of information about the first contained map.\nstruct TupleMapContent\nA view created from a Swift tuple of map content values.\nSee Also\nThe MapKit APIs\nMapKit for AppKit and UIKit"
  },
  {
    "title": "MapSelectable | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit/mapselectable",
    "html": "Topics\nInitializers\ninit(MapFeature?)\n\nRequired\n\nInstance Properties\nvar feature: MapFeature?\n\nRequired\n\nRelationships\nInherits From\nHashable\nConforming Types\nNever"
  },
  {
    "title": "MapKit | Apple Developer Documentation",
    "url": "https://developer.apple.com/documentation/mapkit",
    "html": "Overview\n\nUse MapKit to give your app a sense of place with maps and location information. You can use the MapKit framework to:\n\nEmbed maps directly into your app’s windows and views.\n\nAdd annotations and overlays to a map to call out points of interest.\n\nAdd LookAround capabilities to enable users to explore locations at street level.\n\nRespond to user interactions with well known points of interest, geographical features, and boundaries.\n\nProvide text completion to make it easy for users to search for a destination or point of interest.\n\nTopics\nThe MapKit APIs\nMapKit for AppKit and UIKit\nMapKit for SwiftUI\nStructures\nstruct MapSelectableContentView\nProtocols\nprotocol MapSelectable\nSee Also\nRelated Documentation\nLocation and Maps Programming Guide\nMapKit JS\nEmbed interactive Apple Maps on your website, annotate points of interest, and perform georelated searches.\nApple Maps Server API\nReduce API calls and conserve device power by streamlining your app’s georelated searches."
  }
]
